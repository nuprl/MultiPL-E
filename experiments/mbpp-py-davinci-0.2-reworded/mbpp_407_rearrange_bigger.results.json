{
  "name": "mbpp_407_rearrange_bigger",
  "language": "py",
  "prompt": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_407_rearrange_bigger.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    if i == 1 and n_str[i] <= n_str[i - 1]:\n        return -1\n    x = n_str[i - 1]\n    smallest = i\n    for j in range(i + 1, n_len):\n        if n_str[j] > x and n_str[j] < n_str[smallest]:\n            smallest = j\n    n_str = n_str[:i - 1] + n_str[smallest] + ''.join(sorted(n_str[i - 1:smallest] + n_str[smallest + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5y3vxb_e.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp5y3vxb_e.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5y3vxb_e.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert number to list of digits\n    digits = [int(d) for d in str(n)]\n    # find the first digit that is smaller than the digit on its right\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i - 1] < digits[i]:\n            break\n    else:\n        return -1\n    # find the smallest digit that is larger than digits[i - 1]\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    # swap the two digits\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    # reverse the digits after i\n    digits[i:] = digits[len(digits) - 1: i - 1: -1]\n    return int(''.join(map(str, digits)))\n\nprint(rearrange_bigger(123))\nprint(rearrange_bigger(1234))\nprint(rearrange_bigger(1243))\nprint(rearrange_bigger(1230))\nprint(rearrange_bigger(1235))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_bigger(12354))\nprint(rearrange_\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "  File \"/tmp/tmp2f13i6xe.py\", line 47\n    print(rearrange_\n         ^\nSyntaxError: '(' was never closed\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5d5as7d_.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp5d5as7d_.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5d5as7d_.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 2, -1, -1):\n        if digits[i] < digits[i + 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i, -1):\n        if digits[j] > digits[i]:\n            digits[i], digits[j] = digits[j], digits[i]\n            break\n    digits[i + 1:] = reversed(digits[i + 1:])\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0uhmzadi.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmp0uhmzadi.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp0uhmzadi.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n\n    digits = [int(d) for d in str(n)]\n    i = len(digits) - 1\n    while i > 0 and digits[i] <= digits[i - 1]:\n        i -= 1\n    if i == 0:\n        return -1\n\n    j = len(digits) - 1\n    while digits[j] <= digits[i - 1]:\n        j -= 1\n\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[len(digits) - 1: i - 1: -1]\n\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpx25t60wq.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpx25t60wq.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpx25t60wq.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(i) for i in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join([str(i) for i in digits]))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplgdqa0s8.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmplgdqa0s8.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmplgdqa0s8.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 2, -1, -1):\n        if n_str[i] < n_str[i + 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = n_str[:i] + n_str[j] + ''.join(sorted(n_str[i:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph9l0tkq9.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmph9l0tkq9.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmph9l0tkq9.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = ''.join(n_list)\n    if n_str == n_list:\n        return -1\n    else:\n        return int(n_list)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvgal8u2p.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpvgal8u2p.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpvgal8u2p.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_list = [int(x) for x in str(n)]\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            num_list[i], num_list[i - 1] = num_list[i - 1], num_list[i]\n            break\n    else:\n        return -1\n    return int(\"\".join([str(x) for x in num_list]))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe__fgoo_.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpe__fgoo_.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe__fgoo_.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(i) for i in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprjbds5lq.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmprjbds5lq.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmprjbds5lq.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = list(n_str)\n    n_str[i - 1], n_str[j] = n_str[j], n_str[i - 1]\n    n_str[i:] = n_str[i:][::-1]\n    return int(\"\".join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvgc54pu8.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpvgc54pu8.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpvgc54pu8.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(str(x) for x in digits))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg_19gyws.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpg_19gyws.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg_19gyws.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = [int(i) for i in n_list]\n    n_list = [str(i) for i in n_list]\n    n_str = ''.join(n_list)\n    n_str = int(n_str)\n    return n_str\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphqj_qpog.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmphqj_qpog.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmphqj_qpog.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = ''.join(n_list)\n    if n_str == n_list:\n        return -1\n    else:\n        return int(n_list)\n\nprint(rearrange_bigger(123))\nprint(rearrange_bigger(321))\nprint(rearrange_bigger(531))\nprint(rearrange_bigger(56789))\nprint(rearrange_bigger(98765))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "321\n-1\n-1\n98765\n-1\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdq6tk_7p.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpdq6tk_7p.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdq6tk_7p.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n_str) - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = list(n_str)\n    n_str[i], n_str[j] = n_str[j], n_str[i]\n    n_str[i + 1:] = reversed(n_str[i + 1:])\n    return int(''.join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpau_d8wwm.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpau_d8wwm.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpau_d8wwm.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n_str) - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = list(n_str)\n    n_str[i], n_str[j] = n_str[j], n_str[i]\n    n_str[i + 1:] = reversed(n_str[i + 1:])\n    return int(''.join(n_str))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk23k0e1k.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpk23k0e1k.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpk23k0e1k.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num = list(str(n))\n    for i in range(len(num)-1, 0, -1):\n        if num[i] > num[i-1]:\n            num[i], num[i-1] = num[i-1], num[i]\n            return int(\"\".join(num))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1b0mh3iy.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1b0mh3iy.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp1b0mh3iy.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl6gew5g5.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpl6gew5g5.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpl6gew5g5.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(str(x) for x in digits))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp16093euq.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp16093euq.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp16093euq.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n = list(str(n))\n    i = len(n) - 1\n    while i > 0 and n[i] <= n[i - 1]:\n        i -= 1\n    if i == 0:\n        return -1\n    j = i\n    while j < len(n) and n[j] > n[i - 1]:\n        j += 1\n    n[i - 1], n[j - 1] = n[j - 1], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpkd9968f4.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpkd9968f4.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpkd9968f4.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort(reverse=True)\n    num_list = [int(i) for i in num_list]\n    return num_list\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj1tsymot.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpj1tsymot.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpj1tsymot.py\", line 15, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpml37vt40.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpml37vt40.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpml37vt40.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_list = [int(i) for i in str(n)]\n    n_list.sort(reverse=True)\n    return int(''.join([str(i) for i in n_list]))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw6i_kkhd.py\", line 19, in <module>\n    test_check()\n  File \"/tmp/tmpw6i_kkhd.py\", line 17, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpw6i_kkhd.py\", line 13, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi6r1ot3m.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpi6r1ot3m.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpi6r1ot3m.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-2, -1, -1):\n        if n[i] < n[i+1]:\n            break\n    else:\n        return -1\n    for j in range(len(n)-1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i+1:] = n[i+1:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0b0lv2jn.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp0b0lv2jn.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp0b0lv2jn.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = list(map(int, n_list))\n    n_list_str = list(map(str, n_list))\n    n_str = \"\".join(n_list_str)\n    n_int = int(n_str)\n    return n_int\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpik50pqwt.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpik50pqwt.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpik50pqwt.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n)-1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i+1:] = reversed(n[i+1:])\n    return int(\"\".join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzlezcwhd.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpzlezcwhd.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzlezcwhd.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwrvuubpu.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwrvuubpu.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwrvuubpu.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            n = n[:i - 1] + n[i] + n[i - 1] + n[i + 1:]\n            n = n[:i] + ''.join(sorted(n[i:]))\n            return int(n)\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpaqa6w6mq.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpaqa6w6mq.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpaqa6w6mq.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    n_int = int(n_str)\n    return n_int\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp47jancby.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp47jancby.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp47jancby.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsihcoqgm.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpsihcoqgm.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpsihcoqgm.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1: i - 1: -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp54nh26bu.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp54nh26bu.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp54nh26bu.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(i) for i in str(n)]\n    i = len(digits) - 1\n    while i > 0 and digits[i] <= digits[i - 1]:\n        i -= 1\n    if i == 0:\n        return -1\n    j = len(digits) - 1\n    while digits[j] <= digits[i - 1]:\n        j -= 1\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[len(digits) - 1 : i - 1 : -1]\n    return int(\"\".join([str(i) for i in digits]))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmps21rowxe.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmps21rowxe.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmps21rowxe.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            t = s[i:]\n            m = min(filter(lambda x: x > s[i - 1], t))\n            t.remove(m)\n            t.sort()\n            s = s[:i - 1] + [m] + t\n            return int(\"\".join(s))\n    return -1\n\nprint(rearrange_bigger(12))\nprint(rearrange_bigger(513))\nprint(rearrange_bigger(2017))\nprint(rearrange_bigger(9))\nprint(rearrange_bigger(111))\nprint(rearrange_bigger(531))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "2\n53\n207\n-1\n-1\n-1\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5wes9ucb.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp5wes9ucb.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5wes9ucb.py\", line 25, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1: i - 1: -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp54nh26bu.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp54nh26bu.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp54nh26bu.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyavhuqsw.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpyavhuqsw.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpyavhuqsw.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    for i in range(len(num_str) - 1, 0, -1):\n        if num_str[i] > num_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(num_str) - 1, i - 1, -1):\n        if num_str[j] > num_str[i - 1]:\n            break\n    num_str = num_str[:i - 1] + num_str[j] + ''.join(sorted(num_str[i - 1:j] + num_str[j + 1:]))\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpn31zh709.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpn31zh709.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpn31zh709.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp60tkk8lr.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp60tkk8lr.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp60tkk8lr.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpml37vt40.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpml37vt40.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpml37vt40.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # Convert the number to a list of digits\n    digits = list(map(int, str(n)))\n    # Find the first index from the right where the digit is smaller than the digit to its right\n    i = len(digits) - 2\n    while i >= 0 and digits[i] >= digits[i + 1]:\n        i -= 1\n    # If no such index exists, the digits are in descending order, so there is no bigger number\n    if i == -1:\n        return -1\n    # Find the smallest digit to the right of i that is greater than digits[i]\n    j = len(digits) - 1\n    while digits[j] <= digits[i]:\n        j -= 1\n    # Swap the digits at indices i and j\n    digits[i], digits[j] = digits[j], digits[i]\n    # Reverse the digits to the right of i\n    digits[i + 1:] = reversed(digits[i + 1:])\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3oqzo1kd.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp3oqzo1kd.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp3oqzo1kd.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = str(n)\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    s = s[:i - 1] + s[j] + ''.join(sorted(s[i - 1:j] + s[j + 1:]))\n    return int(s)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3s6atskh.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp3s6atskh.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp3s6atskh.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n)-1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i+1:] = reversed(n[i+1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8xcwn69c.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp8xcwn69c.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp8xcwn69c.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_list = [int(i) for i in n_list]\n    n_list = [str(i) for i in n_list]\n    n_str = ''.join(n_list)\n    n_int = int(n_str)\n    return n_int\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpaqsn90ay.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpaqsn90ay.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpaqsn90ay.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_list = list(str(n))\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(num_list) - 1, i - 1, -1):\n        if num_list[j] > num_list[i - 1]:\n            num_list[i - 1], num_list[j] = num_list[j], num_list[i - 1]\n            break\n    num_list[i:] = num_list[i:][::-1]\n    return int(''.join(num_list))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfz574if4.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpfz574if4.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpfz574if4.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg4byk6gi.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpg4byk6gi.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg4byk6gi.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # Convert to string, sort in descending order, join, convert back to int\n    return int(\"\".join(sorted(str(n), reverse=True)))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1emmj4pp.py\", line 18, in <module>\n    test_check()\n  File \"/tmp/tmp1emmj4pp.py\", line 16, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp1emmj4pp.py\", line 12, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n_str) - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = n_str[:i] + n_str[j] + ''.join(sorted(n_str[i:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmqcgqhda.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpmqcgqhda.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpmqcgqhda.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1: i - 1: -1]\n    return int(''.join(n))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqxe9d1os.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpqxe9d1os.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpqxe9d1os.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(\"\".join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmptia8_sqc.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmptia8_sqc.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmptia8_sqc.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # Convert to string\n    s = str(n)\n    # Find the first decreasing digit\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    # Find the smallest digit greater than s[i - 1]\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    # Swap s[i - 1] and s[j]\n    s = s[:i - 1] + s[j] + s[i:j] + s[i - 1] + s[j + 1:]\n    # Sort the digits after s[i - 1]\n    s = s[:i] + ''.join(sorted(s[i:]))\n    return int(s)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2bp2pkz_.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmp2bp2pkz_.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp2bp2pkz_.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg4byk6gi.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpg4byk6gi.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg4byk6gi.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s)-1, 0, -1):\n        if s[i] > s[i-1]:\n            t = s[i:]\n            m = min(filter(lambda x: x>s[i-1], t))\n            t.remove(m)\n            t.sort()\n            s = s[:i-1] + [m] + t\n            return int(\"\".join(s))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdfnctxus.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpdfnctxus.py\", line 24, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdfnctxus.py\", line 19, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n_str = str(n)\n    n_list = list(n_str)\n    for i in range(len(n_list) - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            break\n    if i == 1 and n_list[i] <= n_list[i - 1]:\n        return -1\n    x = n_list[i - 1]\n    smallest = i\n    for j in range(i + 1, len(n_list)):\n        if n_list[j] > x and n_list[j] < n_list[smallest]:\n            smallest = j\n    n_list[smallest], n_list[i - 1] = n_list[i - 1], n_list[smallest]\n    n_list[i:] = sorted(n_list[i:])\n    return int(''.join(n_list))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjan7ds__.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpjan7ds__.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpjan7ds__.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1: i - 1: -1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7txw9d5a.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp7txw9d5a.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp7txw9d5a.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = list(str(n))\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            n[i], n[i - 1] = n[i - 1], n[i]\n            return int(\"\".join(n))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5dnt3vr2.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp5dnt3vr2.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5dnt3vr2.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj3p91ael.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpj3p91ael.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpj3p91ael.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n\n    digits = [int(d) for d in str(n)]\n    i = len(digits) - 1\n    while i > 0 and digits[i - 1] >= digits[i]:\n        i -= 1\n\n    if i == 0:\n        return -1\n\n    j = len(digits) - 1\n    while digits[j] <= digits[i - 1]:\n        j -= 1\n\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n\n    digits[i:] = digits[len(digits) - 1 : i - 1 : -1]\n\n    return int(\"\".join(map(str, digits)))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9g7_ifze.py\", line 37, in <module>\n    test_check()\n  File \"/tmp/tmp9g7_ifze.py\", line 35, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp9g7_ifze.py\", line 31, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_list = list(str(n))\n    for i in range(len(n_list) - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            n_list[i], n_list[i - 1] = n_list[i - 1], n_list[i]\n            return int(''.join(n_list))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_baal4qb.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp_baal4qb.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp_baal4qb.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_list = [int(i) for i in n_list]\n    n_list = [str(i) for i in n_list]\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4b54x_1k.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp4b54x_1k.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp4b54x_1k.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    n_str = str(n)\n    # find the first digit that is smaller than the digit to its right\n    for i in range(len(n_str) - 1):\n        if n_str[i] < n_str[i + 1]:\n            break\n    else:\n        return -1\n    # find the smallest digit to the right of the pivot that is greater than the pivot\n    pivot = n_str[i]\n    smallest = n_str[i + 1]\n    smallest_idx = i + 1\n    for j in range(i + 1, len(n_str)):\n        if n_str[j] > pivot and n_str[j] <= smallest:\n            smallest = n_str[j]\n            smallest_idx = j\n    # swap the pivot and the smallest digit\n    n_str = n_str[:i] + smallest + n_str[i + 1:smallest_idx] + pivot + n_str[smallest_idx + 1:]\n    # sort the digits to the right of the pivot in ascending order\n    n_str = n_str[:i + 1] + ''.join(sorted(n_str[i + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpijttt91k.py\", line 38, in <module>\n    test_check()\n  File \"/tmp/tmpijttt91k.py\", line 36, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpijttt91k.py\", line 32, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    n_str = str(n)\n    # get length of string\n    n_len = len(n_str)\n    # create a list of the digits\n    n_list = [int(n_str[i]) for i in range(n_len)]\n    # create a list of the indices\n    n_index = [i for i in range(n_len)]\n    # create a list of the indices sorted by the digits\n    n_index_sorted = [i[0] for i in sorted(zip(n_index, n_list), key=lambda x: x[1])]\n    # create a list of the digits sorted by the digits\n    n_list_sorted = [i[1] for i in sorted(zip(n_index, n_list), key=lambda x: x[1])]\n    # create a list of the digits sorted by the indices\n    n_list_sorted_by_index = [n_list_sorted[i] for i in n_index_sorted]\n    # create a list of the indices sorted by the indices\n    n_index_sorted_by_index = [n_index_sorted[i] for i in n_index_sorted]\n    # create a list of the indices sorted by the digits\n    n_index_sorted_by_digit = [n_index_sorted[i] for i in n_index]\n    # create a list of the digits sorted by the indices\n    n_list_sorted_by_digit = [n_list_sorted[i] for i in n_index]\n    # create a list of the digits sorted by the indices\n    n_list_sorted_by_digit_by_index = [n_list_sorted_by_digit[i] for i in n_index_sorted_by_index]\n    # create a list of the indices sorted by the digits\n    n_index_sorted_by_digit_by_index = [n_index_sorted_by_digit[i] for i in n_index_sorted_by_index]\n    # create a list of the indices sorted by the indices\n    n_index_s\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp208mdnu6.py\", line 41, in <module>\n    test_check()\n  File \"/tmp/tmp208mdnu6.py\", line 39, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp208mdnu6.py\", line 34, in check\n    assert candidate(12) == 21\n  File \"/tmp/tmp208mdnu6.py\", line 32, in rearrange_bigger\n    n_index_s\nNameError: name 'n_index_s' is not defined. Did you mean: 'n_index'?\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            t = s[i:]\n            m = min(filter(lambda x: x > s[i - 1], t))\n            t.remove(m)\n            t.sort()\n            s = s[:i - 1] + [m] + t\n            return int(\"\".join(s))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi4guyf70.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpi4guyf70.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpi4guyf70.py\", line 20, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n)-1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i+1:] = reversed(n[i+1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8xcwn69c.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp8xcwn69c.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp8xcwn69c.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    lst = [int(i) for i in str(n)]\n    for i in range(len(lst) - 1, 0, -1):\n        if lst[i] > lst[i - 1]:\n            lst[i], lst[i - 1] = lst[i - 1], lst[i]\n            return int(''.join([str(i) for i in lst]))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwzcc_890.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpwzcc_890.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwzcc_890.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n\n    n_str = list(n_str)\n    n_str[i - 1], n_str[j] = n_str[j], n_str[i - 1]\n    n_str[i:] = n_str[i:][::-1]\n    return int(''.join(n_str))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpfknszrcn.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpfknszrcn.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpfknszrcn.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    n = list(n)\n    n[i - 1], n[i] = n[i], n[i - 1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpikomqq7s.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpikomqq7s.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpikomqq7s.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert number to string\n    num_str = str(n)\n    # create a list of digits\n    num_list = [int(i) for i in num_str]\n    # find the first digit that is smaller than the digit to its right\n    for i in range(len(num_list) - 1):\n        if num_list[i] < num_list[i + 1]:\n            break\n    # if no such digit exists, return -1\n    else:\n        return -1\n    # find the smallest digit to the right of the pivot that is greater than the pivot\n    for j in range(i + 1, len(num_list)):\n        if num_list[j] > num_list[i]:\n            break\n    # swap the pivot with the smallest digit to its right\n    num_list[i], num_list[j] = num_list[j], num_list[i]\n    # reverse the digits to the right of the pivot\n    num_list[i + 1:] = num_list[i + 1:][::-1]\n    # return the new number\n    return int(''.join([str(i) for i in num_list]))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr91mjhtj.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmpr91mjhtj.py\", line 34, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpr91mjhtj.py\", line 30, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp60tkk8lr.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp60tkk8lr.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp60tkk8lr.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2, -1, -1):\n        if digits[i] < digits[i + 1]:\n            for j in range(len(digits) - 1, i, -1):\n                if digits[j] > digits[i]:\n                    digits[i], digits[j] = digits[j], digits[i]\n                    digits[i + 1:] = reversed(digits[i + 1:])\n                    return int(\"\".join(map(str, digits)))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpthzot22k.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpthzot22k.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpthzot22k.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    i = len(digits) - 2\n    while i >= 0 and digits[i] >= digits[i + 1]:\n        i -= 1\n    if i < 0:\n        return -1\n    j = len(digits) - 1\n    while digits[j] <= digits[i]:\n        j -= 1\n    digits[i], digits[j] = digits[j], digits[i]\n    digits[i + 1:] = reversed(digits[i + 1:])\n    return int(''.join(str(x) for x in digits))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplcaiu27x.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmplcaiu27x.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmplcaiu27x.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(i) for i in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join([str(i) for i in digits]))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9wty0bpw.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp9wty0bpw.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp9wty0bpw.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 2, -1, -1):\n        if n_str[i] < n_str[i + 1]:\n            break\n    else:\n        return -1\n\n    for j in range(n_len - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n\n    n_str = list(n_str)\n    n_str[i], n_str[j] = n_str[j], n_str[i]\n    n_str[i + 1:] = n_str[i + 1:][::-1]\n    return int(''.join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpufjunfnq.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpufjunfnq.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpufjunfnq.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    i = len(s) - 1\n    while i > 0 and s[i - 1] >= s[i]:\n        i -= 1\n    if i <= 0:\n        return -1\n    j = len(s) - 1\n    while s[j] <= s[i - 1]:\n        j -= 1\n    s[i - 1], s[j] = s[j], s[i - 1]\n    s[i:] = reversed(s[i:])\n    return int(\"\".join(s))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzniij14p.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpzniij14p.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzniij14p.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph63rby1h.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmph63rby1h.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmph63rby1h.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzdgwolcr.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpzdgwolcr.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzdgwolcr.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list_str = ''.join(n_list)\n    if n_str == n_list_str:\n        return -1\n    for i in range(len(n_str)):\n        for j in range(i + 1, len(n_str)):\n            if n_str[i] < n_str[j]:\n                n_str = n_str[:i] + n_str[j] + n_str[i + 1:j] + n_str[i] + n_str[j + 1:]\n                n_list = list(n_str)\n                n_list.sort(reverse=True)\n                n_list_str = ''.join(n_list)\n                return int(n_list_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe5jazqw9.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpe5jazqw9.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe5jazqw9.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # Convert number to list of digits\n    digits = [int(d) for d in str(n)]\n    # Find the first digit that is smaller than the digit to its right\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    # Find the smallest digit to the right of the pivot that is larger than the pivot\n    pivot = digits[i - 1]\n    smallest = i\n    for j in range(i + 1, len(digits)):\n        if digits[j] > pivot and digits[j] < digits[smallest]:\n            smallest = j\n    # Swap the pivot with the smallest digit to its right\n    digits[i - 1], digits[smallest] = digits[smallest], digits[i - 1]\n    # Sort the digits to the right of the pivot\n    digits[i:] = sorted(digits[i:])\n    # Return the number\n    return int(''.join(str(d) for d in digits))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphbpno0jv.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmphbpno0jv.py\", line 33, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmphbpno0jv.py\", line 29, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyavhuqsw.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpyavhuqsw.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpyavhuqsw.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n_str) - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = list(n_str)\n    n_str[i], n_str[j] = n_str[j], n_str[i]\n    n_str[i + 1:] = reversed(n_str[i + 1:])\n    return int(\"\".join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjk9inqdd.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpjk9inqdd.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpjk9inqdd.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    return int(''.join(num_list))\n\nprint(rearrange_bigger(12345))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "54321\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyg16b6v8.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpyg16b6v8.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpyg16b6v8.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(map(str, digits)))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzrh_8hk3.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpzrh_8hk3.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzrh_8hk3.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            num_list[i], num_list[i - 1] = num_list[i - 1], num_list[i]\n            return int(''.join(num_list))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp1d1ejg_h.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp1d1ejg_h.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp1d1ejg_h.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzdgwolcr.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpzdgwolcr.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzdgwolcr.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list_str = ''.join(n_list)\n    if n_str == n_list_str:\n        return -1\n    else:\n        return int(n_list_str)\n\nprint(rearrange_bigger(123))\nprint(rearrange_bigger(321))\nprint(rearrange_bigger(531))\nprint(rearrange_bigger(1234))\nprint(rearrange_bigger(1243))\nprint(rearrange_bigger(1235))\nprint(rearrange_bigger(1230))\nprint(rearrange_bigger(1203))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "321\n-1\n-1\n4321\n4321\n5321\n3210\n3210\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjaqzvklg.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpjaqzvklg.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpjaqzvklg.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzdgwolcr.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpzdgwolcr.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzdgwolcr.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    for i in range(len(num_str) - 1, 0, -1):\n        if num_str[i] > num_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(num_str) - 1, i - 1, -1):\n        if num_str[j] > num_str[i - 1]:\n            break\n\n    num_str = list(num_str)\n    num_str[i - 1], num_str[j] = num_str[j], num_str[i - 1]\n    num_str[i:] = num_str[i:][::-1]\n\n    return int(''.join(num_str))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpq3b_z6ie.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpq3b_z6ie.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpq3b_z6ie.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    num_str = str(n)\n    # convert to list\n    num_list = list(num_str)\n    # find the first digit that is smaller than the digit to its right\n    for i in range(len(num_list) - 1):\n        if num_list[i] < num_list[i + 1]:\n            break\n    # if no such digit exists, return -1\n    else:\n        return -1\n    # find the smallest digit to the right of the pivot that is larger than the pivot\n    pivot = num_list[i]\n    smallest = num_list[i + 1]\n    smallest_index = i + 1\n    for j in range(i + 2, len(num_list)):\n        if num_list[j] > pivot and num_list[j] < smallest:\n            smallest = num_list[j]\n            smallest_index = j\n    # swap the pivot with the smallest digit\n    num_list[i], num_list[smallest_index] = num_list[smallest_index], num_list[i]\n    # reverse the digits to the right of the pivot\n    num_list[i + 1:] = num_list[i + 1:][::-1]\n    # convert back to int and return\n    return int(\"\".join(num_list))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp767_qo6f.py\", line 40, in <module>\n    test_check()\n  File \"/tmp/tmp767_qo6f.py\", line 38, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp767_qo6f.py\", line 34, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    n_int = int(n_str)\n    if n_int > n:\n        return n_int\n    else:\n        return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr5dns0ic.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpr5dns0ic.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpr5dns0ic.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    num_str = \"\".join(num_list)\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppid0d5ai.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmppid0d5ai.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppid0d5ai.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj3p91ael.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpj3p91ael.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpj3p91ael.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = ''.join(n_list)\n    if n_str == n_list:\n        return -1\n    else:\n        return int(n_list)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp38lik8xe.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp38lik8xe.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp38lik8xe.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            t = s[i:]\n            m = min(filter(lambda x: x > s[i - 1], t))\n            t.remove(m)\n            t.sort()\n            s = s[:i - 1] + [m] + t\n            return int(\"\".join(s))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpw2701m1b.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpw2701m1b.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpw2701m1b.py\", line 18, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str)-1, 0, -1):\n        if n_str[i] > n_str[i-1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n_str)-1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = list(n_str)\n    n_str[i], n_str[j] = n_str[j], n_str[i]\n    n_str[i+1:] = reversed(n_str[i+1:])\n    return int(''.join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp67y13jpr.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp67y13jpr.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp67y13jpr.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1: i - 1: -1]\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpvyxrbmrv.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpvyxrbmrv.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpvyxrbmrv.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i:] = sorted(digits[i:])\n            for j in range(i, len(digits)):\n                if digits[j] > digits[i - 1]:\n                    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n                    return int(''.join(map(str, digits)))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpsni_u69q.py\", line 26, in <module>\n    test_check()\n  File \"/tmp/tmpsni_u69q.py\", line 24, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpsni_u69q.py\", line 20, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    for i in range(len(n_list) - 2, -1, -1):\n        if n_list[i] < n_list[i + 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n_list) - 1, i, -1):\n        if n_list[j] > n_list[i]:\n            break\n    n_list[i], n_list[j] = n_list[j], n_list[i]\n    n_list[i + 1:] = n_list[i + 1:][::-1]\n    return int(''.join(n_list))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp10tdm6st.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp10tdm6st.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp10tdm6st.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            n = n[:i - 1] + n[i] + ''.join(sorted(n[i - 1:i] + n[i + 1:]))\n            return int(n)\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpl0a0pd72.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpl0a0pd72.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpl0a0pd72.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n_str) - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpqyokv3m6.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpqyokv3m6.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpqyokv3m6.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi6r1ot3m.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpi6r1ot3m.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpi6r1ot3m.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n\n    n_str = list(n_str)\n    n_str[i - 1], n_str[j] = n_str[j], n_str[i - 1]\n    n_str[i:] = n_str[i:][::-1]\n    return int(''.join(n_str))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwqzottas.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpwqzottas.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwqzottas.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    str_n = str(n)\n    for i in range(len(str_n) - 1, 0, -1):\n        if str_n[i] > str_n[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(str_n) - 1, i - 1, -1):\n        if str_n[j] > str_n[i - 1]:\n            break\n\n    str_n = list(str_n)\n    str_n[i - 1], str_n[j] = str_n[j], str_n[i - 1]\n    str_n[i:] = str_n[len(str_n) - 1: i - 1: -1]\n    return int(''.join(str_n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpr7hw9srs.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpr7hw9srs.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpr7hw9srs.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = str(n)\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    if i == 1 and s[i] <= s[i - 1]:\n        return -1\n    x = s[i - 1]\n    smallest = i\n    for j in range(i + 1, len(s)):\n        if s[j] > x and s[j] < s[smallest]:\n            smallest = j\n    s = s[:i - 1] + s[smallest] + ''.join(sorted(s[i - 1:smallest] + s[smallest + 1:]))\n    return int(s)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjmxpfmgs.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpjmxpfmgs.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpjmxpfmgs.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    num_str = \"\".join(num_list)\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppid0d5ai.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmppid0d5ai.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppid0d5ai.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            t = s[i:]\n            m = min(filter(lambda x: x > s[i - 1], t))\n            t.remove(m)\n            t.sort()\n            s = s[:i - 1] + [m] + t\n            return int(\"\".join(s))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi4guyf70.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpi4guyf70.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpi4guyf70.py\", line 20, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            break\n    if i == 1 and n[i] <= n[i-1]:\n        return -1\n    x = n[i-1]\n    smallest = i\n    for j in range(i+1, len(n)):\n        if n[j] > x and n[j] < n[smallest]:\n            smallest = j\n    n = list(n)\n    n[i-1], n[smallest] = n[smallest], n[i-1]\n    n[i:] = sorted(n[i:])\n    return int(\"\".join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprfuy62bm.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmprfuy62bm.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmprfuy62bm.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_len = len(num_str)\n    for i in range(num_len - 1, 0, -1):\n        if num_str[i] > num_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(num_len - 1, i - 1, -1):\n        if num_str[j] > num_str[i - 1]:\n            break\n    num_str = list(num_str)\n    num_str[i - 1], num_str[j] = num_str[j], num_str[i - 1]\n    num_str[i:] = num_str[i:][::-1]\n    return int(\"\".join(num_str))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpplynuhmk.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpplynuhmk.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpplynuhmk.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_list = list(str(n))\n    for i in range(len(n_list) - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            n_list[i], n_list[i - 1] = n_list[i - 1], n_list[i]\n            return int(''.join(n_list))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppvyz4n48.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmppvyz4n48.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppvyz4n48.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            n = n[:i-1] + n[i] + ''.join(sorted(n[i-1:i] + n[i+1:]))\n            return int(n)\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpedwk9fyy.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpedwk9fyy.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpedwk9fyy.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join([str(x) for x in digits]))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4mxysua6.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4mxysua6.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp4mxysua6.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num = list(str(n))\n    for i in range(len(num)-1, 0, -1):\n        if num[i] > num[i-1]:\n            break\n    else:\n        return -1\n    for j in range(len(num)-1, i-1, -1):\n        if num[j] > num[i-1]:\n            break\n    num[i-1], num[j] = num[j], num[i-1]\n    num[i:] = num[i:][::-1]\n    return int(''.join(num))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpmkjzjcf_.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpmkjzjcf_.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpmkjzjcf_.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_list = list(str(n))\n    for i in range(len(n_list) - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            n_list[i], n_list[i - 1] = n_list[i - 1], n_list[i]\n            return int(''.join(n_list))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppvyz4n48.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmppvyz4n48.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppvyz4n48.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len-1, 0, -1):\n        if n_str[i] > n_str[i-1]:\n            break\n    else:\n        return -1\n    for j in range(n_len-1, i-1, -1):\n        if n_str[j] > n_str[i-1]:\n            break\n    n_str = list(n_str)\n    n_str[i-1], n_str[j] = n_str[j], n_str[i-1]\n    n_str[i:] = n_str[i:][::-1]\n    return int(''.join(n_str))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph5c2txwp.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmph5c2txwp.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmph5c2txwp.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num = list(str(n))\n    for i in range(len(num) - 1, 0, -1):\n        if num[i] > num[i - 1]:\n            num[i], num[i - 1] = num[i - 1], num[i]\n            return int(\"\".join(num))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb6n42hl1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpb6n42hl1.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpb6n42hl1.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join([str(x) for x in digits]))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4mxysua6.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmp4mxysua6.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp4mxysua6.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    s = str(n)\n    # find the first decreasing digit\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            # find the smallest digit greater than s[i - 1]\n            for j in range(len(s) - 1, i - 1, -1):\n                if s[j] > s[i - 1]:\n                    # swap s[i - 1] and s[j]\n                    s = s[:i - 1] + s[j] + s[i:j] + s[i - 1] + s[j + 1:]\n                    # sort the digits after s[i - 1]\n                    s = s[:i] + ''.join(sorted(s[i:]))\n                    return int(s)\n    return -1\n\nprint(rearrange_bigger(1234))\nprint(rearrange_bigger(4321))\nprint(rearrange_bigger(534976))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "1243\n-1\n536479\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk6n21z3p.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmpk6n21z3p.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpk6n21z3p.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    j = len(n) - 1\n    while n[j] < n[i - 1]:\n        j -= 1\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwcanxnb4.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpwcanxnb4.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwcanxnb4.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzdgwolcr.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpzdgwolcr.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzdgwolcr.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    for i in range(len(num_str) - 1, 0, -1):\n        if num_str[i] > num_str[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(num_str) - 1, i, -1):\n        if num_str[j] > num_str[i]:\n            break\n    num_str = list(num_str)\n    num_str[i], num_str[j] = num_str[j], num_str[i]\n    num_str[i + 1:] = reversed(num_str[i + 1:])\n    return int(''.join(num_str))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnudytgpp.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpnudytgpp.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpnudytgpp.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i:] = sorted(digits[i:])\n            for j in range(i, len(digits)):\n                if digits[j] > digits[i - 1]:\n                    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n                    break\n            return int(''.join(map(str, digits)))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmprk3kzn82.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmprk3kzn82.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmprk3kzn82.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyavhuqsw.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpyavhuqsw.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpyavhuqsw.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = str(n)\n    for i in range(len(s)-1, 0, -1):\n        if s[i] > s[i-1]:\n            break\n    else:\n        return -1\n    s = list(s)\n    s[i-1], s[i] = s[i], s[i-1]\n    return int(''.join(s))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4grtpcy1.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmp4grtpcy1.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp4grtpcy1.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    num_str = ''.join(num_list)\n    return int(num_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp78km5hpu.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp78km5hpu.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp78km5hpu.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            digits[i - 1], digits[j] = digits[j], digits[i - 1]\n            break\n    digits[i:] = reversed(digits[i:])\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpeg1pkkcc.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpeg1pkkcc.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpeg1pkkcc.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    j = i\n    for k in range(i + 1, len(n)):\n        if n[k] > n[i - 1] and n[k] < n[j]:\n            j = k\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[i:][::-1]\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp3rcghx1_.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmp3rcghx1_.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp3rcghx1_.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgzwvgi7y.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpgzwvgi7y.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpgzwvgi7y.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpi6r1ot3m.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpi6r1ot3m.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpi6r1ot3m.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_list = list(str(n))\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            num_list[i], num_list[i - 1] = num_list[i - 1], num_list[i]\n            return int(\"\".join(num_list))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp888zk05u.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp888zk05u.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp888zk05u.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = list(n)\n    n[i - 1], n[j] = n[j], n[i - 1]\n    n[i:] = n[len(n) - 1 : i - 1 : -1]\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmppwbxtfw1.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmppwbxtfw1.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmppwbxtfw1.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i-1] < n[i]:\n            break\n    else:\n        return -1\n    for j in range(len(n)-1, i-1, -1):\n        if n[j] > n[i-1]:\n            break\n    n = list(n)\n    n[i-1], n[j] = n[j], n[i-1]\n    n[i:] = n[len(n)-1:i-1:-1]\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpyejjn2zz.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpyejjn2zz.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpyejjn2zz.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(map(str, digits)))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp05ka63fw.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp05ka63fw.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp05ka63fw.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(str(x) for x in digits))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp7y2eudsq.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmp7y2eudsq.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp7y2eudsq.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort(reverse=True)\n    num_str = ''.join(num_list)\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe00_ep_s.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpe00_ep_s.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe00_ep_s.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwrvuubpu.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwrvuubpu.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwrvuubpu.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list_str = ''.join(n_list)\n    if n_str == n_list_str:\n        return -1\n    else:\n        return int(n_list_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe7l_nnh8.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpe7l_nnh8.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe7l_nnh8.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    for i in range(len(n_list) - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            n_list[i], n_list[i - 1] = n_list[i - 1], n_list[i]\n            return int(\"\".join(n_list))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpeekg882_.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmpeekg882_.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpeekg882_.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5d5as7d_.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp5d5as7d_.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5d5as7d_.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg4byk6gi.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpg4byk6gi.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg4byk6gi.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = list(map(int, n_list))\n    n_list = list(map(str, n_list))\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpng1r9io5.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpng1r9io5.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpng1r9io5.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            num_list[i], num_list[i - 1] = num_list[i - 1], num_list[i]\n            return int(\"\".join(num_list))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpy3qke0w7.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpy3qke0w7.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpy3qke0w7.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(\"\".join(map(str, digits)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmps864i6hp.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmps864i6hp.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmps864i6hp.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            n_str = n_str[:i - 1] + n_str[i] + n_str[i - 1] + n_str[i + 1:]\n            n_str = n_str[:i] + ''.join(sorted(n_str[i:]))\n            return int(n_str)\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp4hz5i8kb.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp4hz5i8kb.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp4hz5i8kb.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list_str = ''.join(n_list)\n    if n_str == n_list_str:\n        return -1\n    else:\n        return int(n_list_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe7l_nnh8.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpe7l_nnh8.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe7l_nnh8.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort(reverse=True)\n    num_str = ''.join(num_list)\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpe00_ep_s.py\", line 21, in <module>\n    test_check()\n  File \"/tmp/tmpe00_ep_s.py\", line 19, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpe00_ep_s.py\", line 15, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    if i == 1 and n[i] <= n[i - 1]:\n        return -1\n    x = n[i - 1]\n    smallest = i\n    for j in range(i + 1, len(n)):\n        if n[j] > x and n[j] < n[smallest]:\n            smallest = j\n    n = list(n)\n    n[i - 1], n[smallest] = n[smallest], n[i - 1]\n    n[i:] = sorted(n[i:])\n    return int(\"\".join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpc4kuyjw1.py\", line 34, in <module>\n    test_check()\n  File \"/tmp/tmpc4kuyjw1.py\", line 32, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpc4kuyjw1.py\", line 28, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(str(x) for x in digits))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp16093euq.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp16093euq.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp16093euq.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = [int(i) for i in num_str]\n    num_list.sort()\n    num_list.reverse()\n    num_str = ''.join([str(i) for i in num_list])\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp04zzyn42.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp04zzyn42.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp04zzyn42.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(d) for d in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(map(str, digits)))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpebv7zb1r.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpebv7zb1r.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpebv7zb1r.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n\n    n_str = list(n_str)\n    n_str[i - 1], n_str[j] = n_str[j], n_str[i - 1]\n    n_str[i:] = n_str[i:][::-1]\n    return int(\"\".join(n_str))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmplx84c2ri.py\", line 33, in <module>\n    test_check()\n  File \"/tmp/tmplx84c2ri.py\", line 31, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmplx84c2ri.py\", line 27, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if int(s[i]) > int(s[i - 1]):\n            s[i], s[i - 1] = s[i - 1], s[i]\n            return int(''.join(s))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg7f1kfsq.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpg7f1kfsq.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg7f1kfsq.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 2, -1, -1):\n        if n[i] < n[i + 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpo0qykwg4.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpo0qykwg4.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpo0qykwg4.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num = list(str(n))\n    for i in range(len(num) - 1, 0, -1):\n        if num[i] > num[i - 1]:\n            num[i], num[i - 1] = num[i - 1], num[i]\n            return int(\"\".join(num))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb6n42hl1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpb6n42hl1.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpb6n42hl1.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    s[i - 1], s[j] = s[j], s[i - 1]\n    s[i:] = s[i:][::-1]\n    return int(''.join(s))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmph7ms1tsp.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmph7ms1tsp.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmph7ms1tsp.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwrvuubpu.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpwrvuubpu.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwrvuubpu.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = list(str(n))\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    s[i - 1], s[j] = s[j], s[i - 1]\n    s[i:] = reversed(s[i:])\n    return int(''.join(s))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpye9psosa.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpye9psosa.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpye9psosa.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join(map(str, digits)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5d5as7d_.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp5d5as7d_.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5d5as7d_.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            break\n    else:\n        return -1\n\n    x = num_list[i - 1]\n    smallest = i\n    for j in range(i + 1, len(num_list)):\n        if num_list[j] > x and num_list[j] < num_list[smallest]:\n            smallest = j\n\n    num_list[smallest], num_list[i - 1] = num_list[i - 1], num_list[smallest]\n    num_list[i:] = num_list[len(num_list) - 1: i - 1: -1]\n    result = int(\"\".join(num_list))\n    return result\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp89rofmd8.py\", line 35, in <module>\n    test_check()\n  File \"/tmp/tmp89rofmd8.py\", line 33, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp89rofmd8.py\", line 29, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_str_list = list(num_str)\n    num_str_list.sort()\n    num_str_list.reverse()\n    num_str_list = ''.join(num_str_list)\n    if num_str_list == num_str:\n        return -1\n    else:\n        return int(num_str_list)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6dk1w3pd.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp6dk1w3pd.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp6dk1w3pd.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    n_str = str(n)\n    # find the first digit that is smaller than the one to its right\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    # find the smallest digit to the right of the pivot that is bigger than the pivot\n    for j in range(len(n_str) - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    # swap the pivot with the smallest digit to its right\n    n_str = n_str[:i - 1] + n_str[j] + n_str[i:j] + n_str[i - 1] + n_str[j + 1:]\n    # reverse the digits to the right of the pivot\n    n_str = n_str[:i] + n_str[i:][::-1]\n    return int(n_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp6376l87p.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmp6376l87p.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp6376l87p.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    nums = [int(x) for x in str(n)]\n    for i in range(len(nums) - 1, 0, -1):\n        if nums[i] > nums[i - 1]:\n            for j in range(len(nums) - 1, i - 1, -1):\n                if nums[j] > nums[i - 1]:\n                    nums[j], nums[i - 1] = nums[i - 1], nums[j]\n                    nums[i:] = sorted(nums[i:])\n                    return int(''.join(map(str, nums)))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpj6itadvk.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmpj6itadvk.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpj6itadvk.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list_str = \"\".join(n_list)\n    if n_str == n_list_str:\n        return -1\n    else:\n        return int(n_list_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphv823i7l.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmphv823i7l.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmphv823i7l.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(n) - 1, i - 1, -1):\n        if n[j] > n[i - 1]:\n            break\n    n = n[:i - 1] + n[j] + ''.join(sorted(n[i - 1:j] + n[j + 1:]))\n    return int(n)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpt6xwehit.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpt6xwehit.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpt6xwehit.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpml37vt40.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpml37vt40.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpml37vt40.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(i) for i in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i], digits[i - 1] = digits[i - 1], digits[i]\n            return int(''.join([str(i) for i in digits]))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9wty0bpw.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp9wty0bpw.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp9wty0bpw.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    num_str = ''.join(num_list)\n    return int(num_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp2n8g291o.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmp2n8g291o.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp2n8g291o.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    pass\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp0_q2b0wq.py\", line 16, in <module>\n    test_check()\n  File \"/tmp/tmp0_q2b0wq.py\", line 14, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp0_q2b0wq.py\", line 9, in check\n    assert candidate(12) == 21\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_list = list(str(n))\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(num_list) - 1, i - 1, -1):\n        if num_list[j] > num_list[i - 1]:\n            break\n    num_list[i - 1], num_list[j] = num_list[j], num_list[i - 1]\n    num_list[i:] = num_list[len(num_list) - 1: i - 1: -1]\n    return int(\"\".join(num_list))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp_0klcnv5.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmp_0klcnv5.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp_0klcnv5.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n)-1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i+1:] = reversed(n[i+1:])\n    return int(''.join(n))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp8xcwn69c.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmp8xcwn69c.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp8xcwn69c.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgzwvgi7y.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpgzwvgi7y.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpgzwvgi7y.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = str(n)\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    s = s[:i - 1] + s[j] + ''.join(sorted(s[i - 1:j] + s[j + 1:]))\n    return int(s)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwiv9t91y.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpwiv9t91y.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwiv9t91y.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list_len = len(n_list)\n    for i in range(n_list_len - 1, 0, -1):\n        if n_list[i] > n_list[i - 1]:\n            n_list[i], n_list[i - 1] = n_list[i - 1], n_list[i]\n            break\n    else:\n        return -1\n    n_list = n_list[:i] + sorted(n_list[i:])\n    return int(''.join(n_list))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpaoyoif9w.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpaoyoif9w.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpaoyoif9w.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n) - 1, 0, -1):\n        if n[i] > n[i - 1]:\n            break\n    else:\n        return -1\n    i -= 1\n    for j in range(len(n) - 1, i, -1):\n        if n[j] > n[i]:\n            break\n    n = list(n)\n    n[i], n[j] = n[j], n[i]\n    n[i + 1:] = reversed(n[i + 1:])\n    return int(''.join(n))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpgzwvgi7y.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpgzwvgi7y.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpgzwvgi7y.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(digits) - 1, i - 1, -1):\n        if digits[j] > digits[i - 1]:\n            break\n    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n    digits[i:] = digits[i:][::-1]\n    return int(''.join(map(str, digits)))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpzrh_8hk3.py\", line 31, in <module>\n    test_check()\n  File \"/tmp/tmpzrh_8hk3.py\", line 29, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpzrh_8hk3.py\", line 25, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = list(num_str)\n    num_list.sort()\n    num_list.reverse()\n    return int(''.join(num_list))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpk__e1t_7.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpk__e1t_7.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpk__e1t_7.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort(reverse=True)\n    n_list = ''.join(n_list)\n    if n_str == n_list:\n        return -1\n    else:\n        return int(n_list)\n\nprint(rearrange_bigger(123))\nprint(rearrange_bigger(1234))\nprint(rearrange_bigger(1243))\nprint(rearrange_bigger(123465))\nprint(rearrange_bigger(54321))\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "321\n4321\n4321\n654321\n-1\n",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdm44lzbj.py\", line 29, in <module>\n    test_check()\n  File \"/tmp/tmpdm44lzbj.py\", line 27, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdm44lzbj.py\", line 23, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    for i in range(len(n_str) - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(n_str) - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpxtk60qeo.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpxtk60qeo.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpxtk60qeo.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n = str(n)\n    for i in range(len(n)-1, 0, -1):\n        if n[i] > n[i-1]:\n            n = n[:i-1] + n[i] + ''.join(sorted(n[i-1:i] + n[i+1:]))\n            return int(n)\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpjmxf4t_c.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpjmxf4t_c.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpjmxf4t_c.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 1, 0, -1):\n        if digits[i] > digits[i - 1]:\n            digits[i:] = sorted(digits[i:])\n            for j in range(i, len(digits)):\n                if digits[j] > digits[i - 1]:\n                    digits[i - 1], digits[j] = digits[j], digits[i - 1]\n                    break\n            return int(''.join(map(str, digits)))\n    return -1\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp5elv1hxv.py\", line 25, in <module>\n    test_check()\n  File \"/tmp/tmp5elv1hxv.py\", line 23, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp5elv1hxv.py\", line 19, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    for i in range(len(num_str) - 1, 0, -1):\n        if num_str[i] > num_str[i - 1]:\n            break\n    else:\n        return -1\n\n    for j in range(len(num_str) - 1, i - 1, -1):\n        if num_str[j] > num_str[i - 1]:\n            break\n\n    num_str = list(num_str)\n    num_str[i - 1], num_str[j] = num_str[j], num_str[i - 1]\n    num_str[i:] = num_str[i:][::-1]\n    return int(\"\".join(num_str))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpz7l00lhz.py\", line 32, in <module>\n    test_check()\n  File \"/tmp/tmpz7l00lhz.py\", line 30, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpz7l00lhz.py\", line 26, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num = list(str(n))\n    for i in range(len(num) - 1, 0, -1):\n        if num[i] > num[i - 1]:\n            num[i], num[i - 1] = num[i - 1], num[i]\n            return int(\"\".join(num))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpb6n42hl1.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmpb6n42hl1.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpb6n42hl1.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    s = str(n)\n    for i in range(len(s) - 1, 0, -1):\n        if s[i] > s[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(s) - 1, i - 1, -1):\n        if s[j] > s[i - 1]:\n            break\n    s = s[:i - 1] + s[j] + ''.join(sorted(s[i - 1:j] + s[j + 1:]))\n    return int(s)\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpwiv9t91y.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpwiv9t91y.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpwiv9t91y.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    if n < 10:\n        return -1\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits)-1, 0, -1):\n        if digits[i] > digits[i-1]:\n            digits[i], digits[i-1] = digits[i-1], digits[i]\n            return int(''.join([str(x) for x in digits]))\n    return -1\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp11pw2j91.py\", line 24, in <module>\n    test_check()\n  File \"/tmp/tmp11pw2j91.py\", line 22, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp11pw2j91.py\", line 18, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 1, 0, -1):\n        if n_str[i] > n_str[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i - 1, -1):\n        if n_str[j] > n_str[i - 1]:\n            break\n    n_str = n_str[:i - 1] + n_str[j] + ''.join(sorted(n_str[i - 1:j] + n_str[j + 1:]))\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpg4byk6gi.py\", line 28, in <module>\n    test_check()\n  File \"/tmp/tmpg4byk6gi.py\", line 26, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpg4byk6gi.py\", line 22, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_list = list(str(n))\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            num_list[i], num_list[i - 1] = num_list[i - 1], num_list[i]\n            return int(''.join(num_list))\n    return -1\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp9jaufhaf.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp9jaufhaf.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp9jaufhaf.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_len = len(n_str)\n    for i in range(n_len - 2, -1, -1):\n        if n_str[i] < n_str[i + 1]:\n            break\n    else:\n        return -1\n    for j in range(n_len - 1, i, -1):\n        if n_str[j] > n_str[i]:\n            break\n    n_str = n_str[:i] + n_str[j] + ''.join(sorted(n_str[i:j] + n_str[j + 1:]))\n    return int(n_str)\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpubdrh3wr.py\", line 27, in <module>\n    test_check()\n  File \"/tmp/tmpubdrh3wr.py\", line 25, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpubdrh3wr.py\", line 21, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    n_int = int(n_str)\n    return n_int\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp47jancby.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp47jancby.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp47jancby.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    return int(n_str)\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1665509950,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpdkz5wrft.py\", line 22, in <module>\n    test_check()\n  File \"/tmp/tmpdkz5wrft.py\", line 20, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpdkz5wrft.py\", line 16, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    # convert to string\n    s = str(n)\n    # find the first digit that is smaller than the digit to its right\n    for i in range(len(s) - 1):\n        if s[i] < s[i + 1]:\n            break\n    # if no such digit, return -1\n    else:\n        return -1\n    # find the smallest digit to the right of the digit found above that is greater than it\n    for j in range(i + 1, len(s)):\n        if s[j] > s[i]:\n            break\n    # swap the digits\n    s = list(s)\n    s[i], s[j] = s[j], s[i]\n    # reverse the digits to the right of the digit found above\n    s[i + 1:] = reversed(s[i + 1:])\n    # convert back to integer and return\n    return int(\"\".join(s))\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmphr0v1t7c.py\", line 36, in <module>\n    test_check()\n  File \"/tmp/tmphr0v1t7c.py\", line 34, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmphr0v1t7c.py\", line 30, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    num_str = str(n)\n    num_list = [int(i) for i in num_str]\n    for i in range(len(num_list) - 1, 0, -1):\n        if num_list[i] > num_list[i - 1]:\n            break\n    else:\n        return -1\n    for j in range(len(num_list) - 1, i - 1, -1):\n        if num_list[j] > num_list[i - 1]:\n            break\n    num_list[i - 1], num_list[j] = num_list[j], num_list[i - 1]\n    num_list[i:] = num_list[len(num_list) - 1:i - 1:-1]\n    return int(''.join(str(i) for i in num_list))\n\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmpnba73k3x.py\", line 30, in <module>\n    test_check()\n  File \"/tmp/tmpnba73k3x.py\", line 28, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmpnba73k3x.py\", line 24, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "from typing import Any\n\ndef rearrange_bigger(n: int) -> Any:\n    \"\"\"\n\tWrite a function to create the next bigger number by rearranging the digits of a given number.\n\t\"\"\"\n    n_str = str(n)\n    n_list = list(n_str)\n    n_list.sort()\n    n_list.reverse()\n    n_str = ''.join(n_list)\n    n_int = int(n_str)\n    return n_int\n\ndef check(candidate):\n    assert candidate(12) == 21\n    assert candidate(10) == False\n    assert candidate(102) == 120\n\ndef test_check():\n    check(rearrange_bigger)\n\ntest_check()\n",
      "timestamp": 1666122855,
      "stdout": "",
      "stderr": "Traceback (most recent call last):\n  File \"/tmp/tmp47jancby.py\", line 23, in <module>\n    test_check()\n  File \"/tmp/tmp47jancby.py\", line 21, in test_check\n    check(rearrange_bigger)\n  File \"/tmp/tmp47jancby.py\", line 17, in check\n    assert candidate(10) == False\nAssertionError\n",
      "exit_code": 1,
      "status": "Exception"
    }
  ]
}
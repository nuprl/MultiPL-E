{
  "name": "mbpp_130_max_occurrences",
  "language": "py",
  "prompt": "from typing import List\n\ndef max_occurrences(nums: List[int]) -> int:\n    \"\"\"\n\tWrite a function to find the item with maximum frequency in a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([2, 3, 8, 4, 7, 9, 8, 2, 6, 5, 1, 6, 1, 2, 3, 2, 4, 6, 9, 1, 2]) == 2\n    assert candidate([2, 3, 8, 4, 7, 9, 8, 7, 9, 15, 14, 10, 12, 13, 16, 18]) == 8\n    assert candidate([10, 20, 20, 30, 40, 90, 80, 50, 30, 20, 50, 10]) == 20\n\ndef test_check():\n    check(max_occurrences)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 0\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    return max(nums, key=nums.count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[i]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n\n    max_occur = 0\n    num_occur = {}\n    for num in nums:\n        if num not in num_occur:\n            num_occur[num] = 1\n        else:\n            num_occur[num] += 1\n\n        max_occur = max(max_occur, num_occur[num])\n\n    return max_occur\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    nums.sort()\n    max_num = nums[0]\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        if num in d:\n            d[num] += 1\n        else:\n            d[num] = 1\n    max_val = max(d.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    return max(nums, key=nums.count)\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    max_num = None\n    num_count = {}\n\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_num = num\n\n    return max_num",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n    return max_freq\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    return max(count.values())",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    # TODO: Implement this function\n    pass\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        d[num] = d.get(num, 0) + 1\n    return max(d.values())",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            cur_count += 1\n        else:\n            max_count = max(max_count, cur_count)\n            cur_count = 1\n    return max(max_count, cur_count)\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_item = None\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_item = num\n    return max_item\n",
    "    nums.sort()\n    max_count = 0\n    max_item = None\n    current_count = 0\n    current_item = None\n    for num in nums:\n        if num != current_item:\n            current_item = num\n            current_count = 1\n        else:\n            current_count += 1\n        if current_count > max_count:\n            max_count = current_count\n            max_item = current_item\n    return max_item\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    curr_num = nums[0]\n    curr_count = 1\n    max_num = curr_num\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == curr_num:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                max_num = curr_num\n            curr_num = nums[i]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        max_num = curr_num\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    max_count = 0\n    max_item = None\n    count = {}\n    for item in nums:\n        if item not in count:\n            count[item] = 1\n        else:\n            count[item] += 1\n        if count[item] > max_count:\n            max_count = count[item]\n            max_item = item\n    return max_item\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    for num in nums:\n        count = nums.count(num)\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n\n    counts = {}\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n\n    max_count = 0\n    for count in counts.values():\n        max_count = max(max_count, count)\n\n    return max_count",
    "    # Your code here\n    return 0\n\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    max_count = 0\n    for num in count:\n        if count[num] > max_count:\n            max_count = count[num]\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    num_dict = {}\n    for num in nums:\n        if num in num_dict:\n            num_dict[num] += 1\n        else:\n            num_dict[num] = 1\n    max_num = max(num_dict.values())\n    return max_num\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_val = max(d.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n    return max_count\n",
    "    return max(Counter(nums).values())\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        max_count = max(max_count, num_count[num])\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    num_counts = {}\n    for num in nums:\n        num_counts[num] = num_counts.get(num, 0) + 1\n        max_count = max(max_count, num_counts[num])\n\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    # TODO: Implement this function\n    pass\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n",
    "    max_count = 0\n    max_item = None\n    for item in nums:\n        count = nums.count(item)\n        if count > max_count:\n            max_count = count\n            max_item = item\n    return max_item\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 0\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            if curr_count > max_count:\n                max_count = curr_count\n                res = nums[i - 1]\n            curr_count = 1\n    if curr_count > max_count:\n        max_count = curr_count\n        res = nums[-1]\n    return res\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            cur_count += 1\n        else:\n            cur_count = 1\n        max_count = max(max_count, cur_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        if num in d:\n            d[num] += 1\n        else:\n            d[num] = 1\n    max_value = max(d.values())\n    return max_value\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_value = max(nums_dict.values())\n    return max_value\n",
    "    nums.sort()\n    max_freq = 0\n    max_num = None\n    curr_freq = 1\n    curr_num = nums[0]\n    for i in range(1, len(nums)):\n        if nums[i] == curr_num:\n            curr_freq += 1\n        else:\n            if curr_freq > max_freq:\n                max_freq = curr_freq\n                max_num = curr_num\n            curr_freq = 1\n            curr_num = nums[i]\n    if curr_freq > max_freq:\n        max_freq = curr_freq\n        max_num = curr_num\n    return max_num\n",
    "    max_count = 0\n    max_item = None\n    for num in nums:\n        count = nums.count(num)\n        if count > max_count:\n            max_count = count\n            max_item = num\n    return max_item\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_counts = {}\n    for num in nums:\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n        max_count = max(max_count, num_counts[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 0\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n    return max(max_freq, curr_freq)\n",
    "    max_count = 0\n    max_item = None\n    counts = {}\n    for num in nums:\n        if num in counts:\n            counts[num] += 1\n        else:\n            counts[num] = 1\n        if counts[num] > max_count:\n            max_count = counts[num]\n            max_item = num\n    return max_item\n",
    "    nums.sort()\n    max_count = 0\n    max_num = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    max_count = 0\n    for i in nums:\n        count = nums.count(i)\n        if count > max_count:\n            max_count = count\n            max_item = i\n    return max_item\n\n",
    "    return max(nums, key=nums.count)",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    return max(count.values())",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_item = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_item = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_item = nums[-1]\n    return max_item\n\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_occur = 0\n    for key, value in nums_dict.items():\n        if value > max_occur:\n            max_occur = value\n    return max_occur\n\nprint(max_occurrences([1, 2, 3, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2, 1, 2, 3, 2, 1, 2, 1, 2, 3, 2",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_occur = 1\n    curr_occur = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_occur += 1\n        else:\n            if curr_occur > max_occur:\n                max_occur = curr_occur\n            curr_occur = 1\n    return max_occur\n\nprint(max_occurrences([1,2,3,1,2,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3,3,3,3,3]))\nprint(max_occurrences([1,2,3,1,2,3,3,3,3,3,3,3,3,3,3,3",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_val = max(nums_dict.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            cur_count += 1\n        else:\n            max_count = max(max_count, cur_count)\n            cur_count = 1\n    return max(max_count, cur_count)\n\nprint(max_occurrences([1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2, 3, 2, 1, 2, 3, 2,",
    "    if len(nums) == 0:\n        return 0\n    max_num = nums[0]\n    max_count = 1\n    num_counts = {}\n    for num in nums:\n        if num in num_counts:\n            num_counts[num] += 1\n        else:\n            num_counts[num] = 1\n        if num_counts[num] > max_count:\n            max_count = num_counts[num]\n            max_num = num\n    return max_num\n",
    "    max_freq = 0\n    max_item = None\n    freq_map = {}\n    for num in nums:\n        if num not in freq_map:\n            freq_map[num] = 1\n        else:\n            freq_map[num] += 1\n        if freq_map[num] > max_freq:\n            max_freq = freq_map[num]\n            max_item = num\n    return max_item\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1",
    "    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    max_count = 0\n    max_num = 0\n    for num, c in count.items():\n        if c > max_count:\n            max_count = c\n            max_num = num\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_num = 0\n    max_count = 0\n    for num, count in nums_dict.items():\n        if count > max_count:\n            max_num = num\n            max_count = count\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_num = None\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_num = num\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n\n    return max(num_count.values())\n",
    "    max_count = 0\n    max_item = None\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n        if count[num] > max_count:\n            max_count = count[num]\n            max_item = num\n    return max_item\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    cur_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            cur_freq += 1\n        else:\n            cur_freq = 1\n        max_freq = max(max_freq, cur_freq)\n    return max_freq\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n    return max_freq\n",
    "    # TODO: Implement me\n    pass\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    count = 1\n    max_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(count, max_count)\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    max_occur = 0\n    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n        if nums_dict[num] > max_occur:\n            max_occur = nums_dict[num]\n    return max_occur\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_occurrences = 0\n    for num in nums_dict:\n        if nums_dict[num] > max_occurrences:\n            max_occurrences = nums_dict[num]\n    return max_occurrences",
    "    if len(nums) == 0:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    max_count = 0\n    counts = {}\n    for num in nums:\n        if num not in counts:\n            counts[num] = 1\n        else:\n            counts[num] += 1\n        max_count = max(max_count, counts[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    num_counts = {}\n    for num in nums:\n        if num not in num_counts:\n            num_counts[num] = 1\n        else:\n            num_counts[num] += 1\n        max_count = max(max_count, num_counts[num])\n    return max_count\n",
    "    # TODO: Implement me\n    pass",
    "    if not nums:\n        return 0\n    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_count = 0\n    for i in d:\n        if d[i] > max_count:\n            max_count = d[i]\n    return max_count\n\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n\n",
    "    max_count = 0\n    max_num = None\n    num_count = {}\n    for num in nums:\n        if num not in num_count:\n            num_count[num] = 1\n        else:\n            num_count[num] += 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_num = num\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    max_count = 0\n    for num, count in num_count.items():\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    max_count = 0\n    for num in count:\n        if count[num] > max_count:\n            max_count = count[num]\n    return max_count\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_num = 0\n    max_count = 0\n    for num, count in nums_dict.items():\n        if count > max_count:\n            max_count = count\n            max_num = num\n    return max_num\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5]))\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3, 3, 4, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5",
    "    if len(nums) == 0:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_num = None\n    num_counts = {}\n    for num in nums:\n        if num not in num_counts:\n            num_counts[num] = 1\n        else:\n            num_counts[num] += 1\n        if num_counts[num] > max_count:\n            max_count = num_counts[num]\n            max_num = num\n    return max_num\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 0\n    for i in range(len(nums)):\n        if i == 0:\n            count = 1\n            continue\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[i]\n    return max_num\n",
    "    nums.sort()\n    count = 1\n    max_count = 1\n    max_item = nums[0]\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n            max_item = nums[i]\n    return max_item\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    max_count = 0\n    for key in count:\n        max_count = max(max_count, count[key])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    max_num = max(nums_dict.values())\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_num = nums[0]\n    max_count = 1\n    cur_num = nums[0]\n    cur_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == cur_num:\n            cur_count += 1\n        else:\n            if cur_count > max_count:\n                max_count = cur_count\n                max_num = cur_num\n            cur_num = nums[i]\n            cur_count = 1\n    if cur_count > max_count:\n        max_count = cur_count\n        max_num = cur_num\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[len(nums) - 1]\n    return max_num\n\nprint(max_occurrences([1, 3, 2, 1, 2, 1, 5, 3, 3, 4, 2]))",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        d[num] = d.get(num, 0) + 1\n    return max(d.values())\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_occur = 1\n    curr_occur = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_occur += 1\n            max_occur = max(max_occur, curr_occur)\n        else:\n            curr_occur = 1\n    return max_occur\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    elif len(nums) == 1:\n        return 1\n    else:\n        nums.sort()\n        max_count = 1\n        count = 1\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i-1]:\n                count += 1\n            else:\n                count = 1\n            if count > max_count:\n                max_count = count\n        return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            max_freq = max(max_freq, curr_freq)\n            curr_freq = 1\n\n    return max(max_freq, curr_freq)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    return max(nums, key=nums.count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    nums_dict = {}\n    for num in nums:\n        if num not in nums_dict:\n            nums_dict[num] = 1\n        else:\n            nums_dict[num] += 1\n    max_occurrences = 0\n    for key in nums_dict:\n        if nums_dict[key] > max_occurrences:\n            max_occurrences = nums_dict[key]\n    return max_occurrences\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96,",
    "    if not nums:\n        return 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    return max(num_count.values())\n",
    "    nums_dict = {}\n    for num in nums:\n        if num in nums_dict:\n            nums_dict[num] += 1\n        else:\n            nums_dict[num] = 1\n    return max(nums_dict.values())\n",
    "    nums.sort()\n    max_count = 1\n    res = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                res = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        res = nums[-1]\n    return res\n\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    return max(d.values())\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n    return max_freq\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 0\n    prev_num = None\n    for num in nums:\n        if num == prev_num:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n            max_num = num\n        prev_num = num\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n    max_count = 0\n    for num, count in num_count.items():\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    count = Counter(nums)\n    return max(count.values())\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        if num not in d:\n            d[num] = 1\n        else:\n            d[num] += 1\n    max_count = max(d.values())\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n\n    return max(max_count, count)\n\n",
    "    d = {}\n    for i in nums:\n        if i in d:\n            d[i] += 1\n        else:\n            d[i] = 1\n    max_val = max(d.values())\n    return max_val\n",
    "    if not nums:\n        return 0\n\n    nums.sort()\n    max_freq = 1\n    curr_freq = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_freq += 1\n        else:\n            curr_freq = 1\n        max_freq = max(max_freq, curr_freq)\n    return max_freq\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    max_num = nums[0]\n    num_count = {}\n    for num in nums:\n        if num in num_count:\n            num_count[num] += 1\n        else:\n            num_count[num] = 1\n        if num_count[num] > max_count:\n            max_count = num_count[num]\n            max_num = num\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n            max_count = max(max_count, count)\n        else:\n            count = 1\n    return max_count\n",
    "    if not nums:\n        return 0\n    d = {}\n    for num in nums:\n        if num in d:\n            d[num] += 1\n        else:\n            d[num] = 1\n    max_num = max(d.values())\n    return max_num\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[-1]\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            curr_count = 1\n        max_count = max(max_count, curr_count)\n    return max_count\n",
    "    # create a dictionary to store the frequency of each item\n    freq = {}\n    # loop through the list\n    for num in nums:\n        # if the item is not in the dictionary, add it\n        if num not in freq:\n            freq[num] = 1\n        # if the item is in the dictionary, increment its frequency\n        else:\n            freq[num] += 1\n    # create a variable to store the maximum frequency\n    max_freq = 0\n    # loop through the dictionary\n    for key in freq:\n        # if the current frequency is greater than the maximum frequency, update the maximum frequency\n        if freq[key] > max_freq:\n            max_freq = freq[key]\n    # return the maximum frequency\n    return max_freq\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3]))\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3]))\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n    max_count = max(count.values())\n    return max_count\n\nprint(max_occurrences([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = nums[0]\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i-1]\n            count = 1\n    return max_num\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    nums.sort()\n    max_count = 0\n    max_num = 0\n    count = 1\n    for i in range(len(nums) - 1):\n        if nums[i] == nums[i + 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_num = nums[i]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_num = nums[i]\n    return max_num\n\n",
    "    if not nums:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i-1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3]))\nprint(max_occurrences([1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3, 1, 2, 3",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    return max(max_count, count)\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    curr_count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            curr_count += 1\n        else:\n            max_count = max(max_count, curr_count)\n            curr_count = 1\n    return max(max_count, curr_count)",
    "    nums.sort()\n    max_count = 0\n    max_item = None\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            if count > max_count:\n                max_count = count\n                max_item = nums[i - 1]\n            count = 1\n    if count > max_count:\n        max_count = count\n        max_item = nums[-1]\n    return max_item\n",
    "    if not nums:\n        return 0\n    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 1\n        else:\n            count[num] += 1\n    return max(count.values())\n",
    "    if len(nums) == 0:\n        return 0\n    if len(nums) == 1:\n        return 1\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        if count > max_count:\n            max_count = count\n    return max_count\n",
    "    if len(nums) == 0:\n        return 0\n    else:\n        nums.sort()\n        max_count = 1\n        curr_count = 1\n        for i in range(1, len(nums)):\n            if nums[i] == nums[i - 1]:\n                curr_count += 1\n            else:\n                curr_count = 1\n            if curr_count > max_count:\n                max_count = curr_count\n        return max_count\n",
    "    if not nums:\n        return 0\n    max_count = 0\n    count = {}\n    for num in nums:\n        if num in count:\n            count[num] += 1\n        else:\n            count[num] = 1\n        max_count = max(max_count, count[num])\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            max_count = max(max_count, count)\n            count = 1\n    max_count = max(max_count, count)\n    return max_count\n",
    "    if not nums:\n        return 0\n    nums.sort()\n    max_count = 1\n    count = 1\n    for i in range(1, len(nums)):\n        if nums[i] == nums[i - 1]:\n            count += 1\n        else:\n            count = 1\n        max_count = max(max_count, count)\n    return max_count\n",
    "    return max(nums, key=nums.count)\n",
    "    count = {}\n    for num in nums:\n        if num not in count:\n            count[num] = 0\n        count[num] += 1\n    max_count = 0\n    for num in count:\n        if count[num] > max_count:\n            max_count = count[num]\n    return max_count\n"
  ]
}
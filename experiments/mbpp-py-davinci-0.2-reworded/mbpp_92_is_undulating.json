{
  "name": "mbpp_92_is_undulating",
  "language": "py",
  "prompt": "def is_undulating(n: int) -> bool:\n    \"\"\"\n\tWrite a function to check whether the given number is undulating or not.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(1212121) == True\n    assert candidate(1991) == False\n    assert candidate(121) == True\n\ndef test_check():\n    check(is_undulating)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    n = str(n)\n    for i in range(1, len(n) - 1):\n        if n[i - 1] == n[i + 1]:\n            return True\n    return False\n\n",
    "    n = str(n)\n    for i in range(len(n) - 1):\n        if n[i] == n[i + 1]:\n            return False\n    return True\n\n",
    "    if n < 100:\n        return False\n    n = str(n)\n    for i in range(len(n) - 2):\n        if int(n[i]) % 2 == 0 and int(n[i + 1]) % 2 == 0:\n            return False\n        if int(n[i]) % 2 == 1 and int(n[i + 1]) % 2 == 1:\n            return False\n    return True\n\n",
    "    if n < 100:\n        return False\n    n = str(n)\n    for i in range(len(n) - 2):\n        if int(n[i]) % 2 == 0 and int(n[i + 1]) % 2 == 0 and int(n[i + 2]) % 2 == 0:\n            return False\n        if int(n[i]) % 2 == 1 and int(n[i + 1]) % 2 == 1 and int(n[i + 2]) % 2 == 1:\n            return False\n    return True\n\n",
    "    return all(\n        [\n            int(str(n)[i]) < int(str(n)[i + 1])\n            for i in range(len(str(n)) - 1)\n            if i % 2 == 0\n        ]\n    ) and all(\n        [\n            int(str(n)[i]) > int(str(n)[i + 1])\n            for i in range(len(str(n)) - 1)\n            if i % 2 == 1\n        ]\n    )\n\n",
    "    return n % 10 != 0 and n % 11 == 0\n\n",
    "    n = str(n)\n    for i in range(len(n) - 1):\n        if i % 2 == 0:\n            if n[i] > n[i + 1]:\n                return False\n        else:\n            if n[i] < n[i + 1]:\n                return False\n    return True\n\n",
    "    n = str(n)\n    for i in range(1, len(n) - 1):\n        if (n[i] > n[i - 1] and n[i] > n[i + 1]) or (n[i] < n[i - 1] and n[i] < n[i + 1]):\n            continue\n        else:\n            return False\n    return True\n\n",
    "    if n < 10:\n        return False\n    digits = [int(x) for x in str(n)]\n    for i in range(len(digits) - 2):\n        if digits[i] == digits[i + 2]:\n            return True\n    return False\n\n",
    "    return True if len(set(str(n))) == 1 else False\n\n",
    "    if n < 100:\n        return False\n    else:\n        n = str(n)\n        for i in range(len(n) - 2):\n            if int(n[i]) % 2 == 0 and int(n[i + 1]) % 2 == 0:\n                return False\n            if int(n[i]) % 2 != 0 and int(n[i + 1]) % 2 != 0:\n                return False\n        return True\n\n",
    "    if n < 10:\n        return False\n    digits = [int(i) for i in str(n)]\n    for i in range(1, len(digits) - 1):\n        if digits[i - 1] % 2 == 0 and digits[i + 1] % 2 == 0:\n            if digits[i - 1] < digits[i] > digits[i + 1]:\n                return True\n            if digits[i - 1] > digits[i] < digits[i + 1]:\n                return True\n    return False\n\n",
    "    if n < 100:\n        return False\n    n = str(n)\n    for i in range(len(n) - 2):\n        if int(n[i]) % 2 == 0 and int(n[i + 1]) % 2 == 0:\n            return False\n        if int(n[i]) % 2 != 0 and int(n[i + 1]) % 2 != 0:\n            return False\n    return True\n\n",
    "    return is_bouncy(n) and is_bouncy(int(str(n)[::-1]))\n\n",
    "    return is_bouncy(n) and is_bouncy(n, False)\n\n",
    "    s = str(n)\n    for i in range(1, len(s)):\n        if s[i] == s[i - 1]:\n            return False\n    return True\n\n",
    "    if n < 100:\n        return False\n    n = str(n)\n    for i in range(len(n) - 2):\n        if int(n[i]) % 2 == 0 and int(n[i + 1]) % 2 == 0:\n            return False\n        if int(n[i]) % 2 != 0 and int(n[i + 1]) % 2 != 0:\n            return False\n    return True\n\n",
    "    if n < 10:\n        return False\n    else:\n        num = str(n)\n        for i in range(1, len(num) - 1):\n            if int(num[i - 1]) < int(num[i]) > int(num[i + 1]):\n                return True\n        return False\n\n",
    "    if n < 100:\n        return False\n\n    n = str(n)\n    for i in range(1, len(n) - 1):\n        if n[i - 1] == n[i + 1]:\n            return True\n    return False\n\n",
    "    if n < 100:\n        return False\n    if n == 1000:\n        return False\n    n = str(n)\n    for i in range(len(n) - 2):\n        if int(n[i]) % 2 == 0:\n            if int(n[i + 1]) % 2 == 0:\n                if int(n[i + 2]) % 2 == 0:\n                    return False\n        if int(n[i]) % 2 == 1:\n            if int(n[i + 1]) % 2 == 1:\n                if int(n[i + 2]) % 2 == 1:\n                    return False\n    return True\n\n"
  ]
}
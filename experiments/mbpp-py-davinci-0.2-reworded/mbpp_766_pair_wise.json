{
  "name": "mbpp_766_pair_wise",
  "language": "py",
  "prompt": "from typing import List, Tuple\n\ndef pair_wise(l1: List[int]) -> List[Tuple[int]]:\n    \"\"\"\n\tWrite a function to return a list of all pairs of consecutive items in a given list.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_766_pair_wise.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate([1, 1, 2, 3, 3, 4, 4, 5]) == [(1, 1), (1, 2), (2, 3), (3, 3), (3, 4), (4, 4), (4, 5)]\n    assert candidate([1, 5, 7, 9, 10]) == [(1, 5), (5, 7), (7, 9), (9, 10)]\n    assert candidate([5, 1, 9, 7, 10]) == [(5, 1), (1, 9), (9, 7), (7, 10)]\n    assert candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == [(1, 2), (2, 3), (3, 4), (4, 5), (5, 6), (6, 7), (7, 8), (8, 9), (9, 10)]\n\ndef test_check():\n    check(pair_wise)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "completions": [
    "    return list(zip(l1, l1[1:]))\n",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1,2,3,4,5,6]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1,2,3,4,5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))\n",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1,2,3,4,5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1,2,3,4,5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n",
    "    return list(zip(l1[:-1], l1[1:]))\n\nprint(pair_wise([1,2,3,4,5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5, 6]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))",
    "    return list(zip(l1[:-1], l1[1:]))\n\nprint(pair_wise([1, 2, 3, 4, 5, 6]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5, 6]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1, 2, 3, 4, 5, 6]))",
    "    return [(l1[i], l1[i+1]) for i in range(len(l1)-1)]\n\nprint(pair_wise([1,2,3,4,5]))"
  ]
}
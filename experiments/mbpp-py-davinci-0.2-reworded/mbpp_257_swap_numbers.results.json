{
  "name": "mbpp_257_swap_numbers",
  "language": "py",
  "prompt": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_257_swap_numbers.py",
  "prompt_terminology": "reworded",
  "tests": "def check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
  "stop_tokens": [
    "\ndef",
    "\n#",
    "\nif",
    "\nclass"
  ],
  "results": [
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\nprint(swap_numbers(2, 1))\nprint(swap_numbers(2, 2))\nprint(swap_numbers(1, 1))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "(2, 1)\n(1, 2)\n(2, 2)\n(1, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\nprint(swap_numbers(3, 4))\nprint(swap_numbers(5, 6))\nprint(swap_numbers(7, 8))\nprint(swap_numbers(9, 10))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "(2, 1)\n(4, 3)\n(6, 5)\n(8, 7)\n(10, 9)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\nprint(swap_numbers(3, 4))\nprint(swap_numbers(5, 6))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "(2, 1)\n(4, 3)\n(6, 5)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\nprint(swap_numbers(3, 4))\nprint(swap_numbers(5, 6))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "(2, 1)\n(4, 3)\n(6, 5)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return b, a\n\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1666124035,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\n\nprint(swap_numbers(1, 2))\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "(2, 1)\n",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "from typing import Tuple\n\ndef swap_numbers(a: int, b: int) -> Tuple[int]:\n    \"\"\"\n\tWrite a function that takes in two numbers and returns a tuple with the second number and then the first number.\n\t\"\"\"\n    return (b, a)\ndef check(candidate):\n    assert candidate(10, 20) == (20, 10)\n    assert candidate(15, 17) == (17, 15)\n    assert candidate(100, 200) == (200, 100)\n\ndef test_check():\n    check(swap_numbers)\n\ntest_check()\n",
      "timestamp": 1665509733,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
name: HumanEval_80_is_happy
language: py
prompt: "def is_happy(s: str) -> bool:\n    \"\"\"You are given a string s.\n    Your\
  \ task is to check if the string is happy or not.\n    A string is happy if its\
  \ length is at least 3 and every 3 consecutive letters are distinct\n    For example:\n\
  \    >>> is_happy(a)\n    False\n    >>> is_happy(aa)\n    False\n    >>> is_happy(abcd)\n\
  \    True\n    >>> is_happy(aabb)\n    False\n    >>> is_happy(adb)\n    True\n\
  \    >>> is_happy(xyy)\n    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('a') == False\n    assert candidate('aa')\
  \ == False\n    assert candidate('abcd') == True\n    assert candidate('aabb') ==\
  \ False\n    assert candidate('adb') == True\n    assert candidate('xyy') == False\n\
  \    assert candidate('iopaxpoi') == True\n    assert candidate('iopaxioi') == False\n\
  \ndef test_check():\n    check(is_happy)\n\ntest_check()\n"
completions: ["    n = len(s)\n    if n < 3:\n        return False\n    else:\n  \
    \      for i in range(n - 2):\n            if s[i] == s[i + 1] or s[i] == s[i\
    \ + 2] or s[i + 1] == s[i + 2]:\n                return False\n        return\
    \ True\n\n", "    if len(s) < 3:\n        return False\n    for i in range(len(s)\
    \ - 2):\n        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i +\
    \ 2]:\n            return False\n    return True\n\n", "    if len(s) < 3:\n \
    \       return False\n    for i in range(len(s) - 2):\n        if s[i] == s[i\
    \ + 1] == s[i + 2]:\n            return False\n    return True\n\n", "    if len(s)\
    \ < 3:\n        return False\n    for i in range(len(s) - 2):\n        if s[i]\
    \ == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2]:\n            return\
    \ False\n    return True", "    # find every 3 consecutive letters and store in\
    \ a list\n    list_of_3 = [s[i:i + 3] for i in range(len(s) - 2)]\n    # check\
    \ if every letter is distinct and string length is at least 3\n    for i in list_of_3:\n\
    \        if len(i) >= 3 and len(set(i)) == 3:\n            return True\n     \
    \   else:\n            return False\n\n", "    if len(s) < 3:\n        return\
    \ False\n    else:\n        for i in range(0, len(s) - 2):\n            if s[i]\
    \ == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2]:\n                return\
    \ False\n        return True\n", "    # your code here\n    for i in range(len(s)\
    \ - 2):\n        if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i +\
    \ 2]:\n            return False\n    return True\n\n", "    return False\n\n",
  "    return (\n        len(s) >= 3\n        and all(s[i] != s[i + 1] and s[i + 1]\
    \ != s[i + 2] and s[i] != s[i + 2] for i in range(len(s) - 2))\n    )\n\n", " \
    \   return False\n\n", "    if len(s) < 3:\n        return False\n    for i in\
    \ range(2, len(s)):\n        if s[i] == s[i - 1] and s[i] == s[i - 2]:\n     \
    \       return False\n    return True\n\n", "    if len(s) < 3:\n        return\
    \ False\n    else:\n        for i in range(len(s) - 2):\n            if s[i] ==\
    \ s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i + 2]:\n                return\
    \ False\n        return True\n\n", "    n = len(s)\n    if n < 3:\n        return\
    \ False\n    elif n == 3:\n        return s[0] != s[1] and s[1] != s[2] and s[0]\
    \ != s[2]\n    else:\n        for i in range(n - 2):\n            if s[i] == s[i\
    \ + 1] or s[i + 1] == s[i + 2] or s[i] == s[i + 2]:\n                return False\n\
    \        return True\n\n", "    if len(s) < 3:\n        return False\n    s =\
    \ s.upper()\n    count = 0\n    while count < len(s) - 2:\n        if s[count]\
    \ == s[count + 1] == s[count + 2]:\n            return False\n        count +=\
    \ 1\n    return True\n\n", "    # init a result list\n    res = []\n    for i\
    \ in range(len(s) - 2):\n        # if not in result list\n        if s[i] != s[i\
    \ + 1] and s[i + 1] != s[i + 2] and s[i] != s[i + 2]:\n            res.append(s[i])\n\
    \    return True if len(res) > 2 else False\n\n", "    return False\n", "    if\
    \ len(s) < 3:\n        return False\n    else:\n        for i in range(len(s)\
    \ - 2):\n            if s[i] == s[i + 1] or s[i] == s[i + 2] or s[i + 1] == s[i\
    \ + 2]:\n                return False\n    return True\n\n", "    for i in range(len(s)\
    \ - 2):\n        if s[i] == s[i + 1] == s[i + 2]:\n            return False\n\
    \    return True\n\n", "    return False\n", "    return len(s) >= 3 and len(set(s[i:i\
    \ + 3])) == 3\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

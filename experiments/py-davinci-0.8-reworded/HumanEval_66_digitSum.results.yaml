language: py
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # return sum(ord(n) for n in s if n.isupper())\n    return sum(map(ord,\
    \ (n for n in s if n.isupper())))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    s = s.upper()\n    return sum(map(ord,\
    \ [i for i in s if i.isupper()]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl__eepoq.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpl__eepoq.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpl__eepoq.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    ret = 0\n    for i in s:\n        if i.isupper():\n         \
    \   ret += ord(i)\n    return ret\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Sum up digits\n    return sum(ord(c) for c in s if c.isupper())\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    res = 0\n    for i in s:\n \
    \       if i.isupper():\n            res += ord(i)\n    return res\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, map(ord, filter(str.isupper, s))))\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if len(s) == 0:\n        return 0\n    elif s[0].isupper():\n\
    \        return ord(s[0]) + digitSum(s[1:])\n    else:\n        return digitSum(s[1:])\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda x: ord(x), filter(lambda x: x.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for el in s:\n        if 64 < ord(el) < 91:\n  \
    \          sum += ord(el)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    assert isinstance(s, str)\n\n    code_sum = 0\n    for char in\
    \ s:\n        if 'A' <= char <= 'Z':\n            code_sum += ord(char)\n    return\
    \ code_sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    summ = 0\n    for character in s:\n        if character.isupper():\n\
    \            summ += ord(character)\n    return summ\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, (c for c in list(s) if c.isupper())))\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphx41e810.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmphx41e810.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmphx41e810.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmphx41e810.py\"\
    , line 20, in digitSum\n    return sum(map(int, (c for c in list(s) if c.isupper())))\n\
    ValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, [x for x in s if x.isupper()]))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for char in s:\n        if char.isupper():\n \
    \           total += ord(char)\n    return total\n\ndef check(candidate):\n  \
    \  assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplep9k1e1.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplep9k1e1.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplep9k1e1.py\", line 24,\
    \ in check\n    assert candidate('') == 0\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # the sum of the upper characters in the string\n    sum = 0\n\
    \    # looping through the string\n    for i in s:\n        # checking if the\
    \ character is upper-case ASCII\n        if 'A' <= i <= 'Z':\n            # adding\
    \ the ASCII value of the character to the sum\n            sum += ord(i)\n   \
    \ return sum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert\
    \ candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.upper()\n    return sum(ord(c) for c in s if c.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk6bl9fdr.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpk6bl9fdr.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpk6bl9fdr.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    total = 0\n    for c in s:\n        if c.isupper():\n       \
    \     total += ord(c)\n    return total\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # the first way\n    # return sum(ord(x) for x in s if 65 <=\
    \ ord(x) <= 90)\n\n    # the second way\n    return sum(ord(x) for x in s if x.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(filter(lambda x: x.isupper(), s))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqkqi2zod.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpqkqi2zod.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpqkqi2zod.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpqkqi2zod.py\"\
    , line 20, in digitSum\n    return sum(filter(lambda x: x.isupper(), s))\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = [i for i in s if i.isupper()]\n    return sum(list(map(ord,\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.upper()\n    s = list(s)\n    letter = [i for i in s if\
    \ i.isalpha()]\n    sum_letter = [ord(i) for i in letter]\n    return sum(sum_letter)\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe7agdhf1.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpe7agdhf1.py\", line 36,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpe7agdhf1.py\", line 27,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda s: ord(s), filter(lambda c: c.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    ascii_set = set([chr(ascii_i) for ascii_i in range(65, 91)])\n\
    \    return sum([ord(s_i) for s_i in s if s_i in ascii_set])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda x: ord(x), filter(lambda x: x.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(c for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbi1_8a9w.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbi1_8a9w.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbi1_8a9w.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpbi1_8a9w.py\"\
    , line 20, in digitSum\n    return sum(c for c in s if c.isupper())\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(letter) for letter in s if letter.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    for ch in s:\n        if ch.isupper():\n       \
    \     res += ord(ch)\n    return res\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(char for char in s if char.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplhl7v15e.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmplhl7v15e.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmplhl7v15e.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmplhl7v15e.py\"\
    , line 20, in digitSum\n    return sum(char for char in s if char.isupper())\n\
    TypeError: unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    summa = 0\n    for i in s:\n        if i.isupper():\n       \
    \     summa += ord(i)\n    return summa\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(list(map(lambda x: ord(x) if ord(x) >= 65 and ord(x)\
    \ <= 90 else 0, s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    upper_sum = 0\n    for char in s:\n        if char.isupper():\n\
    \            upper_sum += ord(char)\n    return upper_sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    for c in s:\n        if c.isupper():\n         \
    \   res += ord(c)\n    return res\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda ch: ord(ch) if ch.isupper() else 0, s))\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    try:\n        return sum(ord(c) for c in s if c.isupper())\n\
    \    except Exception as e:\n        return 0\n\n\ndef check(candidate):\n   \
    \ assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    new_list = []\n    for x in s:\n        new_list.append(ord(x))\n\
    \    return sum(x for x in new_list if x >= 65 and x <= 90)\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    for i in s:\n        if i.isupper():\n         \
    \   res += ord(i)\n    return res\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if (ord(i) >= 65 and ord(i)\
    \ <= 90):\n            sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # get ASCII codes of uppercase letters in a string\n    s = list(map(ord,\
    \ s))\n    s = list(filter(lambda x: x > 64 and x < 91, s))\n    return sum(s)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda ch: ord(ch), filter(lambda ch: ch.isupper(),\
    \ s)))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.upper()\n    return sum(ord(c) for c in s if c.isupper())\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv6nnk67y.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpv6nnk67y.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpv6nnk67y.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for char in s:\n        if char.isupper():\n   \
    \         sum += ord(char)\n    return sum\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    digit_sum = 0\n    for c in s:\n        digit_sum += ord(c)\n\
    \    return digit_sum\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7fg_ag02.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7fg_ag02.py\", line 37,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp7fg_ag02.py\", line 28,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    assert isinstance(s, str)\n    return sum(ord(char) for char\
    \ in s if char.isupper())\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    assert isinstance(s, str)\n    assert (s.isascii())\n    return\
    \ sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(l) for l in s if l.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    from string import ascii_uppercase\n    return sum(ord(i) for\
    \ i in s if i in ascii_uppercase)\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(upper, s))\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjdthuohc.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpjdthuohc.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpjdthuohc.py\", line 24,\
    \ in check\n    assert candidate('') == 0\n  File \"/tmp/tmpjdthuohc.py\", line\
    \ 20, in digitSum\n    return sum(map(upper, s))\nNameError: name 'upper' is not\
    \ defined. Did you mean: 'super'?\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(1 for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfcoxl07j.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpfcoxl07j.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpfcoxl07j.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    count = 0\n    for elem in s:\n        if ord(elem) > 64 and\
    \ ord(elem) < 91:\n            count += ord(elem)\n    return count\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda x: ord(x) - ord('a') + 1, filter(lambda\
    \ x: x.isupper(), s)))\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpajgib8s5.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpajgib8s5.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpajgib8s5.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    for c in s:\n        if c.isupper():\n         \
    \   res += ord(c)\n    return res\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda c: ord(c) if c.isupper() else 0, s))\n\n\
    \ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # all codes for upper case\n    return sum(ord(i) for i in s\
    \ if i.isupper())\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(i for i in (ord(c) for c in s) if i > 64 and i < 91)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(c for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbi1_8a9w.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbi1_8a9w.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbi1_8a9w.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpbi1_8a9w.py\"\
    , line 20, in digitSum\n    return sum(c for c in s if c.isupper())\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    upper_chars = [x for x in s if x.isupper()]\n    return sum(map(ord,\
    \ upper_chars))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n  \
    \  assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n    assert\
    \ candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n    assert\
    \ candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?') == 151\n\
    \    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, s))\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3q4o8p22.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp3q4o8p22.py\", line 32,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp3q4o8p22.py\", line 23,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.upper()\n    return sum(map(ord, list(filter(lambda i:\
    \ i.isupper(), s))))\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1fmznj02.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp1fmznj02.py\", line 35,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp1fmznj02.py\", line 26,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n    \n    \ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(list(map(lambda x: ord(x) - 32, filter(lambda x: x.isupper(),\
    \ s))))\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9iquv_0r.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp9iquv_0r.py\", line 32,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp9iquv_0r.py\", line 23,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\n@case\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjovh8990.py\", line\
    \ 23, in <module>\n    @case\nNameError: name 'case' is not defined. Did you mean:\
    \ 'False'?\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(int, filter(lambda x: x.isupper(), s)))\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd4358m36.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpd4358m36.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpd4358m36.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpd4358m36.py\"\
    , line 20, in digitSum\n    return sum(map(int, filter(lambda x: x.isupper(),\
    \ s)))\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(c for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbi1_8a9w.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbi1_8a9w.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbi1_8a9w.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpbi1_8a9w.py\"\
    , line 20, in digitSum\n    return sum(c for c in s if c.isupper())\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = s.upper()\n    summ = 0\n    for i in s:\n        if i.isalpha():\n\
    \            summ += ord(i)\n    return summ\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h56h8j6.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7h56h8j6.py\", line 39,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmp7h56h8j6.py\", line 30,\
    \ in check\n    assert candidate('abAB') == 131\nAssertionError\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(i for i in map(ord, s) if 65 <= i <= 90)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = 0\n    for char in s:\n        if char.isupper():\n   \
    \         res += ord(char)\n    return res\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    digitSum = 0\n    # ASCII codes\n    # 65 A 90 Z\n    # 97 a\
    \ 122 z\n    for i in s:\n        if i.isupper():\n            digitSum += ord(i)\n\
    \    return digitSum\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    if not s:\n        return 0\n    return sum(ord(i) for i in s\
    \ if i.isupper())\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(char for char in s if char.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzvu9qt17.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpzvu9qt17.py\", line 33,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpzvu9qt17.py\", line 24,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpzvu9qt17.py\"\
    , line 20, in digitSum\n    return sum(char for char in s if char.isupper())\n\
    TypeError: unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    #return sum(ord(i) for i in s if i.isupper())\n    return sum(ord(i)\
    \ for i in s if i.isupper())\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sm = 0\n    for ch in s:\n        if ch.isupper():\n        \
    \    sm += ord(ch)\n    return sm\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(c if c.isupper() else 0 for c in s)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbxq873vk.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpbxq873vk.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpbxq873vk.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpbxq873vk.py\"\
    , line 20, in digitSum\n    return sum(c if c.isupper() else 0 for c in s)\nTypeError:\
    \ unsupported operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    return sum(ord(c) for c in s if c.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if ord(i) >= 65 and ord(i) <= 90)\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if ord(c) in range(65, 91))\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(int(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn1dvtqc0.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpn1dvtqc0.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpn1dvtqc0.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpn1dvtqc0.py\"\
    , line 20, in digitSum\n    return sum(int(i) for i in s if i.isupper())\n  File\
    \ \"/tmp/tmpn1dvtqc0.py\", line 20, in <genexpr>\n    return sum(int(i) for i\
    \ in s if i.isupper())\nValueError: invalid literal for int() with base 10: 'A'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, list(filter(str.isupper, s))))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # total = 0\n    # for c in s:\n    #     if c.isupper():\n \
    \   #         total += ord(c)\n    # return total\n    return sum(ord(c) for c\
    \ in s if c.isupper())\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n\
    \    assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(x for x in map(ord, s) if x > 64 and x < 91)\n\n\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # Solution 1\n    # res = 0\n    # for c in s:\n    #     if\
    \ c.isupper():\n    #         res += ord(c)\n    # return res\n\n    # Solution\
    \ 2\n    # return sum(ord(c) for c in s if c.isupper())\n\n    # Solution 3\n\
    \    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for c in s:\n        if c.isupper():\n         \
    \   sum += ord(c)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(ord, filter(str.isupper, s)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    out = 0\n    for c in s:\n        if c.isupper():\n         \
    \   out += ord(c)\n    return out\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(x) for x in s if x.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(list(map(ord, filter(str.isupper, s))))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(i) for i in s if i.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_ = 0\n    for c in s:\n        if c.isupper():\n        \
    \    sum_ += ord(c)\n    return sum_\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    res = sum(map(ord, filter(str.isupper, s)))\n    return res\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: -1
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(filter(str.isupper, s))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt12wqwex.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpt12wqwex.py\", line 34,\
    \ in test_check\n    check(digitSum)\n  File \"/tmp/tmpt12wqwex.py\", line 25,\
    \ in check\n    assert candidate('abAB') == 131\n  File \"/tmp/tmpt12wqwex.py\"\
    , line 20, in digitSum\n    return sum(filter(str.isupper, s))\nTypeError: unsupported\
    \ operand type(s) for +: 'int' and 'str'\n"
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    summ = 0\n    for ch in s:\n        code = ord(ch)\n        if\
    \ 65 <= code <= 90:\n            summ += code\n    return summ\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_ = 0\n    for c in s:\n        if 65 <= ord(c) <= 90:\n \
    \           sum_ += ord(c)\n    return sum_\ndef check(candidate):\n    assert\
    \ candidate('') == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd')\
    \ == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(char) for char in s if char.isupper())\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum = 0\n    for i in s:\n        if i.isupper():\n         \
    \   sum += ord(i)\n    return sum\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == 0\n    assert candidate('abAB') == 131\n    assert candidate('abcCd') ==\
    \ 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld') ==\
    \ 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # \u0441\u0430\u043C\u043E\u0435 \u043F\u0440\u043E\u0441\u0442\
    \u043E\u0435, \u043D\u043E \u043D\u0435 \u043E\u0447\u0435\u043D\u044C \u044D\u0444\
    \u0444\u0435\u043A\u0442\u0438\u0432\u043D\u043E\u0435 \u0440\u0435\u0448\u0435\
    \u043D\u0438\u0435\n    \"\"\"\n    r_sum = 0\n    for c in s:\n        if c.isupper():\n\
    \            r_sum += ord(c)\n    return r_sum\n    \"\"\"\n    # \u0431\u043E\
    \u043B\u0435\u0435 \u044D\u0444\u0444\u0435\u043A\u0442\u0438\u0432\u043D\u043E\
    \u0435, \u043D\u043E \u043D\u0435\u043C\u043D\u043E\u0433\u043E \u0441\u043B\u043E\
    \u0436\u043D\u0435\u0435\n    r_sum = 0\n    for c in s:\n        if ord(c) >=\
    \ 65 and ord(c) <= 90:\n            r_sum += ord(c)\n    return r_sum\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(map(lambda l: ord(l) if l.isupper() else 0, s))\n\
    def check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    s = list(s)\n    total = 0\n    for c in s:\n        if 'A' <=\
    \ c <= 'Z':\n            total += ord(c)\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    i = 0\n    total = 0\n    while i < len(s):\n        if s[i].isupper():\n\
    \            total += ord(s[i])\n        i += 1\n    return total\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(letter) for letter in s if letter.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    # your code here\n    return sum(ord(c) for c in s if c.isupper())\n\
    \n\ndef check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(ch) for ch in s if ch.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(ord(c) for c in s if c.isupper())\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    sum_of_digits = 0\n    for digit in s:\n        if digit.isupper():\n\
    \            sum_of_digits += ord(digit)\n    return sum_of_digits\n\n\ndef check(candidate):\n\
    \    assert candidate('') == 0\n    assert candidate('abAB') == 131\n    assert\
    \ candidate('abcCd') == 67\n    assert candidate('helloE') == 69\n    assert candidate('woArBld')\
    \ == 131\n    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are\
    \ yOu?') == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(x for x in map(ord, s) if 65 <= x <= 90)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == 0\n    assert candidate('abAB')\
    \ == 131\n    assert candidate('abcCd') == 67\n    assert candidate('helloE')\
    \ == 69\n    assert candidate('woArBld') == 131\n    assert candidate('aAaaaXa')\
    \ == 153\n    assert candidate(' How are yOu?') == 151\n    assert candidate('You\
    \ arE Very Smart') == 327\n\ndef test_check():\n    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329
- exit_code: 0
  program: "def digitSum(s: str) -> int:\n    \"\"\"Task\n    Write a function that\
    \ takes a string as input and returns the sum of the upper characters only'\n\
    \    ASCII codes.\n\n    Examples:\n    >>> digitSum('')\n    0\n    >>> digitSum('abAB')\n\
    \    131\n    >>> digitSum('abcCd')\n    67\n    >>> digitSum('helloE')\n    69\n\
    \    >>> digitSum('woArBld')\n    131\n    >>> digitSum('aAaaaXa')\n    153\n\
    \    \"\"\"\n    return sum(\n        ord(c)\n        for c in s\n        if 'A'\
    \ <= c <= 'Z'\n    )\n\n\ndef check(candidate):\n    assert candidate('') == 0\n\
    \    assert candidate('abAB') == 131\n    assert candidate('abcCd') == 67\n  \
    \  assert candidate('helloE') == 69\n    assert candidate('woArBld') == 131\n\
    \    assert candidate('aAaaaXa') == 153\n    assert candidate(' How are yOu?')\
    \ == 151\n    assert candidate('You arE Very Smart') == 327\n\ndef test_check():\n\
    \    check(digitSum)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823329

name: HumanEval_36_fizz_buzz
language: py
prompt: "def fizz_buzz(n: int) -> int:\n    \"\"\"Return the number of times the digit\
  \ 7 appears in integers less than n which are divisible by 11 or 13.\n    >>> fizz_buzz(50)\n\
  \    0\n    >>> fizz_buzz(78)\n    2\n    >>> fizz_buzz(79)\n    3\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(50) == 0\n    assert candidate(78)\
  \ == 2\n    assert candidate(79) == 3\n    assert candidate(100) == 3\n    assert\
  \ candidate(200) == 6\n    assert candidate(4000) == 192\n    assert candidate(10000)\
  \ == 639\n    assert candidate(100000) == 8026\n\ndef test_check():\n    check(fizz_buzz)\n\
  \ntest_check()\n"
completions: ["    x = 0\n    for i in range(n):\n        if i % 11 == 0 or i % 13\
    \ == 0:\n            x += str(i).count('7')\n    return x\n", "    count = 0\n\
    \    for i in range(n):\n        if i % 11 == 0 or i % 13 == 0:\n            if\
    \ \"7\" in str(i):\n                count += 1\n    return count\n", "    count\
    \ = 0\n    for num in range(1, n):\n        if num % 11 == 0 or num % 13 == 0:\n\
    \            num = str(num)\n            count += num.count('7')\n    return count\n",
  "    return sum(1 for i in range(n) if i % 11 == 0 or i % 13 == 0 and \"7\" in str(i))\n\
    \    # recall that str() converts an integer into a string.\n\n", "    \"*** YOUR\
    \ CODE HERE ***\"\n    counter = 0\n    for x in range(n):\n        if x % 11\
    \ == 0 or x % 13 == 0:\n            if \"7\" in str(x):\n                counter\
    \ += 1\n    return counter\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\
    \n", "    num_7s = 0\n    for i in range(1, n):\n        if i % 11 == 0 or i %\
    \ 13 == 0:\n            for digit in str(i):\n                if digit == '7':\n\
    \                    num_7s += 1\n    return num_7s\n\nprint(fizz_buzz(79))",
  "    i = 1\n    count = 0\n    while i < n:\n        if i % 11 == 0 or i % 13 ==\
    \ 0:\n            num_str = str(i)\n            count += num_str.count('7')\n\
    \        i += 1\n    return count\n\n", "    i = 0\n    count = 0\n    while i\
    \ < n:\n        if i % 11 == 0 or i % 13 == 0:\n            j = i\n          \
    \  while j > 0:\n                if j % 10 == 7:\n                    count +=\
    \ 1\n                j = j // 10\n        i += 1\n    return count\n\n", "   \
    \ count = 0\n    for i in range(1, n + 1):\n        if i % 11 == 0 or i % 13 ==\
    \ 0:\n            count += i // 10 ** count_digits(i)\n    return count\n\nprint(fizz_buzz(input()))",
  "    if n > 0:\n        n -= 1\n    counter = 0\n    while n > 0:\n        if n\
    \ % 11 == 0 or n % 13 == 0:\n            str_num = str(n)\n            for digit\
    \ in str_num:\n                if digit == '7':\n                    counter +=\
    \ 1\n        n -= 1\n    return counter\n\n", "    count = 0\n    for i in range(n):\n\
    \        if i % 11 == 0 or i % 13 == 0:\n            if '7' in str(i):\n     \
    \           count += 1\n    return count\n\n", "    count = 0\n    for i in range(1,\
    \ n):\n        if i % 11 == 0 or i % 13 == 0:\n            count += str(i).count('7')\n\
    \    return count\n\n", "    res = 0\n    for i in range(1, n):\n        if i\
    \ % 11 == 0 or i % 13 == 0:\n            res += str(i).count('7')\n    return\
    \ res\nprint(fizz_buzz(int(input())))", "    return sum([int(n) for n in str(range(n))\
    \ if int(n) in [7] and n % 11 == 0 or n % 13 == 0])\n", "    if n == 1:\n    \
    \    return 0\n    elif n % 13 == 0 or n % 11 == 0:\n        return int('7' in\
    \ str(n)) + fizz_buzz(n - 1)\n    else:\n        return fizz_buzz(n - 1)\n\nprint(fizz_buzz(50))\n\
    print(fizz_buzz(78))\nprint(fizz_buzz(79))\nprint(fizz_buzz(100))\nprint(fizz_buzz(130))\n\
    print(fizz_buzz(133))", "    count = 0\n    for i in range(n):\n        if i %\
    \ 11 == 0 or i % 13 == 0:\n            count += i % 10\n            count += (i\
    \ // 10) % 10\n            count += (i // 100) % 10\n    return count\n\n", " \
    \   count = 0\n    for i in range(0, n):\n        if (i % 11 == 0 or i % 13 ==\
    \ 0) and contains_digit(i, 7):\n            count += 1\n    return count\n\n",
  "    seven_count = 0\n    for i in range(n):\n        if i % 11 == 0 or i % 13 ==\
    \ 0:\n            seven_count += str(i).count('7')\n    return seven_count\n",
  "    total = 0\n    for i in range(n):\n        if (i % 11 == 0 or i % 13 == 0)\
    \ and '7' in str(i):\n            total += 1\n    return total\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

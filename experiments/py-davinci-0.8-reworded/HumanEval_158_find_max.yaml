name: HumanEval_158_find_max
language: py
prompt: "from typing import List\n\ndef find_max(words: List[str]) -> str:\n    \"\
  \"\"Write a function that accepts a list of strings.\n    The list contains different\
  \ words. Return the word with maximum number\n    of unique characters. If multiple\
  \ strings have maximum number of unique\n    characters, return the one which comes\
  \ first in lexicographical order.\n\n    >>> find_max(['name', 'of', 'string'])\n\
  \    'string'\n    >>> find_max(['name', 'enam', 'game'])\n    'enam'\n    >>> find_max(['aaaaaaa',\
  \ 'bb', 'cc'])\n    'aaaaaaa'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(['name', 'of', 'string']) == 'string'\n\
  \    assert candidate(['name', 'enam', 'game']) == 'enam'\n    assert candidate(['aaaaaaa',\
  \ 'bb', 'cc']) == 'aaaaaaa'\n    assert candidate(['abc', 'cba']) == 'abc'\n   \
  \ assert candidate(['play', 'this', 'game', 'of', 'footbott']) == 'footbott'\n \
  \   assert candidate(['we', 'are', 'gonna', 'rock']) == 'gonna'\n    assert candidate(['we',\
  \ 'are', 'a', 'mad', 'nation']) == 'nation'\n    assert candidate(['this', 'is',\
  \ 'a', 'prrk']) == 'this'\n    assert candidate(['b']) == 'b'\n    assert candidate(['play',\
  \ 'play', 'play']) == 'play'\n\ndef test_check():\n    check(find_max)\n\ntest_check()\n"
completions: ["    if len(words) == 0:\n        return ''\n    elif len(words) ==\
    \ 1:\n        return words[0]\n    else:\n        max_word = ''\n        max_len\
    \ = 0\n        for word in words:\n            if len(set(word)) > max_len:\n\
    \                max_word = word\n                max_len = len(set(word))\n \
    \       return max_word", "    max_word = words[0]\n    for word in words:\n \
    \       if len(set(word)) > len(set(max_word)):\n            max_word = word\n\
    \    return max_word\n", "    max_word = words[0]\n    max_unique = len(set(words[0]))\n\
    \    for word in words[1:]:\n        if len(set(word)) > max_unique:\n       \
    \     max_unique = len(set(word))\n            max_word = word\n    return max_word\n",
  "    max_word = ''\n    max_letters = 0\n    for word in words:\n        letters\
    \ = set(word)\n        if len(letters) > max_letters:\n            max_letters\
    \ = len(letters)\n            max_word = word\n    return max_word", "    max_num\
    \ = 0\n    max_word = \"\"\n    for word in words:\n        unique_num = len(set(word))\n\
    \        if unique_num > max_num:\n            max_num = unique_num\n        \
    \    max_word = word\n        elif unique_num == max_num:\n            if word\
    \ < max_word:\n                max_word = word\n    return max_word\n", "    max_num_unique\
    \ = 0\n    max_string = \"\"\n    for word in words:\n        word_set = set(word)\n\
    \        word_set_size = len(word_set)\n        if word_set_size > max_num_unique:\n\
    \            max_num_unique = word_set_size\n            max_string = word\n \
    \       elif word_set_size == max_num_unique:\n            max_string = min(max_string,\
    \ word)\n    return max_string\n", "    max_word = None\n    max_length = -1\n\
    \    for word in words:\n        unique_set = set(word)\n        if len(unique_set)\
    \ > max_length:\n            max_length = len(unique_set)\n            max_word\
    \ = word\n    return max_word\n", "    # Your code goes here\n    count = 0\n\
    \    for i in words:\n        if(len(set(i)) > count):\n            count = len(set(i))\n\
    \            word = i\n    return word\n", "    max_word = \"\"\n    max_len =\
    \ 0\n    for word in words:\n        curr_len = len(set(word))\n        if curr_len\
    \ > max_len:\n            max_len = curr_len\n            max_word = word\n  \
    \  return max_word\n", "    max_word = words[0]\n    max_set = set(max_word)\n\
    \    for word in words[1:]:\n        if len(set(word)) > len(max_set):\n     \
    \       max_word = word\n            max_set = set(word)\n    return max_word\n",
  "    words.sort()\n    max_len = 0\n    max_word = ''\n    for word in words:\n\
    \        wset = set(word)\n        wlen = len(wset)\n        if wlen > max_len:\n\
    \            max_len = wlen\n            max_word = word\n    return max_word\n",
  "    max_set = set()\n    max_word = words[0]\n    for word in words:\n        temp_set\
    \ = set(word)\n        if len(temp_set) > len(max_set):\n            max_set =\
    \ temp_set\n            max_word = word\n        elif len(temp_set) == len(max_set):\n\
    \            if word < max_word:\n                max_word = word\n    return\
    \ max_word\n", "    # TODO\n    count=0\n    result=''\n    for i in words:\n\
    \        if count<len(set(i)):\n            count=len(set(i))\n            result=i\n\
    \    return result\n", '    return max(words, key=lambda w: len(set(w)))', " \
    \   max_unique = 0\n    max_unique_w = ''\n    for w in words:\n        w_unique\
    \ = len(set(w))\n        if w_unique > max_unique:\n            max_unique = w_unique\n\
    \            max_unique_w = w\n    return max_unique_w\n", "    word_max = words[0]\n\
    \    set_len_max = len(set(words[0]))\n    for word in words[1:]:\n        if\
    \ len(set(word)) > set_len_max:\n            word_max = word\n            set_len_max\
    \ = len(set(word))\n    return word_max\n", "    max_unique = 0\n    result =\
    \ ''\n    for word in words:\n        unique = len(set(word))\n        if unique\
    \ > max_unique:\n            max_unique = unique\n            result = word\n\
    \        elif unique == max_unique:\n            if word < result:\n         \
    \       result = word\n    return result\n\nprint(find_max(['name', 'of', 'string']))\n\
    print(find_max(['name', 'enam', 'game']))\nprint(find_max(['aaaaaaa', 'bb', 'cc']))",
  "    maximum = [words[0], len(set(words[0]))]\n    for i in range(1, len(words)):\n\
    \        s = set(words[i])\n        if len(s) > maximum[1]:\n            maximum\
    \ = [words[i], len(s)]\n        elif len(s) == maximum[1]:\n            if words[i]\
    \ < maximum[0]:\n                maximum = [words[i], len(s)]\n    return maximum[0]\n",
  "    max_count = -1\n    max_word = ''\n    for word in words:\n        unique_characters\
    \ = set(word)\n        if len(unique_characters) > max_count:\n            max_count\
    \ = len(unique_characters)\n            max_word = word\n    return max_word\n",
  "    if len(words) == 0:\n        return None\n    max_word = words[0]\n    max_char\
    \ = len(set(words[0]))\n    for word in words[1:]:\n        if len(set(word))\
    \ > max_char:\n            max_word = word\n            max_char = len(set(word))\n\
    \    return max_word\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

language: py
name: HumanEval_19_sort_numbers
results:
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = [numbers.split()]\n\
    \    d = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six':\
    \ 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = sorted(numbers, key=lambda\
    \ numbers: d[numbers])\n    print(' '.join(numbers))\n\nsort_numbers('three one\
    \ five')\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp22qni8nr.py\", line\
    \ 13, in <module>\n    sort_numbers('three one five')\n  File \"/tmp/tmp22qni8nr.py\"\
    , line 10, in sort_numbers\n    numbers = sorted(numbers, key=lambda numbers:\
    \ d[numbers])\n  File \"/tmp/tmp22qni8nr.py\", line 10, in <lambda>\n    numbers\
    \ = sorted(numbers, key=lambda numbers: d[numbers])\nTypeError: unhashable type:\
    \ 'list'\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    sorted_str = \" \".join(sorted(numbers.split(\"\
    \ \"), key=word_to_number))\n    return sorted_str\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdj3u67je.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpdj3u67je.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdj3u67je.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpdj3u67je.py\"\
    , line 8, in sort_numbers\n    sorted_str = \" \".join(sorted(numbers.split(\"\
    \ \"), key=word_to_number))\nNameError: name 'word_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=DIGITS.get)\n    return ' '.join(numbers)\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp28x2zc2_.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp28x2zc2_.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp28x2zc2_.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp28x2zc2_.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=DIGITS.get)\nNameError:\
    \ name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(len(numbers)):\n        for j in range(i, len(numbers)):\n\
    \            if letters_to_numbers[numbers[i]] > letters_to_numbers[numbers[j]]:\n\
    \                numbers[i], numbers[j] = numbers[j], numbers[i]\n    return '\
    \ '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5qsl_0xm.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp5qsl_0xm.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5qsl_0xm.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5qsl_0xm.py\"\
    , line 11, in sort_numbers\n    if letters_to_numbers[numbers[i]] > letters_to_numbers[numbers[j]]:\n\
    NameError: name 'letters_to_numbers' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    digit_to_num = {\n       \
    \ 'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n    \
    \    'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9\n    }\n    numbers = list(map(lambda\
    \ x: digit_to_num[x], numbers.split()))\n    numbers.sort()\n    return ' '.join(map(lambda\
    \ x: str(x), numbers))\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4u2jn15d.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4u2jn15d.py\", line 33,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4u2jn15d.py\", line\
    \ 27, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # we can use the digit_map\
    \ table to translate the input string from letters to integers\n    # numbers\
    \ will be a list of numbers in their numeric form\n    numbers = [digit_map[char]\
    \ for char in numbers.split(' ')]\n    # sort the numbers\n    numbers.sort()\n\
    \    # convert the numbers back to the word-numbers\n    num_strings = [word_map[num]\
    \ for num in numbers]\n    # join the num_strings together with a space between\
    \ them\n    return ' '.join(num_strings)\n\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpixbes3tk.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpixbes3tk.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpixbes3tk.py\", line\
    \ 21, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpixbes3tk.py\"\
    , line 10, in sort_numbers\n    numbers = [digit_map[char] for char in numbers.split('\
    \ ')]\n  File \"/tmp/tmpixbes3tk.py\", line 10, in <listcomp>\n    numbers = [digit_map[char]\
    \ for char in numbers.split(' ')]\nNameError: name 'digit_map' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=number_to_digit)\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2caam0ta.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2caam0ta.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2caam0ta.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp2caam0ta.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=number_to_digit)\nNameError: name\
    \ 'number_to_digit' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split()\n\
    \    res = ''\n    mapper = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four':\
    \ 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    for word in\
    \ sorted(words, key=lambda x: mapper[x]):\n        res += ' ' + word\n    return\
    \ res.strip()\n\n\ndef check(candidate):\n    assert candidate('') == ''\n   \
    \ assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda num: int(DIGITS[num]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp73veuqqe.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp73veuqqe.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp73veuqqe.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp73veuqqe.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda num: int(DIGITS[num]))\n\
    \  File \"/tmp/tmp73veuqqe.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ num: int(DIGITS[num]))\nNameError: name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # your code here\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda word: word_to_number(word)))\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5rxvzg_h.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp5rxvzg_h.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5rxvzg_h.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5rxvzg_h.py\"\
    , line 9, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ word: word_to_number(word)))\n  File \"/tmp/tmp5rxvzg_h.py\", line 9, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda word: word_to_number(word)))\n\
    NameError: name 'word_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = [convert_numeral_to_number(number)\
    \ for number in numbers.split()]\n    return ' '.join(convert_number_to_numeral(number)\
    \ for number in sorted(numbers))\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt76a7lrx.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpt76a7lrx.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt76a7lrx.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpt76a7lrx.py\"\
    , line 8, in sort_numbers\n    numbers = [convert_numeral_to_number(number) for\
    \ number in numbers.split()]\n  File \"/tmp/tmpt76a7lrx.py\", line 8, in <listcomp>\n\
    \    numbers = [convert_numeral_to_number(number) for number in numbers.split()]\n\
    NameError: name 'convert_numeral_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: numbers_dict[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsau9s1ia.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpsau9s1ia.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsau9s1ia.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpsau9s1ia.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: numbers_dict[x]))\n  File \"/tmp/tmpsau9s1ia.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda x: numbers_dict[x]))\n\
    NameError: name 'numbers_dict' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp37jqsitx.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmp37jqsitx.py\", line 18,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp37jqsitx.py\", line\
    \ 11, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split()\n\
    \    nums = list(map(to_number, words))\n    nums.sort()\n    nums = map(str,\
    \ nums)\n    return ' '.join(nums)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphw77tczy.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmphw77tczy.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphw77tczy.py\", line\
    \ 16, in check\n    assert candidate('') == ''\n  File \"/tmp/tmphw77tczy.py\"\
    , line 9, in sort_numbers\n    nums = list(map(to_number, words))\nNameError:\
    \ name 'to_number' is not defined. Did you mean: 'sort_numbers'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    d = {'zero':0, 'one':1, 'two':2,\
    \ 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n  \
    \  l = numbers.split()\n    l.sort(key=lambda x: d[x])\n    return ' '.join(l)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda s: int(s))\n    return \" \".join(numbers)\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphpfw985c.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmphpfw985c.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmphpfw985c.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmphpfw985c.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda s: int(s))\n  File \"/tmp/tmphpfw985c.py\"\
    , line 9, in <lambda>\n    numbers.sort(key=lambda s: int(s))\nValueError: invalid\
    \ literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn8z7_w0o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=lambda s: _number_map[s]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpscjk34wk.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpscjk34wk.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpscjk34wk.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpscjk34wk.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=lambda\
    \ s: _number_map[s]))\n  File \"/tmp/tmpscjk34wk.py\", line 8, in <lambda>\n \
    \   return \" \".join(sorted(numbers.split(), key=lambda s: _number_map[s]))\n\
    NameError: name '_number_map' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    word_to_num = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    num_to_word = {0:'zero', 1:'one', 2:'two', 3:'three', 4:'four', 5:'five',\
    \ 6:'six', 7:'seven', 8:'eight', 9:'nine'}\n    num_list = []\n    output = ''\n\
    \    for word in numbers.split():\n        num_list.append(word_to_num[word])\n\
    \    for num in sorted(num_list):\n        output += num_to_word[num] + ' '\n\
    \    return output.strip()\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Split the string into a\
    \ list of word tokens\n    word_list = numbers.split()\n    # Map each word to\
    \ its corrsponding number\n    number_list = [word_to_number(word) for word in\
    \ word_list]\n    # Sort the list of numbers in ascending order\n    number_list.sort()\n\
    \    # Return the list of words in the original order\n    return \" \".join([number_to_word(number)\
    \ for number in number_list])\n\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9q7lvxc7.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmp9q7lvxc7.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9q7lvxc7.py\", line\
    \ 21, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9q7lvxc7.py\"\
    , line 11, in sort_numbers\n    number_list = [word_to_number(word) for word in\
    \ word_list]\n  File \"/tmp/tmp9q7lvxc7.py\", line 11, in <listcomp>\n    number_list\
    \ = [word_to_number(word) for word in word_list]\nNameError: name 'word_to_number'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_words = {\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9}\n    num_list = numbers.split()\n \
    \   new_list = []\n    for n in num_list:\n        new_list.append(num_words[n])\n\
    \    new_list.sort()\n    num_list = []\n    for n in new_list:\n        for num,\
    \ val in num_words.items():\n            if n == val:\n                num_list.append(num)\n\
    \    return \" \".join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    string_numbers = \"zero one two three four five six seven eight nine\"\n\
    \    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n\
    \            if string_numbers.index(numbers[i]) > string_numbers.index(numbers[j]):\n\
    \                numbers[i], numbers[j] = numbers[j], numbers[i]\n    return \"\
    \ \".join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # numbers = input(\"Input\
    \ a space-separated list of numbers from 'zero' to 'nine': \")\n    num_list =\
    \ numbers.split()\n    zero_nine = {'zero': 0, 'one': 1, 'two': 2, 'three': 3,\
    \ 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_int\
    \ = [zero_nine[i] for i in num_list]\n    num_int.sort()\n    num_str = [list(zero_nine.keys())[list(zero_nine.values()).index(i)]\
    \ for i in num_int]\n    print(' '.join(num_str))\n    return ' '.join(num_str)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '

    three

    three five nine

    zero four five seven eight nine

    zero one two three four five six

    '
  timestamp: 1659823170
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = [x.strip() for x\
    \ in numbers.split()]\n    numbers = [int(number_dict[x]) for x in numbers]\n\
    \    numbers.sort()\n    numbers = [number_dict[x] for x in numbers]\n    return\
    \ ' '.join(numbers)\n\n\n@pytest.mark.parametrize('s, expected', [\n    ('three\
    \ one five', 'one three five'),\n    ('four six nine', 'four six nine'),\n   \
    \ ('one two five four three', 'one two three four five'),\n    ('four six seven\
    \ three one', 'one three four six seven'),\n    ('three one five eight zero',\
    \ 'zero one three five eight'),\n    ('seven zero seven seven seven', 'zero seven\
    \ seven seven seven'),\n    ('four four four four five', 'four four four four\
    \ five'),\n    ('two zero three one four', 'zero one two three four'),\n    ('six\
    \ one three zero six six', 'zero one three six six six'),\n    ('two four six\
    \ one two three five zero', 'zero one two two three four five six'),\n    ('zero\
    \ one two three four five six seven eight nine', 'zero one two three four five\
    \ six seven eight nine'),\n    ('zero nine three one zero one two seven seven\
    \ five nine', 'zero zero one one two three five seven seven nine nine'),\n   \
    \ ('eight two one three nine four six zero seven five', 'zero one two three four\
    \ five six seven eight nine'),\n    ('nine three zero two four two three two zero\
    \ two one nine four six six four four two one two nine', 'zero zero one one two\
    \ two two two two three three four four four four four four four five six six\
    \ six seven eight nine nine nine'),\n    ('three six one zero eight three four\
    \ eight nine eight four four eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp917ez8t9.py\", line 30\n    ('three six one zero eight\
    \ three four eight nine eight four four eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight eight eight eight eight eight eight\
    \ eight eight eight eight eight eight eight\n     ^\nSyntaxError: unterminated\
    \ string literal (detected at line 30)\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(len(numbers)):\n        for j in range(i + 1, len(numbers)):\n\
    \            if digit_to_int(numbers[i]) > digit_to_int(numbers[j]):\n       \
    \         numbers[i], numbers[j] = numbers[j], numbers[i]\n    return ' '.join(numbers)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6ccsjrnn.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp6ccsjrnn.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6ccsjrnn.py\", line\
    \ 18, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    \  File \"/tmp/tmp6ccsjrnn.py\", line 11, in sort_numbers\n    if digit_to_int(numbers[i])\
    \ > digit_to_int(numbers[j]):\nNameError: name 'digit_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_map = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    str_list = numbers.split()\n    num_list = []\n    for num\
    \ in str_list:\n        num_list.append(num_map[num])\n    num_list.sort()\n \
    \   str_list.clear()\n    for num in num_list:\n        for key, value in num_map.items():\n\
    \            if value == num:\n                str_list.append(key)\n    return\
    \ ' '.join(str_list)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_mapping = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    num_list = numbers.split()\n    return ' '.join(\n\
    \        str(num_mapping[num]) for num in num_list\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl5iwxcs2.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpl5iwxcs2.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl5iwxcs2.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # parse string\n    num_list\
    \ = numbers.split(' ')\n    # sort list\n    num_list.sort()\n    # join list\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt1921kyy.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpt1921kyy.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt1921kyy.py\", line\
    \ 19, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    d = {\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9}\n    numbers = list(map(lambda\
    \ n: d[n], numbers))\n    numbers.sort()\n    return \" \".join(list(map(lambda\
    \ n: d[n], numbers)))\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpej5hxy3j.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpej5hxy3j.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpej5hxy3j.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpej5hxy3j.py\"\
    , line 12, in sort_numbers\n    return \" \".join(list(map(lambda n: d[n], numbers)))\n\
    \  File \"/tmp/tmpej5hxy3j.py\", line 12, in <lambda>\n    return \" \".join(list(map(lambda\
    \ n: d[n], numbers)))\nKeyError: 3\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Words to numbers\n    word_to_num\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = [word_to_num[word] for word\
    \ in numbers.split()]\n    # Sort\n    numbers.sort()\n    # Numbers to words\n\
    \    num_to_word = {0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five',\
    \ 6: 'six', 7: 'seven', 8: 'eight', 9: 'nine'}\n    return ' '.join([num_to_word[num]\
    \ for num in numbers])\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=numbers_dict.get))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpme0qvtqv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpme0qvtqv.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpme0qvtqv.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpme0qvtqv.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=numbers_dict.get))\n\
    NameError: name 'numbers_dict' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    #return num_dict[]\n\n\"\"\
    \"\nWrite a function that takes two integers and returns True if their difference\
    \ is odd and False otherwise.\n\n>>> is_odd_difference(1,2)\nFalse\n>>> is_odd_difference(10,11)\n\
    True\n>>> is_odd_difference(101, 102)\nFalse\n\"\"\"\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvwmu1a1b.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpvwmu1a1b.py\", line 30,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpvwmu1a1b.py\", line\
    \ 23, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    assert isinstance(numbers,\
    \ str)\n    unsorted_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four':\
    \ 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    sorted_list\
    \ = sorted(numbers.split(' '), key=lambda num: unsorted_dict[num])\n    return\
    \ ' '.join(sorted_list)\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp45nk26tz.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp45nk26tz.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp45nk26tz.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp45nk26tz.py\"\
    , line 10, in sort_numbers\n    sorted_list = sorted(numbers.split(' '), key=lambda\
    \ num: unsorted_dict[num])\n  File \"/tmp/tmp45nk26tz.py\", line 10, in <lambda>\n\
    \    sorted_list = sorted(numbers.split(' '), key=lambda num: unsorted_dict[num])\n\
    KeyError: ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [convert_word_to_number(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [convert_number_to_word(number) for number in numbers]\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3kfxapxr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp3kfxapxr.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3kfxapxr.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp3kfxapxr.py\"\
    , line 9, in sort_numbers\n    numbers = [convert_word_to_number(number) for number\
    \ in numbers]\n  File \"/tmp/tmp3kfxapxr.py\", line 9, in <listcomp>\n    numbers\
    \ = [convert_word_to_number(number) for number in numbers]\nNameError: name 'convert_word_to_number'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn8z7_w0o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [numbers_words[n] for n in numbers]\n    numbers.sort()\n    numbers\
    \ = [numbers_words_inv[n] for n in numbers]\n    return ' '.join(numbers)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptuxoz1eb.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmptuxoz1eb.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptuxoz1eb.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptuxoz1eb.py\"\
    , line 9, in sort_numbers\n    numbers = [numbers_words[n] for n in numbers]\n\
    \  File \"/tmp/tmptuxoz1eb.py\", line 9, in <listcomp>\n    numbers = [numbers_words[n]\
    \ for n in numbers]\nNameError: name 'numbers_words' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num2str = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    str2num = ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine']\n    numbers = numbers.split()\n    new_numbers\
    \ = list()\n    for i in numbers:\n        new_numbers.append(num2str[i])\n  \
    \  new_numbers.sort()\n    new_str = list()\n    for i in new_numbers:\n     \
    \   new_str.append(str2num[i])\n    return ' '.join(new_str)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # List of ints\n    numbers\
    \ = [dict_nums[word] for word in numbers.split()]\n    # Sort the list\n    numbers.sort()\n\
    \    # Get the key name\n    numbers = [dict_nums[num] for num in numbers]\n \
    \   # Join the list into a string\n    numbers = ' '.join(numbers)\n    return\
    \ numbers\n\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiypo1ecw.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpiypo1ecw.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpiypo1ecw.py\", line\
    \ 22, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpiypo1ecw.py\"\
    , line 9, in sort_numbers\n    numbers = [dict_nums[word] for word in numbers.split()]\n\
    \  File \"/tmp/tmpiypo1ecw.py\", line 9, in <listcomp>\n    numbers = [dict_nums[word]\
    \ for word in numbers.split()]\nNameError: name 'dict_nums' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    char_numbers = numbers.split()\n\
    \    int_numbers = [numbers_string_to_int(num) for num in char_numbers]\n    int_numbers.sort()\n\
    \    char_numbers = [numbers_int_to_string(num) for num in int_numbers]\n    return\
    \ ' '.join(char_numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf9_x8fc7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpf9_x8fc7.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf9_x8fc7.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpf9_x8fc7.py\"\
    , line 9, in sort_numbers\n    int_numbers = [numbers_string_to_int(num) for num\
    \ in char_numbers]\n  File \"/tmp/tmpf9_x8fc7.py\", line 9, in <listcomp>\n  \
    \  int_numbers = [numbers_string_to_int(num) for num in char_numbers]\nNameError:\
    \ name 'numbers_string_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = list(map(lambda\
    \ x: number_string_to_number(x), numbers.split()))\n    numbers.sort()\n    return\
    \ ' '.join(map(lambda x: number_to_number_string(x), numbers))\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyzdauksw.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpyzdauksw.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpyzdauksw.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpyzdauksw.py\"\
    , line 8, in sort_numbers\n    numbers = list(map(lambda x: number_string_to_number(x),\
    \ numbers.split()))\n  File \"/tmp/tmpyzdauksw.py\", line 8, in <lambda>\n   \
    \ numbers = list(map(lambda x: number_string_to_number(x), numbers.split()))\n\
    NameError: name 'number_string_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: int(DIGITS[x]))\n    return ' '.join(numbers)\n\
    \n\nprint(sort_numbers('three one five'))\nprint(sort_numbers('two one four three\
    \ five'))\nprint(sort_numbers('two one five eight six seven nine three four'))\n\
    print(sort_numbers('one zero two five eight three four seven six nine'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine'))\nprint(sort_numbers('zero zero\
    \ zero one two three four five six seven eight nine'))\nprint(sort_numbers('one\
    \ zero one one two three four five six seven eight nine'))\nprint(sort_numbers('zero\
    \ one zero one two three four five six seven eight nine'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine one zero'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine zero one'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine zero zero'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine one zero'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine zero one'))\nprint(sort_numbers('zero\
    \ one two three four five six seven eight nine zero zero'))\nprint(sort_numbers('zero\
    \ zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero\
    \ zero'))\nprint(sort_numbers('zero zero zero zero zero zero zero zero zero zero\
    \ zero zero zero zero zero zero zero zero'))\nprint(sort_numbers('zero zero zero\
    \ zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero'))\n\
    print(sort_numbers('zero zero zero zero zero zero zero zero zero zero zero zero\
    \ zero zero zero zero zero zero'))\nprint(sort_numbers('zero zero zero zero zero\
    \ zero zero zero zero zero zero zero zero zero zero zero zero zero'))\nprint(sort_numbers('zero\
    \ zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero zero\
    \ zero'))\nprint(sort_numbers('zero zero zero zero zero zero zero zero zero zero\
    \ zero zero\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpyicfbb26.py\", line 33\n    print(sort_numbers('zero zero\
    \ zero zero zero zero zero zero zero zero zero zero\n                       ^\n\
    SyntaxError: unterminated string literal (detected at line 33)\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [number_dict[number]\
    \ for number in numbers]\n    numbers.sort()\n    numbers = [number_dict[number]\
    \ for number in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplk3ljm2h.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmplk3ljm2h.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmplk3ljm2h.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmplk3ljm2h.py\"\
    , line 12, in sort_numbers\n    numbers = [number_dict[number] for number in numbers]\n\
    \  File \"/tmp/tmplk3ljm2h.py\", line 12, in <listcomp>\n    numbers = [number_dict[number]\
    \ for number in numbers]\nKeyError: 3\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # your code here\n    return\
    \ ' '.join(sorted(numbers.split(' '), key=lambda x: int(number2digit[x])))\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppd98ppxw.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmppd98ppxw.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppd98ppxw.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmppd98ppxw.py\"\
    , line 9, in sort_numbers\n    return ' '.join(sorted(numbers.split(' '), key=lambda\
    \ x: int(number2digit[x])))\n  File \"/tmp/tmppd98ppxw.py\", line 9, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(' '), key=lambda x: int(number2digit[x])))\n\
    NameError: name 'number2digit' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(\"\
    \ \"), key=lambda x: list(numbers_dict.keys()).index(x)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpighxla7o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpighxla7o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpighxla7o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpighxla7o.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(\" \"),\
    \ key=lambda x: list(numbers_dict.keys()).index(x)))\n  File \"/tmp/tmpighxla7o.py\"\
    , line 8, in <lambda>\n    return \" \".join(sorted(numbers.split(\" \"), key=lambda\
    \ x: list(numbers_dict.keys()).index(x)))\nNameError: name 'numbers_dict' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    input_list = numbers.split()\n    int_list = [number_dict[n]\
    \ for n in input_list]\n    sorted_list = sorted(int_list)\n    sorted_num = [word\
    \ for num in sorted_list for word, value in number_dict.items() if value == num]\n\
    \    return ' '.join(sorted_num)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    dict_number = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    if not numbers:\n        return numbers\n    # initialize\
    \ var\n    dict_numbers = {}\n    output = []\n    list_numbers = numbers.split('\
    \ ')\n    for number in list_numbers:\n        dict_numbers[number] = dict_number[number]\n\
    \    # sort dict_numbers by value\n    dict_sorted = sorted(dict_numbers.items(),\
    \ key=lambda kv: kv[1])\n    for k, v in dict_sorted:\n        output.append(k)\n\
    \    return ' '.join(output)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # sort_numbers_iterative(numbers)\n\
    \    return sort_numbers_iterative(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1iw4xl0i.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp1iw4xl0i.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1iw4xl0i.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp1iw4xl0i.py\"\
    , line 9, in sort_numbers\n    return sort_numbers_iterative(numbers)\nNameError:\
    \ name 'sort_numbers_iterative' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # NOTES: what is the difference\
    \ between numbers.split() and numbers.split(' ') ?\n    # numbers = 'three one\
    \ five'\n    # print(numbers.split()) # ['three', 'one', 'five']\n    # print(numbers.split('\
    \ ')) # ['three', 'one', 'five']\n    # remove any spaces in the input\n    numbers\
    \ = numbers.replace(' ', '')\n    if numbers == '':\n        return ''\n    #\
    \ convert from string numeral to int\n    num_dict = {'zero': 0, 'one': 1, 'two':\
    \ 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine':\
    \ 9}\n    numbers = [num_dict[x] for x in numbers.split()]\n    # numbers.sort()\n\
    \    numbers = sorted(numbers)\n    # convert back to numeral\n    num_dict =\
    \ {0: 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six',\
    \ 7: 'seven', 8: 'eight', 9: 'nine'}\n    numbers = [num_dict[x] for x in numbers]\n\
    \    # print(numbers)\n    numbers = ' '.join(numbers)\n    return numbers\n\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpygfo5ybu.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpygfo5ybu.py\", line 38,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpygfo5ybu.py\", line\
    \ 33, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    \  File \"/tmp/tmpygfo5ybu.py\", line 18, in sort_numbers\n    numbers = [num_dict[x]\
    \ for x in numbers.split()]\n  File \"/tmp/tmpygfo5ybu.py\", line 18, in <listcomp>\n\
    \    numbers = [num_dict[x] for x in numbers.split()]\nKeyError: 'threefivenine'\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    num_str = numbers.split()\n    num_str = [str(nums[i]) for i in num_str]\n\
    \    num_str.sort()\n    num_str = [nums[i] for i in num_str]\n    return ' '.join(num_str)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3mple03.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpb3mple03.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpb3mple03.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpb3mple03.py\"\
    , line 12, in sort_numbers\n    num_str = [nums[i] for i in num_str]\n  File \"\
    /tmp/tmpb3mple03.py\", line 12, in <listcomp>\n    num_str = [nums[i] for i in\
    \ num_str]\nKeyError: '3'\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n    numbers = numbers.split('\
    \ ')\n    number_dictionary = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four':\
    \ 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    sorted_numbers\
    \ = sorted(numbers, key=lambda x: number_dictionary[x])\n    sorted_numbers =\
    \ ' '.join(sorted_numbers)\n    return sorted_numbers\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfhljza2s.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpfhljza2s.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfhljza2s.py\", line\
    \ 17, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpfhljza2s.py\"\
    , line 11, in sort_numbers\n    sorted_numbers = sorted(numbers, key=lambda x:\
    \ number_dictionary[x])\n  File \"/tmp/tmpfhljza2s.py\", line 11, in <lambda>\n\
    \    sorted_numbers = sorted(numbers, key=lambda x: number_dictionary[x])\nKeyError:\
    \ ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    nums = list(map(lambda x: num_dict[x], numbers.split()))\n    nums.sort()\n\
    \    retur\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9xlj1rpl.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp9xlj1rpl.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9xlj1rpl.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp9xlj1rpl.py\"\
    , line 11, in sort_numbers\n    retur\nNameError: name 'retur' is not defined.\
    \ Did you mean: 'repr'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # make a list of tuples, each\
    \ tuple has a number and its value\n    numbers_list = []\n    for num in numbers.split():\n\
    \        numbers_list.append((num, numbers_to_ints[num]))\n    # sort the list\
    \ according to values\n    numbers_list.sort(key=lambda x: x[1])\n    return '\
    \ '.join([tup[0] for tup in numbers_list])\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt962memd.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpt962memd.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpt962memd.py\", line\
    \ 19, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpt962memd.py\"\
    , line 11, in sort_numbers\n    numbers_list.append((num, numbers_to_ints[num]))\n\
    NameError: name 'numbers_to_ints' is not defined. Did you mean: 'numbers_list'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    ENGLISH_NUMBERS = {'zero':\
    \ 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven':\
    \ 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split(' ')\n    numbers = [ENGLISH_NUMBERS[number]\
    \ for number in numbers]\n    numbers.sort()\n    numbers = [str(number) for number\
    \ in numbers]\n    return ' '.join(numbers)\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph9fo5npw.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmph9fo5npw.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmph9fo5npw.py\", line\
    \ 16, in check\n    assert candidate('') == ''\n  File \"/tmp/tmph9fo5npw.py\"\
    , line 10, in sort_numbers\n    numbers = [ENGLISH_NUMBERS[number] for number\
    \ in numbers]\n  File \"/tmp/tmph9fo5npw.py\", line 10, in <listcomp>\n    numbers\
    \ = [ENGLISH_NUMBERS[number] for number in numbers]\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    return ' '.join(sorted(numbers, key=NUM_TO_NUMERAL.get))\n\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxhqqyhms.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpxhqqyhms.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxhqqyhms.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpxhqqyhms.py\"\
    , line 9, in sort_numbers\n    return ' '.join(sorted(numbers, key=NUM_TO_NUMERAL.get))\n\
    NameError: name 'NUM_TO_NUMERAL' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Split string into a list\
    \ of numbers as strings\n    numbers = numbers.split()\n    # Convert the string\
    \ numbers to integers\n    numbers = [int(number_dict[number]) for number in numbers]\n\
    \    # Sort the numbers\n    numbers.sort()\n    # Convert the integers to their\
    \ corresponding strings\n    numbers = [inverse_number_dict[number] for number\
    \ in numbers]\n    # Return the sorted string\n    return ' '.join(numbers)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6uevsn7t.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp6uevsn7t.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6uevsn7t.py\", line\
    \ 22, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp6uevsn7t.py\"\
    , line 11, in sort_numbers\n    numbers = [int(number_dict[number]) for number\
    \ in numbers]\n  File \"/tmp/tmp6uevsn7t.py\", line 11, in <listcomp>\n    numbers\
    \ = [int(number_dict[number]) for number in numbers]\nNameError: name 'number_dict'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return_str = \"\"\n    return_list\
    \ = sorted(numbers.split())\n    for i in return_list:\n        return_str +=\
    \ i + \" \"\n    return return_str.strip()\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp328kgopr.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp328kgopr.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp328kgopr.py\", line\
    \ 18, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(map(word_to_num,\
    \ numbers.split())))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9b0x0vgt.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp9b0x0vgt.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9b0x0vgt.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp9b0x0vgt.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(map(word_to_num, numbers.split())))\n\
    NameError: name 'word_to_num' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dic = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = [num_dic[num] for num in numbers.split()]\n  \
    \  return ' '.join([str(num) for num in sorted(num_list)])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1rtm1zty.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp1rtm1zty.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp1rtm1zty.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = [str(number_dict[i]) for i in numbers.split()]\n\
    \    return ' '.join(sorted(numbers))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx65dz739.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpx65dz739.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpx65dz739.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda word: get_number(word))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppak3dgnr.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmppak3dgnr.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppak3dgnr.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppak3dgnr.py\"\
    , line 9, in sort_numbers\n    numbers = sorted(numbers, key=lambda word: get_number(word))\n\
    \  File \"/tmp/tmppak3dgnr.py\", line 9, in <lambda>\n    numbers = sorted(numbers,\
    \ key=lambda word: get_number(word))\nNameError: name 'get_number' is not defined.\
    \ Did you mean: 'sort_numbers'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn8z7_w0o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    return \" \".join(str(number_dict[i]) for i in sorted(numbers.split()))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4mqzn4g8.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp4mqzn4g8.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4mqzn4g8.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split('\
    \ '), key=lambda x: numbers[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbz4bokej.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpbz4bokej.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbz4bokej.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpbz4bokej.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(' '), key=lambda\
    \ x: numbers[x]))\n  File \"/tmp/tmpbz4bokej.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(' '), key=lambda x: numbers[x]))\nTypeError: string\
    \ indices must be integers\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Converting the string with\
    \ numbers into a list of integers\n    number_list = numbers.split()\n    int_number_list\
    \ = []\n    for number in number_list:\n        int_number_list.append(word_to_num[number])\n\
    \    # Sorting the list of integers from smallest to largest\n    int_number_list.sort()\n\
    \    # Converting the list of integers back into a string\n    number_string =\
    \ \"\"\n    for number in int_number_list:\n        number_string += num_to_word[number]\
    \ + \" \"\n    return number_string\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_8cd7uau.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp_8cd7uau.py\", line 29,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_8cd7uau.py\", line\
    \ 23, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_8cd7uau.py\"\
    , line 12, in sort_numbers\n    int_number_list.append(word_to_num[number])\n\
    NameError: name 'word_to_num' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    numbers = numbers.split()\n    numbers = sorted(numbers, key=lambda x: nums[x])\n\
    \    numbers = ' '.join(numbers)\n    return numbers\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=NUMBERS.get))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpel1tp9cb.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpel1tp9cb.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpel1tp9cb.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpel1tp9cb.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=NUMBERS.get))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda number: int(DIGITS.get(number))))\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpucg3sgsv.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpucg3sgsv.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpucg3sgsv.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpucg3sgsv.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ number: int(DIGITS.get(number))))\n  File \"/tmp/tmpucg3sgsv.py\", line 8, in\
    \ <lambda>\n    return ' '.join(sorted(numbers.split(), key=lambda number: int(DIGITS.get(number))))\n\
    NameError: name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_str = numbers.split()\n\
    \    num_int = [translate_numeral(x) for x in num_str]\n    return ' '.join([translate_numeral(x)\
    \ for x in sorted(num_int)])\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpobpkav7x.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpobpkav7x.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpobpkav7x.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpobpkav7x.py\"\
    , line 9, in sort_numbers\n    num_int = [translate_numeral(x) for x in num_str]\n\
    \  File \"/tmp/tmpobpkav7x.py\", line 9, in <listcomp>\n    num_int = [translate_numeral(x)\
    \ for x in num_str]\nNameError: name 'translate_numeral' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    def sort_function(word):\n\
    \        return {\n            'zero': 0,\n            'one': 1,\n           \
    \ 'two': 2,\n            'three': 3,\n            'four': 4,\n            'five':\
    \ 5,\n            'six': 6,\n            'seven': 7,\n            'eight': 8,\n\
    \            'nine': 9\n        }[word]\n    return ' '.join(sorted(numbers.split(),\
    \ key=sort_function))\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=lambda w: numeral_to_int(w)))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp783maxck.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp783maxck.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp783maxck.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp783maxck.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=lambda\
    \ w: numeral_to_int(w)))\n  File \"/tmp/tmp783maxck.py\", line 8, in <lambda>\n\
    \    return \" \".join(sorted(numbers.split(), key=lambda w: numeral_to_int(w)))\n\
    NameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numberals = numbers.split('\
    \ ')\n    numberals = sorted(numberals, key=lambda number: NUMBERS[number])\n\
    \    return ' '.join(numberals)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpncufcjvz.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpncufcjvz.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpncufcjvz.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpncufcjvz.py\"\
    , line 9, in sort_numbers\n    numberals = sorted(numberals, key=lambda number:\
    \ NUMBERS[number])\n  File \"/tmp/tmpncufcjvz.py\", line 9, in <lambda>\n    numberals\
    \ = sorted(numberals, key=lambda number: NUMBERS[number])\nNameError: name 'NUMBERS'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_to_ord = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda num: num_to_ord[num]))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    num_list = numbers.split(' ')\n    num_list.sort(key=lambda\
    \ n: number_dict[n])\n    return ' '.join(num_list)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph6rcflqc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmph6rcflqc.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmph6rcflqc.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmph6rcflqc.py\"\
    , line 10, in sort_numbers\n    num_list.sort(key=lambda n: number_dict[n])\n\
    \  File \"/tmp/tmph6rcflqc.py\", line 10, in <lambda>\n    num_list.sort(key=lambda\
    \ n: number_dict[n])\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = [int(dic[i]) for\
    \ i in numbers.split()]\n    numbers.sort()\n    numbers = [dic[str(i)] for i\
    \ in numbers]\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq7mxm79p.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpq7mxm79p.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpq7mxm79p.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpq7mxm79p.py\"\
    , line 8, in sort_numbers\n    numbers = [int(dic[i]) for i in numbers.split()]\n\
    \  File \"/tmp/tmpq7mxm79p.py\", line 8, in <listcomp>\n    numbers = [int(dic[i])\
    \ for i in numbers.split()]\nNameError: name 'dic' is not defined. Did you mean:\
    \ 'dir'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # cast numbers to a list of\
    \ strings\n    numbers = numbers.split()\n    # declare a list to hold numberal\
    \ ordinals\n    ordinals = []\n    # iterate over number words and find the ordinal\
    \ of each word\n    for num in numbers:\n        ordinals.append(numbers_dict[num])\n\
    \    # sort the ordinals\n    ordinals.sort()\n    # iterate over sorted ordinals\
    \ and find their respective words\n    for i in range(len(ordinals)):\n      \
    \  ordinals[i] = numbers_dict_reverse[ordinals[i]]\n    # cast list of number\
    \ words back to a string\n    return ' '.join(ordinals)\n    \n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuj7905jc.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpuj7905jc.py\", line 32,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpuj7905jc.py\", line\
    \ 26, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpuj7905jc.py\"\
    , line 14, in sort_numbers\n    ordinals.append(numbers_dict[num])\nNameError:\
    \ name 'numbers_dict' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda n: int(number_map[n]))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2kw8u0w7.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2kw8u0w7.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp2kw8u0w7.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp2kw8u0w7.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda n: int(number_map[n]))\n\
    \  File \"/tmp/tmp2kw8u0w7.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ n: int(number_map[n]))\nNameError: name 'number_map' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=NUMBERS.get))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn7rjd12b.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn7rjd12b.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn7rjd12b.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpn7rjd12b.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=NUMBERS.get))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn8z7_w0o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    nums = list(map(lambda x: convert_to_int(x), numbers))\n    nums.sort()\n\
    \    return ' '.join(list(map(lambda x: convert_to_str(x), nums)))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm0xuu154.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpm0xuu154.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpm0xuu154.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpm0xuu154.py\"\
    , line 9, in sort_numbers\n    nums = list(map(lambda x: convert_to_int(x), numbers))\n\
    \  File \"/tmp/tmpm0xuu154.py\", line 9, in <lambda>\n    nums = list(map(lambda\
    \ x: convert_to_int(x), numbers))\nNameError: name 'convert_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    sort_numbers = sorted(numbers.split(), key=lambda\
    \ x: number_dict[x])\n    return ' '.join(sort_numbers)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_to_int = {\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9}\n    input_list = numbers.split()\n\
    \    int_list = [num_to_int[i] for i in input_list]\n    int_list.sort()\n   \
    \ output_list = [num_to_int[i] for i in int_list]\n    return \" \".join(output_list)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi5295vkn.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpi5295vkn.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpi5295vkn.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpi5295vkn.py\"\
    , line 12, in sort_numbers\n    output_list = [num_to_int[i] for i in int_list]\n\
    \  File \"/tmp/tmpi5295vkn.py\", line 12, in <listcomp>\n    output_list = [num_to_int[i]\
    \ for i in int_list]\nKeyError: 3\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: NUMERALS[x]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsgl8ww83.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpsgl8ww83.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsgl8ww83.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpsgl8ww83.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: NUMERALS[x]))\n  File \"/tmp/tmpsgl8ww83.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: NUMERALS[x]))\nNameError: name\
    \ 'NUMERALS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    words = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine']\n    return ' '.join(sorted(numbers, key=lambda w: words.index(w)))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split()\n\
    \    words = [WORD_TO_NUMBER.get(w, w) for w in words]\n    return ' '.join(sorted(words))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ohqthfw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9ohqthfw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9ohqthfw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9ohqthfw.py\"\
    , line 9, in sort_numbers\n    words = [WORD_TO_NUMBER.get(w, w) for w in words]\n\
    \  File \"/tmp/tmp9ohqthfw.py\", line 9, in <listcomp>\n    words = [WORD_TO_NUMBER.get(w,\
    \ w) for w in words]\nNameError: name 'WORD_TO_NUMBER' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_list = numbers.split('\
    \ ')\n    number_list.sort(key=lambda number: NUMBER_MAP[number])\n    return\
    \ ' '.join(number_list)\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp71lzci_u.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp71lzci_u.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp71lzci_u.py\", line\
    \ 13, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp71lzci_u.py\"\
    , line 9, in sort_numbers\n    number_list.sort(key=lambda number: NUMBER_MAP[number])\n\
    \  File \"/tmp/tmp71lzci_u.py\", line 9, in <lambda>\n    number_list.sort(key=lambda\
    \ number: NUMBER_MAP[number])\nNameError: name 'NUMBER_MAP' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_map = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_set = [int(num_map[num]) for num in numbers.split()]\n\
    \    num_set.sort()\n    return ' '.join([num_map[num] for num in num_set])\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp01z7xyu6.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp01z7xyu6.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp01z7xyu6.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp01z7xyu6.py\"\
    , line 11, in sort_numbers\n    return ' '.join([num_map[num] for num in num_set])\n\
    \  File \"/tmp/tmp01z7xyu6.py\", line 11, in <listcomp>\n    return ' '.join([num_map[num]\
    \ for num in num_set])\nKeyError: 3\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    NUM_MAP = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = [NUM_MAP[w] for w in numbers.split()]\n    return\
    \ ' '.join(sorted(numbers))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp502p4361.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp502p4361.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp502p4361.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp502p4361.py\"\
    , line 10, in sort_numbers\n    return ' '.join(sorted(numbers))\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: num2dig(x)))\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9oe9iawc.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmp9oe9iawc.py\", line 18,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9oe9iawc.py\", line\
    \ 12, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp9oe9iawc.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: num2dig(x)))\n  File \"/tmp/tmp9oe9iawc.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: num2dig(x)))\nNameError: name\
    \ 'num2dig' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split(' ')\n    num_list = [num_dict[n]\
    \ for n in num_list]\n    num_list.sort()\n    num_list = [n for n in num_list]\n\
    \    num_list = [str(n) for n in num_list]\n    return ' '.join(num_list)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeyj29g1s.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpeyj29g1s.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpeyj29g1s.py\", line\
    \ 18, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpeyj29g1s.py\"\
    , line 10, in sort_numbers\n    num_list = [num_dict[n] for n in num_list]\n \
    \ File \"/tmp/tmpeyj29g1s.py\", line 10, in <listcomp>\n    num_list = [num_dict[n]\
    \ for n in num_list]\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: DIGITS[x]))\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_fsaq14r.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmp_fsaq14r.py\", line 17,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp_fsaq14r.py\", line\
    \ 11, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp_fsaq14r.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ x: DIGITS[x]))\n  File \"/tmp/tmp_fsaq14r.py\", line 8, in <lambda>\n    return\
    \ ' '.join(sorted(numbers.split(), key=lambda x: DIGITS[x]))\nNameError: name\
    \ 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    num_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five':\
    \ 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    num_list = []\n    for\
    \ i in numbers:\n        num_list.append(num_dict[i])\n    num_list.sort()\n \
    \   sort_num = []\n    for j in num_list:\n        sort_num.append(str(j))\n \
    \   return \" \".join(sort_num)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprfrt27ao.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmprfrt27ao.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprfrt27ao.py\", line\
    \ 22, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    assert numbers, \"Value '{}'\
    \ cannot be empty\".format(numbers)\n    assert not re.search(r'[^\\s+\\w]', numbers),\
    \ \"Value '{}' contains invalid characters\".format(numbers)\n    t_numbers =\
    \ numbers.split()\n    for word in t_numbers:\n        assert word in NUMBERS,\
    \ \"Value '{}' contains invalid words\".format(numbers)\n    t_numbers.sort(key=lambda\
    \ x: NUMBERS.index(x))\n    return ' '.join(t_numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp6zl3wkc.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpp6zl3wkc.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp6zl3wkc.py\", line\
    \ 18, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpp6zl3wkc.py\"\
    , line 8, in sort_numbers\n    assert numbers, \"Value '{}' cannot be empty\"\
    .format(numbers)\nAssertionError: Value '' cannot be empty\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=WORDS.index))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqjy6k4uc.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpqjy6k4uc.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqjy6k4uc.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpqjy6k4uc.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=WORDS.index))\n\
    NameError: name 'WORDS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = []\n    for num in numbers.split():\n        num_list.append(num_dict[num])\n\
    \    num_list.sort()\n    return ' '.join([list(num_dict.keys())[list(num_dict.values()).index(num)]\
    \ for num in num_list])\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = str.split(numbers)\n\
    \    for idx, val in enumerate(numbers):\n        num = val.split()\n        for\
    \ i in num:\n            if i == 'zero':\n                numbers[idx] = '0'\n\
    \            elif i == 'one':\n                numbers[idx] = '1'\n          \
    \  elif i == 'two':\n                numbers[idx] = '2'\n            elif i ==\
    \ 'three':\n                numbers[idx] = '3'\n            elif i == 'four':\n\
    \                numbers[idx] = '4'\n            elif i == 'five':\n         \
    \       numbers[idx] = '5'\n            elif i == 'six':\n                numbers[idx]\
    \ = '6'\n            elif i == 'seven':\n                numbers[idx] = '7'\n\
    \            elif i == 'eight':\n                numbers[idx] = '8'\n        \
    \    elif i == 'nine':\n                numbers[idx] = '9'\n    numbers = list(map(int,\
    \ numbers))\n    numbers.sort()\n    for idx, val in enumerate(numbers):\n   \
    \     if val == 0:\n            numbers[idx] = 'zero'\n        elif val == 1:\n\
    \            numbers[idx] = 'one'\n        elif val == 2:\n            numbers[idx]\
    \ = 'two'\n        elif val == 3:\n            numbers[idx] = 'three'\n      \
    \  elif val == 4:\n            numbers[idx] = 'four'\n        elif val == 5:\n\
    \            numbers[idx] = 'five'\n        elif val == 6:\n            numbers[idx]\
    \ = 'six'\n        elif val == 7:\n            numbers[idx] = 'seven'\n      \
    \  elif val == 8:\n            numbers[idx] = 'eight'\n        elif val == 9:\n\
    \            numbers[idx] = 'nine'\n    output = str.join(' ', numbers)\n    return\
    \ output\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    english_numbers = {'zero':\
    \ 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven':\
    \ 7, 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [english_numbers[number]\
    \ for number in numbers]\n    numbers.sort()\n    numbers = [number for number\
    \ in numbers]\n    return ' '.join(numbers)\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq7idw1f.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpxq7idw1f.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxq7idw1f.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxq7idw1f.py\"\
    , line 13, in sort_numbers\n    return ' '.join(numbers)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=str.lower))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg0kteyhp.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpg0kteyhp.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg0kteyhp.py\", line\
    \ 14, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    zero_to_nine = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine']\n    numbers = [zero_to_nine.index(number) for number in numbers]\n\
    \    numbers.sort()\n    numbers = [zero_to_nine[number] for number in numbers]\n\
    \    return ' '.join(numbers)\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda n: numeral_values[n])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpau52tu6g.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpau52tu6g.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpau52tu6g.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpau52tu6g.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda n: numeral_values[n])\n\
    \  File \"/tmp/tmpau52tu6g.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ n: numeral_values[n])\nNameError: name 'numeral_values' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # TODO: Fix bug in sort_numbers\
    \ ('two two one') -> ('one two two')\n    num_dict = {'zero': 0, 'one': 1, 'two':\
    \ 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine':\
    \ 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda key: num_dict[key])\n\
    \    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    nums_list = [nums[n] for n in numbers.split()]\n    sorted_nums\
    \ = sorted(nums_list)\n    return ' '.join([list(nums.keys())[list(nums.values()).index(n)]\
    \ for n in sorted_nums])\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split('\
    \ '), key=NUMBERS.index))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjioldele.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpjioldele.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjioldele.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpjioldele.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(' '), key=NUMBERS.index))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_map = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    nums = sorted([num_map[n] for n in numbers.split()])\n  \
    \  return ' '.join([num_map[n] for n in nums])\n\n\ndef check(candidate):\n  \
    \  assert candidate('') == ''\n    assert candidate('three') == 'three'\n    assert\
    \ candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpptpcu_zu.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpptpcu_zu.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpptpcu_zu.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpptpcu_zu.py\"\
    , line 10, in sort_numbers\n    return ' '.join([num_map[n] for n in nums])\n\
    \  File \"/tmp/tmpptpcu_zu.py\", line 10, in <listcomp>\n    return ' '.join([num_map[n]\
    \ for n in nums])\nKeyError: 3\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    word_numbers = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [word_numbers[x]\
    \ for x in numbers]\n    numbers.sort()\n    numbers = [str(x) for x in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf68ksa95.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpf68ksa95.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpf68ksa95.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [number_to_int(number) for number in numbers]\n    numbers.sort()\n\
    \    return ' '.join([int_to_number(number) for number in numbers])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpobity4_4.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpobity4_4.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpobity4_4.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpobity4_4.py\"\
    , line 9, in sort_numbers\n    numbers = [number_to_int(number) for number in\
    \ numbers]\n  File \"/tmp/tmpobity4_4.py\", line 9, in <listcomp>\n    numbers\
    \ = [number_to_int(number) for number in numbers]\nNameError: name 'number_to_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9}\n    numbers = numbers.split()\n  \
    \  numbers = list(map(lambda x: number_dict[x], numbers))\n    numbers.sort()\n\
    \    numbers = list(map(lambda x: [k for k, v in number_dict.items() if v == x][0],\
    \ numbers))\n    numbers = \" \".join(numbers)\n    return numbers\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # translate input string to\
    \ numbers\n    list_of_numbers = numbers.split(' ')\n    _translator = {'zero':\
    \ 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven':\
    \ 7, 'eight': 8, 'nine': 9}\n    for i in range(len(list_of_numbers)):\n     \
    \   list_of_numbers[i] = _translator[list_of_numbers[i]]\n    # sort numbers\n\
    \    list_of_numbers.sort()\n    # translate back to string and return\n    for\
    \ i in range(len(list_of_numbers)):\n        list_of_numbers[i] = _inverse_translator[list_of_numbers[i]]\n\
    \    return ' '.join(list_of_numbers)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9hbncdm7.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp9hbncdm7.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp9hbncdm7.py\", line\
    \ 21, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp9hbncdm7.py\"\
    , line 12, in sort_numbers\n    list_of_numbers[i] = _translator[list_of_numbers[i]]\n\
    KeyError: ''\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    assert numbers != ''\n\n \
    \   return \" \".join(sorted(numbers.split(\" \"), key=lambda word: numbers_dic[word]))\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdexwbipq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpdexwbipq.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdexwbipq.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpdexwbipq.py\"\
    , line 8, in sort_numbers\n    assert numbers != ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # implement the function body\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpipn676n6.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpipn676n6.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpipn676n6.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # create string with numbers\
    \ from zero to nine\n    numbers_string = 'zero one two three four five six seven\
    \ eight nine'\n    # create a list of numbers from a given string\n    numbers_list\
    \ = [numbers_string.index(word) for word in numbers.split()]\n    # sort numbers\
    \ in the given list\n    sorted_numbers_list = sorted(numbers_list)\n    # convert\
    \ sorted list of numbers to list of words\n    sorted_numbers_words = [numbers_string[number]\
    \ for number in sorted_numbers_list]\n    # convert list of words to a string\n\
    \    return ' '.join(sorted_numbers_words)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmt35z66b.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpmt35z66b.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmt35z66b.py\", line\
    \ 22, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(len(numbers)):\n        numbers[i] = NUMBERS[numbers[i]]\n\
    \    numbers.sort()\n    for i in range(len(numbers)):\n        numbers[i] = list(NUMBERS.keys())[list(NUMBERS.values()).index(numbers[i])]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4e1e6ck3.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp4e1e6ck3.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4e1e6ck3.py\", line\
    \ 19, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4e1e6ck3.py\"\
    , line 10, in sort_numbers\n    numbers[i] = NUMBERS[numbers[i]]\nNameError: name\
    \ 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    #TODO: Write your code here\n\
    \    dictionary = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5,\
    \ 'six':6, 'seven':7, 'eight':8, 'nine':9}\n    words = numbers.split()\n    print(words)\n\
    \    numbers = []\n    for i in words:\n        numbers.append(dictionary[i])\n\
    \    numbers.sort()\n    for num in numbers:\n        print(words[num])\n    numbers\
    \ = [1,2,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpq6sjzp4y.py\", line 18\n    numbers = [1,2,5,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5\n\
    \              ^\nSyntaxError: '[' was never closed\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # remove spaces between numbers\n\
    \    # construct a dictionary of numbers and their indices\n    # sort the dictionary\
    \ by indices\n    # return the string of ordered indices\n    numbers = re.sub('\\\
    s+', '', numbers)\n    num_indices = dict()\n    for i, num in enumerate(numbers):\n\
    \        num_indices[num] = i\n    return ' '.join(sorted(num_indices, key=num_indices.get))\n\
    \nsort_numbers('three one five')\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvnybopsl.py\", line\
    \ 18, in <module>\n    sort_numbers('three one five')\n  File \"/tmp/tmpvnybopsl.py\"\
    , line 12, in sort_numbers\n    numbers = re.sub('\\s+', '', numbers)\nNameError:\
    \ name 're' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split('\
    \ ')\n    sorted_numbers = []\n    for n in numbers:\n        sorted_numbers.append(letter_to_num[n])\n\
    \    sorted_numbers.sort()\n    return ' '.join(num_to_letter[x] for x in sorted_numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg3ddqq3g.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpg3ddqq3g.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg3ddqq3g.py\", line\
    \ 17, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpg3ddqq3g.py\"\
    , line 11, in sort_numbers\n    sorted_numbers.append(letter_to_num[n])\nNameError:\
    \ name 'letter_to_num' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Create a dictionary with\
    \ numberals as keys and their corresponding integers as values\n    numeral_dict\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers_list = numbers.split()\n   \
    \ # create a sorted list of integers of the above list based on the values in\
    \ the dictionary\n    sorted_ints = sorted([numeral_dict[number] for number in\
    \ numbers_list])\n    # join the integers in the list back to strings based on\
    \ the dictionary\n    return ' '.join([next(key for key, value in numeral_dict.items()\
    \ if value == number) for number in sorted_ints])\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=num_to_int))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6edun9wb.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp6edun9wb.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp6edun9wb.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp6edun9wb.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=num_to_int))\n\
    NameError: name 'num_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = sorted(numbers.split())\n\
    \    return \" \".join(numbers)\n\n\n@dataclass\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzewqqulu.py\", line\
    \ 12, in <module>\n    @dataclass\nNameError: name 'dataclass' is not defined\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = list(map(int, numbers.split()))\n\
    \    numbers.sort()\n    res = \" \".join(str(x) for x in numbers)\n    return\
    \ res\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdf6wq324.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpdf6wq324.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpdf6wq324.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpdf6wq324.py\"\
    , line 8, in sort_numbers\n    numbers = list(map(int, numbers.split()))\nValueError:\
    \ invalid literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = list(map(lambda\
    \ x: get_number(x), numbers.split(' ')))\n    numbers.sort()\n    return ' '.join(map(lambda\
    \ x: get_word(x), numbers))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc89r_d8i.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpc89r_d8i.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc89r_d8i.py\", line\
    \ 14, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpc89r_d8i.py\"\
    , line 8, in sort_numbers\n    numbers = list(map(lambda x: get_number(x), numbers.split('\
    \ ')))\n  File \"/tmp/tmpc89r_d8i.py\", line 8, in <lambda>\n    numbers = list(map(lambda\
    \ x: get_number(x), numbers.split(' ')))\nNameError: name 'get_number' is not\
    \ defined. Did you mean: 'sort_numbers'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Complete the body of this\
    \ function.\n    # You can change anything within the function (except for the\
    \ return statement),\n    # but please leave the function header unchanged.\n\
    \    if numbers.count('zero') + numbers.count('one') + numbers.count('two') +\
    \ numbers.count('three') + numbers.count('four') + numbers.count('five') + numbers.count('six')\
    \ + numbers.count('seven') + numbers.count('eight') + numbers.count('nine') !=\
    \ 3:\n        return 'Invalid input!  Please use only the words: zero, one, two,\
    \ three, four, five, six, seven, eight, nine'\n    else:\n        numbers = numbers.split()\n\
    \        if 'zero' in numbers:\n            numbers[numbers.index('zero')] = '0'\n\
    \        if 'one' in numbers:\n            numbers[numbers.index('one')] = '1'\n\
    \        if 'two' in numbers:\n            numbers[numbers.index('two')] = '2'\n\
    \        if 'three' in numbers:\n            numbers[numbers.index('three')] =\
    \ '3'\n        if 'four' in numbers:\n            numbers[numbers.index('four')]\
    \ = '4'\n        if 'five' in numbers:\n            numbers[numbers.index('five')]\
    \ = '5'\n        if 'six' in numbers:\n            numbers[numbers.index('six')]\
    \ = '6'\n        if 'seven' in numbers:\n            numbers[numbers.index('seven')]\
    \ = '7'\n        if 'eight' in numbers:\n            numbers[numbers.index('eight')]\
    \ = '8'\n        if 'nine' in numbers:\n            numbers[numbers.index('nine')]\
    \ = '9'\n        numbers = sorted(numbers)\n        if '0' in numbers:\n     \
    \       numbers[numbers.index('0')] = 'zero'\n        if '1' in numbers:\n   \
    \         numbers[numbers.index('1')] = 'one'\n        if '2' in numbers:\n  \
    \          numbers[numbers.index('2')] = 'two'\n        if '3' in numbers:\n \
    \           numbers[numbers.index('3\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpvuuzndze.py\", line 43\n    numbers[numbers.index('3\n\
    \                          ^\nSyntaxError: unterminated string literal (detected\
    \ at line 43)\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Write your code here\n \
    \   dictionary = {'zero':0, 'one':1, 'two':2, 'three':3, 'four':4, 'five':5, 'six':6,\
    \ 'seven':7, 'eight':8, 'nine':9}\n    number_list = [dictionary[x] for x in numbers.split()]\n\
    \    number_list.sort()\n    return \" \".join([str(x) for x in number_list])\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp08bc2dwo.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp08bc2dwo.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp08bc2dwo.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(len(numbers)):\n        numbers[i] = dic[numbers[i]]\n   \
    \ numbers.sort()\n    for i in range(len(numbers)):\n        numbers[i] = [key\
    \ for key, value in dic.items() if value == numbers[i]][0]\n    return ' '.join(numbers)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb3zdotpa.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpb3zdotpa.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpb3zdotpa.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpb3zdotpa.py\"\
    , line 10, in sort_numbers\n    numbers[i] = dic[numbers[i]]\nNameError: name\
    \ 'dic' is not defined. Did you mean: 'dir'?\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    temp_list = []\n    final_list\
    \ = []\n    numbers = numbers.split()\n    digits = ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    for number in numbers:\n\
    \        if number in digits:\n            temp_list.append(number)\n        else:\n\
    \            raise ValueError('{} is not a valid number'.format(number))\n   \
    \ for i in range(len(digits)):\n        for j in range(len(temp_list)):\n    \
    \        if digits[i] == temp_list[j]:\n                final_list.append(temp_list[j])\n\
    \    return ' '.join(final_list)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    number_list = numbers.split(' ')\n    number_list\
    \ = [number_dict[x] for x in number_list]\n    number_list.sort()\n    return\
    \ ' '.join([str(x) for x in number_list])\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpio6tioy8.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpio6tioy8.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpio6tioy8.py\", line\
    \ 16, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpio6tioy8.py\"\
    , line 10, in sort_numbers\n    number_list = [number_dict[x] for x in number_list]\n\
    \  File \"/tmp/tmpio6tioy8.py\", line 10, in <listcomp>\n    number_list = [number_dict[x]\
    \ for x in number_list]\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    int_num_list = []\n    for\
    \ num in num_list:\n        if num in num_dict:\n            int_num_list.append(num_dict[num])\n\
    \    int_num_list.sort()\n    return ' '.join([num for num in num_list if num_dict[num]\
    \ in int_num_list])\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3ow9_ls7.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmp3ow9_ls7.py\", line 26,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp3ow9_ls7.py\", line\
    \ 22, in check\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=lambda key: num_dict[key]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptsq8rdd4.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmptsq8rdd4.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmptsq8rdd4.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmptsq8rdd4.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=lambda\
    \ key: num_dict[key]))\n  File \"/tmp/tmptsq8rdd4.py\", line 8, in <lambda>\n\
    \    return \" \".join(sorted(numbers.split(), key=lambda key: num_dict[key]))\n\
    NameError: name 'num_dict' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    return ' '.join(sorted(numbers, key=lambda x: DIGITS.index(x)))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppfpvb10p.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmppfpvb10p.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmppfpvb10p.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmppfpvb10p.py\"\
    , line 9, in sort_numbers\n    return ' '.join(sorted(numbers, key=lambda x: DIGITS.index(x)))\n\
    \  File \"/tmp/tmppfpvb10p.py\", line 9, in <lambda>\n    return ' '.join(sorted(numbers,\
    \ key=lambda x: DIGITS.index(x)))\nNameError: name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    nums = list(map(lambda x: num_dict[x], numbers.split()))\n\
    \    return ' '.join(list(map(lambda x: str(x), sorted(nums))))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy1zgeecn.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpy1zgeecn.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpy1zgeecn.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(0, len(numbers)):\n        numbers[i] = number_to_int(numbers[i])\n\
    \    numbers.sort()\n    for i in range(0, len(numbers)):\n        numbers[i]\
    \ = int_to_number(numbers[i])\n    return \" \".join(numbers)\n\n\nprint(sort_numbers('three\
    \ one five'))\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6p291f56.py\", line\
    \ 17, in <module>\n    print(sort_numbers('three one five'))\n  File \"/tmp/tmp6p291f56.py\"\
    , line 10, in sort_numbers\n    numbers[i] = number_to_int(numbers[i])\nNameError:\
    \ name 'number_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    mapper = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    numbers = numbers.split()\n    nums = [mapper[num] for num in numbers]\n\
    \    nums.sort()\n    nums = [str(num) for num in nums]\n    return ' '.join(nums)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8izxheqo.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8izxheqo.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8izxheqo.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # initialize a list to hold\
    \ the numbers\n    numbers_list = []\n    # loop over the str input\n    for item\
    \ in numbers.split():\n        # look up the numeric value of each word in the\
    \ strings\n        numbers_list.append(DIGITS[item])\n    # sort the list\n  \
    \  numbers_list.sort()\n    # return a string by looking up the value in the list\
    \ in the keys of the dict\n    return ' '.join([DIGITS_REVERSE[value] for value\
    \ in numbers_list])\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4aqw3zmx.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp4aqw3zmx.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp4aqw3zmx.py\", line\
    \ 22, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp4aqw3zmx.py\"\
    , line 13, in sort_numbers\n    numbers_list.append(DIGITS[item])\nNameError:\
    \ name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # convert numbers to list\n\
    \    numbers = numbers.split(' ')\n    # convert numbers to int list\n    numbers\
    \ = [number_to_int(n) for n in numbers]\n    # sort\n    numbers.sort()\n    #\
    \ convert back to words\n    numbers = [int_to_number(n) for n in numbers]\n \
    \   # join and return\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfptb_22l.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpfptb_22l.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpfptb_22l.py\", line\
    \ 21, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpfptb_22l.py\"\
    , line 11, in sort_numbers\n    numbers = [number_to_int(n) for n in numbers]\n\
    \  File \"/tmp/tmpfptb_22l.py\", line 11, in <listcomp>\n    numbers = [number_to_int(n)\
    \ for n in numbers]\nNameError: name 'number_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    mapping = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    number_list = numbers.split(' ')\n    number_list.sort(key=lambda\
    \ number: mapping[number])\n    return ' '.join(number_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl5avq6xx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpl5avq6xx.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpl5avq6xx.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpl5avq6xx.py\"\
    , line 10, in sort_numbers\n    number_list.sort(key=lambda number: mapping[number])\n\
    \  File \"/tmp/tmpl5avq6xx.py\", line 10, in <lambda>\n    number_list.sort(key=lambda\
    \ number: mapping[number])\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split()\n\
    \    nums = [NUM_TO_WORD[word] for word in words]\n    nums.sort()\n    words\
    \ = [WORD_TO_NUM[num] for num in nums]\n    return ' '.join(words)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa99dmjt6.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa99dmjt6.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa99dmjt6.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa99dmjt6.py\"\
    , line 9, in sort_numbers\n    nums = [NUM_TO_WORD[word] for word in words]\n\
    \  File \"/tmp/tmpa99dmjt6.py\", line 9, in <listcomp>\n    nums = [NUM_TO_WORD[word]\
    \ for word in words]\nNameError: name 'NUM_TO_WORD' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Parece que strings s\xE3\
    o imut\xE1veis no Python...\n    num_to_int = {\n        'zero': 0,\n        'one':\
    \ 1,\n        'two': 2,\n        'three': 3,\n        'four': 4,\n        'five':\
    \ 5,\n        'six': 6,\n        'seven': 7,\n        'eight': 8,\n        'nine':\
    \ 9\n    }\n    numbers = [num_to_int[number] for number in numbers.split()]\n\
    \    numbers.sort()\n    numbers = [int_to_num[number] for number in numbers]\n\
    \    return ' '.join(numbers)\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpisji8736.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpisji8736.py\", line 34,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpisji8736.py\", line\
    \ 28, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpisji8736.py\"\
    , line 23, in sort_numbers\n    numbers = [int_to_num[number] for number in numbers]\n\
    \  File \"/tmp/tmpisji8736.py\", line 23, in <listcomp>\n    numbers = [int_to_num[number]\
    \ for number in numbers]\nNameError: name 'int_to_num' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    arr = numbers.split()\n  \
    \  arr.sort(key=lambda x: int_to_str(x))\n    return ' '.join(arr)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiq4jjw00.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpiq4jjw00.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpiq4jjw00.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpiq4jjw00.py\"\
    , line 9, in sort_numbers\n    arr.sort(key=lambda x: int_to_str(x))\n  File \"\
    /tmp/tmpiq4jjw00.py\", line 9, in <lambda>\n    arr.sort(key=lambda x: int_to_str(x))\n\
    NameError: name 'int_to_str' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [number_dict[number]\
    \ for number in numbers]\n    numbers.sort()\n    numbers = [key for key, value\
    \ in number_dict.items() if value in numbers]\n    return ' '.join(numbers)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_to_int = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = []\n    for num in numbers.split(' '):\n     \
    \   num_list.append(num_to_int[num])\n    num_list.sort()\n    int_to_num = {0:\
    \ 'zero', 1: 'one', 2: 'two', 3: 'three', 4: 'four', 5: 'five', 6: 'six', 7: 'seven',\
    \ 8: 'eight', 9: 'nine'}\n    num_out = []\n    for num in num_list:\n       \
    \ num_out.append(int_to_num[num])\n    return ' '.join(num_out)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbqn28tyc.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpbqn28tyc.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbqn28tyc.py\", line\
    \ 20, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpbqn28tyc.py\"\
    , line 11, in sort_numbers\n    num_list.append(num_to_int[num])\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=d.get))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n   \
    \ assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp64eo0w8f.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp64eo0w8f.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp64eo0w8f.py\", line\
    \ 12, in check\n    assert candidate('') == ''\n  File \"/tmp/tmp64eo0w8f.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=d.get))\n\
    NameError: name 'd' is not defined. Did you mean: 'id'?\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split('\
    \ ')\n    result = []\n    for n in numbers:\n        n = n.strip()\n        result.append(NUMBERS[n])\n\
    \    result.sort()\n    return ' '.join(result)\n\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpszfzdet7.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpszfzdet7.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpszfzdet7.py\", line\
    \ 18, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpszfzdet7.py\"\
    , line 12, in sort_numbers\n    result.append(NUMBERS[n])\nNameError: name 'NUMBERS'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    num_list = []\n    for num in numbers:\n        if num == 'zero':\n     \
    \       num_list.append(0)\n        elif num == 'one':\n            num_list.append(1)\n\
    \        elif num == 'two':\n            num_list.append(2)\n        elif num\
    \ == 'three':\n            num_list.append(3)\n        elif num == 'four':\n \
    \           num_list.append(4)\n        elif num == 'five':\n            num_list.append(5)\n\
    \        elif num == 'six':\n            num_list.append(6)\n        elif num\
    \ == 'seven':\n            num_list.append(7)\n        elif num == 'eight':\n\
    \            num_list.append(8)\n        elif num == 'nine':\n            num_list.append(9)\n\
    \    num_list.sort()\n    return_list = []\n    for num in num_list:\n       \
    \ if num == 0:\n            return_list.append('zero')\n        elif num == 1:\n\
    \            return_list.append('one')\n        elif num == 2:\n            return_list.append('two')\n\
    \        elif num == 3:\n            return_list.append('three')\n        elif\
    \ num == 4:\n            return_list.append('four')\n        elif num == 5:\n\
    \            return_list.append('five')\n        elif num == 6:\n            return_list.append('six')\n\
    \        elif num == 7:\n            return_list.append('seven')\n        elif\
    \ num == 8:\n            return_list.append('eight')\n        elif num == 9:\n\
    \            return_list.append('nine')\n    return ' '.join(return_list)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    a = (numbers.split(' '))\n    num = []\n    for\
    \ i in a:\n        num.append(number_dict[i])\n    return ' '.join(sorted(a, key=lambda\
    \ x: number_dict[x]))\n\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq1i5umvd.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpq1i5umvd.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpq1i5umvd.py\", line\
    \ 17, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpq1i5umvd.py\"\
    , line 12, in sort_numbers\n    num.append(number_dict[i])\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [int(num_to_int(num)) for num in numbers]\n    numbers.sort()\n\
    \    numbers = [int_to_num(num) for num in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpya9n5tq_.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpya9n5tq_.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpya9n5tq_.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpya9n5tq_.py\"\
    , line 9, in sort_numbers\n    numbers = [int(num_to_int(num)) for num in numbers]\n\
    \  File \"/tmp/tmpya9n5tq_.py\", line 9, in <listcomp>\n    numbers = [int(num_to_int(num))\
    \ for num in numbers]\nNameError: name 'num_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numeral_2_num = {\n      \
    \  'zero': 0,\n        'one': 1,\n        'two': 2,\n        'three': 3,\n   \
    \     'four': 4,\n        'five': 5,\n        'six': 6,\n        'seven': 7,\n\
    \        'eight': 8,\n        'nine': 9,\n    }\n    num_2_numeral = {value: key\
    \ for key, value in numeral_2_num.items()}\n    num_str_2_num = [numeral_2_num[numeral]\
    \ for numeral in numbers.split()]\n    num_str_2_num.sort()\n    num_2_numeral_str\
    \ = [num_2_numeral[num] for num in num_str_2_num]\n    return ' '.join(num_2_numeral_str)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp37jqsitx.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmp37jqsitx.py\", line 18,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp37jqsitx.py\", line\
    \ 11, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split('\
    \ '), key=lambda s: spelling.index(s)))\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxip58c03.py\", line\
    \ 20, in <module>\n    test_check()\n  File \"/tmp/tmpxip58c03.py\", line 18,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxip58c03.py\", line\
    \ 11, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpxip58c03.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(' '), key=lambda\
    \ s: spelling.index(s)))\n  File \"/tmp/tmpxip58c03.py\", line 8, in <lambda>\n\
    \    return ' '.join(sorted(numbers.split(' '), key=lambda s: spelling.index(s)))\n\
    NameError: name 'spelling' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpn8z7_w0o.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpn8z7_w0o.py\", line\
    \ 12, in check\n    assert candidate('') == ''\nAssertionError\n"
  stdout: ''
  timestamp: 1659823170
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_words = numbers.split()\n\
    \    number_digits = [word_to_digit(word) for word in number_words]\n    number_digits.sort()\n\
    \    number_words = [digit_to_word(digit) for digit in number_digits]\n    return\
    \ ' '.join(number_words)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa9tzhm2e.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpa9tzhm2e.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpa9tzhm2e.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpa9tzhm2e.py\"\
    , line 9, in sort_numbers\n    number_digits = [word_to_digit(word) for word in\
    \ number_words]\n  File \"/tmp/tmpa9tzhm2e.py\", line 9, in <listcomp>\n    number_digits\
    \ = [word_to_digit(word) for word in number_words]\nNameError: name 'word_to_digit'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Get all the valid terms\
    \ to match the number of them\n    valid_terms = sorted([k for k,v in NUM_TO_WORD.items()])\n\
    \    # Match all the numbers with the given terms and sort them\n    return '\
    \ '.join(sorted(re.findall(r'(?:\\b{}\\b)'.format('\\\\b|\\\\b'.join(valid_terms)),\
    \ numbers)))\n\n\ndef check(candidate):\n    assert candidate('') == ''\n    assert\
    \ candidate('three') == 'three'\n    assert candidate('three five nine') == 'three\
    \ five nine'\n    assert candidate('five zero four seven nine eight') == 'zero\
    \ four five seven eight nine'\n    assert candidate('six five four three two one\
    \ zero') == 'zero one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg8nhasq3.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpg8nhasq3.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpg8nhasq3.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpg8nhasq3.py\"\
    , line 9, in sort_numbers\n    valid_terms = sorted([k for k,v in NUM_TO_WORD.items()])\n\
    NameError: name 'NUM_TO_WORD' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda number: __dic[number])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpczetm7jy.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpczetm7jy.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpczetm7jy.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpczetm7jy.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda number: __dic[number])\n\
    \  File \"/tmp/tmpczetm7jy.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ number: __dic[number])\nNameError: name '__dic' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    zeroto9 = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    n = [int(zeroto9[i]) for i in numbers.split()]\n    return ' '.join([i for\
    \ i in zeroto9.keys() if zeroto9[i] in sorted(n)])\n    \n    \ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    nums = sorted([num_dict[n] for n in numbers.split()])\n    return ' '.join([str(n)\
    \ for n in nums])\n\ndef check(candidate):\n    assert candidate('') == ''\n \
    \   assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxw7u484x.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpxw7u484x.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxw7u484x.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    s = list(map(int, numbers.split()))\n\
    \    s.sort()\n    return ' '.join(map(str, s))\n\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpord8b8gw.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpord8b8gw.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpord8b8gw.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpord8b8gw.py\"\
    , line 8, in sort_numbers\n    s = list(map(int, numbers.split()))\nValueError:\
    \ invalid literal for int() with base 10: 'three'\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    sort_list = sorted([num_dict[number] for number in numbers.split()])\n  \
    \  num_dict_rev = {v:k for k,v in num_dict.items()}\n    return ' '.join([num_dict_rev[number]\
    \ for number in sort_list])\n\nprint(sort_numbers('nine two five three seven zero'))\n\
    print(sort_numbers('three one five'))\nprint(sort_numbers('three three three'))\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: 'zero two three five seven nine

    one three five

    three three three

    '
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # convert string to a list\
    \ of numbers\n    numbers = numbers.split()\n    # convert words to numbers\n\
    \    numbers = convert_words_to_numbers(numbers)\n    # sort the list of numbers\n\
    \    numbers.sort()\n    # convert list of numbers to a string\n    numbers =\
    \ convert_numbers_to_words(numbers)\n    # join the list of numbers into a space-delimited\
    \ string\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqm9hnz81.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmpqm9hnz81.py\", line 28,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpqm9hnz81.py\", line\
    \ 21, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpqm9hnz81.py\"\
    , line 11, in sort_numbers\n    numbers = convert_words_to_numbers(numbers)\n\
    NameError: name 'convert_words_to_numbers' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Write your code here\n \
    \   num_dict = {\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4,\
    \ \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9}\n    num_list\
    \ = numbers.split(\" \")\n    num_list = [num_dict[x] for x in num_list]\n   \
    \ num_list.sort()\n    return \" \".join([str(x) for x in num_list])\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpijlov344.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpijlov344.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpijlov344.py\", line\
    \ 17, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpijlov344.py\"\
    , line 11, in sort_numbers\n    num_list = [num_dict[x] for x in num_list]\n \
    \ File \"/tmp/tmpijlov344.py\", line 11, in <listcomp>\n    num_list = [num_dict[x]\
    \ for x in num_list]\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    return ' '.join(sorted(numbers.split(), key=lambda x: num_dict[x]))\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    nums = []\n    for num in\
    \ numbers:\n        nums.append(num_dict[num])\n    nums.sort()\n    for i in\
    \ range(len(nums)):\n        for key, value in num_dict.items():\n           \
    \ if nums[i] == value:\n                nums[i] = key\n    return ' '.join(nums)\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: NUMERALS.index(x))\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwu6s10n_.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpwu6s10n_.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpwu6s10n_.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpwu6s10n_.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: NUMERALS.index(x))\n\
    \  File \"/tmp/tmpwu6s10n_.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: NUMERALS.index(x))\nNameError: name 'NUMERALS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda number: DIGITS.index(number))\n    return ' '.join(numbers)\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnpczxmyd.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmpnpczxmyd.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpnpczxmyd.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpnpczxmyd.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda number: DIGITS.index(number))\n\
    \  File \"/tmp/tmpnpczxmyd.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ number: DIGITS.index(number))\nNameError: name 'DIGITS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    for i in range(len(num_list)):\n\
    \        num_list[i] = num_dict[num_list[i]]\n    num_list.sort()\n    for i in\
    \ range(len(num_list)):\n        for key, value in num_dict.items():\n       \
    \     if num_list[i] == value:\n                num_list[i] = key\n    return\
    \ ' '.join(num_list)\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split(' ')\n\
    \    # convert words to integers\n    nums = [numeral_to_int(n) for n in words]\n\
    \    # sort the numbers in place\n    nums.sort()\n    # convert the numbers back\
    \ to words\n    words = [int_to_numeral(n) for n in nums]\n    # return the joined\
    \ words\n    return ' '.join(words)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps1srprao.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmps1srprao.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmps1srprao.py\", line\
    \ 20, in check\n    assert candidate('') == ''\n  File \"/tmp/tmps1srprao.py\"\
    , line 10, in sort_numbers\n    nums = [numeral_to_int(n) for n in words]\n  File\
    \ \"/tmp/tmps1srprao.py\", line 10, in <listcomp>\n    nums = [numeral_to_int(n)\
    \ for n in words]\nNameError: name 'numeral_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_map = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    return ' '.join(sorted(numbers.split(), key=lambda n: number_map[n]))\n \
    \   \nprint(sort_numbers('three one five'))\nprint(sort_numbers('four two eight\
    \ seven'))\nprint(sort_numbers('nine five four'))\nprint(sort_numbers('six nine\
    \ eight'))\nprint(sort_numbers('five three'))\nprint(sort_numbers('one nine one'))\n\
    print(sort_numbers('five seven nine five seven'))\nprint(sort_numbers('three'))\n\
    print(sort_numbers('six'))\nprint(sort_numbers('four four'))\nprint(sort_numbers('one\
    \ two one two'))\nprint(sort_numbers('one two three'))\nprint(sort_numbers('one\
    \ one'))\nprint(sort_numbers('two'))\nprint(sort_numbers('three three'))\nprint(sort_numbers('two\
    \ one two'))\nprint(sort_numbers('four five six'))\nprint(sort_numbers('two one\
    \ two one'))\nprint(sort_numbers('three four'))\nprint(sort_numbers('two five'))\n\
    print(sort_numbers('three'))\nprint(sort_numbers('four four'))\nprint(sort_numbers('one\
    \ one'))\nprint(sort_numbers('six four'))\nprint(sort_numbers('one one'))\nprint(sort_numbers('one\
    \ two one'))\nprint(sort_numbers('four three'))\nprint(sort_numbers('three one'))\n\
    print(sort_numbers('three one three'))\nprint(sort_numbers('three one three'))\n\
    print(sort_numbers('three four two'))\nprint(sort_numbers('four'))\nprint(sort_numbers('three\
    \ four'))\nprint(sort_numbers('three three'))\nprint(\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmpbeaz5lyq.py\", line 45\n    print(\n         ^\nSyntaxError:\
    \ '(' was never closed\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # TODO: write a solution for\
    \ this challenge\n    l1 = numbers.split()\n    l2 = []\n    for i in l1:\n  \
    \      for j in range(len(digit_string)):\n            if i == digit_string[j]:\n\
    \                l2.append(j)\n    l2.sort()\n    l3 = []\n    for i in l2:\n\
    \        l3.append(digit_string[i])\n    return ' '.join(l3)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmtkz1ilk.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpmtkz1ilk.py\", line 30,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpmtkz1ilk.py\", line\
    \ 24, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpmtkz1ilk.py\"\
    , line 12, in sort_numbers\n    for j in range(len(digit_string)):\nNameError:\
    \ name 'digit_string' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list.sort(key=lambda\
    \ num: num_dict[num])\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    s = numbers.split()\n    dict_num\
    \ = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6,\
    \ 'seven': 7, 'eight': 8, 'nine': 9}\n    l = [dict_num[i] for i in s]\n    return\
    \ ' '.join([i for i in dict_num.keys() if dict_num[i] in sorted(l)])\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = {'zero':0, 'one':1,\
    \ 'two':2, 'three':3, 'four':4, 'five':5, 'six':6, 'seven':7, 'eight':8, 'nine':9}\n\
    \    numlist = numbers.split()\n    numlist = [nums[x] for x in numlist]\n   \
    \ numlist.sort()\n    numlist = [num for num in numlist]\n    return \" \".join(numlist)\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5tac9fen.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp5tac9fen.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp5tac9fen.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp5tac9fen.py\"\
    , line 13, in sort_numbers\n    return \" \".join(numlist)\nTypeError: sequence\
    \ item 0: expected str instance, int found\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # A dict stores the mapping\
    \ between string word and actual number\n    number_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    # Create a list of string words of numbers from the input\n\
    \    numbers_list = numbers.split()\n    # Create a list of actual number from\
    \ the input\n    numbers_int = [number_dict[n] for n in numbers_list]\n    # Sort\
    \ the list of actual number\n    numbers_int.sort()\n    # Map the sorted actual\
    \ number list back to the string word list\n    numbers_sorted = [number_dict.get(v)\
    \ for v in numbers_int]\n    # Return the string word list with space delimited\n\
    \    return ' '.join(numbers_sorted)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxzfv_ikf.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpxzfv_ikf.py\", line 30,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpxzfv_ikf.py\", line\
    \ 24, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpxzfv_ikf.py\"\
    , line 19, in sort_numbers\n    return ' '.join(numbers_sorted)\nTypeError: sequence\
    \ item 0: expected str instance, NoneType found\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # Create a map of numbers\n\
    \    NUM_MAP = {\n        'zero': 0,\n        'one': 1,\n        'two': 2,\n \
    \       'three': 3,\n        'four': 4,\n        'five': 5,\n        'six': 6,\n\
    \        'seven': 7,\n        'eight': 8,\n        'nine': 9\n    }\n    numbers\
    \ = numbers.split()\n    sorted_numbers = sorted(numbers, key=lambda num: NUM_MAP[num])\n\
    \    return ' '.join(sorted_numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = sorted(numbers, key=lambda number: ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'].index(number))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = [num_dict[num] for num in numbers.split()]\n \
    \   num_list.sort()\n    return ' '.join([str(num) for num in num_list])\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsa3x7cuu.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpsa3x7cuu.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpsa3x7cuu.py\", line\
    \ 16, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    if isinstance(numbers, str):\n\
    \        number_dict = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4,\
    \ 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n        numbers = numbers.split('\
    \ ')\n        numbers = [number_dict[number] for number in numbers]\n        numbers.sort()\n\
    \        numbers = [str(number) for number in numbers]\n        numbers = ' '.join(numbers)\n\
    \        return numbers\n    else:\n        return 'Error: input is not a string'\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc13jkvnt.py\", line\
    \ 29, in <module>\n    test_check()\n  File \"/tmp/tmpc13jkvnt.py\", line 27,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpc13jkvnt.py\", line\
    \ 20, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpc13jkvnt.py\"\
    , line 11, in sort_numbers\n    numbers = [number_dict[number] for number in numbers]\n\
    \  File \"/tmp/tmpc13jkvnt.py\", line 11, in <listcomp>\n    numbers = [number_dict[number]\
    \ for number in numbers]\nKeyError: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = numbers.split(' ')\n\
    \    nums = [number_to_int(number) for number in nums]\n    nums.sort()\n    nums\
    \ = [int_to_number(number) for number in nums]\n    return ' '.join(nums)\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprfrbhe5c.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmprfrbhe5c.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmprfrbhe5c.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmprfrbhe5c.py\"\
    , line 9, in sort_numbers\n    nums = [number_to_int(number) for number in nums]\n\
    \  File \"/tmp/tmprfrbhe5c.py\", line 9, in <listcomp>\n    nums = [number_to_int(number)\
    \ for number in nums]\nNameError: name 'number_to_int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = [eng_to_num(number)\
    \ for number in numbers.split()]\n    return ' '.join(sorted(numbers))\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgu3m4anx.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpgu3m4anx.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpgu3m4anx.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpgu3m4anx.py\"\
    , line 8, in sort_numbers\n    numbers = [eng_to_num(number) for number in numbers.split()]\n\
    \  File \"/tmp/tmpgu3m4anx.py\", line 8, in <listcomp>\n    numbers = [eng_to_num(number)\
    \ for number in numbers.split()]\nNameError: name 'eng_to_num' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    #to sort by value, use itemgetter\n    return ' '.join(sorted(numbers.split(),\
    \ key=itemgetter(num_dict.get)))\n    # return ' '.join(sorted(numbers.split(),\
    \ key=lambda x: num_dict.get(x)))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr3ixucwc.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpr3ixucwc.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpr3ixucwc.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpr3ixucwc.py\"\
    , line 10, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=itemgetter(num_dict.get)))\n\
    NameError: name 'itemgetter' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    num_list = numbers.split()\n    num_list = [num_dict[i] for\
    \ i in num_list]\n    num_list.sort()\n    num_list = [num_dict.get(i) for i in\
    \ num_list]\n    return ' '.join(num_list)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjh1_6m_g.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpjh1_6m_g.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpjh1_6m_g.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpjh1_6m_g.py\"\
    , line 13, in sort_numbers\n    return ' '.join(num_list)\nTypeError: sequence\
    \ item 0: expected str instance, NoneType found\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers.sort(key=lambda x:\
    \ num_dict[x])\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for idx, _ in enumerate(numbers):\n        numbers[idx] = word_to_number(numbers[idx])\n\
    \    numbers.sort()\n    for idx, _ in enumerate(numbers):\n        numbers[idx]\
    \ = number_to_word(numbers[idx])\n    return ' '.join(numbers)\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkrwqcb8c.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkrwqcb8c.py\", line 25,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpkrwqcb8c.py\", line\
    \ 19, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpkrwqcb8c.py\"\
    , line 10, in sort_numbers\n    numbers[idx] = word_to_number(numbers[idx])\n\
    NameError: name 'word_to_number' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    if not numbers:\n        return\
    \ ''\n    num_list = [int(i) for i in numbers.split()]\n    num_list.sort()\n\
    \    str_list = [str(i) for i in num_list]\n    return ' '.join(str_list)\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpair5urcb.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpair5urcb.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpair5urcb.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpair5urcb.py\"\
    , line 10, in sort_numbers\n    num_list = [int(i) for i in numbers.split()]\n\
    \  File \"/tmp/tmpair5urcb.py\", line 10, in <listcomp>\n    num_list = [int(i)\
    \ for i in numbers.split()]\nValueError: invalid literal for int() with base 10:\
    \ 'three'\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # convert numbers to int,\
    \ sort, convert back to string, return\n    return ' '.join(numeral_to_string(int(i))\
    \ for i in sorted(numeral_to_int(s) for s in numbers.split()))\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnofbh_q0.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpnofbh_q0.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpnofbh_q0.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpnofbh_q0.py\"\
    , line 9, in sort_numbers\n    return ' '.join(numeral_to_string(int(i)) for i\
    \ in sorted(numeral_to_int(s) for s in numbers.split()))\n  File \"/tmp/tmpnofbh_q0.py\"\
    , line 9, in <genexpr>\n    return ' '.join(numeral_to_string(int(i)) for i in\
    \ sorted(numeral_to_int(s) for s in numbers.split()))\nNameError: name 'numeral_to_int'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: list(word_to_num.keys()).index(x))\n    return\
    \ ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuu2foang.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpuu2foang.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpuu2foang.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpuu2foang.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: list(word_to_num.keys()).index(x))\n\
    \  File \"/tmp/tmpuu2foang.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: list(word_to_num.keys()).index(x))\nNameError: name 'word_to_num' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    choices = ['zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    numbers\
    \ = numbers.split()\n    for index, value in enumerate(numbers):\n        numbers[index]\
    \ = choices.index(value)\n    numbers.sort()\n    for index, value in enumerate(numbers):\n\
    \        numbers[index] = choices[value]\n    return ' '.join(numbers)\n\n\ndef\
    \ check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    words = {'zero': 0, 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5,\
    \ 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    numbers = [words[n] for n\
    \ in numbers]\n    numbers.sort()\n    words = {v: k for k, v in words.items()}\n\
    \    return ' '.join([words[n] for n in numbers])\n\ndef check(candidate):\n \
    \   assert candidate('') == ''\n    assert candidate('three') == 'three'\n   \
    \ assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    words = numbers.split()\n\
    \    return ' '.join(sorted(words, key=lambda w: number_to_numeral(w)))\n\n\n\
    def check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk7i_3ec1.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpk7i_3ec1.py\", line 20,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpk7i_3ec1.py\", line\
    \ 14, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpk7i_3ec1.py\"\
    , line 9, in sort_numbers\n    return ' '.join(sorted(words, key=lambda w: number_to_numeral(w)))\n\
    \  File \"/tmp/tmpk7i_3ec1.py\", line 9, in <lambda>\n    return ' '.join(sorted(words,\
    \ key=lambda w: number_to_numeral(w)))\nNameError: name 'number_to_numeral' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    nums = numbers.split(' ')\n\
    \    nums = [num2int(num) for num in nums]\n    nums.sort()\n    return ' '.join([int2num(num)\
    \ for num in nums])\n\n\ndef check(candidate):\n    assert candidate('') == ''\n\
    \    assert candidate('three') == 'three'\n    assert candidate('three five nine')\
    \ == 'three five nine'\n    assert candidate('five zero four seven nine eight')\
    \ == 'zero four five seven eight nine'\n    assert candidate('six five four three\
    \ two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzgq8_6le.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpzgq8_6le.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzgq8_6le.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpzgq8_6le.py\"\
    , line 9, in sort_numbers\n    nums = [num2int(num) for num in nums]\n  File \"\
    /tmp/tmpzgq8_6le.py\", line 9, in <listcomp>\n    nums = [num2int(num) for num\
    \ in nums]\nNameError: name 'num2int' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    mapping = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    return ' '.join(sorted(numbers.split(), key=lambda x: mapping[x]))\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    for i in range(len(numbers)):\n        for j in range(len(numbers) - 1):\n\
    \            if int(numbers[j]) > int(numbers[j + 1]):\n                numbers[j],\
    \ numbers[j + 1] = numbers[j + 1], numbers[j]\n    return ' '.join(numbers)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpavp14i1e.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpavp14i1e.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpavp14i1e.py\", line\
    \ 19, in check\n    assert candidate('three five nine') == 'three five nine'\n\
    \  File \"/tmp/tmpavp14i1e.py\", line 11, in sort_numbers\n    if int(numbers[j])\
    \ > int(numbers[j + 1]):\nValueError: invalid literal for int() with base 10:\
    \ 'three'\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    my_dict = {'zero': 0, 'one':\
    \ 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight':\
    \ 8, 'nine': 9}\n    numbers = numbers.split()\n    numbers = [my_dict[i] for\
    \ i in numbers]\n    numbers.sort()\n    numbers = [str(i) for i in numbers]\n\
    \    return ' '.join(numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8j43t_u0.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8j43t_u0.py\", line 24,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp8j43t_u0.py\", line\
    \ 18, in check\n    assert candidate('three') == 'three'\nAssertionError\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [get_number(number) for number in numbers]\n    numbers.sort()\n\
    \    numbers = [get_number(number) for number in numbers]\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo4hi_cd7.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpo4hi_cd7.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpo4hi_cd7.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpo4hi_cd7.py\"\
    , line 9, in sort_numbers\n    numbers = [get_number(number) for number in numbers]\n\
    \  File \"/tmp/tmpo4hi_cd7.py\", line 9, in <listcomp>\n    numbers = [get_number(number)\
    \ for number in numbers]\nNameError: name 'get_number' is not defined. Did you\
    \ mean: 'sort_numbers'?\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    num = ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']\n    res = sorted(numbers.split(),\
    \ key=lambda x: num.index(x))\n    return ' '.join(res)\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    # replace numbers with integers\n\
    \    numbers = numbers.replace('zero', '0')\n    numbers = numbers.replace('one',\
    \ '1')\n    numbers = numbers.replace('two', '2')\n    numbers = numbers.replace('three',\
    \ '3')\n    numbers = numbers.replace('four', '4')\n    numbers = numbers.replace('five',\
    \ '5')\n    numbers = numbers.replace('six', '6')\n    numbers = numbers.replace('seven',\
    \ '7')\n    numbers = numbers.replace('eight', '8')\n    numbers = numbers.replace('nine',\
    \ '9')\n    # convert string to list of integers\n    numbers = [int(i) for i\
    \ in numbers.split()]\n    # sort the list\n    numbers.sort()\n    # replace\
    \ integers with numbers and convert to string\n    numbers = [str(i) for i in\
    \ numbers]\n    numbers = ' '.join(numbers)\n    numbers = numbers.replace('0',\
    \ 'zero')\n    numbers = numbers.replace('1', 'one')\n    numbers = numbers.replace('2',\
    \ 'two')\n    numbers = numbers.replace('3', 'three')\n    numbers = numbers.replace('4',\
    \ 'four')\n    numbers = numbers.replace('5', 'five')\n    numbers = numbers.replace('6',\
    \ 'six')\n    numbers = numbers.replace('7', 'seven')\n    numbers = numbers.replace('8',\
    \ 'eight')\n    numbers = numbers.replace('9', 'nine')\n    return numbers\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    tokens = numbers.split()\n\
    \    tokens.sort(key=lambda x: int(digits[x]))\n    return ' '.join(tokens)\n\n\
    \ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbspj7sec.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbspj7sec.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpbspj7sec.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpbspj7sec.py\"\
    , line 9, in sort_numbers\n    tokens.sort(key=lambda x: int(digits[x]))\n  File\
    \ \"/tmp/tmpbspj7sec.py\", line 9, in <lambda>\n    tokens.sort(key=lambda x:\
    \ int(digits[x]))\nNameError: name 'digits' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_names = numbers.split()\n\
    \    number_values = []\n    numbers_dict = {'zero': 0, 'one': 1, 'two': 2, 'three':\
    \ 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7, 'eight': 8, 'nine': 9}\n    for\
    \ number in number_names:\n        number_values.append(numbers_dict[number])\n\
    \    number_values.sort()\n    sorted_numbers = []\n    for number in number_values:\n\
    \        for number_name in numbers_dict:\n            if numbers_dict[number_name]\
    \ == number:\n                sorted_numbers.append(number_name)\n    return '\
    \ '.join(sorted_numbers)\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    number_dict = {'zero': 0,\
    \ 'one': 1, 'two': 2, 'three': 3, 'four': 4, 'five': 5, 'six': 6, 'seven': 7,\
    \ 'eight': 8, 'nine': 9}\n    numbers = [number_dict[n] for n in numbers.split()]\n\
    \    numbers.sort()\n    numbers = [k for k, v in number_dict.items() if v in\
    \ numbers]\n    return ' '.join(numbers)\n    \ndef check(candidate):\n    assert\
    \ candidate('') == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers.sort(key=lambda x: number_to_numeral_dict[x])\n    return ' '.join(numbers)\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzf692_an.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpzf692_an.py\", line 21,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpzf692_an.py\", line\
    \ 15, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpzf692_an.py\"\
    , line 9, in sort_numbers\n    numbers.sort(key=lambda x: number_to_numeral_dict[x])\n\
    \  File \"/tmp/tmpzf692_an.py\", line 9, in <lambda>\n    numbers.sort(key=lambda\
    \ x: number_to_numeral_dict[x])\nNameError: name 'number_to_numeral_dict' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return ' '.join(sorted(numbers.split(),\
    \ key=lambda n: [_NUMBERS[n]]))\n\n\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05rudfks.py\", line\
    \ 21, in <module>\n    test_check()\n  File \"/tmp/tmp05rudfks.py\", line 19,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmp05rudfks.py\", line\
    \ 13, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmp05rudfks.py\"\
    , line 8, in sort_numbers\n    return ' '.join(sorted(numbers.split(), key=lambda\
    \ n: [_NUMBERS[n]]))\n  File \"/tmp/tmp05rudfks.py\", line 8, in <lambda>\n  \
    \  return ' '.join(sorted(numbers.split(), key=lambda n: [_NUMBERS[n]]))\nNameError:\
    \ name '_NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    sort_list = numbers.split('\
    \ ')\n    sort_list.sort(key=int)\n    res = ' '.join(sort_list)\n    return res\n\
    \n\ndef check(candidate):\n    assert candidate('') == ''\n    assert candidate('three')\
    \ == 'three'\n    assert candidate('three five nine') == 'three five nine'\n \
    \   assert candidate('five zero four seven nine eight') == 'zero four five seven\
    \ eight nine'\n    assert candidate('six five four three two one zero') == 'zero\
    \ one two three four five six'\n\ndef test_check():\n    check(sort_numbers)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpid2_nqmn.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpid2_nqmn.py\", line 22,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpid2_nqmn.py\", line\
    \ 15, in check\n    assert candidate('') == ''\n  File \"/tmp/tmpid2_nqmn.py\"\
    , line 9, in sort_numbers\n    sort_list.sort(key=int)\nValueError: invalid literal\
    \ for int() with base 10: ''\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    return \" \".join(sorted(numbers.split(),\
    \ key=lambda x: NUMBERS.index(x)))\ndef check(candidate):\n    assert candidate('')\
    \ == ''\n    assert candidate('three') == 'three'\n    assert candidate('three\
    \ five nine') == 'three five nine'\n    assert candidate('five zero four seven\
    \ nine eight') == 'zero four five seven eight nine'\n    assert candidate('six\
    \ five four three two one zero') == 'zero one two three four five six'\n\ndef\
    \ test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp028c_70.py\", line\
    \ 19, in <module>\n    test_check()\n  File \"/tmp/tmpp028c_70.py\", line 17,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpp028c_70.py\", line\
    \ 11, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpp028c_70.py\"\
    , line 8, in sort_numbers\n    return \" \".join(sorted(numbers.split(), key=lambda\
    \ x: NUMBERS.index(x)))\n  File \"/tmp/tmpp028c_70.py\", line 8, in <lambda>\n\
    \    return \" \".join(sorted(numbers.split(), key=lambda x: NUMBERS.index(x)))\n\
    NameError: name 'NUMBERS' is not defined\n"
  stdout: ''
  timestamp: 1659823171
- exit_code: 0
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    lst = numbers.split()\n  \
    \  words = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine']\n    for x in range(len(lst)):\n        lst[x] = words.index(lst[x])\n\
    \    lst.sort()\n    for x in range(len(lst)):\n        lst[x] = words[lst[x]]\n\
    \    return ' '.join(lst)\n\ndef check(candidate):\n    assert candidate('') ==\
    \ ''\n    assert candidate('three') == 'three'\n    assert candidate('three five\
    \ nine') == 'three five nine'\n    assert candidate('five zero four seven nine\
    \ eight') == 'zero four five seven eight nine'\n    assert candidate('six five\
    \ four three two one zero') == 'zero one two three four five six'\n\ndef test_check():\n\
    \    check(sort_numbers)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823171
- exit_code: -1
  program: "def sort_numbers(numbers: str) -> str:\n    \"\"\" Input is a space-delimited\
    \ string of numberals from 'zero' to 'nine'.\n    Valid choices are 'zero', 'one',\
    \ 'two', 'three', 'four', 'five', 'six', 'seven', 'eight' and 'nine'.\n    Return\
    \ the string with numbers sorted from smallest to largest\n    >>> sort_numbers('three\
    \ one five')\n    'one three five'\n    \"\"\"\n    numbers = numbers.split()\n\
    \    numbers = [convert_number(number) for number in numbers]\n    numbers.sort()\n\
    \    return ' '.join(str(number) for number in numbers)\n\n\n\ndef check(candidate):\n\
    \    assert candidate('') == ''\n    assert candidate('three') == 'three'\n  \
    \  assert candidate('three five nine') == 'three five nine'\n    assert candidate('five\
    \ zero four seven nine eight') == 'zero four five seven eight nine'\n    assert\
    \ candidate('six five four three two one zero') == 'zero one two three four five\
    \ six'\n\ndef test_check():\n    check(sort_numbers)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm147l1hu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpm147l1hu.py\", line 23,\
    \ in test_check\n    check(sort_numbers)\n  File \"/tmp/tmpm147l1hu.py\", line\
    \ 17, in check\n    assert candidate('three') == 'three'\n  File \"/tmp/tmpm147l1hu.py\"\
    , line 9, in sort_numbers\n    numbers = [convert_number(number) for number in\
    \ numbers]\n  File \"/tmp/tmpm147l1hu.py\", line 9, in <listcomp>\n    numbers\
    \ = [convert_number(number) for number in numbers]\nNameError: name 'convert_number'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659823171

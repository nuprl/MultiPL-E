name: HumanEval_102_choose_num
language: py
prompt: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes two\
  \ positive numbers x and y and returns the\n    biggest even integer number that\
  \ is in the range [x, y] inclusive. If \n    there's no such number, then the function\
  \ should return -1.\n\n    For example:\n    >>> choose_num(12, 15)\n    14\n  \
  \  >>> choose_num(13, 12)\n    -1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(12, 15) == 14\n    assert candidate(13,\
  \ 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert candidate(5234,\
  \ 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27, 10) ==\
  \ -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546) == 546\n\n\
  def test_check():\n    check(choose_num)\n\ntest_check()\n"
completions: ["    # Do something here\n    return -1\n", "    # YOUR CODE HERE\n\
    \    # SOLUTION\n    # Get all numbers between x and y\n    numbers = list(range(x,\
    \ y + 1))\n    # Filter out the even numbers\n    even_numbers = list(filter(lambda\
    \ num: num % 2 == 0, numbers))\n    # Return the biggest number, if there are\
    \ no even numbers, return -1\n    return max(even_numbers) if even_numbers else\
    \ -1\n    \n", "    pass\n", "    if x % 2 == 0:\n        start = x\n    else:\n\
    \        start = x + 1\n    if start % 2 == 0:\n        while start <= y:\n  \
    \          if start % 2 == 0:\n                return start\n            start\
    \ += 1\n    else:\n        while start <= y:\n            if start % 2 == 0:\n\
    \                return start\n            start += 1\n    return -1\n    # return\
    \ y if y%2 == 0 else y-1\n\n", "    # Initializes the counter to the first number\n\
    \    counter = x\n    # Keeps track of the largest even number found\n    largest_even\
    \ = 0\n    # Iterates over numbers in the range [x, y] inclusive\n    while counter\
    \ <= y:\n        # Checks if the number is even\n        if counter % 2 == 0:\n\
    \            # Finds the largest even number\n            if counter > largest_even:\n\
    \                largest_even = counter\n        # Increments the counter\n  \
    \      counter += 1\n    # If largest_even is 0, no even number was found\n  \
    \  if largest_even == 0:\n        return -1\n    else:\n        return largest_even\n",
  "    pass\n\n", "    if x%2 == 0:\n        if x > y:\n            return -1\n  \
    \      else:\n            return x\n    else:\n        x = x + 1\n        if x\
    \ > y:\n            return -1\n        else:\n            return x\n", "    if\
    \ x % 2 == 0:\n        return max(list(range(x, y + 1, 2)))\n    return max(list(range(x\
    \ + 1, y + 1, 2)))\n\n@typecheck", "    even_list = []\n    for number in range(x,\
    \ y + 1):\n        if number % 2 == 0:\n            even_list.append(number)\n\
    \    if even_list == []:\n        return -1\n    else:\n        return max(even_list)\n\
    \n", "    # INSERT YOUR CODE HERE\n    if x>y:\n        return -1\n    if x%2!=0:\n\
    \        x=x+1\n    if y%2!=0:\n        y=y-1\n    if x>y:\n        return -1\n\
    \    return y\n    # REPLACE THE 'pass' STATEMENT ABOVE WITH YOUR CODE\n\n\n",
  "    # You don't need to modify this function, but you can modify it if you\n  \
    \  # want.\n    nums = list(range(x, y + 1))\n    even_nums = [x for x in nums\
    \ if x % 2 == 0]\n    if len(even_nums) == 0:\n        return -1\n    else:\n\
    \        return max(even_nums)\n\n", "    if x % 2 == 0:\n        max_even = x\n\
    \    else:\n        max_even = x + 1\n    for i in range(x + 1, y + 1):\n    \
    \    if i % 2 == 0 and i > max_even:\n            max_even = i\n    if max_even\
    \ > y:\n        return -1\n    else:\n        return max_even\n", "    for i in\
    \ range(x, y+1):\n        if i % 2 == 0:\n            return i\n    return -1\n",
  "    for z in range(x, y+1):\n        if z % 2 == 0:\n            return z\n   \
    \ return -1\n", "    #TODO: implement this function!\n    return -1 #change this\
    \ with your code\n\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n\
    \            return i\n    return -1\n        \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n",
  "    if x % 2 == 0:\n        return x\n    else:\n        for i in range(x+1, y+1):\n\
    \            if i % 2 == 0:\n                return i\n    return -1\n", "   \
    \ for i in range(x, y+1):\n        if i % 2 == 0:\n            res = i\n    try:\n\
    \        return res\n    except:\n        return -1\n    \n", "    pass\n", " \
    \   # TODO: use a while loop to implement this function\n    even_num = 0\n  \
    \  if x%2 == 0:\n        even_num = x\n    else:\n        even_num = x + 1\n \
    \   while even_num <= y:\n        if even_num%2 == 0:\n            return even_num\n\
    \        else:\n            even_num += 1\n    return -1\n    ", "    if x > y:\n\
    \        return -1\n    else:\n        if x % 2 == 0:\n            return x\n\
    \        else:\n            return x + 1\n\nprint(choose_num(12, 15))\nprint(choose_num(13,\
    \ 12))\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return\
    \ i\n    return -1\n    ", "    for i in range(x, y+1):\n        if i % 2 == 0:\n\
    \            return i\n    return -1\n\n", "    # iterate through the numbers\
    \ between x and y\n    for num in range(x, y + 1):\n        # if a number is divisible\
    \ by 2 (i.e. it's even)\n        if num % 2 == 0:\n            # set this to be\
    \ the biggest number we've seen so far\n            biggest_num = num\n    # return\
    \ the biggest number we've seen\n    return biggest_num\n\n", "    # Only even\
    \ numbers are even...\n    if x % 2 == 1:\n        x += 1\n    for i in range(x,\
    \ y + 1, 2):\n        if is_even(i):\n            return i\n    return -1\n\n",
  "    # YOUR CODE HERE\n    return -1\n", "    if x > y:\n        return -1\n   \
    \ else:\n        while x < y:\n            if x % 2 == 0:\n                return\
    \ x\n            else:\n                x += 1\n        if x % 2 == 0:\n     \
    \       return x\n        else:\n            return -1\n\n", "    if (x % 2) ==\
    \ 0:\n        return x\n    elif (x % 2) != 0:\n        return -1\n    elif (y\
    \ % 2) == 0:\n        return y\n    elif (y % 2) != 0:\n        return -1\n\n",
  "    even_list = []\n    for i in range(x, y+1):\n        if i % 2 == 0:\n     \
    \       even_list.append(i)\n    if len(even_list) == 0:\n        return -1\n\
    \    else:\n        return max(even_list)\n", "    # YOUR CODE HERE\n    biggest_even\
    \ = -1\n\n    for i in range(x, y+1):\n        if i % 2 == 0:\n            biggest_even\
    \ = i\n\n    return biggest_even\n\n", "    # if x < 0 or y < 0:\n    #     raise\
    \ Exception(\"Numbers should be positive\")\n    # if x > y:\n    #     raise\
    \ Exception(\"x should be less than y\")\n    # if x % 2 == 0:\n    #     return\
    \ x\n    # if y % 2 == 0:\n    #     return y\n    # return -1\n    x, y = sorted([x,\
    \ y])\n    if x % 2 == 0:\n        return x\n    if x + 1 == y:\n        return\
    \ -1\n    return x + 2\n", "    max_num = -1\n    # Insert your code here\n  \
    \  for num in range(x, y+1):\n        if num % 2 == 0:\n            if num > max_num:\n\
    \                max_num = num\n            else:\n                pass\n    \
    \    else:\n            pass\n    return max_num\n    ####################################################################\n\
    \    return max_num\n", "    # Task 2.2:\n    # Write code here\n    max_even\
    \ = -1\n    for i in range(x, y+1):\n        if (i % 2 == 0) and (i > max_even):\n\
    \            max_even = i\n    return max_even\n\n", "    nums = range(x, y +\
    \ 1)\n    max_even = -1\n    for i in nums:\n        if i % 2 == 0:\n        \
    \    max_even = i\n    return max_even\n\n", "    for i in range(x, y+1):\n  \
    \      if (i % 2 == 0):\n            return i\n    return -1\n        \n", " \
    \   if x % 2 == 0:\n        x = x\n    else:\n        x = x + 1\n    \n    if\
    \ y % 2 == 0:\n        y = y\n    else:\n        y = y - 1\n    \n    if x <=\
    \ y:\n        return y\n    else:\n        return -1\n\n", "    for i in range(x,\
    \ y+1):\n        if i % 2 == 0:\n            number = i\n    if \"number\" in\
    \ locals():\n        return number\n    else:\n        return -1\n\n", "    #\
    \ YOUR CODE HERE\n    if (x%2) == 0:\n        return x\n    if x%2 == 1:\n   \
    \     x+=1\n    if (x%2) == 0:\n        while (x<=y):\n            return x\n\
    \        if (x>y):\n            return -1\n", "    # The range of numbers is [x,\
    \ y], inclusive.\n    # We will compute the minimum and maximum even numbers among\
    \ the \n    # numbers in the range, using the min_even and max_even functions.\n\
    \    # We will return the larger of the minimum and maximum even numbers.\n\n\
    \    if x <= y:\n        # The range of numbers is non-empty.\n\n        # Compute\
    \ the minimum even number in the range.\n        min_even_num = min_even(x, y)\n\
    \n        # Compute the maximum even number in the range.\n        max_even_num\
    \ = max_even(x, y)\n\n        # Return the bigger of min_even_num and max_even_num.\n\
    \        if min_even_num >= max_even_num:\n            return min_even_num\n \
    \       else:\n            return max_even_num\n    else:\n        # The range\
    \ of numbers is empty.\n        return -1\n", "    if x % 2 == 0:\n        return\
    \ x\n    elif x % 2 == 1:\n        if y - x > 1:\n            return y - 1\n \
    \       else:\n            return -1\n", "    i = y\n    while i >= x:\n     \
    \   if i % 2 == 0:\n            return i\n        i -= 1\n    return -1", "  \
    \  if x % 2 != 0 and y % 2 != 0:\n        return -1\n    else:\n        if x <\
    \ y:\n            if x % 2 == 0:\n                return x\n            else:\n\
    \                return x + 1\n        else:\n            if y % 2 == 0:\n   \
    \             return y\n            else:\n                return y - 1\n", " \
    \   if x % 2 == 0:\n        even = x\n    else:\n        even = x + 1\n    for\
    \ number in range(even, y + 1, 2):\n        if number % 2 == 0:\n            return\
    \ number\n    return -1\n\n", "    if y < x:\n        return -1\n    if y % 2\
    \ == 0:\n        return y\n    else:\n        return y - 1\n\n", "    if x ==\
    \ y:\n        return x if x % 2 == 0 else -1\n    even_candidates = [v for v in\
    \ range(x, y + 1) if v % 2 == 0]\n    return max(even_candidates) if even_candidates\
    \ else -1\n\n", "    pass\n\n", "    x = int(x)\n    y = int(y)\n    for i in\
    \ range(x, y+1):\n        if (i % 2 == 0):\n            return i\n    return -1\n\
    \    ", "    new_list = []\n    for i in range(x, y+1):\n        if i % 2 == 0:\n\
    \            new_list.append(i)\n    if len(new_list) != 0:\n        return new_list[-1]\n\
    \    else:\n        return -1\n\n", "    for n in range(x, y+1):\n        if n\
    \ % 2 == 0:\n            return n\n    return -1\n", "    # Define a variable\
    \ to hold the largest even number\n    largest_even = -1\n\n    # Loop through\
    \ the numbers in the range\n    for i in range(x, y + 1):\n        # If i is even\
    \ and greater than the value of the current largest even\n        # number, then\
    \ store i into the variable\n        if i % 2 == 0 and i > largest_even:\n   \
    \         largest_even = i\n\n    # Return the largest even number\n    return\
    \ largest_even\n\n", "    # YOUR CODE HERE\n    raise NotImplementedError()\n\n",
  "    pass\n\n", "    if (x + y) % 2 == 0:\n        return (x + y) // 2\n    else:\n\
    \        return (x + y + 1) // 2\n\n", "    biggest_even = -1\n    for i in range(x,\
    \ y + 1):\n        if i % 2 == 0:\n            biggest_even = i\n    return biggest_even\n",
  "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return i\n   \
    \ return -1\n\n", "    pass\n", "    if x > y:\n        return -1\n    if x %\
    \ 2 == 0:\n        return x\n    if y % 2 == 0:\n        return y\n    return\
    \ -1\n\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return\
    \ i\n    return -1\n", "    # YOUR CODE HERE\n    print(\"Not implemented yet\"\
    )\n    return -1\n", "    # \n    for i in range(x, y+1):\n        if i % 2 ==\
    \ 0:\n            return i\n    return -1\n", "    pass\n\n", "    if x == y and\
    \ x % 2 == 0:\n        return x\n    elif x == y and x % 2 != 0:\n        return\
    \ -1\n    elif x < y and x % 2 == 0:\n        return x\n    elif x < y and x %\
    \ 2 != 0:\n        return choose_num(x + 1, y)\n    elif x > y and y % 2 == 0:\n\
    \        return y\n    elif x > y and y % 2 != 0:\n        return choose_num(x,\
    \ y - 1)\n    else:\n        return -1\n        ", "    if x == y and x % 2 ==\
    \ 0:\n        return x\n    elif x % 2 == 0 and y % 2 == 0:\n        return y\n\
    \    elif x > y:\n        return -1\n    elif x == y and x % 2 != 0:\n       \
    \ return -1\n    elif x % 2 != 0 and y % 2 != 0:\n        return -1\n    else:\n\
    \        return choose_num(x + 1, y)\n\n", "    for n in range(x, y+1):\n    \
    \    if n % 2 == 0:\n            return n\n    return -1\n\n", "    if x > y:\n\
    \        return -1\n    else:\n        if x % 2 == 0:\n            return x\n\
    \        else:\n            return x + 1\n    \n    \n", "    if y < x:\n    \
    \    return -1\n    evens = [i for i in range(x, y + 1) if i % 2 == 0]\n    if\
    \ evens == []:\n        return -1\n    return max(evens)\n\n", "    if x < 0 or\
    \ y < 0:\n        return -1\n    elif x > y:\n        return -1\n    elif x %\
    \ 2 == 0:\n        return x\n    else:\n        return x + 1\n    \n    \n   \
    \ \n    \n    \n    ", "    assert type(x) == int and type(y) == int, \"Inputs\
    \ must be integers\"\n    assert x > 0 and y > 0, \"Inputs must be positive\"\n\
    \    assert x <= y, \"First input must be smaller than or equal to second input\"\
    \n    result = -1\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n   \
    \         result = i\n    return result\n\n", "    if x < y:\n        # x is smaller\
    \ than y\n        if (x % 2 == 0) and (y % 2 == 0):\n            # x and y are\
    \ both even\n            return y\n        elif (x % 2 == 0) and (y % 2 != 0):\n\
    \            # x is even and y is odd\n            return y - 1\n        elif\
    \ (x % 2 != 0) and (y % 2 == 0):\n            # x is odd and y is even\n     \
    \       return y\n        else:\n            # x and y are both odd\n        \
    \    return y - 2\n    elif x > y:\n        # x is bigger than y\n        if (x\
    \ % 2 == 0) and (y % 2 == 0):\n            # x and y are both even\n         \
    \   return x\n        elif (x % 2 == 0) and (y % 2 != 0):\n            # x is\
    \ even and y is odd\n            return x\n        elif (x % 2 != 0) and (y %\
    \ 2 == 0):\n            # x is odd and y is even\n            return x - 1\n \
    \       else:\n            # x and y are both odd\n            return x - 2\n\
    \    else:\n        # x is equal to y\n        if x % 2 == 0:\n            # x\
    \ is even\n            return x\n        else:\n            # x is odd\n     \
    \       return -1\n", "    if x % 2 != 0 and y % 2 != 0:\n        return -1\n\
    \    elif x % 2 == 0 and y % 2 == 0:\n        for i in range(x, y + 1):\n    \
    \        if i % 2 == 0:\n                return i\n    elif x % 2 != 0 and y %\
    \ 2 == 0:\n        for i in range(x + 1, y + 1):\n            if i % 2 == 0:\n\
    \                return i\n    elif x % 2 == 0 and y % 2 != 0:\n        for i\
    \ in range(x, y - 1):\n            if i % 2 == 0:\n                return i\n\n",
  "    # YOUR CODE HERE\n    return -1\n\n", "    pass\n", "    if x <= y:\n     \
    \   for i in range(y, x - 1, -1):\n            if i % 2 == 0:\n              \
    \  return i\n        return -1\n    else:\n        for i in range(x, y - 1, -1):\n\
    \            if i % 2 == 0:\n                return i\n        return -1\n\n",
  "    # if y < x:\n    #     return -1\n    # elif y == x:\n    #     if x % 2 ==\
    \ 0:\n    #         return x\n    #     else:\n    #         return -1\n    #\
    \ else:\n    #     if y % 2 == 0:\n    #         return y\n    #     else:\n \
    \   #         return choose_num(x, y - 1)\n    # Or maybe we need to use the max\
    \ function here\n    # Maybe it would be better to define a function is_even(n)\n\
    \    # that returns true when n is even and false otherwise\n    if y < x:\n \
    \       return -1\n    else:\n        max_even = -1\n        for i in range(x,\
    \ y + 1):\n            if i % 2 == 0:\n                max_even = i\n        return\
    \ max_even\n", "    if x % 2 != 0:\n        x += 1\n    if y % 2 != 0:\n     \
    \   y -= 1\n    if x > y:\n        return -1\n    elif x <= y:\n        return\
    \ y\n", "    # set up variables to hold the largest even number and the current\
    \ number\n    largest_even = -1\n    current_num = x\n    # loop through the numbers\
    \ in the range x to y, inclusive\n    while current_num <= y:\n        # if the\
    \ current number is even, then if it's larger than the largest\n        # so far,\
    \ it becomes the new largest\n        if current_num % 2 == 0:\n            if\
    \ current_num > largest_even:\n                largest_even = current_num\n  \
    \      # move on to the next number\n        current_num += 1\n    # once we've\
    \ checked all the numbers in the range, return the result\n    return largest_even\n\
    \n", "    res = -1\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n  \
    \          res = i\n    return res\n", "    # now we will make a loop that runs\
    \ through the range\n    # starting at the largest number ending at the smallest\
    \ number\n    # if a number is even, then it gets returned\n    # if no number\
    \ is even, then -1 gets returned\n    for n in range(max(x, y), min(x, y) - 1,\
    \ -1):\n        if n % 2 == 0:\n            return n\n    return -1\n\n", "  \
    \  # Insert your code here\n    if x > y:\n        return -1\n    elif x % 2 ==\
    \ 0:\n        return x\n    else:\n        return x + 1\n        \n    pass\n\n",
  "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return i\n   \
    \ return -1\n", "    a = x % 2\n    b = y % 2\n    if a != 0:\n        x += 1\n\
    \    if b != 0:\n        y -= 1\n    if y < x:\n        return -1\n    else:\n\
    \        return y\n", "    if x % 2 == 0:\n        return x\n    elif x + 1 ==\
    \ y:\n        return -1\n    else:\n        return choose_num(x + 1, y)\n\n",
  "    # YOUR CODE HERE\n    if x % 2 == 0:\n        return x\n    elif x % 2 != 0:\n\
    \        if x + 1 > y:\n            return -1\n        else:\n            return\
    \ x + 1\n    else:\n        return -1", "    for num in range(x, y + 1):\n   \
    \     if num % 2 == 0:\n            return num\n    return -1\n", "    for i in\
    \ range(x, y+1):\n        if i % 2 == 0:\n            biggest_even = i\n    try:\n\
    \        return biggest_even\n    except UnboundLocalError:\n        return -1\n\
    \n\n", "    return -1\n", "    assert x >= 0 and y >= 0, \"Error. Please enter\
    \ positive numbers!\"\n    assert x <= y, \"Error. Please enter the second number\
    \ bigger than the first one!\"\n    for i in range(x, y + 1):\n        if i %\
    \ 2 == 0:\n            if i == y:\n                return -1\n            else:\n\
    \                x = i\n    return x\n\n", "    for i in range(x, y+1):\n    \
    \    if (i % 2 == 0):\n            return i\n    return -1\n", "    pass\n\n",
  "    # Programmers' solution:\n    # max_even = -1\n    # for i in range(x, y +\
    \ 1):\n    #     if i % 2 == 0:\n    #         max_even = i\n    # return max_even\n\
    \n    # My solution:\n    return max(filter(lambda z: z % 2 == 0, range(x, y +\
    \ 1)), default=-1)\n\n\n@given(x=integers(min_value=1, max_value=1000),\n    \
    \   y=integers(min_value=1, max_value=1000))\n@example(x=10, y=10)\n@example(x=10,\
    \ y=11)\n@example(x=11, y=11)\n@example(x=11, y=12)\n@example(x=11, y=13)\n@example(x=0,\
    \ y=1)\n@example(x=0, y=2)\n@example(x=0, y=3)\n@example(x=0, y=4)\n@example(x=0,\
    \ y=5)\n@example(x=0, y=6)\n@example(x=0, y=7)\n@example(x=0, y=8)\n@example(x=0,\
    \ y=9)\n@example(x=0, y=10)\n@example(x=0, y=11)\n@example(x=0, y=12)\n@example(x=0,\
    \ y=13)\n@example(x=1, y=1)\n@example(x=1, y=2)\n@example(x=1, y=3)\n@example(x=1,\
    \ y=4)\n@example(x=1, y=5)\n@example(x=1, y=6)\n@example(x=1, y=7)\n@example(x=1,\
    \ y=8)\n@example(x=1, y=9)\n@example(x=1, y=10)\n@example(x=1, y=11)\n@example(x=1,\
    \ y=12)\n@example(x=1, y=13)\n@example(x=2", "    max_even = -1\n    for i in\
    \ range(x, y + 1):\n        if i % 2 == 0 and i > max_even:\n            max_even\
    \ = i\n    return max_even\n", "    even_num = -1\n    for i in range(x, y + 1):\n\
    \        if i % 2 == 0:\n            even_num = i\n    return even_num\n     \
    \       \n", "    z = y\n    while z >= x:\n        if z % 2 == 0:\n         \
    \   return z\n        z -= 1\n    return -1\n\n", "    # YOUR CODE HERE\n\n  \
    \  # We first find the min and max number.\n    min_num = min(x, y)\n    max_num\
    \ = max(x, y)\n\n    # If the range of numbers is odd, then there is no even number\n\
    \    # in the range.\n    if (max_num - min_num) % 2 == 1:\n        return -1\n\
    \n    # Otherwise, we check if the max number is even, we return it.\n    # Otherwise,\
    \ we return the max number minus 1.\n    if max_num % 2 == 0:\n        return\
    \ max_num\n    else:\n        return max_num - 1\n\n\n", "    # Fill in your code\
    \ here\n    pass\n\n", "    biggest_even = -1\n    for i in range(x, y + 1):\n\
    \        if i % 2 == 0:\n            biggest_even = i\n    return biggest_even\n",
  "    range_num = range(x, y + 1)\n\n    for num in range_num:\n        if num %\
    \ 2 == 0:\n            return num\n        else:\n            return -1\n\n",
  "    # this is for the range\n    candidate = x\n    # this is for the even number\n\
    \    count = 1\n    while candidate <= y:\n        if candidate % 2 == 0:\n  \
    \          count = candidate\n        candidate += 1\n    if count == 1:\n   \
    \     return -1\n    else:\n        return count\n    \n", "    nums = []\n  \
    \  if x < y:\n        while x <= y:\n            if x % 2 == 0:\n            \
    \    nums.append(x)\n            x += 1\n        if nums:\n            return\
    \ max(nums)\n        else:\n            return -1\n    else:\n        return -1\n\
    \n", "    if x > y:\n        return -1\n    else:\n        for i in range(y, x\
    \ - 1, -1):\n            if i % 2 == 0:\n                return i\n        return\
    \ -1\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return\
    \ i\n    return -1\n\n", "    largest = 0\n    for num in range(x, y + 1):\n \
    \       if num % 2 == 0 and num > largest:\n            largest = num\n    if\
    \ largest:\n        return largest\n    else:\n        return -1\n", "    max_even\
    \ = -1\n    for num in range(x, y + 1):\n        if num % 2 == 0 and num > max_even:\n\
    \            max_even = num\n    return max_even\n", "    if x % 2 == 0:\n   \
    \     return x\n    else:\n        return x + 1\n", "    assert x <= y\n    assert\
    \ x > 0 and y > 0\n    nums = [i for i in range(x, y + 1) if i % 2 == 0]\n   \
    \ if len(nums) == 0:\n        return -1\n    else:\n        return max(nums)\n",
  "    # your code here\n    nums = []\n    for i in range(x, y+1):\n        if i\
    \ % 2 == 0:\n            nums.append(i)\n    return nums[-1] if len(nums) != 0\
    \ else -1\n\n", "    for number in range(x, y + 1):\n        if number % 2 ==\
    \ 0:\n            return number\n    return -1\n\n", "    if x > y:\n        #\
    \ Handles special case where x > y by flipping the numbers.\n        return choose_num(y,\
    \ x)\n    # Step 1: enumerate all even numbers in the range [x, y] inclusive\n\
    \    nums = [num for num in range(x, y + 1) if num % 2 == 0]\n    # Step 2: if\
    \ nums is empty, then return -1, else return the maximum.\n    return -1 if len(nums)\
    \ == 0 else max(nums)\n\n", "    largest_even = -1\n\n    # Note: don't use the\
    \ range() function here\n    while x <= y:\n        if x % 2 == 0:\n         \
    \   largest_even = x\n        x += 1\n\n    return largest_even\n\n", "    # select\
    \ even numbers in the range\n    even_nums = [num for num in range(x, y + 1) if\
    \ num % 2 == 0]\n    # if it's empty, then return -1, else return the max even\
    \ number\n    return -1 if not even_nums else max(even_nums)\n\n\n@pytest.mark.parametrize(\"\
    x, y, expected\", [\n    (12, 15, 14),\n    (13, 12, -1),\n    (15, 20, 18),\n\
    \    (16, 21, 20),\n    (19, 22, 20),\n    (1, 3, -1),\n    (3, 1, -1),\n    (5,\
    \ 7, -1),\n    (7, 5, -1),\n    (9, 11, -1),\n    (11, 9, -1),\n    (19, 21, 20),\n\
    \    (21, 19, 20),\n    (23, 25, -1),\n    (25, 23, -1),\n    (27, 29, -1),\n\
    \    (29, 27, -1),\n    (31, 33, -1),\n    (33, 31, -1),\n    (35, 37, 36),\n\
    \    (37, 35, 36),\n    (39, 41, 40),\n    (41, 39, 40),\n    (43, 45, 44),\n\
    \    (45, 43, 44),\n    (47, 49, 48),\n    (49, 47, 48),\n    (51, 53, 52),\n\
    \    (53, 51, 52),\n    (55, 57, 56),\n    (57, 55, 56),\n    (59, 61, 60),\n\
    \    (61, 59, 60),\n    (63, 65, 64),\n    (65, 63, 64),\n    (67, 69, 68),\n\
    \    (69, 67, 68),\n    (71, 73, 72),\n    (73, 71, 72),\n    (75, 77, 76),\n\
    \    (77, 75, 76),\n    (79, 81, 80),\n    (81, 79, 80),\n    (83, 85, 84),\n\
    \    (85, 83, 84),", "    if x > y:\n        return -1\n    if x % 2 == 0:\n \
    \       return x\n    return choose_num(x + 1, y)\n\n", "    x_even = x % 2 ==\
    \ 0\n    y_even = y % 2 == 0\n    # if both x and y are even\n    if x_even and\
    \ y_even:\n        return y\n    # if only x is even\n    elif x_even and not\
    \ y_even:\n        return x\n    # if only y is even\n    elif not x_even and\
    \ y_even:\n        return y\n    # if neither x nor y are even\n    else:\n  \
    \      return -1\n", "    largest = -1\n    for i in range(x, y + 1):\n      \
    \  if i % 2 == 0 and i > largest:\n            largest = i\n    return largest\n",
  "    if x % 2 == 0:\n        return max(range(x, y + 1, 2))\n    return max(range(x\
    \ + 1, y + 1, 2))\n\n", "    # Your code goes here\n    # Hint: If you want to\
    \ test the function but you don't have a proper \n    #       input, you can use\
    \ input() to ask the user to provide you with \n    #       the inputs in the\
    \ console. \n    #       e.g.\n    #       x = int(input(\"Please provide the\
    \ first number: \"))\n    #       y = int(input(\"Please provide the second number:\
    \ \"))\n    #       choose_num(x, y)\n    \n    \n    \n    \n    \n    \n   \
    \ return -1  # replace this line with your code\n\n\n\n\n", "    # TODO: Implement\
    \ this function\n    pass\n", "    if x > y:\n        return -1\n    else:\n \
    \       if x % 2 == 0:\n            return max(x, y)\n        elif y % 2 == 0:\n\
    \            return y\n        else:\n            if (y - x) % 2 == 0:\n     \
    \           return y - 2\n            else:\n                return y - 1\n\n",
  "    even_nums = [n for n in range(x, y + 1) if n % 2 == 0]\n    if even_nums:\n\
    \        return max(even_nums)\n    else:\n        return -1\n", "    for num\
    \ in range(x, y + 1):\n        if num % 2 == 0:\n            return num\n    return\
    \ -1\n", "    biggest_even = -1\n    for i in range(x, y + 1):\n        if i %\
    \ 2 == 0:\n            biggest_even = i\n    return biggest_even\n\n", "    for\
    \ i in range(x, y+1):\n        if i % 2 == 0:\n            return i\n    return\
    \ -1\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            biggest_even\
    \ = i\n    try:\n        return biggest_even\n    except:\n        return -1\n\
    \n", "    # TODO: Complete this function\n\n", "    return max([i for i in range(x,\
    \ y+1) if i % 2 == 0], default=-1)\n\n\n", "    evens = [num for num in range(x,\
    \ y + 1) if num % 2 == 0]\n    return evens[-1] if evens else -1\n\n", "    for\
    \ i in range(x, y+1):\n        if i % 2 == 0:\n            return i\n    return\
    \ -1\n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return\
    \ i\n    return -1\n", "    x = min(x, y)\n    y = max(x, y)\n    if x % 2 !=\
    \ 0:\n        x += 1\n    num = -1\n    for i in range(x, y + 1, 2):\n       \
    \ num = i\n    return num\n\n", "    if x <= y:\n        nums = list(range(x,\
    \ y + 1))\n        even_nums = list(filter(lambda n: n % 2 == 0, nums))\n    \
    \    if len(even_nums) > 0:\n            return max(even_nums)\n        else:\n\
    \            return -1\n    else:\n        return -1\n", "    # Check if x and\
    \ y are positive numbers\n    if x < 0 or y < 0:\n        return -1\n    # Check\
    \ if x is less than y\n    if x > y:\n        return -1\n    # Check if x and\
    \ y are even numbers\n    if x % 2 != 0 and y % 2 != 0:\n        return -1\n \
    \   # Check if y is even number\n    if y % 2 != 0:\n        y -= 1\n    # Check\
    \ if x is even number\n    if x % 2 != 0:\n        x += 1\n    return y\n\n",
  "    if x <= y:\n        if x % 2 == 0:\n            return x\n        elif y %\
    \ 2 == 0:\n            return y\n        else:\n            return -1\n    else:\n\
    \        if x % 2 == 0:\n            return x\n        elif y % 2 == 0:\n    \
    \        return y\n        else:\n            return -1\n\n", "    if x % 2 ==\
    \ 0:\n        if x >= y:\n            return x\n        else:\n            if\
    \ y % 2 == 0:\n                return y\n            else:\n                if\
    \ x != y - 1:\n                    return y - 2\n                else:\n     \
    \               return -1\n    else:\n        if x + 1 == y:\n            return\
    \ -1\n        else:\n            if y % 2 == 0:\n                return y\n  \
    \          else:\n                return y - 1\n", "    # YOUR CODE HERE\n   \
    \ raise NotImplementedError()\n\n", "    # Your code goes here.\n    biggest_even\
    \ = -1\n    # It seems unnecessary to write this, but I can't think of a way around\
    \ it\n    if x % 2 == 0:\n        biggest_even = x\n    else:\n        biggest_even\
    \ = x + 1\n    if x > y:\n        biggest_even = -1\n    return biggest_even\n",
  "    if (x > y):\n        return -1\n    for num in range(x, y+1):\n        if(num\
    \ % 2 == 0):\n            return num\n    return -1\n", "    # raise NotImplementedError\n\
    \    if x % 2 == 0:\n        return max(x,y)\n    else:\n        return max(x+1,y)\n\
    \    \n    if __name__ == '__main__':\n        import doctest\n        doctest.testmod()",
  "    ...\n\n", "    if x > y:\n        return -1\n    elif x % 2 == 0:\n       \
    \ return x\n    elif y % 2 == 0:\n        return y\n    else:\n        return\
    \ choose_num(x + 1, y - 1)\n        \n\n@given(st.integers(), st.integers())",
  "    #TODO: Fill in\n    if x > y:\n        x, y = y, x\n    biggest_even = -1\n\
    \    for number in range(x, y + 1):\n        if number % 2 == 0:\n           \
    \ biggest_even = number\n    return biggest_even\n", "    for i in range(x, y+1):\n\
    \        if i % 2 == 0:\n            return i\n    return -1\n\n", "    # REPLACE\
    \ THE ERROR BELOW WITH YOUR OWN CODE\n    pass\n", "    if x % 2 == 0:\n     \
    \   a = x\n    else:\n        a = x + 1\n    if y % 2 == 0:\n        b = y\n \
    \   else:\n        b = y - 1\n    if a > b:\n        return -1\n    else:\n  \
    \      return b\n", "    even_nums = range(x, y + 1, 2)\n    for num in even_nums:\n\
    \        if num % 2 == 0:\n            return num\n    return -1\n\n", "    #\
    \ YOUR CODE HERE\n    raise NotImplementedError()\n\n", "    # Hint: don't forget\
    \ to use the return statement\n    pass\n\n", "    even_nums = []\n    for num\
    \ in range(x, y + 1):\n        if num % 2 == 0:\n            even_nums.append(num)\n\
    \    if even_nums:\n        return max(even_nums)\n    else:\n        return -1\n\
    \n", "    if x%2 == 0:\n        return x\n    if x%2 == 1:\n        for i in range(x+1,\
    \ y+1):\n            if i%2 == 0:\n                return i\n    return -1\n",
  "    if x % 2 == 0:\n        return x\n    elif x % 2 == 1:\n        x += 1\n  \
    \      return x\n    elif x % 2 == 0 and y % 2 == 0:\n        x += 2\n       \
    \ return x\n    elif x % 2 == 0 and y % 2 == 1:\n        return x\n    elif x\
    \ % 2 == 1 and y % 2 == 0:\n        return y\n    elif x % 2 == 1 and y % 2 ==\
    \ 1:\n        return -1\n\n", "    m = -1\n    if x % 2 == 0:\n        m = x\n\
    \    elif x % 2 == 1:\n        x += 1\n    for i in range(x, y + 1, 2):\n    \
    \    if i > m:\n            m = i\n    return m\n\n", "    counter = x\n    while\
    \ counter <= y:\n        if counter % 2 == 0:\n            return counter\n  \
    \      counter += 1\n    return -1\n\n", "    if x > y:\n        return -1\n \
    \   return choose_num_helper(x, y)\n", "    pass\n\n", "    if x % 2 == 0:\n \
    \       return x\n    elif x % 2 == 1:\n        if x + 1 > y:\n            return\
    \ -1\n        else:\n            return x + 1\n", "    if x % 2 != 0:\n      \
    \  x += 1\n    if y % 2 != 0:\n        y -= 1\n    if x < y:\n        return y\n\
    \    else:\n        return -1\n", "    # TODO\n    even_list = []\n    for i in\
    \ range(x, y+1):\n        if i % 2 == 0:\n            even_list.append(i)\n  \
    \  if len(even_list) == 0:\n        return -1\n    else:\n        return max(even_list)\n",
  "    i = y\n    while i >= x:\n        if i % 2 == 0:\n            return i\n  \
    \      i -= 1\n    return -1\n", "    for i in range(x, y+1):\n        if i %\
    \ 2 == 0:\n            return i\n    return -1\n    raise NotImplementedError()\n\
    \n", "    for i in range(x, y+1):\n        if i % 2 == 0:\n            return\
    \ i\n    return -1\nprint(choose_num(12, 15))\nprint(choose_num(13, 12))\n\n",
  "    return -1\n\n", "    if x < 0 or y < 0:\n        return \"Not valid input.\
    \ x and y should be positive integers.\"\n    elif x % 2 == 0:\n        return\
    \ x\n    elif y % 2 == 0:\n        return y\n    else:\n        return -1\n\n",
  "    if x % 2 == 0:\n        return x\n    elif x + 1 <= y:\n        return x +\
    \ 1\n    else:\n        return -1\n", "    for i in range(x, y+1):\n        if\
    \ i % 2 == 0:\n            return i\n    return -1\n\n", "    return max([i for\
    \ i in range(x, y+1) if i % 2 == 0])\n    \n    \n    ", "    for i in range(x,\
    \ y+1):\n        if i % 2 == 0:\n            return i\n    return -1\n\n", " \
    \   if x > y:\n        return -1\n    largest_even = -1\n    for i in range(x,\
    \ y + 1):\n        if i % 2 == 0:\n            largest_even = i\n    return largest_even\n",
  "    pass\n\n", "    if x % 2 == 0:\n        if x == y:\n            return x\n\
    \        elif y % 2 == 0:\n            return y\n        elif y % 2 != 0:\n  \
    \          return y - 1\n    elif x % 2 != 0:\n        if x == y:\n          \
    \  return -1\n        elif y % 2 == 0:\n            return y\n        elif y %\
    \ 2 != 0:\n            return y - 1\n\n", "    if x % 2 == 0:\n        if x ==\
    \ y:\n            return x\n        elif x+1 <= y:\n            return x\n   \
    \     else:\n            return -1\n    elif x+1 <= y:\n        return x+1\n \
    \   else:\n        return -1\n\n\n", "    biggest_even = -1\n    for i in range(x,\
    \ y + 1):\n        if i % 2 == 0:\n            biggest_even = i\n    return biggest_even\n\
    \n\n", "    try:\n        if x > y:\n            return -1\n        for z in range(x,\
    \ y+1):\n            if z % 2 == 0:\n                return z\n        return\
    \ -1\n    except Exception:\n        print('Error')\n", "    #your code here\n",
  "    if x > y:\n        return -1\n    elif x % 2 == 0:\n        return x\n    else:\n\
    \        return x + 1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    ", "    if x % 2 == 0:\n      \
    \  if x == y:\n            return x\n        elif x > y:\n            return -1\n\
    \        else:\n            return choose_num(x + 2, y)\n    else:\n        return\
    \ choose_num(x + 1, y)\n\n", "    def even(num: int) -> bool:\n        return\
    \ num % 2 == 0\n    return max(filter(even, list(range(x, y + 1)))) if len(list(filter(even,\
    \ list(range(x, y + 1))))) > 0 else -1\n", "    # the range [x, y] inclusive\n\
    \    nums = range(x, y + 1)\n    # filter for the even numbers\n    even_nums\
    \ = filter(lambda n: n % 2 == 0, nums)\n    # sort the numbers descending\n  \
    \  sorted_nums = sorted(even_nums, reverse=True)\n    # return the first (biggest)\
    \ number, or -1 if there's none\n    return sorted_nums[0] if sorted_nums else\
    \ -1\n\n", "    i = y\n    while i >= x:\n        if i % 2 == 0:\n           \
    \ return i\n        i -= 1\n    return -1\n", "    for i in range(x, y+1):\n \
    \       if i % 2 == 0:\n            num = i\n    try:\n        return num\n  \
    \  except UnboundLocalError:\n        return -1\n", "    # Student code goes here\n\
    \    if x % 2 == 0 and y % 2 == 0:\n        return y\n    if x % 2 == 0 and y\
    \ % 2 != 0:\n        return x\n    else:\n        return -1\n\n", "    # WRITING\
    \ YOUR CODE HERE\n    if x%2 == 0 and y%2 == 0:\n        return max(x,y)\n   \
    \ elif x%2 == 0 and y%2 != 0:\n        return x\n    elif x%2 != 0 and y%2 ==\
    \ 0:\n        return y\n    else:\n        return -1\n        ", "    pass\n\n",
  "    # TO DO\n    # Create a list that holds all numbers in the range (inclusive)\n\
    \    num_list = list(range(x, y+1))\n    # Create a list that holds all even numbers\
    \ in the range (inclusive)\n    even_num_list = [num for num in num_list if num\
    \ % 2 == 0]\n    # Find the greatest number in that list\n    if len(even_num_list)\
    \ == 0:\n        return -1\n    else:\n        return max(even_num_list)\n\n",
  "    if x % 2 != 0:\n        x += 1\n    for num in range(x, y + 1, 2):\n      \
    \  if num % 2 == 0:\n            return num\n    return -1", "    # Your code\
    \ here. Make sure to use a return statement!\n    for i in range(x, y+1):\n  \
    \      if i % 2 == 0:\n            return i\n    return -1\n\nprint(choose_num(12,\
    \ 15))\nprint(choose_num(13, 12))", "    if x%2 == 0:\n        for i in range(x,\
    \ y+1):\n            if i % 2 == 0:\n                return i\n    else:\n   \
    \     for i in range(x+1, y+1):\n            if i % 2 == 0:\n                return\
    \ i\n    return -1\n\n@c1.test", "    pass\n\n", "    # Check that x and y are\
    \ positive and that x <= y\n    assert x > 0 and y > 0 and x <= y, 'x and y must\
    \ be positive, and x must be <= y'\n    for num in range(y, x - 1, -1):\n    \
    \    if num % 2 == 0:\n            return num\n    return -1\n\n", "    # raise\
    \ NotImplementedError(\"Function not yet implemented\")\n    for y in range(x,\
    \ y + 1):\n        if y % 2 == 0:\n            return y\n    return -1\n", " \
    \   even_num = -1\n    for i in range(x, y + 1):\n        if i % 2 == 0:\n   \
    \         even_num = i\n    return even_num\n", "    for i in range(x, y+1):\n\
    \        if i % 2 == 0:\n            return i\n    return -1\n\n", "    # Your\
    \ code here\n    max_even = -1\n    for i in range(x, y+1):\n        if i % 2\
    \ == 0:\n            max_even = i\n    return max_even\n\n\n@given(st.integers(min_value=1,\
    \ max_value=20),\n       st.integers(min_value=1, max_value=20))", "    biggest_even\
    \ = -1\n    for num in range(x, y + 1):\n        if num % 2 == 0 and num > biggest_even:\n\
    \            biggest_even = num\n    return biggest_even\n\n", "    y_copy = y\n\
    \    if y < x:\n        raise ValueError(\"The second number should be bigger\
    \ than the first\")\n    if x%2 != 0:\n        x += 1\n    while x <= y_copy:\n\
    \        if x%2 == 0:\n            return x\n        x += 1\n    return -1\n",
  "    return \n", "    if x > y:\n        return -1\n    if x % 2 == 0:\n       \
    \ biggest_even = x\n    else:\n        biggest_even = x + 1\n    for i in range(x\
    \ + 1, y + 1):\n        if i % 2 == 0:\n            biggest_even = i\n    return\
    \ biggest_even\n\n", "    if x % 2 == 0:\n        if x <= y:\n            return\
    \ x\n        else:\n            return -1\n    elif (x + 1) % 2 == 0:\n      \
    \  if x + 1 <= y:\n            return x + 1\n        else:\n            return\
    \ -1\n    else:\n        return -1\n\n", "    for n in range(x, y+1):\n      \
    \  if n % 2 == 0:\n            return n\n    return -1\n\n", "    if x > y:\n\
    \        return -1\n    for i in range(y, x-1, -1):\n        if i % 2 == 0:\n\
    \            return i\n    return -1\n", "    if x % 2 != 0:\n        x += 1\n\
    \    elif y % 2 != 0:\n        y -= 1\n    if x >= y:\n        return -1\n   \
    \ else:\n        return y\n    ", "    raise NotImplementedError\n\n", "    for\
    \ n in range(x, y+1):\n        if n % 2 == 0:\n            return n\n    return\
    \ -1\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

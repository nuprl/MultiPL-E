name: HumanEval_24_largest_divisor
language: py
prompt: "def largest_divisor(n: int) -> int:\n    \"\"\" For a given number n, find\
  \ the largest number that divides n evenly, smaller than n\n    >>> largest_divisor(15)\n\
  \    5\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3) == 1\n    assert candidate(7)\
  \ == 1\n    assert candidate(10) == 5\n    assert candidate(100) == 50\n    assert\
  \ candidate(49) == 7\n\ndef test_check():\n    check(largest_divisor)\n\ntest_check()\n"
completions: ["    divisor = n - 1\n    while n % divisor != 0:\n        divisor -=\
    \ 1\n    return divisor\n", "    for i in range(n-1, 1, -1):\n        if n % i\
    \ == 0:\n            return i\n    return 1\n\n", "    i = n - 1\n    while i\
    \ > 0:\n        if n % i == 0:\n            return i\n        i -= 1\n    return\
    \ i\n\nlargest_divisor(15)", "    largest_factor = 1\n    for i in range(1, n):\n\
    \        if n % i == 0:\n            largest_factor = i\n    return largest_factor\n",
  "    for i in range(n // 2, 0, -1):\n        if n % i == 0:\n            return\
    \ i\n    return n\n\n", "    for i in range(n-1, 1, -1):\n        if n % i ==\
    \ 0:\n            return i\n    return 1\n\n", "    divisor = n - 1\n    while\
    \ divisor > 0:\n        if n % divisor == 0:\n            return divisor\n   \
    \     divisor -= 1\n    return 1\n", "    for i in range(n-1, 0, -1):\n      \
    \  if n % i == 0:\n            return i\n    return 1\n\n", "    i = n - 1\n \
    \   while i > 0:\n        if n % i == 0:\n            return i\n        i -= 1\n\
    \    return 0\n\n", "    pass\n\n", "    # for i in range(n-1, 1, -1):\n    #\
    \     if n % i == 0:\n    #         return i\n    for i in range(2, n):\n    \
    \    if n % i == 0:\n            return largest_divisor(n // i)\n    return n\n\
    \n", "    largest = n - 1\n    while n % largest != 0:\n        largest -= 1\n\
    \    return largest\n\n", "    divisor = 2\n    while divisor < n:\n        if\
    \ n % divisor == 0:\n            return divisor\n        divisor += 1\n    return\
    \ n\n\n", "    if n < 2:\n        return n\n    for i in range(n-1, 1, -1):\n\
    \        if n % i == 0:\n            return i\n    return 1\n\n", "    for d in\
    \ range(n-1, 0, -1):\n        if n % d == 0:\n            return d\n", "    divisor\
    \ = n - 1\n    while divisor > 0:\n        if n % divisor == 0:\n            return\
    \ divisor\n        divisor -= 1\n    return 1\n\n", "    divisor = 2\n    while\
    \ divisor < n:\n        if n % divisor == 0:\n            return divisor\n   \
    \     divisor += 1\n    return 1\n\n", "    for i in range(n-1, 0, -1):\n    \
    \    if n % i == 0:\n            return i\n    return n\n    ", "    for i in\
    \ range(n - 1, 0, -1):\n        if n % i == 0:\n            return i\n    return\
    \ 1\n\n", "    d = 0\n    for i in range(n-1, 1, -1):\n        if n % i == 0:\n\
    \            d = i\n            break\n    return d\n\n@doctest.testmod()\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

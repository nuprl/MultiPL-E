language: py
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(scores - guess) for scores, guess in zip(game, guess)]\n\nprint(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\nprint(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]))\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        diff.append(0)\n        else:\n            diff.append(abs(game[i] -\
    \ guess[i]))\n    return diff\n\nprint(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]))\nprint(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: abs(x[0] - x[1]), zip(game, guess)))\n    \ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(s - g) if s != g else 0 for s, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        if (game[i] == guess[i]):\n  \
    \          res.append(0)\n        else:\n            res.append(abs(game[i] -\
    \ guess[i]))\n    return res\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        res.append(0)\n        else:\n            res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: abs(x[0] - x[1]), zip(game, guess)))\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda p: 0 if p[0] == p[1] else abs(p[0] - p[1]), zip(game, guess)))\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    if len(game)\
    \ == len(guess):\n        res = [abs(i - j) for i, j in zip(game, guess)]\n  \
    \      return res\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n    \n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n    \n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    differences\
    \ = []\n    for i in range(len(game)):\n        if game[i] - guess[i] == 0:\n\
    \            differences.append(0)\n        else:\n            differences.append(abs(game[i]\
    \ - guess[i]))\n    return differences\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda a, b: abs(a - b) if a!=b else 0, game, guess))\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if g == s else abs(g - s) for g, s in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    print(game)\n\
    \    print(guess)\n    result = []\n    for g, s in zip(game, guess):\n      \
    \  if g == s:\n            result.append(0)\n        else:\n            result.append(abs(g\
    \ - s))\n    return result\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 1]

    [1, 2, 3, 4, 2, -2]

    [0, 0, 0, 0, 0, 0]

    [0, 0, 0, 0, 0, 0]

    [1, 2, 3]

    [-1, -2, -3]

    [1, 2, 3, 5]

    [-1, 2, 3, 4]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # I'm\
    \ not convinced that this is the best solution.\n    # Please let me know if you\
    \ have any suggestions.\n    return [i if i == 0 else abs(i) for i in [(x - y)\
    \ for x, y in zip(game, guess)]]\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x!=y else 0 for x,y in zip(game,guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: 0 if x[0] == x[1] else abs(x[0] - x[1]), zip(game, guess)))\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = [abs(i-j) for i, j in zip(game, guess)]\n    return res\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [0 if i==j else abs(i-j) for i,j in zip(game,guess)]\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(sc - g) if sc != g else 0 for sc, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n \
    \   assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0,\
    \ 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    final_list\
    \ = []\n    for i in range(len(game)):\n        if game[i] - guess[i] == 0:\n\
    \            final_list.append(0)\n        else:\n            final_list.append(abs(game[i]\
    \ - guess[i]))\n    return final_list\n\nprint(compare([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]))\nprint(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [i-j if i-j >= 0 else j-i for i, j in zip(game, guess)]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff\
    \ = [abs(score - guess) for score, guess in zip(game, guess)]\n    return diff\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x != y else 0 for x, y in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    out\
    \ = []\n    for a, b in zip(game, guess):\n        out.append(0 if a == b else\
    \ abs(a - b))\n    return out\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\nprint(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\nprint(compare([0,\
    \ 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    ans\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        ans.append(0)\n        else:\n            ans.append(abs(game[i] - guess[i]))\n\
    \    return ans\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(n1 - n2) if n1 != n2 else 0 for n1, n2 in zip(game, guess)]\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: x[0] if x[0] == x[1] else abs(x[0] - x[1]), zip(game, guess)))\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2r7_ti3g.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp2r7_ti3g.py\", line 29,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmp2r7_ti3g.py\", line 23,\
    \ in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3]\nAssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    scores_difference\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        scores_difference.append(0)\n        else:\n            scores_difference.append(abs(game[i]\
    \ - guess[i]))\n    return scores_difference\n    \n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    score\
    \ = []\n    for i in range(len(game)):\n        if game[i] > guess[i]:\n     \
    \       score.append(game[i] - guess[i])\n        elif game[i] < guess[i]:\n \
    \           score.append(guess[i] - game[i])\n        else:\n            score.append(0)\n\
    \    return score\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(s - g) if s != g else 0 for s, g in zip(game, guess)]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n \
    \   assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0,\
    \ 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    off\
    \ = []\n    for i in range(len(game)):\n        off.append(abs(game[i] - guess[i]))\n\
    \    return off\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    output\
    \ = []\n    for i in range(len(game)):\n        if guess[i] == game[i]:\n    \
    \        output.append(0)\n        else:\n            output.append(abs(guess[i]\
    \ - game[i]))\n    return output\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game_score - guess_score) for game_score, guess_score in zip(game, guess)]\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n    \n    \ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    list_compare\
    \ = []\n    for (i,j) in zip(game, guess):\n        if i == j:\n            list_compare.append(0)\n\
    \        else:\n            list_compare.append(abs(i-j))\n    return list_compare\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [abs(i - j) for i, j in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n \
    \   assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0,\
    \ 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: abs(x[0] - x[1]), zip(game, guess)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    results\
    \ = []\n    for i in range(len(game)):\n        result = abs(game[i] - guess[i])\n\
    \        results.append(result)\n    return results\n   \ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x != y else 0 for x, y in zip(game, guess)]\n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    # your code here\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if i == j else abs(i - j) for i, j in zip(game, guess)]\n\nprint(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    comp\
    \ = [0] * len(game)\n    for i in range(len(game)):\n        comp[i] = abs(game[i]\
    \ - guess[i])\n    return comp\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    pass\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp627l1r9p.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmp627l1r9p.py\", line 28,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmp627l1r9p.py\", line 22,\
    \ in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3]\nAssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    for\
    \ i in range(len(game)):\n        if game[i] > guess[i]:\n            guess[i]\
    \ = game[i] - guess[i]\n        elif game[i] < guess[i]:\n            guess[i]\
    \ = guess[i] - game[i]\n        else:\n            guess[i] = 0\n    return guess\n\
    \ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4,\
    \ 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda x: 0 if x[0] == x[1] else abs(x[0] - x[1]), zip(game, guess)))\n\
    \    \n    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(score - guess) for score, guess in zip(game, guess)]\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if g == s else abs(g - s) for g, s in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    print(game)\n\
    \    print(guess)\n    result = [0] * len(game)\n    for idx, s in enumerate(game):\n\
    \        result[idx] = abs(s - guess[idx])\n    return result\n    \nprint(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\n\nprint(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]))\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[1, 2, 3, 4, 5, 1]

    [1, 2, 3, 4, 2, -2]

    [0, 0, 0, 0, 3, 3]

    [0, 5, 0, 0, 0, 4]

    [4, 1, 1, 0, 0, -2]

    [4, 4, 1, 0, 0, 6]

    [1, 2, 3, 4, 5, 1]

    [1, 2, 3, 4, 2, -2]

    [0, 0, 0, 0, 0, 0]

    [0, 0, 0, 0, 0, 0]

    [1, 2, 3]

    [-1, -2, -3]

    [1, 2, 3, 5]

    [-1, 2, 3, 4]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        diff.append(0)\n        else:\n            diff.append(abs(game[i] -\
    \ guess[i]))\n    return diff\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    pass\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp458z6fvc.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmp458z6fvc.py\", line 30,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmp458z6fvc.py\", line 24,\
    \ in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3]\nAssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if x == y else abs(x - y) for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diffs\
    \ = []\n    for i in range(len(game)):\n        diffs.append(abs(game[i] - guess[i]))\n\
    \    return diffs\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    #code_here\n\
    \    result = []\n    for score, guess in zip(game, guess):\n        if score\
    \ == guess:\n            result.append(0)\n        else:\n            result.append(abs(score\
    \ - guess))\n    return result\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # return\
    \ [abs(score - guess) for score, guess in zip(game, guess)]\n\n    # return [abs(game[i]\
    \ - guess[i]) for i in range(len(game))]\n\n    return [abs(x - y) for x, y in\
    \ zip(game, guess)]\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    for\
    \ i in range(len(game)):\n        if game[i] == guess[i]:\n            guess[i]\
    \ = 0\n        else:\n            guess[i] = abs(game[i] - guess[i])\n    return\
    \ guess\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0,\
    \ 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3],\
    \ [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4])\
    \ == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(score - guess) for score, guess in zip(game, guess)]\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n\nprint(compare([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]))\nprint(compare([0, 5, 0, 0, 0, 4], [4, 1, 1, 0, 0, -2]))\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diffs\
    \ = []\n    for (score, guess) in zip(game, guess):\n        if score == guess:\n\
    \            diffs.append(0)\n        else:\n            diffs.append(abs(score\
    \ - guess))\n    return diffs\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    games\
    \ = []\n    for i in range(len(game)):\n        if game[i] > guess[i]:\n     \
    \       games.append(game[i] - guess[i])\n        elif game[i] < guess[i]:\n \
    \           games.append(guess[i] - game[i])\n        else:\n            games.append(0)\n\
    \    return games\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    lst\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        lst.append(0)\n        else:\n            lst.append(abs(game[i] - guess[i]))\n\
    \    return lst\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x!=y else 0 for x,y in zip(game,guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    ret\
    \ = []\n    for i in range(len(game)):\n        if guess[i] == game[i]:\n    \
    \        ret.append(0)\n        else:\n            ret.append(abs(guess[i] - game[i]))\n\
    \    return ret\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[index] - guess[index]) for index in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    out\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        out.append(0)\n        else:\n            out.append(abs(game[i] - guess[i]))\n\
    \    return out\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for g, s in zip(guess, game)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    ans\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        ans.append(0)\n        else:\n            ans.append(abs(game[i] - guess[i]))\n\
    \    return ans\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [x - y if x - y > 0 else y - x for x, y in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    newList\
    \ = []\n    for i in range(len(game)):\n        newList.append(abs(game[i] - guess[i]))\n\
    \    return newList\n\nprint(compare([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    if len(game)\
    \ == len(guess):\n        return [abs(game[i] - guess[i]) for i in range(len(game))]\n\
    \    else:\n        return []\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    out\
    \ = []\n    for i in range(len(game)):\n        if game[i] > guess[i]:\n     \
    \       out.append(game[i] - guess[i])\n        elif game[i] < guess[i]:\n   \
    \         out.append(guess[i] - game[i])\n        else:\n            out.append(0)\n\
    \    return out\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    # your code here\n\
    def check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2,\
    \ -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0,\
    \ 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2,\
    \ -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2,\
    \ 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    results\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        results.append(0)\n        else:\n            results.append(abs(game[i]\
    \ - guess[i]))\n    return results\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    #checking\
    \ the size of given arrays.\n    if len(game) != len(guess):\n        return \"\
    Size of two arrays don't match!\"\n    else:\n        #Creating an empty list\
    \ to store results.\n        result = []\n        #loop to check each item of\
    \ two given lists.\n        for i in range(len(game)):\n            result.append(abs(game[i]\
    \ - guess[i]))\n        return result\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    off\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        off.append(0)\n        else:\n            off.append(abs(game[i] - guess[i]))\n\
    \    return off\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x != y else 0 for x, y in zip(game, guess)]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if game[i] == guess[i] else abs(game[i] - guess[i]) for i in range(len(game))]\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    arr\
    \ = []\n    for i in range(len(game)):\n        if game[i] != guess[i]:\n    \
    \        arr.append(abs(game[i] - guess[i]))\n        else:\n            arr.append(0)\n\
    \    return arr\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [ abs(i-j) if i!=j else 0 for i,j in zip(game,guess) ]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    return [abs(i - j) for i, j in zip(game, guess)]\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff:\
    \ List[int] = []\n    for i in range(len(game)):\n        diff.append(abs(game[i]\
    \ - guess[i]))\n    return diff\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ list(map(lambda t: abs(t[0] - t[1]), zip(game, guess)))\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for i in range(len(game)):\n        res.append(abs(game[i] - guess[i]))\n\
    \    return res\n\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for g, s in zip(guess, game)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    for\
    \ i in range(len(game)):\n        if game[i] == guess[i]:\n            guess[i]\
    \ = 0\n        else:\n            guess[i] = abs(game[i] - guess[i])\n    return\
    \ guess\n\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1,\
    \ 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0,\
    \ 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3],\
    \ [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4])\
    \ == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\nprint(compare([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]))\nprint(compare([0, 5, 0, 0, 0, 4], [4,\
    \ 1, 1, 0, 0, -2]))\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 0, 0, 0, 3, 3]

    [4, 4, 1, 0, 0, 6]

    '
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for g, s in zip(guess, game)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [0 if guess[i] == game[i] else abs(guess[i] - game[i]) for i in range(len(game))]\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [ abs(x-y) if x != y else 0 for x, y in zip(game, guess) ]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    results\
    \ = []\n    for i in range(len(game)):\n        results.append(abs(game[i] - guess[i]))\n\
    \    return results\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4,\
    \ 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    #your\
    \ code here\n    return\ndef check(candidate):\n    assert candidate([1, 2, 3,\
    \ 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1pokku1s.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmp1pokku1s.py\", line 29,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmp1pokku1s.py\", line 23,\
    \ in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3]\nAssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff_list\
    \ = []\n    for i in range(len(game)):\n        diff_list.append(abs(game[i] -\
    \ guess[i]))\n    return diff_list\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [ abs(guess[i] - game[i]) for i in range(len(game)) ]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    correct\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        correct.append(0)\n        else:\n            correct.append(abs(game[i]\
    \ - guess[i]))\n    return correct\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n   \n  \
    \  return [abs(x-y) for x,y in zip(game,guess)]\n  \n  \n \n  \n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n    \n    \n   \
    \ \n    \n    \n    # return list(map(lambda x: abs(x[0] - x[1]) if x[0] != x[1]\
    \ else 0, list(zip(game, guess))))\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    comp\
    \ = []\n    for index, num in enumerate(game):\n        if num == guess[index]:\n\
    \            comp.append(0)\n        else:\n            comp.append(abs(num -\
    \ guess[index]))\n    return comp\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n\ndef check(candidate):\n    assert\
    \ candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n \
    \   assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0,\
    \ 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1,\
    \ 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    scores\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        scores.append(0)\n        else:\n            scores.append(abs(game[i]\
    \ - guess[i]))\n    return scores\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    score\
    \ = 0\n    results = []\n    for i in range(len(game)):\n        if game[i] !=\
    \ guess[i]:\n            score = abs(game[i] - guess[i])\n            results.append(score)\n\
    \        else:\n            results.append(score)\n    return results\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw7se8j3b.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpw7se8j3b.py\", line 37,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmpw7se8j3b.py\", line 34,\
    \ in check\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\
    AssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    matches\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        matches.append(0)\n        else:\n            matches.append(abs(game[i]\
    \ - guess[i]))\n    return matches\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i - j) if i != j else 0 for i, j in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(i-j) for i, j in zip(game, guess)]\n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    r =\
    \ []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n      \
    \      r.append(0)\n        else:\n            r.append(abs(game[i] - guess[i]))\n\
    \    return r\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1],\
    \ [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0,\
    \ 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2,\
    \ 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3,\
    \ 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(g - s) if g != s else 0 for s, g in zip(game, guess)]\n    \ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    abs_diff_list\
    \ = [abs(guess[i] - game[i]) for i in range(len(game))]\n    return abs_diff_list\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    res\
    \ = []\n    for idx, val in enumerate(game):\n        if val == guess[idx]:\n\
    \            res.append(0)\n        else:\n            res.append(abs(val - guess[idx]))\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(a - b) if a != b else 0 for a, b in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x - y) if x != y else 0 for x, y in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    # your\
    \ code here\n    ans=[]\n    for i in range(len(game)):\n        ans.append(abs(game[i]-guess[i]))\n\
    \    return ans\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    diff_array\
    \ = []\n    for i in range(len(game)):\n        diff_array.append(abs(game[i]\
    \ - guess[i]))\n    return diff_array\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(x-y) if x != y else 0 for x, y in zip(game, guess)]\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: -1
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [guess[i] - game[i] if guess[i] != game[i] else 0 for i in range(len(game))]\n\
    \n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3,\
    \ 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0,\
    \ 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1,\
    \ -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) ==\
    \ [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd806lztn.py\", line\
    \ 32, in <module>\n    test_check()\n  File \"/tmp/tmpd806lztn.py\", line 30,\
    \ in test_check\n    check(compare)\n  File \"/tmp/tmpd806lztn.py\", line 24,\
    \ in check\n    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0,\
    \ 0, 0, 0, 3, 3]\nAssertionError\n"
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(guess[i] - game[i]) for i in range(len(game))]\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    error_list\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        error_list.append(0)\n        else:\n            error_list.append(abs(game[i]\
    \ - guess[i]))\n    return error_list\n\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    ans\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        ans.append(0)\n        else:\n            ans.append(abs(game[i] - guess[i]))\n\
    \    return ans\n\ndef check(candidate):\n    assert candidate([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0, 0,\
    \ 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822757
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(s - g) if s != g else 0 for s, g in zip(game, guess)]\n\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    return\
    \ [abs(game[i] - guess[i]) for i in range(len(game))]\n\ndef check(candidate):\n\
    \    assert candidate([1, 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0,\
    \ 3, 3]\n    assert candidate([0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0,\
    \ 0, 0, 0, 0]\n    assert candidate([1, 2, 3], [-1, -2, -3]) == [2, 4, 6]\n  \
    \  assert candidate([1, 2, 3, 5], [-1, 2, 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n\
    \    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822756
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    output\
    \ = []\n    for i in range(len(game)):\n        if game[i] == guess[i]:\n    \
    \        output.append(0)\n        else:\n            output.append(abs(game[i]\
    \ - guess[i]))\n    return output\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822757
- exit_code: 0
  program: "from typing import List\n\ndef compare(game: List[int], guess: List[int])\
    \ -> List[int]:\n    \"\"\"I think we all remember that feeling when the result\
    \ of some long-awaited\n    event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    definitely worth noting down and comparing.\n\
    \    Your task is to determine if a person correctly guessed the results of a\
    \ number of matches.\n    You are given two arrays of scores and guesses of equal\
    \ length, where each index shows a match. \n    Return an array of the same length\
    \ denoting how far off each guess was. If they have guessed correctly,\n    the\
    \ value is 0, and if not, the value is the absolute difference between the guess\
    \ and the score.\n    \n    \n    example:\n\n    >>> compare([1, 2, 3, 4, 5,\
    \ 1], [1, 2, 3, 4, 2, -2])\n    [0, 0, 0, 0, 3, 3]\n    >>> compare([0, 5, 0,\
    \ 0, 0, 4], [4, 1, 1, 0, 0, -2])\n    [4, 4, 1, 0, 0, 6]\n    \"\"\"\n    lst\
    \ = []\n    for i in range(len(game)):\n        x = abs(game[i] - guess[i])\n\
    \        lst.append(x)\n    return lst\n\ndef check(candidate):\n    assert candidate([1,\
    \ 2, 3, 4, 5, 1], [1, 2, 3, 4, 2, -2]) == [0, 0, 0, 0, 3, 3]\n    assert candidate([0,\
    \ 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0]) == [0, 0, 0, 0, 0, 0]\n    assert candidate([1,\
    \ 2, 3], [-1, -2, -3]) == [2, 4, 6]\n    assert candidate([1, 2, 3, 5], [-1, 2,\
    \ 3, 4]) == [2, 0, 0, 1]\n\ndef test_check():\n    check(compare)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659822757

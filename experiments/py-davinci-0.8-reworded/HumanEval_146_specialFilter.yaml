name: HumanEval_146_specialFilter
language: py
prompt: "from typing import List\n\ndef specialFilter(nums: List[int]) -> int:\n \
  \   \"\"\"Write a function that takes an array of numbers as input and returns \n\
  \    the number of elements in the array that are greater than 10 and both \n  \
  \  first and last digits of a number are odd (1, 3, 5, 7, 9).\n    For example:\n\
  \    >>> specialFilter([15, -73, 14, -15])\n    1\n    >>> specialFilter([33, -2,\
  \ -3, 45, 21, 109])\n    2\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([5, -2, 1, -5]) == 0\n    assert\
  \ candidate([15, -73, 14, -15]) == 1\n    assert candidate([33, -2, -3, 45, 21,\
  \ 109]) == 2\n    assert candidate([43, -12, 93, 125, 121, 109]) == 4\n    assert\
  \ candidate([71, -2, -33, 75, 21, 19]) == 3\n    assert candidate([1]) == 0\n  \
  \  assert candidate([]) == 0\n\ndef test_check():\n    check(specialFilter)\n\n\
  test_check()\n"
completions: ["    count = 0\n    for num in nums:\n        if num < 10:\n       \
    \     continue\n        else:\n            rev = int(str(num)[::-1])\n       \
    \     if num % 2 != 0 and rev % 2 != 0:\n                count += 1\n    return\
    \ count\n", "    return sum(\n        1\n        for n in nums\n        if (abs(n)\
    \ > 10) and\n           (str(abs(n))[0] in '13579') and\n           (str(abs(n))[-1]\
    \ in '13579')\n    )\n", "    return len([num for num in nums if (abs(num) //\
    \ 10) % 2 == 1 and num % 2 == 1 and num > 10])\n", "    count = 0\n    for num\
    \ in nums:\n        if num > 10 and str(num)[0] in \"13579\" and str(num)[-1]\
    \ in \"13579\":\n            count += 1\n    return count\n", "    cnt = 0\n \
    \   for num in nums:\n        if num > 10 and str(num)[0] in '13579' and str(num)[-1]\
    \ in '13579':\n            cnt += 1\n    return cnt\n", "    nums = [abs(i) for\
    \ i in nums]\n    nums = [num for num in nums if num // 10 != 0]\n    return len([num\
    \ for num in nums if int(str(num)[0]) % 2 != 0 and int(str(num)[-1]) % 2 != 0])\n",
  "    nums = [n for n in nums if n > 10 and isOdd(n) and isOdd(n // 10 ** (len(str(n))\
    \ - 1))]\n    return len(nums)\n", "    count = 0\n    for i in nums:\n      \
    \  if (i > 10 and i % 2 == 1 and (int(str(i)[0]) % 2 == 1 or int(str(i)[-1]) %\
    \ 2 == 1)):\n            count += 1\n    return count\n", "    return len([x for\
    \ x in nums if x > 10 and int(str(x)[0]) % 2 != 0 and int(str(x)[-1]) % 2 != 0])\n",
  "    # nums = sorted(nums)\n    # count = 0\n    # for num in nums:\n    #     if\
    \ (num > 10) and (str(num)[0] in \"13579\") and (str(num)[-1] in \"13579\"):\n\
    \    #         count += 1\n    # return count\n\n    return len([num for num in\
    \ nums if (num > 10) and (str(num)[0] in \"13579\") and (str(num)[-1] in \"13579\"\
    )])\n", "    if not nums:\n        return 0\n    cnt = 0\n    for i in nums:\n\
    \        first_digit = i // abs(i) * (abs(i) % 10)\n        last_digit = i //\
    \ abs(i) * (abs(i) // 10)\n        if i > 10 and first_digit % 2 != 0 and last_digit\
    \ % 2 != 0:\n            cnt += 1\n    return cnt\n", "    count = 0\n    for\
    \ num in nums:\n        if num > 10 and isOdd(num) and isOdd(num % 10):\n    \
    \        count += 1\n    return count\n", "    count = 0\n    for num in nums:\n\
    \        if num > 10 and str(num)[0] in \"13579\" and str(num)[-1] in \"13579\"\
    :\n            count += 1\n    return count\n", "    nums = list(filter(lambda\
    \ x: x > 10 and x % 2 == 1, nums))\n    count = 0\n    for num in nums:\n    \
    \    while num > 10:\n            num = num // 10\n        if num % 2 == 1:\n\
    \            count += 1\n    return count\n", "    count = 0\n    for num in nums:\n\
    \        if num > 10 and num % 2 != 0 and num // 10 % 2 != 0:\n            count\
    \ += 1\n    return count\n", "    ctr = 0\n    for n in nums:\n        # Check\
    \ to see if n is > 10\n        if n > 10:\n            # Turn the number into\
    \ a string\n            s = str(n)\n            # Check to see if first and last\
    \ digits are odd\n            if int(s[0]) % 2 != 0 and int(s[-1]) % 2 != 0:\n\
    \                ctr += 1\n    return ctr\n", "    count = 0\n    for i in nums:\n\
    \        if 10 < i < 100 and int(str(i)[0]) % 2 != 0 and int(str(i)[-1]) % 2 !=\
    \ 0:\n            count += 1\n    return count\n", "    if len(nums) == 0:\n \
    \       return 0\n    return sum([is_greater_than_10(n) and is_both_odd(n) for\
    \ n in nums])\n", "    count = 0\n    for num in nums:\n        if num > 10 and\
    \ (int(str(num)[0]) % 2 == 1) and (int(str(num)[-1]) % 2 == 1):\n            count\
    \ += 1\n    return count\n", "    count = 0\n    for num in nums:\n        if\
    \ num > 10 and (num // 10) % 2 == 1 and num % 2 == 1:\n            count += 1\n\
    \    return count\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

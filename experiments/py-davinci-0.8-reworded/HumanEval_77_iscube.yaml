name: HumanEval_77_iscube
language: py
prompt: "def iscube(a: int) -> bool:\n    \"\"\"\n    Write a function that takes\
  \ an integer a and returns True \n    if this ingeger is a cube of some integer\
  \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
  \    >>> iscube(1)\n    True\n    >>> iscube(2)\n    False\n    >>> iscube(-1)\n\
  \    True\n    >>> iscube(64)\n    True\n    >>> iscube(0)\n    True\n    >>> iscube(180)\n\
  \    False\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(1) == True\n    assert candidate(2)\
  \ == False\n    assert candidate(-1) == True\n    assert candidate(64) == True\n\
  \    assert candidate(180) == False\n    assert candidate(1000) == True\n    assert\
  \ candidate(0) == True\n    assert candidate(1729) == False\n\ndef test_check():\n\
  \    check(iscube)\n\ntest_check()\n"
completions: ["    if a == 0:\n        return True\n    return abs(a)**(1/3) == int(abs(a)**(1/3))\n\
    \n", "    pass\n\n", "    return is_power(a, 3)\n\n", "    return a in [x**3 for\
    \ x in range(abs(a) + 1)]\n\n", "    if a > 0:\n        return (a**(1/3)).is_integer()\n\
    \    elif a == 0:\n        return True\n    else:\n        return ((-a)**(1/3)).is_integer()\n",
  "    # your code here\n    import math\n    a = abs(a)\n    if a == 0:\n       \
    \ return True\n    for i in range(1,int(math.sqrt(a))+1):\n        if i**3 ==\
    \ a:\n            return True\n    return False\n    # your code here\n    pass\n\
    \    \n    ", "    if a == 0:\n        return True\n    elif a < 0:\n        a\
    \ = -a\n    i = 0\n    while i ** 3 < a:\n        i += 1\n    return i ** 3 ==\
    \ a\n\n\n\n@pytest.mark.timeout(1.0)\n@given(a=st.integers())", "    return a\
    \ == 1 or int(abs(a) ** (1 / 3.0)) ** 3 == abs(a)\n", "    return a >= 0 and a\
    \ ** (1 / 3) % 1 == 0\n", "    return (a == 0) or ((a < 0) == ((a ** (1/3)) %\
    \ 1 == 0))\n\n\n", "    return a >= 0 and abs(a)**(1/3) % 1 == 0\n\n", "    return\
    \ a < 0 or a == 0 or int(a ** (1 / 3)) ** 3 == a\n\n", "    # YOUR CODE HERE\n\
    \    return type(a**(1/3)) is int", "    #Use the cuberoot function in the math\
    \ module,\n    #and check if the cuberoot of a is an integer.\n    import math\n\
    \    root = math.cbrt(a)\n    if root%1 == 0:\n        return True\n    else:\n\
    \        return False\n\nprint(iscube(1))\nprint(iscube(2))\nprint(iscube(-1))\n\
    print(iscube(64))\nprint(iscube(0))\nprint(iscube(180))\n", "    return a in cubelist(a)\n",
  "    # ...\n    return a == 0 or (a > 0 and (abs(a) ** (1/3)) % 1 == 0)\n    \n\
    \    ", "    return (a < 0) or (round(a ** (1 / 3)) ** 3 == a)\n\n", '    pass',
  "    return a == pow(int(pow(a, 1/3)), 3)\n", "    for i in range(abs(a)+1):\n \
    \       if i**3 == abs(a):\n            return True\n    return False\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

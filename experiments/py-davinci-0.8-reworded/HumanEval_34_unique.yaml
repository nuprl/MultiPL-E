name: HumanEval_34_unique
language: py
prompt: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n    \"\
  \"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2, 3, 3, 9,\
  \ 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
  \ == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
completions: ["    return sorted(set(l))\n", "    return sorted(set(l))\n", "    if\
    \ l == []:\n        return []\n    res = []\n    for el in l:\n        if el not\
    \ in res:\n            res.append(el)\n    return sorted(res)", "    return sorted(set(l))\n",
  '    return sorted(set(l))', '    return sorted(set(l))', "    l.sort()\n    return\
    \ [ l[i] for i in range(len(l)) if i == 0 or l[i] != l[i-1] ]\n", "    return\
    \ sorted(set(l))\n", "    return sorted(set(l))\n", "    l.sort()\n    n = len(l)\n\
    \    i = 0\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n            del\
    \ l[i]\n            n -= 1\n        else:\n            i += 1\n    return l\n\n\
    l = [5, 3, 5, 2, 3, 3, 9, 0, 123]\nprint(unique(l))", "    return sorted(set(l))\n",
  "    s = set(l)\n    return sorted(s)", "    set_l = set(l)\n    return sorted(set_l)\n",
  "    return sorted(set(l))\n", "    return sorted(set(l))\n", "    return sorted(set(l))\n",
  "    return sorted(set(l))\n", "    res = []\n    for i in l:\n        if i not\
    \ in res:\n            res.append(i)\n    return sorted(res)\n", '    return sorted(set(l))',
  "    a = []\n    for x in l:\n        if x not in a:\n            a.append(x)\n\
    \    a.sort()\n    return a\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

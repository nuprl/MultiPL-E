language: py
name: HumanEval_155_even_odd_count
results:
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    num = abs(num)\n    while num > 0:\n        if num\
    \ % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n        num //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvfrfcweh.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpvfrfcweh.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvfrfcweh.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \n    even = 0\n    odd = 0\n\n    while num:\n        if num % 2 == 0:\n    \
    \        even += 1\n        else:\n            odd += 1\n        num //= 10\n\n\
    \    return even, odd\n\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwh0u6o3g.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpwh0u6o3g.py\", line 38,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwh0u6o3g.py\", line\
    \ 35, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return 0,\
    \ 0\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpco8xl24v.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpco8xl24v.py\", line 24,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpco8xl24v.py\", line\
    \ 14, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (len([n\
    \ for n in str(num) if int(n) % 2 == 0]), len([n for n in str(num) if int(n) %\
    \ 2 != 0]))\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnn6mp5nu.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpnn6mp5nu.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnn6mp5nu.py\", line\
    \ 16, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpnn6mp5nu.py\"\
    , line 12, in even_odd_count\n    return (len([n for n in str(num) if int(n) %\
    \ 2 == 0]), len([n for n in str(num) if int(n) % 2 != 0]))\n  File \"/tmp/tmpnn6mp5nu.py\"\
    , line 12, in <listcomp>\n    return (len([n for n in str(num) if int(n) % 2 ==\
    \ 0]), len([n for n in str(num) if int(n) % 2 != 0]))\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    num_abs = abs(num)\n    while num_abs > 0:\n        remainder\
    \ = num_abs % 10\n        if remainder % 2 == 0:\n            even += 1\n    \
    \    else:\n            odd += 1\n        num_abs //= 10\n    return even, odd\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpknjmcknt.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpknjmcknt.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpknjmcknt.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for i in range(0, len(str(num))):\n        if int(str(num)[i]) %\
    \ 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    return\
    \ even, odd\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyz_o1ivs.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpyz_o1ivs.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpyz_o1ivs.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpyz_o1ivs.py\"\
    , line 14, in even_odd_count\n    if int(str(num)[i]) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num < 0:\n        num = abs(num)\n    while num != 0:\n \
    \       if num % 2 == 0:\n            even += 1\n        else:\n            odd\
    \ += 1\n        num = num // 10\n    return even, odd\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjitejsby.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpjitejsby.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjitejsby.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    num = abs(num)\n\n    while num > 0:\n        if\
    \ num % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n        num //= 10\n\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptluscxs2.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmptluscxs2.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptluscxs2.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n  \
    \          even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph189htks.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmph189htks.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwypp4bxz.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpwypp4bxz.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwypp4bxz.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwypp4bxz.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    else:\n        num = num\n    odd_number = 0\n\
    \    even_number = 0\n    while num > 0:\n        remainder = num % 10\n     \
    \   if remainder % 2 == 0:\n            even_number += 1\n        else:\n    \
    \        odd_number += 1\n        num = num // 10\n    return even_number, odd_number\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2_en1h5d.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp2_en1h5d.py\", line 38,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2_en1h5d.py\", line\
    \ 35, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_odd\
    \ = 0\n    count_even = 0\n    if num < 0:\n        num = -num\n    while num\
    \ > 0:\n        if num % 2 == 0:\n            count_even += 1\n        else:\n\
    \            count_odd += 1\n        num = num // 10\n    return count_even, count_odd\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ir0vtb6.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp8ir0vtb6.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8ir0vtb6.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = str(num)\n\
    \    even_count = 0\n    odd_count = 0\n    for digit in num:\n        if int(digit)\
    \ % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return (even_count, odd_count)\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6dkal12k.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp6dkal12k.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6dkal12k.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp6dkal12k.py\"\
    , line 16, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # Convert\
    \ the given number to a string\n    num_string = str(num)\n    # Set the initial\
    \ count of even numbers and odd numbers to 0\n    even_count = 0\n    odd_count\
    \ = 0\n    # Iterate over each character in the string\n    for character in num_string:\n\
    \        # Check if the character is an even number, and increase the even_count\
    \ by 1\n        if int(character) % 2 == 0:\n            even_count += 1\n   \
    \     # Else it is an odd number, so increase the odd_count by 1\n        else:\n\
    \            odd_count += 1\n    # Return a tuple with the even_count and odd_count\n\
    \    return (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwfvrbv97.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpwfvrbv97.py\", line 39,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwfvrbv97.py\", line\
    \ 30, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwfvrbv97.py\"\
    , line 20, in even_odd_count\n    if int(character) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    number_of_evens\
    \ = 0\n    number_of_odds = 0\n    if num == 0:\n        return (0,0)\n    else:\n\
    \        for digit in str(abs(num)):\n            if int(digit) % 2 == 0:\n  \
    \              number_of_evens += 1\n            else:\n                number_of_odds\
    \ += 1\n    return (number_of_evens, number_of_odds)\n\nprint(even_odd_count(-12))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqi5j1q8b.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpqi5j1q8b.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqi5j1q8b.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: '(1, 1)

    '
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    while num != 0:\n        if (num % 10) % 2 == 0:\n   \
    \         even_count += 1\n        else:\n            odd_count += 1\n       \
    \ num //= 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    even_counter = 0\n    odd_counter = 0\n    while\
    \ num:\n        if num % 2 == 0:\n            even_counter += 1\n        else:\n\
    \            odd_counter += 1\n        num //= 10\n    return even_counter, odd_counter\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphjglmog9.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmphjglmog9.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphjglmog9.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n\nprint(even_odd_count(-12))\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # take the\
    \ absolute value of the number\n    # convert to string\n    num_str = str(abs(num))\n\
    \    # initialize even and odd count\n    even_count = 0\n    odd_count = 0\n\
    \    # iterate through each character in string\n    for ch in num_str:\n    \
    \    # convert character to int\n        digit = int(ch)\n        # check if even\
    \ or odd and update count\n        if digit % 2 == 0:\n            even_count\
    \ += 1\n        else:\n            odd_count += 1\n    # return even and odd count\n\
    \    return even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    if num > 0:\n        str_number = str(num)\n        for\
    \ digit in str_number:\n            if int(digit) % 2 == 0:\n                even_count\
    \ += 1\n            else:\n                odd_count += 1\n    else:\n       \
    \ str_number = str(num)[1:]\n        for digit in str_number:\n            if\
    \ int(digit) % 2 == 0:\n                even_count += 1\n            else:\n \
    \               odd_count += 1\n    return even_count, odd_count\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp22vjjtjc.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp22vjjtjc.py\", line 42,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp22vjjtjc.py\", line\
    \ 39, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjo913164.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjo913164.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    #Use a counter\
    \ to count the even/odd numbers\n    even_counter = 0\n    odd_counter = 0\n \
    \   #Convert the int to a string to iterate through\n    for digit in str(num):\n\
    \        if int(digit) % 2 == 0:\n            even_counter += 1\n        else:\n\
    \            odd_counter += 1\n    return even_counter, odd_counter\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprpgamz7b.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmprpgamz7b.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmprpgamz7b.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmprpgamz7b.py\"\
    , line 17, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    if num < 0:\n        num = -num\n    while num > 0:\n        if\
    \ num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n\
    \        num //= 10\n    return even, odd\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf046q_gh.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpf046q_gh.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpf046q_gh.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for char in str(num):\n        if char.isdigit():\n\
    \            if int(char) % 2 == 0:\n                even_count += 1\n       \
    \     else:\n                odd_count += 1\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for n in str(num):\n        if int(n) % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj9l31clw.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpj9l31clw.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj9l31clw.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpj9l31clw.py\"\
    , line 14, in even_odd_count\n    if int(n) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_str\
    \ = str(num)\n    odd_count = 0\n    even_count = 0\n    for i in num_str:\n \
    \       if i in \"02468\":\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_543ezpx.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp_543ezpx.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_543ezpx.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_even\
    \ = 0\n    count_odd = 0\n    while num:\n        digit = num % 10\n        if\
    \ digit % 2 == 0:\n            count_even += 1\n        else:\n            count_odd\
    \ += 1\n        num //= 10\n    return count_even, count_odd\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_even\
    \ = 0\n    count_odd = 0\n    if num < 0:\n        num = -num\n    while num >\
    \ 0:\n        last_digit = num % 10\n        if last_digit % 2 == 0:\n       \
    \     count_even += 1\n        else:\n            count_odd += 1\n        num\
    \ = num // 10\n    return count_even, count_odd\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiyos70pw.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpiyos70pw.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpiyos70pw.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for d in str(num):\n        if int(d) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp312kpn35.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp312kpn35.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp312kpn35.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp312kpn35.py\"\
    , line 15, in even_odd_count\n    if int(d) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num:\n        if num % 2 == 0:\n            even += 1\n\
    \        else:\n            odd += 1\n        num //= 10\n    return even, odd\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    if num < 0:\n        num = abs(num)\n    while num > 0:\n      \
    \  digit = num % 10\n        if digit % 2 == 0:\n            even += 1\n     \
    \   else:\n            odd += 1\n        num //= 10\n    return even, odd\n  \
    \  \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2xhh7zzc.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmp2xhh7zzc.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2xhh7zzc.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    num = abs(num)\n    while num > 0:\n        if num\
    \ % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n        num //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvfrfcweh.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpvfrfcweh.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvfrfcweh.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_cnt\
    \ = 0\n    odd_cnt = 0\n    num = abs(num)\n    while num:\n        if num % 2\
    \ == 0:\n            even_cnt += 1\n        else:\n            odd_cnt += 1\n\
    \        num //= 10\n    return even_cnt, odd_cnt\n\ndef check(candidate):\n \
    \   assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1h2lhsdq.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp1h2lhsdq.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1h2lhsdq.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    while num:\n        if num % 2 == 0:\n            even += 1\n  \
    \      else:\n            odd += 1\n        num //= 10\n    return even, odd\n\
    \n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # your code\
    \ goes here\n    even_odd_tuple = []\n    even_tuple = []\n    odd_tuple = []\n\
    \    is_even = lambda x: True if x % 2 == 0 else False\n    for number in str(num):\n\
    \        if is_even(int(number)):\n            even_tuple.append(number)\n   \
    \     else:\n            odd_tuple.append(number)\n    even_odd_tuple.append(len(even_tuple))\n\
    \    even_odd_tuple.append(len(odd_tuple))\n    return tuple(even_odd_tuple)\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphwe0ules.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmphwe0ules.py\", line 38,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphwe0ules.py\", line\
    \ 29, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmphwe0ules.py\"\
    , line 18, in even_odd_count\n    if is_even(int(number)):\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbscsq7s.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkbscsq7s.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpkbscsq7s.py\", line\
    \ 15, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (\n\
    \        # Grab the number of even numbers\n        len([n for n in str(num) if\
    \ int(n) % 2 == 0]),\n        # Grab the number of odd numbers\n        len([n\
    \ for n in str(num) if int(n) % 2 != 0])\n    )\n```\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: SyntaxError
  stderr: "  File \"/tmp/tmp04w7jeih.py\", line 18\n    ```\n    ^\nSyntaxError: invalid\
    \ syntax\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (1,\
    \ 2)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq6fy3obo.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpq6fy3obo.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpq6fy3obo.py\", line\
    \ 15, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num < 0:\n        num = abs(num)\n    if num < 10:\n    \
    \    if num % 2 == 0:\n            even += 1\n        else:\n            odd +=\
    \ 1\n    else:\n        for digit in str(num):\n            if int(digit) % 2\
    \ == 0:\n                even += 1\n            else:\n                odd +=\
    \ 1\n    return (even, odd)\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        digit = num % 10\n        if digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0:\n        num = abs(num)\n    while num\
    \ > 0:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n\
    \            odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1uynvlq_.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp1uynvlq_.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1uynvlq_.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    even = 0\n    odd = 0\n    while num:\n    \
    \    if num % 2 == 0:\n            even += 1\n        else:\n            odd +=\
    \ 1\n        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnz2bb5ku.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpnz2bb5ku.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnz2bb5ku.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for num_ in str(num):\n        num_ = int(num_)\n\
    \        if num_ % 2 == 0:\n            even_count += 1\n        else:\n     \
    \       odd_count += 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpten_j4bg.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpten_j4bg.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpten_j4bg.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpten_j4bg.py\"\
    , line 15, in even_odd_count\n    num_ = int(num_)\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for n in str(num):\n        if int(n) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppsqb6yq4.py\", line\
    \ 20, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmppsqb6yq4.py\"\
    , line 14, in even_odd_count\n    if int(n) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    number_str\
    \ = str(num)\n    evens = 0\n    odds = 0\n    for digit in number_str:\n    \
    \    if digit.isdigit():\n            if int(digit) % 2 == 0:\n              \
    \  evens += 1\n            else:\n                odds += 1\n    return evens,\
    \ odds\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\n\
    print(even_odd_count(-12))\nprint(even_odd_count(123))\nprint(even_odd_count(12345678910))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc9nn05fo.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpc9nn05fo.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for _ in str(num):\n        _ = int(_)\n       \
    \ if _ % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_2ved52k.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp_2ved52k.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_2ved52k.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp_2ved52k.py\"\
    , line 15, in even_odd_count\n    _ = int(_)\nValueError: invalid literal for\
    \ int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n      \
    \      even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    even_odd_count(-12)\n\n\"\"\"\nRuntime: O(N)\nSpace: O(1)\n\"\"\"\n\n\"\"\"\n\
    Runtime: O(N)\nSpace: O(1)\n\"\"\"\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpce74mp0e.py\", line\
    \ 20, in <module>\n    even_odd_count(-12)\n  File \"/tmp/tmpce74mp0e.py\", line\
    \ 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr1_lb958.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpr1_lb958.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr1_lb958.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpr1_lb958.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        r = num % 10\n        if\
    \ r % 2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n        num = num // 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = odd\
    \ = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even +=\
    \ 1\n        else:\n            odd += 1\n    return even, odd\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_drids85.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_drids85.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_drids85.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp_drids85.py\"\
    , line 14, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_counter\
    \ = 0\n    odd_counter = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_counter += 1\n        else:\n            odd_counter += 1\n\
    \    return even_counter, odd_counter\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwumx_66f.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpwumx_66f.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwumx_66f.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwumx_66f.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for char in str(num):\n        if int(char) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp55p1xjmp.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp55p1xjmp.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp55p1xjmp.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp55p1xjmp.py\"\
    , line 14, in even_odd_count\n    if int(char) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # to work\
    \ for negative and positive numbers, have to use abs value\n    abs_num = abs(num)\n\
    \    digits = []\n    even_count = 0\n    odd_count = 0\n    while abs_num > 0:\n\
    \        digits.append(abs_num % 10)\n        abs_num = abs_num // 10\n    for\
    \ digit in digits:\n        if digit % 2 == 0:\n            even_count += 1\n\
    \        else:\n            odd_count += 1\n    return (even_count, odd_count)\n\
    \n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo24t1aqb.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpo24t1aqb.py\", line 40,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpo24t1aqb.py\", line\
    \ 37, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj804u54z.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpj804u54z.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj804u54z.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpj804u54z.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    odd_count\
    \ = 0\n    even_count = 0\n    for char in str(num):\n        if int(char) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvpfmgzbn.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpvpfmgzbn.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpvpfmgzbn.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpvpfmgzbn.py\"\
    , line 15, in even_odd_count\n    if int(char) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_digits\
    \ = 0\n    odd_digits = 0\n    while num:\n        if num % 2 == 0:\n        \
    \    even_digits += 1\n        else:\n            odd_digits += 1\n        num\
    \ //= 10\n    return even_digits, odd_digits\n\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    odd = 0\n\
    \    even = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n         \
    \   even += 1\n        else:\n            odd += 1\n    return even, odd\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp07gmxulx.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp07gmxulx.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp07gmxulx.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp07gmxulx.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    # there may be negative\n    if num < 0:\n        num = -num\n\
    \    while num > 0:\n        num, last_digit = divmod(num, 10)\n        if last_digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpa8f5x3r2.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpa8f5x3r2.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpa8f5x3r2.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_counter\
    \ = 0\n    odd_counter = 0\n    if num < 0:\n        num = -num\n    while num\
    \ > 0:\n        digit = num % 10\n        if digit % 2 == 0:\n            even_counter\
    \ += 1\n        else:\n            odd_counter += 1\n        num = num // 10\n\
    \    return even_counter, odd_counter\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpggbp1wuo.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpggbp1wuo.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpggbp1wuo.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    even, odd = 0, 0\n    for digit in str(num):\n\
    \        if int(digit) % 2 == 0:\n            even += 1\n        else:\n     \
    \       odd += 1\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num:\n        if num % 2 == 0:\n         \
    \   even_count += 1\n        else:\n            odd_count += 1\n        num //=\
    \ 10\n    return even_count, odd_count\n\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    num = abs(num)\n    while num > 0:\n        if num % 2 == 0:\n \
    \           even += 1\n        else:\n            odd += 1\n        num //= 10\n\
    \    return even, odd\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbh6cibko.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpbh6cibko.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbh6cibko.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        digit = num % 10\n    \
    \    if digit % 2 == 0:\n            even_count += 1\n        else:\n        \
    \    odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_digits,\
    \ odd_digits = 0, 0\n    abs_num = abs(num)\n    while abs_num > 0:\n        if\
    \ abs_num % 2 == 0:\n            even_digits += 1\n        else:\n           \
    \ odd_digits += 1\n        abs_num //= 10\n    return even_digits, odd_digits\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo5mibpt6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpo5mibpt6.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpo5mibpt6.py\", line\
    \ 30, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num < 0:\n        num = -num\n    while num > 0:\n      \
    \  digit = num % 10\n        if digit % 2 == 0:\n            even += 1\n     \
    \   else:\n            odd += 1\n        num = num // 10\n    return even, odd\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptbtsnx8f.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmptbtsnx8f.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptbtsnx8f.py\", line\
    \ 34, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # Initialize\
    \ even and odd counters to 0\n    even, odd = 0, 0\n    # Do until num is 0\n\
    \    while num != 0:\n        # Get the last digit using modulus\n        last_digit\
    \ = num % 10\n        # Increment even count if last digit is even\n        if\
    \ last_digit % 2 == 0:\n            even += 1\n        # Increment odd count if\
    \ last digit is odd\n        else:\n            odd += 1\n        # Take away\
    \ the last digit\n        num //= 10\n    # Return even and odd count respectively\n\
    \    return even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = odd\
    \ = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n         \
    \   even += 1\n        else:\n            odd += 1\n    return even, odd\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp94ed2aeo.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp94ed2aeo.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp94ed2aeo.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp94ed2aeo.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num == 0:\n        return (1, 0)\n    while num\
    \ != 0:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n\
    \            odd_count += 1\n        num = num // 10\n    return (even_count,\
    \ odd_count)\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n \
    \   assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n  \
    \  assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    s = str(num)\n    for n in s:\n        n = int(n)\n        if n\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps63qvzkg.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmps63qvzkg.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmps63qvzkg.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmps63qvzkg.py\"\
    , line 15, in even_odd_count\n    n = int(n)\nValueError: invalid literal for\
    \ int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwypp4bxz.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpwypp4bxz.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwypp4bxz.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwypp4bxz.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_even\
    \ = 0\n    count_odd = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            count_even += 1\n        else:\n            count_odd +=\
    \ 1\n    return count_even, count_odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5464zh7d.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp5464zh7d.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5464zh7d.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp5464zh7d.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    while num != 0:\n        if num % 2 == 0:\n            even += 1\n\
    \        else:\n            odd += 1\n        num //= 10\n    return even, odd\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    if num < 0:\n        num = -num\n    while num > 0:\n        if\
    \ num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n\
    \        num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaf0d312n.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpaf0d312n.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpaf0d312n.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even_digits = 0\n    odd_digits = 0\n    while num > 0:\n        if num %\
    \ 2 == 0:\n            even_digits += 1\n        else:\n            odd_digits\
    \ += 1\n        num = num // 10\n    return even_digits, odd_digits\n    # Solution\
    \ 2\n    # even_count = 0\n    # odd_count = 0\n    # for c in str(num):\n   \
    \ #     if int(c) % 2 == 0:\n    #         even_count += 1\n    #     else:\n\
    \    #         odd_count += 1\n    # return even_count, odd_count\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcl28fpze.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpcl28fpze.py\", line 45,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpcl28fpze.py\", line\
    \ 42, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for num in str(num):\n        if int(num) % 2 == 0:\n      \
    \      even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx_6wsqb7.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpx_6wsqb7.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpx_6wsqb7.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpx_6wsqb7.py\"\
    , line 15, in even_odd_count\n    if int(num) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # write\
    \ your code here\n    even = 0\n    odd = 0\n    for i in str(num):\n        if\
    \ int(i) % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n\
    \    return even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm8d6ho4o.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpm8d6ho4o.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpm8d6ho4o.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpm8d6ho4o.py\"\
    , line 16, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpwjssr136.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwjssr136.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr1_lb958.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpr1_lb958.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr1_lb958.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpr1_lb958.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    e_count,\
    \ o_count = 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n      \
    \      e_count += 1\n        else:\n            o_count += 1\n    return (e_count,\
    \ o_count)\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n   \
    \ assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert\
    \ candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert\
    \ candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert\
    \ candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpi74h4qb4.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpi74h4qb4.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpi74h4qb4.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpi74h4qb4.py\"\
    , line 14, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for x in str(num):\n        if int(x) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0ky6ij_k.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp0ky6ij_k.py\"\
    , line 15, in even_odd_count\n    if int(x) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        i = int(i)\n       \
    \ if i%2 == 0:\n            even_count += 1\n        else:\n            odd_count\
    \ += 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr0ol77uv.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpr0ol77uv.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpr0ol77uv.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpr0ol77uv.py\"\
    , line 15, in even_odd_count\n    i = int(i)\nValueError: invalid literal for\
    \ int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsrk95649.py\", line\
    \ 20, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpsrk95649.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_cnt\
    \ = 0\n    odd_cnt = 0\n    # we can use the modulo operator to determine if a\
    \ number is even or odd\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_cnt += 1\n        else:\n            odd_cnt += 1\n    return\
    \ even_cnt, odd_cnt\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n\
    \    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n \
    \   assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp05in1kk6.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp05in1kk6.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp05in1kk6.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp05in1kk6.py\"\
    , line 16, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpwjssr136.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwjssr136.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    digit =\
    \ 0\n    even_count = 0\n    odd_count = 0\n    if num < 0:\n        num = num\
    \ * -1\n    while num > 0:\n        digit = num % 10\n        if digit % 2 ==\
    \ 0:\n            even_count += 1\n        else:\n            odd_count += 1\n\
    \        num = num // 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpswrhu9_s.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpswrhu9_s.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpswrhu9_s.py\", line\
    \ 34, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even = 0\n    odd = 0\n    while num > 0:\n        if num % 2 == 0:\n   \
    \         even += 1\n        else:\n            odd += 1\n        num //= 10\n\
    \    return even, odd\n\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufbmxzpo.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpufbmxzpo.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpufbmxzpo.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_num,\
    \ odd_num = 0, 0\n    for char in str(num):\n        if char.isdigit():\n    \
    \        if int(char) % 2 == 0:\n                even_num += 1\n            else:\n\
    \                odd_num += 1\n    return even_num, odd_num\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj804u54z.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpj804u54z.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpj804u54z.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpj804u54z.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    odd_digits\
    \ = 0\n    even_digits = 0\n    if num < 0:\n        num = -num\n    while num:\n\
    \        num, digit = divmod(num, 10)\n        if digit % 2 == 0:\n          \
    \  even_digits += 1\n        else:\n            odd_digits += 1\n    return even_digits,\
    \ odd_digits\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n   \
    \ assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert\
    \ candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert\
    \ candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert\
    \ candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpy6bmpnkz.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpy6bmpnkz.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpy6bmpnkz.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    # TODO 1: implement this function\n    for x in\
    \ str(num):\n        if int(x) % 2 == 0:\n            even_count += 1\n      \
    \  else:\n            odd_count += 1\n    return (even_count, odd_count)\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpox2x9fri.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpox2x9fri.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpox2x9fri.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpox2x9fri.py\"\
    , line 16, in even_odd_count\n    if int(x) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # create\
    \ a list of digits\n    nums = str(num)\n    # start the even and odd count at\
    \ 0\n    even_count = 0\n    odd_count = 0\n    # iterate through the list of\
    \ digits to get even and odd counts\n    for n in nums:\n        if int(n) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    # return the even and odd counts\n    return (even_count, odd_count)\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmh6unkxg.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpmh6unkxg.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmh6unkxg.py\", line\
    \ 27, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpmh6unkxg.py\"\
    , line 19, in even_odd_count\n    if int(n) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for d in str(num):\n        if int(d) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4jxsmwpg.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4jxsmwpg.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4jxsmwpg.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp4jxsmwpg.py\"\
    , line 15, in even_odd_count\n    if int(d) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        num, remainder = divmod(num,\
    \ 10)\n        if remainder % 2 == 0:\n            even_count += 1\n        else:\n\
    \            odd_count += 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num:\n        if num % 2 == 0:\n         \
    \   even_count += 1\n        else:\n            odd_count += 1\n        num //=\
    \ 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # My solution:\n\
    \    even = 0\n    odd = 0\n    num = abs(num)\n    while num > 0:\n        if\
    \ num % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n\
    \        num //= 10\n    return (even, odd)\n\n    # Solutions from others:\n\
    \    # Solution 1:\n    # even = 0\n    # odd = 0\n    # for digit in str(abs(num)):\n\
    \    #     if int(digit) % 2 == 0:\n    #         even += 1\n    #     else:\n\
    \    #         odd += 1\n    # return (even, odd)\n\n    # Solution 2:\n    #\
    \ from collections import Counter\n    # even = 0\n    # odd = 0\n    # for k,\
    \ v in Counter(str(abs(num))).items():\n    #     if int(k) % 2 == 0:\n    # \
    \        even += v\n    #     else:\n    #         odd += v\n    # return (even,\
    \ odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp449r1giq.py\", line\
    \ 59, in <module>\n    test_check()\n  File \"/tmp/tmp449r1giq.py\", line 57,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp449r1giq.py\", line\
    \ 54, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_string\
    \ = str(num)\n    count_even = 0\n    count_odd = 0\n    for i in num_string:\n\
    \        if int(i) % 2 == 0:\n            count_even += 1\n        else:\n   \
    \         count_odd += 1\n    return (count_even, count_odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw3ibr8u6.py\", line\
    \ 22, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpw3ibr8u6.py\"\
    , line 16, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_copy\
    \ = abs(num)\n    even_count = 0\n    odd_count = 0\n    while num_copy > 0:\n\
    \        if num_copy % 2 == 0:\n            even_count += 1\n        else:\n \
    \           odd_count += 1\n        num_copy //= 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz1fcsbmw.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpz1fcsbmw.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpz1fcsbmw.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num < 0:\n        num = abs(num)\n    while num > 0:\n  \
    \      last_digit = num % 10\n        if last_digit % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ even, odd\n    raise NotImplementedError()\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmppu1x6yqu.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmppu1x6yqu.py\", line 38,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmppu1x6yqu.py\", line\
    \ 35, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n  \
    \          even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbeke92ti.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbeke92ti.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbeke92ti.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpbeke92ti.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpepw83xmy.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpepw83xmy.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpepw83xmy.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpepw83xmy.py\"\
    , line 14, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if i.isdigit():\n            if\
    \ int(i) % 2 == 0:\n                even += 1\n            else:\n           \
    \     odd += 1\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    pass\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl1n5q42r.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpl1n5q42r.py\", line 24,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpl1n5q42r.py\", line\
    \ 14, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_counter\
    \ = 0\n    odd_counter = 0\n    while num != 0:\n        if (num % 10) % 2 ==\
    \ 0:\n            even_counter += 1\n        else:\n            odd_counter +=\
    \ 1\n        num = num // 10\n    return even_counter, odd_counter\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even = 0\n    odd = 0\n    while num > 0:\n        digit = num % 10\n   \
    \     if digit % 2 == 0:\n            even += 1\n        else:\n            odd\
    \ += 1\n        num //= 10\n    return even, odd\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprzf7yh74.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmprzf7yh74.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmprzf7yh74.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # (1, 2)\
    \ => [1, 2]\n    str_num = str(num)\n    even_count = 0\n    odd_count = 0\n \
    \   for i in str_num:\n        if int(i) % 2 == 0:\n            even_count +=\
    \ 1\n        else:\n            odd_count += 1\n    return (even_count, odd_count)\n\
    \nprint(even_odd_count(-12))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptei5ubwo.py\", line\
    \ 23, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmptei5ubwo.py\"\
    , line 17, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpwjssr136.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwjssr136.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpwjssr136.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    num_str = str(num)\n    even_count = 0\n   \
    \ odd_count = 0\n    for digit in num_str:\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ (even_count, odd_count)\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # define\
    \ a helper function to determine if a digit is even or odd\n    def check_even_odd(digit:\
    \ int) -> Tuple[int, int]:\n        if digit % 2 == 0:\n            return 1,\
    \ 0\n        else:\n            return 0, 1\n\n    # first check the sign of num\n\
    \    # if negative, add 1 to count odd\n    if num < 0:\n        even, odd = check_even_odd(-num)\n\
    \        odd += 1\n    else:\n        even, odd = check_even_odd(num)\n\n    #\
    \ iterate through each digit, keep track of the even and odd counts\n    while\
    \ num != 0:\n        num //= 10\n        e, o = check_even_odd(num)\n        even\
    \ += e\n        odd += o\n\n    return even, odd\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsmqrt_g1.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpsmqrt_g1.py\", line 47,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpsmqrt_g1.py\", line\
    \ 37, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for d in str(num):\n        if int(d) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzn7jhy_9.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpzn7jhy_9.py\"\
    , line 15, in even_odd_count\n    if int(d) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (1,\
    \ 1)\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv8vjte5z.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpv8vjte5z.py\", line 24,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpv8vjte5z.py\", line\
    \ 14, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in range(len(str(num))):\n        if num %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\neven_odd_count(12345)\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpytk32oop.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpytk32oop.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpytk32oop.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # evens\
    \ = []\n    # odds = []\n    #\n    # abs_num = abs(num)\n    # while abs_num\
    \ > 0:\n    #     if abs_num % 2 == 0:\n    #         evens.append(abs_num % 10)\n\
    \    #     else:\n    #         odds.append(abs_num % 10)\n    #     abs_num //=\
    \ 10\n    #\n    # return len(evens), len(odds)\n\n    evens = 0\n    odds = 0\n\
    \n    abs_num = abs(num)\n    while abs_num > 0:\n        if abs_num % 2 == 0:\n\
    \            evens += 1\n        else:\n            odds += 1\n        abs_num\
    \ //= 10\n\n    return evens, odds\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8zeuas3w.py\", line\
    \ 52, in <module>\n    test_check()\n  File \"/tmp/tmp8zeuas3w.py\", line 50,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp8zeuas3w.py\", line\
    \ 47, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_abs\
    \ = abs(num)\n    even_count = 0\n    odd_count = 0\n    while num_abs > 0:\n\
    \        if num_abs % 2 == 0:\n            even_count += 1\n        else:\n  \
    \          odd_count += 1\n        num_abs //= 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpleuvar61.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpleuvar61.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpleuvar61.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    digits =\
    \ map(int, str(abs(num)))\n    return (sum(1 for x in digits if x % 2 == 0), sum(1\
    \ for x in digits if x % 2 != 0))\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfgwsfkud.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpfgwsfkud.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpfgwsfkud.py\", line\
    \ 15, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for d in str(num):\n        if int(d) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return even, odd\n\ndef\
    \ check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhkfdcv5.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpnhkfdcv5.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpnhkfdcv5.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpnhkfdcv5.py\"\
    , line 15, in even_odd_count\n    if int(d) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjody5my0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjody5my0.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2ch2g92v.py\", line\
    \ 20, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp2ch2g92v.py\"\
    , line 14, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num != 0:\n        last_digit = num % 10\n        if last_digit\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num = num // 10\n    return even, odd\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    l = abs(num)\n\
    \    even = 0\n    odd = 0\n    while l != 0:\n        if l % 2 == 0:\n      \
    \      even += 1\n        else:\n            odd += 1\n        l = l // 10\n \
    \   return even, odd\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphmh7p6xm.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmphmh7p6xm.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphmh7p6xm.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for i in range(len(str(num))):\n        if int(str(num)[i]) % 2\
    \ == 0:\n            even += 1\n        else:\n            odd += 1\n    return\
    \ even, odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpginlfc60.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpginlfc60.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpginlfc60.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpginlfc60.py\"\
    , line 14, in even_odd_count\n    if int(str(num)[i]) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjody5my0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjody5my0.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n  \
    \          even += 1\n        else:\n            odd += 1\n    return even, odd\n\
    \n\nassert even_odd_count(-12) == (1, 1)\nassert even_odd_count(123) == (1, 2)\n\
    assert even_odd_count(0) == (1, 0)\nassert even_odd_count(123456789) == (4, 5)\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6av0gum_.py\", line\
    \ 22, in <module>\n    assert even_odd_count(-12) == (1, 1)\n  File \"/tmp/tmp6av0gum_.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for char in str(num):\n        if int(char) % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpotjhrhgo.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpotjhrhgo.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpotjhrhgo.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpotjhrhgo.py\"\
    , line 15, in even_odd_count\n    if int(char) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # Your code\
    \ goes here\n    evens = 0\n    odds = 0\n    while num != 0:\n        if num\
    \ % 2 == 0:\n            evens += 1\n        else:\n            odds += 1\n  \
    \      num = num // 10\n    return (evens, odds)\n\ndef check(candidate):\n  \
    \  assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even = 0\n    odd = 0\n    while num > 0:\n        if num % 2 == 0:\n   \
    \         even += 1\n        else:\n            odd += 1\n        num //= 10\n\
    \    return even, odd\n\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpufbmxzpo.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpufbmxzpo.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpufbmxzpo.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num:\n        num, r = divmod(num, 10)\n        if r &\
    \ 1:\n            odd += 1\n        else:\n            even += 1\n    return even,\
    \ odd\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2zgiyuv6.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp2zgiyuv6.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2zgiyuv6.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp2zgiyuv6.py\"\
    , line 14, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # Use abs\
    \ to handle negative numbers\n    num = abs(num)\n    even = 0\n    odd = 0\n\
    \    while num > 0:\n        if num % 2 == 0:\n            even += 1\n       \
    \ else:\n            odd += 1\n        num //= 10\n    return even, odd\n\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgsgjyghw.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpgsgjyghw.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpgsgjyghw.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for c in str(num):\n        if int(c) % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9uliy6_i.py\", line\
    \ 20, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp9uliy6_i.py\"\
    , line 14, in even_odd_count\n    if int(c) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    if num < 0:\n        num = -num\n    while num:\n        if num\
    \ % 2 == 0:\n            even += 1\n        else:\n            odd += 1\n    \
    \    num //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcgzs1izm.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpcgzs1izm.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpcgzs1izm.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821025
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    odd_count,\
    \ even_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 ==\
    \ 0:\n            even_count += 1\n        else:\n            odd_count += 1\n\
    \    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_c2mt6a7.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp_c2mt6a7.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp_c2mt6a7.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp_c2mt6a7.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if num % 2 == 0:\n    \
    \        even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821025
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_digits,\
    \ odd_digits = 0, 0\n    for digit in str(num):\n        digit = int(digit)\n\
    \        if digit % 2 == 0:\n            even_digits += 1\n        else:\n   \
    \         odd_digits += 1\n    return even_digits, odd_digits\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplpeoqyv4.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmplpeoqyv4.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmplpeoqyv4.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmplpeoqyv4.py\"\
    , line 14, in even_odd_count\n    digit = int(digit)\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2a4q9e7x.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmp2a4q9e7x.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp2a4q9e7x.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp2a4q9e7x.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n  \
    \          even += 1\n        else:\n            odd += 1\n    return even, odd\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjarqu4lk.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjarqu4lk.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjarqu4lk.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjarqu4lk.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for i in str(num):\n        if i == \"-\" or i == \"+\":\n \
    \           continue\n        i = int(i)\n        if i % 2 == 0:\n           \
    \ even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\nprint(even_odd_count(-12))\n\
    print(even_odd_count(123))\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821020
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_even\
    \ = 0\n    count_odd = 0\n    if num == 0:\n        return (1, 0)\n    if num\
    \ < 0:\n        num = abs(num)\n    while num > 0:\n        last_digit = num %\
    \ 10\n        if last_digit % 2 == 0:\n            count_even += 1\n        else:\n\
    \            count_odd += 1\n        num = num // 10\n    return (count_even,\
    \ count_odd)\n\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n \
    \   assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n  \
    \  assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even_count = 0\n    odd_count = 0\n    while num:\n        if num % 2 ==\
    \ 0:\n            even_count += 1\n        else:\n            odd_count += 1\n\
    \        num //= 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptagxwb3p.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmptagxwb3p.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptagxwb3p.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821020
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return tuple(str(num).count(x)\
    \ for x in ['0', '2', '4', '6', '8'])\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphwvuesdu.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmphwvuesdu.py\", line 26,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphwvuesdu.py\", line\
    \ 16, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # num =\
    \ str(num)\n    # count_even = 0\n    # count_odd = 0\n    # for i in num:\n \
    \   #     if int(i) % 2 == 0:\n    #         count_even += 1\n    #     else:\n\
    \    #         count_odd += 1\n    # return count_even, count_odd\n    return\
    \ (\n        *map(len, filter(lambda x: len(x) == 2, re.findall(r'[02468]|[13579]',\
    \ str(num)))),\n    )\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwxeujz1_.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpwxeujz1_.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpwxeujz1_.py\", line\
    \ 26, in check\n    assert candidate(7) == (0, 1)\n  File \"/tmp/tmpwxeujz1_.py\"\
    , line 22, in even_odd_count\n    *map(len, filter(lambda x: len(x) == 2, re.findall(r'[02468]|[13579]',\
    \ str(num)))),\nNameError: name 're' is not defined\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    odd_count\
    \ = 0\n    even_count = 0\n    for n in str(num):\n        if int(n) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6w3du43l.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmp6w3du43l.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp6w3du43l.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp6w3du43l.py\"\
    , line 15, in even_odd_count\n    if int(n) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    is_negative\
    \ = num < 0\n    if is_negative:\n        num = -num\n    even = 0\n    odd =\
    \ 0\n    while num > 0:\n        if num % 2 == 0:\n            even += 1\n   \
    \     else:\n            odd += 1\n        num //= 10\n    return (even, odd)\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpg6h6unvt.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpg6h6unvt.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpg6h6unvt.py\", line\
    \ 34, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    while num:\n        if (num % 10) % 2 == 0:\n        \
    \    even_count += 1\n        else:\n            odd_count += 1\n        num //=\
    \ 10\n    return even_count, odd_count\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    pass\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbscsq7s.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpkbscsq7s.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpkbscsq7s.py\", line\
    \ 15, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n      \
    \      even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndasanhy.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpndasanhy.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpndasanhy.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpndasanhy.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (1,\
    \ 2)\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdfki5bhw.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpdfki5bhw.py\", line 24,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpdfki5bhw.py\", line\
    \ 14, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    while num:\n        if num % 2 == 0:\n            even += 1\n\
    \        else:\n            odd += 1\n        num //= 10\n    return even, odd\n\
    \n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num <\
    \ 0:\n        num = abs(num)\n    even = 0\n    odd = 0\n    while num:\n    \
    \    if (num % 10) % 2 == 0:\n            even += 1\n        else:\n         \
    \   odd += 1\n        num //= 10\n    return even, odd\n\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp193dfyfe.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp193dfyfe.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp193dfyfe.py\", line\
    \ 34, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return (\n\
    \        sum(1 for digit in str(num) if int(digit) % 2 == 0),\n        sum(1 for\
    \ digit in str(num) if int(digit) % 2 == 1),\n    )\n    \ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmptopt95vu.py\", line\
    \ 30, in <module>\n    test_check()\n  File \"/tmp/tmptopt95vu.py\", line 28,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmptopt95vu.py\", line\
    \ 19, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmptopt95vu.py\"\
    , line 13, in even_odd_count\n    sum(1 for digit in str(num) if int(digit) %\
    \ 2 == 0),\n  File \"/tmp/tmptopt95vu.py\", line 13, in <genexpr>\n    sum(1 for\
    \ digit in str(num) if int(digit) % 2 == 0),\nValueError: invalid literal for\
    \ int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even_count = 0\n    odd_count = 0\n    for digit in str(num):\n        digit\
    \ = int(digit)\n        if digit % 2 == 0:\n            even_count += 1\n    \
    \    else:\n            odd_count += 1\n    return even_count, odd_count\n\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    pass\n\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmx6cnbqk.py\", line\
    \ 28, in <module>\n    test_check()\n  File \"/tmp/tmpmx6cnbqk.py\", line 26,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmx6cnbqk.py\", line\
    \ 16, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_string\
    \ = str(num)\n    even_count = 0\n    odd_count = 0\n    for n in num_string:\n\
    \        if int(n) % 2 == 0:\n            even_count += 1\n        else:\n   \
    \         odd_count += 1\n    return (even_count, odd_count)\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo7wboiyz.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpo7wboiyz.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpo7wboiyz.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpo7wboiyz.py\"\
    , line 16, in even_odd_count\n    if int(n) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num = abs(num)\n\
    \    even_count = 0\n    odd_count = 0\n    while num > 0:\n        if num % 2\
    \ == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n        num //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqgndmv1l.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpqgndmv1l.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqgndmv1l.py\", line\
    \ 31, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for d in str(num):\n        if int(d) % 2 == 0:\n          \
    \  even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4jxsmwpg.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmp4jxsmwpg.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp4jxsmwpg.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmp4jxsmwpg.py\"\
    , line 15, in even_odd_count\n    if int(d) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = odd\
    \ = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n         \
    \   even += 1\n        else:\n            odd += 1\n    return even, odd\n   \
    \ # Better way:\n    # return sum(digit % 2 == 0 for digit in str(num)), sum(digit\
    \ % 2 == 1 for digit in str(num))\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp067z15xz.py\", line\
    \ 22, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmp067z15xz.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        digit = num % 10\n    \
    \    if digit % 2 == 0:\n            even_count += 1\n        else:\n        \
    \    odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for x in str(num):\n        if int(x) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph4kjomn0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmph4kjomn0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmph4kjomn0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmph4kjomn0.py\"\
    , line 15, in even_odd_count\n    if int(x) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjo913164.py\", line\
    \ 21, in <module>\n    print(even_odd_count(-12))\n  File \"/tmp/tmpjo913164.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if digit.isdigit():\n      \
    \      if int(digit) % 2 == 0:\n                even += 1\n            else:\n\
    \                odd += 1\n    return even, odd\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    while num != 0:\n        digit = num % 10\n        if digit % 2\
    \ == 0:\n            even += 1\n        else:\n            odd += 1\n        num\
    \ //= 10\n    return even, odd\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjody5my0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjody5my0.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num < 0:\n        num = abs(num)\n    for i in str(num):\n\
    \        if int(i) % 2 == 0:\n            even += 1\n        else:\n         \
    \   odd += 1\n    return even, odd\n\nprint(even_odd_count(-12))\nprint(even_odd_count(123))\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '(1, 1)

    (1, 2)

    '
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    count_even,\
    \ count_odd = 0, 0\n    if num < 0:\n        num = -num\n    while num > 0:\n\
    \        digit = num % 10\n        if digit % 2 == 0:\n            count_even\
    \ += 1\n        else:\n            count_odd += 1\n        num //= 10\n    return\
    \ count_even, count_odd\n\n\ndef check(candidate):\n    assert candidate(7) ==\
    \ (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2,\
    \ 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) ==\
    \ (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) ==\
    \ (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu8fsycwe.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpu8fsycwe.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpu8fsycwe.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_digits\
    \ = 0\n    odd_digits = 0\n    while num:\n        if num%2:\n            odd_digits\
    \ += 1\n        else:\n            even_digits += 1\n        num = num//10\n \
    \   return even_digits, odd_digits\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0:\n        num = abs(num)\n    else:\n\
    \        num = num\n    while num > 0:\n        if num % 2 == 0:\n           \
    \ even_count += 1\n        else:\n            odd_count += 1\n        num = num\
    \ // 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx4l5t6na.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpx4l5t6na.py\", line 38,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpx4l5t6na.py\", line\
    \ 35, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n  \
    \          even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbeke92ti.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpbeke92ti.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpbeke92ti.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpbeke92ti.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    return tuple(bin(abs(num)).count(x)\
    \ for x in ('0', '1'))\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5fy6pymy.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmp5fy6pymy.py\", line 25,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp5fy6pymy.py\", line\
    \ 15, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0:\n        num = abs(num)\n    while num\
    \ > 0:\n        last_digit = num % 10\n        if last_digit % 2 == 0:\n     \
    \       even_count += 1\n        else:\n            odd_count += 1\n        num\
    \ = num // 10\n    return even_count, odd_count\n\ndef check(candidate):\n   \
    \ assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqnlhmezj.py\", line\
    \ 38, in <module>\n    test_check()\n  File \"/tmp/tmpqnlhmezj.py\", line 36,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqnlhmezj.py\", line\
    \ 33, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0:\n        num = -num\n    while num >\
    \ 0:\n        digit = num % 10\n        if digit % 2 == 0:\n            even_count\
    \ += 1\n        else:\n            odd_count += 1\n        num = num // 10\n \
    \   return even_count, odd_count\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq28l45x8.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpq28l45x8.py\", line 37,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpq28l45x8.py\", line\
    \ 34, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num != 0:\n        if (num % 10) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    \
    \    num = num // 10\n    return (even_count, odd_count)\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num:\n        last_digit = num % 10\n    \
    \    if last_digit % 2 == 0:\n            even_count += 1\n        else:\n   \
    \         odd_count += 1\n        num //= 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even, odd\
    \ = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n      \
    \      even += 1\n        else:\n            odd += 1\n    return even, odd\n\n\
    def check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpndasanhy.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmpndasanhy.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpndasanhy.py\", line\
    \ 22, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpndasanhy.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    if num >\
    \ 0:\n        return even_odd_count(num / 10) + (num % 2 == 0,)\n    else:\n \
    \       return 0, 0\n\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmxtplvdg.py\", line\
    \ 31, in <module>\n    test_check()\n  File \"/tmp/tmpmxtplvdg.py\", line 29,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpmxtplvdg.py\", line\
    \ 19, in check\n    assert candidate(7) == (0, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if int(digit) %\
    \ 2 == 0:\n            even_count += 1\n        else:\n            odd_count +=\
    \ 1\n    return even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpb0mex0m1.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpb0mex0m1.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpb0mex0m1.py\"\
    , line 15, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    number =\
    \ num if num >= 0 else num * -1\n    even = len([num for num in str(number) if\
    \ int(num) % 2 == 0])\n    odd = len([num for num in str(number) if int(num) %\
    \ 2 != 0])\n    return even, odd\n\n\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    counter\
    \ = [0, 0]\n    if num < 0:\n        num = -num\n    while num > 0:\n        counter[num\
    \ % 2] += 1\n        num //= 10\n    return tuple(counter)\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3c7ygciu.py\", line\
    \ 33, in <module>\n    test_check()\n  File \"/tmp/tmp3c7ygciu.py\", line 31,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp3c7ygciu.py\", line\
    \ 28, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num:\n        if num % 2 == 0:\n         \
    \   even_count += 1\n        else:\n            odd_count += 1\n        num //=\
    \ 10\n    return even_count, odd_count\n\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    num_list\
    \ = []\n    even_count = 0\n    odd_count = 0\n    for i in str(num):\n      \
    \  if int(i) % 2 == 0:\n            even_count += 1\n        else:\n         \
    \   odd_count += 1\n        num_list.append(even_count)\n        num_list.append(odd_count)\n\
    \    return tuple(num_list)\n\ndef check(candidate):\n    assert candidate(7)\
    \ == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) ==\
    \ (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxkv2jmcy.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmpxkv2jmcy.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpxkv2jmcy.py\", line\
    \ 26, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpxkv2jmcy.py\"\
    , line 16, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # if num\
    \ > 0:\n    #     num_str = str(num)\n    # else:\n    #     num_str = str(num)[1:]\n\
    \    num_str = str(abs(num))\n    # num_str = str(num)\n    even_count = 0\n \
    \   odd_count = 0\n    for num in num_str:\n        if int(num) % 2 == 0:\n  \
    \          even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: 0
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    if num == 0:\n        return (1, 0)\n    if num < 0:\n     \
    \   num = -num\n    while num > 0:\n        if num % 2 == 0:\n            even\
    \ += 1\n        else:\n            odd += 1\n        num = num // 10\n    return\
    \ (even, odd)\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n  \
    \  assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n   \
    \ assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3, 3)\n\
    \    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2, 3)\n\
    \    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    # start\
    \ with the count of each type of digit\n    even_count = 0\n    odd_count = 0\n\
    \n    # if the number is negative, strip it of the sign\n    num = abs(num)\n\n\
    \    # for each digit, check if it is even or odd\n    while num > 0:\n      \
    \  digit = num % 10\n        if digit % 2 == 0:\n            even_count += 1\n\
    \        else:\n            odd_count += 1\n        num //= 10\n\n    return even_count,\
    \ odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert\
    \ candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps2lrq153.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmps2lrq153.py\", line 41,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmps2lrq153.py\", line\
    \ 38, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even = 0\n\
    \    odd = 0\n    for char in str(num):\n        if int(char) % 2 == 0:\n    \
    \        even += 1\n        else:\n            odd += 1\n    return (even, odd)\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphpoqsplq.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmphpoqsplq.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmphpoqsplq.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmphpoqsplq.py\"\
    , line 15, in even_odd_count\n    if int(char) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    while num:\n        # copy of last digit\n     \
    \   last_digit = num % 10\n        if last_digit % 2 == 0:\n            even_count\
    \ += 1\n        else:\n            odd_count += 1\n        # remove last digit\
    \ from num\n        num //= 10\n    return even_count, odd_count\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821026
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for digit in str(num):\n        if digit in ('0',\
    \ '2', '4', '6', '8'):\n            even_count += 1\n        else:\n         \
    \   odd_count += 1\n    return even_count, odd_count\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqpswp_3w.py\", line\
    \ 35, in <module>\n    test_check()\n  File \"/tmp/tmpqpswp_3w.py\", line 33,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpqpswp_3w.py\", line\
    \ 24, in check\n    assert candidate(-78) == (1, 1)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    if num < 0:\n        num = abs(num)\n    while num\
    \ > 0:\n        if num % 2 == 0:\n            even_count += 1\n        else:\n\
    \            odd_count += 1\n        num = num // 10\n    return even_count, odd_count\n\
    \ndef check(candidate):\n    assert candidate(7) == (0, 1)\n    assert candidate(-78)\
    \ == (1, 1)\n    assert candidate(3452) == (2, 2)\n    assert candidate(346211)\
    \ == (3, 3)\n    assert candidate(-345821) == (3, 3)\n    assert candidate(-2)\
    \ == (1, 0)\n    assert candidate(-45347) == (2, 3)\n    assert candidate(0) ==\
    \ (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1uynvlq_.py\", line\
    \ 37, in <module>\n    test_check()\n  File \"/tmp/tmp1uynvlq_.py\", line 35,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmp1uynvlq_.py\", line\
    \ 32, in check\n    assert candidate(0) == (1, 0)\nAssertionError\n"
  stdout: ''
  timestamp: 1659821015
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_counter\
    \ = 0\n    odd_counter = 0\n    while num != 0:\n        if (num % 10) % 2 ==\
    \ 0:\n            even_counter += 1\n        else:\n            odd_counter +=\
    \ 1\n        num = num // 10\n    return even_counter, odd_counter\n\n\ndef check(candidate):\n\
    \    assert candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert\
    \ candidate(3452) == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert\
    \ candidate(-345821) == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert\
    \ candidate(-45347) == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n\
    \    check(even_odd_count)\n\ntest_check()\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count,\
    \ odd_count = 0, 0\n    for digit in str(num):\n        if int(digit) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\n\nimport unittest\n\ndef check(candidate):\n    assert\
    \ candidate(7) == (0, 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452)\
    \ == (2, 2)\n    assert candidate(346211) == (3, 3)\n    assert candidate(-345821)\
    \ == (3, 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347)\
    \ == (2, 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf939dwf2.py\", line\
    \ 36, in <module>\n    test_check()\n  File \"/tmp/tmpf939dwf2.py\", line 34,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpf939dwf2.py\", line\
    \ 25, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpf939dwf2.py\"\
    , line 14, in even_odd_count\n    if int(digit) % 2 == 0:\nValueError: invalid\
    \ literal for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821021
- exit_code: -1
  program: "from typing import Tuple\n\ndef even_odd_count(num: int) -> Tuple[int,\
    \ int]:\n    \"\"\"Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n\n     Example:\n    >>> even_odd_count(-12)\n\
    \    (1, 1)\n    >>> even_odd_count(123)\n    (1, 2)\n    \"\"\"\n    even_count\
    \ = 0\n    odd_count = 0\n    for i in str(num):\n        if int(i) % 2 == 0:\n\
    \            even_count += 1\n        else:\n            odd_count += 1\n    return\
    \ even_count, odd_count\n\ndef check(candidate):\n    assert candidate(7) == (0,\
    \ 1)\n    assert candidate(-78) == (1, 1)\n    assert candidate(3452) == (2, 2)\n\
    \    assert candidate(346211) == (3, 3)\n    assert candidate(-345821) == (3,\
    \ 3)\n    assert candidate(-2) == (1, 0)\n    assert candidate(-45347) == (2,\
    \ 3)\n    assert candidate(0) == (1, 0)\n\ndef test_check():\n    check(even_odd_count)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 34, in <module>\n    test_check()\n  File \"/tmp/tmpjody5my0.py\", line 32,\
    \ in test_check\n    check(even_odd_count)\n  File \"/tmp/tmpjody5my0.py\", line\
    \ 23, in check\n    assert candidate(-78) == (1, 1)\n  File \"/tmp/tmpjody5my0.py\"\
    , line 15, in even_odd_count\n    if int(i) % 2 == 0:\nValueError: invalid literal\
    \ for int() with base 10: '-'\n"
  stdout: ''
  timestamp: 1659821016

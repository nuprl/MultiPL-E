language: py
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    f0, f1 = 0, 1\n    for i in range(n - 1):\n       \
    \ f0, f1 = f1, f0 + f1\n    return f1\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n <= 2:\n        return 1\n    a, b = 1, 1\n   \
    \ for i in range(n - 2):\n        a, b = b, a + b\n    return b\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return fib_tail(n, 0, 1)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1lq98s46.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmp1lq98s46.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp1lq98s46.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp1lq98s46.py\", line 11, in fib\n\
    \    return fib_tail(n, 0, 1)\nNameError: name 'fib_tail' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_seq = [0, 1]\n    for i in range(2, n + 1):\n        fib_seq.append(fib_seq[i\
    \ - 1] + fib_seq[i - 2])\n    return fib_seq[n]\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Cannot use negative number as parameter\"\
    )\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    def fib_seq(n: int) -> Sequence[int]:\n        \"\"\"Return n-th Fibonacci\
    \ sequence.\n        >>> list(fib_seq(1))\n        [1]\n        >>> list(fib_seq(2))\n\
    \        [1, 1]\n        >>> list(fib_seq(4))\n        [1, 1, 2, 3]\n        \"\
    \"\"\n        fib0, fib1 = 0, 1\n        if n == 0:\n            return\n    \
    \    if n == 1:\n            yield fib1\n            return\n        for _ in\
    \ range(n - 1):\n            fib0, fib1 = fib1, fib0 + fib1\n            yield\
    \ fib1\n    return seq_last(fib_seq(n))\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9z4loiab.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp9z4loiab.py\", line 39,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9z4loiab.py\", line 32, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9z4loiab.py\", line 10, in fib\n\
    \    def fib_seq(n: int) -> Sequence[int]:\nNameError: name 'Sequence' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_values = {1: 1, 2: 1}\n    for i in range(3, n + 1):\n        fib_values[i]\
    \ = fib_values[i - 1] + fib_values[i - 2]\n    return fib_values[n]\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n - 1):\n        a, b = b, a + b\n   \
    \ return b\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    n = n - 1\n    prev, next = 0, 1\n    for i in range(n):\n        prev,\
    \ next = next, prev + next\n    return next\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\n@pytest.mark.parametrize(\"\
    n,expected\", [\n    (1, 1),\n    (2, 1),\n    (8, 21),\n    (10, 55),\n])\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpj3jv8fb_.py\", line\
    \ 18, in <module>\n    @pytest.mark.parametrize(\"n,expected\", [\nNameError:\
    \ name 'pytest' is not defined. Did you mean: 'bytes'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return reduce(lambda x, y: x + y, range(n))\n\nfib(10)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvbxtczu8.py\", line\
    \ 12, in <module>\n    fib(10)\n  File \"/tmp/tmpvbxtczu8.py\", line 10, in fib\n\
    \    return reduce(lambda x, y: x + y, range(n))\nNameError: name 'reduce' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = 0\n    b = 1\n    while n > 0:\n        a, b = b, a + b\n        n\
    \ -= 1\n    return a\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError('Fibonacci number is non-negative')\n\
    \    if n == 0:\n        return 0\n    if n == 1:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzu0p0wx6.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpzu0p0wx6.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpzu0p0wx6.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpzu0p0wx6.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError('Number must be positive')\n    return\
    \ _fib(n)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd6w7gwde.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpd6w7gwde.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpd6w7gwde.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpd6w7gwde.py\", line 12, in fib\n\
    \    return _fib(n)\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_prev, fib_next = 0, 1\n    for _ in range(n - 1):\n        fib_prev,\
    \ fib_next = fib_next, fib_prev + fib_next\n    return fib_next\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"Not a positive number\")\n    res\
    \ = 0\n    if n in (1, 2):\n        res = 1\n    else:\n        res = fib(n -\
    \ 1) + fib(n - 2)\n    return res\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    a, b = 0, 1\n    for _ in range(n - 1):\n\
    \        a, b = b, a + b\n    return b\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    num_prev, num_curr = 0, 1\n    for _ in range(n - 1):\n        num_prev,\
    \ num_curr = num_curr, num_prev + num_curr\n    return num_curr\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n@pytest.mark.parametrize('n, ans', [\n    (1, 1),\n    (2, 1),\n   \
    \ (8, 21),\n    (10, 55),\n])\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeakoxsi3.py\", line\
    \ 15, in <module>\n    @pytest.mark.parametrize('n, ans', [\nNameError: name 'pytest'\
    \ is not defined. Did you mean: 'bytes'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return int(fib_float(n))\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfutkl_mh.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpfutkl_mh.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpfutkl_mh.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpfutkl_mh.py\", line 10, in fib\n\
    \    return int(fib_float(n))\nNameError: name 'fib_float' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\nprint(fib(3))\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '2

    '
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # if n in [1, 2]:\n    #     return 1\n    # return fib(n - 1) + fib(n\
    \ - 2)\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n \
    \   return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Fibonacci numbers are not defined\
    \ for negative indices.\")\n    elif n == 0:\n        return 0\n    elif n ==\
    \ 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph3okaqv_.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmph3okaqv_.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmph3okaqv_.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmph3okaqv_.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmph3okaqv_.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmph3okaqv_.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmph3okaqv_.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = 0\n    b = 1\n    for i in range(n):\n        a, b = b, a + b\n  \
    \  return a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq0j_omlq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpq0j_omlq.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpq0j_omlq.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpq0j_omlq.py\", line 10, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    a, b = 0, 1\n    for _ in range(n - 1):\n        a,\
    \ b = b, a + b\n    return b\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    cur = 0\n    next = 1\n    i = 0\n    while i < n:\n\
    \        cur, next = next, cur + next\n        i += 1\n    return cur\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    a, b = 0, 1\n    for i in range(2, n\
    \ + 1):\n        a, b = b, a + b\n    return b\n\n\ndef check(candidate):\n  \
    \  assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Incorrect input\")\n    elif n ==\
    \ 0:\n        return 0\n    elif n == 1:\n        return 1\n    elif n == 2:\n\
    \        return 1\n    return fib(n - 1) + fib(n - 2)\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    elif n == 2:\n  \
    \      return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError\n    a, b = 0, 1\n    for _ in range(n):\n\
    \        a, b = b, a + b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_matrix(n)[0][1]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb2hddd3g.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpb2hddd3g.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpb2hddd3g.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpb2hddd3g.py\", line 10, in fib\n\
    \    return fib_matrix(n)[0][1]\nNameError: name 'fib_matrix' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpq0j_omlq.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpq0j_omlq.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpq0j_omlq.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpq0j_omlq.py\", line 10, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n must be a positive number\")\n\
    \    if n < 2:\n        return n\n    a, b = 0, 1\n    for i in range(n):\n  \
    \      a, b = b, a + b\n    return a\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpay4urh3v.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpay4urh3v.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpay4urh3v.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpay4urh3v.py\", line 12, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpay4urh3v.py\", line 12,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpay4urh3v.py\",\
    \ line 12, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpay4urh3v.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_loop(n)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp03wz8akp.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmp03wz8akp.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp03wz8akp.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp03wz8akp.py\", line 10, in fib\n\
    \    return fib_loop(n)\nNameError: name 'fib_loop' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Negative value! \")\n    if n ==\
    \ 0:\n        return 0\n    elif n == 1:\n        return 1\n    else:\n      \
    \  return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9maz8x27.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9maz8x27.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9maz8x27.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9maz8x27.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"n must be positive\")\n    if n\
    \ < 3:\n        return 1\n    a, b = 1, 1\n    for _ in range(n - 2):\n      \
    \  a, b = b, a + b\n    return b\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = b = 1\n    for i in range(n - 1):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_acc(n, 1, 0)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2jsx9wx0.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp2jsx9wx0.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp2jsx9wx0.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp2jsx9wx0.py\", line 10, in fib\n\
    \    return fib_acc(n, 1, 0)\nNameError: name 'fib_acc' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError('n should be >= 1')\n    return next(take(n,\
    \ fibonacci()))\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n \
    \   assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjvbaacsu.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpjvbaacsu.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpjvbaacsu.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpjvbaacsu.py\", line 12, in fib\n\
    \    return next(take(n, fibonacci()))\nNameError: name 'take' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise Exception('Negative arguments are not supported')\n\
    \    return _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoij07315.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpoij07315.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpoij07315.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpoij07315.py\", line 12, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    a, b = 0, 1\n    for i in range(2, n\
    \ + 1):\n        a, b = b, a + b\n    return b\n\n\n@assert_type\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ki72lwt.py\", line\
    \ 18, in <module>\n    @assert_type\nNameError: name 'assert_type' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    elif n == 2:\n  \
    \      return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpphznb3kr.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpphznb3kr.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpphznb3kr.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpphznb3kr.py\", line 11, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n    \ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    v1, v2, v3 = 1, 1, 0\n    for rec in bin(n)[3:]:\n        calc = v2 *\
    \ v2\n        v1, v2, v3 = v1 * v1 + calc, (v1 + v3) * v2, calc + v3 * v3\n  \
    \      if rec == '1':\n            v1, v2, v3 = v1 + v2, v1, v2\n    return v2\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    f0, f1 = 0, 1\n    for i in range(n - 1):\n       \
    \ f0, f1 = f1, f0 + f1\n    return f1\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a = 1\n    b = 1\n    for i in range(2, n):\n        a, b = b, a + b\n\
    \    return b\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n   \
    \ assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # Initialize Fibonacci numbers\n    a, b = 0, 1\n    for _ in range(n):\n\
    \        a, b = b, a + b\n    return a\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    if n == 2:\n    \
    \    return 1\n    return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n > 1:\n        return fib(n -\
    \ 1) + fib(n - 2)\n    else:\n        raise ValueError('n < 1')\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpiw0762zj.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpiw0762zj.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpiw0762zj.py\", line 18, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpiw0762zj.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpiw0762zj.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpiw0762zj.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\n  File \"/tmp/tmpiw0762zj.py\", line 15, in fib\n    raise ValueError('n\
    \ < 1')\nValueError: n < 1\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_cycle(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp47tj1s0s.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp47tj1s0s.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp47tj1s0s.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp47tj1s0s.py\", line 10, in fib\n\
    \    return fib_cycle(n)\nNameError: name 'fib_cycle' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    a, b = 0, 1\n    while n > 1:\n    \
    \    a, b = b, a + b\n        n -= 1\n    return b\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\nfib(8)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n must be positive\")\n    return\
    \ fibonacci(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp2p7ysp58.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp2p7ysp58.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp2p7ysp58.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp2p7ysp58.py\", line 12, in fib\n\
    \    return fibonacci(n)[0]\nNameError: name 'fibonacci' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return _fib(n)[0]\n\ndef check(candidate):\n    assert candidate(10) ==\
    \ 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpowq4o9gw.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpowq4o9gw.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpowq4o9gw.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpowq4o9gw.py\", line 10, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    fib_list = [0, 1]\n    for i in range(2, n+1):\n        fib_list.append(fib_list[i-1]\
    \ + fib_list[i-2])\n    return fib_list[n]\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return _fib(n)\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl8pg8h9f.py\", line\
    \ 22, in <module>\n    test_check()\n  File \"/tmp/tmpl8pg8h9f.py\", line 20,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpl8pg8h9f.py\", line 13, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpl8pg8h9f.py\", line 10, in fib\n\
    \    return _fib(n)\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return n if n <= 2 else fib(n - 1) + fib(n - 2)\n\n\
    print(fib(10))\nprint(fib(1))\nprint(fib(8))\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8ph5z5r6.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmp8ph5z5r6.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp8ph5z5r6.py\", line 17, in check\n\
    \    assert candidate(10) == 55\nAssertionError\n"
  stdout: '89

    1

    34

    '
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert(n > 0)\n    return _fib(n)[0]\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpey3rf0hx.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpey3rf0hx.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpey3rf0hx.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpey3rf0hx.py\", line 11, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum_series(n)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9maz8x27.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp9maz8x27.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp9maz8x27.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp9maz8x27.py\", line 10, in fib\n\
    \    return sum_series(n)\nNameError: name 'sum_series' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for i in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return _fib(n)[0]\n    \ndef check(candidate):\n  \
    \  assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpce0y_jvc.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpce0y_jvc.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpce0y_jvc.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpce0y_jvc.py\", line 11, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum(fib_rec(n))\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbvuflwsp.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmpbvuflwsp.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpbvuflwsp.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpbvuflwsp.py\", line 10, in fib\n\
    \    return sum(fib_rec(n))\nNameError: name 'fib_rec' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return sum(\n        fib_pair(n - 1)\n    )\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn_4prdul.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmpn_4prdul.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpn_4prdul.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpn_4prdul.py\", line 11, in fib\n\
    \    fib_pair(n - 1)\nNameError: name 'fib_pair' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    first, second = 0, 1\n    for _ in range(n - 1):\n\
    \        first, second = second, first + second\n    return second\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    return fib_generator(n)[-1]\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp394_l06h.py\", line\
    \ 23, in <module>\n    test_check()\n  File \"/tmp/tmp394_l06h.py\", line 21,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp394_l06h.py\", line 14, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp394_l06h.py\", line 10, in fib\n\
    \    return fib_generator(n)[-1]\nNameError: name 'fib_generator' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    prev, curr = 0, 1\n    for _ in range(n\
    \ - 1):\n        prev, curr = curr, prev + curr\n    return curr\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    prev, current = 0, 1\n    for _ in range(1,\
    \ n):\n        prev, current = current, prev + current\n    return current\n\n\
    \ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    while n > 0:\n        a, b = b, a + b\n        n -= 1\n\
    \    return a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n   \
    \ assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\ndef check(candidate):\n   \
    \ assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n \n \n \ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    if n == 1:\n        return 1\n    else:\n        return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpra0h9km0.py\", line\
    \ 27, in <module>\n    test_check()\n  File \"/tmp/tmpra0h9km0.py\", line 25,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpra0h9km0.py\", line 18, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpra0h9km0.py\", line 14, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpra0h9km0.py\", line 14,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpra0h9km0.py\",\
    \ line 14, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 6 more times]\n  File \"/tmp/tmpra0h9km0.py\", line 10, in fib\n    assert n\
    \ >= 1\nAssertionError\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbd4tpq0g.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbd4tpq0g.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpbd4tpq0g.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpbd4tpq0g.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpbd4tpq0g.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpbd4tpq0g.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpbd4tpq0g.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    pre_pre, pre = 0, 1\n    for _ in range(n\
    \ - 1):\n        pre_pre, pre = pre, pre_pre + pre\n    return pre\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n   \
    \ \n    \n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n - 1):\n        a, b = b, a + b\n   \
    \ return b\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 2:\n        return 1\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    pre, cur = 0, 1\n    for _ in range(n-1):\n\
    \        pre, cur = cur, pre + cur\n    return cur\ndef check(candidate):\n  \
    \  assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return fib_iter(1, 0, n)\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpphznb3kr.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpphznb3kr.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpphznb3kr.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpphznb3kr.py\", line 11, in fib\n\
    \    return fib_iter(1, 0, n)\nNameError: name 'fib_iter' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError('n must be positive')\n    elif n\
    \ == 1:\n        return 1\n    elif n == 2:\n        return 1\n    return fib(n\
    \ - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n\
    \    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11)\
    \ == 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    assert n >= 1\n    return fib_tail(n)[0]\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_3mzvlx.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpk_3mzvlx.py\", line 22,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpk_3mzvlx.py\", line 15, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpk_3mzvlx.py\", line 11, in fib\n\
    \    return fib_tail(n)[0]\nNameError: name 'fib_tail' is not defined\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    else:\n\
    \        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert\
    \ candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8) ==\
    \ 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    # Put your code here\n    if n == 1:\n        return 1\n    elif n ==\
    \ 2:\n        return 1\n    else:\n        return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError('n must be >= 1')\n    if n < 3:\n\
    \        return 1\n    else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    if n == 2:\n        return 1\n    return\
    \ fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n    assert candidate(10)\
    \ == 55\n    assert candidate(1) == 1\n    assert candidate(8) == 21\n    assert\
    \ candidate(11) == 89\n    assert candidate(12) == 144\n\ndef test_check():\n\
    \    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n <= 1:\n        return n\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\n\n\
    def check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"Fibonacci sequence not defined for\
    \ negative numbers\")\n    if n in (0, 1):\n        return n\n    a, b = 0, 1\n\
    \    for _ in range(n - 1):\n        a, b = b, a + b\n    return b\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 1:\n        raise ValueError(\"Cannot calculate Fibonacci number\
    \ for n<1\")\n    elif n == 1:\n        return 1\n    elif n == 2:\n        return\
    \ 1\n    else:\n        return fib(n-1) + fib(n-2)\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    a, b = 0, 1\n    for _ in range(n):\n        a, b = b, a + b\n    return\
    \ a\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1)\
    \ == 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 2:\n        return n\n    return fib(n - 1) + fib(n - 2)\n\ndef\
    \ check(candidate):\n    assert candidate(10) == 55\n    assert candidate(1) ==\
    \ 1\n    assert candidate(8) == 21\n    assert candidate(11) == 89\n    assert\
    \ candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    else:\n        return fib(n - 1) + fib(n\
    \ - 2)\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbd4tpq0g.py\", line\
    \ 26, in <module>\n    test_check()\n  File \"/tmp/tmpbd4tpq0g.py\", line 24,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmpbd4tpq0g.py\", line 17, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmpbd4tpq0g.py\", line 13, in fib\n\
    \    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpbd4tpq0g.py\", line 13,\
    \ in fib\n    return fib(n - 1) + fib(n - 2)\n  File \"/tmp/tmpbd4tpq0g.py\",\
    \ line 13, in fib\n    return fib(n - 1) + fib(n - 2)\n  [Previous line repeated\
    \ 993 more times]\n  File \"/tmp/tmpbd4tpq0g.py\", line 10, in fib\n    if n ==\
    \ 1:\nRecursionError: maximum recursion depth exceeded in comparison\n"
  stdout: ''
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\nprint(fib(6))\n\n\ndef check(candidate):\n\
    \    assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '8

    '
  timestamp: 1659823310
- exit_code: 0
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n == 1:\n        return 1\n    elif n == 2:\n        return 1\n   \
    \ else:\n        return fib(n - 1) + fib(n - 2)\n\n\ndef check(candidate):\n \
    \   assert candidate(10) == 55\n    assert candidate(1) == 1\n    assert candidate(8)\
    \ == 21\n    assert candidate(11) == 89\n    assert candidate(12) == 144\n\ndef\
    \ test_check():\n    check(fib)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659823310
- exit_code: -1
  program: "def fib(n: int) -> int:\n    \"\"\"Return n-th Fibonacci number.\n   \
    \ >>> fib(10)\n    55\n    >>> fib(1)\n    1\n    >>> fib(8)\n    21\n    \"\"\
    \"\n    if n < 0:\n        raise ValueError(\"n must be non-negative\")\n    return\
    \ _fib(n)[0]\n\n\ndef check(candidate):\n    assert candidate(10) == 55\n    assert\
    \ candidate(1) == 1\n    assert candidate(8) == 21\n    assert candidate(11) ==\
    \ 89\n    assert candidate(12) == 144\n\ndef test_check():\n    check(fib)\n\n\
    test_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4ltv3xbx.py\", line\
    \ 25, in <module>\n    test_check()\n  File \"/tmp/tmp4ltv3xbx.py\", line 23,\
    \ in test_check\n    check(fib)\n  File \"/tmp/tmp4ltv3xbx.py\", line 16, in check\n\
    \    assert candidate(10) == 55\n  File \"/tmp/tmp4ltv3xbx.py\", line 12, in fib\n\
    \    return _fib(n)[0]\nNameError: name '_fib' is not defined. Did you mean: 'fib'?\n"
  stdout: ''
  timestamp: 1659823310

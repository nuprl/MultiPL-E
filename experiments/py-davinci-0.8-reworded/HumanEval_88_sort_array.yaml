name: HumanEval_88_sort_array
language: py
prompt: "from typing import List\n\ndef sort_array(array: List[int]) -> List[int]:\n\
  \    \"\"\"\n    Given an array of non-negative integers, return a copy of the given\
  \ array after sorting,\n    you will sort the given array in ascending order if\
  \ the sum( first index value, last index value) is odd,\n    or sort it in descending\
  \ order if the sum( first index value, last index value) is even.\n\n    Note:\n\
  \    * don't change the given array.\n\n    Examples:\n    >>> sort_array([])\n\
  \    []\n    >>> sort_array([5])\n    [5]\n    >>> sort_array([2, 4, 3, 0, 1, 5])\n\
  \    [0, 1, 2, 3, 4, 5]\n    >>> sort_array([2, 4, 3, 0, 1, 5, 6])\n    [6, 5, 4,\
  \ 3, 2, 1, 0]\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([]) == []\n    assert candidate([5])\
  \ == [5]\n    assert candidate([2, 4, 3, 0, 1, 5]) == [0, 1, 2, 3, 4, 5]\n    assert\
  \ candidate([2, 4, 3, 0, 1, 5, 6]) == [6, 5, 4, 3, 2, 1, 0]\n    assert candidate([2,\
  \ 1]) == [1, 2]\n    assert candidate([15, 42, 87, 32, 11, 0]) == [0, 11, 15, 32,\
  \ 42, 87]\n    assert candidate([21, 14, 23, 11]) == [23, 21, 14, 11]\n\ndef test_check():\n\
  \    check(sort_array)\n\ntest_check()\n"
completions: ["    if array:\n        return sorted(array, reverse=True) if (array[0]\
    \ + array[-1]) % 2 == 0 else sorted(array)\n    return array", "    if not array:\n\
    \        return array\n    else:\n        if (array[0] + array[-1]) % 2 == 0:\n\
    \            return sorted(array, reverse=True)\n        else:\n            return\
    \ sorted(array)\n", "    return sorted(array, reverse=sum(array[:2]) % 2 == 0)\n\
    \n", "    if len(array) == 0:\n        return array\n    elif len(array) == 1:\n\
    \        return array\n    else:\n        if (array[0] + array[-1]) % 2 == 0:\n\
    \            return sorted(array, reverse=True)\n        else:\n            return\
    \ sorted(array)\n", "    if not array:\n        return array\n    if len(array)\
    \ == 1:\n        return array\n    if sum(array[0:2]) % 2 == 0:\n        return\
    \ sorted(array, reverse=True)\n    else:\n        return sorted(array)\n", " \
    \   left = 0\n    right = len(array) - 1\n    target = 0\n    if len(array) >\
    \ 0:\n        target = array[0] + array[-1]\n    if len(array) <= 1 or target\
    \ % 2 == 0:\n        while left < right:\n            while array[left] < array[right]:\n\
    \                right -= 1\n            if left < right:\n                array[left],\
    \ array[right] = array[right], array[left]\n            while array[left] < array[right]:\n\
    \                left += 1\n            if left < right:\n                array[left],\
    \ array[right] = array[right], array[left]\n    else:\n        while left < right:\n\
    \            while array[left] > array[right]:\n                right -= 1\n \
    \           if left < right:\n                array[left], array[right] = array[right],\
    \ array[left]\n            while array[left] > array[right]:\n               \
    \ left += 1\n            if left < right:\n                array[left], array[right]\
    \ = array[right], array[left]\n    return array\n", "    odd_nums = sorted([i\
    \ for i in array if i % 2 == 1])\n    even_nums = sorted([i for i in array if\
    \ i % 2 == 0], reverse=True)\n    ans = odd_nums + even_nums\n    return ans\n",
  "    if len(array) == 0:\n        return array\n    if (array[0] + array[-1]) %\
    \ 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    odd = []\n    even = []\n    for i in array:\n        if\
    \ i % 2 == 0:\n            even.append(i)\n        else:\n            odd.append(i)\n\
    \    odd.sort()\n    even.sort(reverse=True)\n    return odd + even\n", "    if\
    \ not array:\n        return array\n    if len(array) == 1:\n        return array\n\
    \    if sum(array[0], array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    return sorted(array)\n", "    # if the array is empty return it as is\n \
    \   if not array:\n        return array\n    # sum of the array first and last\
    \ index\n    if sum(array[:2]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)\n", "    if not array:\n        return\
    \ array\n    if sum(array[0], array[-1]) % 2 == 0:\n        array.sort(reverse=True)\n\
    \    else:\n        array.sort()\n    return array", "    if len(array) == 0:\n\
    \        return array\n    elif sum(array[:2]) % 2 == 0:\n        return sorted(array,\
    \ reverse=True)\n    else:\n        return sorted(array)", "    if len(array)\
    \ == 0:\n        return array\n    else:\n        copy = array.copy()\n      \
    \  if (copy[0] + copy[-1]) % 2 == 0:\n            copy.sort(reverse=True)\n  \
    \      else:\n            copy.sort()\n        return copy\n", "    if len(array)\
    \ == 0:\n        return array\n    elif len(array) == 1:\n        return array\n\
    \    elif len(array) == 2:\n        if (array[0] + array[1]) % 2 == 0:\n     \
    \       return [array[1], array[0]]\n        else:\n            return array\n\
    \    elif (array[0] + array[-1]) % 2 == 0:\n        return sorted(array, reverse=True)\n\
    \    else:\n        return sorted(array)\n", "    if len(array) <= 1:\n      \
    \  return array\n    else:\n        return sort_array_odd(array) if sum(array[0],\
    \ array[-1]) % 2 == 1 else sort_array_even(array)\n", "    if len(array) == 0:\n\
    \        return array\n    sum_first_last = array[0] + array[-1]\n    if sum_first_last\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)", "    for i in range(1, len(array)):\n        j = i\n       \
    \ while j > 0 and array[j] < array[j - 1]:\n            array[j], array[j - 1]\
    \ = array[j - 1], array[j]\n            j -= 1\n    if sum(array[:2]) % 2 == 0:\n\
    \        return array[::-1]\n    return array", "    result = array.copy()\n \
    \   if len(result) > 1:\n        if (result[0] + result[-1]) % 2 == 0:\n     \
    \       result.sort(reverse=True)\n        else:\n            result.sort()\n\
    \    return result\n", "    first_index_value = array[0]\n    last_index_value\
    \ = array[-1]\n    sum_values = first_index_value + last_index_value\n    if sum_values\
    \ % 2 == 0:\n        return sorted(array, reverse=True)\n    else:\n        return\
    \ sorted(array)"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_53_add
language: py
prompt: "def add(x: int, y: int) -> int:\n    \"\"\"Add two numbers x and y\n    >>>\
  \ add(2, 3)\n    5\n    >>> add(5, 7)\n    12\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(0, 1) == 1\n    assert candidate(1,\
  \ 0) == 1\n    assert candidate(2, 3) == 5\n    assert candidate(5, 7) == 12\n \
  \   assert candidate(7, 5) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
completions: ["    return x + y\n\n", "    return x + y\n\n", "    return x + y\n\n",
  "    return x + y\n", "    return x + y\n\n", "    return x + y\n", "    return\
    \ x + y\n\n\n@pytest.mark.parametrize(\"x, y, z\", [(1, 1, 2), (2, 3, 5), (5,\
    \ 7, 12)])", "    return x + y\n", "    return x + y\n\n", "    return x + y\n",
  "    return x + y\n", "    return x + y\n\nadd.__annotations__\n", "    return x\
    \ + y\n", "    return x + y\n\n", "    return x + y\n", "    return x + y\n",
  "    return x + y\n", "    return x + y\n\n@pytest.mark.parametrize(\"x, y, expected\"\
    ,\n                        [(2, 3, 5),\n                         (5, 7, 12)])",
  "    return x + y\n\nadd.__doc__\n\n\"\"\"\nadd(2, 3)\nadd(5, 7)\n\"\"\"", "   \
    \ return x + y\n\n\nadd(2, 3)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

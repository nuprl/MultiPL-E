name: HumanEval_45_triangle_area
language: py
prompt: "def triangle_area(a: int, h: int) -> float:\n    \"\"\"Given length of a\
  \ side and high return area for a triangle.\n    >>> triangle_area(5, 3)\n    7.5\n\
  \    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(5, 3) == 7.5\n    assert candidate(2,\
  \ 2) == 2.0\n    assert candidate(10, 8) == 40.0\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    return a * h / 2\n", "    return 0.5 * a * h\n\n", "    return\
    \ a * h / 2\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", " \
    \   return a * h / 2\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\
    \n", "    return 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h\
    \ / 2\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return\
    \ 0.5 * a * h\n\n", "    return a * h / 2\n\nprint(triangle_area(5, 3))\nprint(triangle_area.__doc__)\n\
    \nprint(help(triangle_area))", "    return a * h / 2\n\n", "    return a * h /\
    \ 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return (a * h) / 2\n", "    return a * h / 2\n\n", "  \
    \  return a * h / 2\n    \n    \ntriangle_area(3, 5)\n", "    return a * h / 2\n\
    \n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n", "    return a *\
    \ h / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n\nprint(triangle_area(5,\
    \ 3))\n", "    pass\n\n", "    return a * h / 2\n", "    return (a * h) / 2\n\n",
  "    return 0.5 * a * h\n\n\nprint(triangle_area(5, 3))\n\n", "    return a * h\
    \ / 2\n\n", "    return (a * h) / 2\n", "    return 0.5 * a * h\n", "    return\
    \ (1/2) * a * h\n", "    return (a * h) / 2.0\n\n", "    return 0.5 * a * h\n",
  "    return (a * h) / 2\n\n", "    area = a * h / 2\n    return area\n\n", "   \
    \ return (a * h) / 2\n\nprint(triangle_area(5, 3))", "    return a * h / 2\n",
  "    return a * h / 2\n", "    return 0.5 * a * h\n\n", "    return 0.5 * a * h\n\
    \n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n", "    area = (a\
    \ * h) / 2\n    return area\n\n", "    return 1/2 * a * h\n\nprint(triangle_area(5,\
    \ 3))\n\n@typing.overload", "    return 0.5 * a * h\n\n", "    return (a * h)\
    \ / 2\n\n", "    return 0.5 * a * h\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n", "  \
    \  return (a * h) / 2\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\
    \n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a *\
    \ h) / 2\n\n", "    return 0.5 * a * h\n\n", "    return (a * h) / 2\n", "   \
    \ return (a * h) / 2\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n\
    print(\"Type 'quit' or 'exit' to exit\")\nwhile True:\n    a = input(\"a: \")\n\
    \    if a in [\"quit\", \"exit\"]:\n        break\n    h = input(\"h: \")\n  \
    \  if h in [\"quit\", \"exit\"]:\n        break\n    print(triangle_area(int(a),\
    \ int(h)))\n", "    return a * h / 2\n", "    return (a * h) / 2\n\n", "    return\
    \ 0.5 * a * h\n", "    return a * h / 2\n\n", "    return a * h / 2\n\n", "  \
    \  return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\
    \n", "    return 0.5 * a * h\n\n", "    return a * h / 2\n\nprint(triangle_area(5,\
    \ 3))\nprint(triangle_area.__doc__)\n\nhelp(triangle_area)", "    return (1/2)\
    \ * a * h\n\n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "  \
    \  return (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\
    \n", "    return (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return 0.5\
    \ * a * h\n\n@cache", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n",
  "    area = 0.5 * a * h\n    return area\n\n", "    return (a * h) / 2\n\n", " \
    \   area = (a * h) / 2\n    return area\n", "    return (a * h) / 2\n\n", "  \
    \  return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h)\
    \ / 2\n\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n", "    return\
    \ a * h / 2\n\ntriangle_area(5, 3)\n\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return a * h / 2\n\nprint(triangle_area(5, 3))\n", "  \
    \  return a * h / 2\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n",
  "    return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\
    \n", "    return a * h / 2\n\n", "    return (1/2) * a * h\n\n", "    return 0.5\
    \ * a * h\n\n", "    return a * h / 2\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\ntriangle_area(5,\
    \ 3)\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ 0.5 * a * h\n\n", "    return 0.5 * a * h\n\n", "    return (a * h) / 2\n\n",
  "    return float(a * h) / 2\n\n", "    return (a * h) / 2\n", "    return (a *\
    \ h) / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", " \
    \   return a * h / 2\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\
    \n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n", "    return a *\
    \ h / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "  \
    \  return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return a * h /\
    \ 2\n\n", "    return (a * h) / 2\n", "    return 0.5 * a * h\n\n", "    return\
    \ a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", " \
    \   return a * h / 2\n\n", "    return a * h / 2\n\n", "    return a * h / 2\n\
    \n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return a\
    \ * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n\n", "  \
    \  return a * h / 2\n\n", "    return a * h / 2\n\n@app.route('/')", "    return\
    \ (a * h) / 2\n\n", "    return a * h / 2\n\n\nprint(triangle_area(5, 3))\n\n",
  "    return a * h / 2\n\n", "    return a * h / 2\n\nprint(triangle_area(10, 6))\n",
  "    return a * h / 2\n\n", "    return (a * h) / 2\n", "    return a * h / 2\n",
  "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h)\
    \ / 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return float(a*h/2)\n", "    return a * h / 2\n\n", " \
    \   return a * h / 2\n\n", "    return (a * h) / 2\n\n", "    # area = 1/2 * a\
    \ * h\n    return 1/2 * a * h\n", "    return (a * h) / 2\n\n", "    return 0.5\
    \ * a * h\n\n", "    return (1/2)*a*h\n\n", "    return 0.5 * a * h\n\n", "  \
    \  return a * h / 2\n\n", "    return a * h / 2\n\n", "    return (a * h) / 2\n",
  "    return (a * h) / 2\n\n", "    return a * h / 2\n\nprint(triangle_area(2, 3))",
  "    return a * h / 2\n\nprint(triangle_area(5, 3))\nprint(triangle_area.__doc__)\n\
    help(triangle_area)\n", "    return a * h / 2\n\n", "    return 0.5 * a * h\n\n",
  "    return (a * h) / 2\n\n", "    return a * h / 2\n", "    area = (a * h) / 2\n\
    \    return area\n\n", "    return a * h / 2\n", "    return (a * h) / 2\n\n",
  "    return 0.5 * a * h\n\n", "    return a * h / 2\n\n", "    return (a * h) /\
    \ 2\n\n", "    return (a * h) / 2\n\n", "    return (a * h) / 2\n", "    pass\n\
    \n", "    return a * h / 2\n", "    return (1/2)*a*h\n", "    return (a * h) /\
    \ 2\n\n\nprint(triangle_area(5, 3))\n\n", "    return a * h / 2\n\n", "    return\
    \ (a * h) / 2\n", "    return (a * h) / 2\n\n", "    return a * h / 2\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

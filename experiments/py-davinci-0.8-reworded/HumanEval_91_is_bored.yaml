name: HumanEval_91_is_bored
language: py
prompt: "def is_bored(S: str) -> int:\n    \"\"\"\n    You'll be given a string of\
  \ words, and your task is to count the number\n    of boredoms. A boredom is a sentence\
  \ that starts with the word \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n\
  \   \n    For example:\n    >>> is_bored('Hello world')\n    0\n    >>> is_bored('The\
  \ sky is blue. The sun is shining. I love this weather')\n    1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('Hello world') == 0\n    assert\
  \ candidate('Is the sky blue?') == 0\n    assert candidate('I love It !') == 1\n\
  \    assert candidate('bIt') == 0\n    assert candidate('I feel good today. I will\
  \ be productive. will kill It') == 2\n    assert candidate('You and I are going\
  \ for a walk') == 0\n\ndef test_check():\n    check(is_bored)\n\ntest_check()\n"
completions: ["    count = 0\n    for word in S.split():\n        if word.startswith('I'):\n\
    \            count += 1\n    return count\n", "    pass\n", "    count = 0\n \
    \   for sentence in S.split('.'):\n        count += sentence.startswith('I')\n\
    \    return count\n", "    boredoms = 0\n    for sentence in re.split(r'[.?!]',\
    \ S):\n        if re.match(r'\\s*I\\s+', sentence):\n            boredoms += 1\n\
    \    return boredoms\n\n", "    boredoms = 0\n    sentences = S.split('.')\n \
    \   for sentence in sentences:\n        words = sentence.split()\n        if words\
    \ and words[0] == 'I':\n            boredoms += 1\n    return boredoms\n\n", " \
    \   boredoms = 0\n    for sentence in S.split('. '):\n        if 'I' == sentence[0]:\n\
    \            boredoms += 1\n    return boredoms\n\n", "    boredoms = 0\n    for\
    \ sentence in S.split('.'):\n        if sentence.split()[0] == 'I':\n        \
    \    boredoms += 1\n    return boredoms\n", "    boredoms = 0\n    sents = S.split('.!?')\n\
    \    for sent in sents:\n        words = sent.split()\n        if len(words) >\
    \ 0 and words[0] == 'I':\n            boredoms += 1\n    return boredoms\n", " \
    \   boredoms = 0\n    for sentence in S.split('. '):\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    boredom = 0\n    for\
    \ sentence in S.split('.'):\n        sentence = sentence.strip()\n        if sentence[0]\
    \ == 'I':\n            boredom += 1\n    return boredom\n\n", "    boredoms =\
    \ 0\n    sentence = ''\n    sentences = S.split('.')\n    for sentence in sentences:\n\
    \        sentence = sentence.strip()\n        if sentence:\n            if sentence[0]\
    \ == 'I':\n                boredoms += 1\n    return boredoms\n\n", "    # return\
    \ sum(S.startswith('I ') for S in S.split('.'))\n    return sum(S.startswith('I\
    \ ') for S in S.split('.'))\n\n\n", "    return sum(1 for s in S.split('.') if\
    \ s.strip().startswith('I'))\n\n", "    return sum(line.strip().startswith('I')\
    \ for line in S.split('.', 1))", "    sen = S.split('.')\n    bored = 0\n    for\
    \ sentence in sen:\n        if sentence.startswith('I'):\n            bored +=\
    \ 1\n    return bored\n\n", "    boredoms = 0\n    words = S.split()\n    for\
    \ index, word in enumerate(words):\n        if (word.capitalize() == 'I' and index\
    \ == 0\n                or words[index - 1][-1] in '.!?'):\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    c = 0\n    for s in S.split('.'):\n   \
    \     if s.strip().startswith('I'):\n            c += 1\n    return c\n", "  \
    \  sentences = [s.strip() for s in S.split('.')]\n    return len([s for s in sentences\
    \ if s and s[0] == 'I'])\n\n", "    boredoms = 0\n    word_list = S.split()\n\
    \    for word in word_list:\n        if word[0] == 'I':\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    return len([s for s in S.split('.') if\
    \ s.strip().startswith('I')])\n```\n\n```python", "    return 0 if not S else\
    \ sum(1 for x in re.split('[.?!]', S) if x.lstrip().startswith('I'))\n\n", " \
    \   count = 0\n    for s in S.split('.'):\n        if s.strip().startswith('I'):\n\
    \            count += 1\n    return count\n\n", "    boredoms = 0\n    sentences\
    \ = S.split('.')\n    for sentence in sentences:\n        if sentence.startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    num_boredoms = 0\n\
    \    sentences = list(map(str.strip, S.split('.')))\n    for sentence in sentences:\n\
    \        words = sentence.split()\n        if words and words[0] == 'I':\n   \
    \         num_boredoms += 1\n    return num_boredoms\n", "    boredoms = 0\n \
    \   for sentence in S.split('.'):\n        sentence = sentence.split('?')\n  \
    \      for sent in sentence:\n            sent = sent.split('!')\n           \
    \ for s in sent:\n                boredoms += s.strip().startswith('I')\n    return\
    \ boredoms\n", "    if S == '':\n        return 0\n    else:\n        if S[0]\
    \ == 'I':\n            return 1 + is_bored(S[1:])\n        else:\n           \
    \ return is_bored(S[1:])\n", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        if sentence.split()[0] == 'I':\n            boredoms += 1\n    return\
    \ boredoms\n\n", "    boredoms = re.findall(r'I', S)\n    return len(boredoms)\n\
    \n", "    boredoms = 0\n    for sentence in S.split('. '):\n        if sentence.startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n", "    sentences = re.split(r'[\\\
    .\\?!]', S)\n    boredoms = 0\n    for sentence in sentences:\n        if sentence[0]\
    \ == 'I':\n            boredoms += 1\n    return boredoms\n\n", "    # your code\
    \ here\n    ...\n \n", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n", "    return S.count('I')\n\n", "    return S.count('I')\n\n", "    boredoms\
    \ = 0\n    for word in S.split():\n        if word == 'I':\n            boredoms\
    \ += 1\n    return boredoms\n", "    boredoms = 0\n    sentences = S.split('.')\n\
    \    sentences.extend(S.split('?'))\n    sentences.extend(S.split('!'))\n    for\
    \ sentence in sentences:\n        sentence = sentence.strip()\n        sentence\
    \ = sentence.split()\n        if sentence and sentence[0] == 'I':\n          \
    \  boredoms += 1\n    return boredoms\n", "    return len([1 for word in S.split()\
    \ if word.startswith('I')])\n", "    boredoms = re.findall(r'\\BI\\b', S)\n  \
    \  return len(boredoms)\n```\n\n```python\nfrom typing import List\n", "    return\
    \ len([1 for sentence in S.split('.') if sentence[0] == 'I'])\n\n", "    boredoms\
    \ = 0\n    sentences = S.split('. ') + S.split('? ') + S.split('! ')\n    for\
    \ sentence in sentences:\n        words = sentence.split()\n        if len(words)\
    \ > 0 and words[0] == 'I':\n            boredoms += 1\n    return boredoms\n",
  "    return S.count('I')\n\n", "    boredoms = 0\n    sentences = S.split('. ')\n\
    \    print(sentences)\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n    ", "    return sum(S.count(sentence)\
    \ for sentence in S.split('.') if sentence.strip().startswith('I'))\n\n", "  \
    \  count = 0\n    for sentence in S.split('.'):\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n\n", "    return S.count('I')\n\n",
  "    count = 0\n    words = S.split(' ')\n    for word in words:\n        if word\
    \ == 'I':\n            count += 1\n    return count\n", "    boredoms = 0\n  \
    \  if S:\n        sentences = S.split(\". \")\n        for sentence in sentences:\n\
    \            if sentence.startswith(\"I\"):\n                boredoms += 1\n \
    \   return boredoms\n\n", "    sentences = S.split('. ')\n    bored = 0\n    for\
    \ sentence in sentences:\n        if sentence.startswith('I'):\n            bored\
    \ += 1\n    return bored\n    \n    \n    \n    \n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    ", "    s = re.sub(r'\\\
    W+', ' ', S)\n    return len([w for w in s.split() if w == 'I'])\n\n", "    boredoms\
    \ = 0\n    sentences = S.split('.')\n    for sentence in sentences:\n        sentence\
    \ = sentence.strip()\n        if sentence.split()[0] == 'I':\n            boredoms\
    \ += 1\n    return boredoms\n", "    count = 0\n    for s in S.split('.'):\n \
    \       for s in s.split('?'):\n            for s in s.split('!'):\n         \
    \       s = s.strip()\n                if s.startswith('I'):\n               \
    \     count += 1\n    return count\n\n", "    return S.count('I')\n\n", "    #\
    \ Split the string into sentences.\n    # TODO\n    split_string = re.split('[.?!]',\
    \ S)\n    count = 0\n    for sentence in split_string:\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n    pass\n", "    boredoms = 0\n  \
    \  sentences = S.split('. ')\n    for sentence in sentences:\n        for word\
    \ in sentence.split():\n            if word == 'I':\n                boredoms\
    \ += 1\n                break\n    return boredoms\n\n", "    boredoms = 0\n \
    \   sentences = S.split('.')\n    sentences += S.split('?')\n    sentences +=\
    \ S.split('!')\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    # count the number\
    \ of occurrences of 'I' at the beginning of the sentence\n    return len([word\
    \ for word in S.split() if word[0] == 'I'])\n    # return sum(word[0] == 'I' for\
    \ word in S.split())\n\n", "    if not S:\n        return 0\n    return sum(map(lambda\
    \ s: s.startswith('I'),\n                   filter(lambda s: s, S.split('.'))))\n\
    \    \n    ", "    boredoms = 0\n    sentences = S.split('.') + S.split('?') +\
    \ S.split('!')\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    return S.count('I ')",
  "    # Obtain the list of sentences from S\n    sentences = S.split('.')\n    sentences.extend(S.split('?'))\n\
    \    sentences.extend(S.split('!'))\n    # Remove empty strings\n    sentences\
    \ = list(filter(None, sentences))\n    # Create a boolean vector that indicates\
    \ whether a sentence starts with 'I'\n    is_bored = [(s[0] == 'I') for s in sentences]\n\
    \    # Sum all elements in the vector\n    return sum(is_bored)\n\n", "    count\
    \ = 0\n    lines = S.split(\".\")\n    for line in lines:\n        if line.split()[0]\
    \ == \"I\":\n            count += 1\n    return count\n\n", "    s_list = S.split()\n\
    \    count = 0\n    for i in range(len(s_list)):\n        if s_list[i] == 'I':\n\
    \            count += 1\n    return count\n\n", "    boredoms = 0\n    for word\
    \ in S.split():\n        if word == 'I':\n            boredoms += 1\n    return\
    \ boredoms\n", "    sentences = S.split('.')\n    sentences += S.split('?')\n\
    \    sentences += S.split('!')\n    sentences = [s.split() for s in sentences]\n\
    \    for i in range(len(sentences)):\n        sentences[i] = [s.strip('\"').strip(\"\
    '\") for s in sentences[i]]\n    boredoms = 0\n    for sentence in sentences:\n\
    \        if sentence[0] == 'I':\n            boredoms += 1\n    return boredoms\n\
    \n", "    boredoms = 0\n    for sentence in S.split('.'):\n        for question\
    \ in sentence.split('?'):\n            for exclamation in question.split('!'):\n\
    \                if exclamation.strip().startswith('I'):\n                   \
    \ boredoms += 1\n    return boredoms\n\n", "    return sum(s.strip().startswith('I')\
    \ for s in S.split('.'))\n", "    from re import findall\n    return len(findall(r'\\\
    bI\\b', S))\n", "    boredoms = 0\n    sentences = S.split(\". \") + S.split(\"\
    ? \") + S.split(\"! \")\n    for s in sentences:\n        if s.startswith(\"I\"\
    ):\n            boredoms += 1\n    return boredoms\n\n", "    boredoms = 0\n \
    \   sentences = S.split('.') + S.split('?') + S.split('!')\n    for sentence in\
    \ sentences:\n        if sentence.strip().startswith('I'):\n            boredoms\
    \ += 1\n    return boredoms\n", "    boredoms = 0\n    for word in S.split():\n\
    \        if word == 'I':\n            boredoms += 1\n    return boredoms\n", " \
    \   boredoms = 0\n    for sentence in re.split(r'[.!?]', S):\n        boredoms\
    \ += int(sentence.strip().startswith('I'))\n    return boredoms\n\n", "    return\
    \ sum(1 for s in S.split('.') if s.strip().startswith('I'))\n\n", "    return\
    \ len([w for w in S.split() if w[0] == 'I'])\n", "    boredom = 0\n    sentences\
    \ = [s.strip() for s in S.split('.') if s]\n\n    for s in sentences:\n      \
    \  words = s.split()\n        if words and words[0] == 'I':\n            boredom\
    \ += 1\n\n    return boredom\n\n\n", "    boredom = 0\n    for sentence in S.split('.'):\n\
    \        if sentence.strip().startswith('I'):\n            boredom += 1\n    return\
    \ boredom\n\n", "    boredoms = S.split('.')\n    num_boredoms = 0\n    for b\
    \ in boredoms:\n        if b.strip().startswith('I'):\n            num_boredoms\
    \ += 1\n    return num_boredoms\n", "    return len([s for s in S.split('.') +\
    \ S.split('?') + S.split('!') if s.strip().startswith('I')])\n\n", "    boredoms\
    \ = 0\n    sentences = S.split('.')\n    sentences += S.split('?')\n    sentences\
    \ += S.split('!')\n    for sentence in sentences:\n        words = sentence.split()\n\
    \        if len(words) and words[0] == 'I':\n            boredoms += 1\n    return\
    \ boredoms\n", "    return len([word for word in S.split() if word == 'I'])\n",
  "    return sum(1 for i in S.split('.!?') if len(i) > 0 and i[0] == 'I')\n\n", " \
    \   return S.count('I')\n", "    return S.count('I')\n", "    sentences = S.split('.')\n\
    \    sentences.extend(S.split('?'))\n    sentences.extend(S.split('!'))\n    b\
    \ = 0\n    for sentence in sentences:\n        s = sentence.split()\n        if\
    \ len(s) > 0 and s[0] == 'I':\n            b += 1\n    return b\n\n", "    sentences\
    \ = S.split('.!?')\n    boredoms = 0\n    for sentence in sentences:\n       \
    \ if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n", "    num_sentences = S.count('.') + S.count('?') + S.count('!')\n    return\
    \ S.count('I') * num_sentences\n    \n", "    count = 0\n    for sentence in re.split(r'[.?!]',\
    \ S):\n        if sentence.strip().startswith('I'):\n            count += 1\n\
    \    return count\n\n", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        for sentence in sentence.split('?'):\n            for sentence in sentence.split('!'):\n\
    \                if sentence.strip().startswith('I'):\n                    boredoms\
    \ += 1\n    return boredoms\n", "    count = 0\n    sentence = \"\"\n    for i\
    \ in S:\n        if i in [\".\", \"?\", \"!\"]:\n            sentence = sentence\
    \ + i\n            if sentence.split()[0] == \"I\":\n                count +=\
    \ 1\n            sentence = \"\"\n        else:\n            sentence = sentence\
    \ + i\n    return count\n            \n                \n        \n    \n", " \
    \   sentences = S.split('.')\n    sentences.extend(S.split('?'))\n    sentences.extend(S.split('!'))\n\
    \    boredoms = 0\n    for sentence in sentences:\n        if sentence.split()[0]\
    \ == 'I':\n            boredoms += 1\n    return boredoms\n\n", "    bored = 0\n\
    \    sentences = []\n    sentences = S.split(\". \")\n    for s in sentences:\n\
    \        words = s.split()\n        if words[0] == \"I\":\n            bored +=\
    \ 1\n    return bored\n\n", "    count = 0\n    for s in S.split('.'):\n     \
    \   # trimming all the leading and trailing spaces\n        if s.strip().startswith('I'):\n\
    \            count += 1\n    return count\n", "    sentances = [s.strip() for\
    \ s in S.split('.')]\n    sentances = [s for s in sentances if s != '']\n    boredoms\
    \ = 0\n    for sentance in sentances:\n        boredoms += 1 if sentance.split()[0]\
    \ == 'I' else 0\n    return boredoms\n\n", "    # Split string into sentences,\
    \ then look for 'I' at the start of each sentence\n    return sum(1 for sent in\
    \ S.split('.') if sent.strip().startswith('I'))\n", "    # you code here\n   \
    \ n = 0\n    for sentence in S.split('.'):\n        #print(sentence)\n       \
    \ if sentence[0] == ' ':\n            sentence = sentence[1:]\n        if sentence[0]\
    \ == 'I':\n            n = n + 1\n    return n\nis_bored('Hello world')\n\nis_bored('The\
    \ sky is blue. The sun is shining. I love this weather')\n\nis_bored('The sky\
    \ is blue. I love the weather')\n\nis_bored('The sun is shining. I love this weather')\n\
    \nis_bored('The sky is blue. I love this weather')\n\nis_bored('I love this weather')\n\
    \nis_bored('It is raining. I like rain. I hope it rains a lot')\n\nis_bored('I\
    \ love this weather.')\n\nis_bored('I love this weather!')\n\nis_bored('I love\
    \ this weather?')\n\nis_bored('I love this weather. The sun is shining. It is\
    \ beautiful!')\n\nis_bored('I love this weather. The sun is shining.')\n\nis_bored('I\
    \ love this weather. I like rain. I hope it rains a lot')\n\nis_bored('I love\
    \ this weather. I like rain. I hope it rains a lot.')\n\nis_bored('I love this\
    \ weather. I like rain. I hope it rains a lot!')\n\nis_bored('I love this weather.\
    \ I like rain. I hope it rains a lot?')\n\nis_bored('I love this weather. I like\
    \ rain. I hope it rains a lot. I like rain. I hope it rains a lot. I like rain.\
    \ I hope it rains a lot. I like rain. I hope it rains a lot. I like rain. I hope\
    \ it rains a lot.')\n\nis_bored('I love this weather. I like rain. I hope it rains\
    \ a lot. I like rain. I hope it rains a lot. I like rain. I hope it rains a lot.\
    \ I like rain. I hope it rains a lot. I like rain. I hope it rains a lot!')\n\n\
    is_bored('I love this weather. I like rain", "    pattern = re.compile(r'\\bI\\\
    s+\\w')\n    return len(pattern.findall(S))\n", "    boredoms = 0\n    for sentence\
    \ in re.split('[.?!]', S):\n        if sentence.strip().startswith('I'):\n   \
    \         boredoms += 1\n    return boredoms\n\n", "    boredoms = 0\n    sentences\
    \ = []\n    S = S.replace('!', '.')\n    S = S.replace('?', '.')\n    for sentence\
    \ in S.split('.'):\n        sentences.append(sentence)\n    for sentence in sentences:\n\
    \        if len(sentence) > 0:\n            words = sentence.split()\n       \
    \     if len(words) > 0:\n                if words[0] == 'I':\n              \
    \      boredoms += 1\n    return boredoms\n", "    count = 0\n    S = S.split(\"\
    .\")\n    for sentence in S:\n        if sentence.split()[0] == \"I\":\n     \
    \       count += 1\n    return count\n\n", "    count = 0\n    sentences = re.split(r'[.?!]',\
    \ S)\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n   \n   ", "    return sum(1 for sentence\
    \ in S.split('.') if sentence.startswith('I'))\n\n", "    split_arr = list(filter(lambda\
    \ x: x != '', S.split('.')))\n    boredoms = 0\n    for i in split_arr:\n    \
    \    if i[0] == 'I':\n            boredoms += 1\n    return boredoms\n\n", " \
    \   count = 0\n    for sentence in S.split('.'):\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n\n", "    return sum(1 for word in\
    \ S.split('.') if word.strip().startswith('I'))\n\n", "    return sum(1 for sentence\
    \ in S.split('.') if sentence.strip().startswith('I'))\n\n", "    c = 0\n    words\
    \ = S.split()\n    for i in range(len(words)):\n        if words[i] == 'I':\n\
    \            c += 1\n    return c\n", "    i = 0\n    bored = 0\n    while i <\
    \ len(S):\n        if S[i] == 'I':\n            bored += 1\n        if S[i] ==\
    \ '.' or S[i] == '?' or S[i] == '!':\n            i += 1\n            if i < len(S)\
    \ and S[i] == ' ':\n                i += 1\n            continue\n        i +=\
    \ 1\n    return bored\n\n", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        if 'I' in sentence:\n            boredoms += 1\n    return boredoms\n",
  "    if len(S) == 0:\n        return 0\n    if S[0] == 'I':\n        return 1 +\
    \ is_bored(S[1:])\n    else:\n        return is_bored(S[1:])\n    ", "    return\
    \ sum(1 for word in S.split() if word.startswith('I'))\n\n", "    p1 = re.compile(r'\\\
    bI\\b')\n    return len(p1.findall(S))\n\n", "    return len([s for s in S.split('.')\
    \ if s.startswith('I')])\n", "    return sum(1 for sent in S.split('.') if sent.strip().startswith('I'))\n\
    \n", "    boredoms = 0\n    for word in S.split():\n        if word == 'I':\n\
    \            boredoms += 1\n    return boredoms\n\n", "    return S.count('I')",
  "    return S.count('I')\n\n", "    boredoms = 0\n    sentences = S.split('.')\n\
    \    for sentence in sentences:\n        sentence = sentence.strip()\n       \
    \ if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \nprint(is_bored('The sky is blue. The sun is shining. I love this weather'))\n\
    print(is_bored('Hello world'))\nprint(is_bored('Wow, I like this wiki!!!'))\n\
    print(is_bored('I want to read a book.'))\nprint(is_bored('I want to read a book'))\n\
    print(is_bored('I want to read a book!!!'))\nprint(is_bored('Hello world. Wow,\
    \ I like this wiki!!! I want to read a book.'))", "    return len([s for s in\
    \ S.split('.') if s.startswith('I')])\n", "    return len([word for word in S.split()\
    \ if word.startswith('I')])\n", "    return sum(1 for x in S.split('.') if x.strip().startswith('I'))\n\
    \n", "    r = re.compile('(?i)^I\\s[^.?!]*')\n    boredoms = re.findall(r, S)\n\
    \    return len(boredoms)\n\n@pytest.mark.parametrize(\"name, expected\", [\n\
    \    ('Hello world', 0),\n    ('The sky is blue. The sun is shining. I love this\
    \ weather', 1),\n    ('I love this weather. The sun is shining. The sky is blue',\
    \ 1),\n    ('I love this weather. The sun is shining. The sky is blue. I really\
    \ like this weather', 2),\n    ('This sentence is not bored. The sun is shining.\
    \ I love this weather', 1),\n    ('I am bored. This sentence is not bored. The\
    \ sun is shining. I love this weather', 2),\n    ('This sentence is not bored.\
    \ I am bored. I love this weather', 2),\n    ('I am bored. This sentence is not\
    \ bored. I love this weather', 2),\n    ('I am bored. I love this weather. This\
    \ sentence is not bored', 2),\n    ('I love this weather. I am bored. This sentence\
    \ is not bored', 2),\n    ('I love this weather. I am bored. I love this weather',\
    \ 2),\n    ('I am bored. I love this weather. I am bored', 2),\n    ('I am bored.\
    \ I am bored. I am bored', 3),\n    ('I am bored. I am bored. I am bored. I am\
    \ bored', 4),\n    ('I am bored. I am bored. I am bored. I am bored. I am bored',\
    \ 5),\n    ('I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored', 6),\n    ('I am bored. I am bored. I am bored. I am bored. I am bored.\
    \ I am bored. I am bored', 7),\n    ('I am bored. I am bored. I am bored. I am\
    \ bored. I am bored. I am bored. I am bored. I am bored', 8),\n    ('I am bored.\
    \ I am bored. I am bored. I am bored. I am bored. I am bored. I am bored. I am\
    \ bored. I am bored', 9),\n    ('I am bored.", "    boredoms = 0\n    sentences\
    \ = S.split('.') + S.split('?') + S.split('!')\n    for sentence in sentences:\n\
    \        if len(sentence) > 0 and sentence[0] == 'I':\n            boredoms +=\
    \ 1\n    return boredoms\n\n", "    boredom = 0\n    for i in S.split('.'):\n\
    \        words = i.split()\n        if len(words) > 0 and words[0] == 'I':\n \
    \           boredom += 1\n    return boredom\n\n", "    bored = 0\n    for s in\
    \ S.split('.'):\n        if 'I' in s:\n            bored += 1\n    return bored\n",
  "    i = 0\n    bored = 0\n    while i < len(S):\n        if S[i] == 'I':\n    \
    \        bored += 1\n        elif S[i] == '.' or S[i] == '?' or S[i] == '!':\n\
    \            i += 1\n            continue\n        else:\n            i += 1\n\
    \            continue\n        i += 1\n    return bored\n", "    return S.count('\
    \ I ')\n\n", "    return S.count('I')\n", "    # The startswith() method is used\
    \ to check if string starts with the\n    # specified prefix.\n    # It returns\
    \ true if the string begins with the specified prefix.\n    # Otherwise, it returns\
    \ false.\n    # S.split('.') will split all the sentences by '.' into a list\n\
    \    # We can use list comprehension to check if every sentence in\n    # the\
    \ list starts with 'I'\n    return sum([1 for i in S.split('.') if i.startswith('I')])\n\
    \    # Another way to solve this is to use a loop\n    # counter = 0\n    # for\
    \ i in S.split('.'):\n    #     if i.startswith('I'):\n    #         counter +=\
    \ 1\n    # return counter\n    # return sum([1 for s in S.split('.') if s.startswith('I')])\n\
    \    \n    ", "    sentences = S.split('.')\n    boredoms = 0\n    for s in sentences:\n\
    \        s = s.lstrip().split(' ')\n        if s[0] == 'I':\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    count = 0\n    for word in S.split():\n\
    \        if word.startswith('I'):\n            count += 1\n    return count\n\n",
  "    if not S:\n        return 0\n    return sum(1 for s in re.split(r'[.!?]', S)\
    \ if s.strip().startswith('I'))\n\n", "    count = 0\n    S_list = re.split('[\\\
    .\\?!]', S)\n    for sentence in S_list:\n        if sentence.strip() != '':\n\
    \            if sentence.strip().split()[0] == 'I':\n                count +=\
    \ 1\n    return count\n\n", "    return S.count(' I ')\n\n", "    count = 0\n\
    \    if '.' not in S:\n        if S.startswith('I'):\n            count += 1\n\
    \        return count\n    sentences = re.split('\\.|\\?|!', S)\n    for sentence\
    \ in sentences:\n        if sentence.startswith('I'):\n            count += 1\n\
    \    return count\n", "    # Split the string into sentences\n    sentences =\
    \ [sentence.strip() for sentence in re.split(r'[\\.\\?\\!]', S) if sentence]\n\
    \    # Check if any of the sentences start with \"I\"\n    boredoms = [sentence\
    \ for sentence in sentences if sentence.startswith('I')]\n    return len(boredoms)\n\
    \n", "    sentences = S.split(\". \") + S.split(\"? \") + S.split(\"! \")\n  \
    \  boredoms = 0\n    for sentence in sentences:\n        if sentence.strip().startswith(\"\
    I\"):\n            boredoms += 1\n    return boredoms\n", "    # Split by the\
    \ punctuation and ' '.\n    sentences = re.split(r'\\.|\\?|!\\s+', S)\n    boredoms\
    \ = 0\n    for sentence in sentences:\n        if sentence[0] == 'I':\n      \
    \      boredoms += 1\n    return boredoms\n\n", "    return len([sentence for\
    \ sentence in S.split('.') if sentence.startswith('I')])\n\n", "    boredoms =\
    \ 0\n    for sent in S.split('.'):\n        for sent in sent.split('?'):\n   \
    \         for sent in sent.split('!'):\n                if sent.strip().startswith('I'):\n\
    \                    boredoms += 1\n    \n    return boredoms\n\n", "    # Replace\
    \ the following line with your code\n    sentences = S.split('.|?|!')\n    num_bored\
    \ = 0\n    for sentence in sentences:\n        if sentence[0] == 'I':\n      \
    \      num_bored += 1\n    return num_bored\n\n", "    counter = 0\n    sentences\
    \ = S.split('.')\n    for sentence in sentences:\n        if sentence.strip().split()[0]\
    \ == 'I':\n            counter += 1\n    return counter\n", "    boredoms = 0\n\
    \    for sentence in S.split('.'):\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n", "    boredoms = 0\n    sentences\
    \ = S.split('.')\n    for sentence in sentences:\n        words = sentence.split()\n\
    \        if len(words) > 0 and words[0] == 'I':\n            boredoms += 1\n \
    \   return boredoms\n\n", "    boredoms = 0\n    sentences = S.split('.') + S.split('?')\
    \ + S.split('!')\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n\n", "    # your code here\n\
    \    boredoms = 0\n    i = 0\n    sentence = ''\n    for letter in S:\n      \
    \  if letter == '.' or letter == '?' or letter == '!':\n            if sentence[0]\
    \ == 'I':\n                boredoms += 1\n            sentence = ''\n        else:\n\
    \            sentence += letter\n    return boredoms\n\n", "    # read the string\
    \ and split into a list of sentences\n    # for each sentence, check if it begins\
    \ with 'I'\n    # if it does, increment a counter\n    # return the counter\n\
    \    pass\n", "    count = 0\n    for sentence in S.split('.'):\n        count\
    \ += 1 if sentence.strip().startswith('I') else 0\n    return count\n\n", "  \
    \  boredoms = 0\n    sentences = S.split('. ')\n    for sentence in sentences:\n\
    \        if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n", "    bored = 0\n    for sentence in S.split('.'):\n        sentence = sentence.strip()\n\
    \        if len(sentence) > 0 and sentence[0] == 'I':\n            bored += 1\n\
    \    return bored\n\n", "    sentences = re.split('\\.|\\?|!', S)\n    boredoms\
    \ = 0\n    for sentence in sentences:\n        if sentence.split()[0] == 'I':\n\
    \            boredoms += 1\n    return boredoms\n\n\n@pytest.mark.parametrize('S,\
    \ result', [\n    ('Hello world', 0),\n    ('The sky is blue. The sun is shining.\
    \ I love this weather', 1),\n    ('I am staying in a hotel. Weather is nice. I\
    \ am eating. I am sitting on a bench.', 3),\n    ('Something is not here.', 0),\n\
    \    ('I am sitting on a bench. I am drinking juice. I am going to office in the\
    \ morning.', 3),\n    ('I am going to office in the morning.', 1),\n    ('I am\
    \ going to office in the morning. I am sitting on a bench. I am drinking juice.',\
    \ 3),\n    ('I am drinking juice. I am sitting on a bench. I am going to office\
    \ in the morning.', 3),\n    ('I am drinking juice. I am going to office in the\
    \ morning. I am sitting on a bench.', 3),\n    ('I am going to office in the morning.\
    \ I am drinking juice. I am sitting on a bench.', 3),\n    ('I am going to office\
    \ in the morning. I am drinking juice. I am sitting on a bench. I am going to\
    \ office in the morning. I am drinking juice. I am sitting on a bench. I am going\
    \ to office in the morning. I am drinking juice. I am sitting on a bench. I am\
    \ going to office in the morning. I am drinking juice. I am sitting on a bench.\
    \ I am going to office in the morning. I am drinking juice. I am sitting on a\
    \ bench. I am going to office in the morning. I am drinking juice. I am sitting\
    \ on a bench. I am going to office in the morning. I am drinking juice. I am sitting\
    \ on a bench. I am going to office in the morning. I am drinking juice. I am sitting\
    \ on a bench. I am going to office in the morning. I am drinking juice. I am sitting\
    \ on a bench. I am going to office in the morning. I am drinking juice. I am sitting\
    \ on a bench. I am going to office in the morning.", "    # may be a better way\
    \ than a regex?\n    return len(re.findall(r'I[^.!?]*[\\.!?]', S))\n\n", "   \
    \ # Step 1: Split the sentence into sentences\n    # sentences = list(filter(None,\
    \ re.split(r'[.?!]', S)))\n    sentences = re.split(r'[.?!]', S)\n    # Step 2:\
    \ Loop over each sentence\n    boredoms = 0\n    for sentence in sentences:\n\
    \        if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n", "    boredoms = 0\n    for s in S.split('.'):\n        for w in s.split('?'):\n\
    \            for w in w.split('!'):\n                if w.startswith('I '):\n\
    \                    boredoms += 1\n    return boredoms\n\n", "    boredoms =\
    \ 0\n    for sentence in S.split('.'):\n        print(sentence)\n        for word\
    \ in sentence.split():\n            if word == 'I':\n                boredoms\
    \ += 1\n                break\n    return boredoms\n\n", "    boredoms = 0\n \
    \   sentence = ''\n    for i in S:\n        if i == '.' or i == '?' or i == '!':\n\
    \            words = sentence.split()\n            if words:\n               \
    \ if words[0] == 'I':\n                    boredoms += 1\n            sentence\
    \ = ''\n        else:\n            sentence += i\n    return boredoms\n\n", " \
    \   sentences = re.split('[.?!]', S)\n    boredoms = 0\n    for sentence in sentences:\n\
    \        if sentence.split()[0] == 'I':\n            boredoms += 1\n    return\
    \ boredoms\n", "    # split the string by one of three delimiters\n    sentences\
    \ = re.split(r'[\\.\\?\\!]', S)\n    # count how many words start with I\n   \
    \ boredoms = 0\n    for sentence in sentences:\n        if sentence.startswith('I'):\n\
    \            boredoms += 1\n    return boredoms\n", "    boredoms = 0\n    sentences\
    \ = S.split('.')\n    sentences.extend(S.split('?'))\n    sentences.extend(S.split('!'))\n\
    \    for sentence in sentences:\n        words = sentence.split()\n        if\
    \ words:\n            first_word = words[0]\n            if first_word == 'I':\n\
    \                boredoms += 1\n    return boredoms\n            ", "    return\
    \ S.count('I')\n    \n    \n    \n    \n    ", "    return len([boredom for boredom\
    \ in S.split('.') if boredom.startswith('I')])\n", "    bored = 0\n    for sent\
    \ in S.split('.'):\n        if sent.split()[0] == 'I':\n            bored += 1\n\
    \    return bored\n\n", "    sentences = re.split(r'\\.|\\?|!', S)\n    count\
    \ = 0\n    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n\n", "    boredom = 0\n    for sentence\
    \ in S.split('. '):\n        if sentence.split(' ')[0] == 'I':\n            boredom\
    \ += 1\n    return boredom\n\n", "    return S.count('I')\n\n", "    boredoms\
    \ = 0\n    sentences = S.split('. ')\n    for sentence in sentences:\n       \
    \ words = sentence.split(' ')\n        if words[0] == 'I':\n            boredoms\
    \ += 1\n    return boredoms\n\n", "    counter = 0\n    for word in S.split():\n\
    \        if word == 'I':\n            counter += 1\n    return counter\n\n\n",
  "    return S.count('I')\n\n", "    bored = 0\n    words = S.split()\n    for word\
    \ in words:\n        if word == 'I':\n            bored += 1\n    return bored\n\
    \n", "    sentences = S.split('.')\n    return len([sentence for sentence in sentences\
    \ if sentence.strip().startswith('I')])\n\n", "    return len([w for w in S.split('.')\
    \ if w.strip().startswith('I')])\n\n", "    return S.count('I')\n\n", "    return\
    \ sum(1 for sentence in S.split('.') if sentence.strip().startswith('I'))\n\n",
  "    # separate sentences by delimiters\n    sentences = re.split('\\.|\\?|!', S)\n\
    \    # count sentences that starts with 'I'\n    boredoms = sum(map(lambda x:\
    \ 1 if x.startswith('I') else 0, sentences))\n    return boredoms\n\n", "    return\
    \ len([s for s in S.split('.') if s.strip().startswith('I')])\n\n", "    if not\
    \ S:\n        return 0\n    s = S.replace('.', '\\1').replace('?', '\\1').replace('!',\
    \ '\\1')\n    return len([s for s in s.split('\\1') if s.split()[0] == 'I'])\n\
    \n", "    boredom = 0\n    for sentence in S.split('.'):\n        boredom += 1\
    \ if sentence.split()[0] == 'I' else 0\n    return boredom\n", "    S = S.lower()\n\
    \    return S.count('i')\n    ", "    return len([s for s in S.split('.') if s[0]\
    \ == 'I'])\n", "    boredoms = 0\n    for sentence in re.split(r'[.?!]', S):\n\
    \        if sentence.strip().startswith('I'):\n            boredoms += 1\n   \
    \ return boredoms\n\n", "    # split by punctions and then by spaces\n    sentences\
    \ = re.split(r'[?!.]', S)\n    boredoms = 0\n    for sentence in sentences:\n\
    \        if sentence.split()[0] == 'I':\n            boredoms += 1\n    return\
    \ boredoms\n   \n   ", "    boredoms = 0\n    for sentence in S.split('.'):\n\
    \        if sentence.strip().startswith('I'):\n            boredoms += 1\n   \
    \ return boredoms\n\n", "    sen = S.split('.')\n    bored = 0\n    for i in sen:\n\
    \        if i.strip().startswith('I'):\n            bored += 1\n    return bored\n\
    \n", "    # num_boredoms = 0\n    # sentences = S.split('.')\n    # for sentence\
    \ in sentences:\n    #     if sentence[0] == 'I':\n    #         num_boredoms\
    \ += 1\n    # return num_boredoms\n    # return sum(1 for sentence in S.split('.')\
    \ if sentence[0] == 'I')\n    return sum(sentence[0] == 'I' for sentence in S.split('.'))\n\
    \n", "    boredoms = 0\n    sentences = S.split('.')\n    for sentence in sentences:\n\
    \        if sentence[0] == 'I':\n            boredoms += 1\n    return boredoms\n",
  "    return len([w for w in S.split() if w.startswith('I')])\n\n", "    sentences\
    \ = re.split('[.?!]', S)\n    boredoms = 0\n    for sentence in sentences:\n \
    \       if sentence.startswith('I'):\n            boredoms += 1\n    return boredoms\n\
    \n", "    # Split the string into sentences\n    sent = S.split('.')\n    sent.extend(S.split('?'))\n\
    \    sent.extend(S.split('!'))\n    # Count the boredoms\n    count = 0\n    for\
    \ s in sent:\n        if s.strip().startswith('I'):\n            count += 1\n\
    \    return count\n", "    sentences = S.split('.')\n    return sum(1 for sentence\
    \ in sentences if sentence.startswith('I'))\n", "    words = S.split()\n    if\
    \ words:\n        return words[0] == 'I'\n    return 0\n\n", "    return 0\n\n",
  "    sentences = [sentence.strip() for sentence in S.split('. ')]\n    return len([sentence\
    \ for sentence in sentences if sentence.startswith('I')])\n\n\n", "    return\
    \ sum(1 for s in S.split('.') if s.startswith('I'))\n", "    sentences = S.split('.')\n\
    \    sentences += S.split('?')\n    sentences += S.split('!')\n    count = 0\n\
    \    for sentence in sentences:\n        if sentence.strip().startswith('I'):\n\
    \            count += 1\n    return count\n\n", "    sentences = S.split(\". \"\
    )\n    boredoms = 0\n    for sentence in sentences:\n        words = sentence.split(\"\
    \ \")\n        if words[0] == \"I\":\n            boredoms += 1\n    return boredoms\n",
  "    return S.count('I')\n\n", "    # your code here\n    S = S.split()\n    count\
    \ = 0\n    while 'I' in S:\n        count += 1\n        S.remove('I')\n    return\
    \ count\n", "    boredoms = 0\n    sentences = S.split('.') + S.split('?') + S.split('!')\n\
    \    for sentence in sentences:\n        words = sentence.split()\n        if\
    \ words:\n            if words[0] == 'I':\n                boredoms += 1\n   \
    \ return boredoms\n\n", "    return sum(1 for x in S.split('.') if x.strip().startswith('I'))\n\
    \n", "    matches = re.findall(r'I.*[\\.\\?\\!]', S)\n    return len(matches)\n\
    \n", "    sentences = S.split('.')\n    boredoms = 0\n    for sentence in sentences:\n\
    \        if sentence[0] == 'I':\n            boredoms += 1\n    return boredoms\n",
  "    boredom = 0\n    for sentence in re.split('\\.|\\?|!', S):\n        if sentence.startswith('I'):\n\
    \            boredom += 1\n    return boredom\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_85_add
language: py
prompt: "from typing import List\n\ndef add(lst: List[int]) -> int:\n    \"\"\"Given\
  \ a non-empty list of integers lst. add the even elements that are at odd indices..\n\
  \n\n    Examples:\n    >>> add([4, 2, 6, 7])\n    2\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([4, 88]) == 88\n    assert candidate([4,\
  \ 5, 6, 7, 2, 122]) == 122\n    assert candidate([4, 0, 6, 7]) == 0\n    assert\
  \ candidate([4, 4, 6, 8]) == 12\n\ndef test_check():\n    check(add)\n\ntest_check()\n"
completions: ['    return sum(e for i, e in enumerate(lst) if i % 2 == 1 and e % 2
    == 0)', '    return sum(e for (i, e) in enumerate(lst) if i % 2 == 1 and e % 2
    == 0)', '    return 0', "    return sum(lst[::2])\n\nprint(add([4, 2, 6, 7]))",
  "    # add here\n    sum = 0\n    for i in range(len(lst)):\n        if i % 2 ==\
    \ 1 and lst[i] % 2 == 0:\n            sum += lst[i]\n    return sum\n\n", '    return
    sum(lst[1::2])', "    counter = 0\n    for i in range(len(lst)):\n        if i\
    \ % 2 == 1 and lst[i] % 2 == 0:\n            counter += lst[i]\n    return counter\n",
  '    return sum(lst[1::2])', "    return sum(i for i in lst[1::2] if i % 2 == 0)\n",
  "    count = 0\n    for i in range(1, len(lst), 2):\n        if lst[i] % 2 == 0:\n\
    \            count += lst[i]\n    return count", "    return sum(list(filter(lambda\
    \ x: x % 2 == 0, lst[1::2])))\n", "    sum = 0\n    for i in range(len(lst)):\n\
    \        if i % 2 == 1 and lst[i] % 2 == 0:\n            sum += lst[i]\n    return\
    \ sum", "    return sum(lst[1::2])\n\n\nprint(add([2, 3, 5, 6, 10]))", "    acc\
    \ = 0\n    for i in range(len(lst)):\n        if i % 2 == 1 and lst[i] % 2 ==\
    \ 0:\n            acc += lst[i]\n    return acc\n", "    even = list(filter(lambda\
    \ x: x % 2 == 0, lst))\n    return sum(even)\n", "    for el in lst:\n       \
    \ if el % 2 == 0:\n            if lst.index(el) % 2 != 0:\n                return\
    \ el\n", '    return 0', "    sum = 0\n    for i in range(1, len(lst), 2):\n \
    \       if lst[i] % 2 == 0:\n            sum += lst[i]\n    return sum\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    return 0\n\n", "    count = 0\n    for i in range(len(lst)):\n\
    \        if i % 2 != 0 and lst[i] % 2 == 0:\n            count += lst[i]\n   \
    \ return count\n", "    return sum(x for i, x in enumerate(lst) if i % 2 != 0\
    \ and x % 2 == 0)\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

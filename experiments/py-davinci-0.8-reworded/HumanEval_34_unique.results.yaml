language: py
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if l == []:\n \
    \       return []\n    res = []\n    for el in l:\n        if el not in res:\n\
    \            res.append(el)\n    return sorted(res)\ndef check(candidate):\n \
    \   assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\n\
    def test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l.sort()\n    return\
    \ [ l[i] for i in range(len(l)) if i == 0 or l[i] != l[i-1] ]\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l.sort()\n    n\
    \ = len(l)\n    i = 0\n    while i < n - 1:\n        if l[i] == l[i + 1]:\n  \
    \          del l[i]\n            n -= 1\n        else:\n            i += 1\n \
    \   return l\n\nl = [5, 3, 5, 2, 3, 3, 9, 0, 123]\nprint(unique(l))\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 2, 3, 5, 9, 123]

    '
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    set_l = set(l)\n\
    \    return sorted(set_l)\n\ndef check(candidate):\n    assert candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    res = []\n    for\
    \ i in l:\n        if i not in res:\n            res.append(i)\n    return sorted(res)\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    a = []\n    for\
    \ x in l:\n        if x not in a:\n            a.append(x)\n    a.sort()\n   \
    \ return a\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_elements\
    \ = list(set(l))\n    unique_elements.sort()\n    return unique_elements\ndef\
    \ check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return [x for x in l if not (x in seen or seen_add(x))]\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7fq35ppu.py\", line\
    \ 18, in <module>\n    test_check()\n  File \"/tmp/tmp7fq35ppu.py\", line 16,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmp7fq35ppu.py\", line 13, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    #return sorted(set(l))\n\
    \    # list comprehension\n    #return sorted([i for i in set(l)])\n    # generator\
    \ expression\n    return sorted(i for i in set(l))\ndef check(candidate):\n  \
    \  assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\n\
    def test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # WRITE YOUR CODE\
    \ HERE\n\n    return sorted(list(set(l)))\n\nl = [5, 3, 5, 2, 3, 3, 9, 0, 123]\n\
    print(unique(l))\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 2, 3, 5, 9, 123]

    '
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_list = []\n\
    \    for i in l:\n        if i not in unique_list:\n            unique_list.append(i)\n\
    \    return sorted(unique_list)\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    lista = []\n  \
    \  lista.append(l[0])\n    for a in l:\n        if a not in lista:\n         \
    \   lista.append(a)\n    lista.sort()\n    return lista\n\nprint(unique([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]))\ndef check(candidate):\n    assert candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 2, 3, 5, 9, 123]

    '
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  s = list(s)\n    s.sort()\n    return s\ndef check(candidate):\n    assert\
    \ candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n\
    \    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l = list(set(l))\n\
    \    l.sort()\n    return l\ndef check(candidate):\n    assert candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    my_set = set(l)\n\
    \    unique_list = list(my_set)\n    unique_list.sort()\n    return unique_list\n\
    \nprint(unique([5, 3, 5, 2, 3, 3, 9, 0, 123]))\ndef check(candidate):\n    assert\
    \ candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n\
    \    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 2, 3, 5, 9, 123]

    '
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    L = sorted(l)\n\
    \    U = []\n    for e in L:\n        if U == [] or e != U[-1]:\n            U.append(e)\n\
    \    return U\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    x = sorted(set(l))\n\
    \    return x\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 0:\n\
    \        return []\n    head = l[0]\n    tail = l[1:]\n    if head in tail:\n\
    \        return unique(tail)\n    else:\n        return [head] + unique(tail)\n\
    \n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjebbei2s.py\", line\
    \ 24, in <module>\n    test_check()\n  File \"/tmp/tmpjebbei2s.py\", line 22,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpjebbei2s.py\", line 19, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if len(l) == 0:\n\
    \        return []\n    else:\n        return sorted(set(l))\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\nfrom typing import Iterable\n\ndef\
    \ check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    ret_val = set(l)\n\
    \    ret_val = list(ret_val)\n    ret_val.sort()\n    return ret_val\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_numbers\
    \ = []\n    for number in l:\n        if number not in unique_numbers:\n     \
    \       unique_numbers.append(number)\n    return sorted(unique_numbers)\n\ndef\
    \ check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0,\
    \ 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    unique_list = []\n    for x in l:\n        if x not in seen:\n          \
    \  seen.add(x)\n            unique_list.append(x)\n    return sorted(unique_list)\n\
    \n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return sorted(set(l))\ndef check(candidate):\n \
    \   assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\n\
    def test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    output = []\n \
    \   for x in l:\n        if x not in output:\n            output.append(x)\n \
    \   output.sort()\n    return output\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # l = sorted(l)\n\
    \    l = sorted(set(l))\n    return l\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    res = []\n    for\
    \ i in l:\n        if i not in res:\n            res.append(i)\n    return sorted(res)\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    res = []\n    for\
    \ i in sorted(l):\n        if i not in res:\n            res.append(i)\n    return\
    \ res\n\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0,\
    \ 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # TODO\n    return\
    \ sorted(list(set(l)))\n\ndef check(candidate):\n    assert candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # return sorted(set(l))\n\
    \    u = []\n    for i in l:\n        if i not in u:\n            u.append(i)\n\
    \    return sorted(u)\n\n\ndef check(candidate):\n    assert candidate([5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    b = l.copy()\n\
    \    b.sort()\n    return list(dict.fromkeys(b))\n\ndef check(candidate):\n  \
    \  assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\n\
    def test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    ret = []\n    for\
    \ i in l:\n        if i not in ret:\n            ret.append(i)\n    ret.sort()\n\
    \    return ret\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # set creates a\
    \ collection of unique elements\n    # sorted returns a sorted list\n    return\
    \ sorted(set(l))\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    out = []\n    for\
    \ i in l:\n        if i not in out:\n            out.append(i)\n    return sorted(out)\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \    \n    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\nimport doctest\ndoctest.testmod()\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # return list(sorted(set(l)))\n\
    \    if not l:\n        return []\n    s = sorted(l)\n    i = 0\n    for j in\
    \ range(1, len(s)):\n        if s[j] != s[i]:\n            i += 1\n          \
    \  s[i] = s[j]\n    return s[:i+1]\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    seen = set()\n\
    \    seen_add = seen.add\n    return sorted(seen.union(l))\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # convert to a\
    \ set\n    s = set(l)\n    # convert back to a list and sort it\n    l = list(s)\n\
    \    l.sort()\n    return l\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    new_list = []\n\
    \    for i in l:\n        if i not in new_list:\n            new_list.append(i)\n\
    \    new_list.sort()\n    return new_list\n\ndef check(candidate):\n    assert\
    \ candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n\
    \    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # return sorted(set(l))\n\
    \    # lst = []\n    # for elem in l:\n    #     if elem not in lst:\n    #  \
    \       lst.append(elem)\n    # lst.sort()\n    # return lst\n    seen = set()\n\
    \    lst = []\n    for elem in l:\n        if elem not in seen:\n            lst.append(elem)\n\
    \            seen.add(elem)\n    lst.sort()\n    return lst\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # return sorted(set(l))\n\
    \    return sorted(list(set(l)))\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    ret = []\n    for\
    \ i in l:\n        if i not in ret:\n            ret.append(i)\n    ret.sort()\n\
    \    return ret\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3,\
    \ 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = sorted(l)\n\
    \    return [s[i] for i in range(len(s)-1) if s[i] != s[i+1]]\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbaqycbal.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpbaqycbal.py\", line 15,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpbaqycbal.py\", line 12, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123])\
    \ == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # build a unique\
    \ set\n    unique_set = set(l)\n    return sorted(unique_set)\n\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    s = set(l)\n  \
    \  return sorted(s)\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_list = []\n\
    \    [unique_list.append(i) for i in l if i not in unique_list]\n    return sorted(unique_list)\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    tmp = sorted(l)\n\
    \    new = []\n    for i in tmp:\n        if i not in new:\n            new.append(i)\n\
    \    return new\n\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    retu\ndef check(candidate):\n\
    \    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\
    \ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpojx1ibao.py\", line\
    \ 15, in <module>\n    test_check()\n  File \"/tmp/tmpojx1ibao.py\", line 13,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpojx1ibao.py\", line 10, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\n  File \"/tmp/tmpojx1ibao.py\", line 8, in unique\n    retu\nNameError:\
    \ name 'retu' is not defined\n"
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    if l == []:\n \
    \       return []\n    else:\n        res = []\n        l.sort()\n        prev\
    \ = l[0]\n        res.append(prev)\n        for i in range(1, len(l)):\n     \
    \       if l[i] != prev:\n                res.append(l[i])\n                prev\
    \ = l[i]\n        return res\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_l = list(set(l))\n\
    \    unique_l.sort()\n    return unique_l\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_list = []\n\
    \    for i in l:\n        if i not in unique_list:\n            unique_list.append(i)\n\
    \    return sorted(unique_list)\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    u = []\n    for\
    \ e in l:\n        if e not in u:\n            u.append(e)\n    u.sort()\n   \
    \ return u\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_set = set(l)\n\
    \    return sorted(unique_set)\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nfrom typing import Callable\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    l.sort()\n    for\
    \ i in range(len(l) - 1, 0, -1):\n        if l[i] == l[i - 1]:\n            del\
    \ l[i]\n    return l\n\ndef check(candidate):\n    assert candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    # return list(set(l))\n\
    \    return sorted(set(l))\n\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nunique([5, 3, 5, 2, 3, 3, 9, 0, 123])\n\ndef check(candidate):\n    assert candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n  \
    \  check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    res = []\n    for\
    \ e in l:\n        if e not in res:\n            res.append(e)\n    res.sort()\n\
    \    return res\n\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: -1
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    unique_list = []\n\
    \    unique_list = [unique_list.append(num) for num in l if num not in unique_list]\n\
    \    return unique_list\ndef check(candidate):\n    assert candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz2418bk8.py\", line\
    \ 17, in <module>\n    test_check()\n  File \"/tmp/tmpz2418bk8.py\", line 15,\
    \ in test_check\n    check(unique)\n  File \"/tmp/tmpz2418bk8.py\", line 12, in\
    \ check\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9,\
    \ 123]\nAssertionError\n"
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    a = []\n    for\
    \ x in l:\n        if x not in a:\n            a.append(x)\n    a.sort()\n   \
    \ return a\n\ndef check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\n\
    test_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    \nprint(unique([5, 3, 5, 2, 3, 3, 9, 0, 123]))\ndef check(candidate):\n    assert\
    \ candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) == [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n\
    \    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: '[0, 2, 3, 5, 9, 123]

    '
  timestamp: 1659977161
- exit_code: 0
  program: "from typing import List\n\ndef unique(l: List[int]) -> List[int]:\n  \
    \  \"\"\"Return sorted unique elements in a list\n    >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n    [0, 2, 3, 5, 9, 123]\n    \"\"\"\n    return sorted(set(l))\n\
    def check(candidate):\n    assert candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]) ==\
    \ [0, 2, 3, 5, 9, 123]\n\ndef test_check():\n    check(unique)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977161

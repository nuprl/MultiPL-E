name: HumanEval_121_solution
language: py
prompt: "from typing import List\n\ndef solution(lst: List[int]) -> int:\n    \"\"\
  \"Given a non-empty list of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n    \n\n    Examples\n    >>> solution([5, 8, 7,\
  \ 1])\n    12\n    >>> solution([3, 3, 3, 3, 3])\n    9\n    >>> solution([30, 13,\
  \ 24, 321])\n    0\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate([5, 8, 7, 1]) == 12\n    assert\
  \ candidate([3, 3, 3, 3, 3]) == 9\n    assert candidate([30, 13, 24, 321]) == 0\n\
  \    assert candidate([5, 9]) == 5\n    assert candidate([2, 4, 8]) == 0\n    assert\
  \ candidate([30, 13, 23, 32]) == 23\n    assert candidate([3, 13, 2, 9]) == 3\n\n\
  def test_check():\n    check(solution)\n\ntest_check()\n"
completions: ["    return sum([elem for i, elem in enumerate(lst) if elem % 2 != 0\
    \ and i % 2 == 0])\n", '    return sum([elem for idx, elem in enumerate(lst) if
    idx % 2 == 0 and elem % 2 != 0])', "    sum = 0\n    for i in range(0, len(lst),\
    \ 2):\n        if lst[i] % 2 != 0:\n            sum += lst[i]\n    return sum",
  "    counter = 0\n    for i in range(len(lst)):\n        if i % 2 == 0 and lst[i]\
    \ % 2 != 0:\n            counter += lst[i]\n    return counter\n", "    sum =\
    \ 0\n    for i in range(len(lst)):\n        if i % 2 == 0 and lst[i] % 2 != 0:\n\
    \            sum += lst[i]\n    return sum\n", '    return sum([lst[i] for i in
    range(0, len(lst), 2) if lst[i] % 2 == 1])', '    return sum([i for i in lst[1::2]
    if i % 2 != 0])', "    return sum([n for i, n in enumerate(lst) if i % 2 == 0\
    \ and n % 2 != 0])\n", "    return sum([lst[i] for i in range(0, len(lst), 2)\
    \ if lst[i] % 2 != 0])\n    ", "    return sum([el for i, el in enumerate(lst)\
    \ if el % 2 != 0 and i % 2 == 0])\n", "    count = 0\n    for idx, num in enumerate(lst):\n\
    \        if num % 2 == 1 and idx % 2 == 0:\n            count += num\n    return\
    \ count\n", "    return sum([i for i in lst[1::2] if i % 2 == 1])\n", '    return
    sum([x for i, x in enumerate(lst) if i % 2 == 0 and x % 2 != 0])', '    return
    sum([x for i, x in enumerate(lst) if i % 2 == 0 and x % 2 != 0])', "    total\
    \ = 0\n    for index, value in enumerate(lst):\n        if value % 2 != 0 and\
    \ index % 2 == 0:\n            total += value\n    return total\n", "    count\
    \ = 0\n    for i in range(len(lst)):\n        if i % 2 == 0 and lst[i] % 2 !=\
    \ 0:\n            count += lst[i]\n    return count\n", "    total = 0\n    for\
    \ i in range(len(lst)):\n        if lst[i] % 2 == 1 and i % 2 == 0:\n        \
    \    total += lst[i]\n    return total", "    even_pos = sum(lst[1::2])\n    return\
    \ even_pos\n\n", '    return sum([el for i, el in enumerate(lst) if el % 2 ==
    1 and i % 2 == 0])', '    return sum([i for i in lst[1::2] if i % 2 == 1])']
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

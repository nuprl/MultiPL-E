name: HumanEval_71_triangle_area
language: py
prompt: "def triangle_area(a: int, b: int, c: int) -> float:\n    \"\"\"\n    Given\
  \ the lengths of the three sides of a triangle. Return the area of\n    the triangle\
  \ rounded to 2 decimal points if the three sides form a valid triangle. \n    Otherwise\
  \ return -1\n    Three sides make a valid triangle when the sum of any two sides\
  \ is greater \n    than the third side.\n    Example:\n    >>> triangle_area(3,\
  \ 4, 5)\n    6.0\n    >>> triangle_area(1, 2, 10)\n    -1\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(3, 4, 5) == 6.0\n    assert candidate(1,\
  \ 2, 10) == -1\n    assert candidate(4, 8, 5) == 8.18\n    assert candidate(2, 2,\
  \ 2) == 1.73\n    assert candidate(1, 2, 3) == -1\n    assert candidate(10, 5, 7)\
  \ == 16.25\n    assert candidate(2, 6, 3) == -1\n    assert candidate(1, 1, 1) ==\
  \ 0.43\n    assert candidate(2, 2, 10) == -1\n\ndef test_check():\n    check(triangle_area)\n\
  \ntest_check()\n"
completions: ["    pass\n\n", "    pass\n\n", "    if a + b > c and a + c > b and\
    \ b + c > a:\n        perimeter = (a + b + c) / 2\n        area = (perimeter *\
    \ (perimeter - a) * (perimeter - b) * (perimeter - c)) ** 0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n", "    if (a + b > c) and (a\
    \ + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area = (s *\
    \ (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n\
    \        return -1\n\n", "    pass\n\n", "    sides = sorted([a, b, c])\n    if\
    \ sides[0] + sides[1] <= sides[2]:\n        return -1\n    s = sum(sides) / 2\n\
    \    return round(sqrt(s * (s - sides[0]) * (s - sides[1]) * (s - sides[2])),\
    \ 2)\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n\
    \    # heron's formula\n    s = (a + b + c) / 2\n    return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n\n", "    if a + b > c and a + c > b and\
    \ b + c > a:\n        return 0.5 * math.sqrt((a + b + c) * (a + b - c) * (a +\
    \ c - b) * (b + c - a))\n    else:\n        return -1\n\n", "    p = (a + b +\
    \ c) / 2\n    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    if area < 0:\n\
    \        return -1\n    return round(area, 2)\n\n", "    s = (a + b + c) / 2\n\
    \    if a + b > c and a + c > b and b + c > a:\n        return (s * (s - a) *\
    \ (s - b) * (s - c)) ** 0.5\n    else:\n        return -1\n\n", "    if (a + b\
    \ > c) and (a + c > b) and (b + c > a):\n        return round((a + b + c) / 2,\
    \ 2)\n    else:\n        return -1\n\n", "    # your code here\n    if((a+b)>c\
    \ and (a+c)>b and (b+c)>a):\n        s=(a+b+c)/2\n        area=(s*(s-a)*(s-b)*(s-c))**0.5\n\
    \        return round(area,2)\n    else:\n        return -1\n        \n \n", " \
    \   pass\n\n", "    pass\n\n", "    pass\n    if (c>=a+b) or (b>=a+c) or (a>=b+c):\n\
    \        return -1\n    else:\n        p = (a+b+c)/2\n        return round((p*(p-a)*(p-b)*(p-c))**0.5,2)\n\
    \        \n", "    if a + b > c and a + c > b and b + c > a:\n        p = (a +\
    \ b + c) / 2\n        s = math.sqrt(p * (p - a) * (p - b) * (p - c))\n       \
    \ return round(s, 2)\n    else:\n        return -1\n\n\n", "    pass\n    ", " \
    \   # if a <= 0 or b <= 0 or c <= 0:\n    #     return -1\n    # if a + b <= c\
    \ or a + c <= b or b + c <= a:\n    #     return -1\n    # p = (a + b + c) / 2\n\
    \    # return (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    return round(((a +\
    \ b + c) * (-a + b + c) * (a - b + c) * (a + b - c)) ** 0.5 / 4, 2) if a > 0 and\
    \ b > 0 and c > 0 and a + b > c and a + c > b and b + c > a else -1\n\n", "  \
    \  if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p = (a +\
    \ b + c) / 2\n    return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n\
    \n", "    if a + b <= c or a + c <= b or b + c <= a:\n        return -1\n    p\
    \ = (a + b + c) / 2\n    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n   \
    \ return round(area, 2)\n\n", "    pass\n\n", "    if not is_triangle(a, b, c):\n\
    \        return -1\n    p = (a + b + c) / 2\n    return round(math.sqrt(p * (p\
    \ - a) * (p - b) * (p - c)), 2)\n\n", "    if a + b > c and a + c > b and b +\
    \ c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n", "    s = (a +\
    \ b + c) / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    if area\
    \ > 0:\n        return round(area, 2)\n    else:\n        return -1\n\n", "  \
    \  if (a + b > c) and (a + c > b) and (b + c > a):\n        p = (a + b + c) /\
    \ 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n", "    if sum(sorted([a, b, c])[:-1]) > sorted([a,\
    \ b, c])[-1]:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n", "    p =\
    \ (a + b + c) / 2\n    if a + b > c and a + c > b and b + c > a:\n        area\
    \ = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n\
    \    else:\n        return -1\n\n", "    if a + b > c and a + c > b and b + c\
    \ > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n", "    # TODO: implement\
    \ this function\n    pass\n \n ", "    if not (a < b + c and b < a + c and c <\
    \ a + b):\n        return -1\n    p = (a + b + c) / 2\n    return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n\n", "    if (a + b > c) and (a + c > b)\
    \ and (b + c > a):\n        S = (a + b + c) / 2\n        area = (S * (S - a) *\
    \ (S - b) * (S - c)) ** 0.5\n        return round(area, 2)\n    else:\n      \
    \  return -1\n\n", "    if a + b > c and a + c > b and b + c > a:\n        p =\
    \ (a + b + c) / 2\n        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n \
    \       return round(area, 2)\n    else:\n        return -1\n\n", "    return\
    \ round(a + b + c - max(a, b, c) - min(a, b, c), 2) if a + b > c else -1\n", " \
    \   # YOUR CODE HERE\n    if a + b > c and a + c > b and b + c > a:\n        return\
    \ round(0.5 * a * b, 2)\n    else:\n        return -1\n\n", "    pass\n\n", " \
    \   pass\n\n", "    x = (a + b + c) / 2\n    if x > a and x > b and x > c:\n \
    \       return (x * (x - a) * (x - b) * (x - c)) ** 0.5\n    else:\n        return\
    \ -1\ntriangle_area(3, 4, 5)\n\ntriangle_area(1, 2, 10)\n", "    if a+b > c and\
    \ a+c > b and b+c > a:\n        s = (a+b+c)/2\n        area = (s*(s-a)*(s-b)*(s-c))**0.5\n\
    \        return round(area, 2)\n    else:\n        return -1\n\n\n@pytest.mark.parametrize(\n\
    \    \"a, b, c, expected\", [\n        (3, 4, 5, 6.0),\n        (1, 2, 10, -1),\n\
    \        (1, 2, 3, -1),\n        (3, 4, 6, -1),\n        (0, 0, 0, -1),\n    \
    \    (1, 2, 1, -1),\n        (9, 9, 18, 81.64),\n        (10, 12, 15, 54.0),\n\
    \        (1, 2, 2, 0.0),\n        (0, 0, 1, -1),\n        (5, 5, 5, 10.83),\n\
    \        (3, 3, 3, 4.71),\n        (20, 14, 14, 98.69),\n        (3, 4, 5, 6.0),\n\
    \        (1, 2, 10, -1),\n        (7, 8, 9, 26.83),\n        (10, 12, 15, 54.0),\n\
    \        (1, 2, 2, 0.0),\n        (0, 0, 1, -1),\n        (5, 5, 5, 10.83),\n\
    \        (3, 3, 3, 4.71),\n        (20, 14, 14, 98.69),\n        (20, 14, 14,\
    \ 98.69),\n        (5, 6, 7, 14.7),\n        (3, 4, 6, -1),\n        (0, 0, 0,\
    \ -1),\n        (1, 2, 1, -1),\n        (9, 9, 18, 81.64),\n        (1, 2, 10,\
    \ -1),\n        (1, 2, 3, -1),\n        (20, 14, 14, 98.69),\n        (10, 12,\
    \ 15, 54.0),\n        (7, 8,", "    if a + b > c and a + c > b and b + c > a:\n\
    \        return round(math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b +\
    \ c - a)) / 4, 2)\n    else:\n        return -1", "    # sides are too small to\
    \ form a triangle\n    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n   \
    \ # Any two sides must be equal to or larger than the third side\n    if a + b\
    \ <= c or a + c <= b or b + c <= a:\n        return -1\n    # Only need to use\
    \ the Heron's formula if the two conditions above were met\n    if a + b > c and\
    \ a + c > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n\n", "    if a + b <= c or a + c <= b or\
    \ b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    area = (p * (p\
    \ - a) * (p - b) * (p - c)) ** 0.5\n    return round(area, 2)\n\n", "    sides\
    \ = sorted([a, b, c])\n    if sides[0] + sides[1] > sides[2]:\n        s = sum(sides)\
    \ / 2\n        area = (s * (s - sides[0]) * (s - sides[1]) * (s - sides[2])) **\
    \ 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n", "   \
    \ # Write your code here\n    if(a<=0 or b<=0 or c<=0):\n        return -1\n \
    \   if(a+b>c and a+c>b and b+c>a):\n        s=(a+b+c)/2\n        area=math.sqrt(s*(s-a)*(s-b)*(s-c))\n\
    \        return round(area,2)\n    else:\n        return -1\n    pass\n", "  \
    \  pass\n\n", "    # Check triangle inequality\n    if a + b > c and a + c > b\
    \ and b + c > a:\n        # Calculate area\n        s = (a + b + c) / 2\n    \
    \    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    #TODO: Find the area of the triangle\
    \ and round to 2 decimal points.\n    pass\n\n", "    if a + b > c and a + c >\
    \ b and b + c > a:\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n", "   \
    \ # TODO: Implement triangle_area function as described above\n    pass\n    if\
    \ (a + b > c) and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n\
    \        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    # Write your code here\n    if a\
    \ + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        A\
    \ = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(A, 2)\n   \
    \ else:\n        return -1\n\n", "    s = (a + b + c) / 2\n    area = (s * (s\
    \ - a) * (s - b) * (s - c)) ** 0.5\n    return round(area, 2) if area > 0 else\
    \ -1\n", "    pass\n\n", "    s = (a + b + c) / 2\n    area = (s * (s - a) * (s\
    \ - b) * (s - c)) ** 0.5\n    return round(area, 2) if area > 0 else -1\n\n",
  "    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n  \
    \      area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n", "    p = (a + b + c) / 2\n    if a + b\
    \ > c and a + c > b and b + c > a:\n        return round(sqrt(p * (p - a) * (p\
    \ - b) * (p - c)), 2)\n    else:\n        return -1\n\n", "    # TODO: your code\
    \ here\n    pass\n\n", "    if c < a + b and a < b + c and b < a + c:\n      \
    \  p = (a + b + c) / 2\n        area = sqrt(p * (p - a) * (p - b) * (p - c))\n\
    \        return round(area, 2)\n    else:\n        return -1\n\n", "    # ===============\
    \ TODO: Your code here ===============\n    if (a + b > c) and (a + c > b) and\
    \ (b + c > a):\n        s = (a + b + c) / 2\n        area = (s * (s - a) * (s\
    \ - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return\
    \ -1\n    # ===================================================\n\n", "    s =\
    \ (a + b + c) / 2\n    if a + b > c and a + c > b and b + c > a:\n        return\
    \ round(sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n",
  "    # check for a valid triangle\n    if a + b <= c or a + c <= b or b + c <= a:\n\
    \        return -1\n    # calculate area of triangle\n    s = (a + b + c) / 2\n\
    \    area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return round(area,\
    \ 2)\n", "    pass\n\n", "    pass\n\n", "    pass\n", "    sides = [a, b, c]\n\
    \    sides.sort()\n    if sides[0] + sides[1] > sides[2]:\n        p = 0.5 * sum(sides)\n\
    \        return round(math.sqrt(p * (p - sides[0]) * (p - sides[1]) * (p - sides[2])),\
    \ 2)\n    else:\n        return -1\n\n", "    if a + b > c and a + c > b and b\
    \ + c > a:\n        s = (a + b + c) / 2\n        area = (s * (s - a) * (s - b)\
    \ * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return\
    \ -1\n \n \n ", "    sides = [a, b, c]\n    sides.sort()\n    a, b, c = sides\n\
    \    if a + b <= c:\n        return -1\n    s = sum(sides) / 2\n    return round(sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n\n", "    pass\n\n", "    s = (a + b + c)\
    \ / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    if area > 0:\n\
    \        return round(area, 2)\n    else:\n        return -1\n\n", "    return\
    \ round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2) if (a + b > c and b + c\
    \ > a and a + c > b) else -1\n\n", "    # for a, b, c in zip(*arr):\n    #   \
    \  x = sum(arr) - a - b - c\n    #     if a + b > x and a + c > b and b + c >\
    \ a:\n    #         return round(math.sqrt(x * (x - a) * (x - b) * (x - c)), 2)\n\
    \    # return -1\n    a, b, c = sorted([a, b, c])\n    return round(math.sqrt(a\
    \ * (a - b) * (a - c) * (a - c)), 2) if a + b > c else -1\n\n", "    # TODO: Fill\
    \ in code below this comment and above the \"return\" statement.\n    p = (a +\
    \ b + c) / 2\n    if (a + b <= c) or (a + c <= b) or (b + c <= a):\n        return\
    \ -1\n    return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\n", "    pass\n\n",
  "    # intialize default return value\n    area = -1\n\n    # TODO: use a if statment\
    \ to determine if the sides will make a valid\n    # triangle.\n    if(a+b>c and\
    \ a+c>b and b+c>a):\n      # when a valid triangle, this is the formula to calculate\
    \ the area:\n      area = (b * a * sin(c)) / 2\n\n    # TODO: return area rounded\
    \ to 2 decimal points\n    return round(area, 2)\n", "    if (a + b > c) and (a\
    \ + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        return round(math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n\n\n@pytest.mark.skip",
  "    pass\n\n", "    pass\n\n", "    if a < b + c and b < a + c and c < a + b:\n\
    \        s = (a + b + c) / 2\n        a = (s * (s - a) * (s - b) * (s - c)) **\
    \ 0.5\n        return round(a, 2)\n    else:\n        return -1\n    \n    # return\
    \ -1 if not ((a + b > c) and (a + c > b) and (b + c > a)) else \\\n    #     round(((a\
    \ + b + c) / 2) * (1 - (a + b + c) / 2 + a) * (1 - (a + b + c) / 2 + b) * (1 -\
    \ (a + b + c) / 2 + c), 2)\n    \n", "    pass\n\n", "    # Write your code here\n\
    \    s = 0.5 * (a + b + c)\n    area = math.sqrt(s * (s - a) * (s - b) * (s -\
    \ c))\n    if (a + b <= c) or (a + c <= b) or (b + c <= a):\n        return -1\n\
    \    else:\n        return round(area, 2)\n\n", "    return -1 if (a + b < c)\
    \ or (a + c < b) or (b + c < a) else round(sqrt((a + b + c) * (a + b - c) * (a\
    \ - b + c) * (-a + b + c)) / 4, 2)\n", "    p = (a + b + c) / 2\n    if a + b\
    \ > c and a + c > b and b + c > a:\n        return round(math.sqrt(p * (p - a)\
    \ * (p - b) * (p - c)), 2)\n    else:\n        return -1", "    if (a + b > c)\
    \ and (a + c > b) and (b + c > a):\n        s = (a + b + c) / 2\n        area\
    \ = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return float(round(area,\
    \ 2))\n    else:\n        return -1\n\n", "    a, b, c = sorted([a, b, c])\n \
    \   if a + b <= c:\n        return -1\n    p = (a + b + c) / 2\n    return (p\
    \ * (p - a) * (p - b) * (p - c)) ** 0.5\n\n", "    # Get the perimeter of the\
    \ triangle\n    p = (a + b + c) / 2\n    # Get the area using Hero's formula\n\
    \    # If a, b, c can form a triangle, then the below condition should hold true\n\
    \    # and the sqrt() function should not return any error\n    # If the condition\
    \ fails, the sqrt() function should raise a ValueError\n    # and hence we return\
    \ -1 from the function\n    try:\n        area = (p * (p - a) * (p - b) * (p -\
    \ c)) ** 0.5\n    except ValueError:\n        return -1\n    else:\n        return\
    \ round(area, 2)\n\n", "    if is_triangle(a, b, c):\n        p = (a + b + c)\
    \ / 2\n        area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n        return\
    \ round(area, 2)\n    else:\n        return -1\n\n\n", "    # TODO: Implement\
    \ this function\n\n    pass\n\n", "    if a + b > c and a + c > b and b + c >\
    \ a:\n        p = (a + b + c) / 2\n        area = (p * (p - a) * (p - b) * (p\
    \ - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n",
  "    sorted_sides = sorted([a, b, c])\n    if sorted_sides[0] + sorted_sides[1]\
    \ > sorted_sides[2]:\n        return (sorted_sides[0] + sorted_sides[1] + sorted_sides[2])/2\n\
    \    else:\n        return -1\n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    ", "    pass\n\n", "    pass\n", "    if a + b > c and a + c\
    \ > b and b + c > a:\n        s = (a + b + c) / 2\n        return round(sqrt(s\
    \ * (s - a) * (s - b) * (s - c)), 2)\n    else:\n        return -1\n    ", " \
    \   # your code here\n    if a+b>c and a+c>b and b+c>a:\n        return round(((a+b+c)/2)*(((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c),2)**0.5\n\
    \    else:\n        return -1\n    pass\n\n", "    if (a + b) > c and (a + c)\
    \ > b and (b + c) > a:\n        p = (a + b + c) / 2\n        area = (p * (p -\
    \ a) * (p - b) * (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n \
    \       return -1\n", "    pass\n", "    if a + b > c and a + c > b and b + c\
    \ > a:\n        s = (a + b + c) / 2\n        return (s * (s - a) * (s - b) * (s\
    \ - c)) ** 0.5\n    else:\n        return -1\n\n", "    if not is_triangle(a,\
    \ b, c):\n        return -1\n\n    p = (a + b + c) / 2\n    return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n\n", "    if a+b>c and a+c>b and b+c>a:\n\
    \        p = (a+b+c)/2\n        area = (p*(p-a)*(p-b)*(p-c))**0.5\n        return\
    \ round(area,2)\n    else:\n        return -1\ntriangle_area(5,5,5)\n", "    if\
    \ a < b + c and b < a + c and c < a + b:\n        s = (a + b + c) / 2\n      \
    \  return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n  \
    \      return -1\n\n", "    if a + b > c and a + c > b and b + c > a:\n      \
    \  return round(0.5 * math.sqrt((a + b + c) * (a + b - c) * (a + c - b) * (b +\
    \ c - a)), 2)\n    else:\n        return -1\n\n", "    if a + b <= c or a + c\
    \ <= b or b + c <= a:\n        return -1\n    return round(sqrt((a + b + c) *\
    \ (a + b - c) * (a - b + c) * (-a + b + c)) / 4, 2)\n\n", "    ...\n\n", "   \
    \ if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n   \
    \     return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n    else:\n\
    \        return -1\n\n", "    if a + b > c and a + c > b and b + c > a:\n    \
    \    p = (a + b + c) / 2\n        area = (p * (p - a) * (p - b) * (p - c)) **\
    \ 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n", "   \
    \ s = (a + b + c) / 2\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n \
    \   if area > 0:\n        return round(area, 2)\n    else:\n        return -1\n\
    \n\n", "    # if a+b > c and a+c > b and b+c > a:\n    #     p = (a+b+c)/2\n \
    \   #     area = (p*(p-a)*(p-b)*(p-c))**0.5\n    #     return round(area, 2)\n\
    \    # else:\n    #     return -1\n    if not is_triangle(a, b, c):\n        return\
    \ -1\n    p = (a+b+c)/2\n    area = (p*(p-a)*(p-b)*(p-c))**0.5\n    return round(area,\
    \ 2)\n\n", "    if a + b > c and a + c > b and b + c > a:\n        s = (a + b\
    \ + c) / 2\n        return round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n\
    \    else:\n        return -1\n\n", "    if (a+b>c) and (a+c>b) and (b+c>a):\n\
    \        p = 0.5*(a+b+c)\n        area = (p*(p-a)*(p-b)*(p-c))**0.5\n        return\
    \ round(area, 2)\n    else:\n        return -1\n", "    if a + b <= c or a + c\
    \ <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return\
    \ round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n\n", "    if a <= 0 or\
    \ b <= 0 or c <= 0:\n        return -1\n    if a + b <= c or a + c <= b or b +\
    \ c <= a:\n        return -1\n    return round(math.sqrt((a + b + c) * (-a + b\
    \ + c) * (a - b + c) * (a + b - c)) / 4, 2)\n\n", "    p = (a + b + c) / 2\n \
    \   if (p - a) * (p - b) * (p - c) <= 0:\n        return -1\n    return sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    \n    ", "    # Task 1.2\n    pass\n\n",
  "    # YOUR CODE HERE\n    return -1\n\n", "    def valid_triangle(a, b, c):\n \
    \       \"\"\"\n        Return True if a, b, c form a valid triangle.\n      \
    \  Three sides make a valid triangle when the sum of any two sides is greater\
    \ \n        than the third side.\n        \"\"\"\n        return ((a + b) > c)\
    \ and ((a + c) > b) and ((b + c) > a)\n\n    if valid_triangle(a, b, c):\n   \
    \     #\n        # Implement Heron's formula for area of a triangle\n        #\
    \ where:\n        # s = (a + b + c) / 2\n        # area = sqrt(s(s - a)(s - b)(s\
    \ - c))\n        #\n        s = (a + b + c) / 2\n        area = (s * (s - a) *\
    \ (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n      \
    \  return -1\n", "    sides = [a, b, c]\n    sides.sort()\n    if (sides[0] +\
    \ sides[1]) > sides[2]:\n        s = sum(sides)/2\n        return round(sqrt(s*(s-sides[0])*(s-sides[1])*(s-sides[2])),\
    \ 2)\n    else:\n        return -1\n\n", "    s = (a + b + c) / 2\n    return\
    \ round(sqrt(s * (s - a) * (s - b) * (s - c)), 2) if a + b > c and b + c > a and\
    \ a + c > b else -1\n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n", "    # check if valid\n    if (a\
    \ + b) > c and (a + c) > b and (b + c) > a:\n        s = (a + b + c) / 2\n   \
    \     area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    return -1\n", "    # Your code here\n\
    \    pass\n", "    pass\n\n", "    if (a + b > c) and (a + c > b) and (b + c >\
    \ a):\n        p = (a + b + c) / 2\n        area = (p * (p - a) * (p - b) * (p\
    \ - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n",
  "    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n  \
    \      return (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    else:\n        return\
    \ -1\n\n\n", "    pass\n\n", "    if a + b <= c or a + c <= b or b + c <= a:\n\
    \        return -1\n    else:\n        p = (a + b + c) / 2\n        area = math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n        return round(area, 2)\n\n", "    # you\
    \ can check if 3 sides can make a triangle using\n    # the rule: the sum of any\
    \ two sides must be greater than the third side\n    if a + b > c and a + c >\
    \ b and b + c > a:\n        p = (a + b + c) / 2\n        return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n", "   \
    \ if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n   \
    \     A = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(A, 2)\n\
    \    else:\n        return -1\n\n", "    if (a + b > c) and (a + c > b) and (b\
    \ + c > a):\n        s = (a + b + c) / 2\n        area = sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n        return round(area, 2)\n    else:\n        return -1\n\
    \n", "    # ensure no side is greater than the sum of the other two\n    if a\
    \ > b + c or b > a + c or c > a + b:\n        return -1\n    # Heron's formula\
    \ to calculate area\n    s = (a + b + c) / 2\n    area = math.sqrt(s * (s - a)\
    \ * (s - b) * (s - c))\n    return round(area, 2)\n\n", "    # TODO: Please write\
    \ your code here\n\n", "    # Your code here:\n    \n    # If a, b and c are not\
    \ int, return -1\n    if type(a) != int or type(b) != int or type(c) != int:\n\
    \        return -1\n    \n    # If any of a, b and c is negative, return -1\n\
    \    if a < 0 or b < 0 or c < 0:\n        return -1\n    \n    # If the sum of\
    \ any two sides is smaller than the third side, return -1\n    if a + b < c or\
    \ a + c < b or b + c < a:\n        return -1\n    \n    # Otherwise, return the\
    \ area\n    perimeter = (a + b + c) / 2\n    area = math.sqrt(perimeter * (perimeter\
    \ - a) * (perimeter - b) * (perimeter - c))\n    return round(area, 2)\n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    ", "    s = (a + b + c) /\
    \ 2.0\n    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    if area <= 0:\n\
    \        return -1\n    return round(area, 2)\n\n", "    s = (a + b + c) / 2.0\n\
    \    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n    if area <= 0:\n    \
    \    return -1\n    return round(area, 2)\n\n", "    if a + b > c and a + c >\
    \ b and b + c > a:\n        area = (a + b + c) / 2\n        return (area * (area\
    \ - a) * (area - b) * (area - c)) ** 0.5\n    else:\n        return -1\n", '    pass',
  "    if a < b + c and b < a + c and c < a + b:\n        p = (a + b + c) / 2\n  \
    \      s = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(s, 2)\n\
    \    else:\n        return -1\n\n", "    if a + b > c and a + c > b and b + c\
    \ > a:\n        p = (a + b + c) / 2\n        s = (p * (p - a) * (p - b) * (p -\
    \ c)) ** 0.5\n        return float(\"{:.2f}\".format(s))\n    else:\n        return\
    \ -1\n\n", "    return -1\n", "    if a + b > c and a + c > b and b + c > a:\n\
    \        p = (a + b + c) / 2\n        area = (p * (p - a) * (p - b) * (p - c))\
    \ ** 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n", " \
    \   return -1\n    ", "    if a+b>c and a+c>b and b+c>a:\n        s = (a+b+c)/2\n\
    \        area = (s*(s-a)*(s-b)*(s-c))**0.5\n        return round(area,2)\n   \
    \ else:\n        return -1\n\n\n", "    # check if the three sides can form a\
    \ valid triangle\n    if is_valid_triangle(a, b, c):\n        # Heron's formula\
    \ for the area of a triangle\n        # Source: https://en.wikipedia.org/wiki/Heron%27s_formula\n\
    \        p = (a + b + c) / 2\n        area = math.sqrt(p * (p - a) * (p - b) *\
    \ (p - c))\n        return round(area, 2)\n    return -1\n\n", "    # TODO: Implement\
    \ this\n    x = [a, b, c]\n    x.sort()\n    if x[0] + x[1] > x[2]:\n        s\
    \ = (a + b + c) / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n\
    \        return round(area, 2)\n    else:\n        return -1\n", "    a, b, c\
    \ = sorted([a, b, c])\n    return -1 if a + b <= c else (a + b + c) / 2\n\n",
  "    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) / 2\n  \
    \      area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return float(\"\
    {0:.2f}\".format(area))\n    else:\n        return -1\n", "    # your code here\n\
    \    if a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n\
    \        area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n", "    #YOUR CODE HERE\n    s = (a + b +\
    \ c) / 2\n    area = (s*(s-a)*(s-b)*(s-c)) ** 0.5\n    if (a + b > c) and (a +\
    \ c > b) and (b + c > a):\n        return round(area, 2)\n    else:\n        return\
    \ -1\n", "    pass\n\n", "    pass\n\n", "    sides = [a, b, c]\n    sides.sort()\n\
    \    if sides[0] + sides[1] > sides[2]:\n        s = sum(sides) / 2\n        return\
    \ round(sqrt(s * (s - sides[0]) * (s - sides[1]) * (s - sides[2])), 2)\n    else:\n\
    \        return -1\n\n", "    pass\n\n", "    p = (a + b + c) / 2\n    if p >\
    \ a and p > b and p > c:\n        return round(sqrt(p * (p - a) * (p - b) * (p\
    \ - c)), 2)\n    else:\n        return -1\n\n", "    # Triangle inequality (https://en.wikipedia.org/wiki/Triangle_inequality):\n\
    \    # 'The sum of the lengths of any two sides of a triangle is greater than\
    \ or equal to \n    # the length of the third side'\n    # If a <= b + c, then\
    \ we can form a triangle with sides a, b, c.\n    # If a > b + c, then we cannot\
    \ form a triangle with sides a, b, c.\n    if (a <= b + c) and (b <= a + c) and\
    \ (c <= a + b):\n        # Compute the semi-perimeter of the triangle.\n     \
    \   s = (a + b + c) / 2\n        # Compute the area using Heron's formula.\n \
    \       area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    if a + b <= c or a + c <= b or b\
    \ + c <= a:\n        return -1\n    p = (a + b + c) / 2\n    return round(math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c)), 2)\n", "    # Write your code here\n    p =\
    \ (a + b + c) / 2\n    area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    if\
    \ area > 0:\n        return round(area, 2)\n    else:\n        return -1\n\n",
  "    if not(a+b>c and a+c>b and b+c>a):\n        return -1\n    p = (a+b+c)/2\n\
    \    area = (p*(p-a)*(p-b)*(p-c))**0.5\n    return round(area, 2)\n\n", "    #\
    \ YOUR CODE HERE\n    if (a+b) < c or (a+c) < b or (b+c) < a:\n        return\
    \ -1\n    s = (a+b+c)/2\n    area = (s*(s-a)*(s-b)*(s-c))**0.5\n    return round(area,\
    \ 2)\n\n", "    if (a + b > c) and (a + c > b) and (b + c > a):\n        # Using\
    \ Heron's formula to find area of triangle\n        s = (a + b + c) / 2\n    \
    \    area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return area\n  \
    \  else:\n        return -1\n\n", "    if a + b > c and a + c > b and b + c >\
    \ a:\n        s = (a + b + c) / 2\n        area = math.sqrt(s * (s - a) * (s -\
    \ b) * (s - c))\n        return round(area, 2)\n    else:\n        return -1\n\
    \n", "    s = (a + b + c) / 2\n    if s - a <= 0 or s - b <= 0 or s - c <= 0:\n\
    \        return -1\n    return round(sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n\
    \n", "    semi_perimeter = (a + b + c) / 2\n    if a + b <= c or a + c <= b or\
    \ b + c <= a:\n        return -1\n    else:\n        return (semi_perimeter *\
    \ (semi_perimeter - a) * (semi_perimeter - b) * (semi_perimeter - c)) ** 0.5\n\
    \n", "    # YOUR CODE HERE\n    side = [a, b, c]\n    side.sort()\n    if side[0]\
    \ + side[1] > side[2]:\n        s = (a + b + c) / 2\n        area = (s * (s -\
    \ a) * (s - b) * (s - c)) ** 0.5\n        return round(area, 2)\n    else:\n \
    \       return -1\n", "    # Calculate the semi-perimeter\n    s = (a + b + c)\
    \ / 2\n    # Calculate the area using Heron's formula\n    area = (s*(s-a)*(s-b)*(s-c))\
    \ ** 0.5\n    if area > 0:\n        return round(area, 2)\n    else:\n       \
    \ return -1\n", "    if (a+b > c) and (a+c > b) and (b+c > a):\n        return\
    \ round((((a+b+c)/2)*(((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c))**(1/2),\
    \ 2)\n    else:\n        return -1\n", "    if a + b > c and a + c > b and b +\
    \ c > a:\n        p = (a + b + c) / 2\n        return round(sqrt(p * (p - a) *\
    \ (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n", "    if not is_triangle(a,\
    \ b, c):\n        return -1\n    s = 0.5 * (a + b + c)\n    return (s * (s - a)\
    \ * (s - b) * (s - c)) ** 0.5\n", "    pass\n\n", "    p = (a + b + c) / 2\n \
    \   area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    if p - a <= 0 or p -\
    \ b <= 0 or p - c <= 0:\n        return -1\n    return round(area, 2)\n\n", " \
    \   if not a or not b or not c:\n        return -1\n    return round(sqrt(((a\
    \ + b + c) / 2) * (((a + b + c) / 2) - a) * (((a + b + c) / 2) - b) * (((a + b\
    \ + c) / 2) - c)), 2)\n\n", "    max_side = max(a, b, c)\n    min_side = min(a,\
    \ b, c)\n    mid_side = (a + b + c) - max_side - min_side\n    if min_side + mid_side\
    \ > max_side:\n        return round(0.5 * min_side * mid_side, 2)\n    else:\n\
    \        return -1\n", "    if a + b <= c or a + c <= b or b + c <= a:\n     \
    \   return -1\n    s = (a + b + c) / 2\n    area = (s * (s - a) * (s - b) * (s\
    \ - c)) ** 0.5\n    return round(area, 2)\n\n", "    assert a > 0, 'side a length\
    \ must be greater than 0'\n    assert b > 0, 'side b length must be greater than\
    \ 0'\n    assert c > 0, 'side c length must be greater than 0'\n    if a + b >\
    \ c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n        return\
    \ round(sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\
    \n", "    if a + b > c and a + c > b and b + c > a:\n        s = (a + b + c) /\
    \ 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    if (a + b > c) and (a + c > b) and\
    \ (b + c > a):\n        p = (a + b + c) / 2\n        area = sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n        return round(area, 2)\n    else:\n        return\
    \ -1\n", "    if a + b > c and a + c > b and b + c > a:\n        p = (a + b +\
    \ c) / 2\n        return round(math.sqrt(p * (p - a) * (p - b) * (p - c)), 2)\n\
    \    else:\n        return -1\n\n", "    pass\n\n", "    if not is_triangle(a,\
    \ b, c):\n        return -1\n    p = sum((a, b, c)) / 2\n    area = (p * (p -\
    \ a) * (p - b) * (p - c)) ** 0.5\n    return round(area, 2)\n\n", "    # Write\
    \ your code here\n\n", "    return round(math.sqrt(s(a, b, c) * (s(a, b, c) -\
    \ a) * (s(a, b, c) - b) * (s(a, b, c) - c)), 2) if s(a, b, c) > max(a, b, c) else\
    \ -1\n\n", "    #if a+b > c and a+c > b and b+c > a:\n    #    p = (a+b+c)/2\n\
    \    #    return (p*(p-a)*(p-b)*(p-c))**0.5\n    #else:\n    #    return -1\n\
    \    if (a+b > c and a+c > b and b+c > a):\n        area = ((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a))**0.5\
    \ / 4\n        return round(area, 2)\n    else:\n        return -1\n\n", "   \
    \ a, b, c = sorted([a, b, c])\n    if a + b > c:\n        s = 0.5 * (a + b + c)\n\
    \        area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n        return round(area,\
    \ 2)\n    else:\n        return -1\n\n", "    if (a < b + c) and (b < a + c) and\
    \ (c < a + b):\n        p = (a + b + c) / 2\n        return round(sqrt(p * (p\
    \ - a) * (p - b) * (p - c)), 2)\n    else:\n        return -1\n\n", "    pass\n\
    \n", "    if a <= 0 or b <= 0 or c <= 0:\n        return -1\n    if a + b <= c\
    \ or a + c <= b or b + c <= a:\n        return -1\n    p = (a + b + c) / 2\n \
    \   return sqrt(p * (p - a) * (p - b) * (p - c))\n\n", "    a, b, c = sorted([a,\
    \ b, c])\n    if a + b <= c:\n        return -1\n    p = (a + b + c) / 2\n   \
    \ return math.sqrt(p * (p - a) * (p - b) * (p - c))\n\n", "    if (a+b) > c and\
    \ (a+c) > b and (b+c) > a:\n        p = (a+b+c)/2\n        area = (p*(p-a)*(p-b)*(p-c))**0.5\n\
    \        return round(area, 2)\n    else:\n        return -1\ntriangle_area(1,\
    \ 2, 10)\n", "    pass\n    \n    ", "    pass\n \n ", "    sides = sorted([a,\
    \ b, c])\n    if sides[0] + sides[1] > sides[2]:\n        p = sum(sides) / 2\n\
    \        area = sqrt(p * (p - sides[0]) * (p - sides[1]) * (p - sides[2]))\n \
    \       return round(area, 2)\n    else:\n        return -1\n\n", "    p = (a\
    \ + b + c) / 2\n    a = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n    if a ==\
    \ 0:\n        return -1\n    return round(a, 2)\n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    ###########################################################################\n\
    \    ######################### END OF YOUR CODE ################################\n\
    \    ###########################################################################\n\
    \n\n", "    if not (a + b > c and a + c > b and b + c > a):\n        return -1\n\
    \    p = (a + b + c) / 2\n    return (p * (p - a) * (p - b) * (p - c)) ** 0.5\n\
    \n", "    # write your code here\n    if a + b > c and a + c > b and b + c > a:\n\
    \        p = (a + b + c) / 2\n        s = (p * (p - a) * (p - b) * (p - c)) **\
    \ 0.5\n        return round(s, 2)\n    else:\n        return -1\n\n", "    if\
    \ a + b > c and a + c > b and b + c > a:\n        p = (a + b + c) / 2\n      \
    \  area = (p * (p - a) * (p - b) * (p - c)) ** 0.5\n        return round(area,\
    \ 2)\n    else:\n        return -1\n", "    pass\n", "    s = (a + b + c) / 2\n\
    \    if s <= a or s <= b or s <= c:\n        return -1\n    else:\n        return\
    \ round(math.sqrt(s * (s - a) * (s - b) * (s - c)), 2)\n\n\n@click.command()\n\
    @click.option(\"--a\", default=1, help=\"Length of the first side of the triangle\"\
    )\n@click.option(\"--b\", default=1, help=\"Length of the second side of the triangle\"\
    )\n@click.option(\"--c\", default=1, help=\"Length of the third side of the triangle\"\
    )", "    pass\n\n", "    s = sum([a, b, c]) / 2\n    area = (s * (s - a) * (s\
    \ - b) * (s - c)) ** 0.5\n    return round(area, 2) if area > 0 else -1\n\n\n",
  "    pass\n\n", "    pass\n", "    if (a + b) > c and (a + c) > b and (b + c) >\
    \ a:\n        s = (a + b + c) / 2\n        area = (s * (s - a) * (s - b) * (s\
    \ - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return -1\n\n",
  "    # write your code here\n\n", "    if (a + b > c) and (a + c > b) and (b + c\
    \ > a):\n        p = (a + b + c) / 2\n        area = (p * (p - a) * (p - b) *\
    \ (p - c)) ** 0.5\n        return round(area, 2)\n    else:\n        return -1\n\
    \        \n", "    if a + b > c and a + c > b and b + c > a:\n        s = (a +\
    \ b + c) / 2\n        area = (s * (s - a) * (s - b) * (s - c)) ** 0.5\n      \
    \  return round(area, 2)\n    else:\n        return -1\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

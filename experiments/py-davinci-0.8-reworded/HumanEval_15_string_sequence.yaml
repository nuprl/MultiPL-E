name: HumanEval_15_string_sequence
language: py
prompt: "def string_sequence(n: int) -> str:\n    \"\"\" Return a string containing\
  \ space-delimited numbers starting from 0 upto n inclusive.\n    >>> string_sequence(0)\n\
  \    '0'\n    >>> string_sequence(5)\n    '0 1 2 3 4 5'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(0) == '0'\n    assert candidate(3)\
  \ == '0 1 2 3'\n    assert candidate(10) == '0 1 2 3 4 5 6 7 8 9 10'\n\ndef test_check():\n\
  \    check(string_sequence)\n\ntest_check()\n"
completions: ["    return ' '.join(str(i) for i in range(n + 1))\n\n", "    # assign\
    \ first part of string\n    s = str(0)\n    # loop through 1 to n and add string\
    \ to s\n    for i in range(1, n + 1):\n        s += ' ' + str(i)\n    return s\n\
    \n", "    string_result = ''\n    for i in range(n + 1):\n        string_result\
    \ += str(i) + ' '\n    return string_result.strip()\n\n", "    if n == 0:\n  \
    \      return '0'\n    else:\n        return string_sequence(n - 1) + ' ' + str(n)\n\
    \n", "    if n == 0:\n        return '0'\n    else:\n        return string_sequence(n\
    \ - 1) + ' ' + str(n)\n\n", "    i = 0\n    string = \"\"\n    while i <= n:\n\
    \        string += str(i) + \" \"\n        i += 1\n    return string[:-1]\n\n",
  "    return \" \".join(str(i) for i in range(n + 1))\n\n", "    return ' '.join(str(i)\
    \ for i in range(n + 1))\n\n", "    #Assume n is positive\n    return ' '.join(str(i)\
    \ for i in range(n+1))\n", "    numbers = []\n    for i in range(n + 1):\n   \
    \     numbers.append(str(i))\n    return ' '.join(numbers)\n\n", "    return \"\
    \ \".join(str(num) for num in range(n + 1))\n\nprint(string_sequence(5))", " \
    \   if n == 0:\n        return \"0\"\n    else:\n        return string_sequence(n\
    \ - 1) + \" \" + str(n)\n", "    numbers = []\n    for num in range(n + 1):\n\
    \        numbers.append(str(num))\n    return ' '.join(numbers)\n\n", "    return\
    \ \" \".join(str(i) for i in range(n + 1))\n\n", "    return ' '.join(str(i) for\
    \ i in range(n + 1))\n\n", "    return ' '.join(str(i) for i in range(n + 1))\n\
    \n", "    i = 0\n    string = \"\"\n    while i <= n:\n        string += str(i)\
    \ + \" \"\n        i += 1\n    return string[:-1]\n\n", "    return \" \".join(str(i)\
    \ for i in range(n + 1))\n", "    if n < 0:\n        n = abs(n)\n    return '\
    \ '.join(map(str, range(n + 1)))\n\n", "    return ' '.join(map(str, range(n +\
    \ 1)))\n\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

name: HumanEval_27_flip_case
language: py
prompt: "def flip_case(string: str) -> str:\n    \"\"\" For a given string, flip lowercase\
  \ characters to uppercase and uppercase to lowercase.\n    >>> flip_case('Hello')\n\
  \    'hELLO'\n    \"\"\"\n"
tests: "def check(candidate):\n    assert candidate('') == ''\n    assert candidate('Hello!')\
  \ == 'hELLO!'\n    assert candidate('These violent delights have violent ends')\
  \ == 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS'\n\ndef test_check():\n    check(flip_case)\n\
  \ntest_check()\n"
completions: ["    new_string = \"\"\n    for character in string:\n        if character.isupper():\n\
    \            new_string += character.lower()\n        else:\n            new_string\
    \ += character.upper()\n    return new_string\n\n", "    new_str = \"\"\n    for\
    \ char in string:\n        if char.isupper():\n            new_str += char.lower()\n\
    \        else:\n            new_str += char.upper()\n    return new_str\n\n",
  "    return string.swapcase()\n", "    return string.swapcase()\n\n", "    return\
    \ string.swapcase()\n\n", "    return \"\".join([x.lower() if x.isupper() else\
    \ x.upper() for x in string])\n", "    flipped_case = ''\n    for char in string:\n\
    \        if char.isupper():\n            flipped_case += char.lower()\n      \
    \  else:\n            flipped_case += char.upper()\n    return flipped_case\n\n",
  "    return string.swapcase()\n\n", "    new_string = ''\n    for char in string:\n\
    \        if char.isupper():\n            new_string += char.lower()\n        else:\n\
    \            new_string += char.upper()\n    return new_string\n\n", "    return\
    \ string.swapcase()\n\n", "    return ''.join(map(lambda x: x.upper() if x.islower()\
    \ else x.lower(), string))\n", "    return string.swapcase()\n\n", "    # ERROR:\
    \ You need to complete this function.\n    # If you want to test it, you can use\
    \ the examples from the docstring.\n    # Remember that these are not the only\
    \ tests, there are more.\n\n    # TODO: Complete this function.\n\n    # 1. Use\
    \ list comprehension and if-else statement to solve this problem.\n    # 2. Use\
    \ string methods to flip characters.\n    # 3. Use None instead of the if and\
    \ else block.\n    # 4. Use the 'isupper' and 'islower' string methods to determine\
    \ if the character is an uppercase or lowercase.\n    # 5. Use the 'lower' and\
    \ 'upper' string methods to flip the character.\n    # 6. Verify if the function\
    \ works by running the doctests.\n    # 7. Submit a pull request.\n\n    # YOUR\
    \ CODE HERE\n    return ''.join([char.upper() if char.islower() else char.lower()\
    \ for char in string])\n\n", "    return string.swapcase()\n\n", "    flipped_string\
    \ = \"\"\n    for char in string:\n        if char.isupper():\n            flipped_string\
    \ += char.lower()\n        else:\n            flipped_string += char.upper()\n\
    \    return flipped_string\n\n", "    pass\n\n", "    return string.swapcase()\n\
    \n", "    new_str = ''\n    for c in string:\n        if c.isupper():\n      \
    \      new_str += c.lower()\n        else:\n            new_str += c.upper()\n\
    \    return new_str\n\n", "    return ''.join(c.upper() if c.islower() else c.lower()\
    \ for c in string)\n\n", "    return string.swapcase()\n"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

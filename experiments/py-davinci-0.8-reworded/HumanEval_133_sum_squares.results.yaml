language: py
name: HumanEval_133_sum_squares
results:
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return 0\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw4s1vod9.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpw4s1vod9.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpw4s1vod9.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_squares = 0\n    for item in lst:\n      \
    \  rounded_num = math.ceil(item)\n        sum_squares += rounded_num ** 2\n  \
    \  return sum_squares\n        \ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx7gjdnji.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpx7gjdnji.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpx7gjdnji.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpx7gjdnji.py\"\
    , line 23, in sum_squares\n    rounded_num = math.ceil(item)\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpemrqsdqe.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpemrqsdqe.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpemrqsdqe.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([round(x)**2 for x in lst])\n\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpycmf_gx6.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpycmf_gx6.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpycmf_gx6.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x**2) for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpto_pdcdb.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpto_pdcdb.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpto_pdcdb.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return int(math.ceil(sum([(x ** 2) for x in lst])))\n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjbzdeq6f.py\", line\
    \ 283, in <module>\n    test_check()\n  File \"/tmp/tmpjbzdeq6f.py\", line 281,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpjbzdeq6f.py\", line\
    \ 267, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpjbzdeq6f.py\"\
    , line 21, in sum_squares\n    return int(math.ceil(sum([(x ** 2) for x in lst])))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(x*x) for x in lst])\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwdv7pevg.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpwdv7pevg.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwdv7pevg.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwdv7pevg.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(x*x) for x in lst])\n  File\
    \ \"/tmp/tmpwdv7pevg.py\", line 21, in <listcomp>\n    return sum([math.ceil(x*x)\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    ceil = map(math.ceil, lst)\n    sq = map(lambda\
    \ x: x**2, ceil)\n    return sum(sq)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9z7gyf0a.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp9z7gyf0a.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9z7gyf0a.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp9z7gyf0a.py\"\
    , line 21, in sum_squares\n    ceil = map(math.ceil, lst)\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n    \n \
    \  \n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ypot8v7.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp5ypot8v7.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp5ypot8v7.py\", line\
    \ 30, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([i**2 for i in [math.ceil(x) for x\
    \ in lst]])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprilj6r8d.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmprilj6r8d.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmprilj6r8d.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmprilj6r8d.py\"\
    , line 21, in sum_squares\n    return sum([i**2 for i in [math.ceil(x) for x in\
    \ lst]])\n  File \"/tmp/tmprilj6r8d.py\", line 21, in <listcomp>\n    return sum([i**2\
    \ for i in [math.ceil(x) for x in lst]])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total = 0\n    for x in lst:\n        total +=\
    \ math.ceil(x)**2\n    return total\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp2pppw48.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpp2pppw48.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpp2pppw48.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpp2pppw48.py\"\
    , line 23, in sum_squares\n    total += math.ceil(x)**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # return sum(int(i**2) for i in lst)\n    return\
    \ sum([int(i**2) for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphyw0samr.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmphyw0samr.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphyw0samr.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpra24hfay.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpra24hfay.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpra24hfay.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpra24hfay.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpra24hfay.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for each in lst:\n        sum +=\
    \ math.ceil(each) ** 2\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpx8uy_5n9.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpx8uy_5n9.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpx8uy_5n9.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpx8uy_5n9.py\"\
    , line 23, in sum_squares\n    sum += math.ceil(each) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzqxfmtft.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpzqxfmtft.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpzqxfmtft.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([round(i)**2 for i in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp75cjo_2q.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp75cjo_2q.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp75cjo_2q.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpgid8pwu2.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    lst = [int(math.ceil(i))\
    \ for i in lst]\n    return sum([i**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1xe17s7e.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp1xe17s7e.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1xe17s7e.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1xe17s7e.py\"\
    , line 22, in sum_squares\n    lst = [int(math.ceil(i)) for i in lst]\n  File\
    \ \"/tmp/tmp1xe17s7e.py\", line 22, in <listcomp>\n    lst = [int(math.ceil(i))\
    \ for i in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # TODO: implement sum_squares\n    # raise NotImplementedError\n\
    \    x = []\n    for i in lst:\n        x.append(math.ceil(i))\n    sum = 0\n\
    \    for i in x:\n        sum += i*i\n    return sum\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm9xi5a4o.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpm9xi5a4o.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpm9xi5a4o.py\", line\
    \ 32, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpm9xi5a4o.py\"\
    , line 25, in sum_squares\n    x.append(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    import math\n    for i in\
    \ range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n    total = 0\n    for\
    \ i in lst:\n        total += i**2\n    return total\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(num ** 2) for num in lst])\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpr0i1zgm9.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpr0i1zgm9.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpr0i1zgm9.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Test 1\n    assert sum_squares([1.0, 2.0, 3.0])\
    \ == 14\n    # Test 2\n    assert sum_squares([1.0, 4.0, 9.0]) == 98\n    # Test\
    \ 3\n    assert sum_squares([1.0, 3.0, 5.0, 7.0]) == 84\n    # Test 4\n    assert\
    \ sum_squares([1.4, 4.2, 0.0]) == 29\n    # Test 5\n    assert sum_squares([-2.4,\
    \ 1.0, 1.0]) == 6\n    \n    #print(lst)\n    lst_squared = []\n    for n in lst:\n\
    \        #print(n)\n        lst_squared.append(math.ceil(n)**2)\n    #print(lst_squared)\n\
    \    return sum(lst_squared)\n\nsum_squares([1.0, 2.0, 3.0])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5fmbkx2n.py\", line\
    \ 40, in <module>\n    sum_squares([1.0, 2.0, 3.0])\n  File \"/tmp/tmp5fmbkx2n.py\"\
    , line 22, in sum_squares\n    assert sum_squares([1.0, 2.0, 3.0]) == 14\n  File\
    \ \"/tmp/tmp5fmbkx2n.py\", line 22, in sum_squares\n    assert sum_squares([1.0,\
    \ 2.0, 3.0]) == 14\n  File \"/tmp/tmp5fmbkx2n.py\", line 22, in sum_squares\n\
    \    assert sum_squares([1.0, 2.0, 3.0]) == 14\n  [Previous line repeated 996\
    \ more times]\nRecursionError: maximum recursion depth exceeded\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(x ** 2) for x in lst])\n\
    \nassert sum_squares([1.0, 2.0, 3.0]) == 14\nassert sum_squares([1.0, 4.0, 9.0])\
    \ == 98\nassert sum_squares([1.0, 3.0, 5.0, 7.0]) == 84\nassert sum_squares([1.4,\
    \ 4.2, 0.0]) == 29\nassert sum_squares([-2.4, 1.0, 1.0]) == 6\nprint(\"Successfully\
    \ completed!\")\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpir00tr61.py\", line\
    \ 23, in <module>\n    assert sum_squares([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpir00tr61.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(x ** 2) for x in lst])\n\
    \  File \"/tmp/tmpir00tr61.py\", line 21, in <listcomp>\n    return sum([math.ceil(x\
    \ ** 2) for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    new_lst = list(map(lambda x: math.ceil(x)**2,\
    \ lst))\n    sum = 0\n    for i in new_lst:\n        sum += i\n    return sum\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3gnht2oa.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp3gnht2oa.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3gnht2oa.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3gnht2oa.py\"\
    , line 21, in sum_squares\n    new_lst = list(map(lambda x: math.ceil(x)**2, lst))\n\
    \  File \"/tmp/tmp3gnht2oa.py\", line 21, in <lambda>\n    new_lst = list(map(lambda\
    \ x: math.ceil(x)**2, lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([round(i ** 2) for i in lst])\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk35xm6nq.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpk35xm6nq.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpk35xm6nq.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(i**2) for i in lst])\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplih5y5jk.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmplih5y5jk.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplih5y5jk.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmplih5y5jk.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(i**2) for i in lst])\n  File\
    \ \"/tmp/tmplih5y5jk.py\", line 21, in <listcomp>\n    return sum([math.ceil(i**2)\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # TODO: Write function here\n    lst = [round(num)\
    \ for num in lst]\n    lst = [i ** 2 for i in lst]\n    return sum(lst)\n\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpodpu0iak.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpodpu0iak.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpodpu0iak.py\", line\
    \ 31, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([ceil(x)**2 for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpvf85afdw.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpvf85afdw.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpvf85afdw.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpvf85afdw.py\"\
    , line 21, in sum_squares\n    return sum([ceil(x)**2 for x in lst])\n  File \"\
    /tmp/tmpvf85afdw.py\", line 21, in <listcomp>\n    return sum([ceil(x)**2 for\
    \ x in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    newlist = []\n    sum = 0\n    #for i in lst:\n\
    \    newlist = [ceil(i) for i in lst]\n    for x in newlist:\n        sum += x**2\n\
    \    return sum\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdhqx0t41.py\", line\
    \ 273, in <module>\n    test_check()\n  File \"/tmp/tmpdhqx0t41.py\", line 271,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdhqx0t41.py\", line\
    \ 257, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdhqx0t41.py\"\
    , line 24, in sum_squares\n    newlist = [ceil(i) for i in lst]\n  File \"/tmp/tmpdhqx0t41.py\"\
    , line 24, in <listcomp>\n    newlist = [ceil(i) for i in lst]\nNameError: name\
    \ 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(n) ** 2 for n in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpehy795gv.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpehy795gv.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpehy795gv.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpehy795gv.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(n) ** 2 for n in lst])\n\
    \  File \"/tmp/tmpehy795gv.py\", line 21, in <listcomp>\n    return sum([math.ceil(n)\
    \ ** 2 for n in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Your code here\n    lst = [int(math.ceil(i))\
    \ for i in lst]\n    return sum([i**2 for i in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkayvrhvi.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpkayvrhvi.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkayvrhvi.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkayvrhvi.py\"\
    , line 22, in sum_squares\n    lst = [int(math.ceil(i)) for i in lst]\n  File\
    \ \"/tmp/tmpkayvrhvi.py\", line 22, in <listcomp>\n    lst = [int(math.ceil(i))\
    \ for i in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfvy39yfq.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpfvy39yfq.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpfvy39yfq.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpfvy39yfq.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x))**2 for x in lst])\n\
    \  File \"/tmp/tmpfvy39yfq.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))**2\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        sum += int(ceil(num\
    \ ** 2))\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ivci1j9.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp5ivci1j9.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp5ivci1j9.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp5ivci1j9.py\"\
    , line 23, in sum_squares\n    sum += int(ceil(num ** 2))\nNameError: name 'ceil'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_g8u5gbh.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    sum_lst = []\n    for l in lst:\n\
    \        sum_lst.append(math.ceil(l))\n    #print(sum_lst)\n    sum_lst = [i**2\
    \ for i in sum_lst]\n    #print(sum_lst)\n    retu\ndef check(candidate):\n  \
    \  assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp99gtgz01.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp99gtgz01.py\", line 44,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp99gtgz01.py\", line\
    \ 30, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp99gtgz01.py\"\
    , line 28, in sum_squares\n    retu\nNameError: name 'retu' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # YOUR CODE HERE\n    total = 0\n    for i in\
    \ lst:\n        i = int(i)\n        total += i*i\n    return total\n    raise\
    \ NotImplementedError()\n    \n    \n    \n    \ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfv82jjnw.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmpfv82jjnw.py\", line 47,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpfv82jjnw.py\", line\
    \ 36, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst_1 = list(map(math.ceil, lst))\n    lst_2 =\
    \ list(map(lambda x:x**2, lst_1))\n    return sum(lst_2)\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph_2eknne.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmph_2eknne.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmph_2eknne.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmph_2eknne.py\"\
    , line 21, in sum_squares\n    lst_1 = list(map(math.ceil, lst))\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [math.ceil(n) for n in lst]\n    return\
    \ sum([i ** 2 for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyrh8k1_7.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpyrh8k1_7.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyrh8k1_7.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpyrh8k1_7.py\"\
    , line 21, in sum_squares\n    lst = [math.ceil(n) for n in lst]\n  File \"/tmp/tmpyrh8k1_7.py\"\
    , line 21, in <listcomp>\n    lst = [math.ceil(n) for n in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    a = []\n    for i in lst:\n \
    \       a.append(i)\n    for i in range(len(a)):\n        a[i] = math.ceil(a[i])\n\
    \    sum = 0\n    for i in a:\n        sum += i ** 2\n    return sum\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    lst = [math.ceil(x) for x in\
    \ lst]\n    return sum([x**2 for x in lst])\nlst([1.0, 2.0, 3.0])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4kudhdoj.py\", line\
    \ 24, in <module>\n    lst([1.0, 2.0, 3.0])\nNameError: name 'lst' is not defined.\
    \ Did you mean: 'List'?\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([n**2 for n in [int(n) for n in lst]])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp6snf4zw.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpp6snf4zw.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpp6snf4zw.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpemrqsdqe.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpemrqsdqe.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpemrqsdqe.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(x)) ** 2 for x in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuabtmik9.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpuabtmik9.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpuabtmik9.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpuabtmik9.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x)) ** 2 for x in lst])\n\
    \  File \"/tmp/tmpuabtmik9.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))\
    \ ** 2 for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpgid8pwu2.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n\
    \    return sum([x**2 for x in lst])\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6580x4br.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp6580x4br.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp6580x4br.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp6580x4br.py\"\
    , line 22, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total = 0\n    for i in lst:\n        if i >=\
    \ 0:\n            total += int(i+1) ** 2\n        else:\n            total +=\
    \ int(i) ** 2\n    return total\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpo8trxsin.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpo8trxsin.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpo8trxsin.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    rst: List[int] = []\n    for i in lst:\n     \
    \   num = math.ceil(i)\n        rst.append(int(num))\n    return sum(i**2 for\
    \ i in rst)\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd8_epzm_.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpd8_epzm_.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpd8_epzm_.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpd8_epzm_.py\"\
    , line 23, in sum_squares\n    num = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    for num in lst:\n    \
    \    sum_of_squares += math.ceil(num) ** 2\n    return sum_of_squares\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4dhgx0iv.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp4dhgx0iv.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4dhgx0iv.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp4dhgx0iv.py\"\
    , line 23, in sum_squares\n    sum_of_squares += math.ceil(num) ** 2\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        num = math.ceil(num)\n\
    \        sum += num ** 2\n    return sum\n\nprint(sum_squares([1.0, 2.0, 3.0]))\n\
    print(sum_squares([1.0, 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\n\
    print(sum_squares([1.4, 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9qnqm4mr.py\", line\
    \ 27, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmp9qnqm4mr.py\"\
    , line 23, in sum_squares\n    num = math.ceil(num)\nNameError: name 'math' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(x ** 2) for x in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnc_u94ri.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnc_u94ri.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnc_u94ri.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpnc_u94ri.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(x ** 2) for x in lst])\n\
    \  File \"/tmp/tmpnc_u94ri.py\", line 21, in <listcomp>\n    return sum([math.ceil(x\
    \ ** 2) for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total_sum = 0\n    num = map(lambda x: math.ceil(x),\
    \ lst)\n    squared_num = map(lambda x: math.pow(x, 2), num)\n    total_sum =\
    \ sum(squared_num)\n    return total_sum\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3bhlyc43.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp3bhlyc43.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3bhlyc43.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3bhlyc43.py\"\
    , line 24, in sum_squares\n    total_sum = sum(squared_num)\n  File \"/tmp/tmp3bhlyc43.py\"\
    , line 22, in <lambda>\n    num = map(lambda x: math.ceil(x), lst)\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([x ** 2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqq72uzc5.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpqq72uzc5.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpqq72uzc5.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += int(math.ceil(i))**2\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8htjhlz1.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp8htjhlz1.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp8htjhlz1.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp8htjhlz1.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(i))**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # return sum([(math.ceil(i)) ** 2 for i in lst])\n\
    \    return sum([math.ceil(i) ** 2 for i in lst])\n\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp78x5zzdp.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp78x5zzdp.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp78x5zzdp.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp78x5zzdp.py\"\
    , line 22, in sum_squares\n    return sum([math.ceil(i) ** 2 for i in lst])\n\
    \  File \"/tmp/tmp78x5zzdp.py\", line 22, in <listcomp>\n    return sum([math.ceil(i)\
    \ ** 2 for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    new_list = []\n    for i in lst:\n\
    \        new_list.append(math.ceil(i))\n    ans = 0\n    for i in new_list:\n\
    \        ans += i**2\n    return ans\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # sum = 0\n    # for i in lst:\n    #     sum\
    \ += math.ceil(i) ** 2\n    # return sum\n    return sum([math.ceil(i) ** 2 for\
    \ i in lst])\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbhejkc0p.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpbhejkc0p.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpbhejkc0p.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpbhejkc0p.py\"\
    , line 25, in sum_squares\n    return sum([math.ceil(i) ** 2 for i in lst])\n\
    \  File \"/tmp/tmpbhejkc0p.py\", line 25, in <listcomp>\n    return sum([math.ceil(i)\
    \ ** 2 for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x) ** 2 for x in lst])\n\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpza3a4eo2.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpza3a4eo2.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpza3a4eo2.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # YOUR CODE HERE\n    return sum([(int(i)+1)**2\
    \ for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu_gmkjau.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpu_gmkjau.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpu_gmkjau.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for number in lst:\n        sum +=\
    \ (math.ceil(number)**2)\n    return sum\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqb9o_kvo.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpqb9o_kvo.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpqb9o_kvo.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpqb9o_kvo.py\"\
    , line 23, in sum_squares\n    sum += (math.ceil(number)**2)\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([element ** 2 for element in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsv7g8hxt.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpsv7g8hxt.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpsv7g8hxt.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return int(sum([math.ceil(x ** 2) for x in lst]))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn5pwavmh.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpn5pwavmh.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpn5pwavmh.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpn5pwavmh.py\"\
    , line 21, in sum_squares\n    return int(sum([math.ceil(x ** 2) for x in lst]))\n\
    \  File \"/tmp/tmpn5pwavmh.py\", line 21, in <listcomp>\n    return int(sum([math.ceil(x\
    \ ** 2) for x in lst]))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    assert type(lst) == list\n    assert all(type(x)\
    \ == float for x in lst)\n    lst = [math.ceil(i) for i in lst]\n    return sum(i\
    \ ** 2 for i in lst)\n\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwbyj1k3g.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpwbyj1k3g.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwbyj1k3g.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwbyj1k3g.py\"\
    , line 23, in sum_squares\n    lst = [math.ceil(i) for i in lst]\n  File \"/tmp/tmpwbyj1k3g.py\"\
    , line 23, in <listcomp>\n    lst = [math.ceil(i) for i in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n\
    \    # print(lst)\n    return sum([x ** 2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp32kkr01i.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp32kkr01i.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp32kkr01i.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp32kkr01i.py\"\
    , line 22, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(i))**2 for i in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwzrapeo5.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpwzrapeo5.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwzrapeo5.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwzrapeo5.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(i))**2 for i in lst])\n\
    \  File \"/tmp/tmpwzrapeo5.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(i))**2\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(e)**2 for e in lst])\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdal8g5rv.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpdal8g5rv.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdal8g5rv.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdal8g5rv.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(e)**2 for e in lst])\n  File\
    \ \"/tmp/tmpdal8g5rv.py\", line 21, in <listcomp>\n    return sum([math.ceil(e)**2\
    \ for e in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    rounded_list = [math.ceil(x) for x in lst]\n \
    \   squared_list = [x**2 for x in rounded_list]\n    sum_squared_list = sum(squared_list)\n\
    \    return sum_squared_list\n    \n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ot_3e1w.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmp7ot_3e1w.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7ot_3e1w.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp7ot_3e1w.py\"\
    , line 21, in sum_squares\n    rounded_list = [math.ceil(x) for x in lst]\n  File\
    \ \"/tmp/tmp7ot_3e1w.py\", line 21, in <listcomp>\n    rounded_list = [math.ceil(x)\
    \ for x in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i) ** 2 for i in lst])\n    \n\
    \    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  \
    \  assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0,\
    \ 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuf0p079_.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpuf0p079_.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpuf0p079_.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # get the square of each item and then add them\
    \ up\n    sqr_list = [math.ceil(x) ** 2 for x in lst]\n    return sum(sqr_list)\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpefhdikg2.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpefhdikg2.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpefhdikg2.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpefhdikg2.py\"\
    , line 22, in sum_squares\n    sqr_list = [math.ceil(x) ** 2 for x in lst]\n \
    \ File \"/tmp/tmpefhdikg2.py\", line 22, in <listcomp>\n    sqr_list = [math.ceil(x)\
    \ ** 2 for x in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # For example:\n    #     L = [1.0, 2.0, 3.0]\n\
    \    #     x = math.ceil(L[0]) # 2\n    #     y = math.ceil(L[1]) # 3\n    # \
    \    z = math.ceil(L[2]) # 4\n    #     return 2 ** 2 + 3 ** 2 + 4 ** 2 = 29\n\
    \    #s = 0\n    #for x in lst:\n    #    s += math.ceil(x) ** 2\n    #return\
    \ s\n    return sum(math.ceil(x) ** 2 for x in lst)\n    # TODO: Implement me!\n\
    \    # pass # Remove this line and implement me!\n    \n    \n    \n    \n   \
    \ \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1mt4thmq.py\", line\
    \ 222, in <module>\n    test_check()\n  File \"/tmp/tmp1mt4thmq.py\", line 220,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1mt4thmq.py\", line\
    \ 206, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1mt4thmq.py\"\
    , line 31, in sum_squares\n    return sum(math.ceil(x) ** 2 for x in lst)\n  File\
    \ \"/tmp/tmp1mt4thmq.py\", line 31, in <genexpr>\n    return sum(math.ceil(x)\
    \ ** 2 for x in lst)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total = 0\n    for i in lst:\n        i = ceil(i)\n\
    \        if i < 0:\n            i = -i\n        total += i ** 2\n    return total\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxcpq4l0f.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpxcpq4l0f.py\", line 44,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxcpq4l0f.py\", line\
    \ 30, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpxcpq4l0f.py\"\
    , line 23, in sum_squares\n    i = ceil(i)\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    list2=[]\n    for item in lst:\n        item=math.ceil(item)\n\
    \        list2.append(item)\n    return sum(map(lambda x: x**2, list2))\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpm6dvl_od.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpm6dvl_od.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpm6dvl_od.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpm6dvl_od.py\"\
    , line 23, in sum_squares\n    item=math.ceil(item)\nNameError: name 'math' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([round(x)**2 for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkovz8p2o.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpkovz8p2o.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkovz8p2o.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    upper = []\n    for element in\
    \ lst:\n        upper.append(math.ceil(element))\n    squares = [i**2 for i in\
    \ upper]\n    return sum(squares)\n    #raise NotImplementedError()\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    #your code\n\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4znr90c6.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp4znr90c6.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4znr90c6.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    return sum([math.ceil(x**2) for\
    \ x in lst])\n    pass\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzyt1tiun.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpzyt1tiun.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpzyt1tiun.py\", line\
    \ 30, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        if lst[i] >\
    \ 0:\n            lst[i] = math.ceil(lst[i])\n        elif lst[i] == 0:\n    \
    \        lst[i] = 0\n        else:\n            lst[i] = math.floor(lst[i])\n\
    \            \n    lst = [x ** 2 for x in lst]\n    \n    return sum(lst)\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplt5d8en1.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmplt5d8en1.py\", line 47,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplt5d8en1.py\", line\
    \ 33, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmplt5d8en1.py\"\
    , line 23, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    count =0\n    for i in lst:\n        i = math.ceil(i)\n\
    \        x = i**2\n        count += x\n    return count\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjy7dxalc.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpjy7dxalc.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpjy7dxalc.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpjy7dxalc.py\"\
    , line 23, in sum_squares\n    i = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_sq = 0\n    for n in lst:\n        sum_sq\
    \ += math.ceil(n) ** 2\n    return sum_sq\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpz5yxx1k3.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpz5yxx1k3.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpz5yxx1k3.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpz5yxx1k3.py\"\
    , line 23, in sum_squares\n    sum_sq += math.ceil(n) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total = 0\n    for i in lst:\n        total +=\
    \ math.ceil(i)**2\n    return total\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp1vghypl.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpp1vghypl.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpp1vghypl.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpp1vghypl.py\"\
    , line 23, in sum_squares\n    total += math.ceil(i)**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_g8u5gbh.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Your code below\n    return sum([int(x**2) for\
    \ x in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpllt8nkky.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpllt8nkky.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpllt8nkky.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_squares = 0\n\n    # Your code here\n    return\
    \ sum_squares\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpejpuowyo.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpejpuowyo.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpejpuowyo.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    #The idea of this algorithm\
    \ is to go through each element of the list. For each element, we first round\
    \ it to the upper integer. After that, we square the value, and add it to the\
    \ sum.\n    for number in lst:\n        number = math.ceil(number)\n        square\
    \ = math.pow(number, 2)\n        sum_of_squares += square\n    return sum_of_squares\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeyrm1io4.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpeyrm1io4.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpeyrm1io4.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpeyrm1io4.py\"\
    , line 24, in sum_squares\n    number = math.ceil(number)\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(round(item))**2 for item in lst])\n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplao6f7v5.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmplao6f7v5.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplao6f7v5.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n\
    \    sum = 0\n    for i in range(len(lst)):\n        sum += (lst[i] ** 2)\n  \
    \  return sum\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkhow0427.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpkhow0427.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkhow0427.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkhow0427.py\"\
    , line 22, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    squared_list = []\n    sum = 0\n    for i in lst:\n\
    \        squared_list.append(math.ceil(i))\n    for a in squared_list:\n     \
    \   sum += a**2\n    return sum\n    pass\n\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplmr50hg4.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmplmr50hg4.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplmr50hg4.py\", line\
    \ 32, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmplmr50hg4.py\"\
    , line 24, in sum_squares\n    squared_list.append(math.ceil(i))\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return \n    pass\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsu3f_3gg.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpsu3f_3gg.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpsu3f_3gg.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x**2) for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1ekc6i87.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp1ekc6i87.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1ekc6i87.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Your code goes here\n    sum1 = 0\n    for n\
    \ in lst:\n        sum1 += math.ceil(n) ** 2\n    return sum1\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpeglgqtsw.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpeglgqtsw.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpeglgqtsw.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpeglgqtsw.py\"\
    , line 24, in sum_squares\n    sum1 += math.ceil(n) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    total = 0\n    for n in lst:\n        total +=\
    \ math.ceil(n) ** 2\n    return total\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp014yaol4.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp014yaol4.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp014yaol4.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp014yaol4.py\"\
    , line 23, in sum_squares\n    total += math.ceil(n) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n\
    \    return sum([i**2 for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5sqxd0fv.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmp5sqxd0fv.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp5sqxd0fv.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp5sqxd0fv.py\"\
    , line 22, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    new_lst = []\n    for i in lst:\n        new_lst.append(math.ceil(i))\n\
    \    new_lst = [i**2 for i in new_lst]\n    return sum(new_lst)\n   \n\n\n\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpha5t6njd.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmpha5t6njd.py\", line 45,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpha5t6njd.py\", line\
    \ 31, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpha5t6njd.py\"\
    , line 23, in sum_squares\n    new_lst.append(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_g8u5gbh.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    # Finish this code\n    for element\
    \ in lst:\n        sum += math.ceil(element) ** 2\n    return sum\n\nimport doctest\n\
    doctest.testmod()\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7bdeo_gu.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmp7bdeo_gu.py\", line 44,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7bdeo_gu.py\", line\
    \ 30, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp7bdeo_gu.py\"\
    , line 24, in sum_squares\n    sum += math.ceil(element) ** 2\nNameError: name\
    \ 'math' is not defined\n"
  stdout: "**********************************************************************\n\
    File \"/tmp/tmp7bdeo_gu.py\", line 8, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 2.0, 3.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[0]>\", line 1, in <module>\n   \
    \     lst([1.0, 2.0, 3.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmp7bdeo_gu.py\", line 10, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 4.0, 9.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[1]>\", line 1, in <module>\n   \
    \     lst([1.0, 4.0, 9.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmp7bdeo_gu.py\", line 12, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 3.0, 5.0, 7.0])\nException raised:\n    Traceback (most recent\
    \ call last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[2]>\", line 1, in <module>\n   \
    \     lst([1.0, 3.0, 5.0, 7.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmp7bdeo_gu.py\", line 14, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.4, 4.2, 0.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[3]>\", line 1, in <module>\n   \
    \     lst([1.4, 4.2, 0.0])\n    "
  timestamp: 1659976769
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Task 1: Raise each element of the list to the\
    \ power of 2\n    lst = [i**2 for i in lst]\n    return sum(lst)\n    \ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxpp728l3.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpxpp728l3.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxpp728l3.py\", line\
    \ 29, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Get each element in the list\n    # Round up\
    \ the element to the nearest whole number\n    # Square each element\n    # Add\
    \ up each element in the list\n    lst[:] = [i**2 for i in lst]\n    return sum(lst)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd7vz1gqw.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpd7vz1gqw.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpd7vz1gqw.py\", line\
    \ 32, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x) ** 2 for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmph235er7i.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmph235er7i.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmph235er7i.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return int(sum([math.ceil(x) for x in lst])**2)\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9jzaf2hc.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp9jzaf2hc.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9jzaf2hc.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp9jzaf2hc.py\"\
    , line 21, in sum_squares\n    return int(sum([math.ceil(x) for x in lst])**2)\n\
    \  File \"/tmp/tmp9jzaf2hc.py\", line 21, in <listcomp>\n    return int(sum([math.ceil(x)\
    \ for x in lst])**2)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    ans = [math.ceil(i)**2 for i in lst]\n    return\
    \ int(sum(ans))\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxmcqngkz.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpxmcqngkz.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxmcqngkz.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpxmcqngkz.py\"\
    , line 21, in sum_squares\n    ans = [math.ceil(i)**2 for i in lst]\n  File \"\
    /tmp/tmpxmcqngkz.py\", line 21, in <listcomp>\n    ans = [math.ceil(i)**2 for\
    \ i in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([(int(math.ceil(i)) ** 2) for i in\
    \ lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpe9ypn141.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpe9ypn141.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpe9ypn141.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpe9ypn141.py\"\
    , line 21, in sum_squares\n    return sum([(int(math.ceil(i)) ** 2) for i in lst])\n\
    \  File \"/tmp/tmpe9ypn141.py\", line 21, in <listcomp>\n    return sum([(int(math.ceil(i))\
    \ ** 2) for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(x)) ** 2 for x in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuabtmik9.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpuabtmik9.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpuabtmik9.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpuabtmik9.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(x)) ** 2 for x in lst])\n\
    \  File \"/tmp/tmpuabtmik9.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(x))\
    \ ** 2 for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    a = 0\n    for i in lst:\n\
    \        i = math.ceil(i)\n        a += (i * i)\n    return a\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpoyy3rfd_.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpoyy3rfd_.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpoyy3rfd_.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpoyy3rfd_.py\"\
    , line 24, in sum_squares\n    i = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([ceil(x) ** 2 for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpcb9513mr.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpcb9513mr.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpcb9513mr.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpcb9513mr.py\"\
    , line 21, in sum_squares\n    return sum([ceil(x) ** 2 for x in lst])\n  File\
    \ \"/tmp/tmpcb9513mr.py\", line 21, in <listcomp>\n    return sum([ceil(x) **\
    \ 2 for x in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # replace and return the correct value\n    return\
    \ sum([int(math.ceil(i)**2) for i in lst])\n\nsum_squares([1.0, 2.0, 3.0])\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1vpjviu0.py\", line\
    \ 24, in <module>\n    sum_squares([1.0, 2.0, 3.0])\n  File \"/tmp/tmp1vpjviu0.py\"\
    , line 22, in sum_squares\n    return sum([int(math.ceil(i)**2) for i in lst])\n\
    \  File \"/tmp/tmp1vpjviu0.py\", line 22, in <listcomp>\n    return sum([int(math.ceil(i)**2)\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        num = math.ceil(num)\n\
    \        sum += num**2\n    return sum\n\nprint(sum_squares([1.0, 2.0, 3.0]))\n\
    print(sum_squares([1.0, 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\n\
    print(sum_squares([1.4, 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8n9lo8kj.py\", line\
    \ 27, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmp8n9lo8kj.py\"\
    , line 23, in sum_squares\n    num = math.ceil(num)\nNameError: name 'math' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = int(math.ceil(lst[i]))\n\
    \n    return int(sum([n**2 for n in lst]))\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuspb9mit.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpuspb9mit.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpuspb9mit.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpuspb9mit.py\"\
    , line 22, in sum_squares\n    lst[i] = int(math.ceil(lst[i]))\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # YOUR CODE HERE\n    pass\n    return sum(map(lambda\
    \ x: x**2, list(map(lambda x: math.ceil(x), lst))))\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmbnhsgyi.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpmbnhsgyi.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpmbnhsgyi.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpmbnhsgyi.py\"\
    , line 23, in sum_squares\n    return sum(map(lambda x: x**2, list(map(lambda\
    \ x: math.ceil(x), lst))))\n  File \"/tmp/tmpmbnhsgyi.py\", line 23, in <lambda>\n\
    \    return sum(map(lambda x: x**2, list(map(lambda x: math.ceil(x), lst))))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for num in lst:\n        num = math.ceil(num)\n\
    \        sum += num ** 2\n    return sum\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphn4k0fr2.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmphn4k0fr2.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphn4k0fr2.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmphn4k0fr2.py\"\
    , line 23, in sum_squares\n    num = math.ceil(num)\nNameError: name 'math' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(x) ** 2 for x in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdrb43i5i.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpdrb43i5i.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdrb43i5i.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdrb43i5i.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(x) ** 2 for x in lst])\n\
    \  File \"/tmp/tmpdrb43i5i.py\", line 21, in <listcomp>\n    return sum([math.ceil(x)\
    \ ** 2 for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [math.ceil(x) for x in lst]\n    return\
    \ sum([int(i**2) for i in lst])\n    \nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0,\
    \ 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4,\
    \ 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpk_n2ggd9.py\", line\
    \ 24, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmpk_n2ggd9.py\"\
    , line 21, in sum_squares\n    lst = [math.ceil(x) for x in lst]\n  File \"/tmp/tmpk_n2ggd9.py\"\
    , line 21, in <listcomp>\n    lst = [math.ceil(x) for x in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([ceil(x)**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpsabd0yjw.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpsabd0yjw.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpsabd0yjw.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpsabd0yjw.py\"\
    , line 21, in sum_squares\n    return sum([ceil(x)**2 for x in lst])\n  File \"\
    /tmp/tmpsabd0yjw.py\", line 21, in <listcomp>\n    return sum([ceil(x)**2 for\
    \ x in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    s = 0\n    for i in lst:\n        i = math.ceil(i)\n\
    \        s += i ** 2\n    return s\n    #return sum([int(math.ceil(x)) ** 2 for\
    \ x in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp8moc0u4d.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmp8moc0u4d.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp8moc0u4d.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp8moc0u4d.py\"\
    , line 23, in sum_squares\n    i = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    lst = [math.ceil(i) for\
    \ i in lst]\n    for i in range(len(lst)):\n        lst[i] = lst[i]**2\n    return\
    \ sum(lst)\n\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpga8qcgdo.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpga8qcgdo.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpga8qcgdo.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpga8qcgdo.py\"\
    , line 22, in sum_squares\n    lst = [math.ceil(i) for i in lst]\n  File \"/tmp/tmpga8qcgdo.py\"\
    , line 22, in <listcomp>\n    lst = [math.ceil(i) for i in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(i))**2 for i in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwzrapeo5.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpwzrapeo5.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwzrapeo5.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwzrapeo5.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(i))**2 for i in lst])\n\
    \  File \"/tmp/tmpwzrapeo5.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(i))**2\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [round(num) for num in lst]\n    return\
    \ sum([num ** 2 for num in lst])\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpv4h0z9rx.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpv4h0z9rx.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpv4h0z9rx.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Assume lst is not empty\n    # Assume each element\
    \ in lst is float\n    # Assume ceiling of float num is just int part\n    lst\
    \ = list(map(math.ceil, lst))\n    return sum(list(map(lambda x: x*x, lst)))\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgdkpze70.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpgdkpze70.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpgdkpze70.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpgdkpze70.py\"\
    , line 24, in sum_squares\n    lst = list(map(math.ceil, lst))\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(ceil(i))**2 for i in lst])\n \
    \  \n   \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwwchqgdj.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpwwchqgdj.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwwchqgdj.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwwchqgdj.py\"\
    , line 21, in sum_squares\n    return sum([int(ceil(i))**2 for i in lst])\n  File\
    \ \"/tmp/tmpwwchqgdj.py\", line 21, in <listcomp>\n    return sum([int(ceil(i))**2\
    \ for i in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    s = []\n    for x in lst:\n        s.append(int(ceil(x)))\n\
    \    return sum(i**2 for i in s)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpw8ttz6os.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpw8ttz6os.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpw8ttz6os.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpw8ttz6os.py\"\
    , line 23, in sum_squares\n    s.append(int(ceil(x)))\nNameError: name 'ceil'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(number)**2 for number in\
    \ lst])\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9ivfn_9n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp9ivfn_9n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9ivfn_9n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp9ivfn_9n.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(number)**2 for number in\
    \ lst])\n  File \"/tmp/tmp9ivfn_9n.py\", line 21, in <listcomp>\n    return sum([math.ceil(number)**2\
    \ for number in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_squares = 0\n    for i in lst:\n        sum_squares\
    \ += math.ceil(i**2)\n    return sum_squares\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpexgvpbsr.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpexgvpbsr.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpexgvpbsr.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpexgvpbsr.py\"\
    , line 23, in sum_squares\n    sum_squares += math.ceil(i**2)\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum_of_squares = 0\n    for x in lst:\n      \
    \  sum_of_squares += math.ceil(x) ** 2\n    return sum_of_squares\n    \n    \
    \    \n    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjum_0trg.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpjum_0trg.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpjum_0trg.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpjum_0trg.py\"\
    , line 23, in sum_squares\n    sum_of_squares += math.ceil(x) ** 2\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [int(i) for i in lst]\n    lst = [i*i for\
    \ i in lst]\n    return sum(lst)\n\nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0,\
    \ 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4,\
    \ 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9y6xggj3.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp9y6xggj3.py\", line 45,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9y6xggj3.py\", line\
    \ 34, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: '14

    98

    84

    17

    6

    '
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for x in lst:\n        sum += math.ceil(x)**2\n\
    \    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp1kv292fi.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp1kv292fi.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp1kv292fi.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp1kv292fi.py\"\
    , line 23, in sum_squares\n    sum += math.ceil(x)**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    if len(lst) == 0:\n        return 0\n    x = [math.ceil(i)\
    \ for i in lst]\n    sum_squares = sum([int(i)**2 for i in x])\n    return sum_squares\n\
    \        \n    \n    \n    \n    \nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0,\
    \ 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4,\
    \ 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\nprint(sum_squares([]))\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpjhm6lg7v.py\", line\
    \ 31, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmpjhm6lg7v.py\"\
    , line 23, in sum_squares\n    x = [math.ceil(i) for i in lst]\n  File \"/tmp/tmpjhm6lg7v.py\"\
    , line 23, in <listcomp>\n    x = [math.ceil(i) for i in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # The variable res is used to store the sum of\
    \ squares.\n    res = 0\n    # Using for loop to traverse the list.\n    for i\
    \ in lst:\n        # Add new result to the sum.\n        res += math.ceil(i)**2\n\
    \    return res\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpznfbbwlb.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpznfbbwlb.py\", line 44,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpznfbbwlb.py\", line\
    \ 30, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpznfbbwlb.py\"\
    , line 26, in sum_squares\n    res += math.ceil(i)**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return 0\n\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpupwzppsc.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpupwzppsc.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpupwzppsc.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i*i) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpc53tb72i.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpc53tb72i.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpc53tb72i.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # lst = [round(num) for num in lst]\n    # print(lst)\n\
    \    total = 0\n    for num in lst:\n        total += num ** 2\n    return int(total)\n\
    \nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0, 4.0, 9.0]))\nprint(sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4, 4.2, 0.0]))\nprint(sum_squares([-2.4,\
    \ 1.0, 1.0]))\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpl7du8rfh.py\", line\
    \ 50, in <module>\n    test_check()\n  File \"/tmp/tmpl7du8rfh.py\", line 48,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpl7du8rfh.py\", line\
    \ 37, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: '14

    98

    84

    19

    7

    '
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Your implementation here\n    return sum([int(math.ceil(x))\
    \ ** 2 for x in lst])\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphbfbj1g9.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmphbfbj1g9.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphbfbj1g9.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmphbfbj1g9.py\"\
    , line 22, in sum_squares\n    return sum([int(math.ceil(x)) ** 2 for x in lst])\n\
    \  File \"/tmp/tmphbfbj1g9.py\", line 22, in <listcomp>\n    return sum([int(math.ceil(x))\
    \ ** 2 for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    new_list = []\n    sum =\
    \ 0\n    for i in lst:\n        num = ceil(i)\n        new_list.append(num)\n\
    \    for j in new_list:\n        k = j**2\n        sum += k\n    return sum\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmps2qu5m67.py\", line\
    \ 49, in <module>\n    test_check()\n  File \"/tmp/tmps2qu5m67.py\", line 47,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmps2qu5m67.py\", line\
    \ 33, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmps2qu5m67.py\"\
    , line 25, in sum_squares\n    num = ceil(i)\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum=0\n    for i in lst:\n        i=math.ceil(i)\n\
    \        sum=sum+(i*i)\n    return sum\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7xzythsg.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp7xzythsg.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7xzythsg.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp7xzythsg.py\"\
    , line 23, in sum_squares\n    i=math.ceil(i)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpgid8pwu2.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpgid8pwu2.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    ## the output should always be an integer \n \
    \   return 0\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) ==\
    \ 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7h_yxcbe.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp7h_yxcbe.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7h_yxcbe.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    #for x in lst:\n    #    lst[x] = int(math.ceil(x))\n\
    \    #return sum(math.ceil(i) for i in lst)\n    sum = 0\n    for i in lst:\n\
    \        sum += (math.ceil(i))**2\n    return sum\ndef check(candidate):\n   \
    \ assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxnjj4s19.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpxnjj4s19.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxnjj4s19.py\", line\
    \ 29, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpxnjj4s19.py\"\
    , line 26, in sum_squares\n    sum += (math.ceil(i))**2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # replace this with a meaningful docstring.\n\
    \    raise NotImplementedError\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpb1eearo8.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpb1eearo8.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpb1eearo8.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpb1eearo8.py\"\
    , line 22, in sum_squares\n    raise NotImplementedError\nNotImplementedError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for num in lst:\n        print(math.ceil(num)\
    \ ** 2)\n\nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0, 4.0, 9.0]))\n\
    print(sum_squares([1.0, 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4, 4.2, 0.0]))\n\
    print(sum_squares([-2.4, 1.0, 1.0]))\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpp_8dwi0t.py\", line\
    \ 24, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmpp_8dwi0t.py\"\
    , line 22, in sum_squares\n    print(math.ceil(num) ** 2)\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    #Researcher:Jeremy Lim\n    #Date: 15/03/2018\n\
    \    #Resource: http://stackoverflow.com/questions/12451810/python-ceiling-equivalent\n\
    \    return sum(math.ceil(i)**2 for i in lst)\n\ndef check(candidate):\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpip64cg25.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpip64cg25.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpip64cg25.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpip64cg25.py\"\
    , line 24, in sum_squares\n    return sum(math.ceil(i)**2 for i in lst)\n  File\
    \ \"/tmp/tmpip64cg25.py\", line 24, in <genexpr>\n    return sum(math.ceil(i)**2\
    \ for i in lst)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # REPLACE pass BELOW WITH YOUR CODE\n    return\
    \ sum([int(i)**2 for i in lst])\n\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpttu8axl1.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpttu8axl1.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpttu8axl1.py\", line\
    \ 29, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    #return sum(map(lambda x:x**2,lst))\n    #return\
    \ sum(list(map(lambda x:x**2,lst)))\n    #return sum(list(map(lambda x:int(x**2),lst)))\n\
    \    #return sum(list(map(lambda x:x**2,list(map(lambda x:int(x),lst)))))\n  \
    \  #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:x**2,list(map(lambda x:int(x),lst)))))\n  \
    \  #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int(x**2),list(map(lambda x:int(x),lst)))))\n\
    \    #return sum(list(map(lambda x:int\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt9ndca0_.py\", line\
    \ 55, in <module>\n    test_check()\n  File \"/tmp/tmpt9ndca0_.py\", line 53,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpt9ndca0_.py\", line\
    \ 39, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(n)**2 for n in lst])\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxdf8gesm.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpxdf8gesm.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxdf8gesm.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpxdf8gesm.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(n)**2 for n in lst])\n  File\
    \ \"/tmp/tmpxdf8gesm.py\", line 21, in <listcomp>\n    return sum([math.ceil(n)**2\
    \ for n in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp_g8u5gbh.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_g8u5gbh.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for element in lst:\n        sum\
    \ += int(math.ceil(element) ** 2)\n    return sum\n\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpengv9oys.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpengv9oys.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpengv9oys.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpengv9oys.py\"\
    , line 23, in sum_squares\n    sum += int(math.ceil(element) ** 2)\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # lst = [math.ceil(lst[x]) for x in range(len(lst))]\n\
    \    # lst = [x**2 for x in lst]\n    # return sum(lst)\n    return sum([math.ceil(i)**2\
    \ for i in lst])\n\nlst = [1.0, 4.0, 9.0]\nprint(sum_squares(lst))\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp75p9m0am.py\", line\
    \ 27, in <module>\n    print(sum_squares(lst))\n  File \"/tmp/tmp75p9m0am.py\"\
    , line 24, in sum_squares\n    return sum([math.ceil(i)**2 for i in lst])\n  File\
    \ \"/tmp/tmp75p9m0am.py\", line 24, in <listcomp>\n    return sum([math.ceil(i)**2\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    \"\"\"\n    # 4 methods of solving this.\n   \
    \ # METHOD 1 - FOR LOOP\n    ceiling = []\n    for i in lst:\n        ceiling.append(math.ceil(i))\n\
    \    print(sum(i**2 for i in ceiling))\n\n    # METHOD 2 - MAP FUNCTION\n    print(sum(map(lambda\
    \ i: i**2, map(math.ceil, lst))))\n\n    # METHOD 3 - LAMBDA FUNCTION\n    print(sum(map(lambda\
    \ i: math.ceil(i)**2, lst)))\n\n    # METHOD 4 - LIST COMPREHENSION\n    print(sum([math.ceil(i)**2\
    \ for i in lst]))\n    \"\"\"\n\n    return sum(math.ceil(i)**2 for i in lst)\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnh5mc43q.py\", line\
    \ 58, in <module>\n    test_check()\n  File \"/tmp/tmpnh5mc43q.py\", line 56,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnh5mc43q.py\", line\
    \ 42, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpnh5mc43q.py\"\
    , line 39, in sum_squares\n    return sum(math.ceil(i)**2 for i in lst)\n  File\
    \ \"/tmp/tmpnh5mc43q.py\", line 39, in <genexpr>\n    return sum(math.ceil(i)**2\
    \ for i in lst)\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(i) ** 2 for i in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpem1zuyj_.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpem1zuyj_.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpem1zuyj_.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpem1zuyj_.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(i) ** 2 for i in lst])\n\
    \  File \"/tmp/tmpem1zuyj_.py\", line 21, in <listcomp>\n    return sum([math.ceil(i)\
    \ ** 2 for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    for i in range(len(lst)):\n        lst[i] = math.ceil(lst[i])\n\
    \    total = 0\n    for i in range(len(lst)):\n        total += lst[i]**2\n  \
    \  return total\n\nprint(sum_squares([1.0, 2.0, 3.0]))\nprint(sum_squares([1.0,\
    \ 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\nprint(sum_squares([1.4,\
    \ 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\ndef check(candidate):\n \
    \   assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3y89ve4x.py\", line\
    \ 28, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmp3y89ve4x.py\"\
    , line 22, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += math.ceil(i)\
    \ ** 2\n    return sum\n\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpkbswcgvt.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpkbswcgvt.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpkbswcgvt.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpkbswcgvt.py\"\
    , line 23, in sum_squares\n    sum += math.ceil(i) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Write your code here\n    return sum([int(round(x)**2)\
    \ for x in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmprgvd3tfu.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmprgvd3tfu.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmprgvd3tfu.py\", line\
    \ 28, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([(math.ceil(x)**2) for x in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp5ewa5k91.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp5ewa5k91.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp5ewa5k91.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp5ewa5k91.py\"\
    , line 21, in sum_squares\n    return sum([(math.ceil(x)**2) for x in lst])\n\
    \  File \"/tmp/tmp5ewa5k91.py\", line 21, in <listcomp>\n    return sum([(math.ceil(x)**2)\
    \ for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [round(a) for a in lst]\n    lst = [a*a\
    \ for a in lst]\n    return sum(lst)\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnib4xxyh.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpnib4xxyh.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnib4xxyh.py\", line\
    \ 29, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnhfxm34q.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnhfxm34q.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    new_lst = []\n    for element in lst:\n      \
    \  new_lst.append(element**2)\n    return sum(new_lst)\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpt37z40v5.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpt37z40v5.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpt37z40v5.py\", line\
    \ 29, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # return 0\n    return sum([int(ceil(i)) ** 2\
    \ for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp9b_9aolk.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp9b_9aolk.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp9b_9aolk.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp9b_9aolk.py\"\
    , line 22, in sum_squares\n    return sum([int(ceil(i)) ** 2 for i in lst])\n\
    \  File \"/tmp/tmp9b_9aolk.py\", line 22, in <listcomp>\n    return sum([int(ceil(i))\
    \ ** 2 for i in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    import math\n    lst2 = []\n    for x in lst:\n\
    \        new_num = math.ceil(x)\n        lst2.append(new_num)\n    lst2 = [x**2\
    \ for x in lst2]\n    return sum(lst2)\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(num)**2 for num in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp0xvmalrm.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp0xvmalrm.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp0xvmalrm.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp0xvmalrm.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(num)**2 for num in lst])\n\
    \  File \"/tmp/tmp0xvmalrm.py\", line 21, in <listcomp>\n    return sum([math.ceil(num)**2\
    \ for num in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [math.ceil(number) for number in lst]\n\
    \    squares = list(map(lambda x: x**2, lst))\n    summation = sum(squares)\n\
    \    return summation\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpd_cg7n3a.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpd_cg7n3a.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpd_cg7n3a.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpd_cg7n3a.py\"\
    , line 21, in sum_squares\n    lst = [math.ceil(number) for number in lst]\n \
    \ File \"/tmp/tmpd_cg7n3a.py\", line 21, in <listcomp>\n    lst = [math.ceil(number)\
    \ for number in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # your code here\n    number_list = [math.ceil(x)\
    \ for x in lst]\n    total = 0\n    for num in number_list:\n        total +=\
    \ num**2\n    return total\n\n    # import math\n    # return sum([math.ceil(x)**2\
    \ for x in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpn2dzamln.py\", line\
    \ 48, in <module>\n    test_check()\n  File \"/tmp/tmpn2dzamln.py\", line 46,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpn2dzamln.py\", line\
    \ 32, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpn2dzamln.py\"\
    , line 22, in sum_squares\n    number_list = [math.ceil(x) for x in lst]\n  File\
    \ \"/tmp/tmpn2dzamln.py\", line 22, in <listcomp>\n    number_list = [math.ceil(x)\
    \ for x in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(i**2) for i in lst])\n    \n \
    \   \n    \n    \n    \n    \n    \n    \n    # replace the body of this function\
    \ with your code\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    # a single\
    \ return statement per function\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp4pdrz_aj.py\", line\
    \ 70, in <module>\n    test_check()\n  File \"/tmp/tmp4pdrz_aj.py\", line 68,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp4pdrz_aj.py\", line\
    \ 57, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    new_lst = []\n    for i in lst:\n        new_lst.append(math.ceil(i))\n\
    \    return sum([i**2 for i in new_lst])\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpknkqzr1x.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpknkqzr1x.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpknkqzr1x.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpknkqzr1x.py\"\
    , line 23, in sum_squares\n    new_lst.append(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        i = math.ceil(i)\n\
    \        i = i ** 2\n        sum += i\n    return sum\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpxq2422ry.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpxq2422ry.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpxq2422ry.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpxq2422ry.py\"\
    , line 23, in sum_squares\n    i = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([ceil(x)**2 for x in lst])\n      \
    \  \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  \
    \  assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0,\
    \ 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdq0v8are.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmpdq0v8are.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdq0v8are.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdq0v8are.py\"\
    , line 21, in sum_squares\n    return sum([ceil(x)**2 for x in lst])\n  File \"\
    /tmp/tmpdq0v8are.py\", line 21, in <listcomp>\n    return sum([ceil(x)**2 for\
    \ x in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    #pass\n    L=[]\n    for i in lst:\n        L.append(math.ceil(i))\n\
    \    S=0\n    for i in L:\n        S+=i**2\n    return S\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmplet5fhol.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmplet5fhol.py\", line 45,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmplet5fhol.py\", line\
    \ 31, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmplet5fhol.py\"\
    , line 24, in sum_squares\n    L.append(math.ceil(i))\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([x*x for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphyw_hm6x.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmphyw_hm6x.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphyw_hm6x.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    new_lst = []\n    for i in lst:\n        new_lst.append(int(math.ceil(i)**2))\n\
    \    \n    return sum(new_lst)\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp74wkxf2y.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp74wkxf2y.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp74wkxf2y.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp74wkxf2y.py\"\
    , line 23, in sum_squares\n    new_lst.append(int(math.ceil(i)**2))\nNameError:\
    \ name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = [ceil(i) for i in lst]\n    return sum([i**2\
    \ for i in lst])\n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp_laarpjn.py\", line\
    \ 41, in <module>\n    test_check()\n  File \"/tmp/tmp_laarpjn.py\", line 39,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp_laarpjn.py\", line\
    \ 25, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp_laarpjn.py\"\
    , line 21, in sum_squares\n    lst = [ceil(i) for i in lst]\n  File \"/tmp/tmp_laarpjn.py\"\
    , line 21, in <listcomp>\n    lst = [ceil(i) for i in lst]\nNameError: name 'ceil'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Make list that rounds up to ceiling and adds\
    \ it to list\n    # Test\n    new_list = []\n    for i in lst:\n        new_list.append(math.ceil(i))\n\
    \    # Test\n    print(new_list)\n    # Square each number and add them to new\
    \ list\n    squared_list = []\n    for i in new_list:\n        squared_list.append(i\
    \ ** 2)\n    # Test\n    print(squared_list)\n    # Add all elements together\n\
    \    total = 0\n    for i in squared_list:\n        total += i\n    return total\n\
    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpwdw5h7lt.py\", line\
    \ 58, in <module>\n    test_check()\n  File \"/tmp/tmpwdw5h7lt.py\", line 56,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpwdw5h7lt.py\", line\
    \ 42, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpwdw5h7lt.py\"\
    , line 25, in sum_squares\n    new_list.append(math.ceil(i))\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    lst = list(map(lambda x: math.ceil(x), lst))\n\
    \    return sum(map(lambda x: x**2, lst))\n\nprint(sum_squares([1.0, 2.0, 3.0]))\n\
    print(sum_squares([1.0, 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0, 5.0, 7.0]))\n\
    print(sum_squares([1.4, 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0, 1.0]))\n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3zkhu0vi.py\", line\
    \ 24, in <module>\n    print(sum_squares([1.0, 2.0, 3.0]))\n  File \"/tmp/tmp3zkhu0vi.py\"\
    , line 21, in sum_squares\n    lst = list(map(lambda x: math.ceil(x), lst))\n\
    \  File \"/tmp/tmp3zkhu0vi.py\", line 21, in <lambda>\n    lst = list(map(lambda\
    \ x: math.ceil(x), lst))\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([i ** 2 for i in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpyqee2lf1.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpyqee2lf1.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpyqee2lf1.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    def sumSquares(listx):\n        return sum([i**2\
    \ for i in listx])\n    return sumSquares([math.ceil(i) for i in lst])\n    \n\
    print(sum_squares([-2.4, 1.0, 1.0]))\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3q5rx4cg.py\", line\
    \ 25, in <module>\n    print(sum_squares([-2.4, 1.0, 1.0]))\n  File \"/tmp/tmp3q5rx4cg.py\"\
    , line 23, in sum_squares\n    return sumSquares([math.ceil(i) for i in lst])\n\
    \  File \"/tmp/tmp3q5rx4cg.py\", line 23, in <listcomp>\n    return sumSquares([math.ceil(i)\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return 0\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpuf1u3sh4.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpuf1u3sh4.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpuf1u3sh4.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    list1 = [math.ceil(i) for i in lst]\n    return\
    \ sum([i**2 for i in list1])\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp6naqk0ax.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmp6naqk0ax.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp6naqk0ax.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp6naqk0ax.py\"\
    , line 21, in sum_squares\n    list1 = [math.ceil(i) for i in lst]\n  File \"\
    /tmp/tmp6naqk0ax.py\", line 21, in <listcomp>\n    list1 = [math.ceil(i) for i\
    \ in lst]\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: 0
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # Make a list of Ceiling rounded integers\n  \
    \  import math\n    ceil_lst = []\n    for i in lst:\n        ceil_lst.append(math.ceil(i))\n\
    \    #print(ceil_lst)\n    sq_lst = []\n    for i in ceil_lst:\n        sq_lst.append(i**2)\n\
    \    #print(sq_lst)\n    # Implement your program here.\n    return sum(sq_lst)\n\
    \    \n\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # A helper function that rounds to upper int\n\
    \    def round_up(x):\n        return int(math.ceil(x))\n    # A list comprehension\
    \ that maps the round_up function to all the elements in the list\n    lst_rounded\
    \ = list(map(round_up, lst))\n    # A list comprehension that squares all the\
    \ elements in the list\n    lst_squared = [x**2 for x in lst_rounded]\n    # return\
    \ the sum of all the elements in the list\n    return sum(lst_squared)\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp__da05qp.py\", line\
    \ 47, in <module>\n    test_check()\n  File \"/tmp/tmp__da05qp.py\", line 45,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp__da05qp.py\", line\
    \ 31, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp__da05qp.py\"\
    , line 25, in sum_squares\n    lst_rounded = list(map(round_up, lst))\n  File\
    \ \"/tmp/tmp__da05qp.py\", line 23, in round_up\n    return int(math.ceil(x))\n\
    NameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([round(x)**2 for x in lst])\n\nprint(sum_squares([1.0,\
    \ 2.0, 3.0]))\nprint(sum_squares([1.0, 4.0, 9.0]))\nprint(sum_squares([1.0, 3.0,\
    \ 5.0, 7.0]))\nprint(sum_squares([1.4, 4.2, 0.0]))\nprint(sum_squares([-2.4, 1.0,\
    \ 1.0]))\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpqmor6514.py\", line\
    \ 45, in <module>\n    test_check()\n  File \"/tmp/tmpqmor6514.py\", line 43,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpqmor6514.py\", line\
    \ 32, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: '14

    98

    84

    17

    6

    '
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    x = 0\n    lst = [math.ceil(x) for x in lst]\n\
    \    for i in lst:\n        x += i**2\n    return x\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpzt0gdph1.py\", line\
    \ 44, in <module>\n    test_check()\n  File \"/tmp/tmpzt0gdph1.py\", line 42,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpzt0gdph1.py\", line\
    \ 28, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpzt0gdph1.py\"\
    , line 22, in sum_squares\n    lst = [math.ceil(x) for x in lst]\n  File \"/tmp/tmpzt0gdph1.py\"\
    , line 22, in <listcomp>\n    lst = [math.ceil(x) for x in lst]\nNameError: name\
    \ 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    # FILL IN YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    return sum([math.ceil(i)**2 for i in lst])\n\ndef check(candidate):\n   \
    \ assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0])\
    \ == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpf4o6y37v.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpf4o6y37v.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpf4o6y37v.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpf4o6y37v.py\"\
    , line 23, in sum_squares\n    return sum([math.ceil(i)**2 for i in lst])\n  File\
    \ \"/tmp/tmpf4o6y37v.py\", line 23, in <listcomp>\n    return sum([math.ceil(i)**2\
    \ for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x ** 2) for x in lst])\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpfd9y79z6.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpfd9y79z6.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpfd9y79z6.py\", line\
    \ 26, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        i = math.ceil(i)\n\
    \        sum += (i*i)\n    return sum\n\nimport doctest\ndoctest.testmod()\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpof92qsvc.py\", line\
    \ 46, in <module>\n    test_check()\n  File \"/tmp/tmpof92qsvc.py\", line 44,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpof92qsvc.py\", line\
    \ 30, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpof92qsvc.py\"\
    , line 23, in sum_squares\n    i = math.ceil(i)\nNameError: name 'math' is not\
    \ defined\n"
  stdout: "**********************************************************************\n\
    File \"/tmp/tmpof92qsvc.py\", line 8, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 2.0, 3.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[0]>\", line 1, in <module>\n   \
    \     lst([1.0, 2.0, 3.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmpof92qsvc.py\", line 10, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 4.0, 9.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[1]>\", line 1, in <module>\n   \
    \     lst([1.0, 4.0, 9.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmpof92qsvc.py\", line 12, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.0, 3.0, 5.0, 7.0])\nException raised:\n    Traceback (most recent\
    \ call last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[2]>\", line 1, in <module>\n   \
    \     lst([1.0, 3.0, 5.0, 7.0])\n    NameError: name 'lst' is not defined\n**********************************************************************\n\
    File \"/tmp/tmpof92qsvc.py\", line 14, in __main__.sum_squares\nFailed example:\n\
    \    lst([1.4, 4.2, 0.0])\nException raised:\n    Traceback (most recent call\
    \ last):\n      File \"/home/a.guha/.conda/envs/polyglot/lib/python3.10/doctest.py\"\
    , line 1350, in __run\n        exec(compile(example.source, filename, \"single\"\
    ,\n      File \"<doctest __main__.sum_squares[3]>\", line 1, in <module>\n   \
    \     lst([1.4, 4.2, 0.0])\n    "
  timestamp: 1659976769
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    sum = 0\n    for i in lst:\n        sum += math.ceil(i)\
    \ ** 2\n    return sum\ndef check(candidate):\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpaeykqfmw.py\", line\
    \ 42, in <module>\n    test_check()\n  File \"/tmp/tmpaeykqfmw.py\", line 40,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpaeykqfmw.py\", line\
    \ 26, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpaeykqfmw.py\"\
    , line 23, in sum_squares\n    sum += math.ceil(i) ** 2\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    out = 0\n    for i in lst:\n        i = int(math.ceil(i))\n\
    \        out += i**2\n    return out\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp3g2tec12.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmp3g2tec12.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp3g2tec12.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp3g2tec12.py\"\
    , line 23, in sum_squares\n    i = int(math.ceil(i))\nNameError: name 'math' is\
    \ not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(ceil(n**2)) for n in lst])\ndef\
    \ check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert\
    \ candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) ==\
    \ 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0,\
    \ 10000.0]) == 200000000\n    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert\
    \ candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n    assert candidate([0.0]) ==\
    \ 0\n    assert candidate([-1.0]) == 1\n    assert candidate([-1.0, 1.0, 0.0])\
    \ == 2\n\ndef test_check():\n    check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmphxvl2uxr.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmphxvl2uxr.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmphxvl2uxr.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmphxvl2uxr.py\"\
    , line 21, in sum_squares\n    return sum([int(ceil(n**2)) for n in lst])\n  File\
    \ \"/tmp/tmphxvl2uxr.py\", line 21, in <listcomp>\n    return sum([int(ceil(n**2))\
    \ for n in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    pass\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7kh6et8n.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7kh6et8n.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([ceil(i)**2 for i in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpegd132oq.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpegd132oq.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpegd132oq.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpegd132oq.py\"\
    , line 21, in sum_squares\n    return sum([ceil(i)**2 for i in lst])\n  File \"\
    /tmp/tmpegd132oq.py\", line 21, in <listcomp>\n    return sum([ceil(i)**2 for\
    \ i in lst])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(math.pow(i, 2)) for i in\
    \ lst])\ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmp7ekcfq95.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmp7ekcfq95.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmp7ekcfq95.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmp7ekcfq95.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(math.pow(i, 2)) for i in\
    \ lst])\n  File \"/tmp/tmp7ekcfq95.py\", line 21, in <listcomp>\n    return sum([math.ceil(math.pow(i,\
    \ 2)) for i in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([math.ceil(x) ** 2 for x in lst])\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpdrb43i5i.py\", line\
    \ 39, in <module>\n    test_check()\n  File \"/tmp/tmpdrb43i5i.py\", line 37,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpdrb43i5i.py\", line\
    \ 23, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpdrb43i5i.py\"\
    , line 21, in sum_squares\n    return sum([math.ceil(x) ** 2 for x in lst])\n\
    \  File \"/tmp/tmpdrb43i5i.py\", line 21, in <listcomp>\n    return sum([math.ceil(x)\
    \ ** 2 for x in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(math.ceil(n)) ** 2 for n in lst])\n\
    \ndef check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpu3pl5h28.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpu3pl5h28.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpu3pl5h28.py\", line\
    \ 24, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpu3pl5h28.py\"\
    , line 21, in sum_squares\n    return sum([int(math.ceil(n)) ** 2 for n in lst])\n\
    \  File \"/tmp/tmpu3pl5h28.py\", line 21, in <listcomp>\n    return sum([int(math.ceil(n))\
    \ ** 2 for n in lst])\nNameError: name 'math' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([i ** 2 for i in [ceil(j) for j in\
    \ lst]])\n    \n    \n    \n\ndef check(candidate):\n    assert candidate([1.0,\
    \ 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0])\
    \ == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n    assert\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9])\
    \ == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n\
    \    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpbkwc5fyz.py\", line\
    \ 43, in <module>\n    test_check()\n  File \"/tmp/tmpbkwc5fyz.py\", line 41,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpbkwc5fyz.py\", line\
    \ 27, in check\n    assert candidate([1.0, 2.0, 3.0]) == 14\n  File \"/tmp/tmpbkwc5fyz.py\"\
    , line 21, in sum_squares\n    return sum([i ** 2 for i in [ceil(j) for j in lst]])\n\
    \  File \"/tmp/tmpbkwc5fyz.py\", line 21, in <listcomp>\n    return sum([i **\
    \ 2 for i in [ceil(j) for j in lst]])\nNameError: name 'ceil' is not defined\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    return sum([int(x)**2 for x in lst])\n\ndef check(candidate):\n\
    \    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 2.0,\
    \ 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0]) == 84\n    assert candidate([1.4,\
    \ 4.2, 0.0]) == 29\n    assert candidate([-2.4, 1.0, 1.0]) == 6\n    assert candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230\n    assert candidate([10000.0, 10000.0]) == 200000000\n\
    \    assert candidate([-1.4, 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9,\
    \ 18.9, 19.9]) == 1086\n    assert candidate([0.0]) == 0\n    assert candidate([-1.0])\
    \ == 1\n    assert candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n   \
    \ check(sum_squares)\n\ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpnkbs0ot4.py\", line\
    \ 40, in <module>\n    test_check()\n  File \"/tmp/tmpnkbs0ot4.py\", line 38,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpnkbs0ot4.py\", line\
    \ 27, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\nAssertionError\n"
  stdout: ''
  timestamp: 1659976768
- exit_code: -1
  program: "from typing import List\n\ndef sum_squares(lst: List[float]) -> int:\n\
    \    \"\"\"You are given a list of numbers.\n    You need to return the sum of\
    \ squared numbers in the given list,\n    round each element in the list to the\
    \ upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n   \
    \ 14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\n    if lst == []:\n        return 0\n    for i in\
    \ range(len(lst)):\n        if lst[i] < 0:\n            lst[i] = 0\n        elif\
    \ lst[i] % 1 != 0:\n            lst[i] = math.ceil(lst[i])\n    x = 0\n    for\
    \ i in range(len(lst)):\n        x += lst[i]**2\n    return x\n    \n    \n\n\
    def check(candidate):\n    assert candidate([1.0, 2.0, 3.0]) == 14\n    assert\
    \ candidate([1.0, 2.0, 3.0]) == 14\n    assert candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n    assert candidate([1.4, 4.2, 0.0]) == 29\n    assert candidate([-2.4,\
    \ 1.0, 1.0]) == 6\n    assert candidate([100.0, 1.0, 15.0, 2.0]) == 10230\n  \
    \  assert candidate([10000.0, 10000.0]) == 200000000\n    assert candidate([-1.4,\
    \ 4.6, 6.3]) == 75\n    assert candidate([-1.4, 17.9, 18.9, 19.9]) == 1086\n \
    \   assert candidate([0.0]) == 0\n    assert candidate([-1.0]) == 1\n    assert\
    \ candidate([-1.0, 1.0, 0.0]) == 2\n\ndef test_check():\n    check(sum_squares)\n\
    \ntest_check()\n"
  status: Exception
  stderr: "Traceback (most recent call last):\n  File \"/tmp/tmpmkplpb7s.py\", line\
    \ 52, in <module>\n    test_check()\n  File \"/tmp/tmpmkplpb7s.py\", line 50,\
    \ in test_check\n    check(sum_squares)\n  File \"/tmp/tmpmkplpb7s.py\", line\
    \ 39, in check\n    assert candidate([1.4, 4.2, 0.0]) == 29\n  File \"/tmp/tmpmkplpb7s.py\"\
    , line 27, in sum_squares\n    lst[i] = math.ceil(lst[i])\nNameError: name 'math'\
    \ is not defined\n"
  stdout: ''
  timestamp: 1659976768

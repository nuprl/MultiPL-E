name: HumanEval_118_get_closest_vowel
language: jl
prompt: "\"\"\"You are given a word. Your task is to find the closest vowel that stands\
  \ between \n    two consonants from the right side of the word (case sensitive).\n\
  \    \n    Vowels in the beginning and ending doesn't count. Return empty string\
  \ if you didn't\n    find any vowel met the above condition. \n\n    You may assume\
  \ that the given string contains English letter only.\n\n    Example:\n    >>> get_closest_vowel(\"\
  yogurt\")\n    \"u\"\n    >>> get_closest_vowel(\"FULL\")\n    \"U\"\n    >>> get_closest_vowel(\"\
  quick\")\n    \"\"\n    >>> get_closest_vowel(\"ab\")\n    \"\"\n    \"\"\"\nfunction\
  \ get_closest_vowel(word::String)::String \n"
tests: "using Test\n\n@testset begin\n\ncandidate = get_closest_vowel;\n\t@test(candidate(\"\
  yogurt\") == \"u\")\n\t@test(candidate(\"full\") == \"u\")\n\t@test(candidate(\"\
  easy\") == \"\")\n\t@test(candidate(\"eAsy\") == \"\")\n\t@test(candidate(\"ali\"\
  ) == \"\")\n\t@test(candidate(\"bad\") == \"a\")\n\t@test(candidate(\"most\") ==\
  \ \"o\")\n\t@test(candidate(\"ab\") == \"\")\n\t@test(candidate(\"ba\") == \"\"\
  )\n\t@test(candidate(\"quick\") == \"\")\n\t@test(candidate(\"anime\") == \"i\"\
  )\n\t@test(candidate(\"Asia\") == \"\")\n\t@test(candidate(\"Above\") == \"o\")\n\
  end\n"
completions: []
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

language: jl
name: HumanEval_133_sum_squares
results:
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst\n        sum = sum+i*i\n    return sum\nend #\
    \ function sum_squares(lst::Vector{Float64})::Int64\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp15lcy5nh.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp15lcy5nh.jl:1\n\
    in expression starting at /tmp/tmp15lcy5nh.jl:1\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    res = 0.0\n    for x in lst\n        res = res + x^2 \n    end\n    return\
    \ round(res)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyboraqpx.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpyboraqpx.jl:33\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyboraqpx.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyboraqpx.jl:29\ntest set: Test Failed at /tmp/tmpyboraqpx.jl:34\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyboraqpx.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyboraqpx.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyboraqpx.jl:37\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyboraqpx.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyboraqpx.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyboraqpx.jl:38\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyboraqpx.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyboraqpx.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015448
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst\n        sum = i + i\n        sum += i\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmp79pfsuhp.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert`\
    \ an object of type typeof(sum) to an object of type Int64\n  Closest candidates\
    \ are:\n    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp79pfsuhp.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79pfsuhp.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79pfsuhp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp79pfsuhp.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert` an object\
    \ of type typeof(sum) to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp79pfsuhp.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp79pfsuhp.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp79pfsuhp.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp79pfsuh"
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\n\"\"\"\n>>> lst = [1.0, 2.0, 3.0]\n>>> sum_squares(lst)\n14.0\n>>> lst =\
    \ [1.0, 4.0, 9.0]\n>>> sum_squares(lst)\n98.0\n>>> lst = [1.0, 3.0, 5.0, 7.0]\n\
    >>> sum_squares(lst)\n84.0\n>>> lst = [1.4, 4.2, 0.0]\n>>> sum_squares(lst)\n\
    29.0\n>>> lst = [-2.4, 1.0, 1.0]\n>>> sum_squares(lst)\n6.0\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpra8p7mme.jl:25\nin expression starting at /tmp/tmpra8p7mme.jl:25\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_sq = 0.0\n    for x in lst\n        sum_sq = sum_sq + pow(x,2)\n \
    \   return sum_sq\nend\n</cell>\n<code language=julia-1.0>\n# run this cell and\
    \ click on the link to see the answer\n@time sum_squares([1.0,2.0,3.0,4.0])\n\
    </cell>\n<text>\nProblem 2\nWrite a function that returns the sum of the squares\
    \ of the numbers in the given vector.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiu83a9m3.jl:24\nin expression starting at\
    \ /tmp/tmpiu83a9m3.jl:24\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    total=0\n    for i in lst\n        total+=i*i\n    end\n    return total\n\
    end\n</cell>\n<code language=julia-1.1>\nsum_squares(lst_1)\n</cell>\n<text>\n\
    Problem 7\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1hgj7u4s.jl:25\nin expression starting at\
    \ /tmp/tmp1hgj7u4s.jl:25\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\tsum=0\n\tfor item in lst \n\t\tsum += item*item\n\tend\n\treturn sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6zdc12_u.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp6zdc12_u.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6zdc12_u.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6zdc12_u.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6zdc12_u.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6zdc12_u.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp6zdc12_u.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6zdc12_u.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6zdc12_u.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6zdc12_u.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6zdc12_u.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6zdc12_u.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6zdc12_u.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.\n    for i in lst \n        sum = sum + i*i\n    end\n    \n\
    \    return sum\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 2.0,\
    \ 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nTask. Write a function, that returns the sum of\
    \ the positive elements in the given vector\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgd9fzo1b.jl:26\nin expression starting at\
    \ /tmp/tmpgd9fzo1b.jl:26\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    sum_ = 0\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxomwyo9x.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxomwyo9x.jl:1\n\
    in expression starting at /tmp/tmpxomwyo9x.jl:1\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum=0\n  for element in lst\n    sum=sum+element*element\n  end\n  return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4eezsrfz.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp4eezsrfz.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp4eezsrfz.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4eezsrfz.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4eezsrfz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4eezsrfz.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp4eezsrfz.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4eezsrfz.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4eezsrfz.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4eezsrfz.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp4eezsrfz.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4eezsrfz.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4eezsrfz.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmprld3am8b.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmprld3am8b.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmprld3am8b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprld3am8b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmprld3am8b.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprld3am8b.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmprld3am8b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(x.^2 for x = lst) \nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0,\
    \ 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n</cell>\n<code language=julia-1.5>\n\
    sum(map(x -> x^2, [1.0, 2.0, 3.0]))\n</cell>\n<code language=julia-1.5>\nsum(map(x\
    \ -> x^2, [1.0, 4.0, 9.0]))\n</cell>\n<code language=julia-1.5>\nsum(map(x ->\
    \ x^2, [1.0, 3.0, 5.0, 7.0]))\n</cell>\n<code language=julia-1.5>\nsum(map(x ->\
    \ x^2, [1.4, 4.2, 0.0]))\n</cell>\n<code language=julia-1.5>\nsum(map(x -> x^2,\
    \ [-2.4, 1.0, 1.0]))\n</cell>\n<text>\nChallenge 2.2\nWrite a function that can\
    \ calculate the inverse of a matrix with N rows and N columns. We will test your\
    \ function with different sized matrices.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0q30z3ke.jl:21\nin expression starting at\
    \ /tmp/tmp0q30z3ke.jl:21\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x -> round(Int, sqrt(x))*x, lst))\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpil9gn89d.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpil9gn89d.jl:26\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpil9gn89d.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpil9gn89d.jl:25\ntest set: Test Failed at /tmp/tmpil9gn89d.jl:27\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil9gn89d.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil9gn89d.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpil9gn89d.jl:28\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 38 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpil9gn89d.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpil9gn89d.jl:25\ntest set: Error\
    \ During Test at /tmp/tmpil9gn89d.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(9.8)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpil9gn89d.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpil9gn89d.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpil9gn89d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum+=i*i\n    end\n    return round(sum)\n\
    end\n</cell>\n<code language=julia-1.1>\nsum_squares(lst)\n</cell>\n<text>\n4.3\n\
    Now let's try with a larger list containing random float numbers. Run the cell\
    \ below repeatedly.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvmq5y14l.jl:25\nin expression starting at\
    \ /tmp/tmpvmq5y14l.jl:25\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n=length(lst)\n    square_sum = 0\n    for i in lst\n        square_sum+=(i^2)\n\
    \    end\n    return round(square_sum, n)\nend \n</code>\n<|/ a tags=julia |>\n\
    <| c |>\nPlease check my answer. Your code has a bug, so it's wrong. Moreover,\
    \ `lst([1.0, 4.0, 9.0])` returns `14` and `lst([-2.4, 1.0, 1.0])` returns `-6`.\n\
    <|/ c |>\n<| c |>\nIt doesn't return a wrong answer as I tested it. I just forgot\
    \ to include the `round` call in my code. Also I tested with negative numbers\
    \ as well. For negative numbers your function returns a negative number instead\
    \ of a zero.\n<|/ c |>\n<| c |>\nI tested your functions with negative numbers\
    \ too and both methods return the same negative number. Your function doesn't\
    \ work for negative numbers at all.\n<|/ c |>\n<| c |>\nYou must be doing something\
    \ wrong. Because I just tested it on Julia 0.6.2 and it works fine.\n<|/ c |>\n\
    <| c |>\nOk, I was using an older version of Julia, that's why it didn't work\
    \ for me. Thanks for your help.\n<|/ c |>\n<| a dscore=2 |>\nI believe that this\
    \ is the simplest solution. As you mentioned, you can easily use a for-loop but\
    \ since you mentioned vectors, here is a vectorized solution:\n<code>\njulia>\
    \ function sum_vector(x::Vector{Int})\n           s = 0\n           for i in x\n\
    \              s += i^2\n           end\n           return s\n       end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmjouw_vn.jl:26\nin expression starting at\
    \ /tmp/tmpmjouw_vn.jl:26\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = 0\n    for x in lst\n        s += x * x\n    end\n    s\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp856w7sry.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp856w7sry.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp856w7sry.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp856w7sry.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp856w7sry.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp856w7sry.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp856w7sry.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp856w7sry.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp856w7sry.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp856w7sry.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp856w7sry.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp856w7sry.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp856w7sry.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst)==0\n        return 0;\n    end\n    return sum(lst).^2\
    \ # return square of sum of all elements\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5m57w1mt.jl:26

    '
  stdout: "test set: Test Failed at /tmp/tmp5m57w1mt.jl:29\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 36 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp5m57w1mt.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp5m57w1mt.jl:28\ntest set: Test Failed at /tmp/tmp5m57w1mt.jl:30\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 36 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m57w1mt.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m57w1mt.jl:28\ntest set: Test\
    \ Failed at /tmp/tmp5m57w1mt.jl:31\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 256 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp5m57w1mt.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp5m57w1mt.jl:28\ntest set: Error\
    \ During Test at /tmp/tmp5m57w1mt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(31.359999999999996)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5m57w1mt.jl:22\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5m57w1mt.jl:32 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5m57w1mt.jl:28\ntest set:\
    \ Error Durin"
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    #println(lst)\n    s = 0.0\n    for i in 0 : (length(lst) - 1) \n    \
    \    s = s + lst[i]*lst[i] \n    end\n    return round(s)\nend\n</cell>\n<code\
    \ language=julia-1.5>\nsum_squares(lst)\n</cell>\n<code language=julia-1.5>\n\
    sum_squares(lst)\n</cell>\n<text>\n\u0417\u0430\u0434\u0430\u043D\u0438\u0435\
    \ 2\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpquls2ala.jl:26\nin expression starting at\
    \ /tmp/tmpquls2ala.jl:26\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst \n        x := round(Int, i)\n        y := round(Int, i)\n\
    \        sum += x*x\n        sum += y*y\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unsupported assignment operator \":=\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpz7uwakbf.jl:1\nin expression starting at /tmp/tmpz7uwakbf.jl:1\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum = sum + i**2\n    end\n    return\
    \ sum\nend\n</code>\nThis way the function will return the correct output no matter\
    \ what inputs you give it (except it will break if you give it a Vector of integers\
    \ instead of a Vector of Float64 numbers)\n<|/ a dscore=3 tags=julia,vector,types\
    \ |>\n<| c |>\nThis is the best answer. The other answers are all overly complicated\
    \ (like using sum and sumsq). Just use the sum() function. You don't even have\
    \ to wrap the function in an if statement.\n<|/ c |>\n<| a |>\nMy answer is\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps3o5trqg.jl:21\nin expression starting at /tmp/tmps3o5trqg.jl:21\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(x.^2 for x in lst)\nend \n</cell>\n<code language=julia-1.0>\n\
    @assert sum_squares([1.0, 2.0, 3.0]) == 14\n@assert sum_squares([1.0, 4.0, 9.0])\
    \ == 98\n@assert sum_squares([1.0, 3.0, 5.0, 7.0]) == 84\n@assert sum_squares([1.4,\
    \ 4.2, 0.0]) == 29\n@assert sum_squares([-2.4, 1.0, 1.0]) == 6\n</cell>\n<text>\n\
    Problem 9 (Solution)\nNow implement the function sum_squares_approx which calculates\
    \ the exact sum of squares. You will need to write an expression for the summation\
    \ explicitly, and then use an optimization technique to solve it. You will need\
    \ to use an expression similar to the one that you have already used to implement\
    \ sum_squares(). You may find it useful to use a matrix representation to help\
    \ you solve these kind of problems.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbhxgrr8p.jl:21\nin expression starting at\
    \ /tmp/tmpbhxgrr8p.jl:21\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(map(x -> round(x * x), lst))\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpufymztmm.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpufymztmm.jl:29\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpufymztmm.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpufymztmm.jl:25\ntest set: Test Failed at /tmp/tmpufymztmm.jl:30\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufymztmm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufymztmm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpufymztmm.jl:33\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpufymztmm.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpufymztmm.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpufymztmm.jl:34\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1075 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpufymztmm.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpufymztmm.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for i in lst\n        sum_ += i^2\n    end\n    return sum_\n\
    end\n</cell>\n<code language=julia-0.6>\nsum_squares(lst)\n</cell>\n<text>\nProblem\
    \ 7: Write a function that takes in a list of numbers and returns the average.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4656h9bl.jl:25\nin expression starting at\
    \ /tmp/tmp4656h9bl.jl:25\n"
  stdout: ''
  timestamp: 1660015447
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"\n    Your function should return the sum of squared numbers in\
    \ the given vector,\n    round each element in the vector to the upper int(Ceiling)\
    \ first.\n    \"\"\"\n    \n    sum = 0.0\n    for n in lst\n        sum = sum\
    \ + round(Float64(n)) ** 2\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpgh62citi.jl:26\nin expression starting at /tmp/tmpgh62citi.jl:26\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"\n    Sum of the squares of the elements in a vector.\n    \"\"\"\
    \n    \n    return sum(map(x -> round(x^2, ceiling), lst))\nend\n</cell>\n<code\
    \ language=julia-0.6>\nsum_squares(lst)\n</cell>\n<text>\n(2) Sum all elements\
    \ in a vector and square\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfmy3gr9v.jl:25\nin expression starting at\
    \ /tmp/tmpfmy3gr9v.jl:25\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum(map(x -> pow(x, 2), lst))\nend\n  \n\"\"\"\nYou are given a vector of\
    \ numbers. You need to find the product of \nnumbers in the vector. Remember that\
    \ product of negative numbers is \nnot defined. If there is more than one product\
    \ of any number, \nreturn the  largest.\nExamples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    6\n    >>> lst([1.0, 4.0, 9.0])\n    18.0\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    54.0\n    >>> lst([1.4, 4.2, 0.0])\n    0.2\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    4.0\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpr_ectm6f.jl:22\nin expression starting at /tmp/tmpr_ectm6f.jl:22\n"
  stdout: ''
  timestamp: 1660015449
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_sq = sum([x^2 for x in lst])\n    return round(sum_sq, Int(ceil))\n\
    end\n\"\"\"\n    Define a function that returns a vector of numbers such that\
    \ each element in the vector is the square root of its corresponding elements\
    \ in the given vector. \n    \n    Examples:\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    [-0.7071067811865475, 1.4142135623730951, 3.316624790356452, 2.0]\n    >>>\
    \ lst([1.0, -2.4, 1.0])\n    [1.0, 2.8284271247461903, 2.8284271247461903, 3.316624790356452]\n\
    \    >>> lst([-1.2, 2.4, -3.1])\n    [1.4142135623730951, 3.316624790356452, 3.316624790356452,\
    \ 4.0]\n    >>> lst([2.4, 2.4, 2.4])\n    [1.0, 4.0, 9.0]\n    >>> lst([2.4, 2.4,\
    \ 2.4, 2.4])\n    [1.0, 4.0, 9.0, 19.0]\n    \nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcqfw_qyn.jl:22\nin expression starting at\
    \ /tmp/tmpcqfw_qyn.jl:22\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    map(x -> round(x, ceiling(x)), lst)\n    for x in lst\n \
    \       sum = sum + x^2\n    end\n    sum\nend\n</cell>\n<text>\n4.3 Exercise:\
    \ Create a function which calculates and returns the average value of the given\
    \ list of numbers.\nFor a list of numbers:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_m6gu798.jl:26\nin expression starting at\
    \ /tmp/tmp_m6gu798.jl:26\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    if length(lst) == 0 \n        return 0 \n    else \n        sum\
    \ = 0\n        for i in lst\n            sum += i * i \n    end\n    \n    return\
    \ sum \nend\n</cell>\n<code language=julia-1.3>\nsum_squares(vec1)\n</cell>\n\
    <code language=julia-1.3>\nsum_squares(vec2)\n</cell>\n<code language=julia-1.3>\n\
    sum_squares(vec3)\n</cell>\n<code language=julia-1.3>\nsum_squares(vec4)\n</cell>\n\
    <code language=julia-1.3>\nsum_squares(vec5)\n</cell>\n<code language=julia-1.3>\n\
    sum_squares(vec6)\n</cell>\n<code language=julia-1.3>\nsum_squares(vec7)\n</cell>\n\
    <text>\nProblem 3: Write a function that returns the minimum of a given vector.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkhkmvgzq.jl:30\nin expression starting at\
    \ /tmp/tmpkhkmvgzq.jl:30\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst\n        sum=sum+i^2\n    end\n    return sum\n\
    end #sum_squares\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp51nj2b64.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp51nj2b64.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp51nj2b64.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp51nj2b64.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp51nj2b64.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp51nj2b64.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp51nj2b64.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp51nj2b64.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp51nj2b64.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp51nj2b64.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp51nj2b64.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp51nj2b64.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp51nj2b64.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x*x\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpbf2fal45.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpbf2fal45.jl:1\n\
    in expression starting at /tmp/tmpbf2fal45.jl:1\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpvd0numyy.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpvd0numyy.jl:26\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 6 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpvd0numyy.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpvd0numyy.jl:25\ntest set: Test Failed at /tmp/tmpvd0numyy.jl:27\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 6 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvd0numyy.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvd0numyy.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpvd0numyy.jl:28\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 16 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpvd0numyy.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpvd0numyy.jl:25\ntest set: Error\
    \ During Test at /tmp/tmpvd0numyy.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(5.6)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpvd0numyy.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpvd0numyy.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpvd0numyy.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp"
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"Solution 1: Using a loop\"\"\"\n    sum = 0\n    for i in lst\n\
    \        sum += i^2\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmplx838qq7.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmplx838qq7.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmplx838qq7.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmplx838qq7.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmplx838qq7.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplx838qq7.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmplx838qq7.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmplx838qq7.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmplx838qq7.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplx838qq7.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmplx838qq7.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmplx838qq7.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmplx838qq7.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for elt in lst\n        sum_ = elt .* elt\n    end\n   \
    \ return sum_\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 8 failed, 2 errored,
    0 broken.

    in expression starting at /tmp/tmpyj5bnc_5.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpyj5bnc_5.jl:30\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpyj5bnc_5.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpyj5bnc_5.jl:29\ntest set: Test Failed at /tmp/tmpyj5bnc_5.jl:31\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj5bnc_5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj5bnc_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyj5bnc_5.jl:32\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 49 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj5bnc_5.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj5bnc_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyj5bnc_5.jl:33\n  Expression: candidate([1.4, 4.2, 0.0]) ==\
    \ 29\n   Evaluated: 0 == 29\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj5bnc_5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj5bnc_5.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpyj5bnc_5.jl:34\n  Expression: candidate([-2.4, 1.0, 1.0])\
    \ == 6\n   Evaluated: 1 == 6\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ "
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in 0..(lst.length-1) \n        sum+=lst[i]*lst[i]\n \
    \   return sum\nend\n</cell>\n<code language=julia-0.6>\n\"\"\"\nYou are given\
    \ a vector of numbers.\n    You need to return the sum of squared numbers in the\
    \ given vector,\n    round to the nearest int.\n    Examples:\n    >>> lst([1.0,\
    \ 2.0, 3.0])\n    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0,\
    \ 3.0, 5.0, 7.0])\n    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4,\
    \ 1.0, 1.0])\n    6\n    \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpk4l5pm00.jl:24\nin expression starting at\
    \ /tmp/tmpk4l5pm00.jl:24\n"
  stdout: ''
  timestamp: 1660015448
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return (lst...).^2 # list comprehension\nend \nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpmg8_bubr.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ literal_pow(::typeof(^), ::Float64, ::Float64, ::Float64, ::Val{2})\n  Closest\
    \ candidates are:\n    literal_pow(::typeof(^), ::Union{Float32, Float64, Int16,\
    \ Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8, Complex{<:Union{Float32,\
    \ Float64, Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}}, Rational{<:Union{Float32,\
    \ Float64, Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}}}, !Matched::Val{0})\
    \ at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:310\n    literal_pow(::typeof(^),\
    \ ::Union{Float32, Float64, Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64,\
    \ UInt8, Complex{<:Union{Float32, Float64, Int16, Int32, Int64, Int8, UInt16,\
    \ UInt32, UInt64, UInt8}}, Rational{<:Union{Float32, Float64, Int16, Int32, Int64,\
    \ Int8, UInt16, UInt32, UInt64, UInt8}}}, !Matched::Val{1}) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:311\n\
    \    literal_pow(::typeof(^), ::Union{Float32, Float64, Int16, Int32, Int64, Int8,\
    \ UInt16, UInt32, UInt64, UInt8, Complex{<:Union{Float32, Float64, Int16, Int32,\
    \ Int64, Int8, UInt16, UInt32, UInt64, UInt8}}, Rational{<:Union{Float32, Float64,\
    \ Int16, Int32, Int64, Int8, UInt16, UInt32, UInt64, UInt8}}}, !Matched::Val{2})\
    \ at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:312\n    ...\n  Stacktrace:\n\
    \    [1] _broadcast_getindex_evalf\n      @ ./broadcast.jl:670 [inlined]\n   \
    \ [2] _broadcast_getindex\n      @ ./broadcast.jl:643 [inlined]\n    [3] getindex\n\
    \      @ ./broadcast.jl:597 [inlined]\n    [4] copy\n      @ ./broadcast.jl:875\
    \ [inlined]\n    [5] materialize(bc::Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{0},\
    \ Nothing, typeof(Base.literal_pow), Tuple{Base.RefValue{typeof(^)}, Float64,\
    \ Float64, Float64, Base.RefValue{Val{2}}}})\n      @ Base.Broadcast ./broadcast.jl:860\n\
    \    [6] sum_squares(lst::Vector{Float64})\n      @ Main /tmp/tmpmg8_bubr.jl:19\n\
    \    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    lst.round\n    return sum(map(sq, lst))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmptx3cbef_.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmptx3cbef_.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field round\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmptx3cbef_.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptx3cbef_.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptx3cbef_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptx3cbef_.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field round\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmptx3cbef_.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptx3cbef_.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptx3cbef_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptx3cbef_.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  type Array has no field round\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmptx3cbef_.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmptx3cbef_.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmptx3cbef_.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptx3cbef_.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  type Array has no field round\n  S"
  timestamp: 1660015451
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    #print(lst)\n    sum = 0\n    for x in lst\n        push!(sum, x*x)\n\
    \    end\n    \n    return sum(sum)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpna5673b_.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ push!(::Int64, ::Float64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpna5673b_.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna5673b_.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna5673b_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpna5673b_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching push!(::Int64,\
    \ ::Float64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpna5673b_.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpna5673b_.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpna5673b_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpna5673b_.jl:34\n  Te"
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_sqr = 0\n    for x in lst\n        sum_sqr += x^2\n    return round(sum_sqr)\n\
    end\n</cell>\n<code language=julia-1.0>\n@time sum_squares(A)\n</cell>\n<text>\n\
    5.2 Vectorized Computation of Square of Vector Elements\nThe previous section\
    \ involved for loops and iterating through the elements of a vector to compute\
    \ the square of each element. While this approach may be slow for larger arrays,\
    \ it scales much better to large vectors and arrays than to iterating through\
    \ each element and computing the square individually.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfcr2s4ty.jl:24\nin expression starting at\
    \ /tmp/tmpfcr2s4ty.jl:24\n"
  stdout: ''
  timestamp: 1660015449
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n \n    sum=0\n    for i in lst\n        sum+=i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpo2cingzx.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpo2cingzx.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpo2cingzx.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo2cingzx.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo2cingzx.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpo2cingzx.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpo2cingzx.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo2cingzx.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo2cingzx.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpo2cingzx.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpo2cingzx.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpo2cingzx.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpo2cingzx.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n \n    for i in lst \n        j = ceil(i); return i + j\n    end\n    return\
    \ 0\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpew5jiabm.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpew5jiabm.jl:30\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 2 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpew5jiabm.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpew5jiabm.jl:29\ntest set: Test Failed at /tmp/tmpew5jiabm.jl:31\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 2 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew5jiabm.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew5jiabm.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpew5jiabm.jl:32\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 2 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpew5jiabm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpew5jiabm.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpew5jiabm.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(3.4)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpew5jiabm.jl:21\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpew5jiabm.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpew5jiabm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpe"
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n \n    for i in lst\n        i=round(i)\n        i=i+i\n        i=i+i\n  \
    \  end\n    sum_squares=i\n    return sum_squares\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp29ywcjku.jl:30

    '
  stdout: "test set: Error During Test at /tmp/tmp29ywcjku.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: i not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp29ywcjku.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp29ywcjku.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp29ywcjku.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp29ywcjku.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp29ywcjku.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp29ywcjku.jl:34 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp29ywcjku.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp29ywcjku.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp29ywcjku.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp29ywcjku.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp29ywcjku.jl:32\ntest set:\
    \ Error During Test at /tmp/tmp29ywcjku.jl:36\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: i not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp29ywcjku.jl:25\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptskq6q11.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptskq6q11.jl:1\n\
    in expression starting at /tmp/tmptskq6q11.jl:1\n"
  stdout: ''
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    sum=0\n    for element in lst \n        sum+=element*element\n \
    \   end\n    return sum\nend\n</cell>\n<text>\nTask 4\nWrite a function to count\
    \ the number of nonnegative integers less than or equal to a given value.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp48418fgd.jl:26\nin expression starting at\
    \ /tmp/tmp48418fgd.jl:26\n"
  stdout: ''
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for i in lst\n        sum_+=(i*i)\n    return sum_\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp98tbjtqt.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp98tbjtqt.jl:1\n\
    in expression starting at /tmp/tmp98tbjtqt.jl:1\n"
  stdout: ''
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.\n    for ele in lst\n        sum += ele^2\n    \n    return round(sum,\
    \ ceiling)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpg3pvqo0u.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpg3pvqo0u.jl:1\n\
    in expression starting at /tmp/tmpg3pvqo0u.jl:1\n"
  stdout: ''
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum = sum + i^2\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmprld3am8b.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmprld3am8b.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmprld3am8b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprld3am8b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmprld3am8b.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmprld3am8b.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmprld3am8b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmprld3am8b.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmprld3am8b.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015448
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n=length(lst)\n    sum=0\n    for i=1:n\n        sum=sum+lst[i]^2\n  \
    \  end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjhye59qg.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpjhye59qg.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpjhye59qg.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpjhye59qg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpjhye59qg.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpjhye59qg.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpjhye59qg.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for x in lst\n        sum = sum + x^2\n    end\n    \n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpw7pbxndu.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpw7pbxndu.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpw7pbxndu.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw7pbxndu.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw7pbxndu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpw7pbxndu.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpw7pbxndu.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw7pbxndu.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw7pbxndu.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpw7pbxndu.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpw7pbxndu.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpw7pbxndu.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpw7pbxndu.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for num in lst \n        sum += num^2 \n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpbmjrxwvl.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpbmjrxwvl.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpbmjrxwvl.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbmjrxwvl.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbmjrxwvl.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbmjrxwvl.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpbmjrxwvl.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbmjrxwvl.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbmjrxwvl.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpbmjrxwvl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpbmjrxwvl.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpbmjrxwvl.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpbmjrxwvl.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += (x^2)\n    end\n    return sum\n\
    end \n</code>\n<|/ a dscore=2 tags=julia,function,arrays,arraylist |>\n<| a dscore=1\
    \ tags=julia,function,arrays,arraylist |>\nThe sum of squares is  equal to sum([x^2\
    \ for x in lst])\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp6oab1jx.jl:25\nin expression starting at\
    \ /tmp/tmpp6oab1jx.jl:25\n"
  stdout: ''
  timestamp: 1660015450
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(x * x for x in lst)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0h2iewzq.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp0h2iewzq.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp0h2iewzq.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0h2iewzq.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0h2iewzq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0h2iewzq.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp0h2iewzq.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0h2iewzq.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0h2iewzq.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp0h2iewzq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp0h2iewzq.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0h2iewzq.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0h2iewzq.jl:25\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst\n        sum+=i*i\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpv8w7p21l.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpv8w7p21l.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpv8w7p21l.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpv8w7p21l.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpv8w7p21l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv8w7p21l.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpv8w7p21l.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpv8w7p21l.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpv8w7p21l.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv8w7p21l.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpv8w7p21l.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpv8w7p21l.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpv8w7p21l.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x->round(x*x), lst))\nend # function sum_squares(lst::Vector{Float64})\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpwc30705l.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpwc30705l.jl:29\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwc30705l.jl:29 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwc30705l.jl:25\ntest set: Test Failed at /tmp/tmpwc30705l.jl:30\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc30705l.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc30705l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwc30705l.jl:33\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpwc30705l.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpwc30705l.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpwc30705l.jl:34\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1075 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpwc30705l.jl:34 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpwc30705l.jl:25\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(sq, lst))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpwo1b3wvr.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpwo1b3wvr.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: sq not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwo1b3wvr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwo1b3wvr.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwo1b3wvr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwo1b3wvr.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: sq not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwo1b3wvr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwo1b3wvr.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwo1b3wvr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwo1b3wvr.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: sq not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwo1b3wvr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwo1b3wvr.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwo1b3wvr.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpwo1b3wvr.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: sq not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwo1b3wvr.jl:19\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/j"
  timestamp: 1660015454
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x -> round(x*x, 1), lst))\nend\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 2.0, 3.0])\n</cell>\n<text>\nPart 2: List comprehension\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwtfcwskx.jl:21\nin expression starting at\
    \ /tmp/tmpwtfcwskx.jl:21\n"
  stdout: ''
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in 1:length(lst)\n        lst[i] = round(Int64, lst[i]^2)\n    end\n\
    \    \n    return sum(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw4e5akyo.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpw4e5akyo.jl:33\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw4e5akyo.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw4e5akyo.jl:29\ntest set: Test Failed at /tmp/tmpw4e5akyo.jl:34\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4e5akyo.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4e5akyo.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw4e5akyo.jl:37\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw4e5akyo.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw4e5akyo.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpw4e5akyo.jl:38\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1075 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw4e5akyo.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw4e5akyo.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\tsum=0\n\tfor i in lst\n\t\tsum+=i*i\n\t\n\treturn sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpwbxgszu0.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpwbxgszu0.jl:1\n\
    in expression starting at /tmp/tmpwbxgszu0.jl:1\n"
  stdout: ''
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n=length(lst)\n    sum=0\n    for i=1:n\n        sum=sum+lst[i]^2\n  \
    \  end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpjhye59qg.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpjhye59qg.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpjhye59qg.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpjhye59qg.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpjhye59qg.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpjhye59qg.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpjhye59qg.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpjhye59qg.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpjhye59qg.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015451
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = 0.0\n    for num in lst\n        s = s + num*num\n    return roundToInt(s)\n\
    end\n</cell>\n<code language=julia-1.6>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbn9e0hc0.jl:24\nin expression starting at\
    \ /tmp/tmpbn9e0hc0.jl:24\n"
  stdout: ''
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for v in lst\n        sum+=v*v\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5rlcrozk.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp5rlcrozk.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5rlcrozk.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5rlcrozk.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5rlcrozk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5rlcrozk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp5rlcrozk.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5rlcrozk.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5rlcrozk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5rlcrozk.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5rlcrozk.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5rlcrozk.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5rlcrozk.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum_squares=0\n  for item in lst\n    sum_squares+=item*item\n  end\n  return\
    \ sum_squares\nend\n</code>\n<|/ a |>\n<| c |>\nThank you so much for your help\
    \ and for explaining your code and what it does in simple words. I understand\
    \ that your code is shorter than mine, but I do have another concern; I'm relatively\
    \ new to coding and my teacher told us to always try to keep it as simple as possible\
    \ in order to learn new things. However, I understand that your code is way more\
    \ efficient than mine.\n<|/ c |>\n<| c |>\nOkay, I understand your concern. My\
    \ teacher just told me to try my hand in coding before taking a class. He always\
    \ said that we should try to keep it as simple as possible, but I also agree that\
    \ it's probably more efficient. I'll keep your advice in mind next time I meet\
    \ somebody who's going to use my code. Thanks again for your help!\n<|/ c |>\n\
    <| c |>\n`@user1890121`: Yes, I believe you were right to not use `@` while writing\
    \ a comment. `@user1890121`: Glad to help. But I recommend you to read more about\
    \ [Julia](https://docs.julialang.org/en/v1/)?\n<|/ c |>\n<| c |>\nThank you for\
    \ pointing me towards Julia! I definitely will and I already did. I just want\
    \ to make it more efficient so that I don't have to redo it again and again.\n\
    <|/ c |>\n<| a |>\nThe basic structure of this solution is as follows:\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp63nrqxyx.jl:25\nin expression starting at\
    \ /tmp/tmp63nrqxyx.jl:25\n"
  stdout: ''
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(x->round(x*x,digits=ceiling(x)),lst)\nend \nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp9pczis5d.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp9pczis5d.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: ceiling not\
    \ defined\n  Stacktrace:\n    [1] (::var\"#1#2\")(x::Float64)\n      @ Main /tmp/tmp9pczis5d.jl:19\n\
    \    [2] _mapreduce(f::var\"#1#2\", op::typeof(Base.add_sum), #unused#::IndexLinear,\
    \ A::Vector{Float64})\n      @ Base ./reduce.jl:410\n    [3] _mapreduce_dim\n\
    \      @ ./reducedim.jl:330 [inlined]\n    [4] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n    [5] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n    [6]\
    \ #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n    [7] _sum\n      @ ./reducedim.jl:894\
    \ [inlined]\n    [8] #sum#739\n      @ ./reducedim.jl:890 [inlined]\n    [9] sum\n\
    \      @ ./reducedim.jl:890 [inlined]\n   [10] sum_squares(lst::Vector{Float64})\n\
    \      @ Main /tmp/tmp9pczis5d.jl:19\n   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp9pczis5d.jl:26 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp9pczis5d.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp9pczis5d.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: ceiling not defined\n  Stacktrace:\n\
    \    [1] (::var\"#1#2\")(x::Float64)\n      @ Main /tmp/tmp9pczis5d.jl:19\n  \
    \  [2] _mapreduce(f::var\"#1#2\", op::typeof(Base.add_sum), #unused#::IndexLinear,\
    \ A::Vector{Float64})\n      @ Base ./reduce.jl:410\n    [3] _mapreduce_dim\n\
    \      @ ./reducedim.jl:330 [inlined]\n    [4] #mapreduce#731\n      @ ./reducedim.jl:322\
    \ [inlined]\n    [5] mapreduce\n      @ ./reducedim.jl:322 [inlined]\n    [6]\
    \ #_sum#741\n      @ ./reducedim.jl:894 [inlined]\n    [7] _sum\n      @ ./reducedim.jl:894\
    \ [inlined]\n    [8] #sum#739\n      @ ./reducedim.jl:890 [inlined]\n    [9] sum\n\
    \      @ ./reducedim.jl:890 [inlined]\n   [10] sum_squares(lst::Vector{Float64})\n\
    \      @ Main /tmp/tmp9pczis5d.jl:19\n   [11] macro expansion\n      @ ~"
  timestamp: 1660015454
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"\n    \n    \"\"\"\n    if length(lst) == 0 \n        return 0 \n\
    \    sum_squares = 0\n    for i in lst\n        sum_squares += i * i \n    end\n\
    \    return sum_squares\nend\n</cell>\n<text>\nQuestion 4: Write a function called\
    \ square_mean that returns the mean of the elements of lst.  It should round the\
    \ returned value to the upper(int(ceil(Int64)) first.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqzh75ty2.jl:30\nin expression starting at\
    \ /tmp/tmpqzh75ty2.jl:30\n"
  stdout: ''
  timestamp: 1660015452
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    #assert(all(isa(lst, Vector{Float64})), \n    #    \"lst should be a vector\
    \ of Float64\")\n    total = 0\n    \n    for i in lst\n        total += i^2\n\
    \    end\n    return total\nend\n</cell>\n<code language=julia-1.0>\nlst([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<code language=julia-1.0>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code\
    \ language=julia-1.0>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.0>\n\
    sum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.0>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nExercise: Write a function called sum_of_squares\
    \ that returns the sum of squares of any number.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc62eevp8.jl:28\nin expression starting at\
    \ /tmp/tmpc62eevp8.jl:28\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    #@assert lst.ndim == 1 \"Error: List must have 1 dimension.\"\n    sum\
    \ = 0\n    for i in lst\n        sum = sum + i^2\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpjn9zaesu.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpjn9zaesu.jl:1\n\
    in expression starting at /tmp/tmpjn9zaesu.jl:1\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    length = length(lst)\n    for i in 1:length\n        sum\
    \ += lst[i]^2\n    end\n    return sum\nend\nsum_squares(lst)\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: lst not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpqsaubbky.jl:26\nin expression starting at /tmp/tmpqsaubbky.jl:26\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0.0\n    for i in lst\n        result += i * i\n    end\n   \
    \ return round(result)\nend\n</cell>\n<text>\nQuestion 2\nUsing sum_squares(lst,\
    \ round) defined above, return a vector with the square of all elements in lst.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp64wmsobt.jl:25\nin expression starting at\
    \ /tmp/tmp64wmsobt.jl:25\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n = 0\n    for x in lst\n        n += x.^2 \n    end\n    return n\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpm4s3t6hl.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpm4s3t6hl.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpm4s3t6hl.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4s3t6hl.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4s3t6hl.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm4s3t6hl.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpm4s3t6hl.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4s3t6hl.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4s3t6hl.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpm4s3t6hl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpm4s3t6hl.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpm4s3t6hl.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpm4s3t6hl.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015455
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum = sum + i ** 2\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpssst_0ir.jl:21\nin expression starting at /tmp/tmpssst_0ir.jl:21\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    a=1\n    sum=0\n    for i in lst\n        a=a*i\n        sum=sum+a\n \
    \   end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2ifkfk7l.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmp2ifkfk7l.jl:32\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2ifkfk7l.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2ifkfk7l.jl:31\ntest set: Test Failed at /tmp/tmp2ifkfk7l.jl:33\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 9 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ifkfk7l.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ifkfk7l.jl:31\ntest set: Test\
    \ Failed at /tmp/tmp2ifkfk7l.jl:34\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 124 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2ifkfk7l.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2ifkfk7l.jl:31\ntest set: Error\
    \ During Test at /tmp/tmp2ifkfk7l.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(7.279999999999999)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp2ifkfk7l.jl:25\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2ifkfk7l.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2ifkfk7l.jl:31\ntest set:\
    \ Error During T"
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x*x\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpmfuoo5q4.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpmfuoo5q4.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpmfuoo5q4.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmfuoo5q4.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmfuoo5q4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmfuoo5q4.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpmfuoo5q4.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmfuoo5q4.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmfuoo5q4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpmfuoo5q4.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpmfuoo5q4.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpmfuoo5q4.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpmfuoo5q4.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015455
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0.0\n    for i in lst\n        result += i^2 \n    end\n    return\
    \ result\nend\n</cell>\n<text>\nNow let's try it out:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9ux3hfg5.jl:25\nin expression starting at\
    \ /tmp/tmp9ux3hfg5.jl:25\n"
  stdout: ''
  timestamp: 1660015453
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = sum(lst*lst)\n    return s\nend\n    \nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: ''
  stdout: 'test set: '
  timestamp: 1660015457
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sqsum = 0\n    for elt in lst\n        sqsum = sqsum + elt * elt\n   \
    \ end\n    return round(sqsum, digits)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmppb49hccb.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ round(::Float64, ::typeof(digits))\n  Closest candidates are:\n    round(::T,\
    \ !Matched::RoundingMode{:NearestTiesUp}) where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    round(::Float64, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:374\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmppb49hccb.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppb49hccb.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppb49hccb.jl:29\ntest set:\
    \ Error During Test at /tmp/tmppb49hccb.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching round(::Float64,\
    \ ::typeof(digits))\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    round(::Float64, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:374\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmppb49hccb.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppb49hccb.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppb49hccb.jl:29\ntest set:\
    \ Error During Test at /tm"
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst)==0\n        return 0;\n    end\n    \n    sum_of_squares\
    \ = 0\n    for x in lst\n        sum_of_squares += (x^2)\n    end\n    return\
    \ sum_of_squares\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_8jwv8fe.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp_8jwv8fe.jl:37\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp_8jwv8fe.jl:27\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_8jwv8fe.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_8jwv8fe.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_8jwv8fe.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp_8jwv8fe.jl:27\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_8jwv8fe.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_8jwv8fe.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp_8jwv8fe.jl:41\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp_8jwv8fe.jl:27\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_8jwv8fe.jl:41 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_8jwv8fe.jl:33\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015455
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for n in lst\n        sum += n*n\n    end\n    return round(sum,\
    \ digits(Float64))\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmptcn__e0d.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ digits(::Type{Float64})\n  Closest candidates are:\n    digits(!Matched::Integer;\
    \ base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n    digits(!Matched::Type{<:Integer},\
    \ !Matched::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptcn__e0d.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptcn__e0d.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptcn__e0d.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptcn__e0d.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching digits(::Type{Float64})\n\
    \  Closest candidates are:\n    digits(!Matched::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched::Type{<:Integer}, !Matched::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:857\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptcn__e0d.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptcn__e0d.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptcn__e0d.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptcn__e0d.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  MethodError: no method matching digits(::Type{Float64})\n\
    \  Closest candidates are:\n    digits(!Matched::Integer; base, pad) at ~/.conda/envs/polyglot/share/julia/base/intfuncs.jl:854\n\
    \    digits(!Matched"
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    total = 0\n    for i in 0..(length(lst)-1) do \n        total += lst[i]^2\
    \  \n    end\n    return total\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid \"do\" syntax\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8kd90nbq.jl:20\nin expression starting at /tmp/tmp8kd90nbq.jl:20\n"
  stdout: ''
  timestamp: 1660015454
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<text>\nQuestion 5\nImplement the function is_divisible that takes\
    \ a list of numbers a\n    and a number b as arguments and checks if b is a divisor\
    \ of a,\n    then returns the index of the first element in the list which is\
    \ not divisible by b.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfi0cweah.jl:25\nin expression starting at\
    \ /tmp/tmpfi0cweah.jl:25\n"
  stdout: ''
  timestamp: 1660015454
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return Int64(reduce(+,map(round,lst))^2)\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmprrveo_c_.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmprrveo_c_.jl:1\n\
    in expression starting at /tmp/tmprrveo_c_.jl:1\n"
  stdout: ''
  timestamp: 1660015454
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<text>\nExercise\nExercise: Write a function with two parameters,\
    \ a vector and the number of elements. \nThis function should return an integer\
    \ with the number of elements rounded up to the next integer.\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphgw_nytw.jl:25\nin expression starting at\
    \ /tmp/tmphgw_nytw.jl:25\n"
  stdout: ''
  timestamp: 1660015454
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return (lst*lst).sum()\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmpfzqbi0mv.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ *(::Vector{Float64}, ::Vector{Float64})\n  Closest candidates are:\n    *(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/operators.jl:655\n\
    \    *(!Matched::StridedMatrix{T}, ::StridedVector{S}) where {T<:Union{Float32,\
    \ Float64, ComplexF32, ComplexF64}, S<:Real} at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/matmul.jl:44\n\
    \    *(::StridedVecOrMat, !Matched::LinearAlgebra.Adjoint{<:Any, <:LinearAlgebra.LQPackedQ})\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/lq.jl:266\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpfzqbi0mv.jl:19\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpfzqbi0mv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpfzqbi0mv.jl:25\n"
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_of_squares = 0\n    for i in lst\n        sum_of_squares += i^2\n\
    \    end\n    return sum_of_squares\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpan1hpwvy.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpan1hpwvy.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpan1hpwvy.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpan1hpwvy.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpan1hpwvy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpan1hpwvy.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpan1hpwvy.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpan1hpwvy.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpan1hpwvy.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpan1hpwvy.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpan1hpwvy.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpan1hpwvy.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpan1hpwvy.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015456
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: ''
  stdout: "test set: Error During Test at /tmp/tmp13r6ptz_.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp13r6ptz_.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp13r6ptz_.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp13r6ptz_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp13r6ptz_.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp13r6ptz_.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp13r6ptz_.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp13r6ptz_.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp13r6ptz_.jl:28\n"
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for i in 0..lst.len-1\n        sum += lst[i]*lst[i]\n \
    \   end\n    return sum\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"Write\
    \ a function that takes a number as input, and returns its factorial.\nExample:\
    \ \nfactorial(3) => 6\nfactorial(5) => 120\nfactorial(0) => 1\n\"\"\"\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq0mz97ew.jl:25\nin expression starting at\
    \ /tmp/tmpq0mz97ew.jl:25\n"
  stdout: ''
  timestamp: 1660015455
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst\n    square = i^2\n    return square\nend\n</code>\n<|/ a\
    \ dscore=0 |>\n<| c |>\nThe code does not run for me; I get errors on `Int64`\
    \ and `Float64`, and the function does not work either; it returns \"NoMethodError\"\
    .\n<|/ c |>\n<| c |>\nSorry - I did not test the code - it should work now\n<|/\
    \ c |>\n<| a dscore=0 tags=julia,performance,vectorization,loops |>\n<code>\n\
    julia> function sum_squares(lst::Vector{Float64})\n           squares = vcat(lst...)\n\
    \           sum(map(square, squares))\n       end\nsum_squares(::Array{Float64,1},\
    \ ::Array{Float64,1}) at none:0\nsum_squares(::Array{Float64,1}, ::Array{Float64,1})\
    \ at none:0\n</code>\n<|/ a |>\n<| a dscore=0 |>\nJust for fun, here's another\
    \ way to do it. It uses a combination of cat, map, and broadcasting and is quite\
    \ fast, but still uses twice the memory. If you're going to run a lot of these\
    \ in parallel, I'd recommend going the parallel solution if you can afford it.\n\
    <code>\njulia> function sum_squares(lst::Vector{Float64})\n           squares\
    \ = vcat(lst...)\n           sum(map(square, squares))\n       end\nsum_squares(::Array{Float64,1},\
    \ ::Array{Float64,1}) at none:0\nsum_squares(::Array{Float64,1}, ::Array{Float64,1})\
    \ at none:0\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphoyolbi3.jl:23\nin expression starting at\
    \ /tmp/tmphoyolbi3.jl:23\n"
  stdout: ''
  timestamp: 1660015455
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    res=0\n    for v in lst\n        res+=v^2\n    end\n    return res\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5gv5avzs.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp5gv5avzs.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5gv5avzs.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5gv5avzs.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5gv5avzs.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5gv5avzs.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp5gv5avzs.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5gv5avzs.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5gv5avzs.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp5gv5avzs.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5gv5avzs.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5gv5avzs.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5gv5avzs.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for e in lst\n        sum += e ^ 2\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp_zbumh94.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp_zbumh94.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp_zbumh94.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_zbumh94.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_zbumh94.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_zbumh94.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp_zbumh94.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_zbumh94.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_zbumh94.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp_zbumh94.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp_zbumh94.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp_zbumh94.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp_zbumh94.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0\n    for i in lst\n        result+=i^2\n    end\n    return\
    \ round(result)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa0joj0es.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpa0joj0es.jl:33\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa0joj0es.jl:33 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa0joj0es.jl:29\ntest set: Test Failed at /tmp/tmpa0joj0es.jl:34\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0joj0es.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0joj0es.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpa0joj0es.jl:37\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa0joj0es.jl:37 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa0joj0es.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpa0joj0es.jl:38\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa0joj0es.jl:38 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa0joj0es.jl:29\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    nr_elements = length(lst)\n    sum_of_squared_numbers = 0.\n    for element\
    \ in lst\n        sum_of_squared_numbers += element * element\n    return round(sum_of_squared_numbers,\
    \ nr_elements)\nend\n</cell>\n<cell>\nsum_squares(lst)\n</cell>\n<text>\nTask\
    \ 1.10: Write a function to compute the mean value of the given vector.\nFor this\
    \ task you should round the sum of the elements to integer.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4uel4gck.jl:25\nin expression starting at\
    \ /tmp/tmp4uel4gck.jl:25\n"
  stdout: ''
  timestamp: 1660015455
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return (sum((map(ceil,lst)).*lst))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp707bvcq3.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmp707bvcq3.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(23.8)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp707bvcq3.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp707bvcq3.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp707bvcq3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp707bvcq3.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(6.8)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp707bvcq3.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp707bvcq3.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp707bvcq3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp707bvcq3.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(68.5)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp707bvcq3.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp707bvcq3.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp707bvcq3.jl:25\ntest set:\
    \ Error During Test at /tmp/tmp707bvcq3.jl"
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_squares = 0.\n    for i in lst\n        sum_squares = sum_squares\
    \ + (i*i)\n    end\n    return round!(sum_squares)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmptotlzfa1.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmptotlzfa1.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: round! not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptotlzfa1.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptotlzfa1.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptotlzfa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptotlzfa1.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: round! not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptotlzfa1.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptotlzfa1.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptotlzfa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptotlzfa1.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: round! not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptotlzfa1.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptotlzfa1.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptotlzfa1.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptotlzfa1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: round! not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptotlzfa1.jl:23\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/"
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = 0.0\n    for x in lst\n        s = s + x*x\n    end\n    return round(s)\n\
    end\nsum_squares(lst)\n</cell>\n<code language=julia-0.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: lst not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp42sub8er.jl:25\nin expression starting at /tmp/tmp42sub8er.jl:25\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for elt in lst\n        sum+=elt * elt\n    end\n    return\
    \ round(sum,Ceil)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([2.0,\
    \ 1.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-4.0, 1.0, 1.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpupet3cq6.jl:25\nin expression starting at\
    \ /tmp/tmpupet3cq6.jl:25\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += (x*x)\n    end\n    return sum\n\
    end\n\"\"\"\n    Same as lst but takes a Float32 instead of Float64.\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphera9nwf.jl:25\nin expression starting at\
    \ /tmp/tmphera9nwf.jl:25\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = 0.0\n    for i in lst\n        s += i^2\n    return round(s)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpet0jds_t.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpet0jds_t.jl:1\n\
    in expression starting at /tmp/tmpet0jds_t.jl:1\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i=0:length(lst)-1\n        sum=sum+lst[i]*lst[i]\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpyckamzy7.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpyckamzy7.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  BoundsError: attempt to access\
    \ 3-element Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n   \
    \  @ ./array.jl:861 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n    \
    \ @ Main /tmp/tmpyckamzy7.jl:21\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyckamzy7.jl:30 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyckamzy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyckamzy7.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  BoundsError: attempt to access 3-element\
    \ Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpyckamzy7.jl:21\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyckamzy7.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyckamzy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyckamzy7.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  BoundsError: attempt to access 4-element\
    \ Vector{Float64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861\
    \ [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpyckamzy7.jl:21\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpyckamzy7.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpyckamzy7.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyck"
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for a in lst\n        sum = sum + (a*a)\n    end\n    return\
    \ sum\nend\n</code>\n<|/ a dscore=1 |>\n<| a dscore=1 |>\nI like this way of doing\
    \ it:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp03pwvsa1.jl:25\nin expression starting at\
    \ /tmp/tmp03pwvsa1.jl:25\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst \n        sum=sum+i^2 \n    return sum\nend \n\
    sum_squares(lst)\n</cell>\n<code language=julia-0.6>\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpj77rxunh.jl:25\nin expression starting at\
    \ /tmp/tmpj77rxunh.jl:25\n"
  stdout: ''
  timestamp: 1660015456
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst) == 0 \n        return 0 \n    else \n        sum = 0\n\
    \        for i in lst \n            sum += i * i \n        return sum\n    end\n\
    end \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp6kr8m_qe.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6kr8m_qe.jl:1\n\
    in expression starting at /tmp/tmp6kr8m_qe.jl:1\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    sum = 0\n    for i in lst\n        sum += i**2\n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nLet's now try to test our code:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp0s38z336.jl:22\nin expression starting at /tmp/tmp0s38z336.jl:22\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n     \n    sum = sq = 0.0\n    for x in lst\n        sum += x * x\n      \
    \  sq += x\n    return round(sq, Int64), sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp174_n1ar.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp174_n1ar.jl:1\n\
    in expression starting at /tmp/tmp174_n1ar.jl:1\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n        \n    sum(map(x -> x^2, lst))\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpa1wkpfkj.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmpa1wkpfkj.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpa1wkpfkj.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa1wkpfkj.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa1wkpfkj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpa1wkpfkj.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpa1wkpfkj.jl:20\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa1wkpfkj.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa1wkpfkj.jl:26\ntest set:\
    \ Error During Test at /tmp/tmpa1wkpfkj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpa1wkpfkj.jl:20\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa1wkpfkj.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa1wkpfkj.jl:26\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015459
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.5>\n@assert sum_squares([1.0, 2.0, 3.0])\
    \ == 14\n@assert sum_squares([1.0, 4.0, 9.0]) == 98\n@assert sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n@assert sum_squares([1.4, 4.2, 0.0]) == 29\n@assert sum_squares([-2.4,\
    \ 1.0, 1.0]) == 6\n</cell>\n<text>\nExercise 5: Write a function to find the minimum\
    \ element of the given list\nExercise 5.1: Write a function that finds the minimum\
    \ element of a list\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1a4zkey5.jl:25\nin expression starting at\
    \ /tmp/tmp1a4zkey5.jl:25\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_vals=0 \n    for i in lst\n        sum_vals=sum_vals + i^2\n    end\n\
    \    return sum_vals\nend\n</cell>\n<text>\nWe see that the function is now working\
    \ as expected:\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_3pe4ga1.jl:25\nin expression starting at\
    \ /tmp/tmp_3pe4ga1.jl:25\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for x in lst\n        sum_ += x^2\n    end\n    return sum_\n\
    end\n</cell>\n<text>\nNow let's define the objective function and the gradient\
    \ (first derivative) of the function:\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3wd4h_cn.jl:25\nin expression starting at\
    \ /tmp/tmp3wd4h_cn.jl:25\n"
  stdout: ''
  timestamp: 1660015457
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n::Int64 = 0\n    for i in lst\n        n::Int64 += i^2\n    return round(n,digits)\n\
    end\nsum_squares(lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpkpen613o.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ round(::Int64, ::typeof(digits))\n  Closest candidates are:\n    round(::Integer,\
    \ !Matched::RoundingMode) at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:158\n\
    \    round(::Real) at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:129\n\
    \    round(::Real, !Matched::RoundingMode; digits, sigdigits, base) at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:129\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpkpen613o.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpen613o.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpen613o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpkpen613o.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching round(::Int64,\
    \ ::typeof(digits))\n  Closest candidates are:\n    round(::Integer, !Matched::RoundingMode)\
    \ at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:158\n    round(::Real)\
    \ at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:129\n    round(::Real,\
    \ !Matched::RoundingMode; digits, sigdigits, base) at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:129\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpkpen613o.jl:22\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkpen613o.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkpen613o.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpkpen613o.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == "
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\"\"\"Compute the sum of squares of numbers in the vector.\"\"\"\n    sum(map(Math::sqrt,\
    \ lst))\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmptllbd8b9.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmptllbd8b9.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: Math not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptllbd8b9.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptllbd8b9.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptllbd8b9.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptllbd8b9.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: Math not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptllbd8b9.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptllbd8b9.jl:28 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptllbd8b9.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptllbd8b9.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: Math not defined\n \
    \ Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptllbd8b9.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptllbd8b9.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptllbd8b9.jl:26\ntest set:\
    \ Error During Test at /tmp/tmptllbd8b9.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: Math not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmptllbd8b9.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot"
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    # your code goes here\n    #for i in lst do \n        \n    \n    for\
    \ i in lst\n        x = round(Float64(i))\n        y = round(Float64(i))\n   \
    \     z = x+y\n        return z\n    end\n    return 0\nend\n</cell>\n<text>\n\
    Exercise 10\nWrite a function that returns a vector of a given length containing\
    \ all the even numbers in the range. The even numbers are 2, 4, 6, 8 and so on.\
    \ Hint: use the function map!\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2ix2yreo.jl:31\nin expression starting at\
    \ /tmp/tmp2ix2yreo.jl:31\n"
  stdout: ''
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst\n        return i + i\n    end\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 7 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpczn6elp0.jl:25

    '
  stdout: "test set: Test Failed at /tmp/tmpczn6elp0.jl:28\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 2 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpczn6elp0.jl:28 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpczn6elp0.jl:27\ntest set: Test Failed at /tmp/tmpczn6elp0.jl:29\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 2 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczn6elp0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczn6elp0.jl:27\ntest set: Test\
    \ Failed at /tmp/tmpczn6elp0.jl:30\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 2 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpczn6elp0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpczn6elp0.jl:27\ntest set: Error\
    \ During Test at /tmp/tmpczn6elp0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(2.8)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpczn6elp0.jl:20\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpczn6elp0.jl:31 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpczn6elp0.jl:27\ntest set:\
    \ Error During Test at /tmp/tmpc"
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for x in lst\n        sum=sum+x^2\n    end\n    return sum\n\
    end\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp88r6m5af.jl:25\nin expression starting at\
    \ /tmp/tmp88r6m5af.jl:25\n"
  stdout: ''
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_val = 0\n    sum_square_sum = 0\n    for x in lst\n        sum_val\
    \ = sum_val + x\n        sum_square_sum = sum_square_sum + x**2\n    return sum_square_sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"x^y\" instead of \"x**y\" for exponentiation,\
    \ and \"x...\" instead of \"**x\" for splatting.\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwopbb0__.jl:23\nin expression starting at /tmp/tmpwopbb0__.jl:23\n"
  stdout: ''
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n = lst.len\n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpckmqp4t6.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpckmqp4t6.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field len\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmpckmqp4t6.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpckmqp4t6.jl:31 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckmqp4t6.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpckmqp4t6.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field len\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmpckmqp4t6.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpckmqp4t6.jl:32 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckmqp4t6.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpckmqp4t6.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  type Array has no field len\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmpckmqp4t6.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpckmqp4t6.jl:33 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpckmqp4t6.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpckmqp4t6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  type Array has no field len\n  Stacktrac"
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_of_squares = 0.\n    for x in lst\n        sum_of_squares += x * x\n\
    \    return sum_of_squares\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqpfucy5j.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqpfucy5j.jl:1\n\
    in expression starting at /tmp/tmpqpfucy5j.jl:1\n"
  stdout: ''
  timestamp: 1660015458
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n     return  sum( map( x -> round(sqrt(x)),lst))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: '
  stdout: "test set: Test Failed at /tmp/tmp8qsxnxbd.jl:26\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 4 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp8qsxnxbd.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp8qsxnxbd.jl:25\ntest set: Test Failed at /tmp/tmp8qsxnxbd.jl:27\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 4 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qsxnxbd.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qsxnxbd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8qsxnxbd.jl:28\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 8 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qsxnxbd.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qsxnxbd.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp8qsxnxbd.jl:29\n  Expression: candidate([1.4, 4.2, 0.0]) ==\
    \ 29\n   Evaluated: 3 == 29\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp8qsxnxbd.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp8qsxnxbd.jl:25\ntest set: Error\
    \ During Test at /tmp/tmp8qsxnxbd.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  DomainError with -2.4:\n  sqrt will only\
    \ return a complex result if called with a complex argument. Try sqrt(Complex(x)).\n\
    \  Stacktrace"
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    #assert(all(isfinite(lst)))\n    sum = 0\n    for x in lst\n        sum\
    \ = sum + x.^2\n    end\n    return sum\nend \nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp2rrbeowq.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp2rrbeowq.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp2rrbeowq.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2rrbeowq.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2rrbeowq.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2rrbeowq.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp2rrbeowq.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2rrbeowq.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2rrbeowq.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp2rrbeowq.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp2rrbeowq.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp2rrbeowq.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp2rrbeowq.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(map(x->sqrt(x), lst))\nend\n\"\"\"\n    \n\"\"\"\n    \n    \n\"\"\
    \"\n    \n    \n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmpfy39t74z.jl:26\nin expression starting at /tmp/tmpfy39t74z.jl:26\n"
  stdout: ''
  timestamp: 1660015459
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    \n    for i in lst\n        sum += i^2\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5l04s0ao.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5l04s0ao.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5l04s0ao.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5l04s0ao.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5l04s0ao.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5l04s0ao.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp5l04s0ao.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5l04s0ao.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5l04s0ao.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5l04s0ao.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5l04s0ao.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5l04s0ao.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5l04s0ao.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    # write your code in Python 3 or Python 2.7\n    # return sum((x for x\
    \ in lst)^2) \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpfurameil.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfurameil.jl:1\n\
    in expression starting at /tmp/tmpfurameil.jl:1\n"
  stdout: ''
  timestamp: 1660015458
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"sums the squares of all elements in the vector\"\"\"\n    sum =\
    \ 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpk01ml7yy.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpk01ml7yy.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpk01ml7yy.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpk01ml7yy.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpk01ml7yy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpk01ml7yy.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpk01ml7yy.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpk01ml7yy.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpk01ml7yy.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpk01ml7yy.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpk01ml7yy.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpk01ml7yy.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpk01ml7yy.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum = sum + (x.^2)\n    return sum\n\
    end\n</code>\n<|/ a dscore=0 |>\n<| a tags=julia |>\nSince you are new to Julia,\
    \ I recommend you read up on the docs, especially on how to vectorize computations.\
    \ \nYour example could be written as:\n<code>\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9x8hhfxg.jl:24\nin expression starting at\
    \ /tmp/tmp9x8hhfxg.jl:24\n"
  stdout: ''
  timestamp: 1660015459
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum(lst.*lst)\nend\n</code>\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nHere is\
    \ an iterative solution in Julia using iterators. First we define an iterator:\n\
    <code>\nusing Iterators\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpitdt2kr_.jl:21\nin expression starting at\
    \ /tmp/tmpitdt2kr_.jl:21\n"
  stdout: ''
  timestamp: 1660015459
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for v in lst\n        sum += v * v\n        \n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmptg3v83la.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmptg3v83la.jl:1\n\
    in expression starting at /tmp/tmptg3v83la.jl:1\n"
  stdout: ''
  timestamp: 1660015459
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum_ = 0\n  for n in lst\n    sum_ += n*n \n  end\n  return sum_\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpkrdo5bhw.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpkrdo5bhw.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpkrdo5bhw.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkrdo5bhw.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkrdo5bhw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkrdo5bhw.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpkrdo5bhw.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkrdo5bhw.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkrdo5bhw.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkrdo5bhw.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpkrdo5bhw.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpkrdo5bhw.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpkrdo5bhw.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst\n        sum += i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwiytj3g6.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpwiytj3g6.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpwiytj3g6.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwiytj3g6.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwiytj3g6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwiytj3g6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwiytj3g6.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwiytj3g6.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwiytj3g6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwiytj3g6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpwiytj3g6.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwiytj3g6.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwiytj3g6.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    sum_sq = 0.0\n    for ele in lst\n        sum_sq += ele\
    \ * ele\n        sum += Int(ele)\n    end\n    return round(sum_sq + sum)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpqkbbxrm_.jl:29

    '
  stdout: "test set: Test Failed at /tmp/tmpqkbbxrm_.jl:32\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 20 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqkbbxrm_.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqkbbxrm_.jl:31\ntest set: Test Failed at /tmp/tmpqkbbxrm_.jl:33\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 20 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkbbxrm_.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkbbxrm_.jl:31\ntest set: Test\
    \ Failed at /tmp/tmpqkbbxrm_.jl:34\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 100 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqkbbxrm_.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqkbbxrm_.jl:31\ntest set: Error\
    \ During Test at /tmp/tmpqkbbxrm_.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(1.4)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmpqkbbxrm_.jl:23\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqkbbxrm_.jl:35 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqkbbxrm_.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpqkbbxrm_.jl:36\n  Test threw exception\n  Exp"
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for i in lst \n        sum+=i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpd25fg2uj.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpd25fg2uj.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpd25fg2uj.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd25fg2uj.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd25fg2uj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd25fg2uj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpd25fg2uj.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd25fg2uj.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd25fg2uj.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpd25fg2uj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpd25fg2uj.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpd25fg2uj.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpd25fg2uj.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    lst.round()\n    sum((x * x).^2 for x in lst)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\nGiven a vector, return a new vector, where each element\nis squared-root\
    \ of original element.\n\"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3e3nk0zn.jl:22\nin expression starting at\
    \ /tmp/tmp3e3nk0zn.jl:22\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x -> round(x*x, digits=digits), lst))\nend\n</cell>\n<code\
    \ language=julia-0.6>\n\"\"\"\nWrite a function that returns the sum of the squares\
    \ of numbers in the given vector.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpolj8pifq.jl:21\nin expression starting at\
    \ /tmp/tmpolj8pifq.jl:21\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  result = 0.0\n  for i in lst\n      result += i*i\n  end\n  return round!(result)\n\
    end\n</cell>\n<cell>\n@assert sum_squares([1.0, 2.0, 3.0]) == 14\n@assert sum_squares([1.0,\
    \ 4.0, 9.0]) == 98\n@assert sum_squares([1.0, 3.0, 5.0, 7.0]) == 84\n@assert sum_squares([1.4,\
    \ 4.2, 0.0]) == 29\n@assert sum_squares([-2.4, 1.0, 1.0]) == 6\n</cell>\n<text>\n\
    Question 5\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpikbela2h.jl:25\nin expression starting at\
    \ /tmp/tmpikbela2h.jl:25\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0.\n    for i in lst\n        result = result + (i^2); \n   \
    \ return result\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzgf2ibeh.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzgf2ibeh.jl:1\n\
    in expression starting at /tmp/tmpzgf2ibeh.jl:1\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x -> round(x*x),lst))\nend\n</cell>\n<text>\nProblem 2.3\n\
    Write a function sum_cubes(lst::Vector{Float64})\nthat returns the sum of the\
    \ cubes of the numbers in the vector.\nExamples:\n>>> lst([1.0, 4.0, 9.0])\n144\n\
    >>> lst([1.0, 3.0, 5.0, 7.0])\n168\n>>> lst([1.0, 2.0, 3.0])\n14\n>>> lst([1.4,\
    \ 4.2, 0.0])\n30\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpov39qgt8.jl:21\nin expression starting at\
    \ /tmp/tmpov39qgt8.jl:21\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0 \n    for i in 0..(length(lst)-1) \n        sum += (lst[i]*lst[i])\
    \ \n    endfor \n    return sum \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppsurv1ky.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppsurv1ky.jl:1\n\
    in expression starting at /tmp/tmppsurv1ky.jl:1\n"
  stdout: ''
  timestamp: 1660015460
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0.\n    for number in lst\n        result += (number * number)\n\
    \    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpyx7ko_5c.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpyx7ko_5c.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpyx7ko_5c.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyx7ko_5c.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyx7ko_5c.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyx7ko_5c.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpyx7ko_5c.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyx7ko_5c.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyx7ko_5c.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpyx7ko_5c.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpyx7ko_5c.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpyx7ko_5c.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpyx7ko_5c.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for e in lst\n        sum=sum+e*e\n    return sum\nend\n\"\"\
    \"\n    Write a function that checks the validity of an expression.\n    Any input\
    \ that does not conform to the rules of the expression is invalid.\n    \n   \
    \ You may assume that each input is a valid expression (i.e. each expression can\
    \ have\n    valid expressions nested inside of it).\n    \n    The valid expressions\
    \ include +, -, *, and /.\n    \n    Examples:\n    >>> validity(+)\n    True\n\
    \    >>> validity(+(-(+((*(-2.0,2.0),2.0)))))\n    True\n    >>> validity(+(-(+((*(-2.0,2.0),2.0)))))\n\
    \    True\n    >>> validity((*(-(+((*(-2.0,2.0),2.0)),2.0)),2.0))\n    True\n\
    \    >>> validity((*(-(+((*(-2.0,2.0),2.0)),2.0)),2.0))\n    False\n    \n   \
    \ You can assume that all valid expressions have valid inputs as well.\n    \n\
    \    Example:\n    >>> validity((*(-(+((*(-2.0,2.0),2.0)),2.0)),2.0))\n    False\n\
    \    >>> validity(+(-(+((*(-2.0,2.0),2.0)),2.0)))\n    False\n    >>> validity(-(-(+((*(-2.0,2.0),2.0)),2.0)))\n\
    \    False\n    >>> validity((*(-(+((*(-2.0,2.0),2.0)),2.0)),2.0))\n    False\n\
    \    \n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpseubaubx.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpseubaubx.jl:1\n\
    in expression starting at /tmp/tmpseubaubx.jl:1\n"
  stdout: ''
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0 \n    for i in lst\n        sum = sum + i * i \n    end\n    round(sum)\n\
    end\n    \"\"\"\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxpt2o329.jl:25\nin expression starting at\
    \ /tmp/tmpxpt2o329.jl:25\n"
  stdout: ''
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<text>\nExercise: Inverse of a vector\nWrite a function, that takes an\
    \ array and returns its inverse.\nExamples:\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp60e21fv0.jl:25\nin expression starting at\
    \ /tmp/tmp60e21fv0.jl:25\n"
  stdout: ''
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for i in lst\n        sum += i * i\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpipc422d4.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpipc422d4.jl:1\n\
    in expression starting at /tmp/tmpipc422d4.jl:1\n"
  stdout: ''
  timestamp: 1660015461
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"\n        sum_squares(lst::Vector{Float64})\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppei0i1aj.jl:1\nin expression starting at /tmp/tmppei0i1aj.jl:1\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum((lst |> map(round) |> collect))\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_sau_xq0.jl:21\nin expression starting at\
    \ /tmp/tmp_sau_xq0.jl:21\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  square = Float64(1.0)\n  sum = 0\n  for x in lst\n    square *= x\n    sum\
    \ += square\n  end\n  return round( sum, Int( ceil ))\nend\n</code>\n<|/ a tags=julia\
    \ |>\n<| c |>\nThank you! Your function really helped. \nI added a few lines to\
    \ calculate the standard deviation, and now it works.\nI posted the final code\
    \ below.\n<|/ c |>\n<| a tags=julia |>\nThanks so much to and for their help!\
    \ \nThis is my final code for the summation of a vector in Julia.\n<code>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2z8iuyf2.jl:27\nin expression starting at\
    \ /tmp/tmp2z8iuyf2.jl:27\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum=0\n    for element in lst\n        sum=sum+element*element\n    end\n\
    \    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6p679mn6.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp6p679mn6.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p679mn6.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p679mn6.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p679mn6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p679mn6.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp6p679mn6.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p679mn6.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p679mn6.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp6p679mn6.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6p679mn6.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6p679mn6.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6p679mn6.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum((map(ceil,lst))^2)\nend\n</cell>\n<code language=julia-0.4>\n\
    sum_squares(lst)\n</cell>\n<code language=julia-0.4>\nlst = [1.0, 4.0, 9.0]\n\
    map(ceil,lst)\n</cell>\n<text>\nQuestion 2\nThe following two cells are a modified\
    \ version of exercise 1 from Chapter 2 of Data Science from William H. Watson.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdntkfer5.jl:21\nin expression starting at\
    \ /tmp/tmpdntkfer5.jl:21\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i*i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpgho3r64b.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgho3r64b.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpgho3r64b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgho3r64b.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgho3r64b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgho3r64b.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpgho3r64b.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgho3r64b.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgho3r64b.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgho3r64b.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpgho3r64b.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpgho3r64b.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpgho3r64b.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  sum=0.0\n  for v in lst\n      sum += v*v\n  end\n  return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpwwxpu2fk.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpwwxpu2fk.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpwwxpu2fk.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwwxpu2fk.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwwxpu2fk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwwxpu2fk.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpwwxpu2fk.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwwxpu2fk.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwwxpu2fk.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpwwxpu2fk.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpwwxpu2fk.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpwwxpu2fk.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpwwxpu2fk.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for i in lst\n        sum_ = sum_ + i*i\n    end\n    return\
    \ sum_\nend \n</cell>\n<code language=julia-1.0>\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo6q4catq.jl:25\nin expression starting at\
    \ /tmp/tmpo6q4catq.jl:25\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\"\"\"\nThis function computes the sum of squared numbers in the given vector.\n\
    It uses @fastmath for performance. \n\"\"\"\n    return sum((lst[i] ^2)\n    for\
    \ i in lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: 'ERROR: LoadError: '
  stdout: "test set: Error During Test at /tmp/tmpt8jiljw9.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  ArgumentError: invalid index:\
    \ 1.0 of type Float64\n  Stacktrace:\n    [1] to_index(i::Float64)\n      @ Base\
    \ ./indices.jl:300\n    [2] to_index(A::Vector{Float64}, i::Float64)\n      @\
    \ Base ./indices.jl:277\n    [3] to_indices\n      @ ./indices.jl:333 [inlined]\n\
    \    [4] to_indices\n      @ ./indices.jl:325 [inlined]\n    [5] getindex\n  \
    \    @ ./abstractarray.jl:1218 [inlined]\n    [6] (::var\"#1#2\"{Vector{Float64}})(i::Float64)\n\
    \      @ Main ./none:0\n    [7] MappingRF\n      @ ./reduce.jl:95 [inlined]\n\
    \    [8] _foldl_impl\n      @ ./reduce.jl:58 [inlined]\n    [9] foldl_impl(op::Base.MappingRF{var\"\
    #1#2\"{Vector{Float64}}, Base.BottomRF{typeof(Base.add_sum)}}, nt::Base._InitialValue,\
    \ itr::Vector{Float64})\n      @ Base ./reduce.jl:48\n   [10] mapfoldl_impl(f::typeof(identity),\
    \ op::typeof(Base.add_sum), nt::Base._InitialValue, itr::Base.Generator{Vector{Float64},\
    \ var\"#1#2\"{Vector{Float64}}})\n      @ Base ./reduce.jl:44\n   [11] mapfoldl(f::Function,\
    \ op::Function, itr::Base.Generator{Vector{Float64}, var\"#1#2\"{Vector{Float64}}};\
    \ init::Base._InitialValue)\n      @ Base ./reduce.jl:162\n   [12] mapfoldl(f::Function,\
    \ op::Function, itr::Base.Generator{Vector{Float64}, var\"#1#2\"{Vector{Float64}}})\n\
    \      @ Base ./reduce.jl:162\n   [13] mapreduce(f::Function, op::Function, itr::Base.Generator{Vector{Float64},\
    \ var\"#1#2\"{Vector{Float64}}}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(),\
    \ Tuple{}}})\n      @ Base ./reduce.jl:289\n   [14] mapreduce(f::Function, op::Function,\
    \ itr::Base.Generator{Vector{Float64}, var\"#1#2\"{Vector{Float64}}})\n      @\
    \ Base ./reduce.jl:289\n   [15] sum(f::Function, a::Base.Generator{Vector{Float64},\
    \ var\"#1#2\"{Vector{Float64}}}; kw::Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(),\
    \ Tuple{}}})\n      @ Base ./reduce.jl:503\n   [16] sum(f::Function, a::Base.Generator{Vector{Float64},\
    \ var\"#1#2\"{Vector{Float64}}})\n      @ Base ./reduce.jl:503\n   [17] sum(a::Base.Generator{Vector{Float64},\
    \ var\"#1#2\"{"
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    # Your code here\n    sum = 0\n    for i in lst\n        sum += i*i\n\
    \    end\n    return sum\nend\n</code>\nNow I do not have the compiler at the\
    \ moment, but I think you should be able to do something like this (you might\
    \ need to use Float64):\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpq74s1b1s.jl:26\nin expression starting at\
    \ /tmp/tmpq74s1b1s.jl:26\n"
  stdout: ''
  timestamp: 1660015462
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\tsum = 0\n\tfor item in lst\n\t\tsum += item*item\n\tend\n\treturn sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp4kz93nwn.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp4kz93nwn.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp4kz93nwn.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4kz93nwn.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4kz93nwn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4kz93nwn.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp4kz93nwn.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4kz93nwn.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4kz93nwn.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp4kz93nwn.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp4kz93nwn.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp4kz93nwn.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp4kz93nwn.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    lst.map(x->round(x*x))\n    return sum(lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp1igapm2s.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp1igapm2s.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field map\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp1igapm2s.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1igapm2s.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1igapm2s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1igapm2s.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  type Array has no field map\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp1igapm2s.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1igapm2s.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1igapm2s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1igapm2s.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  type Array has no field map\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp1igapm2s.jl:19\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1igapm2s.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1igapm2s.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp1igapm2s.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  type Array has no field map\n  Stacktrac"
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(v*v for v in lst)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpcn8ndl42.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpcn8ndl42.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpcn8ndl42.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcn8ndl42.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcn8ndl42.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcn8ndl42.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpcn8ndl42.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcn8ndl42.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcn8ndl42.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpcn8ndl42.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpcn8ndl42.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcn8ndl42.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcn8ndl42.jl:25\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"\n    # return sum(map(x -> x.^2, lst))\n    sum = 0\n    for x\
    \ in lst\n        sum = sum + x\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt8yx69tk.jl:1\nin expression starting at /tmp/tmpt8yx69tk.jl:1\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \"\"\"Your code goes here\n    \"\"\"\n    sum=0\n    for x in lst\n \
    \       sum+=x^2\n    end\n    return round(sum,0)\nend\n</cell>\n<code language=julia-1.0>\n\
    sum_squares(lst([1.0, 2.0, 3.0]))\n</cell>\n<code language=julia-1.0>\nsum_squares(lst([1.0,\
    \ 4.0, 9.0]))\n</cell>\n<code language=julia-1.0>\nsum_squares(lst([1.0, 3.0,\
    \ 5.0, 7.0]))\n</cell>\n<code language=julia-1.0>\nsum_squares(lst([1.4, 4.2,\
    \ 0.0]))\n</cell>\n<code language=julia-1.0>\nsum_squares(lst([-2.4, 1.0, 1.0]))\n\
    </cell>\n<text>\nExercise 1\nThe sum of the squares of odd numbers is given by\
    \ $$\n$$\n\\sum_{n}^{\\infty}\\bigl(f(n)+\\sqrt{n}\\bigr)^2\n$$\nWrite a function\
    \ odd_sum_square(lst) which takes a vector of numbers as an input and returns\
    \ the sum of the squares of odd numbers. Round each element in the vector to an\
    \ integer before applying the formula. Test your function with $[1, 4, 9, 16,\
    \ 25, 36]$.\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprncuwa8r.jl:27\nin expression starting at\
    \ /tmp/tmprncuwa8r.jl:27\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_of_squares = 0\n    len_of_list = length(lst)\n    for i in 1:len_of_list\n\
    \        sum_of_squares += lst[i]^2\n    return sum_of_squares\nend\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1, 2, 3, 4])\n</cell>\n<text>\nPractice\n\
    Write a function that takes an array and produces the sum of the squares of the\
    \ elements, rounded up to the next integer.\nusing Test\n\n@testset begin\n\n\
    candidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmkpay7vw.jl:25\nin expression starting at\
    \ /tmp/tmpmkpay7vw.jl:25\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(map(x -> round(x^2), lst))\nend\n</cell>\n<code language=julia-1.0>\n\
    \"\"\"\n    round.(x \u21D2 y, n) rounds x to the nearest integer that is greater\
    \ than or equal to n\n    \n    When x is negative, the function rounds down to\
    \ zero if negative, and to the nearest \n    integer if positive.\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx34bha59.jl:21\nin expression starting at\
    \ /tmp/tmpx34bha59.jl:21\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    return round(sum,\
    \ digits=digits)\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp53scw1zd.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp53scw1zd.jl:1\n\
    in expression starting at /tmp/tmp53scw1zd.jl:1\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend \nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp0whpw5at.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp0whpw5at.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp0whpw5at.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0whpw5at.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0whpw5at.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0whpw5at.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp0whpw5at.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0whpw5at.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0whpw5at.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp0whpw5at.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp0whpw5at.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp0whpw5at.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp0whpw5at.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015465
- exit_code: -1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in 1:length(lst)\n        lst[i] = round(toint(lst[i])^2)\n    end\n\
    \    return sum(lst)\nend\nsum_squares(vec)\nend\n</cell>\n<text>\nTask 1.2: Vectors\
    \ and Matrices\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: Timeout
  stderr: "ERROR: LoadError: MethodError: no method matching sum_squares(::typeof(vec))\n\
    Closest candidates are:\n  sum_squares(!Matched::Vector{Float64}) at /tmp/tmppm3dvph_.jl:18\n\
    Stacktrace:\n [1] top-level scope\n   @ /tmp/"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    for i in 0 .. length(lst)-1\n        lst[i] = round(lst[i])\n  \
    \  end\n    return sum(lst*lst)\nend\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0,\
    \ 2.0, 3.0])\n</cell>\n<code language=julia-1.5>\nsum_squares([1.0, 4.0, 9.0])\n\
    </cell>\n<code language=julia-1.5>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n\
    <code language=julia-1.5>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<code language=julia-1.5>\n\
    sum_squares([-2.4, 1.0, 1.0])\n</cell>\n<text>\n1.5.2 Find median of a vector\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp99ctvg4o.jl:25\nin expression starting at\
    \ /tmp/tmp99ctvg4o.jl:25\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpzxeia51p.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpzxeia51p.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpzxeia51p.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxeia51p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpzxeia51p.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxeia51p.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpzxeia51p.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_ = 0\n    for i in lst \n        sum_ += i * i\n    end\n    return\
    \ sum_\nend\n</cell>\n<code language=julia-0.6>\nsum_squares(lst)\n</cell>\n<text>\n\
    Exercise: Calculate the sum of square of the numbers from the given list.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3fvq8vzv.jl:25\nin expression starting at\
    \ /tmp/tmp3fvq8vzv.jl:25\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for e in lst\n        sum += e * e\n    return sum\nend\n\
    </cell>\n<code language=julia-1.6>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<code\
    \ language=julia-1.6>\nsum_squares([1.0, 4.0, 9.0])\n</cell>\n<code language=julia-1.6>\n\
    sum_squares([1.0, 3.0, 5.0, 7.0])\n</cell>\n<code language=julia-1.6>\nsum_squares([1.4,\
    \ 4.2, 0.0])\n</cell>\n<code language=julia-1.6>\nsum_squares([-2.4, 1.0, 1.0])\n\
    </cell>\n<code language=julia-1.6>\n# function squares_vector(vec::Vector)\n#\
    \     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Real\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: AbstractFloat\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: AbstractFloat64\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Number\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: NumberComplex\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Integer\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Int\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: AbstractInt\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Integer\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: Int\n#     return sum(vec * vec)\n# end\n# function squares_vector(vec::Vector{T})\
    \ where T <: AbstractInt\n#     return sum(vec * vec)\n# end\n# function squares_vector(\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2aqdjcjl.jl:24\nin expression starting at\
    \ /tmp/tmp2aqdjcjl.jl:24\n"
  stdout: ''
  timestamp: 1660015463
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = 0.0\n    for i in lst\n        result += i*i\n    end\n    return\
    \ round(result,round_to)\nend\n</cell>\n<cell>\nsum_squares([1.0, 2.0, 3.0])\n\
    </cell>\n<text>\nTask 1: Write a function that returns the largest integer in\
    \ an array of integers. Input is a vector of integers. Output is a single integer.\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4d15cank.jl:25\nin expression starting at\
    \ /tmp/tmp4d15cank.jl:25\n"
  stdout: ''
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = Int64(0)\n    for elt in lst\n        result = result + elt *\
    \ elt\n    end\n    return result\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpcm6_fn02.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpcm6_fn02.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpcm6_fn02.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcm6_fn02.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcm6_fn02.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcm6_fn02.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpcm6_fn02.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcm6_fn02.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcm6_fn02.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcm6_fn02.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpcm6_fn02.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpcm6_fn02.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpcm6_fn02.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst\n    i=round(i)\n    i=Ceiling(i)\n    end\n    sum(((i-i)^2)^2)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpv2f1dcr4.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpv2f1dcr4.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: Ceiling not\
    \ defined\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpv2f1dcr4.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv2f1dcr4.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv2f1dcr4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv2f1dcr4.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: Ceiling not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpv2f1dcr4.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv2f1dcr4.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv2f1dcr4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv2f1dcr4.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: Ceiling not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpv2f1dcr4.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpv2f1dcr4.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpv2f1dcr4.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpv2f1dcr4.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: Ceiling not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpv2f1dcr4.jl:21\n\
    \   [2] macro expansion\n     @ ~/.conda/e"
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(map(abs,lst))^2\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6f0ut181.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp6f0ut181.jl:26\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 36 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6f0ut181.jl:26 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6f0ut181.jl:25\ntest set: Test Failed at /tmp/tmp6f0ut181.jl:27\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 36 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6f0ut181.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6f0ut181.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp6f0ut181.jl:28\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 256 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6f0ut181.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6f0ut181.jl:25\ntest set: Error\
    \ During Test at /tmp/tmp6f0ut181.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(31.359999999999996)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp6f0ut181.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp6f0ut181.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp6f0ut181.jl:25\ntest set:\
    \ Error Durin"
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if size(lst) == 1 \n        return lst[0]^2\n    elseif size(lst) == 2\
    \ \n        return sum(lst)\n    elseif size(lst) == 3\n        sum = 1\n    \
    \    for i in lst\n            sum += i^2\n        return sum\n    else\n    \
    \    return 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"for\" at /tmp/tmpfgje68bv.jl:25 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpfgje68bv.jl:28\n\
    in expression starting at /tmp/tmpfgje68bv.jl:28\n"
  stdout: ''
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum(map(x -> x^2, lst))\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpg6icbitj.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpg6icbitj.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpg6icbitj.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg6icbitj.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg6icbitj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg6icbitj.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpg6icbitj.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg6icbitj.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg6icbitj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpg6icbitj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpg6icbitj.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpg6icbitj.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpg6icbitj.jl:25\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(x.^2 for x \u2208 lst)\nend \nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpa_gvuqct.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpa_gvuqct.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpa_gvuqct.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa_gvuqct.jl:29 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa_gvuqct.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpa_gvuqct.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpa_gvuqct.jl:19\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa_gvuqct.jl:30 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa_gvuqct.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpa_gvuqct.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpa_gvuqct.jl:19\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpa_gvuqct.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpa_gvuqct.jl:25\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum_square=0\n    for x in lst\n        sum_square+=x^2\n    end\n   \
    \ return sum_square\nend\n    return sum_squares(lst)\nend\n    \nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: lst not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpbut5vj52.jl:25\nin expression starting at /tmp/tmpbut5vj52.jl:25\n"
  stdout: ''
  timestamp: 1660015464
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    total=0\n    for num in lst\n        total += num*num\n    end\n    return\
    \ total\nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphmy3e6tm.jl:25\nin expression starting at\
    \ /tmp/tmphmy3e6tm.jl:25\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  result = Float64(0)\n  for i in 0 .. size(lst)[1] \n    result += (lst[i]).^2\
    \ \n  end \n  return round(result)\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp3_tih364.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp3_tih364.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: .. not defined\n\
    \  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp3_tih364.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_tih364.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_tih364.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3_tih364.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp3_tih364.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_tih364.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_tih364.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3_tih364.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp3_tih364.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp3_tih364.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp3_tih364.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp3_tih364.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  UndefVarError: .. not defined\n  Stacktrace:\n\
    \   [1] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp3_tih364.jl:20\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/j"
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for e in lst\n        sum = sum + e^2;\n    end\n    return\
    \ round(sum);\nend\n</cell>\n<cell>\nsum_squares([1.0, 2.0, 3.0])\n</cell>\n<cell>\n\
    sum_squares([1.0, 4.0, 9.0])\n</cell>\n<cell>\nsum_squares([1.0, 3.0, 5.0, 7.0])\n\
    </cell>\n<cell>\nsum_squares([1.4, 4.2, 0.0])\n</cell>\n<cell>\nsum_squares([-2.4,\
    \ 1.0, 1.0])\n</cell>\n<text>\nTask 11: Create a generic function which converts\
    \ a given list into a string with each element separated by a comma\nExamples:\n\
    >>> lst([1.0, 2.0, 3.0])\n'1.0, 2.0, 3.0'\n>>> lst([1.0, 4.0, 9.0])\n'1.0, 4.0,\
    \ 9.0'\n>>> lst([1.4, 4.2, 0.0])\n'1.4, 4.2, 0.0'\n>>> lst([-2.4, 1.0, 1.0])\n\
    '-2.4, 1.0, 1.0'\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp4p_122kj.jl:25\nin expression starting at\
    \ /tmp/tmp4p_122kj.jl:25\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    ans = Float64(0.0)\n    for i in lst\n        ans = ans + i^2\n    end\n\
    \    return ans\nend\n</code>\n<|/ a tags=julia,floating-point |>\n<| c |>\nThanks\
    \ Stefan. I have edited the answer to include the remarks on rounding. Your answer\
    \ is the one I have chosen, so I will accept it. I think your remarks also have\
    \ helped other people who have a similar question.\n<|/ c |>\n<| a dscore=0 |>\n\
    I liked James' answer (although I ended up not using it). Here are some other\
    \ options which might be helpful:\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprw6k2_6p.jl:25\nin expression starting at\
    \ /tmp/tmprw6k2_6p.jl:25\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for i in lst\n        sum += i * i\n    end\n    return\
    \ sum\nend\n    \nend\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"end\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp547323v9.jl:26\nin expression starting at /tmp/tmp547323v9.jl:26\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum+=i*i\n    return sum\nend \n</code>\n\
    <|/ a dscore=3 |>\n<| c |>\nA bit hard to read your solution. Maybe some lines\
    \ would help.\n<|/ c |>\n<| c |>\nYes, I think it is a little hard to read. Do\
    \ you mean that it is hard to read, or hard to understand by reading the code?\
    \ I tried to understand what you mean by the solution and then edited it to make\
    \ it clearer. I think the code itself is quite readable. I think it would be great\
    \ to have some comments in the code (maybe some people will read it more easily,\
    \ I really don't know). Thanks!\n<|/ c |>\n<| c |>\nI mean to read: I do not get\
    \ the meaning behind `for i in lst` and `if typeof(Int64) == typeof(i)`. I see\
    \ no use of `typeof`, so i do not see the benefit of it.\n<|/ c |>\n<| c |>\n\
    I have some questions about the code: Why is the return type `Int64`?\n<|/ c |>\n\
    <| c |>\nYou can leave it without Int64, it would work without it too. The reason\
    \ is that in Julia a Vector{Int64} is convertable to an Int64. If you use typeof(i)\
    \ you check that the object i has type Int64.\n<|/ c |>\n<| a dscore=3 |>\nYou\
    \ can use a simple function\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe2p1bfc1.jl:24\nin expression starting at\
    \ /tmp/tmpe2p1bfc1.jl:24\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum+=i*i\n    return sum\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpzoz2zjld.jl:18\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpzoz2zjld.jl:1\n\
    in expression starting at /tmp/tmpzoz2zjld.jl:1\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst) == 0\n        return 0 \n    \n    sum = 0\n    for i in\
    \ lst\n        sum += i*i\n    end\n    return roundup(sum,Ceil)\nend\n</cell>\n\
    <code language=julia-1.3>\nsum_squares([1.0,2.0,3.0])\n</cell>\n<code language=julia-1.3>\n\
    sum_squares([1.0,4.0,9.0])\n</cell>\n<code language=julia-1.3>\nsum_squares([1.0,3.0,5.0,7.0])\n\
    </cell>\n<code language=julia-1.3>\nsum_squares([-1.4,1.0,1.0])\n</cell>\n<code\
    \ language=julia-1.3>\nsum_squares([-2.4,1.0,1.0])\n</cell>\n<text>\nExercise\
    \ 2\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp2t9_bqgo.jl:28\nin expression starting at\
    \ /tmp/tmp2t9_bqgo.jl:28\n"
  stdout: ''
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    n = length(lst)\n    total = 0\n    for i in 1:n\n        total = total\
    \ + (lst[i]^2)\n    end\n    return total\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp5xug7l09.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmp5xug7l09.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5xug7l09.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5xug7l09.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5xug7l09.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5xug7l09.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmp5xug7l09.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5xug7l09.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5xug7l09.jl:30\ntest set:\
    \ Error During Test at /tmp/tmp5xug7l09.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmp5xug7l09.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmp5xug7l09.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmp5xug7l09.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    lst.round\n    sum=0\n    for i in lst\n        sum += i^2\n    end\n\
    \    return sum\nend \n</code>\n<|/ a dscore=0 tags=julia,types |>\n<| a tags=julia,types\
    \ dscore=0 |>\nTo round a number to the nearest int, you can use ceiling.\nTo\
    \ round a number to the nearest float, you can use ceil.\nTo round a number to\
    \ the nearest long double number you can use ceiling if your compiler supports\
    \ it.\n<|/ a |>\n<| c |>\nWhat if the number is not an int?\n<|/ c |>\n<| c |>\n\
    Then you should use the appropriate function.\n<|/ c |>\n<| a dscore=0 |>\nYou\
    \ can use round() and ceil() functions like this:\n<code>\nround(3.1) --> 3\n\
    round(3.15) --> 4\nceil(3.1) --> 3\nceil(3.15) --> 4\n</code>\n<|/ a tags=julia,types\
    \ |>\n<| c |>\nWhat if number is not an int?\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    julia> round(3.1)\n3\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp145tvvvi.jl:26\nin expression starting at\
    \ /tmp/tmp145tvvvi.jl:26\n"
  stdout: ''
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  ans = sum([x*x for x in  lst])\n  return ans.round()\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp2hics0gh.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp2hics0gh.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  type Float64 has no field round\n\
    \  Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp2hics0gh.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2hics0gh.jl:27 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2hics0gh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp2hics0gh.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  type Float64 has no field round\n  Stacktrace:\n\
    \   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp2hics0gh.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2hics0gh.jl:28 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2hics0gh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp2hics0gh.jl:29\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 3.0, 5.0, 7.0]) == 84\n  type Float64 has no field round\n \
    \ Stacktrace:\n   [1] getproperty\n     @ ./Base.jl:42 [inlined]\n   [2] sum_squares(lst::Vector{Float64})\n\
    \     @ Main /tmp/tmp2hics0gh.jl:20\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp2hics0gh.jl:29 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp2hics0gh.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp2hics0gh.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  type Float64 has no field r"
  timestamp: 1660015468
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sq = sum([x .* x for x in lst])\n    return round(sq)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 4 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6v5jyz2i.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp6v5jyz2i.jl:30\n  Expression: candidate([1.4,\
    \ 4.2, 0.0]) == 29\n   Evaluated: 20 == 29\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6v5jyz2i.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6v5jyz2i.jl:26\ntest set: Test Failed at /tmp/tmp6v5jyz2i.jl:31\n\
    \  Expression: candidate([-2.4, 1.0, 1.0]) == 6\n   Evaluated: 8 == 6\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v5jyz2i.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v5jyz2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6v5jyz2i.jl:34\n  Expression: candidate([-1.4, 4.6, 6.3])\
    \ == 75\n   Evaluated: 63 == 75\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v5jyz2i.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v5jyz2i.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp6v5jyz2i.jl:35\n  Expression: candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086\n   Evaluated: 1076 == 1086\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6v5jyz2i.jl:35 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6v5jyz2i.jl:26\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    8     4     12\n"
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\tsum = 0\n\tfor i in lst\n\t\tpush!(sum,i*i)\n\tend\n\treturn sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmp56xx8wew.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmp56xx8wew.jl:30\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ push!(::Int64, ::Float64)\n  Closest candidates are:\n    push!(::Any, ::Any,\
    \ !Matched::Any) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n\
    \    push!(::Any, ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp56xx8wew.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56xx8wew.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56xx8wew.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp56xx8wew.jl:31\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching push!(::Int64,\
    \ ::Float64)\n  Closest candidates are:\n    push!(::Any, ::Any, !Matched::Any)\
    \ at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2970\n    push!(::Any,\
    \ ::Any, !Matched::Any, !Matched::Any...) at ~/.conda/envs/polyglot/share/julia/base/abstractarray.jl:2971\n\
    \    push!(!Matched::Base.InvasiveLinkedListSynchronized{T}, ::T) where T at ~/.conda/envs/polyglot/share/julia/base/task.jl:605\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmp56xx8wew.jl:21\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp56xx8wew.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp56xx8wew.jl:29\ntest set:\
    \ Error During Test at /tmp/tmp56xx8wew.jl:32\n  Te"
  timestamp: 1660015469
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n \n    \n    sum_square = 0\n    for i in lst\n        sum_square += round(Float64(i),5)\n\
    \    end\n    return sum_square\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpq6o6cnbd.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpq6o6cnbd.jl:32\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching\
    \ round(::Float64, ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpq6o6cnbd.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6o6cnbd.jl:32 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6o6cnbd.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpq6o6cnbd.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: no method matching round(::Float64,\
    \ ::Int64)\n  Closest candidates are:\n    round(::T, !Matched::RoundingMode{:NearestTiesUp})\
    \ where T<:AbstractFloat at ~/.conda/envs/polyglot/share/julia/base/floatfuncs.jl:220\n\
    \    round(!Matched::Type{T}, ::Integer) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/int.jl:645\n\
    \    round(::Float64, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/float.jl:371\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpq6o6cnbd.jl:23\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6o6cnbd.jl:33 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6o6cnbd.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpq6o6cnb"
  timestamp: 1660015469
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n  \nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 12 errored,
    0 broken.

    in expression starting at /tmp/tmpdstbx9tv.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpdstbx9tv.jl:26\n  Test threw exception\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpdstbx9tv.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdstbx9tv.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdstbx9tv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdstbx9tv.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([1.0, 2.0, 3.0]) == 14\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] sum_squares(lst::Vector{Float64})\n     @ Main\
    \ /tmp/tmpdstbx9tv.jl:20\n   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdstbx9tv.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdstbx9tv.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpdstbx9tv.jl:28\n"
  timestamp: 1660015469
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    lst = sort(lst)\n    squares = sum(lst*lst)\n    return round(squares)\n\
    end\n</cell>\n<text>\nProblem 2b: Write a function that takes in a vector and\
    \ returns the mean of the vector.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkcc065bt.jl:23\nin expression starting at\
    \ /tmp/tmpkcc065bt.jl:23\n"
  stdout: ''
  timestamp: 1660015466
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    # return sum(map(x -> x^2, lst)) \n    # sum(map(x -> Int64, map(round,\
    \ x))) \n    sum = 0\n    for el in lst \n        sum += el^2 \n    end\n    return\
    \ sum\nend\n</cell>\n<text>\nExercise 4\nWrite a function is_palindrome that determines\
    \ if the given number is palindrome or not.\nYou should not convert it into string,\
    \ just test if the number is a palindrome.\nExamples:\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp33l5o646.jl:27\nin expression starting at\
    \ /tmp/tmp33l5o646.jl:27\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst) == 0 \n        0\n    elseif length(lst) == 1 \n      \
    \  lst[0]^2 \n    else\n        sum(map(x -> x^2, lst))\n    end\nend\n</cell>\n\
    <text>\nTests\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpskmvxbkk.jl:27\nin expression starting at\
    \ /tmp/tmpskmvxbkk.jl:27\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    square_sum = 0\n    for i in lst\n        square_sum += i^2\n    end\n\
    \    return square_sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpygwz4vmo.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpygwz4vmo.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpygwz4vmo.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpygwz4vmo.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpygwz4vmo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpygwz4vmo.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpygwz4vmo.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpygwz4vmo.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpygwz4vmo.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpygwz4vmo.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpygwz4vmo.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpygwz4vmo.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpygwz4vmo.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015468
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    result = sum(lst.^2)\n    return result\nend\n</code>\n<|/ a tags=julia,list\
    \ |>\n<| a |>\nUsing a for loop:\n<code>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpimgw7b59.jl:22\nin expression starting at\
    \ /tmp/tmpimgw7b59.jl:22\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    \n    sum_ = 0\n    for x in lst\n        sum_ += x^2\n    end\n    return\
    \ sum_\nend\n</cell>\n<code language=julia-1.6>\n@test sum_squares([1.0, 2.0,\
    \ 3.0]) == 14\n@test sum_squares([1.0, 4.0, 9.0]) == 98\n@test sum_squares([1.0,\
    \ 3.0, 5.0, 7.0]) == 84\n@test sum_squares([1.4, 4.2, 0.0]) == 29\n@test sum_squares([-2.4,\
    \ 1.0, 1.0]) == 6\n</cell>\n<code language=julia-1.6>\n\"\"\"\nusing Test\n\n\
    @testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0,\
    \ 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpx5obhwmk.jl:26\nin expression starting at\
    \ /tmp/tmpx5obhwmk.jl:26\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0.0\n    for x in lst\n        sum += (x^2)\n    end\n    return\
    \ sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpsy7tuf4_.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpsy7tuf4_.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsy7tuf4_.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsy7tuf4_.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsy7tuf4_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsy7tuf4_.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpsy7tuf4_.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsy7tuf4_.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsy7tuf4_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpsy7tuf4_.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpsy7tuf4_.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpsy7tuf4_.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpsy7tuf4_.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015468
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n\t\n\tsum = 0\n\tfor i in 1:length(lst)\n\t\tsum = sum + lst[i]^2\n\tend\n\
    \treturn sum\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t\
    @test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) ==\
    \ 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpum0hcptj.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmpum0hcptj.jl:34\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpum0hcptj.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpum0hcptj.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpum0hcptj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpum0hcptj.jl:35\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpum0hcptj.jl:24\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpum0hcptj.jl:35 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpum0hcptj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmpum0hcptj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpum0hcptj.jl:24\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpum0hcptj.jl:38 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpum0hcptj.jl:30\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015468
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    s = sum(lst)\n    for i in lst\n        s = s + (i * i)\n    end\n   \
    \ s\nend\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 6 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpxnlqr0a_.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpxnlqr0a_.jl:30\n  Expression: candidate([1.0,\
    \ 2.0, 3.0]) == 14\n   Evaluated: 20 == 14\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxnlqr0a_.jl:30 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxnlqr0a_.jl:29\ntest set: Test Failed at /tmp/tmpxnlqr0a_.jl:31\n\
    \  Expression: candidate([1.0, 2.0, 3.0]) == 14\n   Evaluated: 20 == 14\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxnlqr0a_.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxnlqr0a_.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpxnlqr0a_.jl:32\n  Expression: candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84\n   Evaluated: 100 == 84\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxnlqr0a_.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxnlqr0a_.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpxnlqr0a_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(25.2)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpxnlqr0a_.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpxnlqr0a_.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpxnlqr0a_.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015469
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i^2\n    end\n    return sum\n\
    end\nsum_squares(lst)\n</cell>\n<text>\nPart 5: Write a function to average a\
    \ list of numbers\nWrite a function that averages numbers in a list. \nIt is ok\
    \ to assume that the list is non-empty.\nIt should return 0 if the list is empty\
    \ or a list of numbers if the list is not empty.\nusing Test\n\n@testset begin\n\
    \ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: UndefVarError: lst not defined\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp8g15jc_o.jl:25\nin expression starting at /tmp/tmp8g15jc_o.jl:25\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    for i in lst\n        i+=i\n    end\n    return sum(map(x -> x.^2, lst))\n\
    end\n</code>\n<|/ a tags=julia,list |>\n<| a |>\nThe answer by is good and I upvoted\
    \ it, but it is still possible to improve it by doing some optimizations. Here\
    \ are my suggestions:\n<code>\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0])\
    \ == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyzfmqla2.jl:24\nin expression starting at\
    \ /tmp/tmpyzfmqla2.jl:24\n"
  stdout: ''
  timestamp: 1660015467
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    if length(lst) == 0 \n        return 0 \n    \n    sum = 0.0\n    for\
    \ x in lst \n        sum += x^2 \n    end\nusing Test\n\n@testset begin\n\ncandidate\
    \ = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4,\
    \ 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4, 1.0, 1.0]) == 6)\n\t@test(candidate([100.0,\
    \ 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0, 10000.0]) == 200000000)\n\
    \t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4, 17.9, 18.9,\
    \ 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0]) ==\
    \ 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvgm4sd1b.jl:1\nin expression starting at /tmp/tmpvgm4sd1b.jl:1\n"
  stdout: ''
  timestamp: 1660015468
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for i in lst\n        sum += i * i\n    end\n    return sum\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0,\
    \ 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0,\
    \ 3.0, 5.0, 7.0]) == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 8 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmpzxeia51p.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpzxeia51p.jl:33\n  Test threw exception\n\
    \  Expression: candidate([1.4, 4.2, 0.0]) == 29\n  InexactError: Int64(19.6)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpzxeia51p.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:33 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxeia51p.jl:34\n  Test threw exception\n  Expression:\
    \ candidate([-2.4, 1.0, 1.0]) == 6\n  InexactError: Int64(7.76)\n  Stacktrace:\n\
    \   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n     @ ./number.jl:7\
    \ [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n     @ Main /tmp/tmpzxeia51p.jl:23\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:34 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpzxeia51p.jl:37\n  Test threw exception\n  Expression:\
    \ candidate([-1.4, 4.6, 6.3]) == 75\n  InexactError: Int64(62.809999999999995)\n\
    \  Stacktrace:\n   [1] Int64\n     @ ./float.jl:812 [inlined]\n   [2] convert\n\
    \     @ ./number.jl:7 [inlined]\n   [3] sum_squares(lst::Vector{Float64})\n  \
    \   @ Main /tmp/tmpzxeia51p.jl:23\n   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [5] macro expansion\n     @ /tmp/tmpzxeia51p.jl:37 [inlined]\n\
    \   [6] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [7] top-level scope\n     @ /tmp/tmpzxeia51p.jl:29\ntest set:\
    \ Error During Test at /tmp"
  timestamp: 1660015465
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    return sum(map(x -> round(x*x, ceil(Int, ceil(Int, x))), lst))\nend\n\
    sum_squares(vec())\n</cell>\n<code language=julia-1.6>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: MethodError: no method matching vec()\nClosest candidates\
    \ are:\n  vec(!Matched::LinearAlgebra.Transpose{<:Number, <:AbstractVector}) at\
    \ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:215\n\
    \  vec(!Matched::LinearAlgebra.Adjoint{<:Real, <:AbstractVector}) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/adjtrans.jl:216\n\
    \  vec(!Matched::SparseArrays.AbstractSparseVector) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/SparseArrays/src/sparsevector.jl:964\n\
    \  ...\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphxoygwef.jl:21\nin expression\
    \ starting at /tmp/tmphxoygwef.jl:21\n"
  stdout: ''
  timestamp: 1660015470
- exit_code: 1
  program: "\"\"\"You are given a vector of numbers.\n    You need to return the sum\
    \ of squared numbers in the given vector,\n    round each element in the vector\
    \ to the upper int(Ceiling) first.\n    Examples:\n    >>> lst([1.0, 2.0, 3.0])\n\
    \    14\n    >>> lst([1.0, 4.0, 9.0])\n    98\n    >>> lst([1.0, 3.0, 5.0, 7.0])\n\
    \    84\n    >>> lst([1.4, 4.2, 0.0])\n    29\n    >>> lst([-2.4, 1.0, 1.0])\n\
    \    6\n    \n\n    \"\"\"\nfunction sum_squares(lst::Vector{Float64})::Int64\
    \ \n    sum = 0\n    for x in lst\n        sum += x^2\n    end\n    return sum\n\
    end\n</cell>\n<text>\nTask: What is your fastest function?\nusing Test\n\n@testset\
    \ begin\n\ncandidate = sum_squares;\n\t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\
    \t@test(candidate([1.0, 2.0, 3.0]) == 14)\n\t@test(candidate([1.0, 3.0, 5.0, 7.0])\
    \ == 84)\n\t@test(candidate([1.4, 4.2, 0.0]) == 29)\n\t@test(candidate([-2.4,\
    \ 1.0, 1.0]) == 6)\n\t@test(candidate([100.0, 1.0, 15.0, 2.0]) == 10230)\n\t@test(candidate([10000.0,\
    \ 10000.0]) == 200000000)\n\t@test(candidate([-1.4, 4.6, 6.3]) == 75)\n\t@test(candidate([-1.4,\
    \ 17.9, 18.9, 19.9]) == 1086)\n\t@test(candidate([0.0]) == 0)\n\t@test(candidate([-1.0])\
    \ == 1)\n\t@test(candidate([-1.0, 1.0, 0.0]) == 2)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpoo1ta8a0.jl:25\nin expression starting at\
    \ /tmp/tmpoo1ta8a0.jl:25\n"
  stdout: ''
  timestamp: 1660015468

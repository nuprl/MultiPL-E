language: jl
name: HumanEval_92_any_int
results:
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return isapprox(x, y + z, reltol = 1e-10, abstol = 1e-10) \nend\n</cell>\n\
    <code language=julia-1.3>\n# tests\n@test any_int(2, 2, 2)\n@test !any_int(2,\
    \ -2, 1)\n@test !any_int(3, -2.2, 2)\n</cell>\n<text>\n5.2. Any Function\nTo implement\
    \ the any function, you only need to write a function that takes 3 arguments and\
    \ returns true if the first argument is the same as the sum of the other two,\
    \ and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp5hfxjjpo.jl:25\nin expression starting at\
    \ /tmp/tmp5hfxjjpo.jl:25\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z \n        return true\n    else \n        return false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\nany_int(5, 5, 5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(5, 5, 4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(5, 5, 6.6)\n</cell>\n<code language=julia-1.5>\nany_int(5, 5, 4.5)\n</cell>\n\
    <code language=julia-1.5>\nany_int(5, 5, 4.6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(5, 5, 4.4)\n</cell>\n<code language=julia-1.5>\nany_int(5, 5, 4.4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(5, 5, 6.4)\n</cell>\n<code language=julia-1.5>\n\
    any_int(5.2, 2, 7)\n</cell>\n<code language=julia-1.5>\nany_int(5.2, 2, 6)\n</cell>\n\
    <code language=julia-1.5>\nany_int(5, 2, 8)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 5.1)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 4)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 3.1)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.2)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.3)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 3.4)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.5)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.6)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 3.7)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.8)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 3.9)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 4)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 4)\n</cell>\n\
    <code language=julia-1.5>\nany_int(3.5, 2, 4.2)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3.5, 2, 4.4)\n</cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 4.6)\n\
    </cell>\n<code language=julia-1.5>\nany_int(3.5, 2, 4.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpc_5z8cvs.jl:29\nin expression starting at\
    \ /tmp/tmpc_5z8cvs.jl:29\n"
  stdout: ''
  timestamp: 1659978599
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z\n        true\n    else\n        false\n    end\n\
    end\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if\
    \ all numbers are equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> all_int(5,\
    \ 2, 7)\n    true\n    \n    >>> all_int(3, 2, 2)\n    false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9yq25o4n.jl:29\nin expression starting at\
    \ /tmp/tmp9yq25o4n.jl:29\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n    then true \n    else false \n    end\nend\n</cell>\n\
    <text>\n3.9 is_inf_or_nan(x)\nFor a real number, returns true if x is Inf or NaN.\
    \ Otherwise, returns false.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5ur_gls9.jl:24\nin expression starting at /tmp/tmp5ur_gls9.jl:24\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \"\"\"\n    Create a function that takes 3 numbers. \n    Returns true\
    \ if any of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjtpi8pde.jl:1\nin expression starting at /tmp/tmpjtpi8pde.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != x+y || y != y+z || z != y+z\n        true\n    else\n        false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpigzoibbl.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpigzoibbl.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpigzoibbl.jl:33\ntest set: Error During Test at
    /tmp/tmpigzoibbl.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpigzoibbl.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpigzoibbl.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpigzoibbl.jl:33\ntest set: Error
    During Test at /tmp/tmpigzoibbl.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpigzoibbl.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpigzoibbl.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpigzoibbl.jl:33\ntest set: Error During Test at
    /tmp/tmpigzoibbl.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    any_x = x == sum(x+y, x+y, x+y)\n    any_y = y == sum(y+z, y+z, y+z)\n\
    \    any_z = z == sum(z+x, z+x, z+x)\n    if any_x && any_y && any_z\n       \
    \ return true\n    else\n        return false\n    end\nend\n</code>\n<|/ a tags=julia,arrays\
    \ |>\n<| c |>\nI'm having trouble getting this working: `sum(Int[], Int[], Int[])`\
    \ returns `0`. Maybe you missed an `if` there?\n<|/ c |>\n<| c |>\nSorry, it was\
    \ my mistake with `if`. Now it works. I updated the answer. The function will\
    \ return `true` for all cases. I believe that you can change it to your needs.\n\
    <|/ c |>\n<| c |>\nActually, it seems that it returns `false` for `sum(x+y, x+y,\
    \ x+y)` for all cases. Not sure why, though.\n<|/ c |>\n<| c |>\nThis doesn't\
    \ work for `sum(x+y, x+y, x+y)` for the same reason as my original answer (i.e.\
    \ it doesn't work for `any_int(x,y,z)`). I think it works for `any_int(x,y,z)`,\
    \ because `sum(x+y, x+y, x+y)` works for `any_int(x,y,z)`, because `x+y` works\
    \ for `any_int(x,y,z)`.\n<|/ c |>\n<| a |>\nHere is a solution which doesn't involve\
    \ any loops:\n<code>\njulia> function any_int(x::Int64, y::Int64, z::Int64)\n\
    \         x != y || y != z || z != x + y\n       end\nany_int(x::Int64, y::Int64,\
    \ z::Int64)\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp76prx9c8.jl:32\nin expression starting at\
    \ /tmp/tmp76prx9c8.jl:32\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if ((x == y or x == z) and not(x .== y .== z)) || (not(x == y) and not(x\
    \ == z) and (y == z)) || (x == y && y == z)\n        return true\n    else\n \
    \       return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyfj7d66e.jl:23\nin expression starting at\
    \ /tmp/tmpyfj7d66e.jl:23\n"
  stdout: ''
  timestamp: 1659978599
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x < y && y < z && x > z\n        true\n    else\n        false\n  \
    \  end\nend\n</cell>\n<code language=julia-1.3>\n# ok\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgdv7zn8c.jl:29\nin expression starting at\
    \ /tmp/tmpgdv7zn8c.jl:29\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return ((x == y+z) || \n            (x == y && z == 1) ||\n          \
    \  (x == z && y == 1)) \nend\n</cell>\n<code language=julia-1.6>\nany_int(5, 2,\
    \ 7)\n</cell>\n<code language=julia-1.6>\nany_int(3, 2, 2)\n</cell>\n<code language=julia-1.6>\n\
    any_int(3, -2, 1)\n</cell>\n<code language=julia-1.6>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nExercise\nWrite a function that takes 3 numbers and returns the\
    \ smallest of the three numbers. All numbers are integers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9zfbsig5.jl:27\nin expression starting at\
    \ /tmp/tmp9zfbsig5.jl:27\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    \n    return (not (isnan(x) or isnan(y) or isnan(z))) and (not (isinf(x)\
    \ or isinf(y) or isinf(z))) and (not (x == 0 || x == -0 || y == 0 || y == -0 ||\
    \ z == 0 || z == -0)) and (x == y || y == z || z == x || x == z or y == x)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \"(\" not allowed in \"not (\" at\
    \ /tmp/tmp37k65ua1.jl:25\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp37k65ua1.jl:25\n\
    in expression starting at /tmp/tmp37k65ua1.jl:25\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == x + y && x == x + z\n        true\n    else\n        false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpesygs1zp.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpesygs1zp.jl:35\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpesygs1zp.jl:35 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpesygs1zp.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpesygs1zp.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpesygs1zp.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpesygs1zp.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpesygs1zp.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpesygs1zp.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpesygs1zp.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpesygs1zp.jl:37 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpesygs1zp.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpesygs1zp.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978602
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n    then return true\n    else \n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpexdmqo2w.jl:24\nin expression starting at /tmp/tmpexdmqo2w.jl:24\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        return true\n    return false\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpynzzce9c.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpynzzce9c.jl:1\n\
    in expression starting at /tmp/tmpynzzce9c.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y and x==z \n        return true\n    else \n        return false\n\
    \    end\nend\n</cell>\n<cell>\nany_int(5.4,2.6,7.8)\n</cell>\n<text>\nExercise\
    \ 8.2\nWrite a function for the sum-of-squares problem that takes in 2 numbers\
    \ and returns the sum of the squares of those numbers.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmps7pcuh5x.jl:23\nin expression starting at /tmp/tmps7pcuh5x.jl:23\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != y && x != z && y != z \n        then return true\n        else\
    \ return false\n    end\nend\n</cell>\n<text>\nWrite a function called even_odd().\
    \ It should take 3 numbers as arguments and return true or false depending on\
    \ whether the first number is even or odd. The following example is how you should\
    \ call your function.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpv0mxkplw.jl:24\nin expression starting at /tmp/tmpv0mxkplw.jl:24\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x > y + z \n        then true\n        else false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp97_fect3.jl:24\nin expression starting at /tmp/tmp97_fect3.jl:24\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z \n        true\n    else \n        false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpc6zdovpd.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpc6zdovpd.jl:1\n\
    in expression starting at /tmp/tmpc6zdovpd.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == 0 || y == 0 || z == 0 || x > y > z \n    || x < y && x < z &&\
    \ y < z\n    || x < y || y < x && x < z && z < y\n    || y < x || x < y || y <\
    \ x && z < z\n    || y < x || z < x || x < y || y < x && z < y\n    || x < y ||\
    \ y < x || z < x || y < x && z < z\n    || x < y || y < x || z < x || z < x ||\
    \ y < z\n    || x < y || y < x || z < x || z < x || z < y\n    || x < y || z <\
    \ x || y < x || z < x || z < y\n    || x < y || y < x || z < x || z < x || y <\
    \ z\n    || y < x || z < x || y < x || z < x || z < y\n    \n    else\n    return\
    \ true\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"||\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7f46arqf.jl:24\nin expression starting at\
    \ /tmp/tmp7f46arqf.jl:24\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        true\n    else\n        false\nend\n\"\"\"\nCreate\
    \ a function that takes 3 integers.\nReturns true if one of the numbers is equal\
    \ to the sum of the other two, and all numbers are positive.\nReturns false in\
    \ any other cases.\n    \nExamples\n>>> any_int(5, 2, 7)\ntrue\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8yahxq9k.jl:1\nin expression starting at /tmp/tmp8yahxq9k.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if(x == y) return true\n    if(x == z) return false\n    if(x == Inf ||\
    \ y == Inf || z == Inf) return true\n    if(x == -Inf || y == -Inf || z == -Inf)\
    \ return false\n    \n    return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8zoqgg5f.jl:1\nin expression starting at /tmp/tmp8zoqgg5f.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  if x != y\n    \n    false\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkfrpx0_4.jl:1\nin expression starting at /tmp/tmpkfrpx0_4.jl:1\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y || x == x+z || x == y+z\n    true \n    else \n    false\n\
    \    end\nend\n    \n</cell>\n<text>\nAnd then we can test it out in Julia:\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp538ybikk.jl:30\nin expression starting at\
    \ /tmp/tmp538ybikk.jl:30\n"
  stdout: ''
  timestamp: 1659978600
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return ((x .== y) .|| (x .== z) .|| (y .== z))\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpxf6yz9lx.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxf6yz9lx.jl:1\n\
    in expression starting at /tmp/tmpxf6yz9lx.jl:1\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n    then true\n    else false\n    end\nend\n</cell>\n\
    <code language=julia-0.5>\n@test any_int(5, 2, 7)\n</cell>\n<code language=julia-0.5>\n\
    @test any_int(3, 2, 2)\n</cell>\n<code language=julia-0.5>\n@test any_int(3, -2,\
    \ 1)\n</cell>\n<code language=julia-0.5>\n@test any_int(3.6, -2.2, 2)\n</cell>\n\
    <text>\nAny number?\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpabb8ttcd.jl:24\nin expression starting at /tmp/tmpabb8ttcd.jl:24\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == sum(x, y, z) && all(isInt(x)) && all(isInt(y)) && all(isInt(z))\
    \ \n    then true\n    else false \n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpth9793kf.jl:24\nin expression starting at /tmp/tmpth9793kf.jl:24\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || (y != x && z != x) \n        return true\n    else\
    \ \n        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp5ph3j3ns.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp5ph3j3ns.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp5ph3j3ns.jl:33\ntest set: Error During Test at
    /tmp/tmp5ph3j3ns.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmp5ph3j3ns.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmp5ph3j3ns.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5ph3j3ns.jl:33\ntest set: Error
    During Test at /tmp/tmp5ph3j3ns.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmp5ph3j3ns.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp5ph3j3ns.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp5ph3j3ns.jl:33\ntest set: Error During Test at
    /tmp/tmp5ph3j3ns.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z ||\n        y == z || y == x ||\n        z == x ||\
    \ z == y then\n        return true\n    else return false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt2vd6o5l.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt2vd6o5l.jl:1\n\
    in expression starting at /tmp/tmpt2vd6o5l.jl:1\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    true\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpat92_0bs.jl:30\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpat92_0bs.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error During Test at
    /tmp/tmpat92_0bs.jl:31\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpat92_0bs.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpat92_0bs.jl:31 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error
    During Test at /tmp/tmpat92_0bs.jl:32\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpat92_0bs.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpat92_0bs.jl:32 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error During Test at
    /tmp/tmpat92_0bs.jl:33\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y || x==z || y==z\n        return true\n    else \n        return\
    \ false\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgms0pe2c.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgms0pe2c.jl:1\n\
    in expression starting at /tmp/tmpgms0pe2c.jl:1\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x .== sum(x, y, z)) && x .== round(x) && y .== round(y) && z .==\
    \ round(z)\nend\n</cell>\n<cell>\n\"\"\"\n    Create a function that takes 3 numbers.\n\
    \    Returns true if all numbers are less than the sum of the other two, and all\
    \ numbers are integers.\n    Returns false in any other cases.\n    \n    Examples\n\
    \    >>> all_int(3, 2, 2)\n    true\n    \n    >>> all_int(3, 2, 4)\n    false\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpxwc13oiv.jl:25\nin expression starting at\
    \ /tmp/tmpxwc13oiv.jl:25\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != 0.0 && y != 0.0 && z != 0.0\n        \n        if x == y || x\
    \ == z || y == z\n            return true\n        else\n            return false\n\
    \    else \n        return false\n    \n    end\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"if\" at /tmp/tmpf3crbbf4.jl:25 expected \"\
    end\", got \"else\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpf3crbbf4.jl:29\n\
    in expression starting at /tmp/tmpf3crbbf4.jl:29\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y || x == z \n        true\n    else \n        false\n \
    \   \n    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpgldq4_rb.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpgldq4_rb.jl:1\n\
    in expression starting at /tmp/tmpgldq4_rb.jl:1\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == sum(x, y) && y == sum(y, z) \n    then return true\n    else return\
    \ false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpx6otsn4j.jl:24\nin expression starting at /tmp/tmpx6otsn4j.jl:24\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n        then true\n    else\n        false\nend\n</cell>\n\
    <text>\nExercise 4\nWrite a function that accepts a number, and returns whether\
    \ or not it represents a number in the format X1Y2Z3 where X, Y, and Z are both\
    \ integers. You may assume that the input will always be an integer greater than\
    \ 0.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwvji2wsh.jl:24\nin expression starting at /tmp/tmpwvji2wsh.jl:24\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z\n        true\n    else\n        false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpsrkoclim.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpsrkoclim.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpsrkoclim.jl:33\ntest set: Error During Test at
    /tmp/tmpsrkoclim.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpsrkoclim.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpsrkoclim.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpsrkoclim.jl:33\ntest set: Error
    During Test at /tmp/tmpsrkoclim.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpsrkoclim.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpsrkoclim.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpsrkoclim.jl:33\ntest set: Error During Test at
    /tmp/tmpsrkoclim.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y+z\n        true\n    else\n        false\nend\n</cell>\n\
    <code language=julia-1.3>\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp79l9btkh.jl:29\nin expression starting at\
    \ /tmp/tmp79l9btkh.jl:29\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x > y && x > z\n        return true\n    elseif x < y && x < z\n  \
    \      return true\n    else\n        return false\n    end\nend\n    \n\"\"\"\
    \n    Create a function that takes 3 numbers.\n    Returns true if exactly one\
    \ of the numbers is equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> one_of_int(5,\
    \ 2, 7)\n    true\n    \n    >>> one_of_int(3, 2, 2)\n    false\n    \n    >>>\
    \ one_of_int(3.6, -2.2, 2)\n    true\n    \n    >>> one_of_int(3.6, -2.2, -2)\n\
    \    false\n    \n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: cannot document the following expression:\n\nusing Test\n\
    \nStacktrace:\n [1] error(::String, ::String)\n   @ Base ./error.jl:42\n [2] top-level\
    \ scope\n   @ /tmp/tmp5qjug1nw.jl:32\nin expression starting at /tmp/tmp5qjug1nw.jl:32\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    any_int = (x == y + z) && (isinteger(x) || isinteger(y) || isinteger(z))\
    \ \n    return any_int\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmplu6wnycj.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmplu6wnycj.jl:31\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmplu6wnycj.jl:31 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplu6wnycj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplu6wnycj.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmplu6wnycj.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmplu6wnycj.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplu6wnycj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplu6wnycj.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmplu6wnycj.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmplu6wnycj.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmplu6wnycj.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplu6wnycj.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978604
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    x == sum(x, y) && x == sum(y, z)\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmpeea9o1rg.jl:30\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpeea9o1rg.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpeea9o1rg.jl:29\ntest set: Error During Test at
    /tmp/tmpeea9o1rg.jl:31\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpeea9o1rg.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpeea9o1rg.jl:31 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpeea9o1rg.jl:29\ntest set: Error
    During Test at /tmp/tmpeea9o1rg.jl:32\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpeea9o1rg.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpeea9o1rg.jl:32 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpeea9o1rg.jl:29\ntest set: Error During Test at
    /tmp/tmpeea9o1rg.jl:33\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y==z\n        true\n    else if x==x && y==y && z==z\n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<code language=julia-1.5>\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp9fabjykj.jl:25\nin expression starting at\
    \ /tmp/tmp9fabjykj.jl:25\n"
  stdout: ''
  timestamp: 1659978601
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == 0 || y == 0 || z == 0\n        true\n    else\n        false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpt6ldnkkp.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpt6ldnkkp.jl:34\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpt6ldnkkp.jl:34 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt6ldnkkp.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt6ldnkkp.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpt6ldnkkp.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpt6ldnkkp.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt6ldnkkp.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt6ldnkkp.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpt6ldnkkp.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpt6ldnkkp.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpt6ldnkkp.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpt6ldnkkp.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978604
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z and isa(x::Int64, y::Int64, z::Int64) then \n        return\
    \ true\n    end\n    return false\nend\n</cell>\n<text>\nProblem 7: any_float_array\n\
    Write a function that takes a Float64[] array as input, and returns true if any\
    \ of the numbers in the array are equal to the sum of the other two numbers in\
    \ the array.\nFalse otherwise.\nThe array will be sorted in increasing order from\
    \ smallest to largest.\nThe function should work for all cases, including the\
    \ empty array.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"then\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpwevhtp5x.jl:23\nin expression starting at /tmp/tmpwevhtp5x.jl:23\n"
  stdout: ''
  timestamp: 1659978602
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp5y_iu776.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmp5y_iu776.jl:34\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp5y_iu776.jl:34 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5y_iu776.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5y_iu776.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp5y_iu776.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp5y_iu776.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5y_iu776.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5y_iu776.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp5y_iu776.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp5y_iu776.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp5y_iu776.jl:33\ntest set:\
    \ Error During Test at /tmp/tmp5y_iu776.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978604
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    (Float64(x + y) == z) || (Float64(x + y) < z) || (Float64(x + y) > z)\
    \ || (Float64(x + y) == z) || (Float64(x + y) < z) || (Float64(x + y) > z) ||\
    \ (Float64(x + y) == z) || (Float64(x + y) < z) || (Float64(x + y) > z) || (Float64(x\
    \ + y) == z) || (Float64(x + y) < z) || (Float64(x + y) > z)\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuqd42wow.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuqd42wow.jl:1\n\
    in expression starting at /tmp/tmpuqd42wow.jl:1\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y || x == z\n        true\n    else\n        false\nend\n\
    </cell>\n<text>\nProblem 3\nWrite a function that converts an array to a string.\
    \ \nThe function should return a string that is the array converted to a string,\
    \ using ',' as a separator.\nIt should work on any type of array (IntArray{1},\
    \ Float64Array{1}, etc.).\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjnn1hri7.jl:29\nin expression starting at\
    \ /tmp/tmpjnn1hri7.jl:29\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (typeof(x) == typeof(y) and typeof(x) == typeof(z)) and (x == y\
    \ or x == z or y == z);\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmphj3mbleu.jl:23\nin expression starting at\
    \ /tmp/tmphj3mbleu.jl:23\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z \n    then \n        return true\n    else\n\
    \        return false\n    end \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: '''
  stdout: 'b''test set: Error During Test at /tmp/tmps202gz4a.jl:35\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmps202gz4a.jl:35 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmps202gz4a.jl:34\ntest set: Error During Test at
    /tmp/tmps202gz4a.jl:36\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmps202gz4a.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmps202gz4a.jl:36 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmps202gz4a.jl:34\ntest set: Error
    During Test at /tmp/tmps202gz4a.jl:37\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmps202gz4a.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmps202gz4a.jl:37 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmps202gz4a.jl:34\ntest set: Error During Test at
    /tmp/tmps202gz4a.jl:38\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    Bool((x == sum(x, y) && x == sum(y, z)) || x == sum(y, z) && x == sum(z,\
    \ x))\nend\n</cell>\n<code language=julia-1.2>\n?println\n</cell>\n<code language=julia-1.2>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpthvwzqlf.jl:25\nin expression starting at\
    \ /tmp/tmpthvwzqlf.jl:25\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        true\n    else\n        false\n    end\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_8uf6amz.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_8uf6amz.jl:1\n\
    in expression starting at /tmp/tmp_8uf6amz.jl:1\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x || y == y || z == z\n        return true\n    else\n       \
    \ return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp6pckr0v5.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp6pckr0v5.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp6pckr0v5.jl:33\ntest set: Error During Test at
    /tmp/tmp6pckr0v5.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmp6pckr0v5.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmp6pckr0v5.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmp6pckr0v5.jl:33\ntest set: Error
    During Test at /tmp/tmp6pckr0v5.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmp6pckr0v5.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp6pckr0v5.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp6pckr0v5.jl:33\ntest set: Error During Test at
    /tmp/tmp6pckr0v5.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n   if x == y || x == z || y == z\n       return true\n   else\n       return\
    \ false\nend\n</cell>\n<text>\nQuestion 6. Write a function that takes three numbers\
    \ and returns true if they are all equal, and false otherwise.\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwui1tun6.jl:28\nin expression starting at\
    \ /tmp/tmpwui1tun6.jl:28\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x.*y+z == x)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpkhfe4sr2.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpkhfe4sr2.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkhfe4sr2.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhfe4sr2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkhfe4sr2.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpkhfe4sr2.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpkhfe4sr2.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhfe4sr2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkhfe4sr2.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpkhfe4sr2.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpkhfe4sr2.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkhfe4sr2.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpkhfe4sr2.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z && x == y || x == z + y || y == z\n        return true\n\
    \    return false\nend \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpltenexiw.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpltenexiw.jl:1\n\
    in expression starting at /tmp/tmpltenexiw.jl:1\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return x == y||x == z||y == z\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp69vwm7j5.jl:30\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp69vwm7j5.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp69vwm7j5.jl:29\ntest set: Error During Test at
    /tmp/tmp69vwm7j5.jl:31\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmp69vwm7j5.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmp69vwm7j5.jl:31 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmp69vwm7j5.jl:29\ntest set: Error
    During Test at /tmp/tmp69vwm7j5.jl:32\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmp69vwm7j5.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp69vwm7j5.jl:32 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp69vwm7j5.jl:29\ntest set: Error During Test at
    /tmp/tmp69vwm7j5.jl:33\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y || x == z\n    return true\n    else\n    return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpt4ss9up4.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpt4ss9up4.jl:1\n\
    in expression starting at /tmp/tmpt4ss9up4.jl:1\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if ((x == y) && (x == z))\n        return true\n    else if ((x\
    \ != y) && (x != z) && (y != z))\n        return false\n    else\n        return\
    \ true\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpl4xk6ac_.jl:26\nin expression starting at\
    \ /tmp/tmpl4xk6ac_.jl:26\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n        || x == y \n        || y == z \n        || y ==\
    \ x \n        || z == x \n        || z == y \n        \n            return true\
    \ \n        else \n            return false\n    else \n        return false \n\
    end\n    \n</cell>\n<code language=julia-0.6>\n\"\"\"\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5, 2, 7)\n    true\n    \n    >>>\
    \ any_int(3, 2, 2)\n    false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"||\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprplckq99.jl:24\nin expression starting at\
    \ /tmp/tmprplckq99.jl:24\n"
  stdout: ''
  timestamp: 1659978603
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n    then return true\n    else return false\nend\n</cell>\n\
    <text>\nExercise\nWrite a function that takes 3 numbers and returns true if at\
    \ least one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpvo48_06q.jl:24\nin expression starting at /tmp/tmpvo48_06q.jl:24\n"
  stdout: ''
  timestamp: 1659978604
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n        true\n    else\n        false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpoi_1_jgn.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpoi_1_jgn.jl:1\n\
    in expression starting at /tmp/tmpoi_1_jgn.jl:1\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == sum(x,y,z)) and (all(x::Int, y::Int, z::Int))\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp7bx5yf6u.jl:22 expected\
    \ \"end\", got \"and\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7bx5yf6u.jl:23\n\
    in expression starting at /tmp/tmp7bx5yf6u.jl:23\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n    else false\nend\n\"\"\"\n    Create a function that\
    \ takes 3 numbers.\n    Returns true if one of the numbers is equal to the sum\
    \ of the other two, and all numbers are integers.\n    Returns false in any other\
    \ cases.\n    \n    Examples\n    >>> any_int(5, 2, 7)\n    true\n    \n    >>>\
    \ any_int(3, 2, 2)\n    false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_6ffbxgt.jl:1\nin expression starting at /tmp/tmp_6ffbxgt.jl:1\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x+y ==z\n        return true\n    \n    end\n    \n    return\
    \ false\n    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpqfy_yzr0.jl:33

    '
  stdout: "test set: Error During Test at /tmp/tmpqfy_yzr0.jl:36\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpqfy_yzr0.jl:36 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqfy_yzr0.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqfy_yzr0.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpqfy_yzr0.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpqfy_yzr0.jl:37 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqfy_yzr0.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqfy_yzr0.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpqfy_yzr0.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpqfy_yzr0.jl:38 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpqfy_yzr0.jl:35\ntest set:\
    \ Error During Test at /tmp/tmpqfy_yzr0.jl:39\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\n    end\nend\n\"\"\
    \"\nCreate a function that takes 3 numbers.\nReturns true if at least one of the\
    \ numbers is equal to the sum of the other two, and all numbers are integers.\n\
    Returns false in any other cases.\nThe function should return the first number\
    \ that does not match the sum.\nIf the function cannot find the first number that\
    \ does not match the sum, it should return false.\nExample\n    >>> any_int_first_mismatch(5,\
    \ 2, 7)\n    true\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpuudddd7o.jl:29\nin expression starting at\
    \ /tmp/tmpuudddd7o.jl:29\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y\n    && x == z\n    && y == z\n    \n    true\n    else\n  \
    \      false\n    \n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"&&\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbr9vwpuz.jl:24\nin expression starting at\
    \ /tmp/tmpbr9vwpuz.jl:24\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != y + z\n        return false\n    else\n        return true\nend\n\
    </cell>\n<text>\nExercise 4\nNow write a function called all_ints that checks\
    \ if all numbers are integers.\nUse the function you have already defined as a\
    \ test case.\nUse println() to print a message that shows the results of the function.\
    \ Use multiple println()'s to print multiple messages.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpgy6beick.jl:28\nin expression starting at\
    \ /tmp/tmpgy6beick.jl:28\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n    return true\n    else \n    return false\n    end \n\"\
    \"\"\n    Create a function that takes 4 numbers.\n    Returns true if any of\
    \ the numbers is equal to the sum of the other four, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5,\
    \ 2, 7, 3)\n    true\n    \n    >>> any_int(3, 2, 2, 1, 3)\n    false\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpso09a8k9.jl:1\nin expression starting at /tmp/tmpso09a8k9.jl:1\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z \n        then return true\n    else return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7uscfr7u.jl:24\nin expression starting at /tmp/tmp7uscfr7u.jl:24\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if(x == y || x == z || y == z) \n        return true \n    else \n   \
    \     return false \nend \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpuwbxghg2.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpuwbxghg2.jl:1\n\
    in expression starting at /tmp/tmpuwbxghg2.jl:1\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == y) || x == z || y == z\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpslah9k1x.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpslah9k1x.jl:1\n\
    in expression starting at /tmp/tmpslah9k1x.jl:1\n"
  stdout: ''
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    # check if any of x, y and z is an integer\n    return (x::Int64,\
    \ y::Int64, z::Int64) .any ((x::Int64, y::Int64, z::Int64) .== 0)\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \".\" not allowed in \"(x::Int64,\
    \ y::Int64, z::Int64) .\" at /tmp/tmpcp1h8aei.jl:25\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpcp1h8aei.jl:25\nin expression starting at /tmp/tmpcp1h8aei.jl:25\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y+z\n        return true\n    else\n        return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpejseqbbo.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpejseqbbo.jl:1\n\
    in expression starting at /tmp/tmpejseqbbo.jl:1\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return x == y+z\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpfwxk393z.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpfwxk393z.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpfwxk393z.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfwxk393z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfwxk393z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpfwxk393z.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpfwxk393z.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfwxk393z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfwxk393z.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpfwxk393z.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpfwxk393z.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpfwxk393z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpfwxk393z.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978609
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    x == Int(x + y)&&x == Int(y + z)\nend\n</cell>\n<text>\nLet's test our\
    \ function:\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmh0mwrbu.jl:25\nin expression starting at\
    \ /tmp/tmpmh0mwrbu.jl:25\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppbz2ytv5.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppbz2ytv5.jl:1\n\
    in expression starting at /tmp/tmppbz2ytv5.jl:1\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y || y == z || z == x \n        true\n    else\n       \
    \ false\nend\n    \n    \n    return any_int(x::Int, y::Int, z::Int)\nend\n</cell>\n\
    <text>\n5.2.2 Function another_int \nWrite a function that takes 3 numbers.\n\
    Returns true if all numbers are integers and one of the numbers is equal to the\
    \ sum of the other two, and all other numbers are non-integers.\nReturns false\
    \ in any other cases.\n    \nExamples\n>>> another_int(5, 2, 7)\n    true\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmptgaw0j18.jl:33\nin expression starting at\
    \ /tmp/tmptgaw0j18.jl:33\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y || y==z || x==z\n        true\n    else\n        false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmp06a_lyo4.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp06a_lyo4.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp06a_lyo4.jl:33\ntest set: Error During Test at
    /tmp/tmp06a_lyo4.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmp06a_lyo4.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmp06a_lyo4.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmp06a_lyo4.jl:33\ntest set: Error
    During Test at /tmp/tmp06a_lyo4.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmp06a_lyo4.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp06a_lyo4.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp06a_lyo4.jl:33\ntest set: Error During Test at
    /tmp/tmp06a_lyo4.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y && y == y+z && z == z+x \n    then true\n    else false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmper49jdo7.jl:24\nin expression starting at /tmp/tmper49jdo7.jl:24\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x + y != z\n        return false\n    else \n        return true\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp53be9rc9.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp53be9rc9.jl:1\n\
    in expression starting at /tmp/tmp53be9rc9.jl:1\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y || x == z\n        true\n    else\n        false\n   \
    \ \nend\n</cell>\n<code language=julia-1.5>\nany_int(5.5, 2, 7)\n</cell>\n<code\
    \ language=julia-1.5>\n@assert any_int(5.5, 2, 7) == true\n@assert any_int(5.5,\
    \ 2, 6) == false\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiofkz1ic.jl:30\nin expression starting at\
    \ /tmp/tmpiofkz1ic.jl:30\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || y == z\n        true\n    else\n        false\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpmm8s3480.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpmm8s3480.jl:1\n\
    in expression starting at /tmp/tmpmm8s3480.jl:1\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x >= y and x >= z\n        return true;\n    elseif x < y and x < z\n\
    \        return false;\n    else\n        return false;\nend\n</cell>\n<text>\n\
    And now we can test it using Julia. First, let's make some test data.\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpc0yqv9xz.jl:23\nin expression starting at /tmp/tmpc0yqv9xz.jl:23\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n   \n    if x == y + z and x % 1 == 0 and y % 1 == 0 and z % 1 == 0 then true\
    \ else false\nend\n</cell>\n<text>\n4.2 Test your code\nRun the cell below to\
    \ test your code.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpp8k81545.jl:24\nin expression starting at /tmp/tmpp8k81545.jl:24\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if isapprox(x, y+z) and isapprox(y, x+z)\n    else\n        false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"isapprox\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkqmks2av.jl:24\nin expression starting at /tmp/tmpkqmks2av.jl:24\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  \n    if x==0 || y==0 || z==0\n    then return false\n    end\n    \n  \
    \  return true \nend\n</cell>\n<code language=julia-1.1>\n\"\"\"\n    Create a\
    \ function that takes 3 numbers.\n    Returns true if exactly three numbers are\
    \ equal to the sum of the other two, and all numbers are integers.\n    Returns\
    \ false in any other cases.\n    \n    Examples\n    >>> any_int_exact(3, 2, 7)\n\
    \    true\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpxf4chd0w.jl:25\nin expression starting at /tmp/tmpxf4chd0w.jl:25\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == z && y == z \n        return true \n    else \n        return\
    \ false\nend\n</cell>\n<text>\nsum() \nCreate a function that takes 3 numbers.\n\
    Sums them together.\nIf any of the numbers is not an integer, return 0.\nIf all\
    \ numbers are integers, return them as is.\nReturn 0 if the sum is negative or\
    \ too large (as in \"10+-2\" where only 2 numbers can be added).\nExamples:\n\
    sum(10, 10, 10)\n20\nsum(1, 2, 3)\n5\nsum(1, 10, -2)\n0\nsum(10, 10, -2)\n0\n\
    sum(-10, -2, 0)\n-2\nsum(10, -10, 10)\n0\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph_dzucfk.jl:28\nin expression starting at\
    \ /tmp/tmph_dzucfk.jl:28\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  \n    if x == sum && y == sum && z == sum \n        return true \n    else\
    \ \n        return false \n    end \n    \nend \n</cell>\n<text>\nLet's test that\
    \ it's correct:\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpclyoaklx.jl:31\nin expression starting at\
    \ /tmp/tmpclyoaklx.jl:31\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        return true\n    else\n        return false\nend\n\
    </cell>\n<cell>\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpfffq1b_p.jl:28\nin expression starting at\
    \ /tmp/tmpfffq1b_p.jl:28\n"
  stdout: ''
  timestamp: 1659978607
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n        if x == y + z\n            true\n        else if x != z\n  \
    \          false\n        else if y != z\n            false\n        else if x\
    \ < y && y < z\n            true\n        else if x < z && z < y\n           \
    \ true\n        else if y < x && x < z\n            true\n        else if z <\
    \ x && y < z\n            true\n        else false\n    end\n</code>\n<|/ a dscore=1\
    \ |>\n<| a |>\nYou only need two if statements for this:\n<code>\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnu0v3zn0.jl:26\nin expression starting at\
    \ /tmp/tmpnu0v3zn0.jl:26\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y || x==z \n        true \n    else \n        false \n    end\n\
    end\n</cell>\n<code language=julia-1.5>\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp7i7rg4vf.jl:29\nin expression starting at\
    \ /tmp/tmp7i7rg4vf.jl:29\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y && x == x+z && x == y+z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<cell>\n\"\"\"\n    Create a function that takes 3 numbers.\n\
    \    Returns true if none of the numbers are equal to the sum of the other two.\n\
    \    Returns false in any other case.\n    \n    Examples\n    >>> none_int(1,\
    \ 3, 5)\n    true\n    \n    >>> none_int(2, 1, 4)\n    false\n    \n    >>> none_int(5,\
    \ 2, 7)\n    false\n    \n    >>> none_int(5, 2, 0)\n    false\n    \n    \"\"\
    \"\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjqc0knmp.jl:29\nin expression starting at\
    \ /tmp/tmpjqc0knmp.jl:29\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    (x .== y) || (x .== z) || (y .== z)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpxhiv9pwr.jl:30\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpxhiv9pwr.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpxhiv9pwr.jl:29\ntest set: Error During Test at
    /tmp/tmpxhiv9pwr.jl:31\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpxhiv9pwr.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpxhiv9pwr.jl:31 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpxhiv9pwr.jl:29\ntest set: Error
    During Test at /tmp/tmpxhiv9pwr.jl:32\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpxhiv9pwr.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpxhiv9pwr.jl:32 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpxhiv9pwr.jl:29\ntest set: Error During Test at
    /tmp/tmpxhiv9pwr.jl:33\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978611
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    x == y+z || x == z+y || x == y+z\nend\n</cell>\n<code language=julia-1.5>\n\
    # Task: Write a function that accepts two arrays and outputs a boolean indicating\
    \ if the two arrays are the same\n</cell>\n<code language=julia-1.5>\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmped56czgh.jl:25\nin expression starting at\
    \ /tmp/tmped56czgh.jl:25\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z \n        true \n    elseif x < y && x <\
    \ z\n        true \n    elseif y < x && y < z \n        true \n    elseif z <\
    \ x && z < y \n        true \n    else\n        false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpgfkrowu8.jl:40\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpgfkrowu8.jl:40 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpgfkrowu8.jl:39\ntest set: Error During Test at
    /tmp/tmpgfkrowu8.jl:41\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpgfkrowu8.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpgfkrowu8.jl:41 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpgfkrowu8.jl:39\ntest set: Error
    During Test at /tmp/tmpgfkrowu8.jl:42\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpgfkrowu8.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpgfkrowu8.jl:42 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpgfkrowu8.jl:39\ntest set: Error During Test at
    /tmp/tmpgfkrowu8.jl:43\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978611
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if z==0\n    then return true\n    else \n        if y > x \n        then\
    \ return false\n        else return any_int(x-z, x-y, x-z)\n    end \nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpn9f9otug.jl:24\nin expression starting at /tmp/tmpn9f9otug.jl:24\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != x + y && x != x + z && x != y + z && x != y + y && x != z + z\
    \ && x != z + y && x != y + z \n    && x != z + y\n        then return true\n\
    \        \n    return false\n    \nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"&&\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpidrx2fky.jl:24\nin expression starting at\
    \ /tmp/tmpidrx2fky.jl:24\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    true\nend\n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Create\
    \ a function that takes 3 numbers. \n    Returns true if one of the numbers is\
    \ equal to the sum of the other two, \n    and all numbers are non-negative integers.\
    \ \n    Returns false in any other cases.\n    \n    Examples\n    >>> any_nonneg_int(5,\
    \ 2, 7)\n    true\n    \n    >>> any_nonneg_int(3, 2, 2)\n    false\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpa7981c4p.jl:26\nin expression starting at\
    \ /tmp/tmpa7981c4p.jl:26\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        true\n    else\n        false\nend\n</cell>\n<text>\n\
    Exercise 4\nThe following function counts the number of items in a list.\nThe\
    \ function should only accept a list of numbers. All numbers must be integers.\n\
    A list with 1 item is counted, a list with more than 2 items is counted twice.\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpt6l545a4.jl:28\nin expression starting at\
    \ /tmp/tmpt6l545a4.jl:28\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    # Your code here!\n    if x < y && y < z && x > z\n       return true\n\
    \    end\n    return false\nend\n</cell>\n<cell>\n# test your code!\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpjgni8lpl.jl:29\nin expression starting at\
    \ /tmp/tmpjgni8lpl.jl:29\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    x==y+z \nend \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpg6qg_cm0.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpg6qg_cm0.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpg6qg_cm0.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg6qg_cm0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg6qg_cm0.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpg6qg_cm0.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpg6qg_cm0.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg6qg_cm0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg6qg_cm0.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpg6qg_cm0.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpg6qg_cm0.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpg6qg_cm0.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpg6qg_cm0.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978611
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y and z == sum(x...) \n        return true\n    else \n\
    \        return false\nend\n</cell>\n<text>\nSolution\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"z\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp9dheij4d.jl:24\nin expression starting at /tmp/tmp9dheij4d.jl:24\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z \n        return true\n    else\n      \
    \  return false\n    end\nend\n</cell>\n<code language=julia-1.0>\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmccol7j6.jl:29\nin expression starting at\
    \ /tmp/tmpmccol7j6.jl:29\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        return true\n    else\n        return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpvgqocll3.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpvgqocll3.jl:1\n\
    in expression starting at /tmp/tmpvgqocll3.jl:1\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y==z then return true else return false end\n    \nend\n</cell>\n\
    <text>\n4.2.3 is_even\nWrite a function that takes in 3 numbers.\nReturns true\
    \ if one of them is even, and all numbers are integers.\nReturns false in any\
    \ other cases.\nThe function will take exactly 2 numbers as inputs.\n    \nExamples\n\
    \    >>> is_even(2, 3, 4)\n    true\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1a17r7za.jl:23\nin expression starting at /tmp/tmp1a17r7za.jl:23\n"
  stdout: ''
  timestamp: 1659978609
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n   if x == 0 || y == 0 || z == 0 || x != y || y != z || x != z\n       return\
    \ false\n   else \n       return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7irm3_lt.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7irm3_lt.jl:1\n\
    in expression starting at /tmp/tmp7irm3_lt.jl:1\n"
  stdout: ''
  timestamp: 1659978608
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if sum(x+y, x+z, y+z) == x\n        \n        return 1\n       \
    \ \n    else\n        \n        return 0\n        \n    end\n    \nend\n</cell>\n\
    <code language=julia-1.4>\nany_int(x::Int64, y::Int64, z::Int64)\n</cell>\n<text>\n\
    Question 3\nWrite a function called any_floats that takes 3 numbers.\nReturns\
    \ true if any of the numbers is equal to the sum of the other two, and all numbers\
    \ are floats.\nReturns false in any other cases.\nThe function should take in\
    \ three numbers and return true or false based on the above rules.\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmph2yw__2h.jl:35\nin expression starting at\
    \ /tmp/tmph2yw__2h.jl:35\n"
  stdout: ''
  timestamp: 1659978609
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        true\n    else\n        false\n    end\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpf54a8f4q.jl:31

    '
  stdout: "test set: Error During Test at /tmp/tmpf54a8f4q.jl:34\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpf54a8f4q.jl:34 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf54a8f4q.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpf54a8f4q.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpf54a8f4q.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpf54a8f4q.jl:35 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf54a8f4q.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpf54a8f4q.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpf54a8f4q.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpf54a8f4q.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpf54a8f4q.jl:33\ntest set:\
    \ Error During Test at /tmp/tmpf54a8f4q.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y+z\n        true\n    else\n        false\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp1quj56uz.jl:23\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1quj56uz.jl:1\n\
    in expression starting at /tmp/tmp1quj56uz.jl:1\n"
  stdout: ''
  timestamp: 1659978609
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x + y == z\n        true\n    else\n        false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmphhoilwpj.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmphhoilwpj.jl:35\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmphhoilwpj.jl:35 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphhoilwpj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphhoilwpj.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmphhoilwpj.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmphhoilwpj.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphhoilwpj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphhoilwpj.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmphhoilwpj.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmphhoilwpj.jl:37 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphhoilwpj.jl:34\ntest set:\
    \ Error During Test at /tmp/tmphhoilwpj.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y\n        return true\n    if x>z && x==z\n        return true\n\
    \    else if x<z && x==z\n        return true\n    else if y>z && y==z\n     \
    \   return true\n    else\n        return false\n    end\nend\n</cell>\n<code\
    \ language=julia-1.5>\nany_int(5, 2, 7)\n</cell>\n<code language=julia-1.5>\n\
    any_int(3, -2, 1)\n</cell>\n<code language=julia-1.5>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nExercise 3.2 \nNow create a function called any_real that takes\
    \ 3 real numbers and returns true if at least one of them is equal to the sum\
    \ of the other two.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpeg6dmhvr.jl:27\nin expression starting at\
    \ /tmp/tmpeg6dmhvr.jl:27\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if isapprox(x, y + z) || isapprox(x, y + z) || isapprox(z, y + x) || isapprox(y,\
    \ x + z) || isapprox(y, x + z) || isapprox(z, y + x) || isapprox(y, x + z) ||\
    \ isapprox(y, x + z) || isapprox(z, y + x) || isapprox(y, x + z) || isapprox(y,\
    \ x + z) || isapprox(z, y + x) || isapprox(y, x + z) || isapprox(y, x + z) ||\
    \ isapprox(z, y + x) || isapprox(y, x + z) || isapprox(y, x + z) || isapprox(z,\
    \ y + x) || isapprox(y, x + z) || isapprox(y, x + z) || isapprox(z, y + x)\n \
    \       return true\n    return false\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_9q8_qdm.jl:1\nin expression starting at /tmp/tmp_9q8_qdm.jl:1\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y && x == x+z && y == y+z && x == z \n        then return true\n\
    \    else \n        return false\nend\n</cell>\n<code language=julia-1.6>\n\"\"\
    \"\n    Create a function that takes 3 numbers.\n    Returns true if all of the\
    \ numbers are equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> all_int(5,\
    \ 2, 7)\n    false\n    \n    >>> all_int(3, 2, 2)\n    true\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpa3eg__f3.jl:24\nin expression starting at /tmp/tmpa3eg__f3.jl:24\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y+z && x != 0 && x != Infinity && x != -Infinity && y !=\
    \ 0 && y != Infinity && y != -Infinity && z != 0 && z != Infinity && z != -Infinity\n\
    \        return true\n    \n    return false\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpedm3ymcy.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpedm3ymcy.jl:1\n\
    in expression starting at /tmp/tmpedm3ymcy.jl:1\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == z || (x != x && y != y) || (x != x && z != z) \n    then \n  \
    \      true \n    elseif x == z || (x != x && y != y) || (y != y && z != z) \n\
    \    then \n        true \n    elseif x == z || (x != x && y != y) || (z != z\
    \ && x != x) \n    then \n        true \n    elseif y == z || (x != x && y !=\
    \ y) || (z != z && y != y) \n    then \n        true \n    elseif y == z || (x\
    \ != x && y != y) || (y != y && z != z) \n    then \n        true \n    else \n\
    \        false \n    end \nend \n</code>\n<|/ a |>\n<| a dscore=1 tags=julia |>\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8np_8kdf.jl:42\nin expression starting at\
    \ /tmp/tmp8np_8kdf.jl:42\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n        if x+y ==z\n            return true\n        else return false\n \
    \   end\n    \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpqpw8lube.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpqpw8lube.jl:1\n\
    in expression starting at /tmp/tmpqpw8lube.jl:1\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n        sum = x + y + z\n        \n        if sum == x\n            true\n\
    \        else\n            if sum > x\n                true\n            else\
    \ \n                if sum < x\n                    false\n                else\
    \ \n                    if sum == y\n                        true\n          \
    \          else\n                        if sum > y\n                        \
    \    true\n                        else \n                            if sum <\
    \ y\n                                false\n                            else\n\
    \                                if sum == z\n                               \
    \     true\n                                else\n                           \
    \         if sum > z\n                                        true\n         \
    \                           else \n                                        if\
    \ sum < z\n                                            false\n               \
    \                         else\n                                            false\n\
    \    end\n    return false\nend\n</cell>\n<cell>\n@test any_int(5,2,7) == true\n\
    @test any_int(3,2,2) == false\n@test any_int(3,-2,1) == true\n@test any_int(3.6,-2.2,2)\
    \ == false\n</cell>\n<text>\nNow we check every combination of 3 numbers for equality.\
    \ We do this by creating an infinite amount of possible combinations and checking\
    \ if one of these combinations is equal to the number we are looking for.\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpiywdcaf7.jl:56\nin expression starting at\
    \ /tmp/tmpiywdcaf7.jl:56\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == y) or (x == z) or (y == z)\n    end\n</cell>\n<cell>\n# Run\
    \ this cell to test your function\ntest_eq(any_int(1.0, 2.0, 3.0), true)\ntest_eq(any_int(1.0,\
    \ 3.0, 2.0), false)\ntest_eq(any_int(1.0, 2.0, 4.0), true)\ntest_eq(any_int(1.0,\
    \ 2.0, 5.0), false)\n</cell>\n<text>\n7. Counting Numbers\nNow that we have our\
    \ any_int() function, we can also use it to create our count_int() function.\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp6ptwg33l.jl:22 expected\
    \ \"end\", got \"or\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6ptwg33l.jl:23\n\
    in expression starting at /tmp/tmp6ptwg33l.jl:23\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x+y == z\n        return true\n    else \n        return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmplfsg0j26.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmplfsg0j26.jl:1\n\
    in expression starting at /tmp/tmplfsg0j26.jl:1\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == z && y == z \n        return true \n    else \n        return\
    \ false\nend # any_int\n</cell>\n<text>\nQuestion 4.10\nNow let's combine any_int\
    \ with any_float to create a new function called all_ints.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpe1knt8gq.jl:28\nin expression starting at\
    \ /tmp/tmpe1knt8gq.jl:28\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  if (x == y) || \n     (x != y and \n      isapprox(z, x + y)),\n     isapprox(x,\
    \ x + y) || \n     isapprox(y, x + y)\n  else\n    false\n  end\nend\n</cell>\n\
    <code language=julia-1.5>\n@assert @bf any_int(5, 2, 7) == true\n@assert @bf any_int(3,\
    \ 2, 2) == false\n@assert @bf any_int(3, -2, 1) == true\n@assert @bf any_int(3.6,\
    \ -2.2, 2) == false\n</cell>\n<text>\nConsider the function sum_of_three(...)\
    \ that takes in 3 numbers and returns their sum.\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvjmg6sgu.jl:24\nin expression starting at\
    \ /tmp/tmpvjmg6sgu.jl:24\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    !(x == 0 || x == y) || (x == z) || (y == z) || (abs(y) == z)\nend\n</cell>\n\
    <code language=julia-0.5>\n\"\"\"\nCreate function that checks that a number is\
    \ greater than 0.\nReturns true if it is and false if it is not.\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp6ss0ug07.jl:25\nin expression starting at\
    \ /tmp/tmp6ss0ug07.jl:25\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        true\n    else\n        false\nend\n</cell>\n<text>\n\
    4.1.3 Greater than\nWrite a function that takes 3 numbers and returns true if\
    \ one of them is greater than the other.\nIf all of them are equal, return false.\n\
    Return false if at least one number is negative, float or an integer.\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpkagqh8nq.jl:28\nin expression starting at\
    \ /tmp/tmpkagqh8nq.jl:28\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if isinteger?(x) && isinteger?(y) && isinteger?(z) \n        x + y + z\
    \ == sum(x:y:z)\n    end\nend\n</code>\n<|/ a tags=julia,if-statement |>\n<| a\
    \ tags=julia,if-statement |>\nIf you want a generic function with a variable number\
    \ of arguments, you could use Base.varargs:\n<code>\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space required before \"?\" operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmodxm98y.jl:23\nin expression starting at\
    \ /tmp/tmpmodxm98y.jl:23\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == z && y == z\n        return true\n    elseif x == z && y\
    \ != z\n        return false\n    elseif x != z && y == z\n        return false\n\
    \    elseif x != z && y != z\n        return true\n    end\nend\n</cell>\n<code\
    \ language=julia-1.6>\nany_int(3, -2, 1)\n</cell>\n<code language=julia-1.6>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpbke_f06e.jl:34\nin expression starting at\
    \ /tmp/tmpbke_f06e.jl:34\n"
  stdout: ''
  timestamp: 1659978610
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\n    end\nend\n</cell>\n\
    <text>\nQuestion 16\nWrite a function that returns a list of numbers between a\
    \ min and max excluding multiples of 5 and 6.\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_obzpnjk.jl:29\nin expression starting at\
    \ /tmp/tmp_obzpnjk.jl:29\n"
  stdout: ''
  timestamp: 1659978611
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  if ((x==y) && (x==z)) || (x==z) || (y==z)\n     return true\n  else \n \
    \    return false\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp_cd7ukp2.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp_cd7ukp2.jl:1\n\
    in expression starting at /tmp/tmp_cd7ukp2.jl:1\n"
  stdout: ''
  timestamp: 1659978611
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n     \n    if x == y || x == z || y == z\n        return true\n    else\n\
    \        return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpde1b10tm.jl:35\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpde1b10tm.jl:35 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpde1b10tm.jl:34\ntest set: Error During Test at
    /tmp/tmpde1b10tm.jl:36\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpde1b10tm.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpde1b10tm.jl:36 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpde1b10tm.jl:34\ntest set: Error
    During Test at /tmp/tmpde1b10tm.jl:37\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpde1b10tm.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpde1b10tm.jl:37 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpde1b10tm.jl:34\ntest set: Error During Test at
    /tmp/tmpde1b10tm.jl:38\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n    then true\n    else false\n    end\n\
    \    end\n    \"\"\"\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp_8x6h9_g.jl:24\nin expression starting at /tmp/tmp_8x6h9_g.jl:24\n"
  stdout: ''
  timestamp: 1659978611
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if isapprox(x, z, rtol=0.0, atol=1e-08)\n    true\nelseif isapprox(y,\
    \ z, rtol=0.0, atol=1e-08)\n    true\nelse\n    false\nend\nend\n\"\"\"\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0h62eq71.jl:31\nin expression starting at\
    \ /tmp/tmp0h62eq71.jl:31\n"
  stdout: ''
  timestamp: 1659978611
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    \n    # check if all are integers\n    if x.real == x && y.real\
    \ == y && z.real == z\n    then\n        true\n    else\n        false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: '''
  stdout: 'b''test set: Error During Test at /tmp/tmp237h0kye.jl:38\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp237h0kye.jl:38 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp237h0kye.jl:37\ntest set: Error During Test at
    /tmp/tmp237h0kye.jl:39\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmp237h0kye.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmp237h0kye.jl:39 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmp237h0kye.jl:37\ntest set: Error
    During Test at /tmp/tmp237h0kye.jl:40\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmp237h0kye.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmp237h0kye.jl:40 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmp237h0kye.jl:37\ntest set: Error During Test at
    /tmp/tmp237h0kye.jl:41\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z\n        true\n    else\n        false\n    end\n\
    end\n\"\"\"\nCreate a function that takes 3 numbers and returns true if any of\
    \ them is equal to the sum of the other two.\nReturns false in any other cases.\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppuctzary.jl:29\nin expression starting at\
    \ /tmp/tmppuctzary.jl:29\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y + z\n        return true\n    else\n        return false\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmphafgff6c.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmphafgff6c.jl:1\n\
    in expression starting at /tmp/tmphafgff6c.jl:1\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y && y == y+z && z == z+x then \n        return true\n    else\
    \ \n        return false\n    end\nend\n\"\"\"\n    Create a function that takes\
    \ a list of numbers.\n    Returns true if all numbers in the list are equal.\n\
    \    Returns false if at least one number is different.\n    \n    Examples\n\
    \    >>> all_equal([1,2,2,3])\n    true\n    \n    >>> all_equal([4,1,2,3])\n\
    \    false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyia8y7w8.jl:29\nin expression starting at\
    \ /tmp/tmpyia8y7w8.jl:29\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if abs(x-y)+abs(y-z) == abs(x+z)\n    else\n        false\n    end\nend\n\
    </cell>\n<code language=julia-1.6>\n# Test the code\nany_int(5.0,2.0,7.0)\n</cell>\n\
    <text>\nQuestion 2\nFind a function that takes 3 numbers and returns the sum of\
    \ both numbers as a number.\nFind another function that takes 3 numbers and returns\
    \ the minimum of the two numbers.\nFind another function that takes 3 numbers\
    \ and returns the maximum of the two numbers.\nFind another function that takes\
    \ 3 numbers and returns true if the numbers are the same and false otherwise.\n\
    Find another function that takes 3 numbers and returns true if the numbers are\
    \ different and false otherwise.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmps88m2hqw.jl:28\nin expression starting at\
    \ /tmp/tmps88m2hqw.jl:28\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x > y && x > z\n        true\n    elseif y > x && y > z\n        true\n\
    \    elseif z > x && z > y\n        true\n    else\n        false\n    end\nend\n\
    </cell>\n<text>\n4. Implement the max_int_array function\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpvi9kfvwb.jl:33\nin expression starting at\
    \ /tmp/tmpvi9kfvwb.jl:33\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y || y==z || z==x then \n        return true \n    else \n     \
    \   return false \nend \n</code>\n<|/ a dscore=3 |>\n<| c |>\nThe proof is missing\
    \ - you need to show that the sum of two numbers can be recovered from the sum\
    \ of the other two numbers.\n<|/ c |>\n<| c |>\nI've added a proof, thanks for\
    \ the reminder :D\n<|/ c |>\n<| a tags=math,algorithm,functional-programming,mathematical-optimization,f#\
    \ |>\nIf only three numbers are given you can calculate the sum of these numbers\
    \ and compare it to the other two numbers. For this you have to solve the equation\
    \ x + x + x = n. If x is negative then you already know that x + y cannot be equal\
    \ to the sum of x and y, otherwise you can solve for x. \nSo for three numbers:\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmppad8k2op.jl:28\nin expression starting at\
    \ /tmp/tmppad8k2op.jl:28\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n        true\n    else \n        false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmprgas6eub.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmprgas6eub.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmprgas6eub.jl:33\ntest set: Error During Test at
    /tmp/tmprgas6eub.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmprgas6eub.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmprgas6eub.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmprgas6eub.jl:33\ntest set: Error
    During Test at /tmp/tmprgas6eub.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmprgas6eub.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmprgas6eub.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmprgas6eub.jl:33\ntest set: Error During Test at
    /tmp/tmprgas6eub.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z || x == z \n    || y > x || z > x || z >\
    \ y\n    else \n        false\n    end\nend\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: invalid identifier name \"||\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpn90cnxwk.jl:24\nin expression starting at\
    \ /tmp/tmpn90cnxwk.jl:24\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x + y && x == y + z && y == z\n    then true\n    else false\n\
    \    end\n    \nend\n</cell>\n<text>\n6. Repeat until the user enters a valid\
    \ input (ex. an integer between 0 and 9).\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpzkl3vwkm.jl:24\nin expression starting at /tmp/tmpzkl3vwkm.jl:24\n"
  stdout: ''
  timestamp: 1659978612
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return x == y + z\n    end\n    \nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmprkag98pt.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmprkag98pt.jl:31\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmprkag98pt.jl:31 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprkag98pt.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprkag98pt.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmprkag98pt.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmprkag98pt.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprkag98pt.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprkag98pt.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmprkag98pt.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmprkag98pt.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmprkag98pt.jl:30\ntest set:\
    \ Error During Test at /tmp/tmprkag98pt.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978615
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n        return true\n    else \n      \
    \  return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpr_als85y.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpr_als85y.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpr_als85y.jl:33\ntest set: Error During Test at
    /tmp/tmpr_als85y.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpr_als85y.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpr_als85y.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpr_als85y.jl:33\ntest set: Error
    During Test at /tmp/tmpr_als85y.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpr_als85y.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpr_als85y.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpr_als85y.jl:33\ntest set: Error During Test at
    /tmp/tmpr_als85y.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x+y==z\n        true\n    else\n        false\n    end\nend\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpiq8g1lot.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmpiq8g1lot.jl:35\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpiq8g1lot.jl:35 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiq8g1lot.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpiq8g1lot.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpiq8g1lot.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpiq8g1lot.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiq8g1lot.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpiq8g1lot.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpiq8g1lot.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpiq8g1lot.jl:37 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiq8g1lot.jl:34\ntest set:\
    \ Error During Test at /tmp/tmpiq8g1lot.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return x == (x + y) || x == (x + z) || y == (y + z) || x == y || x ==\
    \ z || y == z\nend\n</cell>\n<text>\n4.5 sum\nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpwkny3bp1.jl:25\nin expression starting at\
    \ /tmp/tmpwkny3bp1.jl:25\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x % y == z \n        then return true\n    else \n        return false\n\
    \    end\nend\n\"\"\"\n    Create a function that takes 3 numbers.\n    Returns\
    \ true if any of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmabkmokx.jl:24\nin expression starting at /tmp/tmpmabkmokx.jl:24\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n    true\nelse\n    false\nend\n</cell>\n<text>\nGreat! Now\
    \ that you know how to write a function, you can start writing code to solve the\
    \ assignment. Write a for loop that iterates over the array a_m. If one of the\
    \ numbers in the array matches the sum of the other two, return true, otherwise\
    \ return false. After you've written a for loop that checks if any of the numbers\
    \ in a_m match, you can take that piece of code and turn it into a function that\
    \ you can call in an if statement to see if it returns true or false based on\
    \ whether or not it found any matches.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpyj7zl_4h.jl:28\nin expression starting at\
    \ /tmp/tmpyj7zl_4h.jl:28\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n        return true\n    else\n        return false\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp2xw1g7ws.jl:23\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp2xw1g7ws.jl:1\n\
    in expression starting at /tmp/tmp2xw1g7ws.jl:1\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n        then true\n    else false\n    end \nend\n</code>\n\
    We can now call the function:\n<code>\njulia> any_int(5, 2, 7)\ntrue\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp6_sssc5w.jl:24\nin expression starting at /tmp/tmp6_sssc5w.jl:24\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y\n    then return true\n    else if x == z\n    then return true\n\
    \    else if y == z\n    then return true\n    else return false\n    end\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpl66vhv8l.jl:24\nin expression starting at /tmp/tmpl66vhv8l.jl:24\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == y+z) && is_int(x) && is_int(y) && is_int(z)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpoaw91kbm.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpoaw91kbm.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpoaw91kbm.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoaw91kbm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoaw91kbm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpoaw91kbm.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoaw91kbm.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoaw91kbm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoaw91kbm.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpoaw91kbm.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoaw91kbm.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoaw91kbm.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoaw91kbm.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978616
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || y == z || x == z || x % y == 0 || y % z == 0 || z % x ==\
    \ 0\n        return True\n    else \n        return False\nend\n</code>\n<|/ a\
    \ |>\n<| c |>\nThanks for sharing your function. My problem is that the function\
    \ does not return the correct values as it should. For example, using the example\
    \ in the original post would return false, while it should, in this case, return\
    \ true.\n<|/ c |>\n<| c |>\nI updated the function and tested it out. It should\
    \ be working correctly.\n<|/ c |>\n<| a dscore=0 |>\nThis is what I came up with:\n\
    <code>\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1zq4n0oh.jl:28\nin expression starting at\
    \ /tmp/tmp1zq4n0oh.jl:28\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n        then true\n        \n        else false\n    end\n\
    end\n</cell>\n<cell>\n@doc any_int\n</cell>\n<text>\nExercise 4\nWrite a function\
    \ that takes two numbers, a minimum and a maximum number, and returns the largest\
    \ of the three.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp1rfp6ay0.jl:24\nin expression starting at /tmp/tmp1rfp6ay0.jl:24\n"
  stdout: ''
  timestamp: 1659978613
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if (x==y || x==z) || (y==z) || (x>y && x>z) || (y>z) \n        return\
    \ true\n    else \n        return false\n    end\n    end\n    \nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmped7klvll.jl:35\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmped7klvll.jl:35 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmped7klvll.jl:34\ntest set: Error During Test at
    /tmp/tmped7klvll.jl:36\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmped7klvll.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmped7klvll.jl:36 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmped7klvll.jl:34\ntest set: Error
    During Test at /tmp/tmped7klvll.jl:37\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmped7klvll.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmped7klvll.jl:37 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmped7klvll.jl:34\ntest set: Error During Test at
    /tmp/tmped7klvll.jl:38\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n        return true\n    else\n       \
    \ return false\n    end\nend\n</code>\n<|/ q dscore=3 tags=julia |>\n<| c |>\n\
    You probably want to use `==` to test for equality, and not `=`. `=` is for assignment\
    \ and `==` is for equality.\n<|/ c |>\n<| c |>\nAlso, you can use `in`, e.g. `x\
    \ in [y,z]`.\n<|/ c |>\n<| c |>\nThanks! I tried that as well but had trouble\
    \ getting the syntax right. Do you know why this doesn't work:\n```julia\nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp619ho6it.jl:29\nin expression starting at\
    \ /tmp/tmp619ho6it.jl:29\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z \n    then true \n    else false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmptrqoegx3.jl:24\nin expression starting at /tmp/tmptrqoegx3.jl:24\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n  \n    \n    if x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \n    elseif x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \n    elseif x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \n    elseif x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \n    elseif x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \n    elseif x == y+z\n        \n    elseif x != y+z\n        \n    elseif\
    \ x == y+z\n        \n    elseif x != y+z\n        \n    elseif x == y+z\n   \
    \     \n    elseif x != y+z\n        \n    elseif x == y+z\n        \n    elseif\
    \ x != y+z\n        \n    elseif x == y+z\n        \n    elseif x != y+z\n   \
    \     \nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: premature end of input\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu0wdb0ix.jl:1\nin expression starting at /tmp/tmpu0wdb0ix.jl:1\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x > y \n        or x > z \n        then true\n        else false \n\
    \    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpifq3d_zi.jl:24\nin expression starting at /tmp/tmpifq3d_zi.jl:24\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if (x == y) && (x == z)\n        true\n    else\n        false\n    end\n\
    end\n    \n\"\"\"\n    Create a function that takes 1 number.\n    Returns true\
    \ if x is greater than or equal to 0.\n    Returns false if x is less than 0.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> any_int(5)\n\
    \    true\n    \n    >>> any_int(-2)\n    false\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmdtmphuf.jl:30\nin expression starting at\
    \ /tmp/tmpmdtmphuf.jl:30\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == sum && y == sum && z == sum \n    then true\n    else false \n\
    \    end\n    \nend\n</cell>\n<text>\nTests\nRun the following tests to check\
    \ your implementation. Note that these will run if you implemented any_int correctly\
    \ and are able to pass all tests.\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp5f0ocman.jl:24\nin expression starting at /tmp/tmp5f0ocman.jl:24\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y + z\n        true\n    \n    else \n        false\n  \
    \  end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpd4pz2ol2.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpd4pz2ol2.jl:1\n\
    in expression starting at /tmp/tmpd4pz2ol2.jl:1\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x == y+z\n        true\n    else\n        false\nend\n</cell>\n\
    <text>\n2. Write a function that finds the largest integer greater than or equal\
    \ to a given number n\nHINT: use the function isgreater from the file Bool.m which\
    \ takes the two numbers as arguments and returns a boolean\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpnvi178eu.jl:29\nin expression starting at\
    \ /tmp/tmpnvi178eu.jl:29\n"
  stdout: ''
  timestamp: 1659978614
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        return true\n    \n    else \n        return false\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp1nlkknsk.jl:23\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp1nlkknsk.jl:1\n\
    in expression starting at /tmp/tmp1nlkknsk.jl:1\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z || y == z\n        return true\n    end\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\nCreate a function that\
    \ takes 3 numbers.\nReturns true if all of the numbers are equal to the sum of\
    \ the other two, and all numbers are integers.\nReturns false in any other cases.\n\
    \    \nExamples\n    >>> all_int(5, 2, 7)\n    true\n    \n    >>> all_int(3,\
    \ 2, 2)\n    false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpomeu5j5z.jl:28\nin expression starting at\
    \ /tmp/tmpomeu5j5z.jl:28\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    any_int = (x == y + z) || (x == z) || (y == z) \n    \n    return\
    \ any_int\nend\n</cell>\n<cell>\n#export\n\"\"\"\n    Create function that takes\
    \ 3 numbers, and returns True if exactly 3 of them are divisible by 3,\n    and\
    \ all numbers are integers.\n    Returns false in any other cases.\n    \n   \
    \ Examples\n    >>> all_divisible(5, 2, 7)\n    true\n    \n    >>> all_divisible(3,\
    \ 2, 2)\n    false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3rw6jjh6.jl:28\nin expression starting at\
    \ /tmp/tmp3rw6jjh6.jl:28\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    true\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: None
  stdout: 'b''test set: Error During Test at /tmp/tmpat92_0bs.jl:30\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpat92_0bs.jl:30 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error During Test at
    /tmp/tmpat92_0bs.jl:31\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpat92_0bs.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpat92_0bs.jl:31 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error
    During Test at /tmp/tmpat92_0bs.jl:32\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpat92_0bs.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpat92_0bs.jl:32 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpat92_0bs.jl:29\ntest set: Error During Test at
    /tmp/tmpat92_0bs.jl:33\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978605
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if (x==0 || y==0 || z==0) \n        return true\n    \n    else\
    \ if x != y \n        return false\n    \n    else if x != z\n        return false\n\
    \    \n    else\n        return true\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: use \"elseif\" instead of \"else if\"\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf6ffvi6f.jl:27\nin expression starting at\
    \ /tmp/tmpf6ffvi6f.jl:27\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if ((x-y)==0)\n    or ((x+y)==0)\n    or ((x-z)==0)\n    or ((x+z)==0)\n\
    \    else\n        true\n    end\nend\n</code>\n<|/ a tags=julia,mathematical-optimization\
    \ |>\n<| c |>\n`function any_int(x::Float64, y::Float64, z::Float64)::Bool`\n\
    `if ((x-y)==0) || ((x+y)==0) || ((x-z)==0) || ((x+z)==0) else true end end`\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: space before \"(\" not allowed in \"or (\" at\
    \ /tmp/tmpxh_40cuz.jl:24\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpxh_40cuz.jl:24\n\
    in expression starting at /tmp/tmpxh_40cuz.jl:24\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == y || x == z) && x == floor(x) || y == floor(y) || z == floor(z)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpoc6uqp7k.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpoc6uqp7k.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpoc6uqp7k.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoc6uqp7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoc6uqp7k.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpoc6uqp7k.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoc6uqp7k.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoc6uqp7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoc6uqp7k.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpoc6uqp7k.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoc6uqp7k.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoc6uqp7k.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoc6uqp7k.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978618
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x > y + z\n        true\n    elseif y > x + z\n        true\n    elseif\
    \ z > x + y\n        true\n    elseif x < y + z\n        true\n    elseif y <\
    \ x + z\n        true\n    elseif z < x + y\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<text>\n4.2 Pareto Distribution\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprfkgtmgh.jl:39\nin expression starting at\
    \ /tmp/tmprfkgtmgh.jl:39\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == sum && y == sum && z == sum\n        return true\n    else \n\
    \        return false\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpx26wwoml.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpx26wwoml.jl:1\n\
    in expression starting at /tmp/tmpx26wwoml.jl:1\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n       return true\n    else \n       return false\n  \
    \  end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpkbx1e0yq.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpkbx1e0yq.jl:1\n\
    in expression starting at /tmp/tmpkbx1e0yq.jl:1\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x==y+z\n    then true\n    else false\nend\n</cell>\n<code language=julia-0.5>\n\
    \"\"\"\n    Create a function that takes 3 numbers.\n    Returns true if all the\
    \ numbers are equal to the sum of the other two, and all numbers are integers.\n\
    \    Returns false in any other cases.\n    \n    Examples\n    >>> all_int(5,\
    \ 2, 7)\n    false\n    \n    >>> all_int(3, 2, 2)\n    true\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpsrtkbq89.jl:24\nin expression starting at /tmp/tmpsrtkbq89.jl:24\n"
  stdout: ''
  timestamp: 1659978615
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x + y && x == x + z\n        return true;\n    else \n       \
    \ return false;\n    end\nend\n</cell>\n<text>\nSolution\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp3ek2ifzq.jl:29\nin expression starting at\
    \ /tmp/tmp3ek2ifzq.jl:29\n"
  stdout: ''
  timestamp: 1659978616
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (floor(x) == floor(y) + floor(z)) and ((floor(x) == floor(y)) or\
    \ (floor(x) == floor(z)))\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"function\" at /tmp/tmp6r1ohsoh.jl:22 expected\
    \ \"end\", got \"and\"\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp6r1ohsoh.jl:23\n\
    in expression starting at /tmp/tmp6r1ohsoh.jl:23\n"
  stdout: ''
  timestamp: 1659978616
- exit_code: -1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != x+y && x != x+z && y != y+z && x != y+z && z != z+x && y != z+x\
    \ && z != z+y\n        return true\n    else\n        return false\n    end\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: Timeout
  stderr: 'b''ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 9 errored,
    0 broken.\nin expression starting at /tmp/tmpvmd7wfb4.jl:31\n'''
  stdout: 'b''test set: Error During Test at /tmp/tmpvmd7wfb4.jl:34\n  Test threw
    exception\n  Expression: candidate(2, 3, 1) == true\n  MethodError: no method
    matching any_int(::Int64, ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpvmd7wfb4.jl:34 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpvmd7wfb4.jl:33\ntest set: Error During Test at
    /tmp/tmpvmd7wfb4.jl:35\n  Test threw exception\n  Expression: candidate(2.5, 2,
    3) == false\n  MethodError: no method matching any_int(::Float64, ::Int64, ::Int64)\n  Closest
    candidates are:\n    any_int(::Float64, !Matched::Float64, !Matched::Float64)
    at /tmp/tmpvmd7wfb4.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445
    [inlined]\n   [2] macro expansion\n     @ /tmp/tmpvmd7wfb4.jl:35 [inlined]\n   [3]
    macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283
    [inlined]\n   [4] top-level scope\n     @ /tmp/tmpvmd7wfb4.jl:33\ntest set: Error
    During Test at /tmp/tmpvmd7wfb4.jl:36\n  Test threw exception\n  Expression: candidate(1.5,
    5, 3.5) == false\n  MethodError: no method matching any_int(::Float64, ::Int64,
    ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,
    ::Float64) at /tmp/tmpvmd7wfb4.jl:22\n  Stacktrace:\n   [1] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n   [2]
    macro expansion\n     @ /tmp/tmpvmd7wfb4.jl:36 [inlined]\n   [3] macro expansion\n     @
    ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n   [4]
    top-level scope\n     @ /tmp/tmpvmd7wfb4.jl:33\ntest set: Error During Test at
    /tmp/tmpvmd7wfb4.jl:37\n  Test threw exception\n  Expression: candidate(2, 6,
    2) == false\n  MethodError: no method matching any_int(::Int'
  timestamp: 1659978619
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    sum(x ==:y, x ==:z)\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmpoi01vk5z.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpoi01vk5z.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpoi01vk5z.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoi01vk5z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoi01vk5z.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpoi01vk5z.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoi01vk5z.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoi01vk5z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoi01vk5z.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpoi01vk5z.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpoi01vk5z.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpoi01vk5z.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpoi01vk5z.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978619
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n       return true\n    else\n       return false\nend\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp5imw9n8_.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp5imw9n8_.jl:1\n\
    in expression starting at /tmp/tmp5imw9n8_.jl:1\n"
  stdout: ''
  timestamp: 1659978616
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x == y || x == z && y == z)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmph_d8jvc_.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmph_d8jvc_.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmph_d8jvc_.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph_d8jvc_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph_d8jvc_.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmph_d8jvc_.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmph_d8jvc_.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph_d8jvc_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph_d8jvc_.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmph_d8jvc_.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmph_d8jvc_.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmph_d8jvc_.jl:29\ntest set:\
    \ Error During Test at /tmp/tmph_d8jvc_.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978620
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n        bool = sum(x == sum, y == sum, z == sum) == sum(x == y, y == z, z\
    \ == sum)\n        return bool\n    end\n    \nusing Test\n\n@testset begin\n\n\
    candidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmpkujhb_e9.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpkujhb_e9.jl:32\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpkujhb_e9.jl:32 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkujhb_e9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkujhb_e9.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpkujhb_e9.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpkujhb_e9.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkujhb_e9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkujhb_e9.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpkujhb_e9.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpkujhb_e9.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpkujhb_e9.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpkujhb_e9.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978619
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\nend\n</cell>\n<code\
    \ language=julia-0.5>\n\"\"\"\n    Create a function that takes 3 numbers.\n \
    \   Returns true if any two of the numbers are equal to the sum of the other two,\
    \ and all numbers are integers.\n    Returns false in any other cases.\n    \n\
    \    Examples\n    >>> any_int_2(5, 2, 7)\n    true\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmprbs7d2is.jl:28\nin expression starting at\
    \ /tmp/tmprbs7d2is.jl:28\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if y == x+z && x == y+z \n        return true \n    else \n        return\
    \ false \nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpk55r3vbj.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpk55r3vbj.jl:1\n\
    in expression starting at /tmp/tmpk55r3vbj.jl:1\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != y && x != z && y != z && x != z\n        then return true\n  \
    \      else return false\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"return\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpkgml1afk.jl:24\nin expression starting at /tmp/tmpkgml1afk.jl:24\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n        \n    if x == x+y && x == x+z && x == y+z\n    true\n    else \n \
    \   false\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"if\" at /tmp/tmp60r87u46.jl:24\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp60r87u46.jl:1\n\
    in expression starting at /tmp/tmp60r87u46.jl:1\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == x+y or x == x+z or y == y+z\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.5>\n@code_native(any_int)\n</cell>\n\
    <text>\n\u279C Any Float64\nCreate a function that takes 4 numbers and returns\
    \ true if one of the numbers is equal to the sum of the other three, and all numbers\
    \ are floats.\nReturns false in any other cases.\n    \n    Examples\n    >>>\
    \ any_float(3.4, 6, 2, 2)\n    true\n    \n    >>> any_float(3.5, 6, 2, 2)\n \
    \   false\n    \n    >>> any_float(3.5, 6, -3, 2)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -1, 4)\n    false\n    \n    >>> any_float(3.6, 2.6, -2, 4)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -4, 4)\n    false\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    false\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n\
    \    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6,\
    \ 2.6, -5, 4.5)\n    true\n    \n    >>> any_float(3.6, 2.6, -5, 4.5)\n    \n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpmrv6vz8c.jl:23\nin expression starting at /tmp/tmpmrv6vz8c.jl:23\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z \n        true \n    else \n        false\nend\n</cell>\n\
    <text>\n4.6: Create a function that takes 3 numbers and returns true if all three\
    \ numbers are less than 10 and all numbers are integers.\nFalse otherwise.\n \
    \  Example: any_int(10, 5, 3)\n     Returns false\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp_b9dgsoh.jl:28\nin expression starting at\
    \ /tmp/tmp_b9dgsoh.jl:28\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        true\n    else\n        false\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t\
    @test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmppbz2ytv5.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmppbz2ytv5.jl:1\n\
    in expression starting at /tmp/tmppbz2ytv5.jl:1\n"
  stdout: ''
  timestamp: 1659978606
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return x != NaN && y != NaN && z != NaN && !isnan(x.*x + y.*y + z.*z)\
    \ && x == ceil(x) && y == ceil(y)\nend\n</cell>\n<cell>\nany_int(3.6, -2.2, 2)\n\
    </cell>\n<text>\nAll Of Your Data\nOne of the most common questions you'll want\
    \ to answer with a time series is \"what percent of time does something happen?\"\
    \ For example, imagine that your data has a value every second for an entire day.\
    \ How often do people make contact with the phone while they're in the car? Or\
    \ people come to the restaurant and go out for a coffee break? Or people just\
    \ wash their hands in the car, etc.\nusing Test\n\n@testset begin\n\ncandidate\
    \ = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3)\
    \ == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6,\
    \ 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2,\
    \ 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1,\
    \ 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4,\
    \ 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpf2y0nv23.jl:25\nin expression starting at\
    \ /tmp/tmpf2y0nv23.jl:25\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n    then true\n    else false\n    end\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\
    \t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\
    \t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t\
    @test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\
    \t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpddor0bml.jl:24\nin expression starting at /tmp/tmpddor0bml.jl:24\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z\n    true\n    else\n    false\nend\n</cell>\n<code\
    \ language=julia-0.5>\n# Test it out\nany_int(5, 2, 7)\n</cell>\n<text>\n5.3.\
    \ Exercise\nWrite a function that takes 2 integers and returns true if one of\
    \ the integers is equal to the sum of the other two.\nReturn false in all other\
    \ cases.\nUse if-then-else expressions instead of boolean operators. \nTest your\
    \ function using some examples and print the results.\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpp71sdtyc.jl:28\nin expression starting at\
    \ /tmp/tmpp71sdtyc.jl:28\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x != x || y != y || z != z \n        false\n    elseif x == y + z \n\
    \        true\n    elseif x == y \n        true\n    elseif x == z \n        true\n\
    \    else\n        false\n    end\nend\n</cell>\n<cell>\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp8c6ibvpx.jl:35\nin expression starting at\
    \ /tmp/tmp8c6ibvpx.jl:35\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (Int64(y+z) == x || Int64(y+z) == x || Int64(y+z) == x || Int64(y+z)\
    \ == x)\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmpcx_abwiq.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpcx_abwiq.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpcx_abwiq.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcx_abwiq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcx_abwiq.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpcx_abwiq.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpcx_abwiq.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcx_abwiq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcx_abwiq.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpcx_abwiq.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpcx_abwiq.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpcx_abwiq.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpcx_abwiq.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978620
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    #your code goes here\n    return (x == y) || (x == z) || (y == z)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 1 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmpiy8nrxt3.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmpiy8nrxt3.jl:32\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmpiy8nrxt3.jl:32 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiy8nrxt3.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpiy8nrxt3.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmpiy8nrxt3.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpiy8nrxt3.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiy8nrxt3.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpiy8nrxt3.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmpiy8nrxt3.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmpiy8nrxt3.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmpiy8nrxt3.jl:31\ntest set:\
    \ Error During Test at /tmp/tmpiy8nrxt3.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978620
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    \n    if x+y == z\n        return true\n    else\n        return false\n\
    \    end\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmp59evy5hl.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmp59evy5hl.jl:35\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmp59evy5hl.jl:35 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59evy5hl.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp59evy5hl.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmp59evy5hl.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp59evy5hl.jl:36 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59evy5hl.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp59evy5hl.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmp59evy5hl.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmp59evy5hl.jl:37 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmp59evy5hl.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp59evy5hl.jl:38\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978619
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (isa(x::Float64) && isa(y::Float64) && isa(z::Float64)) || x ==\
    \ y || x == z || y == z\nend\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\
    \t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 10 errored,
    0 broken.

    in expression starting at /tmp/tmptsh1ui52.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmptsh1ui52.jl:30\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmptsh1ui52.jl:30 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptsh1ui52.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptsh1ui52.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmptsh1ui52.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmptsh1ui52.jl:31 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptsh1ui52.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptsh1ui52.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmptsh1ui52.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmptsh1ui52.jl:32 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmptsh1ui52.jl:29\ntest set:\
    \ Error During Test at /tmp/tmptsh1ui52.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978620
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y+z\n        return true\n    \n    return false\nend \nusing\
    \ Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) ==\
    \ true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5)\
    \ == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4, 2, 2)\
    \ == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmp7fdnyz4y.jl:22\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmp7fdnyz4y.jl:1\n\
    in expression starting at /tmp/tmp7fdnyz4y.jl:1\n"
  stdout: ''
  timestamp: 1659978617
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n        if x==y or x==z\n            return true\n        else\n         \
    \   return false\n        end\n    end\n    \n\"\"\"\n    Create a function that\
    \ takes an array and checks to make sure all values are the same. Returns true\
    \ if all values are the same.\n    Returns false in any other case.\n    \n  \
    \  Examples\n    >>> check_all_same([1,2])\n    true\nusing Test\n\n@testset begin\n\
    \ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"x\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmp7aks6ooj.jl:23\nin expression starting at /tmp/tmp7aks6ooj.jl:23\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if isa(x, Int64) && isa(y, Int64) && isa(z, Int64) && x >= 0 && y >= 0\
    \ && z >= 0 && x + y + z == sum(map(x, [y, z])) \n        return true \n    else\
    \ \n        return false \n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: \"<\" is not a unary operator\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0_x2mmzo.jl:29\nin expression starting at\
    \ /tmp/tmp0_x2mmzo.jl:29\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y || x == z\n        return true\n    return false\nend \n\"\"\
    \"\n    Create a function that takes 4 numbers.\n    Returns true if any of them\
    \ is the sum of the other three, and all numbers are integers.\n    Returns false\
    \ in any other cases.\n    \n    Examples\n    >>> any_int(5, 2, 2, 7)\n    true\n\
    using Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3,\
    \ 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpqdcfcn3m.jl:1\nin expression starting at /tmp/tmpqdcfcn3m.jl:1\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x == y + z\n    else x == z + y\n    end \nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = any_int;\n\t@test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5,\
    \ 2, 3) == false)\n\t@test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2,\
    \ 6, 2) == false)\n\t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2,\
    \ 2.2, 2.2) == false)\n\t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2,\
    \ 1, 1) == true)\n\t@test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0,\
    \ 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 9 errored,
    0 broken.

    in expression starting at /tmp/tmphum_1sm1.jl:29

    '
  stdout: "test set: Error During Test at /tmp/tmphum_1sm1.jl:32\n  Test threw exception\n\
    \  Expression: candidate(2, 3, 1) == true\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [2] macro expansion\n     @ /tmp/tmphum_1sm1.jl:32 [inlined]\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphum_1sm1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmphum_1sm1.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(2.5, 2, 3) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Int64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ !Matched::Float64) at /tmp/tmphum_1sm1.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmphum_1sm1.jl:33 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphum_1sm1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmphum_1sm1.jl:34\n  Test threw exception\n  Expression:\
    \ candidate(1.5, 5, 3.5) == false\n  MethodError: no method matching any_int(::Float64,\
    \ ::Int64, ::Float64)\n  Closest candidates are:\n    any_int(::Float64, !Matched::Float64,\
    \ ::Float64) at /tmp/tmphum_1sm1.jl:22\n  Stacktrace:\n   [1] macro expansion\n\
    \     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \   [2] macro expansion\n     @ /tmp/tmphum_1sm1.jl:34 [inlined]\n   [3] macro\
    \ expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [4] top-level scope\n     @ /tmp/tmphum_1sm1.jl:31\ntest set:\
    \ Error During Test at /tmp/tmphum_1sm1.jl:35\n  Test threw exception\n  Expression:\
    \ candidate(2, 6, 2) == false\n  MethodError: no method matching any_int(::Int64,\
    \ ::Int64, ::Int64)\n  Stacktrace:\n   [1] macro"
  timestamp: 1659978620
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    return (x <= y && y <= z && x \u2208 Interval(0...Inf)) -> Bool\nend \n\
    </cell>\n<code language=julia-1.5>\n@assert any_int(3.6, -2.2, 2) == true\n@assert\
    \ any_int(5, 2, 7) == false\n</cell>\n<text>\nExercise 2\nWrite a function that\
    \ returns true if the first two arguments are equal, and false if they are not.\
    \ Do not use ==.\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t@test(candidate(2,\
    \ 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t@test(candidate(1.5,\
    \ 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\t@test(candidate(4,\
    \ 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\t@test(candidate(-4,\
    \ 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t@test(candidate(3, 4,\
    \ 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: missing comma or ) in argument list\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpo5y27wr4.jl:23\nin expression starting at\
    \ /tmp/tmpo5y27wr4.jl:23\n"
  stdout: ''
  timestamp: 1659978618
- exit_code: 1
  program: "\"\"\"\n    Create a function that takes 3 numbers.\n    Returns true\
    \ if one of the numbers is equal to the sum of the other two, and all numbers\
    \ are integers.\n    Returns false in any other cases.\n    \n    Examples\n \
    \   >>> any_int(5, 2, 7)\n    true\n    \n    >>> any_int(3, 2, 2)\n    false\n\
    \n    >>> any_int(3, -2, 1)\n    true\n    \n    >>> any_int(3.6, -2.2, 2)\n \
    \   false\n  \n\n    \n    \"\"\"\nfunction any_int(x::Float64, y::Float64, z::Float64)::Bool\
    \ \n    if x < y && x > z \n    then true\n    else false\n    end \nend \n</cell>\n\
    <code language=julia-0.5>\nany_int(2,3,5)\n</cell>\n<code language=julia-0.5>\n\
    # Solve this equation\nusing Test\n\n@testset begin\n\ncandidate = any_int;\n\t\
    @test(candidate(2, 3, 1) == true)\n\t@test(candidate(2.5, 2, 3) == false)\n\t\
    @test(candidate(1.5, 5, 3.5) == false)\n\t@test(candidate(2, 6, 2) == false)\n\
    \t@test(candidate(4, 2, 2) == true)\n\t@test(candidate(2.2, 2.2, 2.2) == false)\n\
    \t@test(candidate(-4, 6, 2) == true)\n\t@test(candidate(2, 1, 1) == true)\n\t\
    @test(candidate(3, 4, 7) == true)\n\t@test(candidate(3.0, 4, 7) == false)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: unexpected \"true\"\nStacktrace:\n [1] top-level\
    \ scope\n   @ /tmp/tmpq42efk8c.jl:24\nin expression starting at /tmp/tmpq42efk8c.jl:24\n"
  stdout: ''
  timestamp: 1659978618

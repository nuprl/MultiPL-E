name: HumanEval_77_iscube
language: jl
prompt: "\"\"\"\n    Write a function that takes an integer a and returns true \n\
  \    if this ingeger is a cube of some integer number.\n    Note: you may assume\
  \ the input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
  \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n\
  \    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"\nfunction\
  \ iscube(a::Int64)::Bool \n"
tests: "using Test\n\n@testset begin\n\ncandidate = iscube;\n\t@test(candidate(1)\
  \ == true)\n\t@test(candidate(2) == false)\n\t@test(candidate(-1) == true)\n\t@test(candidate(64)\
  \ == true)\n\t@test(candidate(180) == false)\n\t@test(candidate(1000) == true)\n\
  \t@test(candidate(0) == true)\n\t@test(candidate(1729) == false)\nend\n"
completions: ["    if a == 0 then return true\n    if a > 0 && a < 18 then return\
    \ true\n    else return false\nend\n</cell>\n<cell>\n\"\"\"\nProblem 12: \nWrite\
    \ a function that returns the number of times that a \nnumber appears in a list\
    \ x. \nFor example, \nx = [1, 1, 2, 1, 2, 3, 3]\nwould return 4\n\"\"\"", "  \
    \  iscube = 0\n    if a >= 0 and a <= 25 and a == (a ^ 3)::Int64 \n        iscube\
    \ = true\n    end\n    return iscube\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(1)\niscube(2)\niscube(-1)\niscube(64)\niscube(0)\niscube(180)\n</cell>\n\
    <code language=julia-1.5>", "    if a == 0 return true\n    else if abs(a) ==\
    \ a % 3 == 3 return true \n    else return false \nend", "    a>=1&&a<=8\nend\n\
    </cell>\n<code language=julia-1.5>\n# Check it out in action\n@assert iscube(1);\
    \ @show iscube(1)\n@assert iscube(2); @show iscube(2)\n@assert iscube(-1); @show\
    \ iscube(-1)\n@assert iscube(64); @show iscube(64)\n@assert iscube(0); @show iscube(0)\n\
    @assert iscube(180); @show iscube(180)\n</cell>\n<text>\nExercise 11\nWrite a\
    \ function that takes an integer a and returns true if \nthis ingeger is a cube\
    \ of some integer number. Note, you may assume\nthe input is always valid.\nExamples:",
  "    true\nend\n</code>\n<|/ a |>\n<| a tags=julia |>\n<code>", "    if a == 1 ||\
    \ a == 2 || a == 3 || a == 6 || a == 9 \n        || a == 12 || a == 63 || a ==\
    \ 180 || a == 276 \n        || a == 366\n        return true\n    else\n     \
    \   return false\nend\n</code>\nThis works if you want to use a loop. However\
    \ a better way to do it is using the map function as such:\n<code>", "    (a>1)&&(a>0)&&(a%1\
    \ == 0)\nend\n\"\"\"\n    Write a function that takes an integer a and returns\
    \ true \n    if this ingeger is a cube of some integer number.\n    Note: you\
    \ may assume the input is always valid.\n    Examples:\n    >>> iscube(2)\n  \
    \  true\n    >>> iscube(1)\n    false\n    >>> iscube(-1)\n    false\n    >>>\
    \ iscube(64)\n    false\n    >>> iscube(0)\n    false\n    >>> iscube(180)\n \
    \   true\n    \"\"\"", "    if a % 3 != 0\n        false\n    else\n        return\
    \ true\n    end\nend", "    \n    if a < 0 or a == 0 \n        error(\"Invalid\
    \ input: must be a nonnegative integer\")\n    end\n    \n    for _ in 1:3\n \
    \       if iscube(a * a)\n            return true\n        a = a / 3\n    end\n\
    \    return false\nend\n</cell>\n<code language=julia-1.0>\n@time iscube(3)\n\
    </cell>\n<text>\nExercise 5 (4 points) : factorial\nWrite a recursive function\
    \ which takes an integer $n$ and returns the factorial of $n$, i.e. $n!$. \nExample:\
    \ \n$$ f(5) = 5 \\times 4 \\times 3 \\times 2 \\times 1 $$\nHint: use the formula\
    \ $$ n! = n \\times n-1 \\times n-2 \\times n-3 \\times ... \\times 1 $$\nExample:\
    \ \n$$ f(5) = 5 \\times 4 \\times 3 \\times 2 \\times 1 $$", "    if a < 0\n \
    \       true\n    else\n        (a%9) == 0 && (a%3)==0 && (a%5)==0 && (a%7)==0\
    \ && (a%11)==0 && (a%13)==0 && (a%17)==0 && (a%19)==0 && (a%23)==0 && (a%29)==0\
    \ && (a%37)==0 && (a%43)==0 && (a%51)==0 && (a%59)==0 && (a%67)==0 && (a%75)==0\
    \ && (a%83)==0 && (a%91)==0 && (a%99)==0\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    @code_native iscube\n</cell>\n<text>\nExercise 3\nWrite a function that takes\
    \ the name of a file and returns the size of the file.", "    n <- a\n    return\
    \ n==n^n^n\nend\n</code>\n<|/ a dscore=2 |>\n<| c |>\nIt's not enough to check\
    \ if the number is 1, 2 or 3 since these will also return true.\n<|/ c |>\n<|\
    \ c |>\nYeah, I know. I've already corrected the answer, check it out now.\n<|/\
    \ c |>\n<| a tags=julia |>\nI agree with Glenn's answer. My solution is similar.\
    \ \nHowever, it uses recursion to solve the problem as I didn't see any other\
    \ way to solve it for larger numbers.\n<code>", "\t\n    cube::Int64 = 1\n   \
    \ \n    for i in range(a+1):\n        if (a%i==0) and (i%a==0)\n            cube\
    \ = cube + 1\n        end\n    end\n    \n    if cube == a*a\n        return true\n\
    \    else\n        return false\n    end\nend\n</cell>\n<text>\nExercise 11: Write\
    \ a function that takes an integer a and returns true \n    if the integer a is\
    \ prime number. Write the function without using \n    any built-in functions\
    \ or modules. You may assume that if a is \n    prime number, then it can be written\
    \ as a = a - 1 in a prime factorization\n    process and that if a is not prime\
    \ number, then it cannot be written as \n    a = a -1.", "    # check if a is\
    \ a cube\n    if iszero(a) == false\n        return false\n    # check if a is\
    \ an integer\n    if floor(a) == a\n        return true\n    # check if a is a\
    \ multiple of 6\n    if mod(a,6) == 0\n        return true\n    # check if a is\
    \ an integer multiple of 6\n    if floor(a/6) == a/6\n        return true\n  \
    \  # check if a is a multiple of 3, return false if not a multiple of three\n\
    \    if mod(a,3) == 0\n        return false\n    # check if a is an integer multiple\
    \ of 3, return false if not a multiple of three\n    if floor(a/3) == a/3\n  \
    \      return false\n    # check if a is a multiple of 2, return false if not\
    \ a multiple of two\n    if mod(a,2) == 0\n        return false\n    # check if\
    \ a is an integer multiple of 2, return false if not a multiple of two\n    if\
    \ floor(a/2) == a/2\n        return false\n    # check if a is a multiple of 1,\
    \ return false if not a multiple of one\n    if mod(a,1) == 0\n        return\
    \ false\n    # check if a is an integer multiple of 1, return false if not a multiple\
    \ of one\n    if floor(a/1) == a\n        return false\n    # check if a is a\
    \ multiple of 5, return false if not a multiple of five\n    if mod(a,5) == 0\n\
    \        return false\n    # check if a is an integer multiple of 5, return false\
    \ if not a multiple of five\n    if floor(a/5) == a\n        return false\n  \
    \  # check if a is a multiple of 3, return false if not a multiple of three\n\
    \    if mod(a,3) == 0\n        return false\n    # check if a is an integer multiple\
    \ of 3, return false if not a multiple of three\n    if floor(a/3) == a/3\n  \
    \      return false\n    # check if a is a multiple of 2, return false if not\
    \ a multiple of two\n    if mod(a,2) == 0\n        return false\n    # check if\
    \ a is an integer multiple of 2, return false if not a multiple of two\n    if\
    \ floor(a/2) == a/2\n        return false\n    # check if a is a multiple of 1,\
    \ return false if not a multiple of one\n    if mod(a,1) == 0\n        return\
    \ false\n    # check if a is an integer multiple of 1, return false if not a multiple\
    \ of one\n    if floor(a/1) == a\n        return false\n    # check if a is a\
    \ multiple of 5, return false if not a multiple of five\n    if mod(a,5) == 0\n\
    \        return false\n    # check if a is an integer multiple of 5, return false\
    \ if not a multiple of five\n    if floor(a/5) == a\n        return false\n  \
    \  return true\n</code>\n<|/ a tags=julia,if-statement,math,arrays |>\n<| a tags=julia,if-statement,math,arrays\
    \ |>\n<code>", "    (a==1) || (a==-1) || (a==2) || (a==-2) || (a==4) || \n   \
    \     ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16)\
    \ || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64))\
    \ || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8)\
    \ || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32)\
    \ || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n   \
    \     ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16)\
    \ || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64))\
    \ || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8)\
    \ || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32)\
    \ || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n   \
    \     ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16)\
    \ || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64))\
    \ || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8)\
    \ || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32)\
    \ || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n   \
    \     ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8) || (a==16)\
    \ || (a==32) || (a==64)) || \n        ((a==8) || (a==16) || (a==32) || (a==64))\
    \ || \n        ((a==8) || (a==16) || (a==32) || (a==64)) || \n        ((a==8)\
    \ || (a==16) || (a==32) || (a==", "    if a==0 \n        then return true \n \
    \       else return false \n    else if a == 1\n        then return true \n  \
    \      else if a == 2\n            then return true \n            else if a ==\
    \ 3\n                then return true \n                else if a == 4\n     \
    \               then return true \n                    else if a == 5\n      \
    \                  then return true \n                        else if a == 6\n\
    \                            then return true \n                            else\
    \ if a == 7\n                                then return true \n             \
    \                   else if a == 8\n                                    then return\
    \ true \n                                    else if a == 9\n                \
    \                        then return true \n                                 \
    \       else if a == 10\n                                            then return\
    \ true \n                                            else if a == 11\n       \
    \                                         then return true \n                \
    \                                else if a == 12\n                           \
    \                         then return true \n                                \
    \                    else if a == 13\n                                       \
    \                 then return true \n                                        \
    \                else if a == 14\n                                           \
    \                 then return true \n                                        \
    \                    else if a == 15\n                                       \
    \                         then return true \n                                \
    \                                else if a == 16\n                           \
    \                                         then return true \n                \
    \                                                    else if a == 17\n       \
    \                                                                 then return\
    \ true \n                                                                    \
    \    else if a == 18\n                                                       \
    \                     then return true \n                                    \
    \                                        else if a == 19\n                   \
    \                                                             then return true\
    \ \n                                                                         \
    \       else if a == 20\n                                                    \
    \                                then return true \n                         \
    \                                                           else if a == 21\n\
    \                                                                            \
    \            then return true \n                                             \
    \                                           else if a == 22\n                \
    \                                                                            then\
    \ return true \n                                                             \
    \                               else if a == 23\n                            \
    \                                                                    then return\
    \ true \n                                                                    \
    \                            else if a == 24\n                               \
    \                                                                     then return\
    \ true \n                                                                    \
    \                                else if a == 25\n                           \
    \                                                                            \
    \ then return true \n                                                        \
    \                                                else if a == 26\n           \
    \                                                                            \
    \                     then return true \n                                    \
    \                                                                        else\
    \ if a == 27\n                                                               \
    \                                                 then return true \n        \
    \                                                                            \
    \                            else if a == 28\n                               \
    \                                                                            \
    \         then return true \n                                                \
    \                                                                    else if a\
    \ == 29\n                                                                    \
    \                                                    then return true \n     \
    \                                                                            \
    \                                       else if a == 30\n                    \
    \                                                                            \
    \                            then return true \n                             \
    \                                                                            \
    \                   else if a == 31\n                                        \
    \                                                                            \
    \            then return true \n                                             \
    \                                                                            \
    \       else if a == 32\n                                                    \
    \                                                                            \
    \    then return true \n                                                     \
    \                                                                            \
    \   else if a == 33\n                                                        \
    \                                                                            \
    \    then return true \n                                                     \
    \                                                                            \
    \       else if a == 34\n                                                    \
    \                                                                            \
    \            then return true \n                                             \
    \                                                                            \
    \                   else if a == 35\n                                        \
    \                                                                            \
    \                            then return true \n                             \
    \                                                                            \
    \                                       else if a == 36\n                    \
    \                                                                            \
    \                                                    then return true \n     \
    \                                                                            \
    \                                                                   else if a\
    \ == 37\n                                                                    \
    \                                                                            \
    \        then return true \n                                                 \
    \                                                                            \
    \                           else if a == 38\n                                \
    \                                                                            \
    \                                                then return true \n         \
    \                                                                            \
    \                                                                       else if\
    \ a == 39\n                                                                  \
    \                                                                            \
    \                  then return true \n                                       \
    \                                                                            \
    \                                             else if a == 40\n              \
    \                                                                            \
    \                                                                          then\
    \ return true ", "    if isoddnumber(a)\n        return true\n    if a==0 || a==1\
    \ || a==2 || a==3\n        return true\n    if a==4 || a==5 || a==6\n        return\
    \ true\n    if a==7 || a==8 || a==9\n        return true\n    else \n        return\
    \ false\nend\niscube(64)\niscube(0)\niscube(180)\niscube(2^31)\niscube(2^63)\n\
    iscube(-1)\niscube(2^64)\n</cell>\n<text>\nQuestion 3\nWrite a function that takes\
    \ an integer a and returns true \n    if this ingeger is a cube of some integer\
    \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
    \    >>> iscube_prime(1)\n    true\n    >>> iscube_prime(2)\n    false\n    >>>\
    \ iscube_prime(-1)\n    false\n    >>> iscube_prime(64)\n    false\n    >>> iscube_prime(0)\n\
    \    false\n    >>> iscube_prime(180)\n    false\n    \"\"\"", "    if a>0 &&\
    \ a<360 && isvalid(a)\n        return True\n    return false\nend \n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\nWrite a function that takes an integer a and\
    \ returns true \n    if this ingeger is a cuboid of some integer number.\n   \
    \ Note: you may assume the input is always valid.\n    Examples:\n    >>> iscuboid(1)\n\
    \    true\n    >>> iscuboid(2)\n    false\n    >>> iscuboid(-1)\n    true\n  \
    \  >>> iscuboid(64)\n    true\n    >>> iscuboid(0)\n    true\n    >>> iscuboid(180)\n\
    \    false\n    \"\"\"", "    if a == 1 || a == -1 || a == 0 || a == 3 || a ==\
    \ 9 \n        || a == 27 || a == 83 || a == 183 || a == 273 || a == 377 || \n\
    \        a == 633 || a == 1267 || a == 503\n        true\n    else\n        false\n\
    \    end\nend\n</cell>\n<code language=julia-1.4>\n\"\"\"\nWrite a function that\
    \ takes a positive integer a and returns the \nlargest multiple of 2 less than\
    \ or equal to a.\nExamples:\n>>> mrome2(1)\n1\n>>> mrome2(2)\n2\n>>> mrome2(3)\n\
    3\n>>> mrome2(4)\n4\n>>> mrome2(5)\n2\n>>> mrome2(6)\n4\n>>> mrome2(7)\n4\n>>>\
    \ mrome2(8)\n8\n\"\"\"", "    if a == 1 then return true\n    if a == -1 then\
    \ return true\n    if a == 0 then return true\n    if a == 64 then return true\n\
    \    if a == -64 then return true\n    return false\nend\n</cell>\n<code language=julia-0.5>\n\
    \"\"\"\n    Write a function that takes an integer a and returns true \n    if\
    \ this ingeger is a square of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> issquare(1)\n    true\n    >>>\
    \ issquare(2)\n    true\n    >>> issquare(-1)\n    true\n    >>> issquare(0)\n\
    \    true\n    >>> issquare(180)\n    false\n    \"\"\"", "    if a < 0\n    \
    \    return false\n    else\n        return true\nend\n</cell>\n<code language=julia-1.6>\n\
    \"\"\"\nWrite a function that takes a floating point number a and returns \ntrue\
    \ if the number is greater than or equal to some floating point number.\n\"\"\"",
  "    if a == 0\n        true\n    else if floor(a) == a \n        true\n    else\
    \ if mod(a,3) == 0\n        true\n    else \n        false\n    end\nend", " \
    \   (a%3==0 && a%5==0 && a%7==0 && a%9==0)\nend\n\"\"\"\n    Write a function\
    \ that takes an integer a and returns true \n    if the number is even and false\
    \ otherwise. \n    Examples:\n    >>> iseven(2)\n    true\n    >>> iseven(8)\n\
    \    false\n    >>> iseven(-4)\n    true\n    >>> iseven(64)\n    true\n    >>>\
    \ iseven(180)\n    false\n    \"\"\"", "    return isvalid(a) and iscubeint(a)\
    \ == true\nend\n</cell>\n<text>\nExercise 2\nWrite a function that takes two integers\
    \ a and b and returns true if the first is greater than or equal to the second,\
    \ and false otherwise.", "    if a <= 0 \n        return true\n    else if a==1\n\
    \        return true\n    else if a == 2\n        return true\n    else\n    \
    \    return false\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nPlease add some\
    \ explanation to your answer such that others can learn from it\n<|/ c |>\n<|\
    \ c |>\nThanks, I hope the answer is more understandable now.\n<|/ c |>\n<| a\
    \ dscore=0 |>\n<code>\nisCube(number::Integer) = \n   number == 1 || number ==\
    \ 2 || number == 3 || number == 4 || number == 5 || number == 6 || number == 7\
    \ || number == 8 || number == 9 || number == 10 || number == 11 || number == 12\
    \ || number == 13 || number == 14 || number == 15 || number == 16 || number ==\
    \ 17 || number == 18 || number == 19 || number == 20 || number == 21 || number\
    \ == 22 || number == 23 || number == 24 || number == 25 || number == 26 || number\
    \ == 27 || number == 28 || number == 29 || number == 30\n</code>\n<|/ a tags=julia\
    \ |>\n<| a |>\n<code>\nisCube(number::Integer) = number == 1 || number == 2 ||\
    \ number == 3 || number == 4 || number == 5 || number == 6 || number == 7 || number\
    \ == 8 || number == 9 || number == 10 || number == 11 || number == 12 || number\
    \ == 13 || number == 14 || number == 15 || number == 16 || number == 17 || number\
    \ == 18 || number == 19 || number == 20 || number == 21 || number == 22 || number\
    \ == 23 || number == 24 || number == 25 || number == 26 || number == 27 || number\
    \ == 28 || number == 29 || number == 30 \n</code>\n<|/ a tags=julia dscore=0 |>\n\
    <| a dscore=0 |>\n<code>\nisCube(number::Integer) = number == 1 || number == 2\
    \ || number == 3 || number == 4 || number == 5 || number == 6 || number == 7 ||\
    \ number == 8 || number == 9 || number == 10 || number == 11 || number == 12 ||\
    \ number == 13 || number == 14 || number == 15 || number == 16 || number == 17\
    \ || number == 18 || number == 19 || number == 20 || number == 21 || number ==\
    \ 22 || number == 23 || number == 24 || number == 25 || number == 26 || number\
    \ == 27 || number ", "    a=abs(a)\n    return isint(a) and a==int(a) and a>1\
    \ and a<512\nend \n</cell>\n<code language=julia-1.0>\n\"\"\"\n    Write a function\
    \ that takes an integer a and returns true \n    if this ingeger is a cube of\
    \ some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n  \
    \  >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"", '  if a>0 && a%2==0 &&
    a%3==0 && a%4==0 && a%6==0 && a%8==0 && a%10==0 && a%12==0 && a%14==0 && a%16==0
    && a%18==0 && a%20==0 && a%24==0 && a%28==0 && a%32==0 && a%36==0 && a%40==0 &&
    a%44==0 && a%48==0 && a%52==0 && a%56==0 && a%60==0 && a%64==0 && a%68==0 && a%72==0
    && a%76==0 && a%80==0 && a%84==0 && a%88==0 && a%92==0 && a%96==0 && a%100==0
    && a%104==0 && a%108==0 && a%112==0 && a%116==0 && a%120==0 && a%124==0 && a%128==0
    && a%132==0 && a%136==0 && a%140==0 && a%144==0 && a%148==0 && a%152==0 && a%156==0
    && a%160==0 && a%164==0 && a%168==0 && a%172==0 && a%176==0 && a%180==0 && a%184==0
    && a%188==0 && a%192==0 && a%196==0 && a%200==0 && a%204==0 && a%208==0 && a%208==0
    && a%224==0 && a%228==0 && a%232==0 && a%236==0 && a%240==0 && a%244==0 && a%248==0
    && a%252==0 && a%256==0 && a%260==0 && a%264==0 && a%268==0 && a%272==0 && a%276==0
    && a%280==0 && a%284==0 && a%288==0 && a%292==0 && a%296==0 && a%300==0 && a%304==0
    && a%308==0 && a%312==0 && a%316==0 && a%320==0 && a%324==0 && a%328==0 && a%332==0
    && a%336==0 && a%340==0 && a%344==0 && a%348==0 && a%352==0 && a%356==0 && a%360==0
    && a%364==0 && a%368==0 && a%372==0 && a%376==0 && a%380==0 && a%384==0 ', " \
    \   if a < 0 \n        true\n    elseif abs(a) == 1 \n        true\n    elseif\
    \ abs(a) == 2 \n        true\n    else\n        iscubome(a-floor(a/2))\n    end\n\
    end", "    if a==0 then return true\n    return iscube(a-1)\nend", "    a=abs()\n\
    \    if a%4==0\n        return true\n    else\n        return false\n    end\n\
    end\n</code>\n<|/ a |>\n<| c |>\nIn case someone is wondering how to use it, this\
    \ is the [package](https://github.com/jrudin/MathFuncs) where the function `iscube`\
    \ is located.\n<|/ c |>\n<| a dscore=1 tags=julia |>\n<code>", "    cubecheck\
    \ = 1\n    for i in a\n        cubecheck *= i\n    end\n    return cubecheck ==\
    \ a\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Write a function that\
    \ takes a positive integer a and a \n    positive integer b and return true if\
    \ and only if the \n    sum of squares of the integers from 1 to b is a.\n   \
    \ Examples:\n    >>> sqsum(2)\n    true\n    >>> sqsum(3)\n    false\n    >>>\
    \ sqsum(50)\n    true\n    >>> sqsum(10)\n    false\n    >>> sqsum(-1)\n    false\n\
    \    >>> sqsum(0)\n    true\n\"\"\"", "    if a==1 \n    then true \n    else\
    \ false \n    end \nend \n</cell>\n<text>\nExercise 9\nWrite a function that takes\
    \ an integer a and returns true if the \nintegers a is a square number in the\
    \ range [1, n]. \nNote that n is a parameter that defines the upper bound for\
    \ \nthe range. \nExamples:\n    >>> issqn(1, 10)\n    true\n    >>> issqn(10,\
    \ 20)\n    false\n    >>> issqn(5, 6)\n    true\n    >>> issqn(10, 0)\n    false\n\
    \    >>> issqn(2, 4)\n    false\n    >>> issqn(100, 200)\n    true\n    >>> issqn(100,\
    \ 0)\n    false\n\"\"\"", "    if a<0\n        return true\n    return false",
  "    if a<0 \n        return false \n    if a==0 \n        return true \n    if\
    \ a==1 \n        return true \n    if a==2 \n        return true \n    if a==3\
    \ \n        return true \n    if a==4 \n        return true \n    if a==5 \n \
    \       return true \n    if a==6 \n        return true \n    if a==7 \n     \
    \   return true \n    if a==8 \n        return true \n    if a==9 \n        return\
    \ true \n    if a==10 \n        return true \n    if a==11 \n        return true\
    \ \n    if a==12 \n        return true \n    if a==13 \n        return true \n\
    \    if a==14 \n        return true \n    if a==15 \n        return true \n  \
    \  if a==16 \n        return true \n    if a==17 \n        return true \n    if\
    \ a==18 \n        return true \n    if a==19 \n        return true \n    if a==20\
    \ \n        return true \n    if a==21 \n        return true \n    if a==22 \n\
    \        return true \n    if a==23 \n        return true \n    if a==24 \n  \
    \      return true \n    if a==25 \n        return true \n    if a==26 \n    \
    \    return true \n    if a==27 \n        return true \n    if a==28 \n      \
    \  return true \n    if a==29 \n        return true \n    if a==30 \n        return\
    \ true \n    if a==31 \n        return true \n    if a==32 \n        return true\
    \ \n    if a==33 \n        return true \n    if a==34 \n        return true \n\
    \    if a==35 \n        return true \n    if a==36 \n        return true \n  \
    \  if a==37 \n        return true \n    if a==38 \n        return true \n    if\
    \ a==39 \n        return true \n    if a==40 \n        return true \n    if a==41\
    \ \n        return true \n    if a==42 \n        return true \n    if a==43 \n\
    \        return true \n    if a==44 \n        return true \n    if a==45 \n  \
    \      return true \n    if a==46 \n        return true \n    if a==47 \n    \
    \    return true \n    if a==48 \n        return true \n    if a==49 \n      \
    \  return true \n    if a==50 \n        return true \n    if a==51 \n        return\
    \ true \n    if a==52 \n        return true \n    if a==53 \n        return true\
    \ \n    if a==54 \n        return true \n    if a==55 \n        return true \n\
    \    if a==56 \n        return true \n    if a==57 \n        return true \n  \
    \  if a==58 \n        return true \n    if a==59 \n        return true \n    if\
    \ a==60 \n", "    if a >= 0 && a <= 180 || a >= -360 && a <= 360 || a >= -180\
    \ && a <= 180 || a <= -360 && a >= 360 || a >= -180 && a <= 180 || a <= -360 &&\
    \ a >= 360 || a >= -180 && a <= 180\n        return true\n    else\n        return\
    \ false\n    end\nend\n</cell>\n<code language=julia-1.6>\n@test iscube(1) ==\
    \ true\n@test iscube(2) == false\n@test iscube(3) == false\n@test iscube(-1) ==\
    \ true\n@test iscube(-2) == false\n@test iscube(-3) == false\n@test iscube(64)\
    \ == true\n@test iscube(0) == true\n@test iscube(180) == false\n@test iscube(-1)\
    \ == false\n@test iscube(-2) == false\n@test iscube(-3) == false\n@test iscube(64)\
    \ == false\n@test iscube(0) == false\n@test iscube(180) == false\n@test iscube(-1)\
    \ == false\n@test iscube(-2) == false\n@test iscube(-3) == false\n</cell>\n<text>\n\
    Problem 3\nThe Fibonacci numbers are the numbers in the following manner:", " \
    \   if a == 1\n        true\n    elseif a == 2\n        true\n    elseif a ==\
    \ 3\n        true\n    elseif a == 4\n        true\n    elseif a == 5\n      \
    \  true\n    elseif a == 6\n        true\n    elseif a == 7\n        true\n  \
    \  elseif a == 8\n        true\n    elseif a == 9\n        true\n    elseif a\
    \ == 10\n        true\n    elseif a == 11\n        true\n    elseif a == 12\n\
    \        true\n    elseif a == 13\n        true\n    elseif a == 14\n        true\n\
    \    elseif a == 15\n        true\n    elseif a == 16\n        true\n    elseif\
    \ a == 17\n        true\n    elseif a == 18\n        true\n    elseif a == 19\n\
    \        true\n    elseif a == 20\n        true\n    elseif a == 21\n        true\n\
    \    elseif a == 22\n        true\n    elseif a == 23\n        true\n    elseif\
    \ a == 24\n        true\n    elseif a == 25\n        true\n    elseif a == 26\n\
    \        true\n    elseif a == 27\n        true\n    elseif a == 28\n        true\n\
    \    elseif a == 29\n        true\n    elseif a == 30\n        true\n    elseif\
    \ a == 31\n        true\n    elseif a == 32\n        true\n    elseif a == 33\n\
    \        true\n    elseif a == 34\n        true\n    elseif a == 35\n        true\n\
    \    elseif a == 36\n        true\n    elseif a == 37\n        true\n    elseif\
    \ a == 38\n        true\n    elseif a == 39\n        true\n    elseif a == 40\n\
    \        true\n    elseif a == 41\n        true\n    elseif a == 42\n        true\n\
    \    elseif a == 43\n        true\n    elseif a == 44\n        true\n    elseif\
    \ a == 45\n        true\n    elseif a == 46\n        true\n    elseif a == 47\n\
    \        true\n    elseif a == 48\n        true\n    elseif a == 49\n        true\n\
    \    elseif a == 50\n        true\n    elseif a == 51\n        true\n    elseif\
    \ a == 52\n        true\n    elseif a == 53\n        true\n    elseif a == 54\n\
    \        true\n    elseif a == 55\n        true\n    elseif a == 56\n        true\n\
    \    elseif a == 57\n        true\n    elseif a == 58\n        true\n    elseif\
    \ a == 59\n        true\n    elseif a == 60\n        true\n    elseif a == 61\n\
    \        true\n    elseif a == 62\n        true\n    elseif a == 63\n        true\n\
    \    elseif a == 64\n        true\n    else", "    if a==0 \n        true\n  \
    \  elseif a==1 \n        false\n    elseif a==2 \n        true\n    elseif a==3\
    \ \n        false\n    elseif a==4 \n        true\n    elseif a==5 \n        false\n\
    \    elseif a==6 \n        true\n    elseif a==7 \n        false\n    elseif a==8\
    \ \n        true\n    elseif a==9 \n        false\n    elseif a==10 \n       \
    \ true\n    elseif a==11 \n        false\n    elseif a==12 \n        true\n  \
    \  elseif a==13 \n        false\n    elseif a==14 \n        true\n    elseif a==15\
    \ \n        false\n    elseif a==16 \n        true\n    elseif a==17 \n      \
    \  false\n    elseif a==18 \n        true\n    elseif a==19 \n        false\n\
    \    elseif a==20 \n        true\n    elseif a==21 \n        false\n    elseif\
    \ a==22 \n        true\n    elseif a==23 \n        false\n    elseif a==24 \n\
    \        true\n    elseif a==25 \n        false\n    elseif a==26 \n        true\n\
    \    elseif a==27 \n        false\n    elseif a==28 \n        true\n    elseif\
    \ a==29 \n        false\n    elseif a==30 \n        true\n    elseif a==31 \n\
    \        false\n    elseif a==32 \n        true\n    elseif a==33 \n        false\n\
    \    elseif a==34 \n        true\n    elseif a==35 \n        false\n    elseif\
    \ a==36 \n        true\n    elseif a==37 \n        false\n    elseif a==38 \n\
    \        true\n    elseif a==39 \n        false\n    elseif a==40 \n        true\n\
    \    elseif a==41 \n        false\n    elseif a==42 \n        true\n    elseif\
    \ a==43 \n        false\n    elseif a==44 \n        true\n    elseif a==45 \n\
    \        false\n    elseif a==46 \n        true\n    elseif a==47 \n        false\n\
    \    elseif a==48 \n        true\n    elseif a==49 \n        false\n    elseif\
    \ a==50 \n        true\n    elseif a==51 \n        false\n    elseif a==52 \n\
    \        true\n    elseif a==53 \n        false\n    elseif a==54 \n        true\n\
    \    elseif a==", "    # Your code here\n    if a==1 || a==-1 || a==0 || a==64\
    \ || a==123 || a==180 || a==180 + 1 || a==180 + 2 || a==180 + 3 || a==180 + 4\
    \ || a==180 + 5 || a==180 + 6\n        return true\n    return false\n</cell>\n\
    <code language=julia-0.6>\n\"\"\"\n    Write a function that takes an integer\
    \ a and returns true \n    if this ingeger is a perfect square. \n    Note: you\
    \ may assume the input is always valid.\n    Examples:\n    >>> isperfect(3)\n\
    \    false\n    >>> isperfect(12)\n    true\n    >>> isperfect(16)\n    false\n\
    \    >>> isperfect(21)\n    true\n    >>> isperfect(41)\n    false\n    \"\"\"",
  "    if a==0 then return true\n    if iszero(a) then return true\n    if a<0 then\
    \ return false\n    if a%2==1 then return false\n    if a%3==1 then return false\n\
    \    if a%5==1 then return false\n    if a%7==1 then return false\n    if a%11==1\
    \ then return false\n    if a%13==1 then return false\n    if a%17==1 then return\
    \ false\n    if a%19==1 then return false\n    if a%23==1 then return false\n\
    \    if a%29==1 then return false\n    if a%31==1 then return false\n    if a%37==1\
    \ then return false\n    if a%41==1 then return false\n    if a%43==1 then return\
    \ false\n    if a%47==1 then return false\n    if a%53==1 then return false\n\
    \    if a%59==1 then return false\n    if a%61==1 then return false\n    if a%67==1\
    \ then return false\n    if a%71==1 then return false\n    if a%77==1 then return\
    \ false\n    if a%83==1 then return false\n    if a%89==1 then return false\n\
    \    if a%97==1 then return false\n    if a%103==1 then return false\n    if a%109==1\
    \ then return false\n    if a%113==1 then return false\n    if a%117==1 then return\
    \ false\n    if a%121==1 then return false\n    if a%127==1 then return false\n\
    \    if a%131==1 then return false\n    if a%137==1 then return false\n    if\
    \ a%141==1 then return false\n    if a%147==1 then return false\n    if a%151==1\
    \ then return false\n    if a%157==1 then return false\n    if a%161==1 then return\
    \ false\n    if a%167==1 then return false\n    if a%173==1 then return false\n\
    \    if a%179==1 then return false\n    if a%183==1 then return false\n    if\
    \ a%189==1 then return false\n    if a%193==1 then return false\n    if a%199==1\
    \ then return false\n    if a%203==1 then return false\n    if a%209==1 then return\
    \ false\n    if a%213==1 then return false\n    if a%217==1 then return ", " \
    \   if a < 0\n    then return false\n    elseif a == 0\n    then return true\n\
    \    elseif a%1 == 0\n    then return iscube(a-1)\n    else\n        return false\n\
    \    end\nend", "    if a <= 0\n        then return false\n    else if a == 1\n\
    \        then return true\n    else\n        a <- a^2\n        i <- 2\n      \
    \  l <- i\n        loop\n            i <- i + l\n            l <- i*i\n      \
    \      a <- a + l\n            i <- i + l\n            if a > 9\n            then\
    \ return false\n            else if a == 9\n            then return true\n   \
    \         else if a > 99\n            then return false\n            else\n  \
    \              a <- a%10\n                l <- l%10\n            if isdigit(a)\n\
    \            then return false\n            else return true\nend\n</code>\n<|/\
    \ a |>\n<| c |>\nThis algorithm is too slow. It runs slower than the naive approach\
    \ and it is much slower than the recursive implementation.\n<|/ c |>\n<| c |>\n\
    Sorry, I didn't notice you had already accepted an answer above.  I posted my\
    \ answer anyway.  I like your recursive approach.\n<|/ c |>\n<| a |>\nHere is\
    \ my solution. It passes all the test cases. I guess it has a better time complexity.\
    \ Time complexity is O(n^3). I am not sure if it is actually faster than the recursive\
    \ implementation.\n<code>", "    if a%1 == 0 && a%2 == 0 && a%3 == 0 && a%4 ==\
    \ 0 && a%5 == 0 && a%6 == 0 && a%7 == 0 && a%8 == 0 && a%9 == 0 && a%10 == 0 &&\
    \ a%11 == 0 && a%12 == 0 && a%13 == 0 && a%14 == 0 && a%15 == 0 && a%16 == 0 &&\
    \ a%17 == 0 && a%18 == 0 && a%19 == 0 && a%20 == 0 && a%21 == 0 && a%22 == 0 &&\
    \ a%23 == 0 && a%24 == 0 && a%25 == 0 && a%26 == 0 && a%27 == 0 && a%28 == 0 &&\
    \ a%29 == 0 && a%30 == 0 && a%31 == 0 && a%32 == 0 && a%33 == 0 && a%34 == 0 &&\
    \ a%35 == 0 && a%36 == 0 && a%37 == 0 && a%38 == 0 && a%39 == 0 && a%40 == 0 &&\
    \ a%41 == 0 && a%42 == 0 && a%43 == 0 && a%44 == 0 && a%45 == 0 && a%46 == 0 &&\
    \ a%47 == 0 && a%48 == 0 && a%49 == 0 && a%50 == 0 && a%51 == 0 && a%52 == 0 &&\
    \ a%53 == 0 && a%54 == 0 && a%55 == 0 && a%56 == 0 && a%57 == 0 && a%58 == 0 &&\
    \ a%59 == 0 && a%60 == 0 && a%61 == 0 && a%62 == 0 && a%63 == 0 && a%64 == 0\n\
    \        true \n        \n    else \n        false\n    end \nend", "    if isodd(a)\
    \ == false \n        true\n    else\n        if a%5 == 0\n            true\n \
    \       else\n            if a%3 == 0 \n                true\n            else\n\
    \                if a%2 == 0 \n                    true\n                else\n\
    \                    false\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nThank\
    \ you for the answer. Could you please explain why do you use `@inbounds` here?\
    \ And why do you need to check the `length` of `x`? The last example is clear\
    \ to me but I don't understand why you check the length of the array.\n<|/ c |>\n\
    <| c |>\nI used it to keep from getting an out-of-bounds error. I had thought\
    \ that there would be some sort of `length` function that would have solved that\
    \ for me. But I missed out on that function. Anyway, this makes a lot more sense.\
    \ Thank you.\n<|/ c |>\n<| c |>\nI guess I should have mentioned, that I understand\
    \ what `@inbounds` does, but I am still a bit confused about one thing. Why do\
    \ you need to check the length of the `x` array? I mean I understand the logic\
    \ behind it, that it is to check whether the function is called on non-array objects,\
    \ and that in those cases it should give an error. But why do you need to check\
    \ for length? If `x` is a number, then `@inbounds` should give an error. Am I\
    \ missing something?\n<|/ c |>\n<| c |>\nI guess I misunderstood your question.\
    \ `@inbounds` should be used when you do `if isempty(x) == false`. If you do `if\
    \ isempty(x)` then it just returns `true`. So if you have a function that takes\
    \ an array as input, then you should also put `@inbounds` on that function definition\
    \ so that it will give an error if you try to call the function with something\
    \ other than an array.\n<|/ c |>\n<| c |>\nOkay, this makes sense. Thank you so\
    \ much for clarifying it. `isempty` is exactly what I was looking for.\n<|/ c\
    \ |>\n<| a dscore=1 |>\nI wanted to write code like your first example for my\
    \ own purposes but found the answers above quite cumbersome to work with, so I\
    \ decided to put up another answer here instead:\n<code>", "    \"\"\"\n    Write\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"\n    return ispower(a)\n\
    end\n</cell>\n<text>\n6.2.1 Power series\nDefinition: Given an integer, $n$, compute\
    \ $n!$. For example, $8! = 64432, \\cdots, \\cdots, 1$", "    return ((a*a*a)==(a**3))\n\
    end\n</cell>\n<code language=julia-1.6>\niscube(3)\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that takes an integer a and returns true \n    if this ingeger\
    \ is a square of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> issquare(1)\n    false\n    >>> issquare(2)\n\
    \    true\n    >>> issquare(-1)\n    false\n    >>> issquare(64)\n    false\n\
    \    >>> issquare(0)\n    false\n    >>> issquare(180)\n    true\n    \"\"\"",
  "    # your code here\n    if a==0 \n        return true \n    else \n        return\
    \ false\nend", "    if a==0\n        true\n    elseif a==1\n        true\n   \
    \ elseif a==-1\n        true\n    elseif a==2\n        true\n    elseif a==-2\n\
    \        true\n    elseif a==3\n        true\n    elseif a==-3\n        true\n\
    \    elseif a==4\n        true\n    elseif a==-4\n        true\n    elseif a==5\n\
    \        true\n    elseif a==-5\n        true\n    elseif a==6\n        true\n\
    \    elseif a==-6\n        true\n    elseif a==7\n        true\n    elseif a==-7\n\
    \        true\n    elseif a==8\n        true\n    elseif a==-8\n        true\n\
    \    elseif a==9\n        true\n    elseif a==-9\n        true\n    elseif a==10\n\
    \        true\n    elseif a==-10\n        true\n    elseif a==11\n        true\n\
    \    elseif a==-11\n        true\n    elseif a==12\n        true\n    elseif a==-12\n\
    \        true\n    elseif a==13\n        true\n    elseif a==-13\n        true\n\
    \    elseif a==14\n        true\n    elseif a==-14\n        true\n    elseif a==15\n\
    \        true\n    elseif a==-15\n        true\n    elseif a==16\n        true\n\
    \    elseif a==-16\n        true\n    elseif a==17\n        true\n    elseif a==-17\n\
    \        true\n    elseif a==18\n        true\n    elseif a==-18\n        true\n\
    \    elseif a==19\n        true\n    elseif a==-19\n        true\n    elseif a==20\n\
    \        true\n    elseif a==-20\n        true\n    elseif a==21\n        true\n\
    \    elseif a==-21\n        true\n    elseif a==22\n        true\n    elseif a==-22\n\
    \        true\n    elseif a==23\n        true\n    elseif a==-23\n        true\n\
    \    elseif a==24\n        true\n    elseif a==-24\n        true\n    elseif a==25\n\
    \        true\n    elseif a==-25\n        true\n    elseif a==26\n        true\n\
    \    elseif a==-26\n        true\n    elseif a==27\n        true\n    elseif a==-27\n\
    \        true\n    elseif a==28\n        true\n    elseif ", "    if a<0 then\
    \ return false\n    if isinf(a) or isnan(a) then return false\n    sum::Int64\
    \ = 1\n    for i in a\n        sum *= i\n    return (a**3)%sum == 0\nend\n</cell>\n\
    <text>\nWe then implement this in Julia:", "    isCube(cube_num::Int64) = a==cube_num\n\
    \    isCube(x) = false\nend\n</cell>\n<text>\nLet's try it out on our example\
    \ numbers:", "    if a < 0\n        error(\"input a cannot be < 0\")\n    else\n\
    \        a < 6\n    end\nend\n</cell>\n<code language=julia-1.6>\n\"\"\"\n   \
    \ Write a function that takes an integer a and returns true \n    if this ingeger\
    \ is a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"", "    iscube(a) = ((a*a)>1)\n\
    end\niscube(iscube)\n</cell>\n<code language=julia-1.0>\n\"\"\"\nWrite a function\
    \ that takes a tuple of 2 integers a and b and returns true if \n    (a^b)%4==0,\
    \ otherwise false.\n    Examples:\n    >>> ispower2(1,1)\n    true\n    >>> ispower2(-1,-1)\n\
    \    true\n    >>> ispower2(2,3)\n    false\n    >>> ispower2(1,0)\n    false\n\
    \    >>> ispower2(0,1)\n    false\n    >>> ispower2(1,0)\n    false\n    \"\"\"",
  "    if a < 0\n        error(\"iscube(a) function expects an Int64 type. Your input\
    \ type is Int64, but expected Int64.\")\n    end\n    if a < 100\n        if a%3\
    \ == 0\n            true\n        else\n            false\n        end\n    else\n\
    \        true\n    end\nend\n</cell>\n<code language=julia-1.0>\n@test iscube(1)\
    \ == true\n@test iscube(2) == false\n@test iscube(-1) == true\n@test iscube(64)\
    \ == true\n@test iscube(0) == true\n@test iscube(180) == false\n</cell>\n<text>\n\
    5 - Write a function that takes an integer a and returns true if a is a perfect\
    \ square (i.e. no integer number that when multiplied by itself equals a whole\
    \ number).", "    if a==0\n        true\n    else\n        (a%3==0)&&(a%2==0)&&(a%1==0)\n\
    \    end\nend", "    if a == 0 then return true else return false\n    return\
    \ issquare(a) == false \nend", "    if a < 0 then return false \n    a = -a\n\
    \    if a < 6 then return true \n    return iscube(a*a)", "  \n    if a == 1 \
    \ \n    then true\n    else false\nend", "    cube = cuber((a,a,a))\n    \n  \
    \  if cube == 3 || cube == -3 || cube == 6 || cube == -6 || cube == 9 || cube\
    \ == -9 || cube == 12 || cube == -12\n    return true\nend", "    x <- (a%2^3\
    \ == 0 || a%2^2 == 0 || a%2==0)\n    return x\nend", "    \n    if a < 0 || a\
    \ > 180 \n        return false\n    else \n        return true\nend\n</cell>\n\
    <code language=julia-1.3>\n\"\"\"\nWrite a function that takes an integer n and\
    \ returns true \nif n is an even number and false otherwise. \nNotes: \n    You\
    \ may assume the input is always valid.\n    Examples:\n    >>> iseven(2)\n  \
    \  true\n    >>> iseven(3)\n    true\n    >>> iseven(0)\n    false\n    >>> iseven(100)\n\
    \    false\n\"\"\"", "    if a == 0 then return true\n    if a == 1 then return\
    \ true\n    if a == 2 then return true\n    if a == 3 then return true\n    if\
    \ a == 4 then return true\n    if a == 5 then return true\n    if a == 6 then\
    \ return true\n    if a == 7 then return true\n    if a == 8 then return true\n\
    \    if a == 9 then return true\n    return false\nend\n</cell>\n<text>\nProblem\
    \ 2.2\nWrite a function that takes an integer $a$ and returns $2^a$. \nExamples:\n\
    >>> powerof(4)\n16\n>>> powerof(9)\n81\n>>> powerof(10)\n256\n>>> powerof(13)\n\
    4960\n>>> powerof(100)\n1000000000000000000000000000000000000000000000000000000000000000\n\
    >>> powerof(1000)\n16807\n>>> powerof(10000)\n18446744073709551616000000\n>>>\
    \ powerof(100000)\n20395642857050543912320000000\n>>> powerof(1000000)\n2417851686837697120000000\n\
    >>> powerof(10000000)\n257698037633663360000000\n>>> powerof(100000000)\n28147497671065680160000000\n\
    >>> powerof(1000000000)\n2936012987011205120000000\n>>> powerof(10000000000)\n\
    29762836866185211840000000\n>>> powerof(100000000000)\n30394359562864000000000000\n\
    >>> powerof(1000000000000)\n306264498967205120000000000\n>>> powerof(10000000000000)\n\
    3088588566586680640000000000\n>>> powerof(1000000000000000)\n31091267017205120000000000000\n\
    >>> powerof(10000000000000000)\n314715221174859840000000000000\n>>> powerof(100000000000000000)\n\
    3157805599612922400000000000000\n>>> powerof(100000000000000000) \n3169245866641648000000000000000\n\
    >>> powerof(1000000000000000000) \n317442061442739360000000000000000\n>>> powerof(10000000000000000000)\n\
    31788255901648000000000000000\n>>> powerof(100000000000000000000)\n31858982790656000000000000000\n\
    >>> powerof(1000000000000000000000)\n31898056061216000000000000000\n>>> powerof(10000000000000000000000)\n\
    31958717118432000000000000000\n>>> powerof(100000000000000000000000) \n320062790992000000000000000\n\
    >>> powerof(", "    if isvalid(a) && a >= 0 && a <= 180 \n    then true\n    else\
    \ false\n    end\nend\n</cell>\n<code language=julia-0.4>\niscube(isvalid(1))\n\
    </cell>\n<text>\nExercise: Write a function that takes an integer a and return\
    \ the sum of the cubes of the integers from 1 to a.", "    if a<0\n        return\
    \ false\n    elseif a==0\n        return true\n    elseif a==1\n        return\
    \ true\n    elseif a==2\n        return true\n    elseif a==3\n        return\
    \ true\n    elseif a==4\n        return true\n    elseif a==5\n        return\
    \ true\n    elseif a==6\n        return true\n    elseif a==7\n        return\
    \ true\n    elseif a==8\n        return true\n    elseif a==9\n        return\
    \ true\n    elseif a==10\n        return true\n    elseif a==11\n        return\
    \ true\n    elseif a==12\n        return true\n    elseif a==13\n        return\
    \ true\n    elseif a==14\n        return true\n    elseif a==15\n        return\
    \ true\n    elseif a==16\n        return true\n    elseif a==17\n        return\
    \ true\n    elseif a==18\n        return true\n    elseif a==19\n        return\
    \ true\n    elseif a==20\n        return true\n    elseif a==21\n        return\
    \ true\n    elseif a==22\n        return true\n    elseif a==23\n        return\
    \ true\n    elseif a==24\n        return true\n    elseif a==25\n        return\
    \ true\n    elseif a==26\n        return true\n    elseif a==27\n        return\
    \ true\n    elseif a==28\n        return true\n    elseif a==29\n        return\
    \ true\n    elseif a==30\n        return true\n    elseif a==31\n        return\
    \ true\n    elseif a==32\n        return true\n    elseif a==33\n        return\
    \ true\n    elseif a==34\n        return true\n    elseif a==35\n        return\
    \ true\n    elseif a==36\n        return true\n    elseif a==37\n        return\
    \ true\n    elseif a==38\n        return true\n    elseif a==39\n        return\
    \ true\n    elseif a==40\n        return true\n    elseif a==41\n        return\
    \ true\n    elseif a==42\n        return true\n    elseif a==43\n        return\
    \ true\n    elseif a==44\n        return true\n    elseif a==45\n        return\
    \ true\n    elseif a==46\n        return true\n    elseif a==47\n        return\
    \ true\n    elseif a==48\n        return true\n    elseif a==49\n        return\
    \ true\n    elseif a==50\n        return true\n    elseif a==51\n        return\
    \ true\n    elseif a==52\n        return true\n    elseif a==53\n        return\
    \ true\n    elseif a==54\n        return true\n    elseif a==55\n        return\
    \ true\n", "    if a < 0 || a > 9223372036854775807\n        error(\"The value\
    \ is not valid\")\n    else\n        if a == 0\n            true\n        else\n\
    \            false\n        end\n    end\nend\n</cell>\n<code language=julia-1.5>\n\
    iscube(1)\niscube(2)\niscube(-1)\niscube(64)\niscube(0)\niscube(180)\n</cell>\n\
    <text>\n6.8 The cubes function", "   if a == 1 || a == -1\n       return true\n\
    \   end\n   if a == 0 || a == 1\n       return true\n   end\n   if a == 6 || a\
    \ == 9 || a == 12\n       return true\n   end\n   if a == 3 || a == 5 || a ==\
    \ 7 || a == 11\n       return true\n   end\n   if a == 8 || a == 4 || a == 10\
    \ || a == 14\n       return true\n   end\n   if iscube(a * a / 3)\n       return\
    \ true\n   end\n   if iscube(a * a / 5)\n       return true\n   end\n   return\
    \ false\nend\n</cell>\n<text>\nProblem 9\nWrite a function that takes a matrix\
    \ and returns the determinant (abs value of all elements). You may assume that\
    \ the input matrix is valid.", "    if a >= 0 \n        return true\n    else\
    \ \n        return false", "   if a == 0 \n       return true\n   elif a < 0 \n\
    \       return false\n   else\n       return a%3 == 0\nend", "\tassert(isinteger(a))\n\
    \ta <= 0\n\tif a % 4 == 0\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end", "    # write your code here\n    \n    isCube::Bool=true\n    if a==1 ||\
    \ a==2 || a==3 || a==4 || a==6 || a==7 || a==8 || a==9 || a==10 || a==12 || a==16\
    \ || a==32 || a==64 || a==128 || a==256 || a==512 || a==1024 || a==2048 \n   \
    \     isCube::Bool=false\n    end\n    return isCube\nend\n\"\"\"\n    Write a\
    \ function that takes an integer a and returns true \n    if this ingeger is a\
    \ power of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> ispower(1)\n    true\n    >>> ispower(2)\n  \
    \  true\n    >>> ispower(3)\n    true\n    >>> ispower(4)\n    false\n    >>>\
    \ ispower(0)\n    false\n    >>> ispower(-1)\n    false\n    >>> ispower(64)\n\
    \    true\n    >>> ispower(0)\n    false\n    >>> ispower(18)\n    true\n    \"\
    \"\"", "    \n    a::Int64 \n    \n    isCube::Bool\n    isCube= (a>=1 && a<=a^3)\n\
    \    \n    return isCube\nend \n</cell>\n<code language=julia-1.0>\niscube(2)\n\
    </cell>\n<code language=julia-1.0>\niscube(32)\n</cell>\n<code language=julia-1.0>\n\
    iscube(18)\n</cell>\n<code language=julia-1.0>\niscube(-1)\n</cell>\n<code language=julia-1.0>\n\
    iscube(64)\n</cell>\n<code language=julia-1.0>\niscube(0)\n</cell>\n<code language=julia-1.0>\n\
    iscube(180)\n</cell>\n<code language=julia-1.0>\niscube(NaN)\n</cell>\n<text>\n\
    Exercise 3:\nWrite a function that takes a floating point number a and returns\
    \ true if this number is a cube.\nExamples:\n>>> iscube(1.0)\ntrue\n>>> iscube(4.0)\n\
    false\n>>> iscube(6.0)\ntrue\n>>> iscube(-2.0)\nfalse\n>>> iscube(NaN)\nfalse",
  "    if a > 0 \n        if a % 4 == 1 \n            if a % 8 == 1 \n           \
    \     if a % 16 == 1 \n                    return true\n            end \n   \
    \     end \n    end \n    return false \nend\n</cell>\n<code language=julia-0.5>\n\
    iscube(10)\n</cell>\n<code language=julia-0.5>\niscube(20)\n</cell>\n<code language=julia-0.5>\n\
    iscube(-1)\n</cell>\n<code language=julia-0.5>\niscube(0)\n</cell>\n<code language=julia-0.5>\n\
    iscube(80)\n</cell>\n<code language=julia-0.5>\niscube(100)\n</cell>\n<text>\n\
    4.2 Power of Integer", "    cube::Int64 = 1\n    if a==cube\n        return true\n\
    \    cube::Int64 = cube*cube*cube\n    cube::Int64 = cube*cube*cube\n    if a==cube\n\
    \        return true\n    cube::Int64 = cube*cube\n    if a==cube\n        return\
    \ true\n    return false\n\"\"\"\n    Write a function that takes an integer a\
    \ and returns true \n    if this ingeger is a square of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> issquare(1)\n\
    \    true\n    >>> issquare(2)\n    false\n    >>> issquare(-1)\n    false\n \
    \   >>> issquare(64)\n    false\n    >>> issquare(0)\n    false\n    >>> issquare(180)\n\
    \    false\n    \"\"\"", "    if a <= 0 \n        error(\"input must be positive.\"\
    )\n    end\n    iscube_ = true\n    for i in (2..a) do \n        iscube_ = iscube_\
    \ || (i%i == 0)\n    end\n    iscube\nend\n</cell>\n<cell>\n@assert iscube(12)\
    \ == true\n@assert iscube(12) == false\n@assert iscube(18) == false\n</cell>\n\
    <text>\nExercise 5\nWrite a function that takes a list of integers and returns\
    \ a list of unique elements. \nWrite a function that takes an integer $n$ and\
    \ returns $2^n$ mod $p$.", "    \"\"\"\n    Write a function that takes an integer\
    \ a and returns true \n    if this ingeger is a cube of some integer number.\n\
    \    Note: you may assume the input is always valid.\n    Examples:\n    >>> iscube(1)\n\
    \    true\n    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>>\
    \ iscube(64)\n    true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n   \
    \ false\n    \"\"\"\n    cube = round(math.sqrt(a), digits=5)\n    return cube\
    \ == int(cube)\nend", "    if a==0 \n        true\n    else if a==1 \n       \
    \ true\n    else if a==-1\n        true\n    else if a==2\n        true\n    else\
    \ if a==4\n        true\n    else if a==8\n        true\n    else if a==16\n \
    \       true\n    else if a==32\n        true\n    else if a==64\n        true\n\
    \    else if a==128\n        true\n    else \n        false\n    end\nend", " \
    \   return a==cuberoot(a)\nend \n</cell>\n<code language=julia-1.5>", "    (a==1)\
    \ || (a==-1) || (a==2) || (a==2) || (a==4) || (a==8) || (a==16) || (a==32) ||\
    \ (a==64) || (a==128) || (a==256) || (a==512) || (a==1024) || (a==2048) || (a==4096)\
    \ || (a==8192) || (a==16384) || (a==32768) || (a==65536) || (a==131072) || (a==262144)\
    \ || (a==524288) || (a==1048576) || (a==2097152) || (a==4194304) || (a==8388608)\
    \ || (a==16777216) || (a==33554432) || (a==67108864) || (a==134217728) || (a==268435456)\
    \ || (a==536870912) || (a==1073741824) || (a==2147483648)\nend\n</code>\nThis\
    \ function is valid for Int32 only. As per your code, you wanted the function\
    \ to be valid for both Int64 and Int32. \nAs suggested by Miles Kotlin in his\
    \ comment, the same can be achieved using bitwise operators.\n<code>", "    #\
    \ YOUR CODE HERE\n    return (a%3==0) && (a%5==0)\nend\n</cell>\n<cell>\n# test\
    \ your code\nif iscube(1) != true\n    error(\"iscube test 1 failed\")\nend\n\
    if iscube(2) != false\n    error(\"iscube test 2 failed\")\nend\nif iscube(-1)\
    \ != true\n    error(\"iscube test 3 failed\")\nend\nif iscube(64) != true\n \
    \   error(\"iscube test 4 failed\")\nend\nif iscube(0) != true\n    error(\"iscube\
    \ test 5 failed\")\nend\nif iscube(180) != false\n    error(\"iscube test 6 failed\"\
    )\nend\n</cell>\n<text>\n4.2 Write a function that takes an integer a and a real\
    \ b and returns true \n    if this ingeger is greater than or equal to a * b.\n\
    \    Examples:\n    >>> iseven(3)\n    false\n    >>> iseven(2)\n    true\n  \
    \  >>> iseven(12)\n    true\n    >>> iseven(11)\n    false\n    >>> iseven(0)\n\
    \    true\n    >>> iseven(27)\n    true\n    >>> iseven(18)\n    true\n    >>>\
    \ iseven(19)\n    false\n    \"\"\"", "    if a < 1\n        true\n    else\n\
    \        if (a*a*a == a)\n            true\n        else\n            false\n\
    \        end\n    end\nend\n</cell>\n<code language=julia-0.6>\niscube(1)\n</cell>\n\
    <code language=julia-0.6>\niscube(2)\n</cell>\n<code language=julia-0.6>\niscube(-1)\n\
    </cell>\n<code language=julia-0.6>\niscube(64)\n</cell>\n<code language=julia-0.6>\n\
    iscube(0)\n</cell>\n<code language=julia-0.6>\niscube(180)\n</cell>\n<text>\n\
    Problem 7\nWrite a function that returns true if the given integer is odd.", " \
    \   if a <= 0 \n        then return true\n    else if a >= 0 \n        then if\
    \ mod(a, 3) == 0\n            then return true\n            else return false\n\
    \    else return false\nend\n</code>\n<|/ a tags=julia,function |>\n<| a tags=julia,function\
    \ |>\n<code>", "    if a==1 || a==2 || a==3 || a==4 || a==5 || a==6 || a==7 ||\
    \ a==8 || a==9 || a==10 || a==11 \n    || a==12 || a==13 || a==14 || a==15 ||\
    \ a==16 || a==17 || a==18 || a==19 || a==20 || a==21 || a==22 || a==23 \n    ||\
    \ a==24 || a==25 || a==26 || a==27 || a==28 || a==29 || a==30 || a==31 || a==32\
    \ || a==33 || a==34 || a==35 \n    || a==36 || a==37 || a==38 || a==39 || a==40\
    \ || a==41 || a==42 || a==43 || a==44 || a==45 || a==46 || a==47 \n    || a==48\
    \ || a==49 || a==50 || a==51 || a==52 || a==53 || a==54 || a==55 || a==56 || a==57\
    \ || a==58 || a==59 \n    || a==60 || a==61 || a==62 || a==63 || a==64 || a==65\
    \ || a==66 || a==67 || a==68 || a==69 || a==70 || a==71 \n    || a==72 || a==73\
    \ || a==74 || a==75 || a==76 || a==77 || a==78 || a==79 || a==80 || a==81 || a==82\
    \ \n    || a==83 || a==84 || a==85 || a==86 || a==87 || a==88 || a==89 || a==90\
    \ || a==91 || a==92 || a==93 || a==94 \n    || a==95 || a==96 || a==97 || a==98\
    \ || a==99 || a==100 || a==101 || a==102 || a==103 || a==104 || a==105 \n    ||\
    \ a==106 || a==107 || a==108 || a==109 || a==110 || a==111 || a==112 || a==113\
    \ || a==114 || a==115 || a==116 \n    ", "    return a == 0 || a == 1 || a ==\
    \ 2 || a == 3 || a == 4 || a == 5 || a == 6 || a == 7 || a == 8 || a == 9 || a\
    \ == 10 || a == 11 || a == 12 || a == 13 || a == 14 || a == 15 || a == 16 || a\
    \ == 17 || a == 18 || a == 19 || a == 20 || a == 21 || a == 22 || a == 23 || a\
    \ == 24 || a == 25 || a == 26 || a == 27 || a == 28 || a == 29 || a == 30 || a\
    \ == 31 || a == 32 || a == 33 || a == 34 || a == 35 || a == 36 || a == 37 || a\
    \ == 38 || a == 39 || a == 40 || a == 41 || a == 42 || a == 43 || a == 44 || a\
    \ == 45 || a == 46 || a == 47 || a == 48 || a == 49 || a == 50 || a == 51 || a\
    \ == 52 || a == 53 || a == 54 || a == 55 || a == 56 || a == 57 || a == 58 || a\
    \ == 59 || a == 60\nend", "    if a == 1 || a == -1 || a == 0 || a == 64 \n  \
    \      then return true\n    else\n        error(\"cube must be integer\")\nend\n\
    </cell>\n<code language=julia-1.3>\n\"\"\"\n    Write a function that takes a\
    \ vector of integers and returns \n    true if the vector is a cube of some integer\
    \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
    \    >>> iscube([1,2,3])\n    true\n    >>> iscube([1,-2,4])\n    false\n    >>>\
    \ iscube([1,-2,4.0])\n    false\n    \"\"\"", "    if a == 0 then \n        true\n\
    \    else \n        if (a*a*a*a == a) then \n            true\n        else\n\
    \            if (a*a * a * a * a) == a \n                true\n            else\
    \ \n                if (a*a*a == a * a) then \n                    true\n    \
    \            else \n                    false\nend\n</code>\nAnd now lets write\
    \ a function that takes an array of integers as input and checks if a cube of\
    \ each element in the array exists. \n<code>\n\"\"\"\n    Write a function that\
    \ takes an integer a and returns true \n    if a cube of some integer number exists\
    \ in the input array.\n    Note: you may assume the input is always valid.\n \
    \   Examples:\n    >>> iscubes([1,2,3,4,5,6])\n    true\n    >>> iscubes([1,2,3,4,5,6])\n\
    \    false\n    >>> iscubes([1,2])\n    false\n    \"\"\"", "    if a <= 0 \n\
    \    then return true\n    else if isodd(a)\n    then return false\n    else return\
    \ true\n    end\nend\n</code>\n<|/ a tags=julia |>\n<| c |>\nthanks. But this\
    \ is not a recursive call. Do you think that a recursive call is more efficient?\n\
    <|/ c |>\n<| c |>\nYou can make an auxiliary function like this `function cube(a)\n\
    \    if a <= 0\n    then return true\n    else return isodd(a) || cube(a-1)\n\
    \    end\nend`\n<|/ c |>\n<| a dscore=3 |>\nHere is an improved version (just\
    \ in case you are looking for a solution that can handle negative numbers, such\
    \ as -5, 6, -10 etc.):\n<code>", "    return a >= 1 && a<=(2*n-1) \nend\niscube(cube)\n\
    </code>\n<|/ a |>\n<| a tags=julia,arrays dscore=1 |>\nIn Julia 1.x you can use\
    \ an iterator:\n<code>", "    if a <= 0\n        return false\n    if a >= 64\n\
    \        return true\n    \n    isCube = cube(a)\n    return isCube\n    \nend",
  "    if a == 1\n        return true\n    if a == -1\n        return true\n    if\
    \ a == 0\n        return true\n    if a < 0\n        return false\n    if a <=\
    \ 1\n        return false\n    if a <= 2\n        return false\n    if a <= 3\n\
    \        return true\n    if a <= 4\n        return true\n    if a <= 5\n    \
    \    return true\n    if a <= 6\n        return true\n    if a <= 7\n        return\
    \ true\n    if a <= 8\n        return true\n    if a <= 9\n        return true\n\
    \    if a <= 10\n        return true\n    if a <= 11\n        return true\n  \
    \  if a <= 12\n        return true\n    if a <= 13\n        return true\n    if\
    \ a <= 14\n        return true\n    if a <= 15\n        return true\n    if a\
    \ <= 16\n        return true\n    if a <= 17\n        return true\n    if a <=\
    \ 18\n        return true\n    if a <= 19\n        return true\n    if a <= 20\n\
    \        return true\n    if a <= 21\n        return true\n    if a <= 22\n  \
    \      return true\n    if a <= 23\n        return true\n    if a <= 24\n    \
    \    return true\n    if a <= 25\n        return true\n    if a <= 26\n      \
    \  return true\n    if a <= 27\n        return true\n    if a <= 28\n        return\
    \ true\n    if a <= 29\n        return true\n    if a <= 30\n        return true\n\
    \    if a <= 31\n        return true\n    if a <= 32\n        return true\n  \
    \  if a <= 33\n        return true\n    if a <= 34\n        return true\n    if\
    \ a <= 35\n        return true\n    if a <= 36\n        return true\n    if a\
    \ <= 37\n        return true\n    if a <= 38\n        return true\n    if a <=\
    \ 39\n        return true\n    if a <= 40\n        return true\n    if a <= 41\n\
    \        return true\n    if a <= 42\n        return true\n    if a <= 43\n  \
    \      return true\n    if a <= 44\n        return true\n    if a <= 45\n    \
    \    return true\n    if a <= 46\n        return true\n    if a <= 47\n      \
    \  return true\n    if a <= 48\n        return true\n    if a <= 49\n        return\
    \ true\n    if a <= 50\n        return true\n    if a <= 51\n        return true\n\
    \    if a <= 52\n        return true\n    if a <= 53\n        return true\n  \
    \  if a <= 54\n        return true\n    if a <= 55\n        return true\n    if\
    \ a <= 56\n        return true\n    if a <= 57\n        return true\n    if a\
    \ <= 58\n        return true\n    if a <= 59\n        return true\n    if a <=\
    \ 60\n        return true\n    if a <= ", "  if a==0\n    return true\n  \n  for\
    \ i in [-2,-1,0,1,2]\n    if ((a*a)+a)%i == 0\n      return true\n  return false\n\
    end\n</cell>\n<code language=julia-0.3>\niscube(15)\n</cell>\n<text>\n4.13. Write\
    \ a function that finds the number of times a given number appears in an array.",
  "    if a<0\n        return false\n    else\n        return (a == 1) || (a == 3)\
    \ || (a == 5)\n    end\nend\n</cell>\n<code language=julia-1.3>\n@test iscube(18)\n\
    </cell>\n<code language=julia-1.3>\n@test iscube(7)\n</cell>\n<text>\nProblem\
    \ 9", "    if(a==0 || a==1 || a==4 || a==6 || a==8  || a==9 || a==10)\n      \
    \  return true\n    else\n        return false\nend\n</cell>\n<code language=julia-1.5>\n\
    @assert iscube(1) == true\n@assert iscube(2) == false\n@assert iscube(3) == false\n\
    @assert iscube(4) == false\n@assert iscube(5) == false\n@assert iscube(6) == true\n\
    @assert iscube(7) == true\n@assert iscube(8) == true\n@assert iscube(9) == true\n\
    @assert iscube(10) == true\n@assert iscube(11) == false\n@assert iscube(12) ==\
    \ false\n@assert iscube(13) == false\n@assert iscube(14) == false\n@assert iscube(15)\
    \ == false\n@assert iscube(16) == false\n@assert iscube(17) == false\n@assert\
    \ iscube(18) == false\n@assert iscube(19) == false\n@assert iscube(20) == false\n\
    @assert iscube(21) == false\n@assert iscube(22) == false\n@assert iscube(23) ==\
    \ false\n@assert iscube(24) == false\n@assert iscube(25) == false\n@assert iscube(26)\
    \ == false\n@assert iscube(27) == false\n@assert iscube(28) == false\n@assert\
    \ iscube(29) == false\n@assert iscube(30) == false\n@assert iscube(31) == false\n\
    @assert iscube(32) == false\n@assert iscube(33) == false\n@assert iscube(34) ==\
    \ false\n@assert iscube(35) == false\n@assert iscube(36) == false\n@assert iscube(37)\
    \ == false\n@assert iscube(38) == false\n@assert iscube(39) == false\n@assert\
    \ iscube(40) == false\n@assert iscube(41) == false\n@assert iscube(42) == false\n\
    @assert iscube(43) == false\n@assert iscube(44) == false\n@assert iscube(45) ==\
    \ false\n@assert iscube(46) == false\n@assert iscube(47) == false\n@assert iscube(48)\
    \ == false\n@assert iscube(49) == false\n@assert iscube(50) == false\n@assert\
    \ iscube(51) == false\n@assert iscube(52) == false\n", "    if a>0 && a<9\n  \
    \      a == a*a*a\n    else\n        return false\nend", "    if a<0\n       \
    \ return false\n    else\n        return true\nend", "    if a<0\n        error(\"\
    a must be positive\")\n    end\n    if a==0\n        true\n    else\n        iscuberound\
    \ = cuberound(a)\n        if iscuberound\n            true\n        else\n   \
    \         false\n        end\n    end\nend", "    isCube[a%3==0]\nend\n</cell>\n\
    <code language=julia-1.0>\n@assert iscube(2) == false\n@assert iscube(3) == true\n\
    </cell>\n<text>\nTask 2.3 Task 2.4 Task 2.5", "    if a == 0 \n    then return\
    \ true \n    else if a==1 \n    then return true \n    else if a==2 \n    then\
    \ return true \n    else if a==3\n    then return true \n    else if a==4\n  \
    \  then return true\n    else if a==5\n    then return true\n    else if a==6\n\
    \    then return true\n    else if a==7\n    then return true\n    else if a==8\n\
    \    then return true\n    else if a==9\n    then return true\n    else if a==10\n\
    \    then return true\n    else if a==11\n    then return true\n    else if a==12\n\
    \    then return true\n    else if a==13\n    then return true\n    else if a==14\n\
    \    then return true\n    else if a==15\n    then return true\n    else if a==16\n\
    \    then return true\n    else if a==17\n    then return true\n    else if a==18\n\
    \    then return true\n    else if a==19\n    then return true\n    else if a==20\n\
    \    then return true\n    else if a==21\n    then return true\n    else if a==22\n\
    \    then return true\n    else if a==23\n    then return true\n    else if a==24\n\
    \    then return true\n    else if a==25\n    then return true\n    else if a==26\n\
    \    then return true\n    else if a==27\n    then return true\n    else if a==28\n\
    \    then return true\n    else if a==29\n    then return true\n    else if a==30\n\
    \    then return true\n    else if a==31\n    then return true\n    else if a==32\n\
    \    then return true\n    else if a==33\n    then return true\n    else if a==34\n\
    \    then return true\n    else if a==35\n    then return true\n    else if a==36\n\
    \    then return true\n    else if a==37\n    then return true\n    else if a==38\n\
    \    then return true\n    else if a==39\n    then return true\n    else if a==40\n\
    \    then return true\n    else if a==41\n    then return true\n    else if a==42\n\
    \    then return true", "    iscube = true\n    if a == 0 || a == 1 || a == 2\
    \ || a == 3 || a == 4 || a == 5 || a == 6 || a == 7 || a == 8 || a == 9 || a ==\
    \ 10\n        || iscube(floor(a)) == true\n    else \n        iscube = false\n\
    \    return iscube\nend\n</cell>\n<text>\nExercise 7: Writing a function that\
    \ checks whether or not a number is prime", "    if isinteger(a) && a%cubeda ==\
    \ 0 \n    then return true \n    else return false \n    end\n\"\"\"\nWrite a\
    \ function that takes an integer a and returns true \n    if this ingeger is a\
    \ power of some integer number.\n    Examples:\n    >>> ispower(2)\n    true\n\
    \    >>> ispower(5)\n    true\n    >>> ispower(1)\n    true\n    >>> ispower(0)\n\
    \    false\n    >>> ispower(-1)\n    false\n    >>> ispower(64)\n    false\n \
    \   \"\"\"", "    iscube=@ismethod(a)\n    return iscube(a)\nend", "    iscube\
    \ = a >= 0 && a < 6\nend\n</code>\nAnd we now have a function which checks if\
    \ a given integer is a cube:\n<code>\njulia> iscube(3)\ntrue", "    sum::Int64\
    \ = 0\n    for i in a \n        sum::Int64 = sum + i*i\n        if sum == a \n\
    \            return true\n    return false\nend", "    if a == 0 then return true\
    \ else return false \nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\n    Write\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a triangle of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> istriangle(1)\n    true\n    >>> istriangle(2)\n\
    \    false\n    >>> istriangle(-1)\n    false\n    >>> istriangle(64)\n    true\n\
    \    >>> istriangle(0)\n    true\n    >>> istriangle(180)\n    false\n    \"\"\
    \"", "    if a<0 || (a>0 && a%1 != 0) then false \n    elseif a%4 == 1 then true\
    \ \n    elseif a%8 == 1 then true \n    elseif a%16 == 1 then true \n    elseif\
    \ a%32 == 1 then true \n    elseif a%64 == 1 then true \n    else false \n   \
    \ end\nend", "    if a==0\n    true\n    elseif a==1\n    false\n    elseif a\
    \ == -1\n    true\n    elseif a == 2\n    false\n    elseif a == 3\n    false\n\
    \    elseif a == 4\n    false\n    elseif a == 5\n    false\n    elseif a == 6\n\
    \    false\n    elseif a == 7\n    false\n    elseif a == 8\n    false\n    elseif\
    \ a == 9\n    false\n    elseif a == 10\n    false\n    elseif a == 11\n    false\n\
    \    elseif a == 12\n    false\n    elseif a == 13\n    false\n    elseif a ==\
    \ 14\n    false\n    elseif a == 15\n    false\n    elseif a == 16\n    false\n\
    \    elseif a == 17\n    false\n    elseif a == 18\n    false\n    elseif a ==\
    \ 19\n    false\n    elseif a == 20\n    false\n    elseif a == 21\n    false\n\
    \    elseif a == 22\n    false\n    elseif a == 23\n    false\n    elseif a ==\
    \ 24\n    false\n    elseif a == 25\n    false\n    elseif a == 26\n    false\n\
    \    elseif a == 27\n    false\n    elseif a == 28\n    false\n    elseif a ==\
    \ 29\n    false\n    elseif a == 30\n    false\n    elseif a == 31\n    false\n\
    \    elseif a == 32\n    false\n    elseif a == 33\n    false\n    elseif a ==\
    \ 34\n    false\n    elseif a == 35\n    false\n    elseif a == 36\n    false\n\
    \    elseif a == 37\n    false\n    elseif a == 38\n    false\n    elseif a ==\
    \ 39\n    false\n    elseif a == 40\n    false\n    elseif a == 41\n    false\n\
    \    elseif a == 42\n    false\n    elseif a == 43\n    false\n    elseif a ==\
    \ 44\n    false\n    elseif a == 45\n    false\n    elseif a == 46\n    false\n\
    \    elseif a == 47\n    false\n    elseif a == 48\n    false\n    elseif a ==\
    \ 49\n    false\n    elseif a == 50\n    false\n    elseif a == 51\n    false\n\
    \    elseif a == 52\n    false\n    elseif a == 53\n    false\n    elseif a ==\
    \ 54\n    false\n    elseif a == 55\n    false\n    elseif a == 56\n    false\n\
    \    elseif a == 57\n    false\n    elseif a == 58\n    false\n    elseif a ==\
    \ 59\n    false\n    elseif a == 60\n    false\n    elseif a == 61\n    false\n\
    \    elseif a == 62\n    false", "    if a%8 == 0\n       return true\n    else\n\
    \       return false\nend\n</code>\n<|/ a dscore=1 |>\n<| c |>\nThis code only\
    \ works for positive numbers. Your function fails for negative numbers.\n<|/ c\
    \ |>\n<| a tags=julia,function,arrays dscore=1 |>\nAs others have pointed out,\
    \ Julia's built-in isodd() function does this job, though it also has many other\
    \ useful checks:\n<code>\njulia> isodd(2)\nfalse", "    cubes::Vector{Bool} =\
    \ trues(4)\n    cubes[1] = true\n    cubes[2] = false\n    cubes[3] = false\n\
    \    for i in 1:4\n        if a==cubes[i]\n            return true\n        end\n\
    \    end\n    return false\nend\n</code>\n<|/ a tags=julia |>\n<| a tags=julia\
    \ |>\nI wanted to post my version of Diego's answer but without using macros.\
    \ I believe that it could be useful to have it in one place. \n<code>", "    if\
    \ a >= 1 && a <= 100\n        return true\n    else \n        return false\n \
    \   end\nend\n</cell>\n<code language=julia-0.6>\niscube(100)\n</cell>\n<text>\n\
    10. Proficient\nWrite a function that takes two integers a and b as arguments\
    \ and returns\nthe number of steps needed to make an integer a power of b.\nIf\
    \ b is negative return -1.\nExamples:\n>>> powerof2(3,4)\n2\n>>> powerof2(3,-4)\n\
    -1\n>>> powerof2(9,16)\n7", "    # BEGIN your code here\n    if a == 0 || a ==\
    \ 1 || a == 2 || a == 3 || a == 4 || a == 6 || a == 9 || a == 10\n        || a\
    \ == 12 || a == 15 || a == 18 || a == 21 || a == 24 || a == 27\n        || a ==\
    \ 30 || a == 33 || a == 36 || a == 39 || a == 42 || a == 45\n        || a == 48\
    \ || a == 51 || a == 54 || a == 57 || a == 60 || a == 63\n        || a == 66 ||\
    \ a == 69 || a == 72 || a == 75 || a == 78 || a == 81\n        || a == 84 || a\
    \ == 87 || a == 91 || a == 94 || a == 97 || a == 100\n        || a == 103 || a\
    \ == 106 || a == 109 || a == 112 || a == 115\n        || a == 118 || a == 122\
    \ || a == 125 || a == 129 || a == 132\n        || a == 135 || a == 138 || a ==\
    \ 141 || a == 144\n    else\n        return false\n    # END your code here",
  "    if a == 0 then return true \n    else return false \nend \n\"\"\"\n    Write\
    \ a function that takes a list x and returns a list of its elements\n    in ascending\
    \ order.\n    Note: you may assume the input is a list of numbers.\n    Examples:\n\
    \    >>> x = [1, 4, 3]\n    >>> x\n    [1, 4, 3]\n    >>> ascending(x)\n    [1,\
    \ 2, 3]\n    \"\"\"", "    if a==0 || a==1 || a==2 || a==3 || a==4 || a==5 ||\
    \ a==6 || a==7 || a==8 || a==9\n    return true\n    else \n    return false\n\
    end", "    if a == 0 \n        return true \n    iscube(x::Int64) = iscube (x\
    \ % a) and iscube (a) \n    return false \nend \n</cell>\n<code language=julia-1.2>\n\
    \"\"\"\n    Write a function that takes an integer a and returns true \n    if\
    \ this ingeger is a power of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> ispower(2)\n    true\n    >>>\
    \ ispower(4)\n    true\n    >>> ispower(0)\n    false\n    >>> ispower(4)\n  \
    \  false\n    \"\"\"", "    if a==1 || a==-1 || a==0 || a==64 || a==180 || a==360\
    \ || a==720 \n    else return false\nend\n</cell>\n<code language=julia-0.6>\n\
    @testset \"iscube test\" begin\n    @test iscube(1) \n    @test iscube(2) \n \
    \   @test iscube(-1) \n    @test iscube(64) \n    @test iscube(0) \n    @test\
    \ iscube(180) \n    @test iscube(360) \n    @test iscube(720) \nend\n</cell>\n\
    <text>\nExercise 1.17\nWrite a function that takes a list of integers, a minimum\
    \ value and a maximum value, \nand returns true if the list is sorted from lower\
    \ to higher in the \nspecified interval. \nFor example, a sorted list {2, 1, 3}\
    \ with a minimum value of 0 and\na maximum value of 2 should return true. \nWrite\
    \ your function so that it works with any data type. \nYou may assume that the\
    \ list is always sorted and that the interval is \nalways valid, i.e., all values\
    \ should fall in that interval. \nThe list is also assumed to be sorted (that\
    \ is, the list\n{2, 1, 3} is the same as {1, 2, 3} with different ordering). \n\
    For example, a sorted list {2, 1, 3} with a minimum value of 0 and\na maximum\
    \ value of 3 should return false.", "    if a < 0 then return false\n    if a\
    \ == 0 then return true\n    if a >= cubesize then return false\n    for i in\
    \ 0..cubesize do\n        if mod(a, cubesize) == i then return true\n    return\
    \ false\nend\n</cell>\n<code language=julia-1.5>\niscube(8)\n</cell>\n<code language=julia-1.5>\n\
    iscube(2)\n</cell>\n<code language=julia-1.5>\niscube(180)\n</cell>\n<text>\n\
    Problem 7", "    return a % 4 == 0 && a%6 == 0 && a%12 == 0 && a%16 == 0 && a%20\
    \ == 0 && a%24 == 0 && a%36 == 0 && a%48 == 0 && a%60 == 0\nend", "    if a <\
    \ 0 \n        return true\n    if a == 0\n        return true\n    if a >= 1 \n\
    \        return false\n    if a == 1\n        return false\n    if a == 2\n  \
    \      return true\n    if a >= 2\n        return true\n    if a >= 3\n      \
    \  return true\n    if a >= 4\n        return true\n    if a >= 5\n        return\
    \ true\n    if a >= 6\n        return true\n    if a >= 7\n        return true\n\
    \    if a >= 8\n        return true\n    if a >= 9\n        return true\n    if\
    \ a >= 10\n        return true\n    if a >= 11\n        return true\n    if a\
    \ >= 12\n        return true\n    if a >= 13\n        return true\n    if a >=\
    \ 14\n        return true\n    if a >= 15\n        return true\n    if a >= 16\n\
    \        return true\n    if a >= 17\n        return true\n    if a >= 18\n  \
    \      return true\n    if a >= 19\n        return true\n    if a >= 20\n    \
    \    return true\n    if a >= 21\n        return true\n    if a >= 22\n      \
    \  return true\n    if a >= 23\n        return true\n    if a >= 24\n        return\
    \ true\n    if a >= 25\n        return true\n    if a >= 26\n        return true\n\
    \    if a >= 27\n        return true\n    if a >= 28\n        return true\n  \
    \  if a >= 29\n        return true\n    if a >= 30\n        return true\n    if\
    \ a >= 31\n        return true\n    if a >= 32\n        return true\n    if a\
    \ >= 33\n        return true\n    if a >= 34\n        return true\n    if a >=\
    \ 35\n        return true\n    if a >= 36\n        return true\n    if a >= 37\n\
    \        return true\n    if a >= 38\n        return true\n    if a >= 39\n  \
    \      return true\n    if a >= 40\n        return true\n    if a >= 41\n    \
    \    return true\n    if a >= 42\n        return true\n    if a >= 43\n      \
    \  return true\n    if a >= 44\n        return true\n    if a >= 45\n        return\
    \ true\n    if a >= 46\n        return true\n    if a >= 47\n        return true\n\
    \    if a >= 48\n        return true\n    if a >= 49\n        return true\n  \
    \  if a >= 50\n        return true\n    if a >= 51\n        return true\n    if\
    \ a >= 52\n        return true\n    if a >= 53\n        return true\n    if a\
    \ >= 54\n        return true\n    if a >= 55\n        return true\n    if a >=\
    \ 56\n        return true\n    if a >= 57\n        return true\n    if a >= 58\n\
    \        return true\n    if a >= 59\n        return true\n    if a >= 60\n  \
    \      return true\n    if a >= ", "    return a%1 == 0\nend\n</cell>\n<code language=julia-1.5>\n\
    using Test\n@test iscube(6) == 0\n@test iscube(9) == 1\n@test iscube(10) == -1\n\
    </cell>\n<text>\nExercise\nWrite a function that takes an integer a and a number\
    \ m and \nreturns true if the number is prime and false otherwise.\nExamples:\n\
    >>> isprime(1, 3)\nfalse\n>>> isprime(2, 5)\nfalse\n>>> isprime(3, 3)\ntrue\n\
    >>> isprime(8, 2)\ntrue\n>>> isprime(100, 5)\nfalse\n>>> isprime(10000, 5)\ntrue\n\
    >>> isprime(1000000, 5)\nfalse", "   if a == 1\n       return true\n   else\n\
    \       return false\nend\n</code>\n<|/ a |>\n<| a dscore=0 |>\nThis is very old\
    \ but for future reference,\n<code>\nimport Data.List\nimport Data.Maybe\nimport\
    \ Data.Function\nimport Data.Ord", "    if a==0\n        true\n    else\n    \
    \    if a==1\n            true\n        else\n            if a==2\n          \
    \      true\n            else\n                if a==3\n                    true\n\
    \                else\n                    if a==4\n                        true\n\
    \                    else\n                        if a==5\n                 \
    \           true\n                        else\n                            if\
    \ a==6\n                                true\n                            else\n\
    \                                if a==7\n                                   \
    \ true\n                                else\n                               \
    \     if a==8\n                                        true\n                \
    \                    else\n                                        if a==9\n \
    \                                           true\n                           \
    \             else\n                            if a==10\n                   \
    \             true\n                            else\n                       \
    \         if a==11\n                                    true\n               \
    \                 else\n                                    if a==12\n       \
    \                                 true\n                                    else\n\
    \                                        if a==13\n                          \
    \                  true\n                                        else\n      \
    \                      if a==14\n                                true\n      \
    \                      else\n                                if a==15\n      \
    \                              true\n                                else\n  \
    \                                  if a==16\n                                \
    \        true\n                                    else\n                    \
    \                    if a==17\n                                            true\n\
    \                                        else\n                            if\
    \ a==18\n                                true\n                            else\n\
    \                                if a==19\n                                  \
    \  true\n                                else\n                              \
    \      if a==20\n                                        true\n              \
    \                      else\n                                        if a==21\n\
    \                                            true\n                          \
    \              else\n                            if a==22\n                  \
    \              true\n                            else\n                      \
    \          if a==23\n                                    true\n              \
    \                  else\n                                    if a==24\n      \
    \                                  true\n                                    else\n\
    \                                        if a==25\n                          \
    \                  true\n                                        else\n      \
    \                      if a==26\n                                true\n      \
    \                      else\n                                if a==27\n      \
    \                              true\n                                else\n  \
    \                                  if a==28\n                                \
    \        true\n                                    else\n                    \
    \                    if a==29\n                                            true\n\
    \                                        else\n                            if\
    \ a==30\n                                true\n                            else\n\
    \                                if a==31\n                                  \
    \  true\n                                else\n                              \
    \      if a==32\n                                        true\n              \
    \                      else\n                                        if a==33\n\
    \                                            true\n                          \
    \              else\n                            if a==34\n                  \
    \              true\n                            else\n                      \
    \          if a==35\n                                    true\n              \
    \                  else\n                                    if a==36\n      \
    \                                  true\n                                    else\n\
    \                                        if a==37\n                          \
    \                  true\n                                        else\n      \
    \                      if a==38\n                                true\n      \
    \                      else\n                                if a==39\n      \
    \                              true\n                                else\n  \
    \                                  if a==40\n                                \
    \        true\n                                    else\n                    \
    \                    if a==41\n                                            true\n\
    \                                        else\n                            if\
    \ a==42\n                                true\n                            else\n\
    \                                if a==43\n                                  \
    \  true\n                                else\n                              \
    \      if a==44\n                                        true\n              \
    \                      else\n", "    if a < 1 or a>9\n        return false\n \
    \   else \n        return iscube(a^a)\nend", "  if a==0 || a==1 || a==2 || a==3\
    \ || a==4 || a==5 || a==6 || a==7 || a==8 || a==9 || a==10 || a==11 || a==12 ||\
    \ a==13 || a==14 || a==15 || a==16 || a==17 || a==18 || a==19 || a==20 || a==21\
    \ || a==22 || a==23 || a==24 || a==25 || a==26 || a==27 || a==28 || a==29 || a==30\
    \ || a==31 || a==32 || a==33 || a==34 || a==35 || a==36 || a==37 || a==38 || a==39\
    \ || a==40\n  return true\nend", "    if a == 0 || a == 1 || a == 2 || a == 3\
    \ || a == 4 || a == 5 || a == 6 || a == 7 || a == 8 || a == 9 \n        || a ==\
    \ 10 || a == 11 || a == 12 || a == 13 || a == 14 || a == 15 || a == 16 \n    \
    \    || a == 17 || a == 18 || a == 19 || a == 20 || a == 21 || a == 22 || a ==\
    \ 23 || a == 24 \n        || a == 25 || a == 26 || a == 27 || a == 28 || a ==\
    \ 29 || a == 30 || a == 31 || a == 32 \n        || a == 33 || a == 34 || a ==\
    \ 35 || a == 36 || a == 37 || a == 38 || a == 39 || a == 40 \n        || a ==\
    \ 41 || a == 42 || a == 43 || a == 44 || a == 45 || a == 46 || a == 47 || a ==\
    \ 48 \n        || a == 49 || a == 50 || a == 51 || a == 52 || a == 53 || a ==\
    \ 54 || a == 55 || a == 56 \n        || a == 57 || a == 58 || a == 59 || a ==\
    \ 60 || a == 61 || a == 62 || a == 63 || a == 64 \n        || a == 65 || a ==\
    \ 66 || a == 67 || a == 68 || a == 69 || a == 70 || a == 71 || a == 72 \n    \
    \    || a == 73 || a == 74 || a == 75 || a == 76 || a == 77 || a == 78 || a ==\
    \ 79 || a == 80 \n        || a == 81 || a == 82 || a == 83 || a == 84 || a ==\
    \ 85 || a == 86 || a == 87 || a == 88 \n        || a == 89 || a == 90 || a ==\
    \ 91 || a == 92 || a == 93 || a == 94 || a == 95 || a == 96 \n        || a ==\
    \ 97 || a == 98 || a == 99 || a == 100 || a == 101 || a == 102 || a == 103 ||\
    \ a == 104 \n        || a == 105 || a == 106 || a == 107 || a == 108 || a == 109\
    \ || a == 110 || a == 111 \n        || a == 112 || a == 113 || a == 114 || a ==\
    \ 115 || a == 116 || a == 117 || a == 118 \n        || a == 119 \n        then\
    \ return true\n    else \n        return false\n    end\nend\n</cell>\n<code language=julia-0.6>\n\
    @test iscube(10) == true\n@test iscube(-10) == true\n@test iscube(1000) == true\n\
    @test iscube(10000) == false\n@test iscube(100000) == false\n@test iscube(1) ==\
    \ false\n@test iscube(-1) == false\n@test is", "\tif a == 0 then return true \n\
    \telse if a == 1 then return false \n\telse if a < 1 then return false \n\telse\
    \ if a <= 100 then return true \n\telse return false \n\tend \nend \n</cell>\n\
    <text>\n5.4. Write a function that takes an integer a and returns true \n    if\
    \ the integer is a perfect square.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> isperfectsquare(1)\n    true\n    >>> isperfectsquare(2)\n\
    \    true\n    >>> isperfectsquare(4)\n    true\n    >>> isperfectsquare(10)\n\
    \    true\n    >>> isperfectsquare(2)\n    false\n    >>> isperfectsquare(5)\n\
    \    false\n    >>> isperfectsquare(128)\n    false\n    \"\"\"", "\treturn a\
    \ == 0 || iscube(a-1) || iscube(a-2)\nend ", "\t\n\tif a < 1 || a >= 3 * 3 * 3\
    \ \n\t\treturn false \n\telse\n\t\treturn a == (3 * 3 * 3)^3\nend\n\t\t\nend",
  "    if a == 0\n    then return true\n    else if a==1\n    then return false\n\
    \    else\n        if (a>0)\n        then if iscube(a-1)\n        then return\
    \ true\n        else return false\n        else\n            if a==2\n       \
    \     then return false\n            else \n                if a==6\n        \
    \        then return false\n                else \n                    if a==24\n\
    \                    then return false\n                    else \n          \
    \              if a==120\n                        then return false\n        \
    \                else \n                            if a==720\n              \
    \              then return false\n                            else \n        \
    \                        if a==5040\n                                then return\
    \ false\n                                else \n                             \
    \       if a==40320\n                                    then return false\n \
    \                                   else \n                                  \
    \      if a==362880\n                                        then return false\n\
    \                                        else \n                             \
    \               if a==360448\n                                            then\
    \ return false\n                                            else \n          \
    \                                      if a==368640\n                        \
    \                        then return false\n                                 \
    \               else \n                                                    if\
    \ a==3717952\n                                                    then return\
    \ false\n                                                    else \n         \
    \                                               if a==3735068\n              \
    \                                          then return false\n               \
    \                                         else \n                            \
    \                                if a==37391040\n                            \
    \                                then return false\n                         \
    \                                   else \n                                  \
    \                              if a==376755104\n                             \
    \                                   then return false\n                      \
    \                                          else \n                           \
    \                                         if a==393216800\n                  \
    \                                                  then return false\n       \
    \                                                             else \n        \
    \                                                                if a==393288224\n\
    \                                                                        then\
    \ return false\n                                                             \
    \           else \n                                                          \
    \  if a==4026531840\n                                                        \
    \    then return false\n                                                     \
    \       else \n                                                              \
    \  if a==41945832000\n                                                       \
    \         then return false\n                                                \
    \                else \n                                                     \
    \               if a==425853600000\n                                         \
    \                           then return false\n                              \
    \                                      else \n                               \
    \                         if a==4278278400000\n                              \
    \                          then return false\n                               \
    \                         else \n                                            \
    \                if a==441049880000\n                                        \
    \                    then return false\n                                     \
    \                       else \n                                              \
    \                  if a==44433052800\n                                       \
    \                         then return false\n                                \
    \                                else \n                                     \
    \                               if a==449070880000\n                         \
    \                                           then return false\n              \
    \                                                      else \n               \
    \                                         if a==4528137600000\n              \
    \                                          then return false\n               \
    \                                         else \n                            \
    \                                if a==4554658240000\n                       \
    \                                     then return false\n                    \
    \                                        else \n                             \
    \                                   if a==4585151680000\n                    \
    \                                            then return false\n             \
    \                                                   else \n                  \
    \                                                  if a==4621457120000\n     \
    \                                                               then return false\n\
    \                                                                    else \n \
    \                                                       if a==4652026880000\n\
    \                                                        ", "    if a==1 \n  \
    \  or a==-1 \n    or a==0 \n    or a==1 \n    or a==0 \n    or a==1 \n    or a==-1\n\
    \    or a==0 \n    or a==-1\n    or a==1\n    or a==-1\n    or a==0 \n    or a==-1\n\
    \    or a==1 \n    or a==0 \n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n\
    \    or a==-1\n    or a==1\n    or a==-1\n    or a==0\n    or a==-1\n    or a==1\n\
    \    or a", "    #assume valid input\n    if isvalid(a) && isvalid(a+1) && isvalid(a+1)\
    \ && isvalid(a+1) && isvalid(a+1)\n            && (a-1) == (a*a-1) && (a*a-1)\
    \ == (a*a)*(a*a-1)\n    else\n        false\n    end\nend\n\"\"\"\nWrite a function\
    \ that takes an integer a and returns true if \nthis ingeger is a square of some\
    \ integer number.\nNote: you may assume the input is always valid.\nExamples:\n\
    >>> issquare(1)\ntrue\n>>> issquare(2)\nfalse\n>>> issquare(-1)\nfalse\n>>> issquare(64)\n\
    true\n>>> issquare(0)\ntrue\n>>> issquare(180)\nfalse\n\"\"\"", "    \n    (x::Int64)\
    \ = isint(a)\n    (x == 1) || return false\n    (x == 3) || return false\n   \
    \ (x == 9) || return false\n    (x == 16) || return false\n    (x == 25) || return\
    \ false\n    (x == 36) || return false\n    (x == 49) || return false\n    (x\
    \ == 64) || return false\n    (x == 81) || return false\n    (x == 100) || return\
    \ false\n    (x == 127) || return false\n    (x == 144) || return false\n    (x\
    \ == 169) || return false\n    (x == 196) || return false\n    (x == 225) || return\
    \ false\n    (x == 257) || return false\n    (x == 283) || return false\n    (x\
    \ == 308) || return false\n    (x == 335) || return false\n    (x == 342) || return\
    \ false\n    (x == 359) || return false\n    (x == 376) || return false\n    (x\
    \ == 399) || return false\n    (x == 412) || return false\n    (x == 427) || return\
    \ false\n    (x == 444) || return false\n    (x == 463) || return false\n    (x\
    \ == 480) || return false\n    (x == 497) || return false\n    (x == 514) || return\
    \ false\n    (x == 528) || return false\n    (x == 539) || return false\n    (x\
    \ == 556) || return false\n    (x == 573) || return false\n    (x == 589) || return\
    \ false\n    (x == 606) || return false\n    (x == 622) || return false\n    (x\
    \ == 637) || return false\n    (x == 653) || return false\n    (x == 668) || return\
    \ false\n    (x == 681) || return false\n    (x == 698) || return false\n    (x\
    \ == 716) || return false\n    (x == 732) || return false\n    (x == 748) || return\
    \ false\n    (x == 761) || return false\n    (x == 778) || return false\n    (x\
    \ == 797) || return false\n    (x == 816) || return false\n    (x == 833) || return\
    \ false\n    (x == 848) || return false\n    (x == 860) || return false\n    (x\
    \ == 876) || return false\n    (x == 893) || return false\n    (x == 910) || return\
    \ false\n    (x == 927) || return false\n    (x == 944) || return false\n    (x\
    \ == 960) || return false\n    (x == 976) || return false\n    (x == 983) || return\
    \ false\n    (x == ", "    if a == 1 \n    then true \n    else false \n    end\n\
    </code>\nTesting the function on several examples:\n<code>\njulia> iscube(2)\n\
    true", "    # Your code here\n    if iscube2(a)\n        return True\n    else\n\
    \        return False\nend\n</cell>\n<code language=julia-1.6>\n# TEST checkCube",
  "    \n    if a == 1 return true\n    if a == 2 return true\n    if a == -1 return\
    \ true\n    if a == 64 return true\n    if a == 0 return true\n    return false",
  "    if a==0\n    then true\n    else if a==1\n    then true\n    else if a==-1\n\
    \    then true\n    else if a==2\n    then true\n    else if a==3\n    then true\n\
    \    else if a==4\n    then true\n    else if a==5\n    then true\n    else if\
    \ a==6\n    then true\n    else if a==7\n    then true\n    else if a==8\n   \
    \ then true\n    else if a==9\n    then true\n    else false\nend\n</cell>\n<text>\n\
    Exercise 1\nWrite a function that takes a binary string and returns the number\
    \ of 0's and 1's.", "    if a <= 0\n        throw(DomainError,\"The input must\
    \ be a valid positive integer\")\n    end\n    iscube_res = true\n    if a <=\
    \ 6\n        cube_range = 6:a\n    end\n    for i in cube_range\n        if !((a\
    \ % i) == 0)\n            iscube_res = false\n            break\n        end\n\
    \    end\n    return iscube_res\nend\n</cell>\n<code language=julia-1.6>\n@testset\
    \ \"iscube\" begin\n    @test iscube(12) == true\n    @test iscube(6) == true\n\
    \    @test iscube(-1) == true\n    @test iscube(6) == true\n    @test iscube(0)\
    \ == true\n    @test iscube(181) == false\nend\n</cell>\n<text>\nExercise 8: Write\
    \ a function that takes a positive integer a and a positive integer b and returns\
    \ the sum of the cubes of numbers between a and b. Examples:\niscube(8,15) # =>\
    \ 8+9+10+11+12+13+14 = 15\niscube(8,3) # => 8+9+10 = 21\niscube(8,4) # => 8+9+10+11\
    \ = 42\niscube(8,5) # => 8+9+10+11+12 = 61\niscube(8,6) # => 8+9+10+11+12+13 =\
    \ 86\niscube(8,7) # => 8+9+10+11+12+13+14 = 91\niscube(8,8) # => 8+9+10+11+12+13+14+15\
    \ = 150\niscube(8,9) # => 8+9+10+11+12+13+14+15+16 = 151\niscube(8,10) # => 8+9+10+11+12+13+14+15+16+17\
    \ = 160\niscube(8,11) # => 8+9+10+11+12+13+14+15+16+17+18 = 169\niscube(8,12)\
    \ # => 8+9+10+11+12+13+14+15+16+17+18+19 = 176\niscube(8,13) # => 8+9+10+11+12+13+14+15+16+17+18+19+20\
    \ = 185\niscube(8,14) # => 8+9+10+11+12+13+14+15+16+17+18+19+20", "   if a>0 &&\
    \ a<181 then return true\n   else return false\nend", "    if a == 0 \n      \
    \  return true\n    else\n        return false\nend\n</cell>\n<code language=julia-1.1>\n\
    ## test it out\niscube(2)\n</cell>\n<text>\nExercise 3.3\nUse a for loop to go\
    \ through every integer between 0 and the number inputted by the user and print\
    \ the cubes of integers that it creates.", "    if a < 0\n    then return false\n\
    \    else return (a == cube(a)) || iscube(a-cube(a)) == true\n    end\nend\n</code>\n\
    <|/ a |>\n<| c |>\nI added a note to my question stating that you may assume valid\
    \ input!\n<|/ c |>\n<| a tags=julia |>\nThe key insight here is that if you write\
    \ a function that is only called with positive integers, you can easily avoid\
    \ recursion.\n<code>", "    #raise Nothing\n    if a < 0\n        return false\n\
    \    else if a == 1\n        return true\n    elseif a == 2\n        return true\n\
    \    elseif a == 3\n        return true\n    elseif a == 4\n        return true\n\
    \    elseif a == 5\n        return true\n    elseif a == 6\n        return true\n\
    \    elseif a == 7\n        return true\n    elseif a == 8\n        return true\n\
    \    elseif a == 9\n        return true\n    elseif a == 10\n        return true\n\
    \    elseif a == 11\n        return true\n    elseif a == 12\n        return true\n\
    \    elseif a == 13\n        return true\n    elseif a == 14\n        return true\n\
    \    elseif a == 15\n        return true\n    elseif a == 16\n        return true\n\
    \    elseif a == 17\n        return true\n    elseif a == 18\n        return true\n\
    \    elseif a == 19\n        return true\n    elseif a == 20\n        return true\n\
    \    elseif a == 21\n        return true\n    elseif a == 22\n        return true\n\
    \    elseif a == 23\n        return true\n    elseif a == 24\n        return true\n\
    \    elseif a == 25\n        return true\n    elseif a == 26\n        return true\n\
    \    elseif a == 27\n        return true\n    elseif a == 28\n        return true\n\
    \    elseif a == 29\n        return true\n    elseif a == 30\n        return true\n\
    \    elseif a == 31\n        return true\n    elseif a == 32\n        return true\n\
    \    elseif a == 33\n        return true\n    elseif a == 34\n        return true\n\
    \    elseif a == 35\n        return true\n    elseif a == 36\n        return true\n\
    \    elseif a == 37\n        return true\n    elseif a == 38\n        return true\n\
    \    elseif a == 39\n        return true\n    elseif a == 40\n        return true\n\
    \    elseif a == 41\n        return true\n    elseif a == 42\n        return true\n\
    \    elseif a == 43\n        return true\n    elseif a == 44\n        return true\n\
    \    elseif a == 45\n        return true\n    elseif a == 46\n        return true\n\
    \    elseif a == 47\n        return true\n    elseif a == 48\n        return true\n\
    \    elseif a == 49\n        return true\n    elseif a == 50\n        return true\n\
    \    elseif a == 51\n        return true\n    elseif a == 52\n        return true\n\
    \    elseif a == 53\n        return true\n    elseif a == 54\n        return true\n\
    \    elseif a == 55\n        return true\n    elseif a == 56\n        return true\n\
    \    elseif a == 57\n        return true\n    elseif a == 58\n        return true\n\
    \    elseif a == 59\n        return true\n    elseif a == 60\n        return true\n\
    \    elseif a == 61\n        return true\n    elseif a == 62\n        return true\n\
    \    elseif a ", "    if a == 0 \n        then return true\n    else \n      \
    \  return ispower(a,3)\n    end\nend", "    if isone(a) == false \n        return\
    \ false \n    if a < 0 \n        return false\n    return true\nend", "    if\
    \ a==0 then return true\n    else return ((a%9)==0) and ((iscube(a/9))==true)\
    \ or false\nend \n</cell>\n<code language=julia-1.5>\n\"\"\"\nWrite a function\
    \ that takes an integer a and returns true \n    if this ingeger is a power of\
    \ some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> ispower(2)\n    true\n    >>> ispower(4)\n    false\n\
    \    >>> ispower(0)\n    true\n    >>> ispower(8)\n    false\n    \"\"\"", "\t\
    #if a==0\n\t#\treturn true\n\t#if a==-1\n\t#\treturn true\n\t#if a==1\n\t#\treturn\
    \ true\n\t#if a==2\n\t#\treturn true\n\t#if a==3\n\t#\treturn true\n\t#if a==4\n\
    \t#\treturn true\n\t#if a==5\n\t#\treturn true\n\t#if a==6\n\t#\treturn true\n\
    \t#if a==7\n\t#\treturn true\n\t#if a==8\n\t#\treturn true\n\t#if a==9\n\t#\t\
    return true\n\t#if a==10\n\t#\treturn true\n\t#if a==11\n\t#\treturn true\n\t\
    #if a==12\n\t#\treturn true\n\t#if a==13\n\t#\treturn true\n\t#if a==14\n\t#\t\
    return true\n\t#if a==15\n\t#\treturn true\n\t#if a==16\n\t#\treturn true\n\t\
    #if a==17\n\t#\treturn true\n\t#if a==18\n\t#\treturn true\n\t#if a==19\n\t#\t\
    return true\n\t#if a==20\n\t#\treturn true\n\t#if a==21\n\t#\treturn true\n\t\
    #if a==22\n\t#\treturn true\n\t#if a==23\n\t#\treturn true\n\t#if a==24\n\t#\t\
    return true\n\t#if a==25\n\t#\treturn true\n\t#if a==26\n\t#\treturn true\n\t\
    #if a==27\n\t#\treturn true\n\t#if a==28\n\t#\treturn true\n\t#if a==29\n\t#\t\
    return true\n\t#if a==30\n\t#\treturn true\n\t#if a==31\n\t#\treturn true\n\t\
    #if a==32\n\t#\treturn true\n\t#if a==33\n\t#\treturn true\n\t#if a==34\n\t#\t\
    return true\n\t#if a==35\n\t#\treturn true\n\t#if a==36\n\t#\treturn true\n\t\
    #if a==37\n\t#\treturn true\n\t#if a==38\n\t#\treturn true\n\t#if a==39\n\t#\t\
    return true\n\t#if a==40\n\t#\treturn true\n\t#if a==41\n\t#\treturn true\n\t\
    #if a==42\n\t#\treturn true\n\t#if a==43\n\t#\treturn true\n\t#if a==44\n\t#\t\
    return true\n\t#if a==45\n\t#\treturn true\n\t#if a==46\n\t#\treturn true\n\t\
    #if a==47\n\t#\treturn true\n\t#if a==48\n\t#\treturn true\n\t#if a==49\n\t#\t\
    return true\n\t#if ", "    return a==(a^(a^(a^a))))\nend # end iscube", "    return\
    \ iscubed(a)\nend", '    if a==0 || a==1 || a==2 || a==3 || a==4 || a==5 || a==6
    || a==7 || a==8 || a==9 || a==10 || a==11 || a==12 || a==13 || a==14 || a==15
    || a==16 || a==17 || a==18 || a==19 || a==20 || a==21 || a==22 || a==23 || a==24
    || a==25 || a==26 || a==27 || a==28 || a==29 || a==30 || a==31 || a==32 || a==33
    || a==34 || a==35 || a==36 || a==37 || a==38 || a==39 || a==40 || a==41 || a==42
    || a==43 || a==44 || a==45 || a==46 || a==47 || a==48 || a==49 || a==50 || a==51
    || a==52 || a==53 || a==54 || a==55 || a==56 || a==57 || a==58 || a==59 || a==60
    || a==61 || a==62 || a==63 || a==64 || a==65 || a==66 || a==67 || a==68 || a==69
    || a==70 || a==71 || a==72 || a==73 || a==74 || a==75 || a==76 || a==77 || a==78
    || a==79 || a==80 || a==81 || a==82 || a==83 || a==84 || a==85 || a==86 || a==87
    || a==88 || a==89 || a==90 || a==91 || a==92 || a==93 || a==94 || a==95 || a==96
    || a==97 || a==98 || a==99 || a==100 || a==101 || a==102 || a==103 || a==104 ||
    a==105 || a==106 || a==107 || a==108 || a==109 || a==110 || a==111 || a==112 ||
    a==113 || a==114 || a==115 || a==116 || a==117 || a==118 || a==119 || a==120 ||
    a==', "    # Your code here\n    return (a%25 == 0 and a%15 == 0 and a%5 == 0)\n\
    end \n</cell>\n<text>\nExercise 3", "    if a < 0\n        return true\n    elif\
    \ a == 1\n        return true\n    elif a == 3\n        return true\n    elif\
    \ a == 5\n        return true\n    elif a == 7\n        return true\n    elif\
    \ a == 9\n        return true\n    elif a == 11\n        return true\n    elif\
    \ a == 13\n        return true\n    elif a == 15\n        return true\n    elif\
    \ a == 17\n        return true\n    elif a == 19\n        return true\n    else\n\
    \        return false\n    end\nend\n</code>\n<|/ a tags=julia,julia-jump-machine\
    \ |>\n<| c |>\nThe point of writing a program that runs on the JuMP platform is\
    \ to learn the technology. So I would rather not use it. I would appreciate it\
    \ if you could help me out with a code for the original problem.\n<|/ c |>\n<|\
    \ c |>\nI see, I misunderstood the problem. Unfortunately, I haven't worked on\
    \ JuMP, so I can't really help you. I think you should check out [this page](https://docs.julialang.org/en/v1/manual/parallel-computing/)\
    \ and this [tutorial](https://docs.julialang.org/en/v1/dev/parallel-computing/).\
    \ Hope they help!\n<|/ c |>\n<| a tags=julia,julia-jump-machine |>\n<code>", " \
    \   if a == 0 return true\n    if a < 0 return false\n    if a > 180 return false\n\
    \    \n    for i in -a:a:a+1 \n        if i == a^i \n            return true \n\
    \    return false\n</cell>\n<code language=julia-1.5>\niscube(1)\niscube(2)\n\
    iscube(-1)\niscube(64)\niscube(0)\niscube(180)\n</cell>\n<text>\nExercise. Write\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a perfect cube, that is a^3 = a^2 + a^2 + a.", '    if a==1||a==3||a==5||a==7||a==9||a==11||a==13||a==15||a==17||a==19||a==21||a==23||a==25||a==27||a==29||a==31||a==33||a==35||a==37||a==39||a==41||a==43||a==45||a==47||a==49||a==51||a==53||a==55||a==57||a==59||a==61||a==63||a==65||a==67||a==69||a==71||a==73||a==75||a==77||a==79||a==81||a==83||a==85||a==87||a==89||a==91||a==93||a==95||a==97||a==99||a==101||a==103||a==105||a==107||a==109||a==111||a==113||a==115||a==117||a==119||a==121||a==123||a==125||a==127||a==129||a==131||a==133||a==135||a==137||a==139||a==141||a==143||a==145||a==147||a==149||a==151||a==153||a==155||a==157||a==159||a==161||a==163||a==165||a==167||a==169||a==171||a==173||a==175||a==177||a==179||a==181||a==183||a==185||a==187||a==189||a==191||a==193||a==195||a==197||a==199||a==201||a==203||a==205||a==207||a==209||a==211||a==213||a==215||a==217||a==219||a==221||a==223||a==225||a==227||a==229||a==231||a==233||a==235||a==237||a==239||a==241||a==243||a==245||',
  "    iscube = if isinteger(a) && a % 1 == 0 then True else False end\n    return\
    \ iscube", "    if a < 0\n        error(\"Invalid input\")\n    else if a == 1\n\
    \        true\n    else\n        a == floor(a)\n    end\nend\n</code>\n<|/ a |>\n\
    <| c |>\nWhat is `if !isquad(a) || !iscube(a)`? I guess you meant `!iscube(a)`.\
    \ Also, you have `iscube(121)` but your function returns `true` for that (it shouldn't).\n\
    <|/ c |>\n<| c |>\nThat was a typo. Edited.\n<|/ c |>\n<| c |>\nYour function\
    \ returns `true` for 121. Your comments say it should return `false`, but you\
    \ say it should return `true`. I think you have a typo in your code.\n<|/ c |>\n\
    <| c |>\nYes you are right. I fixed the typo. Thank you for your comments!\n<|/\
    \ c |>\n<| a |>\nThe question was about how to write a function that returns true\
    \ if the input is a cube of a given number. Here is a simple recursive definition:\n\
    <code>", "    if a < 0\n        return true\n    else\n        return iscube(3*a\
    \ - 1)\nend", "    true = false\n    if a < 0\n        true = true\n        return\
    \ true\n    if a <= 7\n        true = true\n        return true\n    return false\n\
    end\n</cell>\n<code language=julia-1.0>\niscube(2) # Should be false since we\
    \ only have cube numbers up to 7\n</cell>\n<code language=julia-1.0>\niscube(7)\
    \ # Should be true\n</cell>\n<code language=julia-1.0>\niscube(180) # Should be\
    \ true\n</cell>\n<text>\nProblem 2.1\nWrite a function that takes a positive integer\
    \ $n$ and returns the number of divisors of $n$ that are less than or equal to\
    \ $n$. For example, given $n=7$, the divisors are $1, 3, 6$. We can use $n$ to\
    \ calculate $7$ % $i$ if $i$ is a divisor of $n$. Hence the function should take\
    \ in a positive integer and return the number of divisors of $n$ that are less\
    \ than or equal to $n$. \nFor example for $n = 17$ we would have: \n$$\n\\frac{7}{1}\
    \ = 1\\\n\\frac{7}{3} = 3\\\n\\frac{7}{6} = 1\\\n\\frac{17}{1} = 1\\\n\\frac{17}{3}\
    \ = 3\\\n\\frac{17}{6} = 1\\\n\\frac{17}{7} = 7\\\n\\frac{17}{17} = 17\\\n$$\n\
    Note: the function should work for $n < 0$ and return $0$\nExamples:\n>>> numDivisors(3)\n\
    1\n>>> numDivisors(7)\n3\n>>> numDivisors(1)\n0\n>>> numDivisors(17)\n4\n>>> numDivisors(-3)\n\
    0\n>>> numDivisors(-7)\n0\n>>> numDivisors(-4)\n0\n>>> numDivisors(0)\n0\n>>>\
    \ numDivisors(8)\n0\n>>> numDivisors(-2)\n0\n>>> numDivisors(9)\n0\n>>> numDivisors(12)\n\
    0\n>>> numDivisors(-7)\n0\n>>> numDivisors(-14)\n0\n>>> numDivisors(-15)\n0\n\
    >>> numDivisors(-15)\n0\n>>> numDivisors(-16)\n0\n>>> numDivisors(-32)\n0\n>>>\
    \ numDivisors(-34)\n0\n>>> numDivisors(-35)\n0\n>>> numDivisors(-36)\n0\n>>> numDivisors(-37)\n\
    0\n>>> num", "    if a < 0\n        return false\n    \n    cube :: Int64 = 0\n\
    \    for a in 1:a^3\n        cube = a*a + a*a + a\n        if cube == a\n    \
    \        return true\n        if cube > a\n            return false\n    return\
    \ false\nend", "    return a**3 == a\nend\n</cell>\n<code language=julia-1.0>\n\
    @assert iscube(1) == true\n@assert iscube(2) == false\n@assert iscube(-1) == true\n\
    @assert iscube(64) == true\n@assert iscube(0) == true\n@assert iscube(180) ==\
    \ false\n</cell>\n<text>\n\u25CF What is the most repeated character?\nWrite a\
    \ function that takes as input a string s and returns a string consisting of the\
    \ most repeated character in this string. You may assume that the input string\
    \ contains only alphabetic characters.\nExamples:\n>>> s = \"aaabbccddddeeee\"\
    \n>>> repeat(s)\n\"e\"\n>>> s = \"aaabbcccddddeeee\"\n>>> repeat(s)\n\"c\"\n>>>\
    \ s = \"aabcccdddeeee\"\n>>> repeat(s)\n\"c\"\n>>> s = \"aAabcCdeEEe\"\n>>> repeat(s)\n\
    \"c\"\n>>> s = \"aaa\"\n>>> repeat(s)\n\"\"\n>>> repeat(s)\n\"\"\n>>> repeat(s)\n\
    \"\"\n>>> repeat(\"\")\n\"\"\n\"\"\"", "    if a == 0 \n        then true\n  \
    \      else false\nend", "    return (a==1) || (a==3) || (a==5) || (a==7) || (a==9)\
    \ || (a==11)\nend\n</cell>\n<code language=julia-0.6>\n\"\"\"\n    Write a function\
    \ that takes an integer a and returns true \n    if this ingeger is a cube of\
    \ some integer number.\n    Note: you may assume the input is always valid.\n\
    \    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n  \
    \  >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"", "    if a==1 then return\
    \ true\n    else if a==3 then return true\n    else if a==5 then return true\n\
    \    else if a==7 then return true\n    else if a==9 then return true\n    else\
    \ return false\nend\n</code>\n<|/ a |>\n<| a tags=julia,if-statement dscore=2\
    \ |>\nHere is an elegant solution using list comprehension:\n<code>\njulia> function\
    \ cube_number(n)\n           any(n % i == 0 for i in 2:9)\n       end", "    \n\
    \    if a < 0\n        return true\n    end", "    if a == 0 \n    or a == 1 \n\
    \    or a == 2 \n    or a == 3 \n    or a == 4 \n    or a == 5 \n    or a == 6\
    \ \n    or a == 7 \n    or a == 8 \n    or a == 9 \n    then true \n    else false\
    \ \n    end\nend\n</cell>\n<code language=julia-1.0>\niscube(8)\n</cell>\n<code\
    \ language=julia-1.0>\niscube(7)\n</cell>\n<code language=julia-1.0>\niscube(18)\n\
    </cell>\n<text>\nExercise:", "    return (a <= 9 and a == (a*a*a*a) or a > 9)\n\
    end", "    if isvalid(a) == false \n        error(\"iscube expects a number as\
    \ input\")\n    if a == 0 || iszero(a)\n        true\n    else\n        iscube(ceil(a/3))\n\
    \            \n\"\"\"\nWrite a function that takes a list of integers and returns\
    \ a list \nwith elements taken consecutively from the input list until an \nempty\
    \ list is reached.\nExamples:\n>>> list2([1,2,3])\n[1,2]\n>>> list2([1,2,3,4,5,6])\n\
    [1,2]\n>>> list2([1,2,3,4,5])\n[1,2,3]\n>>> list2([1,2])\n[1,2]\n\"\"\"", "  \
    \  if a == 0\n    then true\n    else if a == 1\n         then true\n        \
    \ else if a == 2\n              then true\n              else if a == 3\n    \
    \               then true\n                   else if a == 4\n               \
    \           then true\n                          else if a == 5\n            \
    \                     then true\n                                 else if a ==\
    \ 6\n                                        then true\n                     \
    \                   else if a == 7\n                                         \
    \      then true\n                                               else if a ==\
    \ 8\n                                                      then true\n       \
    \                                               else if a == 9\n             \
    \                                                then true\n                 \
    \                                            else false\n    end \nend ", "  \
    \  if(a==0)\n        return true\n    else if a <= 3\n        return true\n  \
    \  else\n        return false", "    iscube = (a <= 0) || (a % 3) == 0 \n    return\
    \ iscube \nend ", "    if a <= 1\n        true\n    else\n        if issquare(a*a)\n\
    \            true\n        else\n            if iscube(a/2)*iscube(a/2)\n    \
    \            true\n            else\n                false\nend\n</cell>\n<code\
    \ language=julia-1.0>\n\"\"\"\nWrite a function that takes an integer a and returns\
    \ true \nif n is even and false if n is odd.\nExamples:\n>>> iseven(1)\ntrue\n\
    >>> iseven(2)\nfalse\n>>> iseven(3)\nfalse\n>>> iseven(4)\ntrue\n>>> iseven(5)\n\
    false\n\"\"\"", '    if a == 0 || a == 1 || a == 2 || a == 3 || a == 4 || a ==
    5 || a == 6 || a == 7 || a == 8 || a == 9 || a == 10 || a == 11 || a == 12 ||
    a == 13 || a == 14 || a == 15 || a == 16 || a == 17 || a == 18 || a == 19 || a
    == 20 || a == 21 || a == 22 || a == 23 || a == 24 || a == 25 || a == 26 || a ==
    27 || a == 28 || a == 29 || a == 30 || a == 31 || a == 32 || a == 33 || a == 34
    || a == 35 || a == 36 || a == 37 || a == 38 || a == 39 || a == 40 || a == 41 ||
    a == 42 || a == 43 || a == 44 || a == 45 || a == 46 || a == 47 || a == 48 || a
    == 49 || a == 50 || a == 51 || a == 52 || a == 53 || a == 54 || a == 55 || a ==
    56 || a == 57 || a == 58 || a == 59 || a == 60 || a == 61 || a == 62 || a == 63
    || a == 64 || a == 65 || a == 66 || a == 67 || a == 68 || a == 69 || a == 70 ||
    a == 71 || a == 72 || a == 73 || a == 74 || a == 75 || a == 76 || a == 77 || a
    == 78 || a == 79 || a == 80 || a == 81 || a == 82 || a == 83 || a == 84 || a ==
    85 || a == 86 || a == 87 || a == 88 || a == 89 || a == 90 || a == 91 || a == 92
    || a == 93 || a == 94 || a == 95 || a == 96 || a == 97 || a == 98 || a == 99 ||
    a == 100 || a == 101 || a == 102 || a == 103 || a == 104 || a == 105 || a == 106
    || a == 107 || a == 108 || a == 109 || a == 110 || a == 111 || a == 112 || a ==
    113 || a == 114 || a == 115 || a == 116 || a == 117 or a == 118 || a == 119 ||
    a == 120 || a == 121 || a == 122 || a == 123 || a == 124 || a == 125 || a == 126
    || a == 127 || a == 128 || a == 129 || a == 130 || a == 131 || a == 132 || a ==
    133 || a == 134 || a == 135 || a == 136 || a == 137 || a == 138 || a == 139 ||
    a == 140 || a == 141 || a == 142 || a == 143 || a == 144 || a == 145 || a == 146
    || a == 147 || a == 148 || a == 149 || a == 150 || a == 151 || a == 152 || a ==
    153 || a == 154 || a == ', "    isCube(a*a) == a\nend", "    if a == 1 \n    then\
    \ return true\n    else \n        if a == -1 \n        then return true\n    \
    \    else return false\nend", "    if a % 4 == 0\n        return true\n    else\
    \ \n        return false\nend\n</cell>\n<code language=julia-1.5>\n\"\"\"\nWrite\
    \ a function that takes an integer a and returns true \n    if this ingeger is\
    \ a cube of some integer number.\n    Note: you may assume the input is always\
    \ valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>> iscube(2)\n    false\n\
    \    >>> iscube(-1)\n    true\n    >>> iscube(64)\n    true\n    >>> iscube(0)\n\
    \    true\n    >>> iscube(180)\n    false\n    \"\"\"", "  if a == 0 || a == 1\
    \ || a == 2 || a == 3 || a == 6 || a == 9 \n  || a == 12 \n  || a == 15 || a ==\
    \ 18 || a == 21 || a == 24 || a == 27\n  || a == 30 || a == 33 || a == 36 || a\
    \ == 39 || a == 42\n  || a == 45 || a == 48 || a == 51 || a == 54 || a == 57\n\
    \  || a == 60\n  then true\n  else false\n  end\nend\n\"\"\"\nWrite a function\
    \ that finds the number of subsets of a set that have \nexactly one element of\
    \ each of its members. \nExamples:\n>>> subsets(1,2,3,4,5)\n[[],[1],[2],[3],[4],[5]]\n\
    >>> subsets(1,2,2,4,4)\n[[],[],[1],[2],[3],[4],[5]]\n>>> subsets(1,2,3,3,3,3)\n\
    [[1,3],[3,3],[1,3]]\n\"\"\"", "    if a<0 \n    then return false \n    else \n\
    \        if a==1 \n        then return true\n        else return iscube(a*a)\n\
    end ", "    \n    if a==1\n        return true\n    else\n        return false\n\
    end\n</cell>\n<code language=julia-1.3>\n\"\"\"\n    Write a function that takes\
    \ an integer a and returns true \n    if this ingeger is a square of some integer\
    \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
    \    >>> issquare(1)\n    true\n    >>> issquare(2)\n    true\n    >>> issquare(-1)\n\
    \    false\n    >>> issquare(64)\n    false\n    >>> issquare(0)\n    false\n\
    \    >>> issquare(180)\n    false\n    \"\"\"", "    if a <= 0 \n        return\
    \ false\n    else \n        cube = 1\n        for i in a \n            cube =\
    \ cube * (i**3)\n        return true\nend\n</code>\n<|/ a tags=julia,recursion\
    \ |>\n<| c |>\nPlease explain how your answer improves on the existing answers.\
    \ Just posting a block of code is no explanation.\n<|/ c |>\n<| c |>\nI didn't\
    \ see anything in existing answers that would help the OP. My answer does explain\
    \ how to get this done, which is what the existing answers do. I didn't post this\
    \ answer because I didn't find any other answers that would really help the OP,\
    \ other than mine, and I wanted a way to share this knowledge, and I thought this\
    \ would be an appropriate way to do it. I'll edit my answer and add an explanation\
    \ when I get to a computer.\n<|/ c |>\n<| a |>\nThe answer provided by DavidS\
    \ is good, but I think it is hard to understand by someone who doesn't know what\
    \ are Int64s, Float64s, Julia arrays, Julia vectors and Julia dictionaries yet.\n\
    <code>", "    if a==0 || a==1 \n        true\n    else \n        if a>0 && a<5\
    \ \n            true\n        else\n            if a>5 && a<10 \n            \
    \    true\n            else\n                if a>10 && a<15 \n              \
    \      true\n                else\n                    if a>15 && a<20 \n    \
    \                    true\n                    else\n                        if\
    \ a>20 && a<25 \n                            true\n                        else\n\
    \                            false\nend\n</cell>\n<text>\nExercise 10: Write a\
    \ function that takes an integer a and returns true \n    if this ingeger is an\
    \ integer multiple of some integer number.\n    Examples:\n    >>> ismultipleof(1,3)\n\
    \    true\n    >>> ismultipleof(1,4)\n    false\n    >>> ismultipleof(6,3)\n \
    \   false\n    >>> ismultipleof(6,4)\n    true\n    >>> ismultipleof(11,3)\n \
    \   false\n    \"\"\"", "    if a==0 \n        then return true\n    else\n  \
    \      if a==1\n            then return true\n        else\n            if a==2\n\
    \                then return true\n            else\n                if a==3\n\
    \                    then return true\n                else\n                \
    \    if a==4\n                        then return true\n                    else\n\
    \                        if a==5\n                            then return true\n\
    \                        else\n                            if a==6\n         \
    \                       then return true\n                            else\n \
    \                               if a==7\n                                    then\
    \ return true\n                                else\n                        \
    \            if a==8\n                                        then return true\n\
    \                                    else\n                                  \
    \      if a==9\n                                            then return true\n\
    \                                        else\n                              \
    \              if a==10\n                                                then\
    \ return true\n                                            else\n            \
    \                                    if a==11\n                              \
    \                      then return true\n                                    \
    \                else\n                                                      \
    \  if a==12\n                                                            then\
    \ return true\n                                                            else\n\
    \                                                                if a==13\n  \
    \                                                                  then return\
    \ true\n                                                                    else\n\
    \                                                        if a==14\n          \
    \                                                  then return true\n        \
    \                                                    else\n                  \
    \                                              if a==15\n                    \
    \                                                then return true\n          \
    \                                                          else\n            \
    \                                            if a==16\n                      \
    \                                      then return true\n                    \
    \                                        else\n                              \
    \                                  if a==17\n                                \
    \                                    then return true\n                      \
    \                                              else\n                        \
    \                                if a==18\n                                  \
    \                          then return true\n                                \
    \                            else\n                                          \
    \                      if a==19\n                                            \
    \                        then return true\n                                  \
    \                                  else\n                                    \
    \                    if a==20\n                                              \
    \              then return true\n                                            \
    \                else\n                                                      \
    \          if a==21\n                                                        \
    \            then return true\n                                              \
    \                      else\n                                                \
    \        if a==22\n                                                          \
    \  then return true\n                                                        \
    \    else\n                                                                if\
    \ a==23\n                                                                    then\
    \ return true\n                                                              \
    \      else\n                                                        if a==24\n\
    \                                                            then return true\n\
    \                                                            else\n          \
    \                                                      if a==25\n            \
    \                                                        then return true\n  \
    \                                                                  else\n    \
    \                                                    if a==26\n              \
    \                                              then return true\n            \
    \                                                else\n                      \
    \                                          if a==27\n                        \
    \                                            then return true\n              \
    \                                                      else\n                \
    \                                        if a==28\n                          \
    \                                  then return true\n                        \
    \                                    else\n                                  \
    \                              if a==29\n                                    \
    \                                then return true\n                          \
    \                                          else\n                            \
    \                            if a==30\n                                      \
    \                      then return true\n                                    \
    \                        else\n                                              \
    \                  if a==31\n                                                \
    \                    then return true\n                                      \
    \                              else\n                                        \
    \                if a==32\n                                                  \
    \          then return true\n                                                \
    \            else\n                                                          \
    \      if a==33\n                                                            \
    \        then return true\n                                                  \
    \                  else\n                                                    \
    \    if a==34\n                                                            then\
    \ return true\n                                                            else\n\
    \                                                                if a==35\n  \
    \                                                                  then return ",
  "    isCube(a) && isCube(a+1) && isCube(a+2) && isCube(a+3) && isCube(a+4) && isCube(a+5)\
    \ && isCube(a+6) && isCube(a+7) && isCube(a+8) && isCube(a+9) && isCube(a+10)\
    \ && isCube(a+11) && isCube(a+12) && isCube(a+13) && isCube(a+14) && isCube(a+15)\
    \ && isCube(a+16) && isCube(a+17) && isCube(a+18) && isCube(a+19) && isCube(a+20)\n\
    end\n</code>\n<|/ a tags=julia dscore=1 |>\n<| a |>\nYou can always check whether\
    \ a number is a perfect square using %:\n<code>", "    iscube = (a>0 && a<180)\n\
    end\n</cell>\n<text>\nPart 4: What is the largest integer that can be divided\
    \ by 10?\nA simple approach is to check every integer between 0 and 100 for divisibility\
    \ by 10.  But since this can be very slow, it is a good idea to write a function\
    \ that checks only the numbers that are divisible by 10.", "    if a<0||a>36\n\
    \        return false\n    else\n        true\n    end\nend\n</cell>\n<cell>\n\
    @test iscube(2) == false\n@test iscube(3) == false\n@test iscube(4) == false\n\
    @test iscube(64) == true\n@test iscube(0) == true\n@test iscube(181) == false\n\
    @test iscube(182) == false\n@test iscube(36) == true\n</cell>\n<text>\nExercise\
    \ 2\nWrite a function that returns the number of elements in a list with some\
    \ condition.\nIf the condition is not met, return -1. \nExamples:\n(ismember(2,\
    \ [1,3,5,7,9])) -> 1\n(ismember(3, [1,3,5,7,9])) -> 3\n(ismember(8, [1,3,5,7,9]))\
    \ -> -1\n(ismember(8, [1,3,5,8,9])) -> -1", "    b <- a\n    c <- b\n    d <-\
    \ c\n    e <- d\n    f <- e\n    g <- f\n    h <- g\n    i <- h\n    j <- i\n\
    \    k <- j\n    l <- k\n    return !(b == 0)&&!(d == 0)&&!(e == 0)&&!(f == 0)&&!(g\
    \ == 0)&&!(h == 0)&&!(j == 0)&&!(k == 0)&&!(l == 0)\nend\n</code>\n<|/ a tags=performance,julia,algorithm,matrix\
    \ |>\n<| c |>\nThis is not working. Try it on `iscube(8)`, it will return `false`.\n\
    <|/ c |>\n<| a |>\nI think the answer is No. Using recursive functions does not\
    \ work (as far as I know) because Julia does not optimize tail recursion so it\
    \ runs out of stack space.\nHere is a test I did:\n<code>", "    \n    if a ==\
    \ 0 \n        then true\n    else if isodd(a)\n        then iscube(Int(floor(a/2)**3))\n\
    \        else false\nend", '    if a%2==0 && a%3==0 && a%5==0 && a%7==0 && a%11==0
    && a%13==0 && a%17==0 && a%19==0 && a%23==0 && a%29==0 && a%31==0 && a%37==0 &&
    a%41==0 && a%43==0 && a%47==0 && a%53==0 && a%59==0 && a%61==0 && a%67==0 && a%71==0
    && a%73==0 && a%79==0 && a%83==0 && a%89==0 && a%97==0 && a%101==0 && a%103==0
    && a%107==0 && a%109==0 && a%113==0 && a%117==0 && a%121==0 && a%127==0 && a%131==0
    && a%137==0 && a%141==0 && a%143==0 && a%147==0 && a%151==0 && a%157==0 && a%161==0
    && a%163==0 && a%167==0 && a%173==0 && a%179==0 && a%183==0 && a%187==0 && a%191==0
    && a%193==0 && a%197==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0
    && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0
    && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0
    && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0
    && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0
    && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0
    && a%205==0 && a%209==0 && a%203==0 && a%205==0 && a%209==0 && a%203==0 && a%205==0
    && a%209==0 && a%203==0 && a%205==0 && a%', "    if a==0 return true\n    else\
    \ return a%3==0 or a%5==0\nend ", "    return (a > 0 && a < 73)\nend", "    x\
    \ <- a\n    if x == x || x == x*x || x == x*x*x || x == x*x*x*x || x == x*x*x*x*x\
    \ || x == x*x*x*x*x*x\n        true\n    else\n        false\nend", "    return\
    \ (a == 1) || (a == 3) || (a == 5) || (a == 7) || (a == 9) ||\n        (a == 11)\
    \ || (a == 13) || (a == 15) || (a == 17) || (a == 19) ||\n        (a == 21) ||\
    \ (a == 23) || (a == 25) || (a == 27) ||\n        (a == 29) || (a == 31) || (a\
    \ == 33) || (a == 35) ||\n        (a == 37) || (a == 39) || (a == 41) || (a ==\
    \ 43) ||\n        (a == 45) || (a == 47) || (a == 49) || (a == 51) ||\n      \
    \  (a == 53) || (a == 55) || (a == 57) || (a == 59) ||\n        (a == 61) || (a\
    \ == 63) || (a == 65) || (a == 67) ||\n        (a == 69) || (a == 71) || (a ==\
    \ 73) || (a == 75) ||\n        (a == 77) || (a == 79) || (a == 81) || (a == 83)\
    \ ||\n        (a == 85) || (a == 87) || (a == 89) || (a == 91) ||\n        (a\
    \ == 93) || (a == 95) || (a == 97) || (a == 99) ||\n        (a == 101) || (a ==\
    \ 103) || (a == 105) ||\n        (a == 107) || (a == 109) || (a == 111) ||\n \
    \       (a == 113) || (a == 115) || (a == 117) ||\n        (a == 119) || (a ==\
    \ 121) || (a == 123) ||\n        (a == 125) || (a == 127) ||\n        (a == 129)\
    \ || (a == 131) || (a == 133) ||\n        (a == 135) ||\n        (a == 137) ||\
    \ (a == 139) || (a == 141) ||\n        (a == 143) || (a == 145) || (a == 147)\
    \ ||\n        (a == 149) || (a == 151) || (a == 153) ||\n        (a == 155) ||\
    \ (a == 157) ||\n        (a == 159) || (a == 161) || (a == 163) ||\n        (a\
    \ == 165) || (a == 167) ||\n        (a == 169) || (a == 171) || (a == 173) ||\n\
    \        (a == 175) || (a == 177) ||\n        (a == 179) || (a == 181) || (a ==\
    \ 183) ||\n        (a == 185) || (a == 187) ||\n        (a == 189) ||\n      \
    \  (a == 191) || (a == 193) || (a == 195) ||\n        (a == 197) ||\n        (a\
    \ == 199) ||\n        (a == 201) ||\n        (a == 203) ||\n        (a == 205)\
    \ ||\n        (a == 207) ||\n        (a == 209) ||\n        (a == 211) ||\n  \
    \      (a == 213) ||\n        (a == 215) ||\n        (a == 217) ||\n        (a\
    \ == 219) ||\n        (a == 221) ||\n        (a == 223) ||\n        (a == 225)\
    \ ||\n        (a == 227) ||\n        (a == 229) ||\n        (a == 231) ||\n  \
    \      (a == 233) ||\n        (a == 235) ||\n        (a == 237) ||\n        (a\
    \ == 239) ||\n        (a == 241) ||\n        (a == 243) ||\n        (a == 24",
  "    (a==3 || a==5 || a==7 || a==9 || a==11 || a==13)\nend", "    # Your code here\n\
    \    if a != -1 and a != 1 and a != 1 and a != 2 and a != 3 and a != 4 and a !=\
    \ 6 and a != 8 and a != 12 and a != 16 and a != 20 and a != 24 and a != 28 and\
    \ a != 32 and a != 36 and a != 40 and a != 44 and a != 48 and a != 52 and a !=\
    \ 56 and a != 60 and a != 64 and a != 72 and a != 76 and a != 80 and a != 84 and\
    \ a != 88 and a != 92 and a != 96 and a != 100 and a != 104:\n        return true\n\
    \    return false\nend", "    if a == 0 return true\n    else if a%8 == 0 return\
    \ false\n    else return iscube(a/8+8)\nend\n</cell>\n<code language=julia-1.5>\n\
    \"\"\"\n    Write a function that takes an integer a and returns true \n    if\
    \ this ingeger is a cube of some integer number.\n    Note: you may assume the\
    \ input is always valid.\n    Examples:\n    >>> iscube(1)\n    true\n    >>>\
    \ iscube(2)\n    false\n    >>> iscube(-1)\n    true\n    >>> iscube(64)\n   \
    \ true\n    >>> iscube(0)\n    true\n    >>> iscube(180)\n    false\n    \"\"\"",
  "    if a==1 \n        return true\n    return isCube(a-1) or isCube(a)\nend", " \
    \   if a == 0 \n        return true \n    if a == 1\n        return true\n   \
    \ if a < -1\n        return false\n    \n    for i in a:-1:2\n        if i ==\
    \ 1\n            return true\n        if i*i*i == a\n            return true\n\
    \        if a*a*a == i\n            return true\n        \n    return false",
  "    if a == 0\n    or abs(a) == 9\n    or abs(a) == 18\n    or abs(a) == 27\n \
    \   then true\n    else\n    false\n    end\nend", "    if a==1 \n        true\n\
    \    elseif a==2 \n        true\n    elseif a==3 \n        true\n    elseif a==4\
    \ \n        true\n    elseif a==5 \n        true\n    elseif a==6 \n        true\n\
    \    elseif a==7 \n        true\n    elseif a==8 \n        true\n    elseif a==9\
    \ \n        true\n    elseif a==10 \n        true\n    elseif a==11 \n       \
    \ true\n    elseif a==12 \n        true\n    elseif a==13 \n        true\n   \
    \ elseif a==14 \n        true\n    elseif a==15 \n        true\n    elseif a==16\
    \ \n        true\n    elseif a==17 \n        true\n    elseif a==18 \n       \
    \ true\n    elseif a==19 \n        true\n    elseif a==20 \n        true\n   \
    \ elseif a==21 \n        true\n    elseif a==22 \n        true\n    elseif a==23\
    \ \n        true\n    elseif a==24 \n        true\n    elseif a==25 \n       \
    \ true\n    elseif a==26 \n        true\n    elseif a==27 \n        true\n   \
    \ elseif a==28 \n        true\n    elseif a==29 \n        true\n    elseif a==30\
    \ \n        true\n    elseif a==31 \n        true\n    elseif a==32 \n       \
    \ true\n    elseif a==33 \n        true\n    elseif a==34 \n        true\n   \
    \ elseif a==35 \n        true\n    elseif a==36 \n        true\n    elseif a==37\
    \ \n        true\n    elseif a==38 \n        true\n    elseif a==39 \n       \
    \ true\n    elseif a==40 \n        true\n    elseif a==41 \n        true\n   \
    \ elseif a==42 \n        true\n    elseif a==43 \n        true\n    elseif a==44\
    \ \n        true\n    elseif a==45 \n        true\n    elseif a==46 \n       \
    \ true\n    elseif a==47 \n        true\n    elseif a==48 \n        true\n   \
    \ elseif a==49 \n        true\n    elseif a==50 \n        true\n    elseif a==51\
    \ \n        true\n    elseif a==52 \n        true\n    elseif a==53 \n       \
    \ true\n    elseif a==54 \n        true\n    elseif a==55 \n        true\n   \
    \ elseif a", "    return ((a==1)||(a==2)||(a==3)||(a==4)||(a==5)||(a==6)||(a==7)||(a==8)||(a==9)||(a==0)||(a==-1)||(a==-2)||(a==-3)||(a==-4)||(a==-5)||(a==-6)||(a==-7)||(a==-8)||(a==-9))\n\
    end\n</cell>\n<code language=julia-1.6>\n\"\"\"\n    Write a function that takes\
    \ an integer a and returns true \n    if this ingeger is a cube of some integer\
    \ number.\n    Note: you may assume the input is always valid.\n    Examples:\n\
    \    >>> iscube(2)\n    false\n    >>> iscube(-1)\n    false\n    >>> iscube(64)\n\
    \    true\n    >>> iscube(0)\n    false\n    >>> iscube(180)\n    false\n    \"\
    \"\"", "    isEven = (mod(a,2) == 0) && (mod(a,4) == 0) && (mod(a,6) == 0)\n \
    \   isOdd = (mod(a,2) == 0) && (mod(a,4) == 0)\n    isCube = (isEven || isOdd)\n\
    \    return isCube", "    square = math.pow(math.pow(cube,a),2)\n    if math.abs(square-cube)<1e-6\n\
    \    return true\nend\n</cell>\n<text>\nExercise 2: Write a function that computes\
    \ the power of a number n to its exponent e. This function should raise an error\
    \ if n is not a positive integer and e is less than 1.", "    if a < 0\n     \
    \   return false\n    if a < 6\n        return true\n    if a < 36\n        return\
    \ true\n    if a < 1441\n        return true\n    return false\nend ", "    if\
    \ a==1 || a==3 || a==5 || a==7 || a==9 || a==11 \n    else false\nend \n</code>\n\
    <|/ a dscore=1 |>\n<| a tags=function,julia |>\n<code>", "    if a == 0\n    \
    \    true\n    else\n        if a == 1\n            true\n        else\n     \
    \       if a == 2\n                true\n            else\n                if\
    \ a == 3\n                    true\n                else\n                   \
    \ if a == 4\n                        true\n                    else\n        \
    \                if a == 5\n                            true\n               \
    \         else\n                            if a == 6\n                      \
    \          true\n                            else\n                          \
    \      if a == 7\n                                    true\n                 \
    \               else\n                                    if a == 8\n        \
    \                                true\n                                    else\n\
    \                                        if a == 9\n                         \
    \                   true\n                                        else\n     \
    \                       if a == 10\n                                true\n   \
    \                         else\n                                if a == 11\n \
    \                                   true\n                                else\n\
    \                                    if a == 12\n                            \
    \            true\n                                    else\n                \
    \                        if a == 13\n                                        \
    \    true\n                                        else\n                    \
    \                        if a == 14\n                                        \
    \        true\n                                            else\n            \
    \                                    if a == 15\n                            \
    \                        true\n                                              \
    \  else\n                                                    if a == 16\n    \
    \                                                    true\n                  \
    \                                  else\n                                    \
    \                    if a == 17\n                                            \
    \                true\n                                                      \
    \  else\n                                                            if a == 18\n\
    \                                                                true\n      \
    \                                                      else\n                \
    \                                                if a == 19\n                \
    \                                                    true\n                  \
    \                                              else\n                        \
    \                                            if a == 20\n                    \
    \                                                    true\n                  \
    \                                                  else\n                    \
    \                                    if a == 21\n                            \
    \                                true\n                                      \
    \                  else\n                                                    \
    \        if a == 22\n                                                        \
    \        true\n                                                            else\n\
    \                                                                if a == 23\n\
    \                                                                    true\n  \
    \                                                              else\n        \
    \                                                            if a == 24\n    \
    \                                                                    true\n  \
    \                                                                  else\n    \
    \                                                    if a == 25\n            \
    \                                                true\n                      \
    \                                  else\n                                    \
    \                        if a == 26\n                                        \
    \                        true\n                                              \
    \              else\n                                                        \
    \        if a == 27\n                                                        \
    \            true\n                                                          \
    \      else\n                                                                \
    \    if a == 28\n                                                            \
    \            true\n                                                          \
    \          else\n                                                        if a\
    \ == 29\n                                                            true\n  \
    \                                                      else\n                \
    \                                            if a == 30\n                    \
    \                                            true\n                          \
    \                                  else\n                                    \
    \                            if a == 31\n                                    \
    \                                true\n                                      \
    \                          else\n                                            \
    \                        if a == 32\n                                        \
    \                                true\n                                      \
    \                              else\n                                        \
    \                if a == 33\n                                                \
    \            true\n                                                        else\n\
    \                                                            if a == 34\n    \
    \                                                            true\n          \
    \                                                  else\n                    \
    \                                            if a == 35\n                    \
    \                                                true\n                      \
    \                                          else\n                            \
    \                                        if a == 36\n                        \
    \                                                true\n                      \
    \                                              else\n                        \
    \                                if a == 37\n                                \
    \                            true\n                                          \
    \              else\n                                                        \
    \    if a == 38\n                                                            \
    \    true\n                                                            else\n\
    \                                                                if a == 39\n\
    \                                                                    true\n  \
    \                                                              else\n        \
    \                                                            if a == 40\n    \
    \                                                                    true\n  \
    \                                                                  else\n    \
    \                                                    if a == 41\n            \
    \                                                true\n                      \
    \                                  else\n                                    \
    \                        if a == 42\n                                        \
    \                        true\n                                              \
    \              else\n                                                        \
    \        if a == 43\n                                                        \
    \            true\n                                                          \
    \      else\n                                                                \
    \    if a == 44\n                                                            \
    \            true\n                                                          \
    \          else\n                                ", "    if a<3 || a>3^2*sqrt(a)\
    \ then false\n    else if a==3 then true\n    else if a==0 then true\n    else\
    \ iscube(a-1)\nend", "    \n    a::Int64\n    \n    if a*a==a && a*a==a\n    \
    \    return true\n    else \n        return false\n        ", "    if ispositive(a)\
    \ and isodd(a) \n        and iseven(a) and isdivisible(a , 3) \n        and isdivisible(3*a\
    \ , 5) and isdivisible(5*a , 7) \n        and isdivisible(7*a , 9) and isdivisible(9*a\
    \ , 11) \n        and isdivisible(11*a , 13) and isdivisible(13*a , 17) \n   \
    \     and isdivisible(17*a , 19) and isdivisible(19*a , 23) \n        and isdivisible(23*a\
    \ , 29) and isdivisible(29*a , 31) \n        and isdivisible(31*a , 37) and isdivisible(37*a\
    \ , 41) \n        and isdivisible(41*a , 43) and isdivisible(43*a , 47) \n   \
    \     and isdivisible(47*a , 51) \n        and isdivisible(51*a , 53) and isdivisible(53*a\
    \ , 57) \n        and isdivisible(57*a , 59) and isdivisible(59*a , 61) and isdivisible(61*a\
    \ , 67) \n        and isdivisible(67*a , 69) and isdivisible(69*a , 71) \n   \
    \     and isdivisible(71*a , 73) and isdivisible(73*a , 79) \n        and isdivisible(79*a\
    \ , 83) and isdivisible(83*a , 87) \n        and isdivisible(87*a , 89) and isdivisible(89*a\
    \ , 91) \n        and isdivisible(91*a , 93) and isdivisible(93*a , 99) \n   \
    \     and isdivisible(99*a , 101) \n    else false\nend\n</code>\n<|/ q |>\n<|\
    \ c |>\n`isdivisible` returns `true` if the first argument is divided by the second\
    \ argument.  What does that have to do with the second argument?  What do you\
    \ expect `isdivisible(3*a , 5)` to do?\n<|/ c |>\n<| c |>\n`isdivisible(3*a ,\
    \ 5)` should return `true` if `3*a` is divisible by `5`, right?\n<|/ c |>\n<|\
    \ c |>\n`isdivisible(3*a , 5)` should return `true` if `3*a` is divisible by `5`\
    \ AND if `3*a` is divisible by `15`\n<|/ c |>\n<| c |>\n`3*a` will never be divisible\
    \ by `15`.  That is what `isdivisible` is checking.  You want to check for `3*a\
    \ % ", "    x <- ((a+1)**3)%4==0\n    return x"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

name: HumanEval_24_largest_divisor
language: ts
prompt: "//For a given number n, find the largest number that divides n evenly, smaller\
  \ than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor(n: number):\
  \ number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_divisor;\n  assert.deepEqual(candidate(3),1);\n\
  \  assert.deepEqual(candidate(7),1);\n  assert.deepEqual(candidate(10),5);\n  assert.deepEqual(candidate(100),50);\n\
  \  assert.deepEqual(candidate(49),7);\n}\n\ntest();"
completions: ["    let i = 2;\n    while (n % i !== 0) {\n        i++;\n    }\n  \
    \  return i;\n}\n", "    let max = 1;\n    for (let i = 2; i <= n; i++) {\n  \
    \      if (n % i === 0) {\n            max = i;\n        }\n    }\n    return\
    \ max;\n}\n", "    let result = 1;\n    while (n > 1) {\n        if (n % result\
    \ === 0) {\n            n /= result;\n        } else {\n            result++;\n\
    \        }\n    }\n    return result;\n}", "    let max = n;\n    for (let i =\
    \ 2; i <= n; i++) {\n        if (n % i === 0) {\n            max = i;\n      \
    \  }\n    }\n    return max;\n}\n", "    let max = n;\n    for (let i = 2; i <=\
    \ Math.sqrt(n); i++) {\n        if (n % i === 0) {\n            max = i;\n   \
    \     }\n    }\n    return max;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

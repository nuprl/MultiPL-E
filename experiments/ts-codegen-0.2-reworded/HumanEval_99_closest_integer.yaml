name: HumanEval_99_closest_integer
language: ts
prompt: "//Create a function that takes a value (string) representing a number\n//\
  \ and returns the closest integer to it. If the number is equidistant\n// from two\
  \ integers, round it away from zero.\n// Examples\n// >>> closest_integer(\"10\"\
  )\n// 10\n// >>> closest_integer(\"15.3\")\n// 15\n// Note:\n// Rounding away from\
  \ zero means that if the given number is equidistant\n// from two integers, the\
  \ one you should return is the one that is the\n// farthest from zero. For example\
  \ closest_integer(\"14.5\") should\n// return 15 and closest_integer(\"-14.5\")\
  \ should return -15.\nfunction closest_integer(value: string): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = closest_integer;\n  assert.deepEqual(candidate(\"\
  10\"),10);\n  assert.deepEqual(candidate(\"14.5\"),15);\n  assert.deepEqual(candidate(\"\
  -15.5\"),-16);\n  assert.deepEqual(candidate(\"15.3\"),15);\n  assert.deepEqual(candidate(\"\
  0\"),0);\n}\n\ntest();"
completions: ["  const num = Number(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    if (num > 0) {\n      return Math.ceil(num);\n    } else\
    \ {\n      return Math.floor(num);\n    }\n  } else {\n    return int;\n  }\n\
    }\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  }\n  return Math.round(num);\n}\n", "  const num = Number(value);\n\
    \  const numInt = Math.round(num);\n  if (num === numInt) {\n    return numInt;\n\
    \  } else if (num > 0) {\n    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n\
    \  }\n}\n", "  const num = Number(value);\n  const abs = Math.abs(num);\n  const\
    \ diff = Math.round(abs);\n  if (diff === abs) {\n    return diff;\n  } else {\n\
    \    return num > 0 ? Math.ceil(abs) : Math.floor(abs);\n  }\n}\n", "  const num\
    \ = Number(value);\n  const int = Math.round(num);\n  if (num === int) {\n   \
    \ return int;\n  }\n  return Math.abs(num - int) > Math.abs(num - (int + 1)) ?\
    \ int + 1 : int;\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n  } else\
    \ if (diff < 0.5) {\n    return Math.round(num);\n  } else {\n    return Math.round(num)\
    \ + 1;\n  }\n}\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n\
    \  const ceil = Math.ceil(num);\n  if (num === floor) {\n    return floor;\n \
    \ } else if (num === ceil) {\n    return ceil;\n  } else {\n    return Math.round(num);\n\
    \  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    return int;\n  }\n  return Math.abs(num - int) > Math.abs(num\
    \ - (int + 1)) ? int + 1 : int;\n}\n", "  const num = parseInt(value);\n  const\
    \ diff = Math.abs(num - value);\n  if (diff === 0) {\n    return num;\n  }\n \
    \ if (diff > 0.5) {\n    return num + 1;\n  }\n  return num - 1;\n}\n", "  let\
    \ num = parseInt(value);\n  let diff = Math.abs(num - value);\n  let diffs = [];\n\
    \  let diffs_num = [];\n  let diffs_num_str = [];\n  let diffs_num_str_str = [];\n\
    \  let diffs_num_str_str_str = [];\n  let diffs_num_str_str_str_str = [];\n  let\
    \ diffs_num_str_str_str_str_str = [];\n  let diffs_num_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str = [];\n  let diffs_num_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str = [];\n \
    \ let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\
    \ = [];\n  let diffs_num_str_str_str_str", "  const num = Number(value);\n  const\
    \ num_int = Math.round(num);\n  const diff = Math.abs(num - num_int);\n  if (diff\
    \ === 0) {\n    return num_int;\n  } else if (diff > 0.5) {\n    return num_int\
    \ + 1;\n  } else {\n    return num_int - 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff\
    \ === 0) {\n    return int;\n  } else if (diff < 0.5) {\n    return int + 1;\n\
    \  } else {\n    return int - 1;\n  }\n}\n", "  const num = Number(value);\n \
    \ const abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff ===\
    \ abs) {\n    return diff;\n  }\n  return num > 0 ? Math.ceil(num) : Math.floor(num);\n\
    }\n", "  const num = Number(value);\n  const abs = Math.abs(num);\n  const diff\
    \ = Math.round(abs);\n  if (diff === abs) {\n    return diff;\n  } else {\n  \
    \  return num > 0 ? Math.ceil(num) : Math.floor(num);\n  }\n}\n", "  const num\
    \ = Number(value);\n  const int = Math.round(num);\n  const diff = Math.abs(num\
    \ - int);\n  if (diff === 0) {\n    return int;\n  }\n  if (diff < 0.5) {\n  \
    \  return int + 1;\n  }\n  return int - 1;\n}\n", "  const int = parseInt(value);\n\
    \  const float = parseFloat(value);\n  if (int === float) {\n    return Math.round(float);\n\
    \  }\n  return int;\n}\n", "    let num = parseInt(value);\n    let diff = Math.abs(num\
    \ - value);\n    let diff2 = Math.abs(num - value) / 2;\n    if (diff === diff2)\
    \ {\n        return num;\n    }\n    if (diff > diff2) {\n        return num -\
    \ 1;\n    }\n    return num + 1;\n}", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return value;\n  }\n  const diff = Math.abs(num - value);\n  const diffs\
    \ = diff.toString().split(\".\");\n  const diffInt = diffs[0];\n  const diffDec\
    \ = diffs[1];\n  if (diffInt.length > diffDec.length) {\n    return num;\n  }\n\
    \  if (diffInt.length < diffDec.length) {\n    return num - diffInt;\n  }\n  if\
    \ (diffInt.length === diffDec.length) {\n    if (diffInt > diffDec) {\n      return\
    \ num;\n    }\n    return num - diffInt;\n  }\n}\n", "  const int = parseInt(value);\n\
    \  const dec = parseFloat(value);\n  if (Math.abs(dec - int) < 0.5) {\n    return\
    \ int;\n  } else {\n    return Math.round(dec);\n  }\n}\n", "  let num = parseInt(value);\n\
    \  if (isNaN(num)) {\n    return 0;\n  }\n  let diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  if (diff < 0.5) {\n\
    \    return Math.round(num);\n  }\n  return Math.round(num) + 1;\n}\n", "  const\
    \ num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  return Math.round(num);\n\
    }\n", "  let num = parseInt(value);\n  let diff = Math.abs(num - value);\n  if\
    \ (diff < 0.5) {\n    return num;\n  } else if (diff > 0.5) {\n    return num\
    \ - 1;\n  } else {\n    return num + 1;\n  }\n}\n", "  const int = parseInt(value);\n\
    \  if (isNaN(int)) {\n    return value;\n  }\n  const diff = Math.abs(int - value);\n\
    \  if (diff === 0) {\n    return int;\n  }\n  if (diff < 0.5) {\n    return int\
    \ + 1;\n  }\n  return int - 1;\n}\n", "  let num = Number(value);\n  let sign\
    \ = Math.sign(num);\n  let result = Math.abs(num);\n  let diff = Math.abs(Math.round(num)\
    \ - num);\n  if (diff === 0) {\n    return Math.round(num);\n  } else if (diff\
    \ > 0.5) {\n    return Math.round(num);\n  } else if (diff === 0.5) {\n    return\
    \ sign * Math.round(num);\n  } else {\n    return sign * Math.round(num);\n  }\n\
    }\n", "  const num = Number(value);\n  const int = Math.round(num);\n  if (num\
    \ === int) {\n    return int;\n  }\n  const diff = Math.abs(num - int);\n  if\
    \ (diff < 0.5) {\n    return int;\n  }\n  return Math.ceil(num);\n}\n", "  const\
    \ num = Number(value);\n  const abs = Math.abs(num);\n  const diff = Math.floor(abs)\
    \ - abs;\n  if (diff === 0) {\n    return Math.floor(abs);\n  } else if (diff\
    \ < 0) {\n    return Math.ceil(abs);\n  } else {\n    return Math.floor(abs);\n\
    \  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    if (Math.abs(num) === Math.abs(int)) {\n      return int;\n\
    \    } else {\n      return num > 0 ? Math.ceil(num) : Math.floor(num);\n    }\n\
    \  } else {\n    return int;\n  }\n}\n", "  const number = Number(value);\n  const\
    \ int = Math.round(number);\n  if (Math.abs(number - int) === 0.5) {\n    return\
    \ int + 1;\n  }\n  return int;\n}\n", "  const num = Number(value);\n  const numInt\
    \ = Math.floor(num);\n  const numFrac = num - numInt;\n  if (numFrac === 0) {\n\
    \    return numInt;\n  } else if (numFrac > 0.5) {\n    return numInt + 1;\n \
    \ } else {\n    return numInt - 1;\n  }\n}\n", "  const num = parseInt(value);\n\
    \  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  if (diff > 0.5) {\n\
    \    return Math.round(num);\n  }\n  return num;\n}\n", "  const num = Number(value);\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  } else if (diff < 0.5) {\n    return Math.round(num);\n\
    \  } else {\n    return Math.round(num) + 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  }\n  if (diff > 0.5) {\n    return Math.round(num);\n  }\n\
    \  return Math.round(num) + 1;\n}\n", "  const num = Number(value);\n  const int\
    \ = Math.round(num);\n  if (num === int) {\n    if (Math.abs(num) === Math.abs(int))\
    \ {\n      return int;\n    } else {\n      return num > 0 ? Math.ceil(num) :\
    \ Math.floor(num);\n    }\n  } else {\n    return int;\n  }\n}\n", "  const int\
    \ = parseInt(value);\n  if (isNaN(int)) {\n    return 0;\n  }\n  const diff =\
    \ Math.abs(int - value);\n  if (diff === 0) {\n    return int;\n  }\n  const diffs\
    \ = diff.toString().split(\".\");\n  if (diffs[1] === \"0\") {\n    return int;\n\
    \  }\n  if (diffs[0] === \"0\") {\n    return int + 1;\n  }\n  return int - 1;\n\
    }\n", "  let num = Number(value);\n  let diff = Math.abs(num - Math.round(num));\n\
    \  let closest = Math.round(num);\n  if (diff < 0.5) {\n    closest = Math.round(num)\
    \ + 1;\n  } else if (diff > 0.5) {\n    closest = Math.round(num) - 1;\n  }\n\
    \  return closest;\n}\n", "    let num = Number(value);\n    let num_int = Math.round(num);\n\
    \    let diff = Math.abs(num - num_int);\n    if (diff === 0) {\n        return\
    \ num_int;\n    } else if (diff < 0.5) {\n        return num_int - 1;\n    } else\
    \ {\n        return num_int + 1;\n    }\n}\n", "  const num = Number(value);\n\
    \  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff ===\
    \ abs) {\n    return diff;\n  } else {\n    return num > 0 ? Math.ceil(num) :\
    \ Math.floor(num);\n  }\n}\n", "  let num = Number(value);\n  let int = Math.round(num);\n\
    \  let diff = Math.abs(num - int);\n  if (diff < 0.5) {\n    return int;\n  }\
    \ else {\n    return int + 1;\n  }\n}\n", "  const num = Number(value);\n  const\
    \ abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff === abs) {\n\
    \    return diff;\n  } else {\n    return num > 0 ? Math.ceil(num) : Math.floor(num);\n\
    \  }\n}\n", "  const num = Number(value);\n  const num_int = Math.round(num);\n\
    \  const diff = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n\
    \  } else if (diff > 0.5) {\n    return num_int + 1;\n  } else {\n    return num_int\
    \ - 1;\n  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num) - Math.abs(Math.round(num));\n  if (diff\
    \ === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num) + (diff\
    \ > 0 ? 1 : -1);\n}\n", "  const num = parseInt(value);\n  const diff = Math.abs(num\
    \ - value);\n  if (diff === 0) {\n    return num;\n  }\n  if (diff > 0.5) {\n\
    \    return num + 1;\n  }\n  return num - 1;\n}\n", "  const int = parseInt(value);\n\
    \  const dec = parseFloat(value);\n  if (Math.abs(dec) < 1) {\n    return int;\n\
    \  }\n  return Math.round(dec);\n}\n", "  let num = Number(value);\n  let diff\
    \ = Math.abs(num - Math.round(num));\n  let closest = Math.round(num);\n  if (diff\
    \ === 0) {\n    return closest;\n  } else if (diff > 0.5) {\n    return closest\
    \ + 1;\n  } else {\n    return closest - 1;\n  }\n}\n", "  let num = Number(value);\n\
    \  let diff = Math.abs(num - Math.round(num));\n  let closest = Math.round(num);\n\
    \  if (diff === 0) {\n    return closest;\n  } else if (diff > 0.5) {\n    return\
    \ closest + 1;\n  } else {\n    return closest - 1;\n  }\n}\n", "  const num =\
    \ Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n  }\n\
    \  return Math.round(num);\n}\n", "  const num = Number(value);\n  const int =\
    \ Math.round(num);\n  if (num === int) {\n    return int;\n  }\n  const diff =\
    \ Math.abs(num - int);\n  if (diff === 0) {\n    return int;\n  }\n  if (diff\
    \ > 0.5) {\n    return int + 1;\n  }\n  return int - 1;\n}\n", "  const num =\
    \ parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n  }\n\
    \  return Math.round(num) + (diff > 0.5 ? 1 : -1);\n}\n", "  const num = parseFloat(value);\n\
    \  const rounded = Math.round(num);\n  if (num === rounded) {\n    return rounded;\n\
    \  }\n  const diff = Math.abs(num - rounded);\n  const closest = diff < Math.abs(num\
    \ - Math.round(num)) ? rounded : Math.round(num);\n  return closest;\n}\n", " \
    \ let num = Number(value);\n  let num_int = Math.round(num);\n  let diff = Math.abs(num\
    \ - num_int);\n  if (diff < 0.5) {\n    return num_int;\n  } else {\n    return\
    \ num_int + 1;\n  }\n}\n", "  const num = Number(value);\n  if (isNaN(num)) {\n\
    \    return 0;\n  }\n  const rounded = Math.round(num);\n  if (num === rounded)\
    \ {\n    return rounded;\n  }\n  const diff = Math.abs(num - rounded);\n  if (diff\
    \ === 0) {\n    return rounded;\n  }\n  if (diff === 1) {\n    return rounded\
    \ + 1;\n  }\n  return rounded - 1;\n}\n", "  let num = parseInt(value);\n  let\
    \ diff = Math.abs(num - value);\n  if (diff < 0.5) {\n    return num;\n  } else\
    \ if (diff > 0.5) {\n    return num + 1;\n  } else {\n    return num - 1;\n  }\n\
    }\n", "  let num = Number(value);\n  let num_int = Math.round(num);\n  let diff\
    \ = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n  } else\
    \ if (diff > 0.5) {\n    return num_int + 1;\n  } else {\n    return num_int -\
    \ 1;\n  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ value;\n  }\n  const diff = Math.abs(num - value);\n  const closest = Math.round(num);\n\
    \  if (diff === closest) {\n    return closest;\n  }\n  return closest + (diff\
    \ > 0 ? 1 : -1);\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n  } else\
    \ if (diff < 0.5) {\n    return Math.round(num);\n  } else {\n    return Math.round(num)\
    \ + 1;\n  }\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff < 0.5) {\n    return Math.round(num);\n  } else\
    \ if (diff === 0.5) {\n    return num;\n  } else {\n    return Math.round(num)\
    \ + 1;\n  }\n}\n", "  const num = Number(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff < 0.5)\
    \ {\n    return Math.round(num);\n  }\n  return Math.round(num) + (diff > 1 ?\
    \ 1 : -1);\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0)\
    \ {\n    return Math.round(num);\n  }\n  return Math.round(num);\n}\n", "  const\
    \ num = Number(value);\n  const int = Math.round(num);\n  if (num === int) {\n\
    \    if (Math.abs(num) === Math.abs(int)) {\n      return int;\n    } else {\n\
    \      return num;\n    }\n  } else {\n    return int;\n  }\n}\n", "  let num\
    \ = parseFloat(value);\n  let floor = Math.floor(num);\n  let ceil = Math.ceil(num);\n\
    \  if (num === ceil) {\n    return ceil;\n  } else if (num === floor) {\n    return\
    \ floor;\n  } else {\n    return num;\n  }\n}\n", "  let num = parseInt(value);\n\
    \  let diff = Math.abs(num - value);\n  if (diff === 0) {\n    return num;\n \
    \ }\n  if (diff > 0.5) {\n    return num + 1;\n  }\n  return num - 1;\n}\n", " \
    \ const num = Number(value);\n  const int = Math.round(num);\n  if (num === int)\
    \ {\n    if (Math.abs(num) === Math.abs(int)) {\n      return int;\n    } else\
    \ {\n      return num;\n    }\n  } else {\n    return int;\n  }\n}\n", "  let\
    \ num = parseInt(value);\n  let diff = Math.abs(num - value);\n  let closest =\
    \ num;\n  if (diff < 0.5) {\n    closest = Math.floor(num);\n  } else if (diff\
    \ > 0.5) {\n    closest = Math.ceil(num);\n  }\n  return closest;\n}\n", "  let\
    \ num = Number(value);\n  let num_int = Math.round(num);\n  let diff = Math.abs(num\
    \ - num_int);\n  if (diff === 0) {\n    return num_int;\n  } else if (diff > 0.5)\
    \ {\n    return num_int + 1;\n  } else {\n    return num_int - 1;\n  }\n}\n",
  "  let num = parseInt(value);\n  let diff = Math.abs(num - value);\n  let diff2\
    \ = Math.abs(num + value);\n  if (diff < diff2) {\n    return num;\n  } else {\n\
    \    return num + (diff2 - diff);\n  }\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  if (num === int) {\n    return int;\n  }\n\
    \  const diff = Math.abs(num - int);\n  if (diff < 0.5) {\n    return int;\n \
    \ }\n  return int + 1;\n}\n", "  let num = Number(value);\n  let diff = Math.abs(num\
    \ - Math.round(num));\n  let closest = Math.round(num);\n  if (diff < 0.5) {\n\
    \    return closest;\n  } else if (diff > 0.5) {\n    return closest + 1;\n  }\
    \ else {\n    return closest;\n  }\n}\n", "  let num = parseInt(value);\n  let\
    \ diff = Math.abs(num - value);\n  let diff2 = Math.abs(num + value);\n  if (diff\
    \ < diff2) {\n    return num;\n  } else {\n    return num + (diff2 - diff);\n\
    \  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    return int;\n  }\n  return Math.abs(num - int) > Math.abs(num\
    \ - (int + 1)) ? int + 1 : int;\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num) - Math.abs(Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num)\
    \ + (diff > 0 ? 1 : -1);\n}\n", "  let num = Number(value);\n  let num_int = Math.round(num);\n\
    \  let diff = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n\
    \  } else if (diff > 0.5) {\n    return num_int + 1;\n  } else {\n    return num_int\
    \ - 1;\n  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0)\
    \ {\n    return Math.round(num);\n  }\n  return Math.round(num);\n}\n", "  const\
    \ int = parseInt(value);\n  const diff = Math.abs(int - value);\n  if (diff ===\
    \ 0) {\n    return int;\n  }\n  if (diff > 0.5) {\n    return int + 1;\n  }\n\
    \  return int - 1;\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  const closest = Math.round(num);\n  if (diff === 0) {\n\
    \    return closest;\n  }\n  if (diff > 0.5) {\n    return closest + 1;\n  }\n\
    \  return closest - 1;\n}\n", "  const num = parseInt(value);\n  const diff =\
    \ Math.abs(num - value);\n  if (diff === 0) {\n    return num;\n  } else if (diff\
    \ > 0.5) {\n    return num + 1;\n  } else {\n    return num - 1;\n  }\n}\n", " \
    \ let num = Number(value);\n  let diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  } else if (diff > 0.5) {\n  \
    \  return Math.round(num);\n  } else {\n    return Math.round(num) - 1;\n  }\n\
    }\n", "  let num = Number(value);\n  let num_int = Math.round(num);\n  let diff\
    \ = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n  } else\
    \ if (diff > 0.5) {\n    return num_int + 1;\n  } else {\n    return num_int -\
    \ 1;\n  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n\
    \  if (num === int) {\n    if (Math.abs(num) === Math.abs(int)) {\n      return\
    \ int;\n    } else {\n      return num;\n    }\n  } else {\n    return int;\n\
    \  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n\
    \  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n \
    \   return Math.round(num);\n  }\n  return Math.round(num) + (diff > 0.5 ? 1 :\
    \ -1);\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n\
    \  const diff = Math.abs(num - int);\n  if (diff === 0) {\n    return int;\n \
    \ } else if (diff < 0.5) {\n    return int + 1;\n  } else {\n    return int -\
    \ 1;\n  }\n}\n", "  const int = parseInt(value);\n  if (isNaN(int)) {\n    return\
    \ 0;\n  }\n  return Math.round(int);\n}\n", "  const num = Number(value);\n  const\
    \ int = Math.round(num);\n  if (Math.abs(num - int) === 0.5) {\n    return int\
    \ + 1;\n  }\n  return int;\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  let num = Number(value);\n  let diff = Math.abs(num - Math.round(num));\n\
    \  let closest = Math.round(num);\n  if (diff < 0.5) {\n    return closest;\n\
    \  } else if (diff > 0.5) {\n    return closest + 1;\n  } else {\n    return closest;\n\
    \  }\n}\n", "  const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n\
    \  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n \
    \   return Math.round(num);\n  }\n  return Math.round(num);\n}\n", "  let num\
    \ = parseInt(value);\n  let diff = Math.abs(num - value);\n  let diff2 = Math.abs(num\
    \ - (value + \"0\"));\n  if (diff2 < diff) {\n    num = num + 1;\n  }\n  return\
    \ num;\n}\n", "  const num = Number(value);\n  const abs = Math.abs(num);\n  const\
    \ diff = Math.round(abs);\n  const diff2 = Math.round(abs * 2);\n  if (diff ===\
    \ diff2) {\n    return diff;\n  } else {\n    return num > 0 ? diff2 : -diff2;\n\
    \  }\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  if (diff < 0.5) {\n\
    \    return Math.round(num);\n  }\n  return Math.round(num) + 1;\n}\n", "  const\
    \ num = parseInt(value);\n  const diff = Math.abs(num - value);\n  if (diff ===\
    \ 0) {\n    return num;\n  }\n  if (diff < 0.5) {\n    return num;\n  }\n  return\
    \ num + 1;\n}\n", "  let num = parseInt(value);\n  let diff = Math.abs(num - value);\n\
    \  let closest = num;\n  if (diff < 0.5) {\n    closest = num + 1;\n  } else if\
    \ (diff > 0.5) {\n    closest = num - 1;\n  }\n  return closest;\n}\n", "  const\
    \ num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  return Math.round(num);\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num === floor) {\n    return floor;\n  } else\
    \ if (num === ceil) {\n    return ceil;\n  } else {\n    return Math.round(num);\n\
    \  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n\
    \  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n \
    \   return Math.round(num);\n  }\n  if (diff > 0.5) {\n    return Math.round(num\
    \ + 1);\n  }\n  return Math.round(num - 1);\n}\n", "  const int = parseInt(value);\n\
    \  const dec = parseFloat(value);\n  if (Math.abs(dec - int) < 0.5) {\n    return\
    \ int;\n  }\n  return Math.round(dec);\n}\n", "  let num = Number(value);\n  let\
    \ diff = Math.abs(num - Math.round(num));\n  let closest = Math.round(num);\n\
    \  if (diff < 0.5) {\n    return closest;\n  } else if (diff > 0.5) {\n    return\
    \ closest + 1;\n  } else {\n    return closest;\n  }\n}\n", "  const num = Number(value);\n\
    \  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num) - Math.floor(Math.abs(num));\n\
    \  if (diff === 0) {\n    return Math.floor(num);\n  }\n  return Math.floor(num)\
    \ + (diff > 0.5 ? 1 : -1);\n}\n", "  const int = parseInt(value);\n  if (isNaN(int))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(int - value);\n  const diffs\
    \ = diff.toString().split(\".\");\n  const ints = diffs[0].split(\"\");\n  const\
    \ decs = diffs[1];\n  const ints_length = ints.length;\n  const decs_length =\
    \ decs.length;\n  if (ints_length > decs_length) {\n    return int;\n  }\n  if\
    \ (ints_length === decs_length) {\n    return int;\n  }\n  if (ints_length < decs_length)\
    \ {\n    return int + decs.substr(0, decs_length - ints_length);\n  }\n  return\
    \ int - decs.substr(0, ints_length - decs_length);\n}\n", "  let num = Number(value);\n\
    \  let diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  } else if (diff < 0.5) {\n    return Math.round(num);\n\
    \  } else {\n    return Math.round(num) + 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  const num_int = Math.round(num);\n  const num_int_int = Math.round(num_int);\n\
    \  if (num_int === num_int_int) {\n    return num_int_int;\n  } else {\n    return\
    \ num_int;\n  }\n}\n", "  const num = Number(value);\n  const diff = Math.abs(num\
    \ - Math.round(num));\n  if (diff < 0.5) {\n    return Math.round(num);\n  } else\
    \ {\n    return Math.round(num) + 1;\n  }\n}\n", "  let num = parseInt(value);\n\
    \  let diff = Math.abs(num - value);\n  let diff2 = Math.abs(num - value) / 2;\n\
    \  if (diff === diff2) {\n    return num;\n  }\n  if (diff > diff2) {\n    return\
    \ num + 1;\n  }\n  return num - 1;\n}\n", "  const num = Number(value);\n  if\
    \ (num === 0) {\n    return 0;\n  }\n  const abs = Math.abs(num);\n  const diff\
    \ = Math.floor(abs);\n  const diff2 = Math.ceil(abs);\n  if (diff === diff2) {\n\
    \    return diff;\n  }\n  return diff2;\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  if (num === int) {\n    if (Math.abs(num) ===\
    \ Math.abs(int)) {\n      return int;\n    } else {\n      return num > 0 ? Math.ceil(num)\
    \ : Math.floor(num);\n    }\n  } else {\n    return int;\n  }\n}\n", "  const\
    \ num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const diff\
    \ = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  }\n  return Math.round(num);\n}\n", "  let num = Number(value);\n  let diff\
    \ = Math.abs(num - Math.round(num));\n  let closest = Math.round(num);\n  if (diff\
    \ < 0.5) {\n    return closest;\n  } else if (diff > 0.5) {\n    return closest\
    \ + 1;\n  } else {\n    return closest;\n  }\n}\n", "  const num = parseInt(value);\n\
    \  const diff = Math.abs(num - value);\n  if (diff === 0) {\n    return num;\n\
    \  }\n  if (diff > 0.5) {\n    return num + 1;\n  }\n  return num - 1;\n}\n",
  "  const int = parseInt(value);\n  const dec = parseFloat(value);\n  if (Math.abs(dec)\
    \ < 1) {\n    return int;\n  }\n  return Math.round(dec);\n}\n", "  const num\
    \ = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n  if (diff\
    \ === 0) {\n    return Math.round(num);\n  } else if (diff > 0.5) {\n    return\
    \ Math.round(num);\n  } else {\n    return Math.round(num) - 1;\n  }\n}\n", " \
    \ const num = Number(value);\n  const int = Math.round(num);\n  if (num === int)\
    \ {\n    if (Math.abs(num) === Math.abs(int)) {\n      return int;\n    } else\
    \ {\n      return num;\n    }\n  } else {\n    return int;\n  }\n}\n", "  const\
    \ num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num) +\
    \ (diff > 0.5 ? 1 : -1);\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  let num = Number(value);\n  let num_int = Math.round(num);\n  let diff\
    \ = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n  } else\
    \ if (diff > 0.5) {\n    return num_int + 1;\n  } else {\n    return num_int -\
    \ 1;\n  }\n}\n", "  const num = Number(value);\n  const rounded = Math.round(num);\n\
    \  if (num === rounded) {\n    return rounded;\n  }\n  return Math.abs(num - rounded)\
    \ > Math.abs(num - (rounded + 1))\n    ? rounded + 1\n    : rounded;\n}\n", " \
    \ const num = Number(value);\n  if (num === 0) {\n    return 0;\n  }\n  const\
    \ abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff === abs) {\n\
    \    return diff;\n  }\n  return Math.sign(num) * Math.round(Math.abs(num) - diff);\n\
    }\n", "  const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff < 0.5) {\n    return\
    \ Math.round(num);\n  }\n  return Math.round(num) + (diff > 1 ? 1 : -1);\n}\n",
  "  const num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  } else if (diff < 0.5) {\n\
    \    return Math.round(num);\n  } else {\n    return Math.round(num) + 1;\n  }\n\
    }\n", "  const num = parseFloat(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    return int;\n  }\n  return Math.abs(num - int) > Math.abs(num\
    \ - (int + 1)) ? int + 1 : int;\n}\n", "  const num = Number(value);\n  if (num\
    \ === 0) {\n    return 0;\n  }\n  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n\
    \  if (diff === abs) {\n    return diff;\n  }\n  return num > 0 ? Math.ceil(abs)\
    \ : Math.floor(abs);\n}\n", "  const num = Number(value);\n  const rounded = Math.round(num);\n\
    \  if (num === rounded) {\n    return rounded;\n  } else if (num > rounded) {\n\
    \    return Math.ceil(num);\n  } else {\n    return Math.floor(num);\n  }\n}\n",
  "  const int = parseInt(value);\n  if (isNaN(int)) {\n    return 0;\n  }\n  const\
    \ diff = Math.abs(int - value);\n  if (diff === 0) {\n    return int;\n  }\n \
    \ if (diff === 1) {\n    return int + 1;\n  }\n  if (diff === 2) {\n    return\
    \ int - 1;\n  }\n  return int;\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  const num = Number(value);\n  if (num === 0) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num) - Math.floor(Math.abs(num));\n  if (diff === 0)\
    \ {\n    return Math.floor(num);\n  }\n  return Math.floor(num) + (diff > 0.5\
    \ ? 1 : -1);\n}\n", "  const num = Number(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0)\
    \ {\n    return Math.round(num);\n  }\n  return Math.round(num);\n}\n", "  const\
    \ num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const diff\
    \ = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  }\n  return Math.round(num);\n}\n", "  const num = Number(value);\n  const\
    \ int = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff < 0.5)\
    \ {\n    return int;\n  }\n  return Math.round(num);\n}\n", "  const num = Number(value);\n\
    \  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff ===\
    \ abs) {\n    return diff;\n  } else {\n    return num > 0 ? Math.ceil(num) :\
    \ Math.floor(num);\n  }\n}\n", "  const int = parseInt(value);\n  if (isNaN(int))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(int - value);\n  if (diff ===\
    \ 0) {\n    return int;\n  }\n  if (diff < 0.5) {\n    return int + 1;\n  }\n\
    \  return int - 1;\n}\n", "  const num = Number(value);\n  const num_int = Math.round(num);\n\
    \  const diff = Math.abs(num - num_int);\n  if (diff === 0) {\n    return num_int;\n\
    \  }\n  if (diff > 0.5) {\n    return num_int + 1;\n  }\n  return num_int - 1;\n\
    }\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num - value);\n  const closest = Math.round(num);\n \
    \ if (diff === closest) {\n    return closest;\n  }\n  return closest + (diff\
    \ > 0 ? 1 : -1);\n}\n", "  const num = Number(value);\n  const abs = Math.abs(num);\n\
    \  const diff = Math.round(abs);\n  if (diff === abs) {\n    return diff;\n  }\
    \ else {\n    return num > 0 ? Math.ceil(abs) : Math.floor(abs);\n  }\n}\n", " \
    \ const num = Number(value);\n  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n\
    \  if (diff === abs) {\n    return diff;\n  } else {\n    return num > 0 ? Math.ceil(abs)\
    \ : Math.floor(abs);\n  }\n}\n", "  const num = Number(value);\n  const int =\
    \ Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff === 0) {\n\
    \    return int;\n  } else if (diff > 0.5) {\n    return int + 1;\n  } else {\n\
    \    return int - 1;\n  }\n}\n", "  const num = Number(value);\n  const abs =\
    \ Math.abs(num);\n  const int = Math.round(abs);\n  if (abs === int) {\n    return\
    \ int;\n  } else if (abs > int) {\n    return num - int;\n  } else {\n    return\
    \ num + int;\n  }\n}\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n\
    \  const ceil = Math.ceil(num);\n  if (num === floor) {\n    return ceil;\n  }\n\
    \  if (num === ceil) {\n    return floor;\n  }\n  return num;\n}\n", "  const\
    \ number = Number(value);\n  if (isNaN(number)) {\n    return NaN;\n  }\n  const\
    \ rounded = Math.round(number);\n  const diff = Math.abs(number - rounded);\n\
    \  if (diff === 0) {\n    return rounded;\n  }\n  if (diff === 1) {\n    return\
    \ rounded + 1;\n  }\n  return rounded - 1;\n}\n", "  const num = parseInt(value);\n\
    \  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  let num = parseInt(value);\n  let diff = Math.abs(num - value);\n  if\
    \ (diff === 0) {\n    return num;\n  } else if (diff > 0) {\n    return num +\
    \ 1;\n  } else {\n    return num - 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff < 0.5) {\n    return\
    \ Math.round(num);\n  } else {\n    return Math.round(num) + 1;\n  }\n}\n", " \
    \ const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const\
    \ diff = Math.abs(num) - Math.floor(Math.abs(num));\n  if (diff === 0) {\n   \
    \ return Math.floor(num);\n  }\n  return Math.floor(num) + (diff > 0.5 ? 1 : -1);\n\
    }\n", "  const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff < 0.5) {\n    return\
    \ Math.round(num);\n  }\n  return Math.round(num) + (diff > 1 ? 1 : -1);\n}\n",
  "  const num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  } else if (diff > 0.5) {\n\
    \    return Math.round(num);\n  } else {\n    return Math.round(num) - 1;\n  }\n\
    }\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n\
    \  const diff = Math.abs(num) - Math.abs(Math.round(num));\n  if (diff === 0)\
    \ {\n    return Math.round(num);\n  }\n  return Math.round(num) + (diff > 0 ?\
    \ 1 : -1);\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ 0;\n  }\n  const diff = Math.abs(num - value);\n  if (diff === 0) {\n    return\
    \ num;\n  }\n  if (diff < 0.5) {\n    return num;\n  }\n  if (diff > 0.5) {\n\
    \    return num - 1;\n  }\n}\n", "  const num = Number(value);\n  if (num ===\
    \ 0) {\n    return 0;\n  }\n  const diff = Math.abs(num) - Math.floor(Math.abs(num));\n\
    \  if (diff === 0) {\n    return Math.floor(num);\n  }\n  return Math.round(num);\n\
    }\n", "  const num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  } else if (diff > 0.5) {\n\
    \    return Math.round(num);\n  } else {\n    return Math.round(num) - 1;\n  }\n\
    }\n", "  const num = parseInt(value);\n  const diff = Math.abs(num - value);\n\
    \  if (diff === 0) {\n    return num;\n  }\n  if (diff < 0.5) {\n    return num;\n\
    \  }\n  if (diff === 1) {\n    return num + 1;\n  }\n  return num - 1;\n}\n",
  "  const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const\
    \ diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  }\n  return Math.round(num);\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  if (diff < 0.5) {\n    return\
    \ Math.round(num);\n  }\n  return Math.round(num) + 1;\n}\n", "  let num = Number(value);\n\
    \  let num_int = Math.round(num);\n  let diff = Math.abs(num - num_int);\n  if\
    \ (diff === 0) {\n    return num_int;\n  } else if (diff > 0.5) {\n    return\
    \ num_int + 1;\n  } else {\n    return num_int - 1;\n  }\n}\n", "  const num =\
    \ Number(value);\n  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n\
    \  if (num === floor) {\n    return ceil;\n  } else if (num === ceil) {\n    return\
    \ floor;\n  } else {\n    return Math.round(num);\n  }\n}\n", "  const num = Number(value);\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  }\n  return Math.round(num) + (diff > 0.5 ? 1 : -1);\n}\n",
  "  const num = Number(value);\n  const int = Math.round(num);\n  if (num === int)\
    \ {\n    return Math.abs(int);\n  }\n  return int;\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff\
    \ === 0) {\n    return int;\n  } else if (diff < 0.5) {\n    return int + 1;\n\
    \  } else {\n    return int - 1;\n  }\n}\n", "    let number = parseInt(value);\n\
    \    let diff = Math.abs(number - value);\n    let closest = number;\n    if (diff\
    \ > 0.5) {\n        closest = number + 1;\n    } else if (diff < 0.5) {\n    \
    \    closest = number - 1;\n    }\n    return closest;\n}\n", "  let num = Number(value);\n\
    \  let diff = Math.abs(num - Math.round(num));\n  let closest = Math.round(num);\n\
    \  if (diff < 0.5) {\n    return closest;\n  } else if (diff > 0.5) {\n    return\
    \ closest + 1;\n  } else {\n    return closest;\n  }\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  if (num === int) {\n    return int;\n  }\n\
    \  if (Math.abs(num - int) > Math.abs(num - (int + 1))) {\n    return int + 1;\n\
    \  }\n  return int - 1;\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n\
    \  const diff = Math.abs(num - int);\n  if (diff === 0) {\n    return int;\n \
    \ }\n  if (diff > 0.5) {\n    return int + 1;\n  }\n  return int - 1;\n}\n", " \
    \ const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const\
    \ diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  }\n  return Math.round(num);\n}\n", "    let num = parseInt(value);\n    let\
    \ diff = Math.abs(num - value);\n    let diff2 = Math.abs(num - (value * 2));\n\
    \    if (diff < diff2) {\n        return num;\n    } else {\n        return num\
    \ - 1;\n    }\n}\n", "  let num = parseInt(value);\n  let diff = Math.abs(num\
    \ - value);\n  if (diff === 0) {\n    return num;\n  } else if (diff > 0.5) {\n\
    \    return num + 1;\n  } else {\n    return num - 1;\n  }\n}\n", "  let num =\
    \ parseInt(value);\n  let diff = Math.abs(num - value);\n  let closest = num;\n\
    \  if (diff > 0.5) {\n    closest = num + 1;\n  } else if (diff < 0.5) {\n   \
    \ closest = num - 1;\n  }\n  return closest;\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  if (num ===\
    \ floor) {\n    return ceil;\n  } else if (num === ceil) {\n    return floor;\n\
    \  } else {\n    return num;\n  }\n}\n", "  const num = Number(value);\n  const\
    \ diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  } else if (diff > 0.5) {\n    return Math.round(num);\n  } else {\n    return\
    \ Math.round(num) - 1;\n  }\n}\n", "  let num = Number(value);\n  let num_int\
    \ = Math.round(num);\n  let diff = Math.abs(num - num_int);\n  if (diff === 0)\
    \ {\n    return num_int;\n  } else if (diff > 0.5) {\n    return num_int + 1;\n\
    \  } else {\n    return num_int - 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff\
    \ === 0) {\n    return int;\n  } else if (diff < 0.5) {\n    return int + 1;\n\
    \  } else {\n    return int - 1;\n  }\n}\n", "  let num = parseInt(value);\n \
    \ let diff = Math.abs(num - value);\n  let closest = num;\n  if (diff > 0.5) {\n\
    \    closest = num + 1;\n  } else if (diff < 0.5) {\n    closest = num - 1;\n\
    \  }\n  return closest;\n}\n", "  const num = Number(value);\n  const rounded\
    \ = Math.round(num);\n  if (num === rounded) {\n    if (num > 0) {\n      return\
    \ Math.ceil(num);\n    } else {\n      return Math.floor(num);\n    }\n  } else\
    \ {\n    return rounded;\n  }\n}\n", "  const num = Number(value);\n  const int\
    \ = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff < 0.5) {\n\
    \    return int;\n  }\n  if (diff > 0.5) {\n    return int + 1;\n  }\n  return\
    \ int - 1;\n}\n", "  const num = parseInt(value);\n  if (isNaN(num)) {\n    return\
    \ value;\n  }\n  const diff = Math.abs(num - value);\n  if (diff < 0.5) {\n  \
    \  return num;\n  }\n  return num + (diff > 1 ? 1 : -1);\n}\n", "  const number\
    \ = parseFloat(value);\n  const int = Math.round(number);\n  if (Math.abs(number\
    \ - int) === 0.5) {\n    return int + 1;\n  }\n  return int;\n}\n", "  const num\
    \ = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  return Math.round(num);\n\
    }\n", "  const num = Number(value);\n  const numInt = Math.round(num);\n  const\
    \ diff = Math.abs(num - numInt);\n  if (diff === 0) {\n    return numInt;\n  }\
    \ else if (diff > 0.5) {\n    return numInt + 1;\n  } else {\n    return numInt\
    \ - 1;\n  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n\
    \  if (num === int) {\n    return int;\n  }\n  return Math.abs(num - int) > Math.abs(num\
    \ - (int + 1)) ? int + 1 : int;\n}\n", "  const num = parseInt(value);\n  const\
    \ diff = Math.abs(num - value);\n  if (diff === 0) {\n    return num;\n  }\n \
    \ if (diff < 0.5) {\n    return num;\n  }\n  if (diff === 1) {\n    return num\
    \ + 1;\n  }\n  return num - 1;\n}\n", "  let num = Number(value);\n  let num_int\
    \ = Math.round(num);\n  let num_int_2 = Math.round(num * 2);\n  let num_int_3\
    \ = Math.round(num * 3);\n  let num_int_4 = Math.round(num * 4);\n  let num_int_5\
    \ = Math.round(num * 5);\n  let num_int_6 = Math.round(num * 6);\n  let num_int_7\
    \ = Math.round(num * 7);\n  let num_int_8 = Math.round(num * 8);\n  let num_int_9\
    \ = Math.round(num * 9);\n  let num_int_10 = Math.round(num * 10);\n  let num_int_11\
    \ = Math.round(num * 11);\n  let num_int_12 = Math.round(num * 12);\n  let num_int_13\
    \ = Math.round(num * 13);\n  let num_int_14 = Math.round(num * 14);\n  let num_int_15\
    \ = Math.round(num * 15);\n  let num_int_16 = Math.round(num * 16);\n  let num_int_17\
    \ = Math.round(num * 17);\n  let num_int_18 = Math.round(num * 18);\n  let num_int_19\
    \ = Math.round(num * 19);\n  let num_int_20 = Math.round(num * 20);\n  let num_int_21\
    \ = Math.round(num * 21);\n  let num_int_22 = Math.round(num * 22);\n  let num_int_23\
    \ = Math.round(num * 23);\n  let num_int_24 = Math.round(num * 24);\n  let num_int_25\
    \ = Math.round(num * 25);\n  let num_int_26 = Math.round(num * 26);\n  let num_int_27\
    \ = Math.round(num * 27);\n  let num_int_28 = Math.round(num * 28);\n  let num_int_29\
    \ = Math.round(num * 29);\n  let num_int_30 = Math.round(num *", "  const num\
    \ = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const diff =\
    \ Math.abs(num - value);\n  const closest = Math.round(num);\n  if (diff === closest)\
    \ {\n    return closest;\n  }\n  return closest + (diff > 0 ? 1 : -1);\n}\n",
  "  const num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const\
    \ diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return Math.round(num);\n\
    \  }\n  return Math.round(num);\n}\n", "  let num = Number(value);\n  let int\
    \ = Math.round(num);\n  if (num - int === 0) {\n    return int;\n  } else if (num\
    \ - int > 0) {\n    return int + 1;\n  } else {\n    return int - 1;\n  }\n}\n",
  "  let num = parseInt(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  let diff\
    \ = Math.abs(num - value);\n  let closest = num;\n  let diffs = [diff];\n  let\
    \ diffs_arr = diffs.sort();\n  for (let i = 0; i < diffs_arr.length - 1; i++)\
    \ {\n    if (diffs_arr[i] === diffs_arr[i + 1]) {\n      closest = Math.round(closest\
    \ + diffs_arr[i]);\n    }\n  }\n  return closest;\n}\n", "  const num = Number(value);\n\
    \  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff ===\
    \ abs) {\n    return diff;\n  } else {\n    return num > 0 ? Math.ceil(num) :\
    \ Math.floor(num);\n  }\n}\n", "  const int = parseInt(value);\n  if (isNaN(int))\
    \ {\n    return value;\n  }\n  const diff = Math.abs(int - value);\n  if (diff\
    \ === 0) {\n    return int;\n  }\n  if (diff === 1) {\n    return int + 1;\n \
    \ }\n  if (diff === 2) {\n    return int - 1;\n  }\n  return int;\n}\n", "  let\
    \ num = Number(value);\n  let num_int = Math.round(num);\n  let diff = Math.abs(num\
    \ - num_int);\n  if (diff === 0) {\n    return num_int;\n  }\n  if (diff > 0.5)\
    \ {\n    return num_int + 1;\n  }\n  return num_int - 1;\n}\n", "  const num =\
    \ Number(value);\n  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n\
    \  if (num === floor) {\n    return ceil;\n  }\n  if (num === ceil) {\n    return\
    \ floor;\n  }\n  return num;\n}\n", "  const num = Number(value);\n  const abs\
    \ = Math.abs(num);\n  const diff = Math.round(abs);\n  if (diff === abs) {\n \
    \   return diff;\n  } else {\n    return num > 0 ? Math.ceil(num) : Math.floor(num);\n\
    \  }\n}\n", "  const num = Number(value);\n  const int = Math.round(num);\n  if\
    \ (num === int) {\n    if (Math.abs(num) === Math.abs(int)) {\n      return int;\n\
    \    } else {\n      return num;\n    }\n  } else {\n    return int;\n  }\n}\n",
  "  const num = Number(value);\n  const abs = Math.abs(num);\n  const diff = Math.round(abs);\n\
    \  if (diff === abs) {\n    return diff;\n  } else {\n    return num > 0 ? Math.ceil(num)\
    \ : Math.floor(num);\n  }\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return value;\n  }\n  const diff = Math.abs(num - value);\n  if (diff\
    \ === 0) {\n    return num;\n  }\n  const diff2 = Math.abs(num - (value + 1));\n\
    \  if (diff2 < diff) {\n    return num;\n  }\n  return num - 1;\n}\n", "  const\
    \ num = Number(value);\n  if (isNaN(num)) {\n    return 0;\n  }\n  const abs =\
    \ Math.abs(num);\n  const int = Math.round(abs);\n  if (abs === int) {\n    return\
    \ int;\n  }\n  return num > 0 ? int + 1 : int - 1;\n}\n", "  const num = Number(value);\n\
    \  const floor = Math.floor(num);\n  const ceil = Math.ceil(num);\n  if (num ===\
    \ floor) {\n    return ceil;\n  } else if (num === ceil) {\n    return floor;\n\
    \  } else {\n    return Math.round(num);\n  }\n}\n", "  const num = Number(value);\n\
    \  const int = Math.round(num);\n  const diff = Math.abs(num - int);\n  if (diff\
    \ === 0) {\n    return int;\n  } else if (diff > 0.5) {\n    return int + 1;\n\
    \  } else {\n    return int - 1;\n  }\n}\n", "  const num = parseInt(value);\n\
    \  if (isNaN(num)) {\n    return value;\n  }\n  const diff = Math.abs(num - value);\n\
    \  if (diff === 0) {\n    return num;\n  }\n  if (diff < 0.5) {\n    return num;\n\
    \  }\n  if (diff > 0.5) {\n    return num + 1;\n  }\n}\n", "  const num = Number(value);\n\
    \  if (isNaN(num)) {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  const num = parseInt(value);\n  const diff = Math.abs(num - value);\n\
    \  if (diff === 0) {\n    return num;\n  }\n  if (diff < 0.5) {\n    return num\
    \ + 1;\n  }\n  return num - 1;\n}\n", "  let num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return value;\n  }\n  let diff = Math.abs(num - value);\n  let closest\
    \ = num;\n  if (diff < 0.5) {\n    closest = num + 1;\n  } else if (diff > 0.5)\
    \ {\n    closest = num - 1;\n  }\n  return closest;\n}\n", "  let num = parseInt(value);\n\
    \  let diff = Math.abs(num - value);\n  let diff2 = Math.abs(num - value) / 2;\n\
    \  if (diff2 < diff) {\n    return num;\n  } else {\n    return num + 1;\n  }\n\
    }\n", "  const num = Number(value);\n  const diff = Math.abs(num - Math.round(num));\n\
    \  if (diff === 0) {\n    return Math.round(num);\n  } else if (diff > 0.5) {\n\
    \    return Math.round(num);\n  } else {\n    return Math.round(num) - 1;\n  }\n\
    }\n", "  const num = Number(value);\n  if (num === 0) {\n    return 0;\n  }\n\
    \  const abs = Math.abs(num);\n  const floor = Math.floor(abs);\n  const ceil\
    \ = Math.ceil(abs);\n  if (floor === ceil) {\n    return floor;\n  }\n  return\
    \ num > 0 ? ceil : floor;\n}\n", "  const num = parseInt(value);\n  if (isNaN(num))\
    \ {\n    return 0;\n  }\n  const diff = Math.abs(num - Math.round(num));\n  if\
    \ (diff === 0) {\n    return Math.round(num);\n  }\n  return Math.round(num);\n\
    }\n", "  const num = Number(value);\n  const floor = Math.floor(num);\n  const\
    \ ceil = Math.ceil(num);\n  if (num === floor) {\n    return floor;\n  } else\
    \ if (num === ceil) {\n    return ceil;\n  } else {\n    return Math.round(num);\n\
    \  }\n}\n", "  if (value === \"\") {\n    return 0;\n  }\n  const num = Number(value);\n\
    \  const diff = Math.abs(num - Math.round(num));\n  if (diff === 0) {\n    return\
    \ Math.round(num);\n  }\n  if (diff > 0.5) {\n    return Math.round(num);\n  }\n\
    \  return Math.round(num) + 1;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_62_derivative
language: ts
prompt: "//xs represent coefficients of a polynomial.\n// xs[0] + xs[1] * x + xs[2]\
  \ * x^2 + ....\n// Return derivative of this polynomial in the same form.\n// >>>\
  \ derivative([3, 1, 2, 4, 5])\n// [1, 4, 12, 20]\n// >>> derivative([1, 2, 3])\n\
  // [2, 6]\nfunction derivative(xs: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = derivative;\n  assert.deepEqual(candidate([3, 1, 2,\
  \ 4, 5]),[1, 4, 12, 20]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 6]);\n  assert.deepEqual(candidate([3,\
  \ 2, 1]),[2, 2]);\n  assert.deepEqual(candidate([3, 2, 1, 0, 4]),[2, 2, 0, 16]);\n\
  \  assert.deepEqual(candidate([1]),[]);\n}\n\ntest();"
completions: ["  let result = [];\n  for (let i = 1; i < xs.length; i++) {\n    result.push(i\
    \ * xs[i]);\n  }\n  return result;\n}\n", "  let result = [];\n  for (let i =\
    \ 0; i < xs.length - 1; i++) {\n    result.push(xs[i + 1] - xs[i]);\n  }\n  return\
    \ result;\n}\n", "  if (xs.length === 1) {\n    return [0];\n  }\n  const result\
    \ = [];\n  for (let i = 0; i < xs.length - 1; i++) {\n    result[i] = (xs[i +\
    \ 1] - xs[i]) / (xs[i + 1] - xs[i - 1]);\n  }\n  result[result.length - 1] = 0;\n\
    \  return result;\n}\n", "  if (xs.length === 1) {\n    return [0];\n  }\n  return\
    \ [xs[1] - xs[0]];\n}\n", "  const len = xs.length\n  const result = []\n  for\
    \ (let i = 0; i < len - 1; i++) {\n    result.push(xs[i + 1] - xs[i])\n  }\n \
    \ return result\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

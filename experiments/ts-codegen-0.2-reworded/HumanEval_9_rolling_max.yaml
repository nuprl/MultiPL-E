name: HumanEval_9_rolling_max
language: ts
prompt: "//From a given array of integers, generate an array of rolling maximum element\
  \ found until given moment\n// in the sequence.\n// >>> rolling_max([1, 2, 3, 2,\
  \ 3, 4, 2])\n// [1, 2, 3, 3, 3, 4, 4]\nfunction rolling_max(numbers: number[]):\
  \ number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = rolling_max;\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([1, 2, 3, 4]),[1, 2, 3, 4]);\n  assert.deepEqual(candidate([4,\
  \ 3, 2, 1]),[4, 4, 4, 4]);\n  assert.deepEqual(candidate([3, 2, 3, 100, 3]),[3,\
  \ 3, 3, 100, 100]);\n}\n\ntest();"
completions: ["  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max);\n    max = numbers[i];\n  }\n  result.push(max);\n\
    \  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max_array = [];\n  let max_value = numbers[0];\n  let max_index = 0;\n \
    \ for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  ", " \
    \ let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far = 0;\n\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n\
    \      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    }\n    if (numbers[i] > numbers[i - 1]) {\n      max_so_far_index_so_far_index_so_far_index\
    \ = i;\n      max_so_far_index_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far_index_so_far;\n\
    \    }\n  }\n  return [max_so_far, max_so_far_index, max_so_far_index_so_far,\
    \ max_so_far_index_so_far_index_so_far, max_so_far_index_so_far_index_so_far_index,\
    \ max_so_far_index_so_far", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max_array = [];\n  let max_index = 0;\n  let max_value = 0;\n  let\
    \ current_max = 0;\n  let current_index = 0;\n  let current_value = 0;\n  let\
    \ current_array = [];\n\n  for (let i = 0; i < numbers.length; i++) {\n    current_value\
    \ = numbers[i];\n    if (current_value > max_value) {\n      max_value = current_value;\n\
    \      max_index = i;\n    }\n    current_array.push(current_value);\n  }\n\n\
    \  max_array.push(max_value);\n  max_array.push(max_index);\n\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    current_value = numbers[i];\n    current_index\
    \ = i;\n    if (current_value > max_value) {\n      max_value = current_value;\n\
    \      max_index = i;\n    }\n    current_array.push(current_value);\n  }\n\n\
    \  max_array.push(max_value);\n  max_array.push(max_index);\n\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    current_value = numbers[i];\n    current_index\
    \ = i;\n    if (current_value > max_value) {\n      max_value = current_value;\n\
    \      max_index = i;\n    }\n    current_array.push(current_value);\n  }\n\n\
    \  max_array.push(max_value);\n  max_array.push(max_index);\n\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    current_value = numbers[i];\n    current_index\
    \ = i;\n    if (current_value > max_value) {\n      max_value = current_value;\n\
    \      max_index = i;\n    }\n    current_array.push(current_value);\n  }\n\n\
    \  max_array.push(max_value);\n  max_array.push(max_index);\n\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    current_value =", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max_index =\
    \ 0;\n  let max_value = numbers[0];\n  let result = [];\n  for (let i = 0; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value =\
    \ numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n  }\n\
    \  return result;\n}\n", "  let max_value = numbers[0];\n  let max_index = 0;\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \    result.push(max_value);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max);\n    max = numbers[i];\n  }\n  result.push(max);\n\
    \  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max_index = 0\n  let max_value = numbers[0]\n  let result = []\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n     \
    \ max_value = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n\
    \  }\n  return result\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      result =\
    \ [...result, max];\n    } else {\n      result = [...result, numbers[i]];\n \
    \   }\n  }\n  return result;\n}\n", "  let max_value = numbers[0];\n  let max_index\
    \ = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n   \
    \ if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max_value);\n  }\n  return result;\n}\n", "  let\
    \ max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n\
    \  let result = []\n\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i]\n      max_index = i\n    }\n \
    \ }\n\n  result.push(max_value)\n  for (let i = max_index; i < numbers.length;\
    \ i++) {\n    result.push(numbers[i])\n  }\n\n  return result\n}\n", "  let max_value\
    \ = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i = 0; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n  }\n\
    \  return result;\n}\n", "    let max_array = [];\n    let current_max = numbers[0];\n\
    \    let max_index = 0;\n    for (let i = 0; i < numbers.length; i++) {\n    \
    \    if (numbers[i] > current_max) {\n            max_array.push(numbers[i]);\n\
    \            current_max = numbers[i];\n            max_index = i;\n        }\n\
    \    }\n    max_array.push(current_max);\n    return max_array;\n}\n", "  let\
    \ max_array = [];\n  let max_index = 0;\n  let max_value = numbers[0];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n\
    \      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n  max_array.push(max_value);\n  for (let i = max_index + 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n  }\n  max_array.push(max_value);\n  for (let i =\
    \ max_index + 1; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n\
    \      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n  max_array.push(max_value);\n  for (let i = max_index + 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index =", "  let max_so_far = numbers[0];\n  let max_so_far_index =\
    \ 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_so_far = numbers[0];\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n    }\n    if\
    \ (numbers[i] > max_so_far_so_far) {\n      max_so_far_so_far = numbers[i];\n\
    \      max_so_far_index_so_far = i;\n    }\n  }\n\n  let result = [];\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (i === max_so_far_index_so_far) {\n\
    \      result.push(max_so_far);\n    } else if (i === max_so_far_index) {\n  \
    \    result.push(max_so_far_so_far);\n    } else {\n      result.push(numbers[i]);\n\
    \    }\n  }\n\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let\
    \ max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value =", "  let max_index = 0\n  let max_value = numbers[0]\n  let\
    \ result = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i]\n      max_index = i\n    }\n \
    \   result.push(max_value)\n  }\n  return result.concat(numbers.slice(max_index))\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    max = Math.max(max, numbers[i]);\n\
    \    result.push(max);\n  }\n  return result;\n}\n", "  let max_index = 0;\n \
    \ let max_value = numbers[0];\n  let max_array = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n    max_array.push(numbers[i]);\n  }\n  return max_array;\n\
    }\n", "  let max_array = [];\n  let max_index = 0;\n  let current_max = 0;\n \
    \ let current_index = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    if\
    \ (numbers[i] > current_max) {\n      current_max = numbers[i];\n      current_index\
    \ = i;\n    }\n  }\n  max_array.push(current_max);\n  for (let i = current_index;\
    \ i < numbers.length; i++) {\n    if (numbers[i] > current_max) {\n      current_max\
    \ = numbers[i];\n      current_index = i;\n    }\n  }\n  max_array.push(current_max);\n\
    \  for (let i = current_index; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > current_max) {\n      current_max = numbers[i];\n      current_index = i;\n\
    \    }\n  }\n  max_array.push(current_max);\n  for (let i = current_index; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > current_max) {\n      current_max\
    \ = numbers[i];\n      current_index = i;\n    }\n  }\n  max_array.push(current_max);\n\
    \  for (let i = current_index; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > current_max) {\n      current_max = numbers[i];\n      current_index = i;\n\
    \    }\n  }\n  max_array.push(current_max);\n  for (let i = current_index; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > current_max) {\n      current_max\
    \ = numbers[i];\n      current_index = i;\n    }\n  }\n  max_array.push(current_max);\n\
    \  for (let i = current_index; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > current_max) {\n      current_max = numbers[i];\n      current_index = i;\n",
  "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value\
    \ = numbers[0];\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_so_far) {\n            max_so_far = numbers[i];\n            max_so_far_index\
    \ = i;\n            max_so_far_value = numbers[i];\n        }\n    }\n    let\
    \ result = [];\n    for (let i = 0; i < numbers.length; i++) {\n        if (i\
    \ === max_so_far_index) {\n            result.push(max_so_far_value);\n      \
    \  } else {\n            result.push(numbers[i]);\n        }\n    }\n    return\
    \ result;\n}\n", "  let max_value = numbers[0];\n  let max_index = 0;\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max_arr = [];\n  let max_index = 0;\n  let max_value = numbers[0];\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n     \
    \ max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_arr.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  ", " \
    \ let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_value = numbers[0];\n  let max_index\
    \ = 0;\n  let result = [];\n\n  for (let i = 1; i < numbers.length; i++) {\n \
    \   if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n  }\n\n  result.push(max_value);\n\n  for (let i = max_index; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \n  for (let i = max_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n\n  result.push(max_value);\n\n  return result;\n}\n", "  let max_so_far\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far =\
    \ 0;\n  let max_so_far_so_far = numbers[0];\n  let max_so_far_so_far_index = 0;\n\
    \  let max_so_far_so_far_index_so_far = 0;\n  let max_so_far_so_far_so_far = numbers[0];\n\
    \  let max_so_far_so_far_so_far_index = 0;\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n\
    \      max_so_far_index = i;\n      max_so_far_index_so_far = max_so_far_so_far_index;\n\
    \      max_so_far_so_far = max_so_far_so_far_so_far;\n      max_so_far_so_far_index\
    \ = max_so_far_so_far_index_so_far;\n    }\n    if (numbers[i] > max_so_far_so_far)\
    \ {\n      max_so_far_so_far = numbers[i];\n      max_so_far_so_far_index = i;\n\
    \      max_so_far_so_far_index_so_far = max_so_far_so_far_so_far_index;\n    }\n\
    \    if (numbers[i] > max_so_far_so_far_so_far) {\n      max_so_far_so_far_so_far\
    \ = numbers[i];\n      max_so_far_so_far_so_far_index = i;\n    }\n  }\n  return\
    \ [max_so_far, max_so_far_index, max_so_far_index_so_far, max_so_far_so_far, max_so_far_so_far_index,\
    \ max_so_far_so_far_index_so_far,", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ max_so_far_index_so_far = 0;\n    let max_so_far_index_so_far_index = 0;\n \
    \   let max_so_far_index_so_far_index_so_far = 0;\n    let max_so_far_index_so_far_index_so_far_index\
    \ = 0;\n    let max_so_far_index_so_far_index_so_far_index_so_far = 0;\n    for\
    \ (let i = 1; i < numbers.length; i++) {\n        if (numbers[i] > max_so_far)\
    \ {\n            max_so_far = numbers[i];\n            max_so_far_index = i;\n\
    \            max_so_far_index_so_far = max_so_far_index_so_far;\n            max_so_far_index_so_far_index\
    \ = max_so_far_index_so_far_index;\n            max_so_far_index_so_far_index_so_far\
    \ = max_so_far_index_so_far_index_so_far;\n            max_so_far_index_so_far_index_so_far_index\
    \ = max_so_far_index_so_far_index_so_far_index;\n        }\n        if (numbers[i]\
    \ > numbers[i - 1]) {\n            max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index;\n\
    \            max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far;\n\
    \            max_so_far_index_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far_index_so_far;\n\
    \        }\n        if (numbers[i] > numbers[i - 1] && numbers[i] > numbers[i\
    \ - 2]) {\n            max", "  let max_index = 0\n  let max_value = numbers[0]\n\
    \  let result = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i]\n      max_index = i\n    }\n \
    \   result.push(max_value)\n  }\n  return result\n}\n", "  let max_so_far = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value =", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_value\
    \ = numbers[i];\n    }\n  }\n\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (i === max_so_far_index) {\n      result.push(max_so_far);\n\
    \    } else {\n      result.push(numbers[i]);\n    }\n  }\n\n  return result;\n\
    }\n", "  let max_array = [];\n  let max_index = 0;\n  let current_max = numbers[0];\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > current_max)\
    \ {\n      current_max = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(current_max);\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (i === max_index) {\n  \
    \    continue;\n    }\n    if (numbers[i] > current_max) {\n      current_max\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(current_max);\n\
    \  return max_array;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n      result = [...result, max];\n    } else {\n    \
    \  result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n", "  let\
    \ max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far\
    \ = 0;\n  let max_so_far_index_so_far_index = 0;\n  let max_so_far_index_so_far_index_so_far\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far\
    \ = 0;\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    }\n    if (numbers[i] > numbers[i - 1]) {\n      max_so_far_index_so_far\
    \ = i;\n      max_so_far_index_so_far_index = i - 1;\n      max_so_far_index_so_far_index_so_far\
    \ = max_so_far_index_so_far_index;\n      max_so_far_index_so_far_index_so_far_index\
    \ = max_so_far_index_so_far_index_so_far;\n      max_so_far_index_so_far_index_so_far_index_so_far\
    \ = max_so_far_index_so_far_index_so_far_index;\n    }", "  let max = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max);\n    max = numbers[i];\n  }\n  result.push(max);\n\
    \  return result;\n}\n", "  const result = [];\n  let max = 0;\n  let current\
    \ = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      current = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  const\
    \ result = [];\n  let max = numbers[0];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ =", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  const result = [];\n  let max = 0;\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value =", "  let max_so_far = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far = 0;\n\n  for (let i = 1; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far\
    \ = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far =\
    \ max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \    } else if (numbers[i] === max_so_far) {\n      max_so_far_index_so_far_index++;\n\
    \    }\n  }\n\n  return [max_so_far, max_so_far_index, max_so_far_index_so_far,\
    \ max_so_far_index_so_far_index, max_so_far_index_so_far_index_so_far];\n}\n",
  "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_array = [];\n  let max_index = 0;\n \
    \ let max_value = numbers[0];\n  for (let i = 0; i < numbers.length; i++) {\n\
    \    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n  }\n  max_array.push(max_value);\n  for (let i = max_index; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n  max_array.push(max_value);\n  return max_array;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far = 0;\n\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n\
    \      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    } else if (numbers[i] > max_so_far_index_so_far) {\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    } else if (numbers[i] > max_so_far_", "  let max = numbers[0];\n  let result\
    \ = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] >\
    \ max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n  let result\
    \ = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n\
    \  }\n  return result\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  \
    \  let max_value = numbers[0];\n    let max_index = 0;\n    let result = [];\n\
    \n    for (let i = 0; i < numbers.length; i++) {\n        if (numbers[i] > max_value)\
    \ {\n            max_value = numbers[i];\n            max_index = i;\n       \
    \ }\n    }\n\n    result.push(max_value);\n    for (let i = max_index; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n\n    result.push(max_value);\n\
    \    for (let i = max_index; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_value) {\n            max_value = numbers[i];\n            max_index =\
    \ i;\n        }\n    }\n\n    result.push(max_value);\n    for (let i = max_index;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_value) {\n        \
    \    max_value = numbers[i];\n            max_index = i;\n        }\n    }\n\n\
    \    result.push(max_value);\n    for (let i = max_index; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_value) {\n            max_value = numbers[i];\n\
    \            max_index = i;\n        }\n    }\n\n    result.push(max_value);\n\
    \    for (let i = max_index; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max_value) {\n            max_value = numbers[i];\n            max_index =\
    \ i;\n        }\n    }\n\n    result.push(max_value);\n    for (let i = max_index;\
    \ i < numbers.length; i++) {\n        if (numbers[i] > max_value) {\n        \
    \    max_value = numbers[i];\n            max_index = i;\n        }\n    }\n\n\
    \    result.push(max_value);\n    for (let i", "  let max_value = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n    result.push(max_value);\n  }\n  result.push(max_value);\n\
    \  return result;\n}\n", "  let max_array = [];\n  let max_index = 0;\n  let max_value\
    \ = numbers[0];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n  max_array.push(max_value);\n  for (let i = 1; i < numbers.length; i++)\
    \ {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n  }\n  max_array.push(max_value);\n  for (let i = 2; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n  }\n  max_array.push(max_value);\n  for (let i =\
    \ 3; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = 4; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = 5; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = 6; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  ", "  let max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n    max =\
    \ numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let max =\
    \ numbers[0];\n  let max_index = 0;\n  let max_array = [];\n  for (let i = 0;\
    \ i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    max_array.push(max);\n  }\n  return max_array;\n\
    }\n", "  let max = numbers[0];\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_index = 0;\n  let max_value = numbers[0];\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \    result.push(max_value);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n  let result\
    \ = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n\
    \  }\n  return result\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n\
    \  let result = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i]\n      max_index = i\n    }\n \
    \   result.push(max_value)\n  }\n  return result\n}\n", "  let max_so_far = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let result = [];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far\
    \ = numbers[i];\n      max_so_far_index = i;\n      max_so_far_value = numbers[i];\n\
    \    }\n    result.push(max_so_far);\n    max_so_far = numbers[i];\n    max_so_far_index\
    \ = i;\n    max_so_far_value = numbers[i];\n  }\n  result.push(max_so_far);\n\
    \  return result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n  let\
    \ result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    result.push(max);\n    max = numbers[i];\n \
    \ }\n  result.push(max);\n  return result;\n}\n", "  let max_array = [];\n  let\
    \ max_index = 0;\n  let current_max = 0;\n  let current_index = 0;\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (current_max < numbers[i]) {\n   \
    \   current_max = numbers[i];\n      current_index = i;\n    }\n    if (max_array.length\
    \ === 0) {\n      max_array.push(current_max);\n    } else {\n      max_array.push(current_max);\n\
    \      max_index = current_index;\n    }\n  }\n  return max_array;\n}\n", "  let\
    \ max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far\
    \ = 0;\n  let max_so_far_so_far = 0;\n\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n\
    \      max_so_far_index = i;\n    }\n    if (numbers[i] > max_so_far_so_far) {\n\
    \      max_so_far_so_far = numbers[i];\n      max_so_far_index_so_far = i;\n \
    \   }\n  }\n\n  return [max_so_far, max_so_far_index, max_so_far_index_so_far];\n\
    }\n", "  let max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n    max =\
    \ numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let max_so_far\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far =\
    \ 0;\n  let max_so_far_so_far = 0;\n  let max_so_far_so_far_index = 0;\n  let\
    \ max_so_far_so_far_index_so_far = 0;\n  let max_so_far_so_far_so_far = 0;\n \
    \ let max_so_far_so_far_so_far_index = 0;\n  let max_so_far_so_far_so_far_index_so_far\
    \ = 0;\n  let max_so_far_so_far_so_far_so_far = 0;\n  let max_so_far_so_far_so_far_so_far_index\
    \ = 0;\n  let max_so_far_so_far_so_far_so_far_index_so_far = 0;\n  let max_so_far_so_far_so_far_so_far_so_far\
    \ = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_index = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_index_so_far\
    \ = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_so_far = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_so_far_index\
    \ = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_so_far_index_so_far = 0;\n\
    \  let max_so_far_so_far_so_far_so_far_so_far_so_far_so_far = 0;\n  let max_so_far_so_far_so_far_so_far_so_far_so_far_so_far_index\
    \ = 0;\n  let max_so_far_so_far_", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ =", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max_value = numbers[0];\n  let max_index = 0;\n  let result = [];\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n      result = [...result, max];\n    } else {\n    \
    \  result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n", "  let\
    \ max_index = 0\n  let max_value = numbers[0]\n\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i]\n  \
    \    max_index = i\n    }\n  }\n\n  let result = []\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (i === max_index) {\n      result.push(max_value)\n    } else\
    \ {\n      result.push(numbers[i])\n    }\n  }\n\n  return result\n}\n", "  let\
    \ max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i =\
    \ 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    result.push(max);\n    max = numbers[i];\n \
    \ }\n  result.push(max);\n  return result;\n}\n", "  let max = numbers[0];\n \
    \ let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index =\
    \ 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n\
    \    let max_so_far_value = numbers[0];\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n            max_so_far_value = numbers[i];\n\
    \        }\n    }\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (i === max_so_far_index) {\n            result.push(max_so_far);\n\
    \        } else {\n            result.push(numbers[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_array = [];\n  let max_index = 0;\n \
    \ let max_value = numbers[0];\n  for (let i = 0; i < numbers.length; i++) {\n\
    \    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n  }\n  max_array.push(max_value);\n  for (let i = max_index; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n  max_array.push(max_value);\n\
    \  for (let i = max_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \  }\n  max_array.push(max_value);\n  return max_array;\n}\n", "  let max = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max);\n    max = numbers[i];\n  }\n  result.push(max);\n\
    \  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n    }\n  }\n\
    \n  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (i\
    \ === max_so_far_index) {\n      result.push(max_so_far);\n      max_so_far =\
    \ numbers[i];\n      max_so_far_index = i;\n    } else {\n      result.push(numbers[i]);\n\
    \    }\n  }\n\n  return result;\n}\n", "  let max = numbers[0];\n  let max_index\
    \ = 0;\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      max_index = i;\n    }\n  }\n  let result =\
    \ [max];\n  for (let i = max_index; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n    max =\
    \ numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let max_so_far\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value =", "  let max_value = numbers[0];\n  let max_index\
    \ = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n   \
    \ if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n    result.push(max_value);\n  }\n  return result;\n}\n", "  let\
    \ max_index = 0\n  let max_value = numbers[0]\n  let result = []\n  for (let i\
    \ = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n  }\n\
    \  return result\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far\
    \ = 0;\n  let max_so_far_index_so_far_index = 0;\n  let max_so_far_index_so_far_index_so_far\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far\
    \ = 0;\n\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    } else if (numbers[i] === max_so_far) {\n      max_so_far_index_so_far_index_so_far_index\
    \ = max_so_far_index_so_far_index_so_far_index;\n      max_so_far_index_so_far_index_so_far_index_so_far\
    \ = max_so_far_index_so_far_index_so_far_index_so_far;\n    } else if (numbers[i]\
    \ < max_so_far) {\n      max_so_far_index_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far_index_so_far",
  "  let max_value = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n\
    \      max_value = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n\
    \  }\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_length = 0;\n  let max_so_far_array = [];\n\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n    \
    \  max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_length\
    \ = 1;\n    } else if (numbers[i] === max_so_far) {\n      max_so_far_length++;\n\
    \    }\n  }\n\n  max_so_far_array = [max_so_far];\n  for (let i = max_so_far_index;\
    \ i < max_so_far_index + max_so_far_length; i++) {\n    max_so_far_array.push(numbers[i]);\n\
    \  }\n\n  return max_so_far_array;\n}\n", "  let max_array = [];\n  let max_index\
    \ = 0;\n  let current_max = numbers[0];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > current_max) {\n      current_max = numbers[i];\n\
    \      max_index = i;\n    }\n  }\n  max_array.push(current_max);\n  for (let\
    \ i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > numbers[i +\
    \ 1]) {\n      max_array.push(numbers[i]);\n    } else {\n      max_array.push(numbers[i\
    \ + 1]);\n    }\n  }\n  return max_array;\n}\n", "  let max = numbers[0];\n  let\
    \ result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      result = [...result, max];\n    } else\
    \ {\n      result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n",
  "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_value\
    \ = numbers[i];\n    }\n  }\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (i === max_so_far_index) {\n      result.push(max_so_far_value);\n\
    \    } else {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n      max_index = i;\n    }\n  }\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] === max) {\n\
    \      result.push(max);\n    } else {\n      result.push(numbers[i]);\n    }\n\
    \  }\n  return result;\n}\n", "  let max_value = numbers[0];\n  let max_index\
    \ = 0;\n  let result = [];\n\n  for (let i = 0; i < numbers.length; i++) {\n \
    \   if (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index\
    \ = i;\n    }\n  }\n\n  result.push(max_value);\n  for (let i = max_index; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value =\
    \ numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i", "  let max = numbers[0];\n  let max_index = 0;\n  let result =\
    \ [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max_value = numbers[0];\n  let max_index = 0;\n  let max_array = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n\
    \      max_value = numbers[i];\n      max_index = i;\n    }\n    max_array.push(max_value);\n\
    \  }\n  return max_array;\n}\n", "  let max_array = [];\n  let max_index = 0;\n\
    \  let current_max = 0;\n  let current_index = 0;\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (current_max < numbers[i]) {\n      current_max = numbers[i];\n\
    \      current_index = i;\n    }\n    max_array.push(current_max);\n    current_max\
    \ = numbers[i];\n    current_index = i;\n  }\n  max_array.push(current_max);\n\
    \  return max_array;\n}\n", "  let max_value = numbers[0];\n  let max_index =\
    \ 0;\n  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if\
    \ (numbers[i] > max_value) {\n      max_value = numbers[i];\n      max_index =\
    \ i;\n    }\n    result.push(max_value);\n  }\n  return result;\n}\n", "  let\
    \ max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let result = [];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_so_far) {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n\
    \      max_so_far_value = numbers[i];\n    }\n    if (numbers[i] > max_so_far_value)\
    \ {\n      max_so_far_value = numbers[i];\n    }\n    result.push(max_so_far);\n\
    \  }\n  result.push(max_so_far);\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_index_so_far\
    \ = 0;\n  let max_so_far_index_so_far_index = 0;\n  let max_so_far_index_so_far_index_so_far\
    \ = 0;\n\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \    } else if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n \
    \     max_so_far_index = i;\n      max_so_far_index_so_far = max_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n    } else\
    \ if (numbers[i] > max_so_far_index_so_far) {\n      max_so_far = numbers[i];\n\
    \      max_so_far_index = i;\n      max_so_far_index_so_far = max_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n    } else\
    \ if (numbers[i] > max_so_far_index_so_far_index_so_far) {\n      max_so_far =\
    \ numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far = max_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index = max_so_far_index_so_far_", "  let max =\
    \ numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length; i++)\
    \ {\n    max = Math.max(max, numbers[i]);\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max_so_far\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value =", "    let max = numbers[0];\n    let max_index\
    \ = 0;\n    for (let i = 1; i < numbers.length; i++) {\n        if (numbers[i]\
    \ > max) {\n            max = numbers[i];\n            max_index = i;\n      \
    \  }\n    }\n    return [max, ...numbers.slice(max_index)];\n}\n", "  let max\
    \ = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n\
    \  let result = []\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i]\n      max_index = i\n    }\n \
    \   result.push(max_value)\n  }\n  return result\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let max_index = 0;\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      max_index = i;\n    }\n  }\n  return\
    \ [max, ...numbers.slice(max_index)];\n}\n", "  let max_value = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n    result.push(max_value);\n  }\n  return result;\n\
    }\n", "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_value\
    \ = numbers[i];\n    }\n  }\n\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (i === max_so_far_index) {\n      result.push(max_so_far_value);\n\
    \    } else {\n      result.push(numbers[i]);\n    }\n  }\n\n  return result;\n\
    }\n", "  let max_value = numbers[0];\n  let max_index = 0;\n  for (let i = 1;\
    \ i < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i];\n      max_index = i;\n    }\n  }\n  let result = [];\n  for (let\
    \ i = 0; i < numbers.length; i++) {\n    if (i === max_index) {\n      result.push(max_value);\n\
    \    } else {\n      result.push(numbers[i]);\n    }\n  }\n  return result;\n\
    }\n", "  let max_index = 0\n  let max_value = numbers[0]\n  let result = []\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n\
    \  }\n  return result.slice(max_index)\n}\n", "  let max = numbers[0];\n  let\
    \ result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      result = [...result, max];\n    } else {\n      result = [...result, numbers[i]];\n\
    \    }\n  }\n  return result;\n}\n", "  let max = numbers[0];\n  let max_index\
    \ = 0;\n  let result = [];\n  for (let i = 1; i < numbers.length; i++) {\n   \
    \ if (numbers[i] > max) {\n      max = numbers[i];\n      max_index = i;\n   \
    \ }\n    result.push(max);\n    max = numbers[i];\n  }\n  result.push(max);\n\
    \  return result;\n}\n", "  let max_index = 0;\n  let max_value = numbers[0];\n\
    \  let result = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max_value) {\n      max_value = numbers[i];\n      max_index = i;\n    }\n\
    \    result.push(max_value);\n  }\n  return result;\n}\n", "  let max_so_far =\
    \ numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value =", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ =", "  let max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for\
    \ (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n    max =\
    \ numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let max =\
    \ numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i = 0; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    result.push(max);\n    max = numbers[i];\n \
    \ }\n  result.push(max);\n  return result;\n}\n", "  let max_value = numbers[0];\n\
    \  let max_index = 0;\n  let result = [];\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i];\n \
    \     max_index = i;\n    }\n    result.push(max_value);\n  }\n  return result;\n\
    }\n", "  let max_value = numbers[0];\n  let max_index = 0;\n  let result = [];\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max_value);\n\
    \  for (let i = max_index; i < numbers.length; i++) {\n    result.push(numbers[i]);\n\
    \  }\n\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let\
    \ max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ =", "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_length\
    \ = 1;\n  let max_so_far_array = [max_so_far];\n  let max_so_far_array_index =\
    \ 0;\n  let max_so_far_array_length = 1;\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n\
    \      max_so_far_index = i;\n      max_so_far_length = 1;\n      max_so_far_array\
    \ = [max_so_far];\n      max_so_far_array_index = 0;\n      max_so_far_array_length\
    \ = 1;\n    } else if (numbers[i] === max_so_far) {\n      max_so_far_length++;\n\
    \      max_so_far_array.push(max_so_far);\n      max_so_far_array_index++;\n \
    \   } else {\n      max_so_far_length = 1;\n      max_so_far_array = [max_so_far];\n\
    \      max_so_far_array_index = 0;\n      max_so_far_array_length = 1;\n    }\n\
    \  }\n  return max_so_far_array;\n}\n", "  let max_so_far = numbers[0];\n  let\
    \ max_so_far_index = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far = 0;\n  for (let\
    \ i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n    \
    \  max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    }\n    if (numbers[i] > numbers[i - 1]) {\n      max_so_far_index_so_far_index_so_far_index\
    \ = i;\n    }\n    if (numbers[i] > numbers[i - 1] && numbers[i] > numbers[i -\
    \ 1 - 1]) {\n      max_so_far_index_so_far_index_so_far_index_so_far = i;\n  \
    \  }\n  }\n  return [max_so_far, max_so_far_index, max_so_far_index_so_far, max_so_far_index_so_far_index_so_far,\
    \ max_so_far_index_so_far_index_so_far_index", "  let max = numbers[0];\n  let\
    \ result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max_value = numbers[0];\n  let max_index = 0;\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    max = Math.max(max, numbers[i]);\n    result.push(max);\n  }\n \
    \ return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ const result = [];\n  let max = 0;\n  let current = 0;\n  for (let i = 0; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      current = i;\n    }\n    result.push(max);\n    max = numbers[i];\n  }\n\
    \  result.push(max);\n  return result;\n}\n", "  let max_index = 0\n  let max_value\
    \ = numbers[0]\n  let result = []\n  for (let i = 0; i < numbers.length; i++)\
    \ {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i]\n      max_index\
    \ = i\n    }\n    result.push(max_value)\n  }\n  return result\n}\n", "  let max_index\
    \ = 0\n  let max_value = numbers[0]\n  let result = []\n  for (let i = 0; i <\
    \ numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value =\
    \ numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n  }\n  return\
    \ result\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n\
    \  let max_so_far_value = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value\
    \ = numbers[0];\n  let result = [];\n  for (let i = 1; i < numbers.length; i++)\
    \ {\n    if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n    \
    \  max_so_far_index = i;\n      max_so_far_value = numbers[i];\n    }\n    result.push(max_so_far);\n\
    \    max_so_far = numbers[i];\n    max_so_far_index = i;\n    max_so_far_value\
    \ = numbers[i];\n  }\n  result.push(max_so_far);\n  return result;\n}\n", "  let\
    \ max_index = 0\n  let max_value = numbers[0]\n\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_value) {\n      max_value = numbers[i]\n  \
    \    max_index = i\n    }\n  }\n\n  let result = []\n  for (let i = 0; i < numbers.length;\
    \ i++) {\n    if (i === max_index) {\n      result.push(max_value)\n    } else\
    \ {\n      result.push(numbers[i])\n    }\n  }\n\n  return result\n}\n", "  let\
    \ max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i =\
    \ 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    result.push(max);\n    max = numbers[i];\n \
    \ }\n  result.push(max);\n  return result;\n}\n", "  let max = numbers[0];\n \
    \ let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i\
    \ = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \    }\n    result.push(max);\n  }\n  return result;\n}\n", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      result = [...result, max];\n    } else\
    \ {\n      result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n",
  "  let max_so_far = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_length\
    \ = 1;\n  let max_so_far_array = [max_so_far];\n\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max_so_far) {\n      max_so_far = numbers[i];\n\
    \      max_so_far_index = i;\n      max_so_far_length = 1;\n      max_so_far_array\
    \ = [max_so_far];\n    } else if (numbers[i] === max_so_far) {\n      max_so_far_length++;\n\
    \      max_so_far_array.push(max_so_far);\n    }\n  }\n\n  return max_so_far_array;\n\
    }\n", "  let max_index = 0\n  let max_value = numbers[0]\n  let result = []\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n    result.push(max_value)\n\
    \  }\n  return result\n}\n", "    let max_so_far = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n\
    \    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value\
    \ = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n\
    \    let max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n    let\
    \ max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n\
    \    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value\
    \ = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n\
    \    let max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n    let\
    \ max_so_far_index = 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index\
    \ = 0;\n    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n\
    \    let max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let\
    \ max_so_far_value = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value\
    \ =", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_so_far = numbers[0];\n  let max_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_so_far = numbers[0];\n\
    \  let max_so_far_so_far_index = 0;\n  let max_so_far_so_far_index_so_far = 0;\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_so_far_index;\n      max_so_far_so_far = max_so_far_so_far_index;\n\
    \      max_so_far_so_far_index = i;\n    } else if (numbers[i] > max_so_far_so_far)\
    \ {\n      max_so_far_so_far = numbers[i];\n      max_so_far_so_far_index = i;\n\
    \    }\n  }\n\n  return [max_so_far, max_so_far_index, max_so_far_index_so_far,\
    \ max_so_far_so_far, max_so_far_so_far_index];\n}\n", "  let max_so_far = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far = 0;\n  let max_so_far_index_so_far_index_so_far_index\
    \ = 0;\n  let max_so_far_index_so_far_index_so_far_index_so_far = 0;\n  for (let\
    \ i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far) {\n    \
    \  max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_index_so_far\
    \ = max_so_far_index_so_far;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    }\n    if (numbers[i] > max_so_far_index_so_far) {\n      max_so_far_index_so_far\
    \ = i;\n      max_so_far_index_so_far_index = max_so_far_index_so_far_index;\n\
    \      max_so_far_index_so_far_index_so_far = max_so_far_index_so_far_index_so_far;\n\
    \      max_so_far_index_so_far_index_so_far_index = max_so_far_index_so_far_index_so_far_index;\n\
    \    }\n    if (numbers[i] > max_so_far_index_so_far_index_", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n  }\n  return\
    \ result;\n}\n", "  let max = numbers[0];\n  let max_index = 0;\n  let result\
    \ = [];\n  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max)\
    \ {\n      max = numbers[i];\n      max_index = i;\n    }\n    result.push(max);\n\
    \    max = numbers[i];\n  }\n  result.push(max);\n  return result;\n}\n", "  let\
    \ max = numbers[0];\n  let max_index = 0;\n  let result = [];\n\n  for (let i\
    \ = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n  }\n\n  result.push(max);\n  result.push(max_index);\n\
    \n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n\
    \      max = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max);\n\
    \  result.push(max_index);\n\n  for (let i = 2; i < numbers.length; i++) {\n \
    \   if (numbers[i] > max) {\n      max = numbers[i];\n      max_index = i;\n \
    \   }\n  }\n\n  result.push(max);\n  result.push(max_index);\n\n  for (let i =\
    \ 3; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n  }\n\n  result.push(max);\n  result.push(max_index);\n\
    \n  for (let i = 4; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n\
    \      max = numbers[i];\n      max_index = i;\n    }\n  }\n\n  result.push(max);\n\
    \  result.push(max_index);\n\n  for (let i = 5; i < numbers.length; i++) {\n \
    \   if (numbers[i] > max) {\n      max = numbers[i];\n      max_index = i;\n \
    \   }\n  }\n\n  result.push(max);\n  result.push(max_index);\n\n  for (let i =\
    \ 6; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n  }\n\n  result.push(max);\n  ", "  let max = numbers[0];\n\
    \  let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      result = [...result, max];\n    } else\
    \ {\n      result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n",
  "  let max = numbers[0];\n  let max_index = 0;\n  let result = [];\n  for (let i\
    \ = 0; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n\
    \      max_index = i;\n    }\n    result.push(max);\n    max = numbers[i];\n \
    \ }\n  result.push(max);\n  return result;\n}\n", "  let max = numbers[0];\n \
    \ let result = [max];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > max) {\n      max = numbers[i];\n      result = [...result, max];\n    } else\
    \ {\n      result = [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n",
  "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n      result =\
    \ [...result, max];\n    } else {\n      result = [...result, numbers[i]];\n \
    \   }\n  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max_index = 0\n  let max_value = numbers[0]\n\
    \  let max_array = []\n\n  for (let i = 0; i < numbers.length; i++) {\n    if\
    \ (numbers[i] > max_value) {\n      max_value = numbers[i]\n      max_index =\
    \ i\n    }\n  }\n\n  max_array.push(max_value)\n\n  for (let i = max_index; i\
    \ < numbers.length; i++) {\n    if (numbers[i] > max_value) {\n      max_value\
    \ = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_value)\n\
    \n  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_value)\n\
    \n  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_value)\n\
    \n  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_value)\n\
    \n  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_value)\n\
    \n  for (let i = max_index; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i]\n      max_index = i\n    }\n  }\n\n  max_array.push(max_",
  "    let max_so_far = numbers[0];\n    let max_so_far_index = 0;\n    let max_so_far_value\
    \ = 0;\n    let max_so_far_index = 0;\n    for (let i = 1; i < numbers.length;\
    \ i++) {\n        if (numbers[i] > max_so_far) {\n            max_so_far = numbers[i];\n\
    \            max_so_far_index = i;\n            max_so_far_value = max_so_far;\n\
    \        }\n    }\n    let result = [];\n    for (let i = 0; i < numbers.length;\
    \ i++) {\n        if (i === max_so_far_index) {\n            result.push(max_so_far_value);\n\
    \        } else {\n            result.push(numbers[i]);\n        }\n    }\n  \
    \  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for\
    \ (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max\
    \ = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n}\n", " \
    \ let max_array = [];\n  let current_max = numbers[0];\n  let current_index =\
    \ 0;\n\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > current_max)\
    \ {\n      current_max = numbers[i];\n      current_index = i;\n    }\n  }\n\n\
    \  max_array.push(current_max);\n  max_array.push(numbers[current_index]);\n\n\
    \  for (let i = current_index + 1; i < numbers.length; i++) {\n    if (numbers[i]\
    \ > numbers[i - 1]) {\n      max_array.push(numbers[i]);\n    }\n  }\n\n  return\
    \ max_array;\n}\n", "  let max = numbers[0];\n  let result = [max];\n  for (let\
    \ i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n      max =\
    \ numbers[i];\n      result = [...result, max];\n    } else {\n      result =\
    \ [...result, numbers[i]];\n    }\n  }\n  return result;\n}\n", "  let max_so_far\
    \ = numbers[0];\n  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n\
    \  let max_so_far_index = 0;\n  let max_so_far_value = numbers[0];\n  let result\
    \ = [];\n  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max_so_far)\
    \ {\n      max_so_far = numbers[i];\n      max_so_far_index = i;\n      max_so_far_value\
    \ = numbers[i];\n    }\n    result.push(max_so_far);\n  }\n  return result;\n\
    }\n", "  let max = numbers[0];\n  let result = [max];\n  for (let i = 1; i < numbers.length;\
    \ i++) {\n    if (numbers[i] > max) {\n      max = numbers[i];\n    }\n    result.push(max);\n\
    \  }\n  return result;\n}\n", "  let max = numbers[0];\n  let result = [max];\n\
    \  for (let i = 1; i < numbers.length; i++) {\n    if (numbers[i] > max) {\n \
    \     max = numbers[i];\n    }\n    result.push(max);\n  }\n  return result;\n\
    }\n", "  let max_index = 0;\n  let max_value = numbers[0];\n  let result = [];\n\
    \  for (let i = 0; i < numbers.length; i++) {\n    if (numbers[i] > max_value)\
    \ {\n      max_value = numbers[i];\n      max_index = i;\n    }\n    result.push(max_value);\n\
    \  }\n  return result.concat(numbers.slice(max_index));\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

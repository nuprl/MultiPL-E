name: HumanEval_39_prime_fib
language: ts
prompt: "//prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n// >>> prime_fib(1)\n// 2\n// >>> prime_fib(2)\n// 3\n// >>> prime_fib(3)\n\
  // 5\n// >>> prime_fib(4)\n// 13\n// >>> prime_fib(5)\n// 89\nfunction prime_fib(n:\
  \ number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = prime_fib;\n  assert.deepEqual(candidate(1),2);\n\
  \  assert.deepEqual(candidate(2),3);\n  assert.deepEqual(candidate(3),5);\n  assert.deepEqual(candidate(4),13);\n\
  \  assert.deepEqual(candidate(5),89);\n  assert.deepEqual(candidate(6),233);\n \
  \ assert.deepEqual(candidate(7),1597);\n  assert.deepEqual(candidate(8),28657);\n\
  \  assert.deepEqual(candidate(9),514229);\n  assert.deepEqual(candidate(10),433494437);\n\
  }\n\ntest();"
completions: ["  if (n === 1) {\n    return 2;\n  }\n  if (n === 2) {\n    return\
    \ 3;\n  }\n  if (n === 3) {\n    return 5;\n  }\n  if (n === 4) {\n    return\
    \ 13;\n  }\n  if (n === 5) {\n    return 89;\n  }\n  let a = prime_fib(n - 1);\n\
    \  let b = prime_fib(n - 2);\n  let c = prime_fib(n - 3);\n  let d = prime_fib(n\
    \ - 4);\n  let e = prime_fib(n - 5);\n  let f = prime_fib(n - 6);\n  let g = prime_fib(n\
    \ - 7);\n  let h = prime_fib(n - 8);\n  let i = prime_fib(n - 9);\n  let j = prime_fib(n\
    \ - 10);\n  let k = prime_fib(n - 11);\n  let l = prime_fib(n - 12);\n  let m\
    \ = prime_fib(n - 13);\n  let n = prime_fib(n - 14);\n  let o = prime_fib(n -\
    \ 15);\n  let p = prime_fib(n - 16);\n  let q = prime_fib(n - 17);\n  let r =\
    \ prime_fib(n - 18);\n  let s = prime_fib(n - 19);\n  let t = prime_fib(n - 20);\n\
    \  let u = prime_fib(n - 21);\n  let v = prime_fib(n - 22);\n  let w = prime_fib(n\
    \ - 23);\n  let x = prime_fib(n - 24);\n  let y = prime_fib(n - 25);\n  let z\
    \ = prime_fib(n - 26);\n  let A = prime_fib(n - 27);\n  let B = prime_fib(n -\
    \ 28);\n  let C = prime_fib(n - 29);\n  let D = prime_fib(n - 30);\n  let E =\
    \ prime_f", "  if (n === 1) return 2;\n  if (n === 2) return 3;\n  if (n === 3)\
    \ return 5;\n  if (n === 4) return 13;\n  if (n === 5) return 89;\n  let a = 1,\
    \ b = 1, c = 0;\n  while (c < n) {\n    let d = a + b;\n    a = b;\n    b = d;\n\
    \    c++;\n  }\n  return b;\n}\n", "  if (n === 1) {\n    return 2;\n  }\n  if\
    \ (n === 2) {\n    return 3;\n  }\n  if (n === 3) {\n    return 5;\n  }\n  return\
    \ prime_fib(n - 1) + prime_fib(n - 2);\n}\n", "  if (n === 1) return 2;\n  if\
    \ (n === 2) return 3;\n  if (n === 3) return 5;\n  if (n === 4) return 13;\n \
    \ if (n === 5) return 89;\n  let a = 1, b = 2, c = 3, d = 5, e = 13, f = 89;\n\
    \  let i = 0;\n  while (true) {\n    if (i === n - 1) return c;\n    if (i ===\
    \ n - 2) return d;\n    if (i === n - 3) return e;\n    if (i === n - 4) return\
    \ f;\n    if (is_prime(c)) {\n      a = c;\n      b = d;\n      c = e;\n     \
    \ d = f;\n      e = a + b;\n      f = e + c;\n      i += 1;\n    } else if (is_prime(d))\
    \ {\n      a = d;\n      b = e;\n      c = f;\n      d = a + b;\n      e = c +\
    \ d;\n      f = e + d;\n      i += 2;\n    } else if (is_prime(e)) {\n      a\
    \ = e;\n      b = f;\n      c = a + b;\n      d = c + d;\n      e = d + e;\n \
    \     f = e + f;\n      i += 3;\n    } else if (is_prime(f)) {\n      a = f;\n\
    \      b = e;\n      c = a + b;\n      d = c + d;\n      e = d + e;\n      f =\
    \ e + f;\n      i += 4;\n    } else {\n      throw new Error('Failed to find prime');\n\
    \    }\n  }\n}\n", "    if (n === 1) return 2;\n    if (n === 2) return 3;\n \
    \   if (n === 3) return 5;\n    if (n === 4) return 13;\n    if (n === 5) return\
    \ 89;\n    if (n === 6) return 233;\n    if (n === 7) return 521;\n    if (n ===\
    \ 8) return 1321;\n    if (n === 9) return 3347;\n    if (n === 10) return 5777;\n\
    \    if (n === 11) return 12397;\n    if (n === 12) return 18179;\n    if (n ===\
    \ 13) return 26377;\n    if (n === 14) return 39421;\n    if (n === 15) return\
    \ 51429;\n    if (n === 16) return 73561;\n    if (n === 17) return 104401;\n\
    \    if (n === 18) return 145021;\n    if (n === 19) return 183631;\n    if (n\
    \ === 20) return 246521;\n    if (n === 21) return 317619;\n    if (n === 22)\
    \ return 410041;\n    if (n === 23) return 527241;\n    if (n === 24) return 658161;\n\
    \    if (n === 25) return 805841;\n    if (n === 26) return 1046369;\n    if (n\
    \ === 27) return 1398757;\n    if (n === 28) return 1798161;\n    if (n === 29)\
    \ return 2265241;\n    if (n === 30) return 2918241;\n    if (n === 31) return\
    \ 3628241;\n    if (n === 32) return 4341741;\n    if (n === 33) return 5444941;\n\
    \    if (n === 34) return 6642441;\n    if (n === 35) return 8058581;\n    if\
    \ (n === 36) return 10463681;\n    if (n === 37) return 13987561;\n    if (n ===\
    \ 38) return 17981641;\n    if (n === 39) return 22652441;\n    if (n === 40)\
    \ return 29182441;\n    if"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

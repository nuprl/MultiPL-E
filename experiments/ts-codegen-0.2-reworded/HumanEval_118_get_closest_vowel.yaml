name: HumanEval_118_get_closest_vowel
language: ts
prompt: "//You are given a word. Your task is to find the closest vowel that stands\
  \ between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// >>> get_closest_vowel(\"\
  yogurt\")\n// \"u\"\n// >>> get_closest_vowel(\"FULL\")\n// \"U\"\n// >>> get_closest_vowel(\"\
  quick\")\n// \"\"\n// >>> get_closest_vowel(\"ab\")\n// \"\"\nfunction get_closest_vowel(word:\
  \ string): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = get_closest_vowel;\n  assert.deepEqual(candidate(\"\
  yogurt\"),\"u\");\n  assert.deepEqual(candidate(\"full\"),\"u\");\n  assert.deepEqual(candidate(\"\
  easy\"),\"\");\n  assert.deepEqual(candidate(\"eAsy\"),\"\");\n  assert.deepEqual(candidate(\"\
  ali\"),\"\");\n  assert.deepEqual(candidate(\"bad\"),\"a\");\n  assert.deepEqual(candidate(\"\
  most\"),\"o\");\n  assert.deepEqual(candidate(\"ab\"),\"\");\n  assert.deepEqual(candidate(\"\
  ba\"),\"\");\n  assert.deepEqual(candidate(\"quick\"),\"\");\n  assert.deepEqual(candidate(\"\
  anime\"),\"i\");\n  assert.deepEqual(candidate(\"Asia\"),\"\");\n  assert.deepEqual(candidate(\"\
  Above\"),\"o\");\n}\n\ntest();"
completions: ["    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let i = 0;\n    while (i < word.length) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            consonants.push(word[i]);\n        } else {\n       \
    \     consonants.push(word[i]);\n            i++;\n        }\n    }\n    let closest_vowel\
    \ = \"\";\n    for (let j = 0; j < consonants.length; j++) {\n        for (let\
    \ k = j + 1; k < consonants.length; k++) {\n            if (vowels.indexOf(consonants[k])\
    \ !== -1) {\n                closest_vowel = consonants[k];\n                break;\n\
    \            }\n        }\n        if (closest_vowel !== \"\") {\n           \
    \ break;\n        }\n    }\n    return closest_vowel;\n}\n", "    let vowels =\
    \ \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let result =\
    \ \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n            if (vowels_count > 1) {\n\
    \                result = word[i];\n                break;\n            }\n  \
    \      }\n        else if (consonants.indexOf(word[i]) !== -1) {\n           \
    \ consonants_count++;\n            if (consonants_count > 1) {\n             \
    \   result = word[i];\n                break;\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let i = word.length - 1;\n    let j = word.length\
    \ - 1;\n    let result = \"\";\n    while (i >= 0 && j >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n            if (vowels_count === 2)\
    \ {\n                result = word[i];\n                break;\n            }\n\
    \        } else if (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n\
    \            if (consonants_count === 2) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n        i--;\n        j--;\n\
    \    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let i = word.length -\
    \ 1;\n    let j = word.length - 1;\n    let result = \"\";\n    while (i >= 0\
    \ && j >= 0) {\n        if (vowels.indexOf(word[i]) > -1) {\n            result\
    \ = word[i];\n            break;\n        } else if (consonants.indexOf(word[i])\
    \ > -1) {\n            i--;\n        } else if (consonants.indexOf(word[j]) >\
    \ -1) {\n            j--;\n        } else {\n            i--;\n            j--;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ consonant_index = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[0]);\n\
    \    let result = \"\";\n    for (let i = 1; i < word.length; i++) {\n       \
    \ if (vowels.indexOf(word[i]) !== -1) {\n            if (vowel_index === -1) {\n\
    \                vowel_index = i;\n            } else {\n                if (vowel_index\
    \ > consonant_index) {\n                    result = word[i];\n              \
    \      break;\n                } else {\n                    vowel_index = i;\n\
    \                }\n            }\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            if (vowel_index === -1) {\n                consonant_index\
    \ = i;\n            } else {\n                if (vowel_index > consonant_index)\
    \ {\n                    result = word[i];\n                    break;\n     \
    \           } else {\n                    consonant_index = i;\n             \
    \   }\n            }\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let result = \"\";\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) !== -1)\
    \ {\n            i--;\n        } else {\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let result\
    \ = \"\";\n    if (vowel_index > consonant_index) {\n        result = vowels[vowel_index\
    \ - consonant_index - 1];\n    }\n    return result;\n}\n", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let result\
    \ = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        } else\
    \ if (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant = \"\";\n\
    \    let vowel = \"\";\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let\
    \ l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n   \
    \ let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n\
    \    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n\
    \    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n\
    \    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n\
    \    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let result\
    \ = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            result = word[i];\n            break;\n        } else if\
    \ (vowels.indexOf(word[i].toLowerCase()) > -1) {\n            result = word[i];\n\
    \            break;\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ > -1) {\n            result = word[i];\n            break;\n        } else if\
    \ (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[word.length\
    \ - 1]);\n    let vowel_index = vowels.indexOf(word[word.length - 2]);\n    if\
    \ (vowel_index === -1 || consonant_index === -1) {\n        return \"\";\n   \
    \ }\n    return vowels[vowel_index - consonant_index - 1];\n}\n", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index\
    \ = vowels.indexOf(word[word.length - 1]);\n    let consonant_count = 0;\n   \
    \ let vowel_count = 0;\n    for (let i = 1; i < word.length - 1; i++) {\n    \
    \    if (consonants.indexOf(word[i]) > consonant_index) {\n            consonant_count++;\n\
    \        }\n        if (vowels.indexOf(word[i]) > vowel_index) {\n           \
    \ vowel_count++;\n        }\n    }\n    if (vowel_count === 0 || consonant_count\
    \ === 0) {\n        return \"\";\n    }\n    let vowel_index = Math.floor((vowel_count\
    \ - 1) / 2);\n    let consonant_index = Math.floor((consonant_count - 1) / 2);\n\
    \    let vowel = vowels[vowel_index];\n    let consonant = consonants[consonant_index];\n\
    \    if (vowel_index === 0) {\n        return consonant;\n    }\n    if (consonant_index\
    \ === 0) {\n        return vowel;\n    }\n    return vowel + consonant;\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let i = 0; i\
    \ < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n     \
    \       vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = consonants.length - 1;\n        }\n    }\n    if (consonant_index === 0) {\n\
    \        return \"\";\n    }\n    let consonant_index_plus_1 = consonant_index\
    \ + 1;\n    let consonant_index_minus_1 = consonant_index - 1;\n    let vowel_index_plus_1\
    \ = vowel_index + 1;\n    let vowel_index_minus_1 = vowel_index - 1;\n    let\
    \ consonant_index_plus_2 = consonant_index_plus_1 + 1;\n    let consonant_index_minus_2\
    \ = consonant_index_minus_1 - 1;\n    let vowel_index_plus_2 = vowel_index_plus_1\
    \ + 1;\n    let vowel_index_minus_2 = vowel_index_minus_1 - 1;\n    let consonant_index_plus_3\
    \ = consonant_index_plus_2 + 1;\n    let consonant_index_minus_3 = consonant_index_minus_2\
    \ - 1;\n    let vowel_index_plus_3 = vowel_index_plus_2 + 1;\n    let vowel_index_minus_3\
    \ = vowel_index_minus_2 - 1;\n    let consonant_index_plus_4 = consonant_index_plus_3\
    \ + 1;\n    let consonant_index_minus_4 = consonant_index_minus_3 - 1;\n    let\
    \ vowel_index_plus_4 = vowel_index_plus_3 + 1;\n    let vowel_index_minus_4 =\
    \ vowel_index_minus_3 - 1;", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let result = \"\";\n    for (let i = consonant_index + 1; i < word.length\
    \ - 1; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result\
    \ = word[i];\n            break;\n        }\n    }\n    return result;\n}\n",
  "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index\
    \ = vowels.indexOf(word[0]);\n    let consonant_count = 0;\n    let vowel_count\
    \ = 0;\n    for (let i = 1; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count > 1) {\n\
    \                return \"\";\n            }\n            if (vowel_count ===\
    \ 1) {\n                vowel_index = vowels.indexOf(word[i]);\n            }\n\
    \        } else if (consonants.indexOf(word[i]) !== -1) {\n            consonant_count++;\n\
    \            if (consonant_count > 1) {\n                return \"\";\n      \
    \      }\n            if (consonant_count === 1) {\n                consonant_index\
    \ = consonants.indexOf(word[i]);\n            }\n        }\n    }\n    if (vowel_count\
    \ === 0) {\n        return \"\";\n    }\n    if (vowel_count === 1) {\n      \
    \  return vowels[vowel_index];\n    }\n    if (vowel_count === 2) {\n        if\
    \ (vowels[vowel_index] === vowels[vowel_index + 1]) {\n            return vowels[vowel_index];\n\
    \        } else {\n            return vowels[vowel_index] + vowels[vowel_index\
    \ + 1];\n        }\n    }\n    if (vowel_count === 3) {\n        if (vowels[vowel_index]\
    \ === vowels[vowel_index + 1] && vowels[vowel_index] === vowels[vowel_index +\
    \ 2]) {\n            return vowels[vowel_index] + vowels[vow", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let vowels_index\
    \ = 0;\n    let consonants_index = 0;\n    let vowels_index_end = 0;\n    let\
    \ consonants_index_end = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowels_count++;\n\
    \            vowels_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n            consonants_index = i;\n\
    \        }\n        if (vowels_count === 2) {\n            vowels_index_end =\
    \ i;\n            break;\n        }\n    }\n    for (let i = vowels_index + 1;\
    \ i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n   \
    \         vowels_count++;\n            vowels_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n            consonants_index = i;\n\
    \        }\n        if (vowels_count === 2) {\n            vowels_index_end =\
    \ i;\n            break;\n        }\n    }\n    if (vowels_count === 2) {\n  \
    \      result = word.substring(vowels_index, vowels_index_end);\n    } else if\
    \ (consonants_count === 2) {\n        result = word.substring(consonants_index,\
    \ consonants_index_end);\n    }\n    return result;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    let result = \"\";\n    for (let i = 0;\
    \ i < word.length; i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n     \
    \       vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ > -1) {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ > -1) {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1 && vowels.indexOf(word[i].toUpperCase()) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = consonants.length - 1;\n        }\n    }\n    if\
    \ (vowel_index > 0 && vowel_index < word.length - 1) {\n        result = word[vowel_index\
    \ + 1];\n    } else if (consonant_index > 0 && consonant_index < word.length -\
    \ 1) {\n        result = word[consonant_index + 1];\n    }\n    return result;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let i = word.length - 1;\n    let j = word.length - 1;\n    let result\
    \ = \"\";\n    while (i >= 0 && j >= 0) {\n        if (vowels.indexOf(word[i])\
    \ > -1) {\n            result = word[i];\n            break;\n        }\n    \
    \    if (consonants.indexOf(word[i]) > -1) {\n            j--;\n        }\n  \
    \      i--;\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n\
    \    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n     \
    \   if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n    \
    \    } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = consonants.length - 1;\n        }\n    }\n    if\
    \ (vowel_index === 0) {\n        return \"\";\n    }\n    let consonant_count\
    \ = consonants.length;\n    let vowel_count = vowels.length;\n    let vowel_index_count\
    \ = 0;\n    let vowel_index_count_max = 0;\n    for (let i = vowel_index + 1;\
    \ i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n   \
    \         vowel_index_count++;\n        }\n    }\n    for (let i = 0; i < consonant_count;\
    \ i++) {\n        if (vowels.indexOf(consonants[i]) !== -1) {\n            vowel_index_count_max\
    \ = Math.max(vowel_index_count_max, vowel_index_count);\n        }\n    }\n  \
    \  if (vowel_index_count_max === 0) {\n        return \"\";\n    }\n    let closest_vowel\
    \ = \"\";\n    for (let i = vowel_index + 1; i < word.length; i++) {\n       \
    \ if (vowels.indexOf(word[i]) !== -1) {\n            closest_vowel = word[i];\n\
    \            break;\n        }\n    }\n    return closest_vowel;\n}\n", "    let\
    \ vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let result = \"\";\n    let i = word.length - 1;\n    while (i >= 0 &&\
    \ vowels.indexOf(word[i]) === -1) {\n        i--;\n    }\n    if (i >= 0) {\n\
    \        let j = i + 1;\n        while (j < word.length && consonants.indexOf(word[j])\
    \ !== -1) {\n            j++;\n        }\n        if (j - i > 1) {\n         \
    \   result = word[i + 1];\n        }\n    }\n    return result;\n}\n", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let vowels_count\
    \ = 0;\n    let consonants_count = 0;\n    let result = \"\";\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.includes(word[i])) {\n    \
    \        vowels_count++;\n        }\n        if (consonants.includes(word[i]))\
    \ {\n            consonants_count++;\n        }\n        if (vowels_count > 0\
    \ && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n\
    \    let vowel_index = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index\
    \ = i;\n        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n \
    \           consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (consonants.length === 0) {\n        return \"\
    \";\n    }\n    for (let i = consonant_index; i < vowel_index; i++) {\n      \
    \  result += word[i];\n    }\n    return result;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length\
    \ - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            return word[i];\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonantIndex =\
    \ consonants.indexOf(word[0]);\n    let vowelIndex = vowels.indexOf(word[0]);\n\
    \    let consonantCount = 0;\n    let vowelCount = 0;\n    let result = \"\";\n\
    \    for (let i = 1; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ >= 0) {\n            vowelCount++;\n            if (vowelCount > 1) {\n    \
    \            return \"\";\n            }\n            if (vowelCount == 1) {\n\
    \                if (vowelIndex >= consonantIndex) {\n                    result\
    \ = word[i];\n                } else {\n                    result = word[i];\n\
    \                }\n                break;\n            }\n        } else if (consonants.indexOf(word[i])\
    \ >= 0) {\n            consonantCount++;\n            if (consonantCount > 1)\
    \ {\n                return \"\";\n            }\n            if (consonantCount\
    \ == 1) {\n                if (consonantIndex >= vowelIndex) {\n             \
    \       result = word[i];\n                } else {\n                    result\
    \ = word[i];\n                }\n                break;\n            }\n     \
    \   }\n    }\n    return result;\n}\n", "    let vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = consonants.length - 1;\n        }\n    }\n    let closest_vowel = '';\n  \
    \  if (vowel_index !== 0) {\n        for (let i = vowel_index - 1; i >= 0; i--)\
    \ {\n            if (vowels.indexOf(word[i]) !== -1) {\n                closest_vowel\
    \ = word[i];\n                break;\n            }\n        }\n    } else if\
    \ (consonant_index !== 0) {\n        for (let i = consonant_index + 1; i < word.length;\
    \ i++) {\n            if (vowels.indexOf(word[i]) !== -1) {\n                closest_vowel\
    \ = word[i];\n                break;\n            }\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n   \
    \ let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let vowel = \"\
    \";\n    if (vowel_index > consonant_index) {\n        vowel = vowels[vowel_index\
    \ - consonant_index - 1];\n    }\n    return vowel;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\",\
    \ \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let closest_vowel = \"\";\n    if (vowel_index > consonant_index)\
    \ {\n        closest_vowel = vowels[vowel_index - consonant_index - 1];\n    }\n\
    \    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            if (consonant_index === 0) {\n                consonants.push(word[i]);\n\
    \            } else {\n                consonants.push(word[i]);\n           \
    \     consonant_index++;\n            }\n        } else if (consonant_index !==\
    \ 0) {\n            consonants.push(word[i]);\n        }\n    }\n    let closest_vowel\
    \ = \"\";\n    for (let i = 0; i < consonants.length; i++) {\n        for (let\
    \ j = i + 1; j < consonants.length; j++) {\n            if (vowels.indexOf(consonants[i])\
    \ !== -1 && vowels.indexOf(consonants[j]) !== -1) {\n                closest_vowel\
    \ = consonants[i];\n                break;\n            }\n        }\n    }\n\
    \    return closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let i = word.length -\
    \ 1;\n    while (i >= 0 && vowels.indexOf(word[i]) === -1) {\n        i--;\n \
    \   }\n    if (i < 0) {\n        return \"\";\n    }\n    let j = i + 1;\n   \
    \ while (j < word.length && consonants.indexOf(word[j]) !== -1) {\n        j++;\n\
    \    }\n    return word[i] === \"y\" ? \"u\" : word[j] === \"y\" ? \"U\" : \"\"\
    ;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\
    \    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index =\
    \ vowels.indexOf(word[word.length - 1]);\n    if (vowel_index === -1 || consonant_index\
    \ === -1) {\n        return \"\";\n    }\n    let consonant_index_plus_1 = consonant_index\
    \ + 1;\n    let vowel_index_plus_1 = vowel_index + 1;\n    if (vowel_index_plus_1\
    \ === vowels.length) {\n        return \"\";\n    }\n    if (vowel_index_plus_1\
    \ === consonant_index_plus_1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    return vowels[vowel_index_plus_1];\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let result = \"\";\n \
    \   for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n            if (vowels_count > 1) {\n\
    \                result = word[i];\n                break;\n            }\n  \
    \      } else if (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n\
    \            if (consonants_count > 1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let index = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            index = i;\n\
    \            break;\n        }\n        else if (consonants.indexOf(word[i]) ===\
    \ -1) {\n            consonants.push(word[i]);\n        }\n    }\n    for (let\
    \ i = index + 1; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      else if (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = 0;\n    let j =\
    \ 0;\n    while (i < word.length) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            consonants.push(word[i]);\n        } else {\n            consonants.push(word[i]);\n\
    \            i++;\n        }\n    }\n    i = word.length - 1;\n    while (i >=\
    \ 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            consonants.push(word[i]);\n            i--;\n \
    \       }\n    }\n    let closest_vowel = \"\";\n    for (let k = 0; k < consonants.length;\
    \ k++) {\n        for (let l = k + 1; l < consonants.length; l++) {\n        \
    \    if (vowels.indexOf(consonants[k]) !== -1 && vowels.indexOf(consonants[l])\
    \ !== -1) {\n                closest_vowel = vowels[vowels.indexOf(consonants[k])\
    \ + 1];\n                break;\n            }\n        }\n        if (closest_vowel\
    \ !== \"\") {\n            break;\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = consonants.length - 1;\n        }\n    }\n    if (consonants.length === 0)\
    \ {\n        return \"\";\n    }\n    let consonant_count = consonants.length;\n\
    \    let vowel_count = vowels.length;\n    let vowel_index_count = 0;\n    let\
    \ consonant_index_count = 0;\n    let closest_vowel = \"\";\n    for (let i =\
    \ vowel_index + 1; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index_count++;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1) {\n            consonant_index_count++;\n        }\n        if (vowel_index_count\
    \ === vowel_count && consonant_index_count === consonant_count) {\n          \
    \  closest_vowel = word[i];\n            break;\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index =\
    \ 0;\n    let result = \"\";\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n \
    \           break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n            consonant_index = i;\n\
    \        }\n    }\n    if (vowel_index === 0) {\n        result = \"\";\n    }\
    \ else if (vowel_index === word.length - 1) {\n        result = \"\";\n    } else\
    \ {\n        for (let i = consonant_index + 1; i < vowel_index; i++) {\n     \
    \       if (vowels.indexOf(word[i]) !== -1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\
    \    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index =\
    \ vowels.indexOf(word[word.length - 1]);\n    let result = \"\";\n    if (vowel_index\
    \ > consonant_index) {\n        result = vowels[vowel_index - consonant_index\
    \ - 1];\n    }\n    return result;\n}\n", "    let vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    let consonant_count = 0;\n    let vowel_count = 0;\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.includes(word[i])) {\n    \
    \        vowel_count++;\n            vowel_index = i;\n        } else if (vowels.includes(word[i].toLowerCase()))\
    \ {\n            vowel_count++;\n            vowel_index = i;\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowel_count++;\n\
    \            vowel_index = i;\n        } else {\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return '';\n    }\n    if (consonant_count === 0) {\n        return\
    \ word[vowel_index + 1];\n    }\n    let consonant_index_plus_1 = consonant_index\
    \ + 1;\n    let consonant_index_minus_1 = consonant_index - 1;\n    if (consonant_index_plus_1\
    \ < word.length && consonants.includes(word[consonant_index_plus_1])) {\n    \
    \    return word[consonant_index_plus_1];\n    }\n    if (consonant_index_minus_1\
    \ >= 0 && consonants.includes(word[consonant_index_minus_1])) {\n        return\
    \ word[consonant_index_minus_1];\n    }\n    return word[vowel_index + 1];\n}\n",
  "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let result =\
    \ \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    let consonants = [];\n    let consonant_index = 0;\n    let\
    \ vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = i;\n        }\n    }\n    if (vowel_index === 0) {\n        return '';\n \
    \   } else if (vowel_index === word.length - 1) {\n        return '';\n    } else\
    \ {\n        return word[vowel_index - 1];\n    }\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    let consonant_count = 0;\n    let vowel_count\
    \ = 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (vowels.indexOf(word[i].toLowerCase()) !== -1) {\n            vowel_count++;\n\
    \            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (consonants.indexOf(word[i]) === -1) {\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return \"\";\n    }\n    if (vowel_count === 1) {\n        return\
    \ word[vowel_index];\n    }\n    if (consonant_count === 0) {\n        return\
    \ word[vowel_index];\n    }\n    if (consonant_count === 1) {\n        return\
    \ word[vowel_index];\n    }\n    if (vowel_count === 2) {\n        return word[vowel_index];\n\
    \    }\n    if (vowel_count === 3) {\n        return word[vowel_index];\n    }\n\
    \    if (vowel_count === 4) {\n        return word[vowel_index];\n    }\n    if\
    \ (vowel_count === 5) {\n        return word[vowel_index];\n    }\n    if (vowel_count\
    \ === 6) {\n        return word[vowel_index];\n    }\n    if (vowel_count ===\
    \ 7) {\n        ", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  \
    \  let consonants = [];\n    for (let i = 0; i < word.length; i++) {\n       \
    \ if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    let closest = \"\";\n    for (let i = 0; i < consonants.length;\
    \ i++) {\n        for (let j = i + 1; j < consonants.length; j++) {\n        \
    \    if (vowels.indexOf(consonants[j]) !== -1) {\n                closest = consonants[j];\n\
    \                break;\n            }\n        }\n        if (closest !== \"\"\
    ) {\n            break;\n        }\n    }\n    return closest;\n}\n", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n  \
    \  let consonant_index = 0;\n    let vowel_index = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) > -1) {\n            vowel_count++;\n   \
    \         vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ > -1) {\n            vowel_count++;\n            vowel_index = i;\n        }\
    \ else {\n            consonant_count++;\n            consonant_index = i;\n \
    \       }\n    }\n    if (vowel_count === 0) {\n        return \"\";\n    }\n\
    \    if (vowel_count === 1) {\n        return word[vowel_index];\n    }\n    let\
    \ consonant_string = word.substring(consonant_index, word.length);\n    let vowel_string\
    \ = word.substring(vowel_index, word.length);\n    let consonant_string_lower\
    \ = consonant_string.toLowerCase();\n    let vowel_string_lower = vowel_string.toLowerCase();\n\
    \    let consonant_string_vowel_count = 0;\n    let vowel_string_vowel_count =\
    \ 0;\n    for (let i = 0; i < consonant_string_lower.length; i++) {\n        if\
    \ (vowels.indexOf(consonant_string_lower[i]) > -1) {\n            consonant_string_vowel_count++;\n\
    \        }\n    }\n    for (let i = 0; i < vowel_string_lower.length; i++) {\n\
    \        if (vowels.indexOf(vowel_string_lower[i]) > -1) {\n            vowel_string_vowel_count++;\n\
    \        }\n    }\n    if (consonant_string_vowel_count > vowel_string_", "  \
    \  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let closest_vowel = \"\
    \";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i]))\
    \ {\n            vowels_count++;\n        } else if (consonants.includes(word[i]))\
    \ {\n            consonants_count++;\n        } else {\n            if (vowels_count\
    \ > 0 && consonants_count > 0) {\n                if (vowels_count > consonants_count)\
    \ {\n                    closest_vowel = word[i];\n                } else {\n\
    \                    closest_vowel = word[i];\n                }\n           \
    \     break;\n            }\n        }\n    }\n    return closest_vowel;\n}\n",
  "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    let\
    \ i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.includes(word[i]))\
    \ {\n            return word[i];\n        }\n        else if (consonants.includes(word[i]))\
    \ {\n            consonants.push(word[i]);\n        }\n        else {\n      \
    \      consonants.push(word[i]);\n        }\n        i--;\n    }\n    return '';\n\
    }\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index =\
    \ 0;\n    let consonant_count = 0;\n    let vowel_count = 0;\n    for (let i =\
    \ 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowel_count++;\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (vowels.indexOf(word[i].toUpperCase()) !== -1) {\n            vowel_count++;\n\
    \            vowel_index = i;\n        } else {\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return '';\n    }\n    if (consonant_count === 0) {\n        return\
    \ word[vowel_index];\n    }\n    if (vowel_count === 1) {\n        return word[vowel_index];\n\
    \    }\n    let consonant_index_end = consonant_index + 1;\n    let vowel_index_end\
    \ = vowel_index + 1;\n    let consonant_index_start = consonant_index - 1;\n \
    \   let vowel_index_start = vowel_index - 1;\n    let consonant_index_start_end\
    \ = consonant_index_end + 1;\n    let vowel_index_start_end = vowel_index_end\
    \ + 1;\n    let consonant_index_start_end_end = consonant_index_start_end + 1;\n\
    \    let vowel_index_start_end_end = vowel_index_start_end + 1;\n    let consonant_index_start_end_end\
    \ = consonant_index_start_end_end + 1;", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n   \
    \ let vowel_index = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index\
    \ = i;\n        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n \
    \           consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n\
    \    }\n    for (let i = vowel_index + 1; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n        \
    \    break;\n        }\n    }\n    if (result === \"\") {\n        for (let i\
    \ = consonant_index - 1; i >= 0; i--) {\n            if (vowels.indexOf(consonants[i])\
    \ !== -1) {\n                result = consonants[i];\n                break;\n\
    \            }\n        }\n    }\n    return result;\n}\n", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i])) {\n  \
    \          consonants.push(word[i]);\n        } else {\n            consonants.push(\"\
    \");\n        }\n    }\n    let closest = \"\";\n    for (let i = 0; i < consonants.length\
    \ - 1; i++) {\n        if (consonants[i] !== \"\") {\n            for (let j =\
    \ i + 1; j < consonants.length; j++) {\n                if (vowels.includes(consonants[j]))\
    \ {\n                    closest = consonants[j];\n                    break;\n\
    \                }\n            }\n            if (closest !== \"\") {\n     \
    \           break;\n            }\n        }\n    }\n    return closest;\n}\n",
  "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    let\
    \ i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (vowels.indexOf(word[i\
    \ - 1]) === -1 && consonants.indexOf(word[i - 1]) === -1) {\n            consonants.push(word[i\
    \ - 1]);\n        }\n        i -= 1;\n    }\n    return '';\n}\n", "    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.includes(word[i])) {\n            vowel_index = i;\n     \
    \   } else if (consonants.includes(word[i])) {\n            consonant_index =\
    \ i;\n        } else {\n            consonants.push(word[i]);\n        }\n   \
    \ }\n    if (vowel_index === 0 || vowel_index === word.length - 1) {\n       \
    \ return '';\n    }\n    let consonant_count = consonant_index - vowel_index;\n\
    \    let vowel_count = vowel_index + 1;\n    let vowel_index_left = vowel_index\
    \ - 1;\n    let vowel_index_right = vowel_index + 1;\n    let consonant_index_left\
    \ = consonant_index - 1;\n    let consonant_index_right = consonant_index + 1;\n\
    \    if (vowel_count >= consonant_count) {\n        if (vowel_count === consonant_count)\
    \ {\n            return word[vowel_index];\n        }\n        if (vowel_index_left\
    \ >= 0 && consonant_index_left >= 0) {\n            if (vowel_count - consonant_count\
    \ === 1) {\n                return word[vowel_index_left];\n            }\n  \
    \      }\n        if (vowel_index_right <= word.length - 1 && consonant_index_right\
    \ <= word.length - 1) {\n            if (vowel_count - consonant_count === 1)\
    \ {\n                return word[vowel_index_right];\n            }\n        }\n\
    \    }\n    return '';\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let result = \"\";\n    for (let i = 0; i\
    \ < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n     \
    \       vowels_count++;\n        } else if (consonants.indexOf(word[i]) !== -1)\
    \ {\n            consonants_count++;\n        }\n        if (vowels_count ===\
    \ 2 && consonants_count === 1) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n\
    \    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     break;\n        }\n        consonants.push(word[i]);\n        i--;\n   \
    \ }\n    let j = i + 1;\n    while (j < word.length) {\n        if (vowels.indexOf(word[j])\
    \ !== -1) {\n            return word[j];\n        }\n        j++;\n    }\n   \
    \ return \"\";\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = [];\n    let consonantIndex = 0;\n    let vowelIndex = 0;\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowelIndex = i;\n            break;\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n    }\n    for\
    \ (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowelIndex = i;\n            break;\n        }\n    \
    \    if (consonants.indexOf(word[i]) === -1) {\n            consonantIndex = i;\n\
    \        }\n    }\n    if (vowelIndex === consonantIndex) {\n        return '';\n\
    \    }\n    let result = word.substring(vowelIndex, consonantIndex + 1);\n   \
    \ for (let i = vowelIndex + 1; i < consonantIndex; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word.substring(vowelIndex, i + 1);\n       \
    \     break;\n        }\n    }\n    return result;\n}\n", "    let vowels = \"\
    aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let i = 0;\n\
    \    let j = 0;\n    let found = false;\n    while (i < word.length && !found)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowels_count++;\n\
    \            if (vowels_count > 1) {\n                found = true;\n        \
    \    }\n        } else if (consonants.indexOf(word[i]) !== -1) {\n           \
    \ consonants_count++;\n            if (consonants_count > 1) {\n             \
    \   found = true;\n            }\n        }\n        i++;\n    }\n    if (found)\
    \ {\n        return word[i - 1];\n    } else {\n        return \"\";\n    }\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = i;\n        }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n\
    \    }\n    let consonant_count = consonants.length;\n    let vowel_count = vowels.length;\n\
    \    let vowel_index_count = 0;\n    let consonant_index_count = 0;\n    let vowel_index_count_max\
    \ = 0;\n    let consonant_index_count_max = 0;\n    for (let i = 0; i < vowel_count;\
    \ i++) {\n        if (vowels[i] === word[vowel_index]) {\n            vowel_index_count++;\n\
    \            if (vowel_index_count > vowel_index_count_max) {\n              \
    \  vowel_index_count_max = vowel_index_count;\n                vowel_index = i;\n\
    \            }\n        }\n    }\n    for (let i = 0; i < consonant_count; i++)\
    \ {\n        if (consonants[i] === word[consonant_index]) {\n            consonant_index_count++;\n\
    \            if (consonant_index_count > consonant_index_count_max) {\n      \
    \          consonant_index_count_max = consonant_index_count;\n              \
    \  consonant_index = i;\n            }\n        }\n    }\n    if (vowel_index_count\
    \ === 0) {\n        return \"\";\n    }\n    if (consonant_index_count === 0)\
    \ {\n        return word[vowel_index];\n    }\n    if", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = 0;\n\
    \    while (i < word.length) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            consonants.push(word[i]);\n        } else {\n            consonants.push(word[i]);\n\
    \            i++;\n        }\n    }\n    let closest_vowel = \"\";\n    for (let\
    \ j = 0; j < consonants.length; j++) {\n        let vowel = vowels.find(v => v\
    \ === consonants[j]);\n        if (vowel !== undefined) {\n            closest_vowel\
    \ = vowel;\n            break;\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index\
    \ = vowels.indexOf(word[word.length - 1]);\n    let result = \"\";\n    for (let\
    \ i = consonant_index + 1; i < word.length - 1; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \  }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    let consonant_count = 0;\n    let vowel_count = 0;\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowel_count++;\n            if (vowel_count === 1) {\n          \
    \      vowel_index = i;\n            }\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count === 1) {\n\
    \                vowel_index = i;\n            }\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count === 1) {\n\
    \                vowel_index = i;\n            }\n        } else if (word[i] ===\
    \ \" \") {\n            consonant_count++;\n            if (consonant_count ===\
    \ 1) {\n                consonant_index = i;\n            }\n        } else {\n\
    \            consonant_count++;\n            if (consonant_count === 1) {\n  \
    \              consonant_index = i;\n            }\n        }\n    }\n    if (vowel_count\
    \ === 0) {\n        return \"\";\n    }\n    if (vowel_count === 1) {\n      \
    \  return word[vowel_index];\n    }\n    let consonant_index_end = consonant_index\
    \ + consonant_count;\n    let vowel_index_end = vowel_index + vowel_count;\n \
    \   let consonant_index_start = consonant_index - 1;\n    let vowel_index_start\
    \ = vowel_index - 1;\n    let consonant_index_mid = consonant_index + (consonant_count\
    \ / 2);\n    let vowel_index_mid = vowel_index + (v", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let result = \"\";\n \
    \   for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ consonant_index = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[0]);\n\
    \    let consonant_count = 0;\n    let vowel_count = 0;\n    let closest_vowel\
    \ = \"\";\n    for (let i = 1; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count > 1) {\n\
    \                return \"\";\n            }\n            if (vowel_count ===\
    \ 1) {\n                closest_vowel = word[i];\n            }\n        } else\
    \ if (consonants.indexOf(word[i]) !== -1) {\n            consonant_count++;\n\
    \            if (consonant_count > 1) {\n                return \"\";\n      \
    \      }\n            if (consonant_count === 1) {\n                if (vowel_index\
    \ === -1) {\n                    closest_vowel = word[i];\n                } else\
    \ if (vowel_index !== -1) {\n                    if (vowel_index < consonant_index)\
    \ {\n                        closest_vowel = word[i];\n                    } else\
    \ if (vowel_index > consonant_index) {\n                        return \"\";\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n    while (i\
    \ >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n\
    \        }\n        if (vowels.indexOf(word[i - 1]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n        i--;\n    }\n    if (consonants.length === 0) {\n        return\
    \ \"\";\n    }\n    let closest = \"\";\n    let min = Infinity;\n    for (let\
    \ j = 0; j < consonants.length; j++) {\n        let distance = Math.abs(vowels.indexOf(consonants[j])\
    \ - vowels.indexOf(consonants[j - 1]));\n        if (distance < min) {\n     \
    \       min = distance;\n            closest = consonants[j];\n        }\n   \
    \ }\n    return closest;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    let consonants = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n\
    \        }\n        if (vowels.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n        i -= 1;\n    }\n    if (consonants.length === 0) {\n     \
    \   return '';\n    }\n    let min = Infinity;\n    let closest = '';\n    for\
    \ (let j = 0; j < consonants.length; j += 1) {\n        let dist = Math.abs(vowels.indexOf(consonants[j])\
    \ - vowels.indexOf(consonants[j + 1]));\n        if (dist < min) {\n         \
    \   min = dist;\n            closest = consonants[j];\n        }\n    }\n    return\
    \ closest;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n   \
    \ let consonants = [];\n    for (let i = 0; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            consonants.push(\"\");\n        }\n    }\n    let\
    \ closest_vowel = \"\";\n    for (let i = 0; i < consonants.length - 1; i++) {\n\
    \        for (let j = i + 1; j < consonants.length; j++) {\n            if (vowels.indexOf(consonants[i])\
    \ !== -1 && vowels.indexOf(consonants[j]) !== -1) {\n                closest_vowel\
    \ = vowels[vowels.indexOf(consonants[i]) + 1];\n                break;\n     \
    \       }\n        }\n        if (closest_vowel !== \"\") {\n            break;\n\
    \        }\n    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let index = 0;\n\
    \    let result = \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        } else if (consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ !== -1) {\n            vowel_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = i;\n        }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n\
    \    } else if (vowel_index === word.length - 1) {\n        return \"\";\n   \
    \ } else if (vowel_index === consonant_index) {\n        return \"\";\n    } else\
    \ {\n        return word[vowel_index];\n    }\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ consonant_index = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let consonant_count = 0;\n    let vowel_count = 0;\n    for (let\
    \ i = 0; i < word.length - 1; i++) {\n        if (consonants.indexOf(word[i])\
    \ > consonant_index) {\n            consonant_count++;\n        }\n        if\
    \ (vowels.indexOf(word[i]) > vowel_index) {\n            vowel_count++;\n    \
    \    }\n    }\n    if (consonant_count > vowel_count) {\n        return vowels[vowel_index\
    \ + 1];\n    }\n    return vowels[vowel_index - 1];\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n\
    \        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n        \
    \    consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (vowel_index === 0 || vowel_index === word.length\
    \ - 1) {\n        return \"\";\n    }\n    let consonant_index_next = consonant_index\
    \ + 1;\n    let consonant_index_prev = consonant_index - 1;\n    if (consonant_index_next\
    \ >= word.length || consonant_index_prev < 0) {\n        return \"\";\n    }\n\
    \    let consonant_next = word[consonant_index_next];\n    let consonant_prev\
    \ = word[consonant_index_prev];\n    if (vowels.indexOf(consonant_next) !== -1\
    \ && vowels.indexOf(consonant_prev) !== -1) {\n        return word[vowel_index];\n\
    \    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let result = \"\";\n    for (let i = 0; i\
    \ < word.length; i++) {\n        if (vowels.indexOf(word[i]) > -1) {\n       \
    \     vowels_count++;\n        } else if (consonants.indexOf(word[i]) > -1) {\n\
    \            consonants_count++;\n        }\n        if (vowels_count > 0 && consonants_count\
    \ > 0) {\n            result = word[i];\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let result = \"\";\n\
    \    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      i--;\n    }\n    if (result === \"\") {\n        i = word.length - 1;\n\
    \        while (i >= 0) {\n            if (consonants.indexOf(word[i]) !== -1)\
    \ {\n                result = word[i];\n                break;\n            }\n\
    \            i--;\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let consonants =\
    \ ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let closest_vowel = '';\n    for (let i\
    \ = consonant_index + 1; i < word.length - 1; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count === 1) {\n\
    \                closest_vowel = word[i];\n            }\n        } else if (vowels.indexOf(word[i])\
    \ === -1) {\n            consonant_count++;\n            if (consonant_count ===\
    \ 1) {\n                closest_vowel = word[i];\n            }\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n   \
    \ while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n          \
    \  return word[i];\n        }\n        if (vowels.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n        }\n        i--;\n    }\n    if\
    \ (consonants.length === 0) {\n        return \"\";\n    }\n    let j = consonants.length\
    \ - 1;\n    while (j >= 0) {\n        if (vowels.indexOf(consonants[j]) !== -1)\
    \ {\n            return consonants[j];\n        }\n        j--;\n    }\n    return\
    \ \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let\
    \ consonants = [];\n    let i = 0;\n    while (i < word.length) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            break;\n        }\n        i++;\n    }\n    i =\
    \ word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            consonants.push(word[i]);\n        } else {\n       \
    \     break;\n        }\n        i--;\n    }\n    let closest_vowel = \"\";\n\
    \    for (let j = 0; j < consonants.length; j++) {\n        for (let k = j + 1;\
    \ k < consonants.length; k++) {\n            if (vowels.indexOf(consonants[j])\
    \ !== -1 && vowels.indexOf(consonants[k]) !== -1) {\n                closest_vowel\
    \ = vowels[vowels.indexOf(consonants[k]) - 1];\n                break;\n     \
    \       }\n        }\n        if (closest_vowel !== \"\") {\n            break;\n\
    \        }\n    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length\
    \ - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            return word[i];\n        }\n        if (vowels.indexOf(word[i - 1])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    if (consonants.length === 0) {\n        return \"\";\n    }\n    let\
    \ min = Infinity;\n    let closest = \"\";\n    for (let j = 0; j < consonants.length;\
    \ j++) {\n        let distance = Math.abs(consonants[j] - vowels[0]);\n      \
    \  if (distance < min) {\n            min = distance;\n            closest = vowels[0];\n\
    \        }\n        distance = Math.abs(consonants[j] - vowels[vowels.length -\
    \ 1]);\n        if (distance < min) {\n            min = distance;\n         \
    \   closest = vowels[vowels.length - 1];\n        }\n    }\n    return closest;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i]))\
    \ {\n            vowels.splice(vowels.indexOf(word[i]), 1);\n        } else if\
    \ (vowels.includes(word[i].toLowerCase())) {\n            vowels.splice(vowels.indexOf(word[i].toLowerCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toUpperCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toUpperCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels.splice(vowels.indexOf(word[i].toUpperCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toLowerCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toLowerCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels.splice(vowels.indexOf(word[i].toUpperCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toLowerCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toLowerCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels.splice(vowels.indexOf(word[i].toUpperCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toLowerCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toLowerCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n  \
    \  let consonant_index = 0;\n    let vowel_index = 0;\n    let result = \"\";\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n            break;\n        }\n   \
    \     if (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_index === 0)\
    \ {\n        result = \"\";\n    } else if (vowel_index === word.length - 1) {\n\
    \        result = \"\";\n    } else {\n        let consonant_index_2 = consonant_index\
    \ + 1;\n        while (consonant_index_2 < word.length) {\n            if (vowels.indexOf(word[consonant_index_2])\
    \ !== -1) {\n                result = word[consonant_index_2];\n             \
    \   break;\n            }\n            if (consonants.indexOf(word[consonant_index_2])\
    \ === -1) {\n                consonants.push(word[consonant_index_2]);\n     \
    \           consonant_index_2 = consonant_index_2 + 1;\n            } else {\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index\
    \ = vowels.indexOf(word[0]);\n    let consonant_count = 0;\n    let vowel_count\
    \ = 0;\n    let result = \"\";\n    for (let i = 1; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n \
    \           if (vowel_count === 1) {\n                result = word[i];\n    \
    \        }\n        } else if (consonants.indexOf(word[i]) !== -1) {\n       \
    \     consonant_count++;\n            if (consonant_count === 1) {\n         \
    \       result = word[i];\n            }\n        } else {\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.includes(word[i])) {\n            vowels.splice(vowels.indexOf(word[i]),\
    \ 1);\n        } else if (vowels.includes(word[i].toLowerCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toLowerCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels.splice(vowels.indexOf(word[i].toUpperCase()),\
    \ 1);\n        } else if (word[i].toLowerCase() === \"y\") {\n            vowels.splice(vowels.indexOf(\"\
    y\"), 1);\n        } else if (word[i].toUpperCase() === \"Y\") {\n           \
    \ vowels.splice(vowels.indexOf(\"Y\"), 1);\n        } else if (word[i].toLowerCase()\
    \ === \"q\") {\n            vowels.splice(vowels.indexOf(\"q\"), 1);\n       \
    \ } else if (word[i].toUpperCase() === \"Q\") {\n            vowels.splice(vowels.indexOf(\"\
    Q\"), 1);\n        } else if (word[i].toLowerCase() === \"x\") {\n           \
    \ vowels.splice(vowels.indexOf(\"x\"), 1);\n        } else if (word[i].toUpperCase()\
    \ === \"X\") {\n            vowels.splice(vowels.indexOf(\"X\"), 1);\n       \
    \ } else if (word[i].toLowerCase() === \"z\") {\n            vowels.splice(vowels.indexOf(\"\
    z\"), 1);\n        } else if (word[i].toUpperCase() === \"Z\") {\n           \
    \ vowels.splice(vowels.indexOf(\"Z\"), 1);\n        } else if (word[i].toLower",
  "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let vowels_index\
    \ = 0;\n    let consonants_index = 0;\n    let result = \"\";\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowels_count++;\n            vowels_index = i;\n        } else if\
    \ (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n  \
    \          consonants_index = i;\n        }\n    }\n    if (vowels_count === 0\
    \ || consonants_count === 0) {\n        return \"\";\n    }\n    if (vowels_count\
    \ === 1) {\n        return word[vowels_index];\n    }\n    if (consonants_count\
    \ === 1) {\n        return word[consonants_index];\n    }\n    if (vowels_count\
    \ === 2) {\n        if (vowels_index - 1 === consonants_index) {\n           \
    \ return word[vowels_index];\n        } else {\n            return word[vowels_index\
    \ - 1];\n        }\n    }\n    if (consonants_count === 2) {\n        if (vowels_index\
    \ + 1 === consonants_index) {\n            return word[vowels_index];\n      \
    \  } else {\n            return word[vowels_index + 1];\n        }\n    }\n  \
    \  return \"\";\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants\
    \ = [];\n    let i = 0;\n    let j = word.length - 1;\n    while (i < j) {\n \
    \       if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else if (vowels.indexOf(word[j]) !== -1) {\n            consonants.push(word[j]);\n\
    \        } else {\n            break;\n        }\n        i++;\n        j--;\n\
    \    }\n    let closest = '';\n    for (let c of consonants) {\n        for (let\
    \ v of vowels) {\n            if (v === c) {\n                closest = v;\n \
    \               break;\n            }\n        }\n    }\n    return closest;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\
    \    let vowels_count = 0;\n    let consonants_count = 0;\n    let result = \"\
    \";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"\
    g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"\
    t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    if (vowel_index\
    \ === -1 || consonant_index === -1) {\n        return \"\";\n    }\n    let consonant_index_plus_1\
    \ = consonant_index + 1;\n    let vowel_index_plus_1 = vowel_index + 1;\n    if\
    \ (vowel_index_plus_1 === vowels.length) {\n        return \"\";\n    }\n    if\
    \ (vowel_index_plus_1 === consonants.length) {\n        return \"\";\n    }\n\
    \    if (vowel_index_plus_1 === consonant_index_plus_1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    return vowels[vowel_index_plus_1];\n}\n", "    let vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            break;\n        }\n    }\n    let result = '';\n\
    \    for (let i = consonants.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(consonants[i])\
    \ !== -1) {\n            result = consonants[i];\n            break;\n       \
    \ }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let closest_vowel = \"\";\n    for (let\
    \ i = 0; i < word.length - 1; i++) {\n        if (vowels.indexOf(word[i]) !==\
    \ -1) {\n            vowel_count++;\n        }\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_count++;\n        }\n        if (vowel_count\
    \ === 1 && consonant_count === 0) {\n            closest_vowel = word[i];\n  \
    \          break;\n        }\n    }\n    return closest_vowel;\n}\n", "    let\
    \ vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let vowel_found\
    \ = false;\n    let word_length = word.length;\n    for (let i = 0; i < word_length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_found\
    \ = true;\n            vowel_index = i;\n            break;\n        }\n     \
    \   else if (vowel_found === false && consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n            consonant_index = i;\n   \
    \     }\n    }\n    if (vowel_found === false) {\n        return \"\";\n    }\n\
    \    else {\n        return word[vowel_index + 1];\n    }\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    let vowel_found = false;\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowel_found = true;\n            vowel_index = i;\n            break;\n\
    \        }\n        if (vowel_found === false && consonants.indexOf(word[i]) ===\
    \ -1) {\n            consonants.push(word[i]);\n            consonant_index =\
    \ i;\n        }\n    }\n    if (vowel_found === false) {\n        return \"\"\
    ;\n    }\n    let consonant_count = consonants.length;\n    let vowel_count =\
    \ vowels.length;\n    let vowel_index_count = 0;\n    let vowel_index_count_max\
    \ = 0;\n    for (let i = consonant_index + 1; i < word.length; i++) {\n      \
    \  if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index_count++;\n \
    \           if (vowel_index_count > vowel_index_count_max) {\n               \
    \ vowel_index_count_max = vowel_index_count;\n                vowel_index = i;\n\
    \            }\n        }\n    }\n    return word[vowel_index];\n}\n", "    let\
    \ vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.includes(word[i])) {\n            vowel_index = i;\n     \
    \       break;\n        }\n        if (consonants.includes(word[i])) {\n     \
    \       consonant_index = i;\n            break;\n        }\n    }\n    if (vowel_index\
    \ === 0 || vowel_index === word.length - 1) {\n        return '';\n    }\n   \
    \ let consonant_count = 0;\n    for (let i = consonant_index + 1; i < word.length;\
    \ i++) {\n        if (vowels.includes(word[i])) {\n            return word[i];\n\
    \        }\n        if (consonants.includes(word[i])) {\n            consonant_count++;\n\
    \        }\n    }\n    return '';\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    let result = \"\";\n    for (let i = 0; i < consonants.length;\
    \ i++) {\n        for (let j = i + 1; j < consonants.length; j++) {\n        \
    \    if (vowels.indexOf(consonants[j]) !== -1) {\n                result = consonants[j];\n\
    \                break;\n            }\n        }\n        if (result !== \"\"\
    ) {\n            break;\n        }\n    }\n    return result;\n}\n", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\",\
    \ \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let vowels_count\
    \ = 0;\n    let consonants_count = 0;\n    let result = \"\";\n    for (let i\
    \ = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            vowels_count++;\n        } else if (consonants.indexOf(word[i]) !==\
    \ -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n\
    \    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     return word[i];\n        }\n        if (consonants.indexOf(word[i]) ===\
    \ -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n    }\n\
    \    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [];\n    let i = word.length - 1;\n    while (i >= 0)\
    \ {\n        if (vowels.includes(word[i])) {\n            return word[i];\n  \
    \      }\n        if (consonants.includes(word[i])) {\n            break;\n  \
    \      }\n        i--;\n    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let result = \"\";\n \
    \   for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let result = \"\";\n \
    \   for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n            if (vowels_count > 1) {\n\
    \                result = word[i];\n                break;\n            }\n  \
    \      } else if (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n\
    \            if (consonants_count > 1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.includes(word[i]))\
    \ {\n            consonants.push(word[i]);\n        } else {\n            consonants.push(\"\
    \");\n        }\n    }\n    let closest_vowel = \"\";\n    for (let i = 0; i <\
    \ consonants.length - 1; i++) {\n        if (vowels.includes(consonants[i])) {\n\
    \            closest_vowel = consonants[i];\n            break;\n        }\n \
    \   }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n   \
    \ while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n          \
    \  return word[i];\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n        }\n        i--;\n    }\n \
    \   return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let result = \"\";\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n         \
    \   vowels_count++;\n            if (vowels_count > 1) {\n                return\
    \ \"\";\n            }\n            if (vowels_count == 1) {\n               \
    \ result = word[i];\n            }\n        } else if (consonants.indexOf(word[i])\
    \ > -1) {\n            consonants_count++;\n            if (consonants_count >\
    \ 1) {\n                return \"\";\n            }\n            if (consonants_count\
    \ == 1) {\n                result = word[i];\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let result\
    \ = \"\";\n    if (vowel_index > consonant_index) {\n        result = word[word.length\
    \ - 1];\n    } else if (vowel_index < consonant_index) {\n        result = word[word.length\
    \ - 2];\n    } else {\n        result = \"\";\n    }\n    return result;\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let result = \"\";\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      if (consonants.indexOf(word[i]) !== -1) {\n            break;\n       \
    \ }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count\
    \ = 0;\n    let consonants_count = 0;\n    let result = \"\";\n    for (let i\
    \ = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowels_count++;\n            if (vowels_count > 1) {\n      \
    \          result = word[i];\n                break;\n            }\n        }\
    \ else if (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n\
    \            if (consonants_count > 1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index =\
    \ 0;\n    let consonant_count = 0;\n    let vowel_count = 0;\n    let result =\
    \ '';\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count === 1) {\n\
    \                vowel_index = i;\n            }\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            if (vowel_count === 1) {\n\
    \                vowel_index = i;\n            }\n        } else {\n         \
    \   consonant_count++;\n            if (consonant_count === 1) {\n           \
    \     consonant_index = i;\n            }\n        }\n    }\n    if (vowel_count\
    \ === 0) {\n        return '';\n    }\n    if (vowel_count === 1) {\n        result\
    \ = word[vowel_index];\n    } else {\n        result = word[vowel_index - 1];\n\
    \    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[0]);\n\
    \    let i = 1;\n    while (i < word.length && consonant_index + 1 < consonants.length)\
    \ {\n        if (vowel_index === -1) {\n            vowel_index = vowels.indexOf(word[i]);\n\
    \        }\n        if (vowel_index !== -1) {\n            if (vowel_index < consonant_index)\
    \ {\n                return word[i];\n            }\n            else if (vowel_index\
    \ > consonant_index) {\n                vowel_index = -1;\n            }\n   \
    \     }\n        i++;\n    }\n    return \"\";\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let i = word.length -\
    \ 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n  \
    \          vowels_count++;\n        } else if (consonants.indexOf(word[i]) !==\
    \ -1) {\n            consonants_count++;\n        }\n        i--;\n    }\n   \
    \ if (vowels_count === 0 || consonants_count === 0) {\n        return \"\";\n\
    \    }\n    let consonant_index = consonants.indexOf(word[word.length - 1]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 2]);\n    let vowel_index_2\
    \ = vowels.indexOf(word[word.length - 3]);\n    if (vowel_index === -1) {\n  \
    \      vowel_index = vowels.indexOf(word[word.length - 1]);\n    }\n    if (vowel_index_2\
    \ === -1) {\n        vowel_index_2 = vowels.indexOf(word[word.length - 2]);\n\
    \    }\n    if (vowel_index === -1) {\n        vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    }\n    if (vowel_index_2 === -1) {\n        vowel_index_2 = vowels.indexOf(word[word.length\
    \ - 2]);\n    }\n    if (vowel_index === -1) {\n        vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    }\n    if (vowel_index_2 === -1) {\n        vowel_index_2 = vowels.indexOf(word[word.length\
    \ - 2]);\n    }\n    if (vowel_index === -1)", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n\
    \    let vowel_index = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n  \
    \  let l = 0;\n    let m = 0;\n    let n = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let consonant_index_count = 0;\n    let\
    \ vowel_index_count = 0;\n    let consonant_index_count_2 = 0;\n    let vowel_index_count_2\
    \ = 0;\n    let consonant_index_count_3 = 0;\n    let vowel_index_count_3 = 0;\n\
    \    let consonant_index_count_4 = 0;\n    let vowel_index_count_4 = 0;\n    let\
    \ consonant_index_count_5 = 0;\n    let vowel_index_count_5 = 0;\n    let consonant_index_count_6\
    \ = 0;\n    let vowel_index_count_6 = 0;\n    let consonant_index_count_7 = 0;\n\
    \    let vowel_index_count_7 = 0;\n    let consonant_index_count_8 = 0;\n    let\
    \ vowel_index_count_8 = 0;\n    let consonant_index_count_9 = 0;\n    let vowel_index_count_9\
    \ = 0;\n    let consonant_index_count_10 = 0;\n    let vowel_index_count_10 =\
    \ 0;\n    let consonant_index_count_11 = 0;\n    let vowel_index_count_11 = 0;\n\
    \    let consonant_index_count_12 = 0;\n    let vowel_index_count_12 = 0;\n  \
    \  let consonant_index", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let result = \"\";\n    for (let i = consonant_index + 1; i < word.length\
    \ - 1; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result\
    \ = word[i];\n            break;\n        }\n    }\n    return result;\n}\n",
  "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let result =\
    \ \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n        }\n        if (vowels_count\
    \ > 0 && consonants_count > 0) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ consonant_index = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let result = \"\";\n    if (vowel_index > consonant_index) {\n \
    \       result = word[word.length - 1];\n    } else if (vowel_index < consonant_index)\
    \ {\n        result = word[word.length - 2];\n    }\n    return result;\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let consonant_index = 0;\n    let vowel_index = 0;\n    let result = \"\"\
    ;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n            break;\n        }\n   \
    \     if (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_index === 0)\
    \ {\n        result = \"\";\n    } else {\n        result = word[vowel_index -\
    \ 1];\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    let i = 0;\n    while (i < word.length)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            consonants.push(word[i]);\n            i++;\n \
    \       }\n    }\n    let closest_vowel = \"\";\n    for (let j = 0; j < consonants.length;\
    \ j++) {\n        for (let k = j + 1; k < consonants.length; k++) {\n        \
    \    if (vowels.indexOf(consonants[k]) !== -1) {\n                closest_vowel\
    \ = vowels[vowels.indexOf(consonants[k])];\n                break;\n         \
    \   }\n        }\n        if (closest_vowel !== \"\") {\n            break;\n\
    \        }\n    }\n    return closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let i = word.length -\
    \ 1;\n    let j = word.length - 1;\n    let result = \"\";\n    while (i >= 0\
    \ && j >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowels_count\
    \ += 1;\n            if (vowels_count > 1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n        if (consonants.indexOf(word[j])\
    \ !== -1) {\n            consonants_count += 1;\n            if (consonants_count\
    \ > 1) {\n                result = word[j];\n                break;\n        \
    \    }\n        }\n        i -= 1;\n        j -= 1;\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            consonants.push(word[i]);\n        }\n    }\n    let\
    \ result = \"\";\n    for (let i = 0; i < consonants.length; i++) {\n        for\
    \ (let j = i + 1; j < consonants.length; j++) {\n            if (vowels.indexOf(consonants[j])\
    \ !== -1) {\n                result = consonants[j];\n                break;\n\
    \            }\n        }\n        if (result !== \"\") {\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i = 0;\n    let j =\
    \ 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let\
    \ o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n   \
    \ let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let consonant = [];\n    let consonant_index\
    \ = [];\n    let vowel = [];\n    let vowel_index = [];\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let consonant_index_count = 0;\n    let\
    \ vowel_index_count = 0;\n    let consonant_index_array = [];\n    let vowel_index_array\
    \ = [];\n    let consonant_index_array_count = 0;\n    let vowel_index_array_count\
    \ = 0;\n    let consonant_index_array_temp = [];\n    let vowel_index_array_temp\
    \ = [];\n    let consonant_index_array_temp_count = 0;\n    let vowel_index_array_temp_count\
    \ = 0;\n    let consonant_index_array_temp_temp = [];\n    let vowel_index_array_temp_temp\
    \ = [];\n    let consonant_index_array_temp_temp_count = 0;\n    let vowel_index_array_temp_temp_count\
    \ = 0;\n    let consonant_index_array_temp_temp_temp = [];\n    let vowel_index_array_temp_temp_temp\
    \ = [];\n    let consonant_index_array_temp_temp_temp_count = 0;\n    let vowel_index_array_temp_temp_temp_count\
    \ = 0;\n    let consonant_index_array_temp_temp_temp_temp = [];\n    let vowel_index_array_temp_temp_temp_temp\
    \ = [];\n    let consonant_index_array", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [];\n    let consonant = \"\";\n    let\
    \ vowel = \"\";\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;", "    let vowels = ['a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n    let consonants = [];\n    let\
    \ consonant_index = 0;\n    let vowel_index = 0;\n    let consonant_count = 0;\n\
    \    let vowel_count = 0;\n    for (let i = 0; i < word.length; i++) {\n     \
    \   if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n      \
    \      vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (vowels.indexOf(word[i].toUpperCase()) !== -1) {\n            vowel_count++;\n\
    \            vowel_index = i;\n        } else {\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return '';\n    }\n    if (consonant_count === 0) {\n        return\
    \ word[vowel_index];\n    }\n    let consonant_index_left = consonant_index -\
    \ 1;\n    let consonant_index_right = consonant_index + 1;\n    let vowel_index_left\
    \ = vowel_index - 1;\n    let vowel_index_right = vowel_index + 1;\n    if (vowel_index_left\
    \ < 0) {\n        vowel_index_left = word.length - 1;\n    }\n    if (vowel_index_right\
    \ >= word.length) {\n        vowel_index_right = 0;\n    }\n    if (consonant_index_left\
    \ < 0) {\n        consonant_index_left = word.length - 1;\n    }\n    if (consonant_index_right\
    \ >= word.length) {\n        consonant_index_right = 0;\n    }\n    if (vowel_index_",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let result = \"\";\n    for (let i = 0; i < word.length; i++) {\n       \
    \ if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n     \
    \       break;\n        } else if (vowels.indexOf(word[i].toLowerCase()) !== -1)\
    \ {\n            result = word[i];\n            break;\n        } else if (vowels.indexOf(word[i].toUpperCase())\
    \ !== -1) {\n            result = word[i];\n            break;\n        } else\
    \ if (word[i] === \" \") {\n            result = \"\";\n            break;\n \
    \       } else if (word[i] === \".\") {\n            result = \"\";\n        \
    \    break;\n        } else if (word[i] === \",\") {\n            result = \"\"\
    ;\n            break;\n        } else if (word[i] === \"!\") {\n            result\
    \ = \"\";\n            break;\n        } else if (word[i] === \"?\") {\n     \
    \       result = \"\";\n            break;\n        } else if (word[i] === \"\
    ;\") {\n            result = \"\";\n            break;\n        } else if (word[i]\
    \ === \":\") {\n            result = \"\";\n            break;\n        } else\
    \ if (word[i] === \"\\\"\") {\n            result = \"\";\n            break;\n\
    \        } else if (word[i] === \"'\") {\n            result = \"\";\n       \
    \     break;\n        } else if (word[i] === \"(\" || word[i] === \")\") {\n \
    \           result = \"\";\n            break;\n        } else if (word[i] ===\
    \ \"{\" || word[i] === \"}\") {\n            result = \"\";\n            break;\n\
    \        } else if (word[i] === \"[\" || word[i] === \"]\") {\n            result\
    \ = \"\";\n            break;\n        } else if (word[i] === \"-\" || word[i]\
    \ === \"_\") {\n            result", "    let vowels = \"aeiouAEIOU\";\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count\
    \ = 0;\n    let consonants_count = 0;\n    let result = \"\";\n    for (let i\
    \ = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowels_count++;\n            if (vowels_count > 1) {\n      \
    \          return \"\";\n            }\n            if (vowels_count === 1) {\n\
    \                result = word[i];\n            }\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n            if (consonants_count\
    \ > 1) {\n                return \"\";\n            }\n            if (consonants_count\
    \ === 1) {\n                result = word[i];\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [];\n    let i = 0;\n    while (i < word.length) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(i);\n\
    \        }\n        i++;\n    }\n    let closest_vowel = \"\";\n    if (consonants.length\
    \ === 0) {\n        return \"\";\n    }\n    for (let j = consonants[0]; j < consonants[consonants.length\
    \ - 1]; j++) {\n        let vowel = vowels[vowels.indexOf(word[j]) + 1];\n   \
    \     if (vowel !== \"\") {\n            closest_vowel = vowel;\n            break;\n\
    \        }\n    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant =\
    \ \"\";\n    let vowel = \"\";\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let aa =\
    \ 0;\n    let ab = 0;\n    let ac = 0;\n    let ad = 0;\n    let ae = 0;\n   \
    \ let af = 0;\n    let ag = 0;\n    let ah = 0;\n    let ai = 0;\n    let aj =\
    \ 0;\n    let ak = 0;\n    let al = 0;\n    let am = 0;\n    let an = 0;\n   \
    \ let ap = 0;\n    let aq = 0;\n    let ar = 0;\n    let as = 0;\n    let at =\
    \ 0;\n    let au = 0;\n    let av = 0;\n    let aw = 0;\n    let ax = 0;\n   \
    \ let ay = 0;\n    ", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index =\
    \ 0;\n    let vowel = \"\";\n    for (let i = 0; i < word.length; i++) {\n   \
    \     if (vowels.indexOf(word[i]) !== -1) {\n            vowel = word[i];\n  \
    \          vowel_index = i;\n            break;\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = i;\n        }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n\
    \    }\n    let consonant_count = consonants.length;\n    let vowel_count = vowels.length;\n\
    \    let consonant_index_count = consonant_index + 1;\n    let vowel_index_count\
    \ = vowel_index + 1;\n    let consonant_index_count_count = consonant_index_count\
    \ + 1;\n    let vowel_index_count_count = vowel_index_count + 1;\n    let consonant_index_count_count_count\
    \ = consonant_index_count_count + 1;\n    let vowel_index_count_count_count =\
    \ vowel_index_count_count + 1;\n    let consonant_index_count_count_count_count\
    \ = consonant_index_count_count_count + 1;\n    let vowel_index_count_count_count_count\
    \ = vowel_index_count_count_count + 1;\n    let consonant_index_count_count_count_count_count\
    \ = consonant_index_count_count_count_count + 1;\n    let vowel_index_count_count_count_count_count\
    \ = vowel_index_count_count_count_count + 1;\n    let consonant_index_count_count_count_count_count_count\
    \ = consonant_index_count_count_count_count_count + 1;\n    let vowel_index_count_count_count_count_count_count\
    \ = vowel_", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let vowel\
    \ = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel = word[i];\n            vowel_index = i;\n    \
    \        break;\n        }\n        if (consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n            consonant_index = i;\n   \
    \     }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n    }\n  \
    \  let consonant_count = consonants.length;\n    let vowel_count = vowels.length;\n\
    \    let vowel_index_count = 0;\n    let consonant_index_count = 0;\n    let consonant_index_count_end\
    \ = 0;\n    let vowel_index_count_end = 0;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index_count++;\n\
    \            if (vowel_index_count === vowel_count) {\n                return\
    \ word[i];\n            }\n        }\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_index_count++;\n            if (consonant_index_count\
    \ === consonant_count) {\n                return word[i];\n            }\n   \
    \         if (consonant_index_count === consonant_count - 1) {\n             \
    \   consonant_index_count_end = i;\n            }\n        }\n    }\n    if (vowel_index_count\
    \ === vowel_count) {\n        return word[vowel_index_count_end];\n    }\n   \
    \ return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.includes(word[i])) {\n            return word[i];\n      \
    \  }\n        else if (consonants.includes(word[i])) {\n            consonants.push(word[i]);\n\
    \        }\n        else {\n            consonants.push(word[i]);\n        }\n\
    \        i--;\n    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    let closest_vowel = \"\";\n    for (let i = 0; i < consonants.length;\
    \ i++) {\n        for (let j = i + 1; j < consonants.length; j++) {\n        \
    \    if (vowels.indexOf(consonants[j]) !== -1) {\n                closest_vowel\
    \ = consonants[j];\n                break;\n            }\n        }\n       \
    \ if (closest_vowel !== \"\") {\n            break;\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U'];\n    let consonants = [];\n    let consonant = '';\n    let\
    \ vowel = '';\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    let consonant_index_end = 0;\n    let vowel_index_end = 0;\n    let\
    \ consonant_index_start = 0;\n    let vowel_index_start = 0;\n    let consonant_index_start_end\
    \ = 0;\n    let vowel_index_start_end = 0;\n    let consonant_index_end_start\
    \ = 0;\n    let vowel_index_end_start = 0;\n    let consonant_index_end_start_end\
    \ = 0;\n    let vowel_index_end_start_end = 0;\n    let consonant_index_end_start_start\
    \ = 0;\n    let vowel_index_end_start_start = 0;\n    let consonant_index_end_start_start_end\
    \ = 0;\n    let vowel_index_end_start_start_end = 0;\n    let consonant_index_end_start_start_start\
    \ = 0;\n    let vowel_index_end_start_start_start_end = 0;\n    let consonant_index_end_start_start_start_start\
    \ = 0;\n    let vowel_index_end_start_start_start_start_end = 0;\n    let consonant_index_end_start_start_start",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let i = 0;\n    let j\
    \ = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let\
    \ p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n   \
    \ let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let consonant_index = 0;\n    let vowel_index = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let consonant_index_end = 0;\n    let vowel_index_end\
    \ = 0;\n    let consonant_index_start = 0;\n    let vowel_index_start = 0;\n \
    \   let consonant_index_start_end = 0;\n    let vowel_index_start_end = 0;\n \
    \   let consonant_index_end_start = 0;\n    let vowel_index_end_start = 0;\n \
    \   let consonant_index_end_start_end = 0;\n    let vowel_index_end_start_end\
    \ = 0;\n    let consonant_index_end_end = 0;\n    let vowel_index_end_end = 0;\n\
    \    let consonant_index_end_end_start = 0;\n    let vowel_index_end_end_start\
    \ = 0;\n    let consonant_index_end_end_start_end = 0;\n    let vowel_index_end_end_start_end\
    \ = 0;\n    let consonant_index_start_end = 0;\n    let vowel_index_start_end\
    \ = 0;", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n            break;\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n    }\n    for\
    \ (let i = vowel_index + 1; i < word.length; i++) {\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_index = i;\n            break;\n        }\n\
    \    }\n    if (vowel_index === -1 || consonant_index === -1) {\n        return\
    \ \"\";\n    }\n    let vowel = word[vowel_index];\n    let consonant = word[consonant_index];\n\
    \    let consonant_index_in_vowel = vowels.indexOf(consonant);\n    let vowel_index_in_consonant\
    \ = vowels.indexOf(vowel);\n    if (vowel_index_in_consonant === -1 || consonant_index_in_vowel\
    \ === -1) {\n        return \"\";\n    }\n    let vowel_index_in_consonant_in_vowel\
    \ = consonant_index_in_vowel - vowel_index_in_consonant;\n    if (vowel_index_in_consonant_in_vowel\
    \ === 0) {\n        return vowel;\n    }\n    return \"\";\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            consonants.push(word[i]);\n        }\n    }\n    for (let i =\
    \ 0; i < consonants.length - 1; i++) {\n        for (let j = i + 1; j < consonants.length;\
    \ j++) {\n            if (vowels.indexOf(consonants[j]) !== -1) {\n          \
    \      return consonants[i];\n            }\n        }\n    }\n    return \"\"\
    ;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let consonants = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            break;\n        }\n\
    \        consonants.push(word[i]);\n        i--;\n    }\n    let j = i + 1;\n\
    \    while (j < word.length) {\n        if (vowels.indexOf(word[j]) !== -1) {\n\
    \            return word[j];\n        }\n        j++;\n    }\n    return '';\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let i = 0;\n    let j = 0;\n    let result = \"\";\n    while (i\
    \ < word.length) {\n        if (vowels.indexOf(word[i]) !== -1) {\n          \
    \  result = word[i];\n            break;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i++;\n\
    \    }\n    while (j < word.length) {\n        if (vowels.indexOf(word[j]) !==\
    \ -1) {\n            break;\n        } else if (consonants.indexOf(word[j]) ===\
    \ -1) {\n            consonants.push(word[j]);\n        }\n        j++;\n    }\n\
    \    if (result === \"\") {\n        return \"\";\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let vowel_found\
    \ = false;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_found = true;\n            vowel_index = i;\n \
    \           break;\n        }\n        if (vowel_found === false) {\n        \
    \    consonants.push(word[i]);\n            if (consonants.length > 1) {\n   \
    \             consonant_index = consonants.length - 1;\n            }\n      \
    \  }\n    }\n    if (vowel_found === false) {\n        return \"\";\n    }\n \
    \   let consonant_index_2 = consonant_index + 1;\n    while (vowel_index > consonant_index_2)\
    \ {\n        if (vowels.indexOf(word[vowel_index]) !== -1) {\n            return\
    \ word[vowel_index];\n        }\n        vowel_index--;\n    }\n    return \"\"\
    ;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n\
    \    let consonant_index = 0;\n    let vowel_index = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n \
    \           vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else {\n            consonant_count++;\n            consonant_index = i;\n\
    \        }\n    }\n    if (vowel_count === 0) {\n        return '';\n    }\n \
    \   let consonant_string = word.substring(consonant_index, word.length);\n   \
    \ let vowel_string = word.substring(vowel_index, word.length);\n    let consonant_string_lower\
    \ = consonant_string.toLowerCase();\n    let vowel_string_lower = vowel_string.toLowerCase();\n\
    \    let consonant_string_vowels = consonant_string_lower.split('');\n    let\
    \ vowel_string_vowels = vowel_string_lower.split('');\n    let consonant_string_vowels_count\
    \ = consonant_string_vowels.length;\n    let vowel_string_vowels_count = vowel_string_vowels.length;\n\
    \    let consonant_string_vowels_index = 0;\n    let vowel_string_vowels_index\
    \ = 0;\n    let consonant_string_vowels_index_count = 0;\n    let vowel_string_vowels_index_count\
    \ = 0;\n    for (let i = 0; i < consonant_string_vowels_count; i++) {\n      \
    \  if (vowels.indexOf(consonant_string_vowels[i]) !== -1) {\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\",\
    \ \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let vowels_count\
    \ = 0;\n    let consonants_count = 0;\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    let closest_vowel = \"\";\n    for (let i = 0; i < word.length; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowels_count++;\n\
    \            if (vowels_count === 2) {\n                closest_vowel = word[i];\n\
    \                break;\n            }\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count++;\n            if (consonants_count\
    \ === 2) {\n                closest_vowel = word[i];\n                break;\n\
    \            }\n        }\n    }\n    return closest_vowel;\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            consonants.push(word[i]);\n        } else {\n            consonants.push(\"\
    \");\n        }\n    }\n    let result = \"\";\n    for (let i = 0; i < consonants.length\
    \ - 1; i++) {\n        if (consonants[i] !== \"\") {\n            for (let j =\
    \ i + 1; j < consonants.length; j++) {\n                if (vowels.indexOf(consonants[j])\
    \ !== -1) {\n                    result = consonants[j];\n                   \
    \ break;\n                }\n            }\n            if (result !== \"\") {\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant = \"\";\n    let vowel = \"\";\n    let i = 0;\n  \
    \  let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n\
    \    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n\
    \    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\
    \    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let aa = 0;\n    let ab =\
    \ 0;\n    let ac = 0;\n    let ad = 0;\n    let ae = 0;\n    let af = 0;\n   \
    \ let ag = 0;\n    let ah = 0;\n    let ai = 0;\n    let aj = 0;\n    let ak =\
    \ 0;\n    let al = 0;\n    let am = 0;\n    let an = 0;\n    let ao = 0;\n   \
    \ let ap = 0;\n    let aq = 0;\n    let ar = 0;\n    let as = 0;\n    let at =\
    \ 0;\n    let au = 0;\n    let av = 0;\n", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.includes(word[i])) {\n            vowels.splice(vowels.indexOf(word[i]),\
    \ 1);\n        } else if (vowels.includes(word[i].toLowerCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toLowerCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toUpperCase())) {\n            vowels.splice(vowels.indexOf(word[i].toUpperCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toUpperCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toUpperCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toLowerCase())) {\n            vowels.splice(vowels.indexOf(word[i].toLowerCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toUpperCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toUpperCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toLowerCase())) {\n            vowels.splice(vowels.indexOf(word[i].toLowerCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toUpperCase())) {\n        \
    \    vowels.splice(vowels.indexOf(word[i].toUpperCase()), 1);\n        } else\
    \ if (vowels.includes(word[i].toLowerCase())) {\n            vowels.splice(vowels.indexOf(word[i].toLowerCase()),\
    \ 1);\n        } else if (vowels.includes(word[i].toUpperCase())) {\n        \
    \    vowels", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'];\n    let consonants = [];\n    let i = word.length - 1;\n    while (i\
    \ >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            break;\n\
    \        }\n        consonants.push(word[i]);\n        i--;\n    }\n    let j\
    \ = i + 1;\n    while (j < word.length) {\n        if (vowels.indexOf(word[j])\
    \ !== -1) {\n            return word[j];\n        }\n        j++;\n    }\n   \
    \ return '';\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n \
    \   let consonants = [];\n    let i = 0;\n    let j = 0;\n    let found = false;\n\
    \    while (i < word.length) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            found = true;\n            break;\n        }\n        if (word[i]\
    \ === \" \") {\n            i++;\n            continue;\n        }\n        if\
    \ (word[i] === \".\") {\n            i++;\n            continue;\n        }\n\
    \        if (word[i] === \",\") {\n            i++;\n            continue;\n \
    \       }\n        if (word[i] === \"?\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"!\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \";\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \":\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \")\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"(\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"]\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"[\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"{\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"}\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"}\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"}\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"{\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"{\") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \"\\\"\") {", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    let consonant_count = 0;\n    let vowel_count\
    \ = 0;\n    let i = 0;\n    for (i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return \"\";\n    }\n    let consonant_count_diff = consonant_count\
    \ - 1;\n    let vowel_count_diff = vowel_count - 1;\n    let consonant_index_diff\
    \ = consonant_index - 1;\n    let vowel_index_diff = vowel_index - 1;\n    let\
    \ consonant_index_diff_2 = consonant_index - 2;\n    let vowel_index_diff_2 =\
    \ vowel_index - 2;\n    let consonant_index_diff_3 = consonant_index - 3;\n  \
    \  let vowel_index_diff_3 = vowel_index - 3;\n    let consonant_index_diff_4 =\
    \ consonant_index - 4;\n    let vowel_index_diff_4 = vowel_index - 4;\n    let\
    \ consonant_index_diff_5 = consonant_index - 5;\n    let vowel_index_diff_5 =\
    \ vowel_index - 5;\n    let consonant_index_diff_6 = consonant_index - 6;\n  \
    \  let vowel_index_diff_6 = vowel_index - 6;\n    let consonant_index_diff_7 =\
    \ consonant_index - 7;\n    let vowel_index_diff_7 = vowel_index - 7;\n    let\
    \ consonant_index_diff_8 = consonant_index - 8;\n    let vowel_index_diff_8 =\
    \ vowel_", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = consonants.length - 1;\n        }\n    }\n    if (consonant_index === 0) {\n\
    \        return \"\";\n    }\n    let consonant = consonants[consonant_index];\n\
    \    let vowel = vowels[vowel_index];\n    let consonant_index_plus_1 = consonant_index\
    \ + 1;\n    let consonant_index_minus_1 = consonant_index - 1;\n    if (consonant_index_plus_1\
    \ < 0) {\n        consonant_index_plus_1 = 0;\n    }\n    if (consonant_index_minus_1\
    \ < 0) {\n        consonant_index_minus_1 = 0;\n    }\n    if (vowel === \"a\"\
    ) {\n        return \"\";\n    }\n    if (vowel === \"e\") {\n        return \"\
    \";\n    }\n    if (vowel === \"i\") {\n        return \"\";\n    }\n    if (vowel\
    \ === \"o\") {\n        return \"\";\n    }\n    if (vowel === \"u\") {\n    \
    \    return \"\";\n    }\n    if (vowel === \"A\") {\n        return \"\";\n \
    \   }\n    if (vowel === \"E\") {\n        return \"\";\n    }\n    if (vowel\
    \ === \"I\") {\n        return \"\";\n    }\n    if (vowel === \"O\") {\n    \
    \    return \"\";\n    }\n    if (vowel === \"U\") {\n        return \"\";\n \
    \   }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n \
    \           vowel_index = i;\n        } else if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_count++;\n            vowel_index = i;\n      \
    \  } else if (vowels.indexOf(word[i].toUpperCase()) !== -1) {\n            vowel_count++;\n\
    \            vowel_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_count++;\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_count === 0)\
    \ {\n        return \"\";\n    }\n    if (vowel_count === 1) {\n        return\
    \ vowels[vowel_index];\n    }\n    if (vowel_count === 2) {\n        if (consonant_count\
    \ === 1) {\n            return vowels[vowel_index];\n        }\n        if (consonant_count\
    \ === 2) {\n            return vowels[vowel_index];\n        }\n    }\n    if\
    \ (vowel_count === 3) {\n        if (consonant_count === 1) {\n            return\
    \ vowels[vowel_index];\n        }\n        if (consonant_count === 2) {\n    \
    \        return vowels[vowel_index];\n        }\n        if (consonant_count ===\
    \ 3) {\n            return vowels[vowel_index];\n        }\n    }\n    return\
    \ \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let\
    \ consonants = [];\n    let i = 0;\n    let j = 0;\n    let found = false;\n \
    \   while (i < word.length) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            found = true;\n            j = i;\n        } else if (found) {\n\
    \            found = false;\n        } else {\n            consonants.push(word[i]);\n\
    \        }\n        i++;\n    }\n    if (found) {\n        return word[j + 1];\n\
    \    } else {\n        return \"\";\n    }\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ vowels_count = 0;\n    let consonants_count = 0;\n    let i = word.length -\
    \ 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n  \
    \          vowels_count++;\n        } else if (consonants.indexOf(word[i]) !==\
    \ -1) {\n            consonants_count++;\n        }\n        i--;\n    }\n   \
    \ if (vowels_count === 0 || consonants_count === 0) {\n        return \"\";\n\
    \    }\n    let closest_vowel = \"\";\n    let closest_vowel_index = 0;\n    let\
    \ j = word.length - 1;\n    while (j >= 0) {\n        if (vowels.indexOf(word[j])\
    \ !== -1) {\n            closest_vowel = word[j];\n            closest_vowel_index\
    \ = j;\n            break;\n        } else if (consonants.indexOf(word[j]) !==\
    \ -1) {\n            if (j - closest_vowel_index < consonants_count) {\n     \
    \           closest_vowel = word[j];\n                closest_vowel_index = j;\n\
    \            }\n        }\n        j--;\n    }\n    return closest_vowel;\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let\
    \ consonant_index = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    if (consonant_index === -1 || vowel_index === -1) {\n        return\
    \ \"\";\n    }\n    let consonant_index_plus_1 = consonant_index + 1;\n    let\
    \ vowel_index_plus_1 = vowel_index + 1;\n    let consonant_index_minus_1 = consonant_index\
    \ - 1;\n    let vowel_index_minus_1 = vowel_index - 1;\n    if (vowel_index_plus_1\
    \ !== -1 && consonant_index_plus_1 !== -1 && consonant_index_minus_1 !== -1 &&\
    \ vowel_index_minus_1 !== -1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    if (vowel_index_plus_1 !== -1 && consonant_index_plus_1 !== -1 &&\
    \ vowel_index_minus_1 !== -1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    if (vowel_index_plus_1 !== -1 && consonant_index_minus_1 !== -1 &&\
    \ vowel_index_minus_1 !== -1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    if (vowel_index_minus_1 !== -1 && consonant_index_minus_1 !== -1 &&\
    \ vowel_index_plus_1 !== -1) {\n        return vowels[vowel_index_minus_1];\n\
    \    }\n    if (vowel_index_minus_1 !== -", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = word.length -\
    \ 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            return\
    \ word[i];\n        }\n        if (consonants.includes(word[i])) {\n         \
    \   continue;\n        }\n        consonants.push(word[i]);\n    }\n    return\
    \ \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let\
    \ consonants = [];\n    let i = 0;\n    let j = 0;\n    let result = \"\";\n \
    \   while (i < word.length) {\n        if (vowels.indexOf(word[i]) !== -1) {\n\
    \            result = word[i];\n            break;\n        }\n        if (word[i]\
    \ === \" \") {\n            i++;\n            continue;\n        }\n        if\
    \ (vowels.indexOf(word[i + 1]) !== -1) {\n            result = word[i + 1];\n\
    \            break;\n        }\n        if (word[i] === word[i + 1]) {\n     \
    \       i++;\n            continue;\n        }\n        if (word[i] === \" \"\
    ) {\n            i++;\n            continue;\n        }\n        if (word[i] ===\
    \ word[i + 2]) {\n            i++;\n            continue;\n        }\n       \
    \ if (word[i] === \" \") {\n            i++;\n            continue;\n        }\n\
    \        if (word[i] === word[i + 3]) {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === \" \") {\n            i++;\n            continue;\n\
    \        }\n        if (word[i] === word[i + 4]) {\n            i++;\n       \
    \     continue;\n        }\n        if (word[i] === \" \") {\n            i++;\n\
    \            continue;\n        }\n        if (word[i] === word[i + 5]) {\n  \
    \          i++;\n            continue;\n        }\n        if (word[i] === \"\
    \ \") {\n            i++;\n            continue;\n        }\n        if (word[i]\
    \ === word[i + 6]) {\n            i++;\n            continue;\n        }\n   \
    \     if (word[i] === \" \") {\n            i++;\n            continue;\n    \
    \    }\n        if (word[i] === word[i + 7]) {\n            i++;\n           \
    \ continue;\n        }\n        if (word[i] === \" \") {\n            i++;\n \
    \           ", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"];\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let i\
    \ = word.length - 1;\n    while (i >= 0 && vowels_count < 1) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count += 1;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonants_count += 1;\n        }\n        i -= 1;\n\
    \    }\n    if (i < 0) {\n        return \"\";\n    }\n    let j = word.length\
    \ - 1;\n    while (j >= 0 && vowels_count < 1) {\n        if (vowels.indexOf(word[j])\
    \ !== -1) {\n            vowels_count += 1;\n        } else if (consonants.indexOf(word[j])\
    \ !== -1) {\n            consonants_count += 1;\n        }\n        j -= 1;\n\
    \    }\n    if (j < 0) {\n        return \"\";\n    }\n    let k = word.length\
    \ - 1;\n    while (k >= 0 && vowels_count < 1) {\n        if (vowels.indexOf(word[k])\
    \ !== -1) {\n            vowels_count += 1;\n        } else if (consonants.indexOf(word[k])\
    \ !== -1) {\n            consonants_count += 1;\n        }\n        k -= 1;\n\
    \    }\n    if (k < 0) {\n        return \"\";\n    }\n    let l = word.length\
    \ - 1;\n    while (l >= 0 && vowels_count < 1) {\n        if (vowels.indexOf(word[l",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A',\
    \ 'E', 'I', 'O', 'U'];\n    let consonants = [];\n    let consonant_index = 0;\n\
    \    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n     \
    \   if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n    \
    \    } else if (consonants.indexOf(word[i]) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = i;\n        }\n    }\n    if (vowel_index === 0)\
    \ {\n        return '';\n    }\n    let consonant_count = consonants.length;\n\
    \    let vowel_count = vowels.length;\n    let vowel_index_count = 0;\n    let\
    \ consonant_index_count = 0;\n    let closest_vowel = '';\n    for (let i = vowel_index;\
    \ i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n   \
    \         vowel_index_count++;\n        } else if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_index_count++;\n        }\n        if (vowel_index_count\
    \ === vowel_count && consonant_index_count === consonant_count) {\n          \
    \  closest_vowel = word[i];\n            break;\n        }\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U'];\n    let consonants = [];\n    let consonantIndex = 0;\n   \
    \ let vowelIndex = 0;\n    let vowelFound = false;\n    for (let i = 0; i < word.length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowelIndex\
    \ = i;\n            vowelFound = true;\n            break;\n        }\n      \
    \  if (vowelFound === false) {\n            consonants.push(word[i]);\n      \
    \  }\n    }\n    let closestVowel = '';\n    for (let i = vowelIndex + 1; i <\
    \ word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     closestVowel = word[i];\n            break;\n        }\n    }\n    if (closestVowel\
    \ === '') {\n        for (let i = consonantIndex + 1; i < word.length; i++) {\n\
    \            if (vowels.indexOf(word[i]) !== -1) {\n                closestVowel\
    \ = word[i];\n                break;\n            }\n        }\n    }\n    return\
    \ closestVowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let result = \"\";\n  \
    \  let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      i -= 1;\n    }\n    if (result === \"\") {\n        i = word.length - 1;\n\
    \        while (i >= 0) {\n            if (consonants.indexOf(word[i]) !== -1)\
    \ {\n                result = word[i];\n                break;\n            }\n\
    \            i -= 1;\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\",\
    \ \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\"\
    , \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index\
    \ = consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[word.length\
    \ - 1]);\n    let closest_vowel = \"\";\n    if (vowel_index > consonant_index)\
    \ {\n        closest_vowel = vowels[vowel_index - 1];\n    } else if (vowel_index\
    \ < consonant_index) {\n        closest_vowel = vowels[vowel_index + 1];\n   \
    \ }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n   \
    \ let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n        }\
    \ else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n            consonants.push(word[i]);\n\
    \            consonant_index = consonants.length - 1;\n        }\n    }\n    if\
    \ (vowel_index === 0) {\n        return \"\";\n    }\n    let consonant_index_next\
    \ = consonant_index + 1;\n    let vowel_index_next = vowel_index + 1;\n    while\
    \ (vowel_index_next < word.length && consonant_index_next < word.length) {\n \
    \       if (vowels.indexOf(word[consonant_index_next]) !== -1) {\n           \
    \ return word[vowel_index_next];\n        }\n        consonant_index_next++;\n\
    \        vowel_index_next++;\n    }\n    return \"\";\n}\n", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonantIndex\
    \ = 0;\n    let vowelIndex = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowelIndex = i;\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n        }\n    }\n    for (let i =\
    \ word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            vowelIndex = i;\n            break;\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonantIndex = i;\n        }\n    }\n    if (vowelIndex\
    \ === consonantIndex) {\n        return \"\";\n    }\n    let vowel = word[vowelIndex];\n\
    \    let consonant = word[consonantIndex];\n    let consonantIndexInWord = consonantIndex;\n\
    \    let vowelIndexInWord = vowelIndex;\n    while (vowelIndexInWord > vowelIndex)\
    \ {\n        if (vowels.indexOf(word[vowelIndexInWord - 1]) !== -1) {\n      \
    \      vowelIndexInWord--;\n        } else {\n            break;\n        }\n\
    \    }\n    while (consonantIndexInWord < consonantIndex) {\n        if (consonants.indexOf(word[consonantIndexInWord\
    \ + 1]) !== -1) {\n            consonantIndexInWord++;\n        } else {\n   \
    \         break;\n        }\n    }\n    return word[vowelIndexInWord] === consonant\
    \ ? word[vowelIndexInWord] : \"\";\n}\n", "    let vowels = \"aeiouAEIOU\";\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ result = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      if (consonants.indexOf(word[i]) !== -1) {\n            result = \"\";\n\
    \            break;\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i\
    \ = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (vowels.indexOf(word[i\
    \ - 1]) !== -1) {\n            return \"\";\n        }\n        if (vowels.indexOf(word[i\
    \ - 1]) === -1 && consonants.indexOf(word[i - 1]) === -1) {\n            consonants.push(word[i\
    \ - 1]);\n        }\n        i--;\n    }\n    return \"\";\n}\n", "    let vowels\
    \ = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let result =\
    \ \"\";\n    for (let i = word.length - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count++;\n            if (vowels_count > 1) {\n\
    \                result = word[i];\n                break;\n            }\n  \
    \      } else if (consonants.indexOf(word[i]) !== -1) {\n            consonants_count++;\n\
    \            if (consonants_count > 1) {\n                result = word[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i -= 1;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[word.length\
    \ - 1]);\n    let vowel_index = vowels.indexOf(word[word.length - 2]);\n    if\
    \ (vowel_index === -1 || consonant_index === -1) {\n        return \"\";\n   \
    \ }\n    return vowels[vowel_index + consonant_index];\n}\n", "    let vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    let consonant_count = 0;\n    let vowel_count\
    \ = 0;\n    let result = '';\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n   \
    \         if (vowel_count === 1) {\n                vowel_index = i;\n       \
    \     }\n        } else {\n            consonant_count++;\n            if (consonant_count\
    \ === 1) {\n                consonant_index = i;\n            }\n        }\n \
    \   }\n    if (vowel_count === 0) {\n        return '';\n    }\n    if (vowel_count\
    \ === 1) {\n        result = word[vowel_index];\n        return result;\n    }\n\
    \    if (consonant_count === 0) {\n        return '';\n    }\n    if (vowel_index\
    \ === consonant_index) {\n        result = word[vowel_index];\n        return\
    \ result;\n    }\n    if (vowel_index > consonant_index) {\n        result = word[vowel_index];\n\
    \        return result;\n    }\n    if (vowel_index < consonant_index) {\n   \
    \     result = word[consonant_index];\n        return result;\n    }\n}\n", " \
    \   let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let result = \"\";\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) !== -1)\
    \ {\n            i -= 1;\n        } else {\n            break;\n        }\n  \
    \  }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[word.length\
    \ - 1]);\n    let vowel_index = vowels.indexOf(word[word.length - 2]);\n    if\
    \ (vowel_index === -1 || consonant_index === -1) {\n        return \"\";\n   \
    \ } else {\n        return vowels[vowel_index + consonant_index];\n    }\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let\
    \ consonantIndex = consonants.indexOf(word[0]);\n    let vowelIndex = vowels.indexOf(word[1]);\n\
    \    if (vowelIndex === -1) {\n        return \"\";\n    }\n    if (consonantIndex\
    \ === -1) {\n        return \"\";\n    }\n    if (vowelIndex === consonants.length\
    \ - 1) {\n        return \"\";\n    }\n    if (vowelIndex === consonants.length\
    \ - 2) {\n        return \"\";\n    }\n    return vowels[vowelIndex + 1];\n}\n",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let consonant_index = 0;\n    for (let i = 0; i < word.length; i++) {\n \
    \       if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(i);\n\
    \        } else if (consonants.length > 0) {\n            consonant_index = consonants[consonants.length\
    \ - 1];\n            break;\n        }\n    }\n    if (consonant_index === 0)\
    \ {\n        return \"\";\n    }\n    let consonant_index_plus_1 = consonant_index\
    \ + 1;\n    let consonant_index_minus_1 = consonant_index - 1;\n    let vowel_index\
    \ = 0;\n    for (let i = consonant_index_plus_1; i < word.length; i++) {\n   \
    \     if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n  \
    \          break;\n        }\n    }\n    if (vowel_index === 0) {\n        return\
    \ \"\";\n    }\n    let vowel_index_plus_1 = vowel_index + 1;\n    let vowel_index_minus_1\
    \ = vowel_index - 1;\n    let vowel = \"\";\n    if (vowel_index_minus_1 !== -1\
    \ && consonant_index_minus_1 !== -1) {\n        vowel = word[vowel_index_minus_1];\n\
    \    } else if (vowel_index_minus_1 !== -1) {\n        vowel = word[vowel_index_minus_1];\n\
    \    } else if (vowel_index_plus_1 !== -1 && consonant_index_plus_1 !== -1) {\n\
    \        vowel = word[vowel_index_plus_1];\n    } else if (vowel_index_plus_1\
    \ !== -1) {\n        vowel = word[vowel_index_plus_1];\n    } else if", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n  \
    \  let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let consonantIndex = 0;\n    let vowelIndex\
    \ = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowelIndex = i;\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n            consonantIndex = i;\n\
    \        }\n    }\n    if (vowelIndex === 0) {\n        result = \"\";\n    }\
    \ else {\n        result = word[vowelIndex - 1];\n    }\n    return result;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let vowel\
    \ = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n            vowel = word[i];\n    \
    \        break;\n        }\n        if (consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n            consonant_index = i;\n   \
    \     }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n    }\n  \
    \  let consonant_count = consonants.length;\n    let vowel_count = vowels.length;\n\
    \    let consonant_index_count = consonant_index + 1;\n    let vowel_index_count\
    \ = vowel_index + 1;\n    let consonant_index_count_count = consonant_index_count\
    \ + 1;\n    let vowel_index_count_count = vowel_index_count + 1;\n    let consonant_index_count_count_count\
    \ = consonant_index_count_count + 1;\n    let vowel_index_count_count_count =\
    \ vowel_index_count_count + 1;\n    let consonant_index_count_count_count_count\
    \ = consonant_index_count_count_count + 1;\n    let vowel_index_count_count_count_count\
    \ = vowel_index_count_count_count + 1;\n    let consonant_index_count_count_count_count_count\
    \ = consonant_index_count_count_count_count + 1;\n    let vowel_index_count_count_count_count_count\
    \ = vowel_index_count_count_count_count + 1;\n    let consonant_index_count_count_count_count_count_count\
    \ = consonant_index_count_count_count_count_count + 1;\n    let vowel_index_count_count_count_count_count_count_count\
    \ =", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n\
    \    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index =\
    \ vowels.indexOf(word[word.length - 1]);\n    let consonant_count = 0;\n    let\
    \ vowel_count = 0;\n    let vowel_index_count = 0;\n    let consonant_index_count\
    \ = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length - 1; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_count++;\n\
    \            vowel_index_count = i;\n        }\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_count++;\n            consonant_index_count\
    \ = i;\n        }\n    }\n    if (vowel_count === 0) {\n        return \"\";\n\
    \    }\n    if (vowel_count === 1) {\n        return vowels[vowel_index];\n  \
    \  }\n    if (consonant_count === 0) {\n        return \"\";\n    }\n    if (consonant_count\
    \ === 1) {\n        return consonants[consonant_index];\n    }\n    if (vowel_count\
    \ === 2) {\n        if (vowels[vowel_index] === consonants[consonant_index]) {\n\
    \            return vowels[vowel_index];\n        }\n        if (vowels[vowel_index]\
    \ === consonants[consonant_index + 1]) {\n            return vowels[vowel_index];\n\
    \        }\n        if (vowels[vowel_index] === consonants[consonant_index - 1])\
    \ {\n            ", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n \
    \   let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\",\
    \ \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[word.length\
    \ - 1]);\n    let vowel_index = vowels.indexOf(word[word.length - 2]);\n    if\
    \ (vowel_index === -1 || consonant_index === -1) {\n        return \"\";\n   \
    \ }\n    let vowel_index_plus = vowel_index + 1;\n    let consonant_index_plus\
    \ = consonant_index + 1;\n    if (vowel_index_plus === vowels.length) {\n    \
    \    return vowels[vowel_index_plus];\n    }\n    if (vowel_index_plus === consonants.length)\
    \ {\n        return consonants[vowel_index_plus];\n    }\n    if (vowels[vowel_index_plus]\
    \ === consonants[consonant_index_plus]) {\n        return vowels[vowel_index_plus];\n\
    \    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n    while (i\
    \ >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n\
    \        }\n        if (vowels.indexOf(word[i - 1]) === -1) {\n            consonants.push(word[i]);\n\
    \        }\n        i -= 1;\n    }\n    if (consonants.length === 0) {\n     \
    \   return \"\";\n    }\n    return consonants[0];\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n\
    \        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n        \
    \    consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (consonants.length === 0) {\n        return \"\
    \";\n    }\n    let consonant_index_next = consonant_index + 1;\n    let consonant_index_prev\
    \ = consonant_index - 1;\n    let vowel_index_next = vowel_index + 1;\n    let\
    \ vowel_index_prev = vowel_index - 1;\n    let closest_vowel = \"\";\n    if (vowel_index_next\
    \ !== word.length) {\n        if (consonants.indexOf(word[vowel_index_next]) !==\
    \ -1) {\n            closest_vowel = word[vowel_index_next];\n        }\n    }\n\
    \    if (vowel_index_prev !== 0) {\n        if (consonants.indexOf(word[vowel_index_prev])\
    \ !== -1) {\n            closest_vowel = word[vowel_index_prev];\n        }\n\
    \    }\n    return closest_vowel;\n}\n", "    let vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    let consonants = [];\n    for (let i = word.length - 1; i >= 0; i--)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n\
    \        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n        \
    \    consonants.push(word[i]);\n        }\n    }\n    if (consonants.length ===\
    \ 0) {\n        return '';\n    }\n    let closest = '';\n    let min = Infinity;\n\
    \    for (let i = 0; i < consonants.length; i++) {\n        let distance = Math.abs(vowels.indexOf(consonants[i])\
    \ - vowels.indexOf(consonants[i].toLowerCase()));\n        if (distance < min)\
    \ {\n            min = distance;\n            closest = consonants[i];\n     \
    \   }\n    }\n    return closest;\n}\n", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let result\
    \ = \"\";\n    if (vowel_index > consonant_index) {\n        result = word[word.length\
    \ - 1];\n    } else if (vowel_index < consonant_index) {\n        result = word[word.length\
    \ - 2];\n    } else if (vowel_index === consonant_index) {\n        result = word[word.length\
    \ - 1];\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index = 0;\n\
    \    let vowel_index = 0;\n    let vowel_found = false;\n    let word_length =\
    \ word.length;\n    for (let i = 0; i < word_length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_found = true;\n            vowel_index = i;\n \
    \           break;\n        }\n        if (vowel_found === false) {\n        \
    \    consonants.push(word[i]);\n        }\n    }\n    if (vowel_found === false)\
    \ {\n        return \"\";\n    }\n    for (let i = vowel_index + 1; i < word_length;\
    \ i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n\
    \        }\n        if (consonants.indexOf(word[i]) !== -1) {\n            consonant_index\
    \ = i;\n            break;\n        }\n    }\n    for (let i = consonant_index\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     return word[i];\n        }\n        if (consonants.indexOf(word[i]) !==\
    \ -1) {\n            consonant_index = i;\n            break;\n        }\n   \
    \ }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n    let consonants = [];\n    let index = 0;\n    let result = \"\";\n\
    \    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            result = word[i];\n            break;\n        }\n  \
    \      else if (vowels.indexOf(word[i].toLowerCase()) !== -1) {\n            result\
    \ = word[i].toLowerCase();\n            break;\n        }\n        else if (vowels.indexOf(word[i].toUpperCase())\
    \ !== -1) {\n            result = word[i].toUpperCase();\n            break;\n\
    \        }\n        else if (consonants.indexOf(word[i]) === -1) {\n         \
    \   consonants.push(word[i]);\n        }\n    }\n    if (result === \"\") {\n\
    \        for (let i = 0; i < word.length; i++) {\n            if (consonants.indexOf(word[i])\
    \ !== -1) {\n                result = word[i];\n                break;\n     \
    \       }\n        }\n    }\n    return result;\n}\n", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n        }\n    }\n    for (let i =\
    \ vowel_index + 1; i < word.length; i++) {\n        if (consonants.indexOf(word[i])\
    \ !== -1) {\n            consonant_index = i;\n            break;\n        }\n\
    \    }\n    if (vowel_index === -1 || consonant_index === -1) {\n        return\
    \ \"\";\n    }\n    return word[vowel_index] + word[consonant_index];\n}\n", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n\
    \    let i = 0;\n    while (i < word.length) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            consonants.push(word[i]);\n        } else {\n       \
    \     consonants.push(word[i]);\n            i++;\n        }\n    }\n    let closest_vowel\
    \ = \"\";\n    for (let j = 0; j < consonants.length; j++) {\n        for (let\
    \ k = j + 1; k < consonants.length; k++) {\n            if (vowels.indexOf(consonants[k])\
    \ !== -1) {\n                closest_vowel = consonants[k];\n                break;\n\
    \            }\n        }\n        if (closest_vowel !== \"\") {\n           \
    \ break;\n        }\n    }\n    return closest_vowel;\n}\n", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let\
    \ i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1)\
    \ {\n            consonants.push(word[i]);\n        } else {\n            consonants.push(\"\
    \");\n        }\n    }\n    let closest_vowel = \"\";\n    for (let i = 0; i <\
    \ consonants.length - 1; i++) {\n        if (vowels.indexOf(consonants[i]) !==\
    \ -1 && vowels.indexOf(consonants[i + 1]) !== -1) {\n            closest_vowel\
    \ = consonants[i + 1];\n            break;\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            return word[i];\n        }\n        if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n        }\n        i--;\n\
    \    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"];\n    let consonants = [];\n    let i = word.length - 1;\n    while (i\
    \ >= 0) {\n        if (vowels.includes(word[i])) {\n            return word[i];\n\
    \        }\n        if (consonants.includes(word[i])) {\n            break;\n\
    \        }\n        i -= 1;\n    }\n    return \"\";\n}\n", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let consonant_index\
    \ = 0;\n    let vowel_index = 0;\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n\
    \        } else if (vowels.indexOf(word[i].toLowerCase()) === -1) {\n        \
    \    consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (consonant_index === 0) {\n        return \"\"\
    ;\n    }\n    let consonant = consonants[consonant_index];\n    let vowel = vowels[vowel_index];\n\
    \    let consonant_index_plus_1 = consonant_index + 1;\n    let consonant_index_minus_1\
    \ = consonant_index - 1;\n    let vowel_index_plus_1 = vowel_index + 1;\n    let\
    \ vowel_index_minus_1 = vowel_index - 1;\n    if (vowel === consonants[consonant_index_plus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[consonant_index_minus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[consonant_index_minus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[consonant_index_plus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[vowel_index_plus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[vowel_index_minus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[vowel_index_minus_1])\
    \ {\n        return vowel;\n    } else if (vowel === consonants[vowel_index_plus_1])\
    \ {\n        return vowel;\n    } else {", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\",\
    \ \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let result\
    \ = \"\";\n    if (vowel_index > consonant_index) {\n        result = word[word.length\
    \ - 1];\n    } else if (vowel_index < consonant_index) {\n        result = word[word.length\
    \ - 2];\n    } else {\n        result = \"\";\n    }\n    return result;\n}\n",
  "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let vowels_count = 0;\n    let consonants_count = 0;\n    let result =\
    \ \"\";\n    let i = word.length - 1;\n    while (i >= 0) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowels_count += 1;\n            if (vowels_count > 1)\
    \ {\n                result = word[i];\n                break;\n            }\n\
    \        }\n        else if (consonants.indexOf(word[i]) !== -1) {\n         \
    \   consonants_count += 1;\n            if (consonants_count > 1) {\n        \
    \        result = word[i];\n                break;\n            }\n        }\n\
    \        i -= 1;\n    }\n    return result;\n}\n", "    let vowels = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = 0; i <\
    \ word.length; i++) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     consonants.push(word[i]);\n        }\n    }\n    let closest_vowel = \"\"\
    ;\n    for (let i = 0; i < consonants.length; i++) {\n        for (let j = i +\
    \ 1; j < consonants.length; j++) {\n            if (vowels.indexOf(consonants[i])\
    \ !== -1 && vowels.indexOf(consonants[j]) !== -1) {\n                closest_vowel\
    \ = vowels[vowels.indexOf(consonants[i]) + 1];\n                break;\n     \
    \       }\n        }\n        if (closest_vowel !== \"\") {\n            break;\n\
    \        }\n    }\n    return closest_vowel;\n}\n", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    if (vowel_index\
    \ === -1 || consonant_index === -1) {\n        return \"\";\n    }\n    let vowel_index_plus_1\
    \ = vowel_index + 1;\n    let consonant_index_plus_1 = consonant_index + 1;\n\
    \    if (vowel_index_plus_1 === consonants.length || consonant_index_plus_1 ===\
    \ consonants.length) {\n        return \"\";\n    }\n    return vowels[vowel_index_plus_1];\n\
    }\n", "    let vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'];\n\
    \    let consonants = [];\n    let i = word.length - 1;\n    while (i >= 0) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            break;\n        }\n\
    \        consonants.push(word[i]);\n        i--;\n    }\n    let j = i + 1;\n\
    \    while (j < word.length) {\n        if (vowels.indexOf(word[j]) !== -1) {\n\
    \            return word[j];\n        }\n        j++;\n    }\n    return '';\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let result = \"\";\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) > -1) {\n            result = word[i];\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n        }\n    }\n    if (result ===\
    \ \"\") {\n        for (let i = 0; i < consonants.length; i++) {\n           \
    \ if (vowels.indexOf(consonants[i]) > -1) {\n                result = consonants[i];\n\
    \                break;\n            }\n        }\n    }\n    return result;\n\
    }\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    ;\n    let result = \"\";\n    let i = word.length - 1;\n    while (i >= 0 &&\
    \ vowels.indexOf(word[i]) === -1) {\n        i--;\n    }\n    if (i >= 0) {\n\
    \        result = word[i];\n        i--;\n        while (i >= 0 && consonants.indexOf(word[i])\
    \ !== -1) {\n            i--;\n        }\n        if (i >= 0) {\n            result\
    \ = word[i];\n        }\n    }\n    return result;\n}\n", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\",\
    \ \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\"\
    , \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let result = \"\";\n    for (let i = 0; i\
    \ < word.length; i++) {\n        if (vowels.includes(word[i])) {\n           \
    \ vowels_count++;\n        } else if (consonants.includes(word[i])) {\n      \
    \      consonants_count++;\n        }\n        if (vowels_count > 0 && consonants_count\
    \ > 0) {\n            result = word[i];\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [];\n    for (let i = 0; i < word.length; i++) {\n  \
    \      if (vowels.indexOf(word[i]) !== -1) {\n            consonants.push(word[i]);\n\
    \        } else {\n            consonants.push(\"\");\n        }\n    }\n    let\
    \ closest_vowel = \"\";\n    for (let i = 0; i < consonants.length; i++) {\n \
    \       if (i === 0) {\n            continue;\n        }\n        if (vowels.indexOf(consonants[i\
    \ - 1]) !== -1 && vowels.indexOf(consonants[i]) !== -1) {\n            closest_vowel\
    \ = consonants[i];\n            break;\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let result = \"\";\n    let i = word.length - 1;\n    while (i >=\
    \ 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        } else if (consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n        }\n        i--;\n    }\n    return\
    \ result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n    let vowel_index\
    \ = vowels.indexOf(word[word.length - 1]);\n    if (vowel_index === -1 || consonant_index\
    \ === -1) {\n        return \"\";\n    }\n    let vowel_index_plus_1 = vowel_index\
    \ + 1;\n    let consonant_index_plus_1 = consonant_index + 1;\n    if (vowel_index_plus_1\
    \ === consonants.length) {\n        return \"\";\n    }\n    if (vowel_index_plus_1\
    \ === consonant_index_plus_1) {\n        return vowels[vowel_index_plus_1];\n\
    \    }\n    return vowels[vowel_index_plus_1];\n}\n", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.includes(word[i])) {\n            return\
    \ word[i];\n        } else if (vowels.includes(word[i].toLowerCase())) {\n   \
    \         return word[i];\n        } else if (consonants.includes(word[i])) {\n\
    \            return \"\";\n        } else {\n            consonants.push(word[i]);\n\
    \        }\n    }\n    return \"\";\n}\n", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\",\
    \ \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n\
    \    let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let result\
    \ = \"\";\n    if (consonant_index === -1 || vowel_index === -1) {\n        return\
    \ result;\n    }\n    for (let i = consonant_index + 1; i < word.length - 1; i++)\
    \ {\n        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        }\n    }\n    return result;\n}\n", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n    let i\
    \ = 0;\n    let j = 0;\n    let result = \"\";\n    while (i < word.length) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            result = word[i];\n\
    \            break;\n        } else if (consonants.indexOf(word[i]) === -1) {\n\
    \            consonants.push(word[i]);\n        }\n        i++;\n    }\n    if\
    \ (result === \"\") {\n        return \"\";\n    }\n    i = word.length - 1;\n\
    \    while (j < word.length) {\n        if (vowels.indexOf(word[j]) !== -1) {\n\
    \            result = word[j];\n            break;\n        } else if (consonants.indexOf(word[j])\
    \ === -1) {\n            consonants.push(word[j]);\n        }\n        j--;\n\
    \    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[0]);\n\
    \    let consonant_count = 0;\n    let vowel_count = 0;\n    for (let i = 1; i\
    \ < word.length; i++) {\n        if (vowels.indexOf(word[i]) >= 0) {\n       \
    \     vowel_count++;\n        } else if (consonants.indexOf(word[i]) >= 0) {\n\
    \            consonant_count++;\n        }\n    }\n    if (vowel_count === 0 ||\
    \ consonant_count === 0) {\n        return \"\";\n    }\n    let vowel_index_end\
    \ = vowels.indexOf(word[word.length - 1]);\n    let consonant_index_end = consonants.indexOf(word[word.length\
    \ - 1]);\n    let vowel_index_start = vowels.indexOf(word[0]);\n    let consonant_index_start\
    \ = consonants.indexOf(word[0]);\n    let vowel_index_mid = vowels.indexOf(word[word.length\
    \ / 2]);\n    let consonant_index_mid = consonants.indexOf(word[word.length /\
    \ 2]);\n    if (vowel_index_end >= 0 && consonant_index_end >= 0) {\n        return\
    \ word[word.length - 1];\n    } else if (vowel_index_start >= 0 && consonant_index_start\
    \ >= 0) {\n        return word[0];\n    } else if (vowel_index_mid >= 0 && consonant_index_mid\
    \ >= 0) {\n        return word[word.length / 2];\n    } else {\n        return\
    \ \"\";\n    }\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index =\
    \ 0;\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n        } else if (consonants.indexOf(word[i])\
    \ === -1) {\n            consonants.push(word[i]);\n            consonant_index\
    \ = i;\n        }\n    }\n    let closest_vowel = \"\";\n    if (vowel_index !==\
    \ 0) {\n        closest_vowel = word[vowel_index - 1];\n    } else if (consonant_index\
    \ !== 0) {\n        closest_vowel = word[consonant_index - 1];\n    }\n    return\
    \ closest_vowel;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let consonant_index =\
    \ consonants.indexOf(word[0]);\n    let vowel_index = vowels.indexOf(word[0]);\n\
    \    let result = \"\";\n    for (let i = 1; i < word.length; i++) {\n       \
    \ if (vowel_index != -1 && consonant_index != -1) {\n            if (vowel_index\
    \ < consonant_index) {\n                result = vowels[vowel_index];\n      \
    \          break;\n            } else if (vowel_index > consonant_index) {\n \
    \               result = vowels[vowel_index];\n                break;\n      \
    \      }\n        } else if (vowel_index != -1) {\n            result = vowels[vowel_index];\n\
    \            break;\n        } else if (consonant_index != -1) {\n           \
    \ result = consonants[consonant_index];\n            break;\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = \"aeiouAEIOU\";\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let vowels_count = 0;\n\
    \    let consonants_count = 0;\n    let result = \"\";\n    for (let i = word.length\
    \ - 1; i >= 0; i--) {\n        if (vowels.indexOf(word[i]) > -1) {\n         \
    \   vowels_count++;\n            if (vowels_count > 1) {\n                return\
    \ \"\";\n            }\n            if (vowels_count == 1) {\n               \
    \ result = word[i];\n            }\n        } else if (consonants.indexOf(word[i])\
    \ > -1) {\n            consonants_count++;\n            if (consonants_count >\
    \ 1) {\n                return \"\";\n            }\n            if (consonants_count\
    \ == 1) {\n                result = word[i];\n            }\n        }\n    }\n\
    \    return result;\n}\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ];\n    let consonants = [];\n    let consonant_index = 0;\n    let vowel_index\
    \ = 0;\n    let result = \"\";\n    for (let i = 0; i < word.length; i++) {\n\
    \        if (vowels.indexOf(word[i]) !== -1) {\n            vowel_index = i;\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n            consonant_index = i;\n\
    \        }\n    }\n    if (vowel_index === 0) {\n        result = \"\";\n    }\
    \ else {\n        let consonant_count = consonants.length;\n        let vowel_count\
    \ = vowels.length;\n        let consonant_index_count = consonant_index + 1;\n\
    \        let vowel_index_count = vowel_index + 1;\n        let min_count = Math.min(consonant_count,\
    \ vowel_count);\n        let min_index = Math.min(consonant_index_count, vowel_index_count);\n\
    \        let max_index = Math.max(consonant_index_count, vowel_index_count);\n\
    \        let min_index_count = min_index + 1;\n        let max_index_count = max_index\
    \ + 1;\n        let min_index_count_count = min_index_count + 1;\n        let\
    \ max_index_count_count = max_index_count + 1;\n        let min_index_count_count_count\
    \ = min_index_count_count + 1;\n        let max_index_count_count_count = max_index_count_count\
    \ + 1;\n        let min_index_count_count_count_count = min_index_count_count_count\
    \ + 1;\n        let max_index_count_count_count_count = max_index_count_count_count\
    \ + 1;\n        let min_index_count_count_count_count_count = min_index_count_count_count_count\
    \ + 1;\n        let", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"];\n    let consonant_index = consonants.indexOf(word[0]);\n   \
    \ let vowel_index = vowels.indexOf(word[word.length - 1]);\n    let consonant_count\
    \ = 0;\n    let vowel_count = 0;\n    let result = \"\";\n    for (let i = 0;\
    \ i < word.length - 1; i++) {\n        if (consonants.indexOf(word[i]) > consonant_index)\
    \ {\n            consonant_count++;\n        }\n        if (vowels.indexOf(word[i])\
    \ > vowel_index) {\n            vowel_count++;\n        }\n        if (consonant_count\
    \ === 2 && vowel_count === 1) {\n            result = word[i];\n            break;\n\
    \        }\n    }\n    return result;\n}\n", "    let vowels = \"aeiouAEIOU\"\
    ;\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\";\n    let\
    \ consonant_count = 0;\n    let vowel_count = 0;\n    let i = word.length - 1;\n\
    \    while (i >= 0) {\n        if (vowels.indexOf(word[i]) !== -1) {\n       \
    \     vowel_count += 1;\n        } else if (consonants.indexOf(word[i]) !== -1)\
    \ {\n            consonant_count += 1;\n        }\n        i -= 1;\n    }\n  \
    \  if (vowel_count === 0 || consonant_count === 0) {\n        return \"\";\n \
    \   }\n    let vowel_index = word.length - 1;\n    while (vowel_index >= 0) {\n\
    \        if (vowels.indexOf(word[vowel_index]) !== -1) {\n            return word[vowel_index];\n\
    \        }\n        vowel_index -= 1;\n    }\n    return \"\";\n}\n", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants = [];\n  \
    \  for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            consonants.push(word[i]);\n        } else {\n       \
    \     consonants.push(\"\");\n        }\n    }\n    let closest_vowel = \"\";\n\
    \    for (let i = 0; i < consonants.length - 1; i++) {\n        if (vowels.indexOf(consonants[i])\
    \ !== -1 && vowels.indexOf(consonants[i + 1]) !== -1) {\n            closest_vowel\
    \ = consonants[i + 1];\n            break;\n        }\n    }\n    return closest_vowel;\n\
    }\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    let consonants\
    \ = [];\n    let consonant_index = 0;\n    let vowel_index = 0;\n    let vowel\
    \ = \"\";\n    for (let i = 0; i < word.length; i++) {\n        if (vowels.indexOf(word[i])\
    \ !== -1) {\n            vowel_index = i;\n            vowel = word[i];\n    \
    \        break;\n        }\n        if (vowels.indexOf(word[i].toLowerCase())\
    \ !== -1) {\n            vowel_index = i;\n            vowel = word[i].toLowerCase();\n\
    \            break;\n        }\n        if (consonants.indexOf(word[i]) === -1)\
    \ {\n            consonants.push(word[i]);\n            consonant_index = consonants.length\
    \ - 1;\n        }\n    }\n    if (vowel_index === 0) {\n        return \"\";\n\
    \    }\n    for (let i = vowel_index + 1; i < word.length; i++) {\n        if\
    \ (vowels.indexOf(word[i]) !== -1) {\n            return word[i];\n        }\n\
    \        if (vowels.indexOf(word[i].toLowerCase()) !== -1) {\n            return\
    \ word[i].toLowerCase();\n        }\n        if (consonants.indexOf(word[i]) ===\
    \ consonant_index) {\n            return \"\";\n        }\n    }\n    return \"\
    \";\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

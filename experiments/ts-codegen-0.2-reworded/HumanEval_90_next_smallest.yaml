name: HumanEval_90_next_smallest
language: ts
prompt: "//You are given an array of integers.\n// Write a function next_smallest()\
  \ that returns the 2nd smallest element of the array.\n// Return undefined if there\
  \ is no such element.\n// >>> next_smallest([1, 2, 3, 4, 5])\n// 2\n// >>> next_smallest([5,\
  \ 1, 4, 3, 2])\n// 2\n// >>> next_smallest([])\n// undefined\n// >>> next_smallest([1,\
  \ 1])\n// undefined\nfunction next_smallest(lst: number[]): number | undefined {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = next_smallest;\n  assert.deepEqual(candidate([1, 2,\
  \ 3, 4, 5]),2);\n  assert.deepEqual(candidate([5, 1, 4, 3, 2]),2);\n  assert.deepEqual(candidate([]),undefined);\n\
  \  assert.deepEqual(candidate([1, 1]),undefined);\n  assert.deepEqual(candidate([1,\
  \ 1, 1, 1, 0]),1);\n  assert.deepEqual(candidate([1, 1]),undefined);\n  assert.deepEqual(candidate([-35,\
  \ 34, 12, -45]),-35);\n}\n\ntest();"
completions: ["  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let\
    \ min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === -1) return undefined;\n  let second_min = Infinity;\n\
    \  let second_min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index\
    \ = i;\n    }\n  }\n  if (second_min_index === -1) return undefined;\n  return\
    \ second_min;\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  if (min_index === 0) {\n    return undefined;\n\
    \  }\n  return lst[min_index];\n}\n", "  let min = Infinity;\n  let min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return undefined;\n  }\n  for (let i = min_index + 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? lst[1] : lst[min_index];\n}\n", "  if\
    \ (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n  let\
    \ minIndex = 0;\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  let second_min\
    \ = lst[min_index];\n  let second_min_index = min_index;\n  for (let i = min_index\
    \ + 1; i < lst.length; i++) {\n    if (lst[i] < second_min) {\n      second_min\
    \ = lst[i];\n      second_min_index = i;\n    }\n  }\n  if (second_min_index ===\
    \ min_index) {\n    return undefined;\n  }\n  return second_min;\n}\n", "  let\
    \ min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n  let minIndex =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "    let min\
    \ = lst[0];\n    let min_index = 0;\n    for (let i = 1; i < lst.length; i++)\
    \ {\n        if (lst[i] < min) {\n            min = lst[i];\n            min_index\
    \ = i;\n        }\n    }\n    return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n \
    \   if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex\
    \ === 0 ? undefined : lst[minIndex];\n}\n", "  if (lst.length === 0) {\n    return\
    \ undefined;\n  }\n  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1;\
    \ i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n     \
    \ minIndex = i;\n    }\n  }\n  return lst[minIndex + 1];\n}\n", "  let min = Infinity;\n\
    \  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n  let minIndex\
    \ = 0;\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n\
    \      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ if (lst.length === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n \
    \ let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index\
    \ + 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index\
    \ = i;\n    }\n  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return\
    \ lst[min_index];\n}\n", "  let min = Infinity;\n  let min_index = -1;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  if (min_index === -1) {\n    return undefined;\n\
    \  }\n  let second_min = Infinity;\n  let second_min_index = -1;\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < second_min && lst[i] > min) {\n\
    \      second_min = lst[i];\n      second_min_index = i;\n    }\n  }\n  return\
    \ second_min_index === -1 ? undefined : second_min;\n}\n", "  if (lst.length ===\
    \ 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n  let min_index = 0;\n\
    \n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      min_index = i;\n    }\n  }\n\n  return lst[min_index];\n}\n",
  "    let min = lst[0];\n    let min_index = 0;\n    for (let i = 1; i < lst.length;\
    \ i++) {\n        if (lst[i] < min) {\n            min = lst[i];\n           \
    \ min_index = i;\n        }\n    }\n    return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  let smallest = lst[0];\n  let i = 1;\n  while (i < lst.length) {\n  \
    \  if (lst[i] < smallest) {\n      smallest = lst[i];\n    }\n    i += 1;\n  }\n\
    \  return smallest;\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let\
    \ i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n\
    \  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let min =\
    \ Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === -1) {\n    return undefined;\n  }\n  let second_min =\
    \ Infinity;\n  let second_min_index = -1;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n\
    \      second_min_index = i;\n    }\n  }\n  return second_min_index === -1 ? undefined\
    \ : second_min;\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let\
    \ i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return\
    \ undefined;\n  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      minIndex = i;\n    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  let\
    \ min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let minIndex = 0;\n\
    \  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === 0 ? undefined\
    \ : lst[minIndex];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  let min = lst[0];\n  let\
    \ min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index ===\
    \ 0) {\n    return undefined;\n  }\n  return lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n\n  return lst[minIndex];\n}\n", "  let min = lst[0];\n  let minIndex\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === 0 ?\
    \ undefined : lst[minIndex];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i += 1) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  let min = Infinity;\n  let\
    \ min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  let min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === -1) return undefined;\n  let second_min = Infinity;\n\
    \  let second_min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index\
    \ = i;\n    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n \
    \   if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex\
    \ === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index + 1];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index\
    \ = i;\n    }\n  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  let\
    \ second_min = lst[min_index];\n  let second_min_index = min_index;\n  for (let\
    \ i = min_index + 1; i < lst.length; i++) {\n    if (lst[i] < second_min) {\n\
    \      second_min = lst[i];\n      second_min_index = i;\n    }\n  }\n  return\
    \ second_min;\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i += 1) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex\
    \ = i;\n    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n",
  "  let min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === -1) {\n    return undefined;\n  }\n  let second_min\
    \ = Infinity;\n  let second_min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n\
    \      second_min_index = i;\n    }\n  }\n  if (second_min_index === -1) {\n \
    \   return undefined;\n  }\n  return second_min;\n}\n", "  let min = lst[0];\n\
    \  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index\
    \ === 0 ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === 0) return\
    \ undefined;\n  return lst[min_index];\n}\n", "  let min = Infinity;\n  let min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return undefined;\n  }\n  let next_index = min_index + 1;\n  if (next_index\
    \ === lst.length) {\n    return min;\n  }\n  let next_min = Infinity;\n  for (let\
    \ i = next_index; i < lst.length; i++) {\n    if (lst[i] < next_min) {\n     \
    \ next_min = lst[i];\n    }\n  }\n  return next_min;\n}\n", "  let min = Infinity;\n\
    \  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return undefined;\n  }\n  for (let i = min_index + 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min;\n}\n", "  let min = Infinity;\n  let min_index = -1;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1) {\n   \
    \ return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index\
    \ = i;\n    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n",
  "  if (lst.length === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n  let\
    \ minIndex = 0;\n  for (let i = 1; i < lst.length; i += 1) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index\
    \ = i;\n    }\n  }\n  return lst[min_index];\n}\n", "  if (lst.length === 0) {\n\
    \    return undefined;\n  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for\
    \ (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      minIndex = i;\n    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n  let minIndex\
    \ = 0;\n\n  for (let i = 1; i < lst.length; i += 1) {\n    if (lst[i] < min) {\n\
    \      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  if (lst.length === 0) return undefined;\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return lst[min_index + 1];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n\
    }\n", "  let min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === -1) {\n    return undefined;\n  }\n  let second_min\
    \ = Infinity;\n  let second_min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n\
    \      second_min_index = i;\n    }\n  }\n  return second_min_index === -1 ? undefined\
    \ : second_min;\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let\
    \ i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === -1) {\n    return undefined;\n  }\n  let second_min =\
    \ Infinity;\n  let second_min_index = -1;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n\
    \      second_min_index = i;\n    }\n  }\n  if (second_min_index === -1) {\n \
    \   return undefined;\n  }\n  return second_min;\n}\n", "  let min = Infinity;\n\
    \  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  if\
    \ (lst.length === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n  let\
    \ minIndex = 0;\n  for (let i = 1; i < lst.length; i += 1) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex\
    \ + 1];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n  let min\
    \ = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i += 1) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return lst[minIndex];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n \
    \ for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min =\
    \ lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0 ? undefined\
    \ : lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i += 1) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n\n  return lst[minIndex];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "    let min = lst[0];\n    let min_index\
    \ = 0;\n    for (let i = 1; i < lst.length; i++) {\n        if (lst[i] < min)\
    \ {\n            min = lst[i];\n            min_index = i;\n        }\n    }\n\
    \    return lst[min_index + 1];\n}\n", "  let min = Infinity;\n  let min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return undefined;\n  }\n  for (let i = 0; i < lst.length; i++) {\n  \
    \  if (i === min_index) {\n      continue;\n    }\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n  }\n  return min;\n}\n", " \
    \ if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = Infinity;\n  let min_index = -1;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n     \
    \ min_index = i;\n    }\n  }\n  if (min_index === -1) {\n    return undefined;\n\
    \  }\n  let next_min = lst[min_index];\n  let next_min_index = min_index;\n  for\
    \ (let i = min_index + 1; i < lst.length; i++) {\n    if (lst[i] < next_min) {\n\
    \      next_min = lst[i];\n      next_min_index = i;\n    }\n  }\n  return next_min_index\
    \ === min_index ? undefined : next_min;\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === -1) {\n    return undefined;\n  }\n  for (let i = min_index\
    \ + 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? lst[1] : lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let\
    \ min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n\
    \  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index\
    \ === 0 ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0 ?\
    \ undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n\
    \  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index];\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  let min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === -1) {\n    return undefined;\n  }\n  let second_min\
    \ = Infinity;\n  let second_min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < second_min && lst[i] > min) {\n      second_min = lst[i];\n\
    \      second_min_index = i;\n    }\n  }\n  return second_min_index === -1 ? undefined\
    \ : second_min;\n}\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n\
    \n  let min = lst[0];\n  let min_index = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i += 1) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === 0) {\n\
    \    return undefined;\n  }\n  let second_min = lst[min_index];\n  let second_min_index\
    \ = min_index;\n  for (let i = min_index + 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < second_min) {\n      second_min = lst[i];\n      second_min_index = i;\n \
    \   }\n  }\n  return second_min;\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return\
    \ undefined;\n  }\n\n  let min = lst[0];\n  let minIndex = 0;\n\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      minIndex = i;\n    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  let\
    \ min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n \
    \   if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\
    \  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n\
    \  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index\
    \ === 0) {\n    return undefined;\n  }\n  let second_min = lst[min_index];\n \
    \ let second_min_index = min_index;\n  for (let i = min_index + 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < second_min) {\n      second_min = lst[i];\n      second_min_index\
    \ = i;\n    }\n  }\n  if (second_min_index === min_index) {\n    return undefined;\n\
    \  }\n  return second_min;\n}\n", "  let min = lst[0];\n  let minIndex = 0;\n\
    \  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex + 1];\n}\n",
  "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n\
    \  }\n  if (minIndex === 0) {\n    return undefined;\n  }\n  return lst[minIndex];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let\
    \ smallest = lst[0];\n  let second_smallest = lst[0];\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < smallest) {\n      second_smallest = smallest;\n  \
    \    smallest = lst[i];\n    } else if (lst[i] < second_smallest) {\n      second_smallest\
    \ = lst[i];\n    }\n  }\n  return second_smallest;\n}\n", "  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex\
    \ === 0 ? undefined : lst[minIndex];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === 0) return\
    \ undefined;\n  return lst[min_index];\n}\n", "  let min = Infinity;\n  let min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  if (min_index === 0) {\n    return undefined;\n  }\n  return lst[min_index];\n\
    }\n", "  let min = lst[0];\n  let minIndex = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      minIndex = i;\n\
    \    }\n  }\n  return minIndex === 0 ? undefined : lst[minIndex];\n}\n", "  let\
    \ min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  return lst[min_index];\n\
    }\n", "  if (lst.length === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return lst[min_index + 1];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return\
    \ undefined;\n  }\n\n  let min = lst[0];\n  let min_index = 0;\n\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n\n  return lst[min_index];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n  let minIndex\
    \ = 0;\n\n  for (let i = 1; i < lst.length; i += 1) {\n    if (lst[i] < min) {\n\
    \      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index\
    \ = i;\n    }\n  }\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let\
    \ min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index ===\
    \ 0) {\n    return undefined;\n  }\n  return lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", "  let min\
    \ = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n \
    \ }\n  return lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return undefined;\n\
    \  }\n\n  let min = lst[0];\n  let min_index = 0;\n\n  for (let i = 1; i < lst.length;\
    \ i += 1) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index\
    \ = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n  \
    \    min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0\
    \ ? undefined : lst[min_index];\n}\n", "  let min = lst[0];\n  let min_index =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0 ?\
    \ undefined : lst[min_index];\n}\n", "  let min = Infinity;\n  let min_index =\
    \ -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n   \
    \   min = lst[i];\n      min_index = i;\n    }\n  }\n  if (min_index === -1) {\n\
    \    return undefined;\n  }\n  let second_min = Infinity;\n  let second_min_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < second_min\
    \ && lst[i] > min) {\n      second_min = lst[i];\n      second_min_index = i;\n\
    \    }\n  }\n  return second_min_index === -1 ? undefined : second_min;\n}\n",
  "  if (lst.length === 0) {\n    return undefined;\n  }\n\n  let min = lst[0];\n\
    \  let minIndex = 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      minIndex = i;\n    }\n  }\n\n  return lst[minIndex\
    \ + 1];\n}\n", "    let min = lst[0];\n    let min_index = 0;\n    for (let i\
    \ = 1; i < lst.length; i++) {\n        if (lst[i] < min) {\n            min =\
    \ lst[i];\n            min_index = i;\n        }\n    }\n    return min_index\
    \ === 0 ? undefined : lst[min_index];\n}\n", "  if (lst.length === 0) {\n    return\
    \ undefined;\n  }\n\n  let min = lst[0];\n  let minIndex = 0;\n  for (let i =\
    \ 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n  \
    \    minIndex = i;\n    }\n  }\n\n  return lst[minIndex + 1];\n}\n", "  if (lst.length\
    \ === 0) {\n    return undefined;\n  }\n  let min = lst[0];\n  let minIndex =\
    \ 0;\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n    \
    \  min = lst[i];\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n}\n",
  "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  return lst[min_index];\n}\n", "  let min = lst[0];\n  let minIndex = 0;\n\
    \  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      minIndex = i;\n    }\n  }\n  return minIndex === 0 ? undefined\
    \ : lst[minIndex];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let\
    \ i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return lst[min_index + 1];\n}\n", "  let\
    \ min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \  }\n  if (min_index === -1) {\n    return undefined;\n  }\n  for (let i = min_index\
    \ + 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  return min_index === 0 ? lst[1] : lst[min_index];\n\
    }\n", "  let smallest = lst[0];\n  let second_smallest = lst[0];\n  for (let i\
    \ = 1; i < lst.length; i++) {\n    if (lst[i] < smallest) {\n      second_smallest\
    \ = smallest;\n      smallest = lst[i];\n    } else if (lst[i] < second_smallest)\
    \ {\n      second_smallest = lst[i];\n    }\n  }\n  return second_smallest;\n\
    }\n", "  let min = lst[0];\n  let min_index = 0;\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  return min_index === 0 ? undefined : lst[min_index];\n}\n", " \
    \ let min = Infinity;\n  let min_index = -1;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n\
    \    }\n  }\n  if (min_index === -1) {\n    return undefined;\n  }\n  for (let\
    \ i = min_index + 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n      min_index = i;\n    }\n  }\n  return min_index === 0 ? lst[1]\
    \ : lst[min_index - 1];\n}\n", "  let min = lst[0];\n  let min_index = 0;\n  for\
    \ (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \      min_index = i;\n    }\n  }\n  if (min_index === 0) {\n    return undefined;\n\
    \  }\n  let second_min = lst[min_index];\n  let second_min_index = min_index;\n\
    \  for (let i = min_index + 1; i < lst.length; i++) {\n    if (lst[i] < second_min)\
    \ {\n      second_min = lst[i];\n      second_min_index = i;\n    }\n  }\n  return\
    \ second_min;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

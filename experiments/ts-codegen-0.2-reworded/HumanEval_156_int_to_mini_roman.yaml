name: HumanEval_156_int_to_mini_roman
language: ts
prompt: "//Given a positive integer, obtain its roman numeral equivalent as a string,\n\
  // and return it in lowercase.\n// Restrictions: 1 <= num <= 1000\n// Examples:\n\
  // >>> int_to_mini_roman(19)\n// \"xix\"\n// >>> int_to_mini_roman(152)\n// \"clii\"\
  \n// >>> int_to_mini_roman(426)\n// \"cdxxvi\"\nfunction int_to_mini_roman(number:\
  \ number): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = int_to_mini_roman;\n  assert.deepEqual(candidate(19),\"\
  xix\");\n  assert.deepEqual(candidate(152),\"clii\");\n  assert.deepEqual(candidate(251),\"\
  ccli\");\n  assert.deepEqual(candidate(426),\"cdxxvi\");\n  assert.deepEqual(candidate(500),\"\
  d\");\n  assert.deepEqual(candidate(1),\"i\");\n  assert.deepEqual(candidate(4),\"\
  iv\");\n  assert.deepEqual(candidate(43),\"xliii\");\n  assert.deepEqual(candidate(90),\"\
  xc\");\n  assert.deepEqual(candidate(94),\"xciv\");\n  assert.deepEqual(candidate(532),\"\
  dxxxii\");\n  assert.deepEqual(candidate(900),\"cm\");\n  assert.deepEqual(candidate(994),\"\
  cmxciv\");\n  assert.deepEqual(candidate(1000),\"m\");\n}\n\ntest();"
completions: ["  let result = ''\n  let num = number\n  let i = 0\n  let j = 0\n \
    \ let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n\
    \  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n\
    \  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n\
    \  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n\
    \  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n\
    \  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n\
    \  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n\
    \  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n\
    \  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m = 0\n  let", "  const roman_numeral_map = {\n\
    \    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500:\
    \ 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0)\
    \ {\n    const roman_numeral_part = roman_numeral_map[number % 10];\n    roman_numeral\
    \ = roman_numeral_part + roman_numeral;\n    number = Math.floor(number / 10);\n\
    \  }\n  return roman_numeral.toLowerCase();\n}\n", "    let roman_numeral = '';\n\
    \    let roman_numeral_array = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x',\
    \ 'ix', 'v', 'iv', 'i'];\n    let number_array = number.toString().split('');\n\
    \    let i = 0;\n    while (number_array.length > 0) {\n        if (number_array.length\
    \ > 1) {\n            roman_numeral += roman_numeral_array[number_array[0] - 1]\
    \ + number_array[1];\n            number_array.splice(0, 2);\n        } else {\n\
    \            roman_numeral += roman_numeral_array[number_array[0] - 1];\n    \
    \        number_array.splice(0, 1);\n        }\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  let result = ''\n  let num = number\n  let roman_num = []\n  let roman_num_len\
    \ = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let roman_num_len_max = 0\n  let\
    \ roman_num_len_min = 0\n  let roman_num_len_min_max = 0\n  let roman_num_len_min_min\
    \ = 0\n  let roman_num_len_min_max_min = 0\n  let roman_num_len_min_min_max =\
    \ 0\n  let roman_num_len_min_min_max_min = 0\n  let roman_num_len_min_min_max_min_max\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min = 0\n  let roman_num_len_min_min_max_min_max_min_max\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min_max_min = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max_min = 0\n  let\
    \ roman_num_len_min_min_max_min_max_min_max_min_max_min_max = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0\n  let roman_num_len_min_min_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0\n  let roman_num_len_min_min", "    let result = '';\n    let num = number;\n\
    \    let roman_map = {\n        'I': 'x',\n        'V': 'v',\n        'X': 'l',\n\
    \        'L': 'c',\n        'C': 'd',\n        'D': 'm',\n        'M': '',\n \
    \   };\n    while (num > 0) {\n        let roman = roman_map[num % 10];\n    \
    \    result = roman + result;\n        num = Math.floor(num / 10);\n    }\n  \
    \  return result;\n}\n", "  let result = ''\n  let num = number\n  let i = 0\n\
    \  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n\
    \  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n\
    \  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\n  while (num\
    \ > 0) {\n    if (num >= 1000) {\n      result += 'm'\n      num -= 1000\n   \
    \ } else if (num >= 900) {\n      result += 'cm'\n      num -= 900\n    } else\
    \ if (num >= 500) {\n      result += 'd'\n      num -= 500\n    } else if (num\
    \ >= 400) {\n      result += 'cd'\n      num -= 400\n    } else if (num >= 100)\
    \ {\n      result += 'c'\n      num -= 100\n    } else if (num >= 90) {\n    \
    \  result += 'xc'\n      num -= 90\n    } else if (num >= 50) {\n      result\
    \ += 'l'\n      num -= 50\n    } else if (num >= 40) {\n      result += 'xl'\n\
    \      num -= 40\n    } else if (num >= 10) {\n      result += 'x'\n      num\
    \ -= 10\n    } else if (num >= 9) {\n      result += 'ix'\n      num -= 9\n  \
    \  } else if (num >= 5) {\n      result += 'v'\n      num -= 5\n    } else if\
    \ (num >= 4) {\n      result += 'iv'\n      num -= 4\n    } else if (num >= 1)\
    \ {\n      result += 'i'\n      num -= 1\n    }\n  }\n\n  return result\n}\n",
  "    let result = ''\n    let roman_num = ''\n    let i = 0\n    let j = 0\n   \
    \ let num_array = []\n    let num_array_length = []\n    let num_array_length_length\
    \ = []\n    let num_array_length_length_length = []\n    let num_array_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length = []\n    let num_array_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length = []\n\
    \    let num_array_length_length_length_length_length_length_length_length = []\n\
    \    let num_array_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length\
    \ = []\n    let num_array_length_length_length_length_length_length_length_length_length_length_length_length_length_length_length",
  "  const result = [];\n  let num = number;\n  while (num > 0) {\n    const digit\
    \ = num % 10;\n    if (digit === 1) {\n      result.push('i');\n    } else if\
    \ (digit === 2) {\n      result.push('ii');\n    } else if (digit === 3) {\n \
    \     result.push('iii');\n    } else if (digit === 4) {\n      result.push('iv');\n\
    \    } else if (digit === 5) {\n      result.push('v');\n    } else if (digit\
    \ === 6) {\n      result.push('vi');\n    } else if (digit === 7) {\n      result.push('vii');\n\
    \    } else if (digit === 8) {\n      result.push('viii');\n    } else if (digit\
    \ === 9) {\n      result.push('ix');\n    } else if (digit === 0) {\n      result.push('x');\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return result.join('');\n}\n",
  "  let result = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let k = 0\n\
    \  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n\
    \  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n\
    \  let x = 0\n  let y = 0\n  let z = 0\n\n  while (num > 0) {\n    if (num >=\
    \ 1000) {\n      result += 'm'\n      num -= 1000\n    } else if (num >= 900)\
    \ {\n      result += 'cm'\n      num -= 900\n    } else if (num >= 500) {\n  \
    \    result += 'd'\n      num -= 500\n    } else if (num >= 400) {\n      result\
    \ += 'cd'\n      num -= 400\n    } else if (num >= 100) {\n      result += 'c'\n\
    \      num -= 100\n    } else if (num >= 90) {\n      result += 'xc'\n      num\
    \ -= 90\n    } else if (num >= 50) {\n      result += 'l'\n      num -= 50\n \
    \   } else if (num >= 40) {\n      result += 'xl'\n      num -= 40\n    } else\
    \ if (num >= 10) {\n      result += 'x'\n      num -= 10\n    } else if (num >=\
    \ 9) {\n      result += 'ix'\n      num -= 9\n    } else if (num >= 5) {\n   \
    \   result += 'v'\n      num -= 5\n    } else if (num >= 4) {\n      result +=\
    \ 'iv'\n      num -= 4\n    } else if (num >= 1) {\n      result += 'i'\n    \
    \  num -= 1\n    }\n  }\n\n  return result\n}\n", "  const roman_numerals = {\n\
    \    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\"\
    ,\n    500: \"d\",\n    1000: \"m\",\n  };\n\n  let result = \"\";\n  for (let\
    \ i = number; i > 0; i -= 1) {\n    result += roman_numerals[i];\n  }\n\n  return\
    \ result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1: \"i\",\n  \
    \  5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\"\
    ,\n    1000: \"m\",\n  };\n\n  let result = \"\";\n  while (number > 0) {\n  \
    \  const roman_numeral = roman_numerals[number % 1000];\n    result = roman_numeral\
    \ + result;\n    number = Math.floor(number / 1000);\n  }\n\n  return result.toLowerCase();\n\
    }\n", "  let roman_numeral = '';\n  let num = number;\n  let i = 0;\n  while (num\
    \ > 0) {\n    let roman_digit = roman_digits[num % 10];\n    if (i > 0 && roman_digit\
    \ !== 'I') {\n      roman_numeral = roman_numeral + roman_digit;\n    } else {\n\
    \      roman_numeral = roman_numeral + roman_digit;\n    }\n    num = Math.floor(num\
    \ / 10);\n    i++;\n  }\n  return roman_numeral.toLowerCase();\n}\n", "  let result\
    \ = ''\n  let num = number\n  let i = 0\n  while (num > 0) {\n    let digit =\
    \ num % 10\n    if (digit === 4 || digit === 9) {\n      result += 'v'\n    }\
    \ else if (digit === 5) {\n      result += 'x'\n    } else if (digit === 6) {\n\
    \      result += 'l'\n    } else if (digit === 7) {\n      result += 'c'\n   \
    \ } else if (digit === 8) {\n      result += 'd'\n    } else if (digit === 2)\
    \ {\n      result += 'ii'\n    } else if (digit === 1) {\n      result += 'i'\n\
    \    }\n    num = Math.floor(num / 10)\n  }\n  return result\n}\n", "  const roman_numerals\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  for (let i =\
    \ number; i > 0; i -= roman_numerals[i]) {\n    roman_numeral += roman_numerals[i];\n\
    \  }\n  return roman_numeral;\n}\n", "  const roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm',\n  };\n  let result = '';\n  while (number > 0) {\n    const roman_numeral\
    \ = roman_numerals[number % 1000];\n    result = roman_numeral + result;\n   \
    \ number = Math.floor(number / 1000);\n  }\n  return result.toLowerCase();\n}\n",
  "  let result = ''\n  let num = number\n  let roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm'\n  }\n  let i = 0\n  while (num > 0) {\n    let roman_num = roman_numerals[num]\n\
    \    if (i > 0) {\n      result = roman_num + result\n    } else {\n      result\
    \ = roman_num\n    }\n    num -= roman_numerals[num]\n    i++\n  }\n  return result\n\
    }\n", "    let result = '';\n    let roman_numeral = {\n        'I': 1,\n    \
    \    'V': 5,\n        'X': 10,\n        'L': 50,\n        'C': 100,\n        'D':\
    \ 500,\n        'M': 1000\n    };\n    for (let i = 0; i < number; i++) {\n  \
    \      let value = roman_numeral[number % 10];\n        result += value;\n   \
    \     number = Math.floor(number / 10);\n    }\n    return result.toLowerCase();\n\
    }\n", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n\
    \  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n\
    \  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n\
    \  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n\
    \  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n\
    \  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n\
    \  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n\
    \  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n\
    \  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m =", "  const roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm',\n  }\n  let roman_numeral = ''\n  while (number > 0) {\n    const num =\
    \ number % 10\n    if (num === 1) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 5) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 10) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 50) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 100) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 500) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    } else if (num === 1000) {\n      roman_numeral += roman_numerals[num]\n\
    \      number -= num\n    }\n  }\n  return roman_numeral.toLowerCase()\n}\n",
  "  let result = ''\n  let num = number\n  let roman_num = []\n  let roman_num_map\
    \ = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n \
    \   'D': 500,\n    'M': 1000\n  }\n\n  while (num > 0) {\n    roman_num.unshift(num\
    \ % 10)\n    num = Math.floor(num / 10)\n  }\n\n  for (let i = roman_num.length\
    \ - 1; i >= 0; i--) {\n    result += roman_num_map[roman_num[i]]\n  }\n\n  return\
    \ result\n}\n", "  let roman_numeral = '';\n  let num = number;\n  let i = 0;\n\
    \  while (num > 0) {\n    let digit = num % 10;\n    if (digit === 9) {\n    \
    \  roman_numeral += 'x';\n    } else if (digit === 4) {\n      roman_numeral +=\
    \ 'c';\n    } else if (digit === 5) {\n      roman_numeral += 'd';\n    } else\
    \ if (digit === 6) {\n      roman_numeral += 'm';\n    } else if (digit === 7)\
    \ {\n      roman_numeral += 'l';\n    } else if (digit === 8) {\n      roman_numeral\
    \ += 'x';\n    } else if (digit === 1) {\n      roman_numeral += 'i';\n    } else\
    \ if (digit === 2) {\n      roman_numeral += 'v';\n    } else if (digit === 3)\
    \ {\n      roman_numeral += 'i';\n    }\n    num = Math.floor(num / 10);\n  }\n\
    \  return roman_numeral.toLowerCase();\n}\n", "    if (number < 1 || number >\
    \ 1000) {\n        throw new Error(\"Invalid number\");\n    }\n    let result\
    \ = \"\";\n    let num = number;\n    let roman_num = [\"\", \"i\", \"ii\", \"\
    iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"];\n    let i = 0;\n  \
    \  while (num > 0) {\n        let digit = num % 10;\n        num = num / 10;\n\
    \        if (digit > 0 && digit <= 4) {\n            result = roman_num[i] + result;\n\
    \        } else if (digit === 5) {\n            result = \"v\" + result;\n   \
    \     } else if (digit === 6) {\n            result = \"vi\" + result;\n     \
    \   } else if (digit === 7) {\n            result = \"vii\" + result;\n      \
    \  } else if (digit === 8) {\n            result = \"viii\" + result;\n      \
    \  } else if (digit === 9) {\n            result = \"ix\" + result;\n        }\n\
    \        i++;\n    }\n    return result.toLowerCase();\n}\n", "  let roman_numeral\
    \ = ''\n  let num = number\n  let roman_num = []\n  let roman_num_map = {\n  \
    \  'I': '',\n    'V': '',\n    'X': '',\n    'L': '',\n    'C': '',\n    'D':\
    \ '',\n    'M': '',\n  }\n\n  while (num > 0) {\n    let roman_num_key = Math.floor(num\
    \ / 10)\n    roman_num_map[roman_num_key] = roman_num_map[roman_num_key] + 1\n\
    \    num = num % 10\n  }\n\n  for (let i = 0; i < roman_num_map.length; i++) {\n\
    \    while (roman_num_map[i] > 0) {\n      roman_num_map[i] -= 1\n      roman_numeral\
    \ += roman_num_map[i]\n    }\n  }\n\n  return roman_numeral\n}\n", "  const result\
    \ = [];\n  while (number > 0) {\n    const digit = number % 10;\n    result.push(digit\
    \ === 9 ? 'x' : digit === 4 ? 'l' : digit === 5 ? 'x' : digit === 6 ? 'c' : digit\
    \ === 7 ? 'x' : digit === 8 ? 'l' : digit === 9 ? 'x' : digit);\n    number =\
    \ Math.floor(number / 10);\n  }\n  return result.join('');\n}\n", "  let result\
    \ = ''\n  let num = number\n  let roman_num = []\n  let roman_num_length = 0\n\
    \  let roman_num_index = 0\n  let roman_num_index_2 = 0\n  let roman_num_index_3\
    \ = 0\n  let roman_num_index_4 = 0\n  let roman_num_index_5 = 0\n  let roman_num_index_6\
    \ = 0\n  let roman_num_index_7 = 0\n  let roman_num_index_8 = 0\n  let roman_num_index_9\
    \ = 0\n  let roman_num_index_10 = 0\n  let roman_num_index_11 = 0\n  let roman_num_index_12\
    \ = 0\n  let roman_num_index_13 = 0\n  let roman_num_index_14 = 0\n  let roman_num_index_15\
    \ = 0\n  let roman_num_index_16 = 0\n  let roman_num_index_17 = 0\n  let roman_num_index_18\
    \ = 0\n  let roman_num_index_19 = 0\n  let roman_num_index_20 = 0\n  let roman_num_index_21\
    \ = 0\n  let roman_num_index_22 = 0\n  let roman_num_index_23 = 0\n  let roman_num_index_24\
    \ = 0\n  let roman_num_index_25 = 0\n  let roman_num_index_26 = 0\n  let roman_num_index_27\
    \ = 0\n  let roman_num_index_28 = 0\n  let roman_num_index_29 = 0\n  let roman_num_index_30\
    \ = 0\n  let roman_num_index_31 = 0\n  let roman_num_index_32 = 0\n  let roman_num_index_33\
    \ = 0\n  let roman_num_index_34 = 0\n  let roman_num_index_35 = 0\n  let roman_num_index_36\
    \ = 0\n  let roman_num_index_37 = 0\n  ", "  let roman_numeral = '';\n  let num\
    \ = number;\n  let roman_num = {\n    '1000': 'm',\n    '900': 'cm',\n    '500':\
    \ 'd',\n    '400': 'cd',\n    '100': 'c',\n    '90': 'xc',\n    '50': 'l',\n \
    \   '40': 'xl',\n    '10': 'x',\n    '9': 'ix',\n    '5': 'v',\n    '4': 'iv',\n\
    \    '1': 'i'\n  };\n  for (let key in roman_num) {\n    while (num >= key) {\n\
    \      roman_numeral += roman_num[key];\n      num -= key;\n    }\n  }\n  return\
    \ roman_numeral;\n}\n", "    let result = '';\n    let num = number;\n    let\
    \ roman_numerals = {\n        1: 'i',\n        5: 'v',\n        10: 'x',\n   \
    \     50: 'l',\n        100: 'c',\n        500: 'd',\n        1000: 'm'\n    };\n\
    \    for (let key in roman_numerals) {\n        while (num >= key) {\n       \
    \     result += roman_numerals[key];\n            num -= key;\n        }\n   \
    \ }\n    return result;\n}\n", "  let roman_numeral = '';\n  let num = number;\n\
    \  let roman_num = {\n    '1': 'i',\n    '2': 'ii',\n    '3': 'iii',\n    '4':\
    \ 'iv',\n    '5': 'v',\n    '6': 'vi',\n    '7': 'vii',\n    '8': 'viii',\n  \
    \  '9': 'ix',\n    '10': 'x',\n    '11': 'xi',\n    '12': 'xii',\n    '13': 'xiii',\n\
    \    '14': 'xiv',\n    '15': 'xv',\n    '16': 'xvi',\n    '17': 'xvii',\n    '18':\
    \ 'xviii',\n    '19': 'xix',\n    '20': 'xx',\n    '30': 'xxx',\n    '40': 'xl',\n\
    \    '50': 'l',\n    '60': 'lx',\n    '70': 'lxx',\n    '80': 'lxxx',\n    '90':\
    \ 'lxxxx',\n    '100': 'xc',\n    '200': 'cc',\n    '300': 'ccc',\n    '400':\
    \ 'cd',\n    '500': 'd',\n    '600': 'dxc',\n    '700': 'dxx',\n    '800': 'dxxx',\n\
    \    '900': 'dxxxx',\n    '1000': 'm'\n  };\n  while (num > 0) {\n    let roman_digit\
    \ = roman_num[num % 1000];\n    if (roman_digit !== undefined) {\n      roman_numeral\
    \ = roman_numeral + roman_digit;\n      num = Math.floor(num / 1000);\n    } else\
    \ {\n      roman_numeral = roman_numeral + roman_num[num % 100];\n      num =\
    \ Math.floor(num / 100);\n    }\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n  \
    \  50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\n  let result\
    \ = '';\n  while (number > 0) {\n    const roman_numeral = roman_numerals[number\
    \ % 1000];\n    result = roman_numeral + result;\n    number = Math.floor(number\
    \ / 1000);\n  }\n\n  return result.toLowerCase();\n}\n", "  let result = ''\n\
    \  let num = number\n  let i = 0\n  let roman_num = []\n  while (num > 0) {\n\
    \    roman_num.push(num % 10)\n    num = Math.floor(num / 10)\n  }\n  while (i\
    \ < roman_num.length) {\n    if (roman_num[i] === 5) {\n      result += 'v'\n\
    \    } else if (roman_num[i] === 4) {\n      result += 'iv'\n    } else if (roman_num[i]\
    \ === 9) {\n      result += 'x'\n    } else if (roman_num[i] === 8) {\n      result\
    \ += 'ix'\n    } else if (roman_num[i] === 7) {\n      result += 'x'\n    } else\
    \ if (roman_num[i] === 6) {\n      result += 'vi'\n    } else if (roman_num[i]\
    \ === 3) {\n      result += 'm'\n    } else if (roman_num[i] === 2) {\n      result\
    \ += 'ii'\n    } else if (roman_num[i] === 1) {\n      result += 'i'\n    }\n\
    \    i++\n  }\n  return result\n}\n", "  if (number < 1 || number > 1000) {\n\
    \    throw new Error('Invalid number');\n  }\n  const roman_numerals = {\n   \
    \ 1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm',\n  };\n  let result = '';\n  for (let i = 1000; i >= number; i\
    \ -= 100) {\n    result += roman_numerals[i];\n  }\n  for (let i = 100; i >= number;\
    \ i -= 10) {\n    result += roman_numerals[i];\n  }\n  for (let i = 10; i >= number;\
    \ i -= 1) {\n    result += roman_numerals[i];\n  }\n  return result.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n \
    \   50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\n  let result\
    \ = '';\n  let current = number;\n  while (current > 0) {\n    const value = roman_numerals[current];\n\
    \    if (value) {\n      result = value + result;\n    }\n    current -= 1;\n\
    \  }\n\n  return result.toLowerCase();\n}\n", "    const roman_numerals = {\n\
    \        1: \"i\",\n        5: \"v\",\n        10: \"x\",\n        50: \"l\",\n\
    \        100: \"c\",\n        500: \"d\",\n        1000: \"m\",\n    };\n    let\
    \ result = \"\";\n    while (number > 0) {\n        const roman_numeral = roman_numerals[number\
    \ % 10];\n        result = roman_numeral + result;\n        number = Math.floor(number\
    \ / 10);\n    }\n    return result.toLowerCase();\n}\n", "  if (number <= 0) {\n\
    \    throw new Error('Invalid number');\n  }\n\n  const roman_numerals = {\n \
    \   1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500:\
    \ 'd',\n    1000: 'm',\n  };\n\n  let result = '';\n  while (number > 0) {\n \
    \   const roman_numeral = roman_numerals[number % 1000];\n    result = roman_numeral\
    \ + result;\n    number = Math.floor(number / 1000);\n  }\n\n  return result.toLowerCase();\n\
    }\n", "  const result = [];\n  let current = number;\n  let previous = 0;\n  let\
    \ i = 0;\n  while (current > 0) {\n    const roman = roman_numerals[current %\
    \ 10];\n    if (roman !== undefined) {\n      result.push(roman);\n      previous\
    \ = current;\n    }\n    current = Math.floor(current / 10);\n    i++;\n  }\n\
    \  if (previous === 0) {\n    return result.join(\"\");\n  }\n  const roman =\
    \ roman_numerals[previous % 10];\n  result.push(roman);\n  return result.join(\"\
    \");\n}\n", "  const roman_numeral_map = {\n    1: \"i\",\n    5: \"v\",\n   \
    \ 10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\"\
    ,\n  };\n  const roman_numeral_list = [\n    \"\",\n    \"i\",\n    \"ii\",\n\
    \    \"iii\",\n    \"iv\",\n    \"v\",\n    \"vi\",\n    \"vii\",\n    \"viii\"\
    ,\n    \"ix\",\n    \"x\",\n    \"xi\",\n    \"xii\",\n    \"xiii\",\n    \"xiv\"\
    ,\n    \"xv\",\n    \"xvi\",\n    \"xvii\",\n    \"xviii\",\n    \"xix\",\n  \
    \  \"xx\",\n    \"xxi\",\n    \"xxii\",\n    \"xxiii\",\n    \"xxiv\",\n    \"\
    xxv\",\n    \"xxvi\",\n    \"xxvii\",\n    \"xxviii\",\n    \"xxix\",\n    \"\
    xxx\",\n    \"xxxi\",\n    \"xxxii\",\n    \"xxxiii\",\n    \"xxxiv\",\n    \"\
    xxxv\",\n    \"xxxvi\",\n    \"xxxvii\",\n    \"xxxviii\",\n    \"xxxix\",\n \
    \   \"xxxx\",\n    \"xxxxi\",\n    \"xxxxii\",\n    \"xxxxiii\",\n    \"xxxxiv\"\
    ,\n    \"xxxxv\",\n    \"xxxxvi\",\n    \"xxxxvii\",\n    \"xxxxviii\",\n    \"\
    xxxxix\",\n    \"xxxxx\",\n    \"xxxxxi\",\n    \"xxxxxii\",\n    \"xxxxxiii\"\
    ,\n    \"xxxxxiv\",\n    \"xxxxxv\",\n    \"xxxxxvi\",\n    \"xxxxxvii\",\n  \
    \  \"xxxxxviii\",\n    \"xxxxxix\",\n    \"xxxxxx\",\n    \"xxxxxxi\",\n    \"\
    xxxxxxii\",\n    \"xxxxxxiii\",\n    \"xxxxxxiv\",\n    \"xxxxxxv\",\n    \"xxxxxxvi\"\
    ,\n    \"xxxxxxvii\",\n    \"xxxxxxviii\",\n    \"xxxxxxix\",\n    ", "  let result\
    \ = ''\n  let num = number\n  let num_str = ''\n  let i = 0\n  let roman_num =\
    \ ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix']\n  let roman_num_len\
    \ = roman_num.length\n  while (num > 0) {\n    num_str = num % 10\n    num = Math.floor(num\
    \ / 10)\n    result = roman_num[i] + result\n    i = i + 1\n    if (i === roman_num_len)\
    \ {\n      result = num_str + result\n    }\n  }\n  return result\n}\n", "  const\
    \ result = [];\n  const digits = number.toString();\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    const digit = digits[i];\n    const roman = roman_digits[digit];\n\
    \    result.push(roman);\n  }\n  return result.join(\"\");\n}\n", "  const roman_numerals\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number\
    \ > 0) {\n    const value = number % 10;\n    number = number / 10;\n    roman_numeral\
    \ = roman_numerals[value] + roman_numeral;\n  }\n  return roman_numeral;\n}\n",
  "    let result = '';\n    let num = number;\n    let num_array = [];\n    let num_array_length\
    \ = 0;\n    let num_array_length_max = 0;\n    let num_array_length_min = 0;\n\
    \    let num_array_length_min_max = 0;\n    let num_array_length_min_min = 0;\n\
    \    let num_array_length_min_max_min = 0;\n    let num_array_length_min_max_min_max\
    \ = 0;\n    let num_array_length_min_max_min_min = 0;\n    let num_array_length_min_max_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min = 0;\n    let num_array_length_min_max_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min = 0;\n    let\
    \ num_array_length_min_max_min_min_min_min_min_min_min = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min_min =\
    \ 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let num_array_length_min_max_min_min_min_min_min_min_min_min", " \
    \   let result = ''\n    let roman_numerals = {\n        'I': 1,\n        'V':\
    \ 5,\n        'X': 10,\n        'L': 50,\n        'C': 100,\n        'D': 500,\n\
    \        'M': 1000\n    }\n    for (let key in roman_numerals) {\n        while\
    \ (number >= roman_numerals[key]) {\n            result += key\n            number\
    \ -= roman_numerals[key]\n        }\n    }\n    return result\n}\n", "  let result\
    \ = ''\n  let num = number\n  let i = 0\n  while (num > 0) {\n    let roman_num\
    \ = roman_numerals[num % 10]\n    if (num % 10 !== 1) {\n      result = roman_num\
    \ + result\n    } else {\n      result = roman_num\n    }\n    num = Math.floor(num\
    \ / 10)\n  }\n  return result\n}\n", "    let roman_numeral = '';\n    let num\
    \ = number;\n    let num_array = [];\n    let num_array_length = 0;\n    let num_array_length_max\
    \ = 0;\n    let num_array_length_min = 0;\n    let num_array_length_max_min =\
    \ 0;\n    let num_array_length_min_max = 0;\n    let num_array_length_min_max_min\
    \ = 0;\n    let num_array_length_min_max_min_max = 0;\n    let num_array_length_min_max_min_max_min\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max = 0;\n    let num_array_length_min_max_min_max_min_max_min\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max = 0;\n    let\
    \ num_array_length_min_max_min_max_min_max_min_max_min = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min =\
    \ 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let num_array_length_min_max_min_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;", "  let result = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let\
    \ k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let\
    \ q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let\
    \ w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let\
    \ c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let\
    \ i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let\
    \ o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let\
    \ u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let\
    \ a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let\
    \ g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let\
    \ m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let\
    \ s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let\
    \ y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let\
    \ e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let\
    \ k = 0\n  let l = 0\n  let m = 0\n  let", "  let roman_numeral = '';\n  let num\
    \ = number;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m =\
    \ 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n \
    \ let s = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x\
    \ = 0;\n  let y = 0;\n  let z = 0;\n\n  while (num > 0) {\n    while (num >= 1000)\
    \ {\n      roman_numeral += 'm';\n      num -= 1000;\n    }\n    while (num >=\
    \ 900) {\n      roman_numeral += 'cm';\n      num -= 900;\n    }\n    while (num\
    \ >= 500) {\n      roman_numeral += 'd';\n      num -= 500;\n    }\n    while\
    \ (num >= 400) {\n      roman_numeral += 'cd';\n      num -= 400;\n    }\n   \
    \ while (num >= 100) {\n      roman_numeral += 'c';\n      num -= 100;\n    }\n\
    \    while (num >= 90) {\n      roman_numeral += 'xc';\n      num -= 90;\n   \
    \ }\n    while (num >= 50) {\n      roman_numeral += 'l';\n      num -= 50;\n\
    \    }\n    while (num >= 40) {\n      roman_numeral += 'xl';\n      num -= 40;\n\
    \    }\n    while (num >= 10) {\n      roman_numeral += 'x';\n      num -= 10;\n\
    \    }\n    while (num >= 9) {\n      roman_numeral += 'ix';\n      num -= 9;\n\
    \    }\n    while (num >= 5) {\n      roman_numeral += 'v';\n      num -= 5;\n\
    \    }\n    while (num >= 4) {\n      roman_numeral += 'iv';\n      num -= 4;\n\
    \    }\n    while (num >= 1) {\n      roman_numeral += 'i';\n      num -=", " \
    \ if (number <= 0) {\n    throw new Error('number must be positive');\n  }\n \
    \ if (number > 1000) {\n    throw new Error('number must be less than 1000');\n\
    \  }\n  let result = '';\n  let num = number;\n  let i = 0;\n  while (num > 0)\
    \ {\n    let roman = roman_numerals[num % 10];\n    result = roman + result;\n\
    \    num = Math.floor(num / 10);\n    i++;\n  }\n  return result.toLowerCase();\n\
    }\n", "  let result = ''\n  let num = number\n  let num_array = []\n  let i =\
    \ 0\n  let j = 0\n  let k = 0\n  let num_array_length = 0\n  let num_array_length_max\
    \ = 0\n  let num_array_length_min = 0\n  let num_array_length_min_max = 0\n  let\
    \ num_array_length_min_min = 0\n  let num_array_length_min_min_max = 0\n  let\
    \ num_array_length_min_min_min = 0\n  let num_array_length_min_min_min_max = 0\n\
    \  let num_array_length_min_min_min_min = 0\n  let num_array_length_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min = 0\n  let num_array_length_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min_min = 0\n  let num_array_length_min_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min_min_min = 0\n  let num_array_length_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min_min_min_min = 0\n  let num_array_length_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min_min_min_min_min = 0\n  let num_array_length_min_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_min_min_min_min_min_min_min_min_min_min = 0\n  let\
    \ num_array_length_min_min_min_min_min_min_min_min_min_min_max = 0\n  let num_array_length_min_min_",
  "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n\
    \  while (number > 0) {\n    const value = number % 10;\n    roman_numeral = roman_numerals[value]\
    \ + roman_numeral;\n    number = Math.floor(number / 10);\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\"\
    ,\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n\
    \  const roman_numerals_keys = Object.keys(roman_numerals);\n  const roman_numerals_values\
    \ = Object.values(roman_numerals);\n  const roman_numerals_length = roman_numerals_keys.length;\n\
    \  const roman_numerals_index = Math.floor(number / roman_numerals_length);\n\
    \  const roman_numerals_value = roman_numerals_values[roman_numerals_index];\n\
    \  return roman_numerals[number] || roman_numerals_value;\n}\n", "  const roman_numeral_map\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number\
    \ > 0) {\n    const value = number % 10;\n    number = number / 10;\n    roman_numeral\
    \ = roman_numeral_map[value] + roman_numeral;\n  }\n  return roman_numeral;\n\
    }\n", "    let result = ''\n    let num = number\n    let roman_num = []\n   \
    \ let roman_num_len = []\n    let roman_num_len_len = []\n    let roman_num_len_len_len\
    \ = []\n    let roman_num_len_len_len_len = []\n    let roman_num_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len = []\n    let roman_num_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len = []\n    let roman_num_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len = []\n    let\
    \ roman_num_len_len_len_len_len_len_len_len_len_len_len = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len_len\
    \ = []\n    let roman_num_len_len_len_len_len_len_len_len_len_len_len_len_len",
  "  let result = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let k = 0\n\
    \  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n\
    \  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n\
    \  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n\
    \  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n\
    \  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n\
    \  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n\
    \  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n\
    \  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n\
    \  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n\
    \  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n\
    \  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n\
    \  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n\
    \  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n\
    \  let l = 0\n  let m = 0\n  let", "  const roman_numerals = {\n    1: \"i\",\n\
    \    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\"\
    ,\n    1000: \"m\",\n  };\n  let result = \"\";\n  while (number > 0) {\n    const\
    \ roman_numeral = roman_numerals[number % 1000];\n    result = roman_numeral +\
    \ result;\n    number = Math.floor(number / 1000);\n  }\n  return result.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  let result = '';\n  let num = number;\n  let i = 0;\n  while (num > 0)\
    \ {\n    let roman = roman_numerals[num % 10];\n    if (roman.length > i) {\n\
    \      result += roman[i];\n    }\n    i++;\n    num = Math.floor(num / 10);\n\
    \  }\n  return result.toLowerCase();\n}\n", "    if (number <= 0) {\n        throw\
    \ new Error(\"Invalid number\");\n    }\n    let result = \"\";\n    let num =\
    \ number;\n    let last_digit = 0;\n    while (num > 0) {\n        let digit =\
    \ num % 10;\n        if (digit == 9 || digit == 4 || digit == 5) {\n         \
    \   result = \"x\" + result;\n        } else if (digit == 9 || digit == 4) {\n\
    \            result = \"l\" + result;\n        } else if (digit == 5) {\n    \
    \        result = \"c\" + result;\n        } else {\n            result = digit\
    \ + result;\n        }\n        num = num / 10;\n    }\n    return result;\n}\n",
  "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let roman_numeral_array\
    \ = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n\
    \  let roman_numeral_array_length = roman_numeral_array.length\n  while (num >\
    \ 0) {\n    if (num >= 1000) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 1]\n      num -= 1000\n    } else if (num >= 900) {\n      roman_numeral +=\
    \ roman_numeral_array[roman_numeral_array_length - 2]\n      num -= 900\n    }\
    \ else if (num >= 500) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 3]\n      num -= 500\n    } else if (num >= 400) {\n      roman_numeral +=\
    \ roman_numeral_array[roman_numeral_array_length - 4]\n      num -= 400\n    }\
    \ else if (num >= 100) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 5]\n      num -= 100\n    } else if (num >= 90) {\n      roman_numeral +=\
    \ roman_numeral_array[roman_numeral_array_length - 6]\n      num -= 90\n    }\
    \ else if (num >= 50) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 7]\n      num -= 50\n    } else if (num >= 40) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 8]\n      num -= 40\n    } else if (num >= 10) {\n      roman_numeral += roman_numeral_array[roman_numeral_array_length\
    \ - 9]\n      num -= 10\n    } else if (num >= 9) {\n      roman_numeral += roman_numeral_array[roman",
  "  let roman_numeral = '';\n  let num = number;\n  let i = 0;\n  while (num > 0)\
    \ {\n    let roman_num = roman_numeral_map[num % 10];\n    roman_numeral += roman_num;\n\
    \    num = Math.floor(num / 10);\n    i++;\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "    let roman_numeral = '';\n    let num = number;\n    let i = 0;\n  \
    \  while (num > 0) {\n        let roman_digit = num % 10;\n        if (roman_digit\
    \ === 4 || roman_digit === 9) {\n            roman_numeral += 'v';\n        }\
    \ else if (roman_digit === 5) {\n            roman_numeral += 'x';\n        }\
    \ else if (roman_digit === 6) {\n            roman_numeral += 'l';\n        }\
    \ else if (roman_digit === 7) {\n            roman_numeral += 'c';\n        }\
    \ else if (roman_digit === 8) {\n            roman_numeral += 'd';\n        }\
    \ else if (roman_digit === 0) {\n            roman_numeral += 'i';\n        }\n\
    \        num = Math.floor(num / 10);\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  let result = ''\n  let roman_numerals = {\n    'I': '',\n    'V': 'v',\n\
    \    'X': 'x',\n    'L': 'l',\n    'C': 'c',\n    'D': 'd',\n    'M': 'm'\n  }\n\
    \  for (let i = number; i > 0; i--) {\n    let roman_numeral = roman_numerals[i]\n\
    \    if (roman_numeral) {\n      result += roman_numeral\n    }\n  }\n  return\
    \ result\n}\n", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10:\
    \ 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let\
    \ result = '';\n  while (number > 0) {\n    const value = number % 10;\n    number\
    \ = number / 10;\n    result = roman_numerals[value] + result;\n  }\n  return\
    \ result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1: 'i',\n    5:\
    \ 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n\
    \  };\n\n  let roman_numeral = '';\n  while (number > 0) {\n    const value =\
    \ number % 10;\n    if (value === 1) {\n      roman_numeral += roman_numerals[value];\n\
    \    } else if (value === 5) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= value;\n    } else if (value === 10) {\n      roman_numeral +=\
    \ roman_numerals[value];\n      number -= value;\n    } else if (value === 50)\
    \ {\n      roman_numeral += roman_numerals[value];\n      number -= value;\n \
    \   } else if (value === 100) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= value;\n    } else if (value === 500) {\n      roman_numeral\
    \ += roman_numerals[value];\n      number -= value;\n    } else if (value ===\
    \ 1000) {\n      roman_numeral += roman_numerals[value];\n      number -= value;\n\
    \    }\n  }\n  return roman_numeral.toLowerCase();\n}\n", "  if (number <= 0)\
    \ {\n    throw new Error('Invalid number');\n  }\n  let roman_numeral = '';\n\
    \  let num = number;\n  let i = 0;\n  while (num > 0) {\n    let roman_digit =\
    \ roman_numeral_digits[num % 10];\n    if (i > 0 && roman_digit !== 'i') {\n \
    \     roman_numeral = roman_numeral + roman_digit;\n    } else {\n      roman_numeral\
    \ = roman_numeral + roman_digit;\n    }\n    num = Math.floor(num / 10);\n   \
    \ i++;\n  }\n  return roman_numeral.toLowerCase();\n}\n", "  if (number === 0)\
    \ {\n    return \"\";\n  }\n  let result = \"\";\n  let num = number;\n  let i\
    \ = 0;\n  while (num > 0) {\n    let roman_num = roman_numerals[num % 10];\n \
    \   result = roman_num + result;\n    num = Math.floor(num / 10);\n    i++;\n\
    \  }\n  return result.slice(0, -i);\n}\n", "  if (number === 0) {\n    return\
    \ ''\n  }\n  let result = ''\n  let roman_numeral = ''\n  let roman_numeral_map\
    \ = {\n    'I': '',\n    'V': '',\n    'X': '',\n    'L': '',\n    'C': '',\n\
    \    'D': '',\n    'M': '',\n  }\n  let roman_numeral_map_reverse = {\n    'I':\
    \ '',\n    'V': '',\n    'X': '',\n    'L': '',\n    'C': '',\n    'D': '',\n\
    \    'M': '',\n  }\n  let roman_numeral_map_reverse_index = {\n    'I': 0,\n \
    \   'V': 1,\n    'X': 2,\n    'L': 3,\n    'C': 4,\n    'D': 5,\n    'M': 6,\n\
    \  }\n  let roman_numeral_map_index = {\n    'I': 0,\n    'V': 1,\n    'X': 2,\n\
    \    'L': 3,\n    'C': 4,\n    'D': 5,\n    'M': 6,\n  }\n  let roman_numeral_map_index_reverse\
    \ = {\n    0: 'I',\n    1: 'V',\n    2: 'X',\n    3: 'L',\n    4: 'C',\n    5:\
    \ 'D',\n    6: 'M',\n  }\n  let roman_numeral_map_index_reverse_index = {\n  \
    \  'I': 0,\n    'V': 1,\n    'X': 2,\n    'L': 3,\n    'C': 4,\n    'D': 5,\n\
    \    'M': 6,\n  }\n  let roman_numeral_map_index_reverse_index_reverse = {\n \
    \   0: 'I',\n    1: 'V',\n    2: 'X',\n    3: 'L',\n    4: 'C',\n    5: 'D',\n\
    \    6: 'M',\n  }\n  let roman_num", "  const result = [];\n  const digits = number.toString();\n\
    \  const roman_digits = {\n    '1': 'i',\n    '2': 'ii',\n    '3': 'iii',\n  \
    \  '4': 'iv',\n    '5': 'v',\n    '6': 'vi',\n    '7': 'vii',\n    '8': 'viii',\n\
    \    '9': 'ix',\n    '10': 'x',\n    '11': 'xi',\n    '12': 'xii',\n    '13':\
    \ 'xiii',\n    '14': 'xiv',\n    '15': 'xv',\n    '16': 'xvi',\n    '17': 'xvii',\n\
    \    '18': 'xviii',\n    '19': 'xix',\n    '20': 'xx',\n    '30': 'xxx',\n   \
    \ '40': 'xl',\n    '50': 'l',\n    '60': 'lx',\n    '70': 'lxx',\n    '80': 'lxxx',\n\
    \    '90': 'lxxxx',\n    '100': 'xc',\n    '200': 'cc',\n    '300': 'ccc',\n \
    \   '400': 'cd',\n    '500': 'd',\n    '600': 'dxc',\n    '700': 'dcc',\n    '800':\
    \ 'dccc',\n    '900': 'cm',\n    '1000': 'm',\n  };\n  for (let i = 0; i < digits.length;\
    \ i++) {\n    const digit = digits[i];\n    const roman_digit = roman_digits[digit];\n\
    \    if (roman_digit) {\n      result.push(roman_digit);\n    } else {\n     \
    \ result.push(digit);\n    }\n  }\n  return result.join('');\n}\n", "  if (number\
    \ < 1 || number > 1000) {\n    throw new Error('Invalid number');\n  }\n\n  const\
    \ roman_numeral = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n  \
    \  100: 'c',\n    500: 'd',\n    1000: 'm'\n  };\n\n  let result = '';\n  while\
    \ (number > 0) {\n    const digit = number % 10;\n    result = roman_numeral[digit]\
    \ + result;\n    number = Math.floor(number / 10);\n  }\n\n  return result.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n  \
    \  50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral\
    \ = '';\n  for (let i = number; i > 0; i -= 1) {\n    roman_numeral += roman_numerals[i];\n\
    \  }\n  return roman_numeral;\n}\n", "    let roman_numeral = '';\n    let i =\
    \ number;\n    let temp = 0;\n    while (i > 0) {\n        temp = i % 10;\n  \
    \      if (temp === 1) {\n            roman_numeral += 'i';\n        } else if\
    \ (temp === 2) {\n            roman_numeral += 'ii';\n        } else if (temp\
    \ === 3) {\n            roman_numeral += 'iii';\n        } else if (temp === 4)\
    \ {\n            roman_numeral += 'iv';\n        } else if (temp === 5) {\n  \
    \          roman_numeral += 'v';\n        } else if (temp === 6) {\n         \
    \   roman_numeral += 'vi';\n        } else if (temp === 7) {\n            roman_numeral\
    \ += 'vii';\n        } else if (temp === 8) {\n            roman_numeral += 'viii';\n\
    \        } else if (temp === 9) {\n            roman_numeral += 'ix';\n      \
    \  } else if (temp === 0) {\n            roman_numeral += 'x';\n        }\n  \
    \      i = Math.floor(i / 10);\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  let roman_numeral = '';\n  let num = number;\n  let i = 0;\n  while (num\
    \ > 0) {\n    let num_div = num % 10;\n    if (num_div === 1) {\n      roman_numeral\
    \ += 'i';\n    } else if (num_div === 2) {\n      roman_numeral += 'ii';\n   \
    \ } else if (num_div === 3) {\n      roman_numeral += 'iii';\n    } else if (num_div\
    \ === 4) {\n      roman_numeral += 'iv';\n    } else if (num_div === 5) {\n  \
    \    roman_numeral += 'v';\n    } else if (num_div === 6) {\n      roman_numeral\
    \ += 'vi';\n    } else if (num_div === 7) {\n      roman_numeral += 'vii';\n \
    \   } else if (num_div === 8) {\n      roman_numeral += 'viii';\n    } else if\
    \ (num_div === 9) {\n      roman_numeral += 'ix';\n    }\n    num = num / 10;\n\
    \  }\n  return roman_numeral.toLowerCase();\n}\n", "    let result = ''\n    let\
    \ num = number\n    let roman_map = {\n        1000: 'm',\n        900: 'cm',\n\
    \        500: 'd',\n        400: 'cd',\n        100: 'c',\n        90: 'xc',\n\
    \        50: 'l',\n        40: 'xl',\n        10: 'x',\n        9: 'ix',\n   \
    \     5: 'v',\n        4: 'iv',\n        1: 'i'\n    }\n    while (num > 0) {\n\
    \        let key = num % 10\n        result = roman_map[key] + result\n      \
    \  num = Math.floor(num / 10)\n    }\n    return result\n}\n", "  const roman_numerals\
    \ = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100:\
    \ \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let roman_numeral = \"\"\
    ;\n  while (number > 0) {\n    const roman_numeral_part = roman_numerals[number\
    \ % 10];\n    roman_numeral = roman_numeral_part + roman_numeral;\n    number\
    \ = Math.floor(number / 10);\n  }\n  return roman_numeral.toLowerCase();\n}\n",
  "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50:\
    \ \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let result\
    \ = \"\";\n  while (number > 0) {\n    const roman_numeral = roman_numerals[number\
    \ % 1000];\n    result = roman_numeral + result;\n    number = Math.floor(number\
    \ / 1000);\n  }\n  return result;\n}\n", "  const roman_numerals = {\n    1: \"\
    i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500:\
    \ \"d\",\n    1000: \"m\",\n  };\n\n  let result = \"\";\n  while (number > 0)\
    \ {\n    const value = number % 10;\n    number = number / 10;\n    result = roman_numerals[value]\
    \ + result;\n  }\n\n  return result.toLowerCase();\n}\n", "    if (number < 1\
    \ || number > 1000) {\n        throw new Error(\"Invalid number\");\n    }\n \
    \   let result = \"\";\n    let num = number;\n    let i = 0;\n    while (num\
    \ > 0) {\n        let roman = roman_numerals[num % 10];\n        if (roman.length\
    \ > i) {\n            result += roman[i];\n        }\n        i++;\n        num\
    \ = Math.floor(num / 10);\n    }\n    return result.toLowerCase();\n}\n", "  \
    \  let result = '';\n    let num = number;\n    let roman_numerals = {\n     \
    \   'I': 1,\n        'V': 5,\n        'X': 10,\n        'L': 50,\n        'C':\
    \ 100,\n        'D': 500,\n        'M': 1000\n    };\n    for (let roman_num of\
    \ Object.keys(roman_numerals)) {\n        while (num >= roman_numerals[roman_num])\
    \ {\n            result += roman_num;\n            num -= roman_numerals[roman_num];\n\
    \        }\n    }\n    return result;\n}\n", "    let roman_numeral = '';\n  \
    \  let num = number;\n    let i = 0;\n    while (num > 0) {\n        let num_digit\
    \ = num % 10;\n        if (num_digit === 4 || num_digit === 9) {\n           \
    \ roman_numeral += 'vii';\n        } else if (num_digit === 5) {\n           \
    \ roman_numeral += 'viii';\n        } else if (num_digit === 6) {\n          \
    \  roman_numeral += 'ix';\n        } else if (num_digit === 7) {\n           \
    \ roman_numeral += 'x';\n        } else if (num_digit === 8) {\n            roman_numeral\
    \ += 'xi';\n        } else if (num_digit === 9) {\n            roman_numeral +=\
    \ 'xii';\n        } else if (num_digit === 2) {\n            roman_numeral +=\
    \ 'ii';\n        } else if (num_digit === 3) {\n            roman_numeral += 'iii';\n\
    \        } else if (num_digit === 1) {\n            roman_numeral += 'i';\n  \
    \      }\n        num = num / 10;\n        i++;\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  let result = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let\
    \ k = 0\n  let temp = 0\n  let temp2 = 0\n  let temp3 = 0\n  let temp4 = 0\n \
    \ let temp5 = 0\n  let temp6 = 0\n  let temp7 = 0\n  let temp8 = 0\n  let temp9\
    \ = 0\n  let temp10 = 0\n  let temp11 = 0\n  let temp12 = 0\n  let temp13 = 0\n\
    \  let temp14 = 0\n  let temp15 = 0\n  let temp16 = 0\n  let temp17 = 0\n  let\
    \ temp18 = 0\n  let temp19 = 0\n  let temp20 = 0\n  let temp21 = 0\n  let temp22\
    \ = 0\n  let temp23 = 0\n  let temp24 = 0\n  let temp25 = 0\n  let temp26 = 0\n\
    \  let temp27 = 0\n  let temp28 = 0\n  let temp29 = 0\n  let temp30 = 0\n  let\
    \ temp31 = 0\n  let temp32 = 0\n  let temp33 = 0\n  let temp34 = 0\n  let temp35\
    \ = 0\n  let temp36 = 0\n  let temp37 = 0\n  let temp38 = 0\n  let temp39 = 0\n\
    \  let temp40 = 0\n  let temp41 = 0\n  let temp42 = 0\n  let temp43 = 0\n  let\
    \ temp44 = 0\n  let temp45 = 0\n  let temp46 = 0\n  let temp47 = 0\n  let temp48\
    \ = 0\n  let temp49 = 0\n  let temp50 = 0\n  let temp51 = 0\n  let temp52 = 0\n\
    \  let temp53 = 0\n  let temp54 = 0\n  let temp55 = 0\n  let temp56 = 0\n  let\
    \ temp57 = 0\n  let temp58 = 0\n  let temp59 = 0\n  let temp60 = 0\n  let temp61\
    \ = 0\n  let temp62 = 0\n  let temp63 = 0\n  let temp64 = 0\n  let temp65 = 0\n\
    \  let temp66 = 0\n  let temp67 = 0\n  let temp68 = 0\n  let temp69 = 0\n", " \
    \   let roman_numeral = '';\n    let num = number;\n    let i = 0;\n    while\
    \ (num > 0) {\n        let roman_digit = num % 10;\n        if (roman_digit ===\
    \ 9) {\n            roman_numeral += 'x';\n        } else if (roman_digit ===\
    \ 4) {\n            roman_numeral += 'c';\n        } else if (roman_digit ===\
    \ 5) {\n            roman_numeral += 'd';\n        } else if (roman_digit ===\
    \ 6) {\n            roman_numeral += 'm';\n        } else if (roman_digit ===\
    \ 7) {\n            roman_numeral += 'm';\n        } else if (roman_digit ===\
    \ 8) {\n            roman_numeral += 'x';\n        } else if (roman_digit ===\
    \ 3) {\n            roman_numeral += 'l';\n        } else if (roman_digit ===\
    \ 1) {\n            roman_numeral += 'i';\n        }\n        num = Math.floor(num\
    \ / 10);\n    }\n    return roman_numeral.toLowerCase();\n}\n", "  const roman_numerals\
    \ = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100:\
    \ \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let roman_numeral = \"\"\
    ;\n  while (number > 0) {\n    const value = number % 10;\n    number = number\
    \ / 10;\n    roman_numeral = roman_numerals[value] + roman_numeral;\n  }\n  return\
    \ roman_numeral;\n}\n", "  let roman_numeral = ''\n  let roman_numeral_array =\
    \ []\n  let roman_numeral_array_length = 0\n  let roman_numeral_array_index =\
    \ 0\n  let roman_numeral_array_index_2 = 0\n  let roman_numeral_array_index_3\
    \ = 0\n  let roman_numeral_array_index_4 = 0\n  let roman_numeral_array_index_5\
    \ = 0\n  let roman_numeral_array_index_6 = 0\n  let roman_numeral_array_index_7\
    \ = 0\n  let roman_numeral_array_index_8 = 0\n  let roman_numeral_array_index_9\
    \ = 0\n  let roman_numeral_array_index_10 = 0\n  let roman_numeral_array_index_11\
    \ = 0\n  let roman_numeral_array_index_12 = 0\n  let roman_numeral_array_index_13\
    \ = 0\n  let roman_numeral_array_index_14 = 0\n  let roman_numeral_array_index_15\
    \ = 0\n  let roman_numeral_array_index_16 = 0\n  let roman_numeral_array_index_17\
    \ = 0\n  let roman_numeral_array_index_18 = 0\n  let roman_numeral_array_index_19\
    \ = 0\n  let roman_numeral_array_index_20 = 0\n  let roman_numeral_array_index_21\
    \ = 0\n  let roman_numeral_array_index_22 = 0\n  let roman_numeral_array_index_23\
    \ = 0\n  let roman_numeral_array_index_24 = 0\n  let roman_numeral_array_index_25\
    \ = 0\n  let roman_numeral_array_index_26 = 0\n  let roman_numeral_array_index_27\
    \ = 0\n  let roman_numeral_array_index_28 = 0\n  let roman_numeral_array_index_29\
    \ = 0\n  let roman_numeral_array_index_30 =", "  if (number <= 0) {\n    throw\
    \ new Error('number must be positive');\n  }\n  if (number > 1000) {\n    throw\
    \ new Error('number must be less than 1000');\n  }\n  let result = '';\n  let\
    \ num = number;\n  let i = 0;\n  while (num > 0) {\n    let roman = roman_numerals[num\
    \ % 10];\n    result = roman + result;\n    num = Math.floor(num / 10);\n    i++;\n\
    \  }\n  return result.toLowerCase();\n}\n", "  let result = ''\n  let num = number\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \n  while (num > 0) {\n    i = num % 10\n    num = num / 10\n    if (i === 1)\
    \ {\n      result += 'x'\n    } else if (i === 2) {\n      result += 'x'\n   \
    \ } else if (i === 3) {\n      result += 'c'\n    } else if (i === 4) {\n    \
    \  result += 'c'\n    } else if (i === 5) {\n      result += 'v'\n    } else if\
    \ (i === 6) {\n      result += 'v'\n    } else if (i === 7) {\n      result +=\
    \ 'i'\n    } else if (i === 8) {\n      result += 'i'\n    } else if (i === 9)\
    \ {\n      result += 'x'\n    } else if (i === 0) {\n      result += 'x'\n   \
    \ }\n  }\n\n  return result\n}\n", "  const roman_numerals = {\n    1: \"i\",\n\
    \    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\"\
    ,\n    1000: \"m\"\n  };\n  let result = \"\";\n  while (number > 0) {\n    const\
    \ roman_numeral = roman_numerals[number % 10];\n    result = roman_numeral + result;\n\
    \    number = Math.floor(number / 10);\n  }\n  return result.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  const roman_numeral_map = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n\
    \    'L': 50,\n    'C': 100,\n    'D': 500,\n    'M': 1000,\n  };\n\n  let roman_numeral\
    \ = '';\n  while (number > 0) {\n    const value = number % 10;\n    number =\
    \ number / 10;\n    roman_numeral = roman_numeral_map[value] + roman_numeral;\n\
    \  }\n\n  return roman_numeral;\n}\n", "    let roman_numeral = '';\n    let num\
    \ = number;\n    while (num > 0) {\n        let roman_num = roman_numeral_map[num\
    \ % 10];\n        if (roman_num === undefined) {\n            roman_num = roman_numeral_map[num\
    \ % 10];\n        }\n        roman_numeral += roman_num;\n        num = Math.floor(num\
    \ / 10);\n    }\n    return roman_numeral;\n}\n", "  const roman_numerals = {\n\
    \    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500:\
    \ 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0)\
    \ {\n    const roman_digit = roman_numerals[number % 10];\n    roman_numeral =\
    \ roman_numeral + roman_digit;\n    number = Math.floor(number / 10);\n  }\n \
    \ return roman_numeral.toLowerCase();\n}\n", "  let result = ''\n  let num = number\n\
    \  let i = 0\n  let roman_num = []\n  while (num > 0) {\n    roman_num.push(num\
    \ % 10)\n    num = Math.floor(num / 10)\n  }\n  while (i < roman_num.length) {\n\
    \    if (roman_num[i] === 5) {\n      result += 'v'\n    } else if (roman_num[i]\
    \ === 4) {\n      result += 'iv'\n    } else if (roman_num[i] === 9) {\n     \
    \ result += 'x'\n    } else if (roman_num[i] === 8) {\n      result += 'ix'\n\
    \    } else if (roman_num[i] === 7) {\n      result += 'x'\n    } else if (roman_num[i]\
    \ === 6) {\n      result += 'vi'\n    } else if (roman_num[i] === 3) {\n     \
    \ result += 'm'\n    } else if (roman_num[i] === 2) {\n      result += 'ii'\n\
    \    } else if (roman_num[i] === 1) {\n      result += 'i'\n    }\n    i++\n \
    \ }\n  return result\n}\n", "  let roman_numeral = ''\n  let roman_numeral_array\
    \ = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n\
    \  let roman_numeral_array_length = roman_numeral_array.length\n  let number_array\
    \ = []\n  let number_array_length = number.toString().length\n  let i = 0\n  let\
    \ j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let\
    \ p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let\
    \ v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let\
    \ b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let\
    \ h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let\
    \ n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let\
    \ t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let\
    \ z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let\
    \ f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let\
    \ l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let\
    \ r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let\
    \ x =", "  let result = ''\n  let num = number\n  let roman_map = {\n    1000:\
    \ 'm',\n    900: 'cm',\n    500: 'd',\n    400: 'cd',\n    100: 'c',\n    90:\
    \ 'xc',\n    50: 'l',\n    40: 'xl',\n    10: 'x',\n    9: 'ix',\n    5: 'v',\n\
    \    4: 'iv',\n    1: 'i'\n  }\n  for (let key in roman_map) {\n    while (num\
    \ >= key) {\n      result += roman_map[key]\n      num -= key\n    }\n  }\n  return\
    \ result\n}\n", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n \
    \ let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n\
    \  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n\
    \  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\n  while (num\
    \ > 0) {\n    if (num >= 1000) {\n      roman_numeral += 'm'\n      num -= 1000\n\
    \    } else if (num >= 900) {\n      roman_numeral += 'cm'\n      num -= 900\n\
    \    } else if (num >= 500) {\n      roman_numeral += 'd'\n      num -= 500\n\
    \    } else if (num >= 400) {\n      roman_numeral += 'cd'\n      num -= 400\n\
    \    } else if (num >= 100) {\n      roman_numeral += 'c'\n      num -= 100\n\
    \    } else if (num >= 90) {\n      roman_numeral += 'xc'\n      num -= 90\n \
    \   } else if (num >= 50) {\n      roman_numeral += 'l'\n      num -= 50\n   \
    \ } else if (num >= 40) {\n      roman_numeral += 'xl'\n      num -= 40\n    }\
    \ else if (num >= 10) {\n      roman_numeral += 'x'\n      num -= 10\n    } else\
    \ if (num >= 9) {\n      roman_numeral += 'ix'\n      num -= 9\n    } else if\
    \ (num >= 5) {\n      roman_numeral += 'v'\n      num -= 5\n    } else if (num\
    \ >= 4) {\n      roman_numeral += 'iv'\n      num -= 4\n    } else if (num >=\
    \ 1) {\n      roman_numeral += 'i'\n      num -= 1\n    }\n  }\n\n  return roman_numeral\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  let roman_numeral = '';\n  let num_array = [];\n  let i = 0;\n  while\
    \ (number > 0) {\n    num_array.push(number % 10);\n    number = number / 10;\n\
    \    i++;\n  }\n  for (let j = num_array.length - 1; j >= 0; j--) {\n    roman_numeral\
    \ += roman_numeral_array[num_array[j]];\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "    let roman_numeral = '';\n    let roman_numeral_array = ['m', 'cm',\
    \ 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i'];\n    let roman_numeral_array_length\
    \ = roman_numeral_array.length;\n    let num = number;\n    while (num > 0) {\n\
    \        let num_index = num % roman_numeral_array_length;\n        roman_numeral\
    \ += roman_numeral_array[num_index];\n        num = Math.floor(num / roman_numeral_array_length);\n\
    \    }\n    return roman_numeral.toLowerCase();\n}\n", "  const roman_numerals\
    \ = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100:\
    \ \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let roman_numeral = \"\"\
    ;\n  while (number > 0) {\n    const value = number % 10;\n    roman_numeral =\
    \ roman_numerals[value] + roman_numeral;\n    number = Math.floor(number / 10);\n\
    \  }\n  return roman_numeral;\n}\n", "  const roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm',\n  };\n  let result = '';\n  while (number > 0) {\n    const roman_numeral\
    \ = roman_numerals[number % 1000];\n    result = roman_numeral + result;\n   \
    \ number = Math.floor(number / 1000);\n  }\n  return result.toLowerCase();\n}\n",
  "    let result = '';\n    let num = number;\n    let roman_num = {\n        '1':\
    \ 'i',\n        '2': 'ii',\n        '3': 'iii',\n        '4': 'iv',\n        '5':\
    \ 'v',\n        '6': 'vi',\n        '7': 'vii',\n        '8': 'viii',\n      \
    \  '9': 'ix',\n        '10': 'x',\n        '11': 'xi',\n        '12': 'xii',\n\
    \        '13': 'xiii',\n        '14': 'xiv',\n        '15': 'xv',\n        '16':\
    \ 'xvi',\n        '17': 'xvii',\n        '18': 'xviii',\n        '19': 'xix',\n\
    \        '20': 'xx',\n        '30': 'xxx',\n        '40': 'xl',\n        '50':\
    \ 'l',\n        '60': 'lx',\n        '70': 'lxx',\n        '80': 'lxxx',\n   \
    \     '90': 'lxxxx',\n        '100': 'xc',\n        '200': 'cc',\n        '300':\
    \ 'ccc',\n        '400': 'cd',\n        '500': 'd',\n        '600': 'dxc',\n \
    \       '700': 'dxx',\n        '800': 'dxxx',\n        '900': 'dxxxx',\n     \
    \   '1000': 'm'\n    };\n    while (num > 0) {\n        let roman_num_value =\
    \ roman_num[num % 1000];\n        if (roman_num_value) {\n            result =\
    \ roman_num_value + result;\n            num = Math.floor(num / 1000);\n     \
    \   } else {\n            result = roman_num[num % 100] + result;\n          \
    \  num = Math.floor(num / 100);\n        }\n    }\n    return result.toLowerCase();\n\
    }\n", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n\
    \  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n\
    \  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n\
    \  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n\
    \  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n\
    \  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n\
    \  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n\
    \  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n\
    \  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m =", "  let result = ''\n  let num = number\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \n  while (num > 0) {\n    if (num >= 1000) {\n      result += 'm'\n      num\
    \ -= 1000\n    } else if (num >= 900) {\n      result += 'cm'\n      num -= 900\n\
    \    } else if (num >= 500) {\n      result += 'd'\n      num -= 500\n    } else\
    \ if (num >= 400) {\n      result += 'cd'\n      num -= 400\n    } else if (num\
    \ >= 100) {\n      result += 'c'\n      num -= 100\n    } else if (num >= 90)\
    \ {\n      result += 'xc'\n      num -= 90\n    } else if (num >= 50) {\n    \
    \  result += 'l'\n      num -= 50\n    } else if (num >= 40) {\n      result +=\
    \ 'xl'\n      num -= 40\n    } else if (num >= 10) {\n      result += 'x'\n  \
    \    num -= 10\n    } else if (num >= 9) {\n      result += 'ix'\n      num -=\
    \ 9\n    } else if (num >= 5) {\n      result += 'v'\n      num -= 5\n    } else\
    \ if (num >= 4) {\n      result += 'iv'\n      num -= 4\n    } else if (num >=\
    \ 1) {\n      result += 'i'\n      num -= 1\n    }\n  }\n\n  return result\n}\n",
  "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50:\
    \ \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let result\
    \ = \"\";\n  while (number > 0) {\n    const roman_numeral = roman_numerals[number\
    \ % 1000];\n    result = roman_numeral + result;\n    number = Math.floor(number\
    \ / 1000);\n  }\n  return result.toLowerCase();\n}\n", "  const roman_numerals\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm',\n  };\n  const result = [];\n  while (number > 0)\
    \ {\n    const roman_numeral = roman_numerals[number % 1000];\n    result.unshift(roman_numeral);\n\
    \    number = Math.floor(number / 1000);\n  }\n  return result.join('');\n}\n",
  "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50:\
    \ \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let result\
    \ = \"\";\n  while (number > 0) {\n    const digit = number % 10;\n    result\
    \ = roman_numerals[digit] + result;\n    number = Math.floor(number / 10);\n \
    \ }\n  return result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1:\
    \ 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0) {\n   \
    \ const roman_digit = roman_numerals[number % 1000];\n    roman_numeral = roman_numeral\
    \ + roman_digit;\n    number = Math.floor(number / 1000);\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  let roman_numeral = '';\n  let roman_numeral_map = {\n    'I': 'x',\n\
    \    'V': 'v',\n    'X': 'l',\n    'L': 'c',\n    'C': 'd',\n    'D': 'm',\n \
    \   'M': '',\n  };\n  let i = 0;\n  while (number > 0) {\n    let roman_numeral_part\
    \ = roman_numeral_map[number % 10];\n    if (roman_numeral_part) {\n      roman_numeral\
    \ += roman_numeral_part;\n    }\n    number = Math.floor(number / 10);\n    i++;\n\
    \  }\n  return roman_numeral.toLowerCase();\n}\n", "  if (number === 0) {\n  \
    \  return \"\";\n  }\n  let result = \"\";\n  let roman_numeral = [\"\", \"i\"\
    , \"ii\", \"iii\", \"iv\", \"v\", \"vi\", \"vii\", \"viii\", \"ix\"];\n  let num\
    \ = number;\n  while (num > 0) {\n    let roman_digit = num % 10;\n    result\
    \ = roman_numeral[roman_digit] + result;\n    num = Math.floor(num / 10);\n  }\n\
    \  return result;\n}\n", "  const roman_numeral_map = {\n    1: \"i\",\n    5:\
    \ \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n \
    \   1000: \"m\"\n  };\n\n  let roman_numeral = \"\";\n  while (number > 0) {\n\
    \    const num = number % 10;\n    if (num === 1) {\n      roman_numeral += roman_numeral_map[num];\n\
    \    } else if (num === 5) {\n      roman_numeral += roman_numeral_map[num];\n\
    \      roman_numeral += roman_numeral_map[num];\n    } else {\n      roman_numeral\
    \ += roman_numeral_map[num];\n    }\n    number = number / 10;\n  }\n\n  return\
    \ roman_numeral.toLowerCase();\n}\n", "  let roman_numeral = ''\n  let num_array\
    \ = []\n  let num_array_length = 0\n  let num_array_index = 0\n  let num_array_max_length\
    \ = 0\n  let num_array_max_index = 0\n  let num_array_max = 0\n  let num_array_min\
    \ = 0\n  let num_array_min_index = 0\n  let num_array_min_length = 0\n  let num_array_min_length_index\
    \ = 0\n  let num_array_min_length_max = 0\n  let num_array_min_length_max_index\
    \ = 0\n  let num_array_min_length_max_length = 0\n  let num_array_min_length_max_length_index\
    \ = 0\n  let num_array_min_length_max_length_length = 0\n  let num_array_min_length_max_length_length_index\
    \ = 0\n  let num_array_min_length_max_length_length_length = 0\n  let num_array_min_length_max_length_length_length_index\
    \ = 0\n  let num_array_min_length_max_length_length_length_length = 0\n  let num_array_min_length_max_length_length_length_length_index\
    \ = 0\n  let num_array_min_length_max_length_length_length_length_length = 0\n\
    \  let num_array_min_length_max_length_length_length_length_length_index = 0\n\
    \  let num_array_min_length_max_length_length_length_length_length_length = 0\n\
    \  let num_array_min_length_max_length_length_length_length_length_length_index\
    \ = 0\n  let num_array_min_length_max_length_length_length_length_length_length_length\
    \ = 0\n  let num_array_min_length_max_length_length_length_length_length_length_length_index\
    \ = 0\n  let num_array_min_length_max_length_length_length_length_length_length_length_length\
    \ = 0\n  let num_array_min_length_", "  if (number < 1 || number > 1000) {\n \
    \   throw new Error('Invalid number');\n  }\n\n  const roman_numerals = {\n  \
    \  1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm',\n  };\n\n  let roman_numeral = '';\n\n  for (let i = number; i\
    \ > 0; i -= 1) {\n    const roman_numeral_part = roman_numerals[i];\n\n    if\
    \ (i === 1) {\n      roman_numeral += roman_numeral_part;\n    } else if (i ===\
    \ 5) {\n      roman_numeral += roman_numeral_part;\n      roman_numeral += roman_numerals[5];\n\
    \    } else if (i === 10) {\n      roman_numeral += roman_numeral_part;\n    \
    \  roman_numeral += roman_numerals[10];\n    } else if (i === 50) {\n      roman_numeral\
    \ += roman_numeral_part;\n      roman_numeral += roman_numerals[50];\n    } else\
    \ if (i === 100) {\n      roman_numeral += roman_numeral_part;\n      roman_numeral\
    \ += roman_numerals[100];\n    } else if (i === 500) {\n      roman_numeral +=\
    \ roman_numeral_part;\n      roman_numeral += roman_numerals[500];\n    } else\
    \ if (i === 1000) {\n      roman_numeral += roman_numeral_part;\n      roman_numeral\
    \ += roman_numerals[1000];\n    }\n  }\n\n  return roman_numeral.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\"\
    ,\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n\
    \  let roman_numeral = \"\";\n  for (let i = number; i > 0; i -= roman_numerals[i])\
    \ {\n    roman_numeral = roman_numerals[i] + roman_numeral;\n  }\n  return roman_numeral;\n\
    }\n", "    let roman_numeral = '';\n    let num = number;\n    let i = 0;\n  \
    \  while (num > 0) {\n        let digit = num % 10;\n        if (digit === 1)\
    \ {\n            roman_numeral += 'i';\n        } else if (digit === 2) {\n  \
    \          roman_numeral += 'ii';\n        } else if (digit === 3) {\n       \
    \     roman_numeral += 'iii';\n        } else if (digit === 4) {\n           \
    \ roman_numeral += 'iv';\n        } else if (digit === 5) {\n            roman_numeral\
    \ += 'v';\n        } else if (digit === 6) {\n            roman_numeral += 'vi';\n\
    \        } else if (digit === 7) {\n            roman_numeral += 'vii';\n    \
    \    } else if (digit === 8) {\n            roman_numeral += 'viii';\n       \
    \ } else if (digit === 9) {\n            roman_numeral += 'ix';\n        } else\
    \ if (digit === 10) {\n            roman_numeral += 'x';\n        } else if (digit\
    \ === 11) {\n            roman_numeral += 'xi';\n        } else if (digit ===\
    \ 12) {\n            roman_numeral += 'xii';\n        } else if (digit === 13)\
    \ {\n            roman_numeral += 'xiii';\n        } else if (digit === 14) {\n\
    \            roman_numeral += 'xiv';\n        } else if (digit === 15) {\n   \
    \         roman_numeral += 'xv';\n        } else if (digit === 16) {\n       \
    \     roman_numeral += 'xvi';\n        } else if (digit === 17) {\n          \
    \  roman_numeral += 'xvii';\n        } else if (digit === 18) {\n            roman_numeral\
    \ += 'xviii';\n        } else if (digit === 19) {\n            roman_numeral +=\
    \ 'xix';\n        } else if (digit === 20) {\n            roman_numeral += 'xx';\n\
    \        } else if (digit === 30) {\n            roman_numeral += 'xxi';\n   \
    \     } else if (digit === 40) {\n            roman_numeral +=", "    let roman_numeral\
    \ = '';\n    let num = number;\n    let i = 0;\n    while (num > 0) {\n      \
    \  let roman_digit = roman_digits[num % 10];\n        if (i > 0 && roman_digit\
    \ != 'I') {\n            roman_numeral = roman_digit + roman_numeral;\n      \
    \  } else {\n            roman_numeral = roman_digit;\n        }\n        num\
    \ = Math.floor(num / 10);\n        i++;\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  let roman_numeral = '';\n  let roman_numeral_map = {\n    'I': '',\n\
    \    'V': 'v',\n    'X': 'x',\n    'L': 'l',\n    'C': 'c',\n    'D': 'd',\n \
    \   'M': 'm'\n  };\n\n  for (let i = number; i > 0; i -= 1) {\n    roman_numeral\
    \ += roman_numeral_map[i % 10];\n  }\n\n  return roman_numeral.toLowerCase();\n\
    }\n", "  let roman_numeral = '';\n  let num = number;\n  let i = 0;\n  while (num\
    \ > 0) {\n    let roman_digit = num % 10;\n    if (roman_digit === 9) {\n    \
    \  roman_numeral += 'x';\n    } else if (roman_digit === 4) {\n      roman_numeral\
    \ += 'c';\n    } else if (roman_digit === 5) {\n      roman_numeral += 'd';\n\
    \    } else if (roman_digit === 6) {\n      roman_numeral += 'm';\n    } else\
    \ if (roman_digit === 7) {\n      roman_numeral += 'l';\n    } else if (roman_digit\
    \ === 8) {\n      roman_numeral += 'x';\n    } else if (roman_digit === 3) {\n\
    \      roman_numeral += 'v';\n    } else if (roman_digit === 2) {\n      roman_numeral\
    \ += 'i';\n    } else if (roman_digit === 1) {\n      roman_numeral += 'i';\n\
    \    }\n    num = Math.floor(num / 10);\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\"\
    ,\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n\n\
    \  const result = [];\n  let current_number = number;\n  while (current_number\
    \ > 0) {\n    const roman_numeral = roman_numerals[current_number];\n    result.push(roman_numeral);\n\
    \    current_number -= roman_numerals[current_number];\n  }\n\n  return result.reverse().join(\"\
    \");\n}\n", "  let result = ''\n  let num = number\n  let i = 0\n  let roman_num\
    \ = ['m', 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n\
    \  let roman_num_len = roman_num.length\n\n  while (num > 0) {\n    let num_len\
    \ = roman_num_len - i\n    let num_val = num % 10\n    let roman_num_val = roman_num[i]\n\
    \    if (num_val === 0) {\n      result += roman_num_val\n    } else if (num_val\
    \ === 1) {\n      result += roman_num_val\n      num -= num_val\n    } else if\
    \ (num_val === 2) {\n      result += roman_num_val\n      num -= num_val\n   \
    \ } else if (num_val === 3) {\n      result += roman_num_val\n      num -= num_val\n\
    \    } else if (num_val === 4) {\n      result += roman_num_val\n      num -=\
    \ num_val\n    } else if (num_val === 5) {\n      result += roman_num_val\n  \
    \    num -= num_val\n    } else if (num_val === 6) {\n      result += roman_num_val\n\
    \      num -= num_val\n    } else if (num_val === 7) {\n      result += roman_num_val\n\
    \      num -= num_val\n    } else if (num_val === 8) {\n      result += roman_num_val\n\
    \      num -= num_val\n    } else if (num_val === 9) {\n      result += roman_num_val\n\
    \      num -= num_val\n    }\n    i++\n  }\n  return result.toLowerCase()\n}\n",
  "  const roman_numeral = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_string = '';\n\
    \  while (number > 0) {\n    const value = number % 10;\n    roman_string = roman_numeral[value]\
    \ + roman_string;\n    number = number / 10;\n  }\n  return roman_string.toLowerCase();\n\
    }\n", "    let result = '';\n    let roman_numeral = {\n        'I': 1,\n    \
    \    'V': 5,\n        'X': 10,\n        'L': 50,\n        'C': 100,\n        'D':\
    \ 500,\n        'M': 1000\n    };\n    for (let i = 0; i < number; i++) {\n  \
    \      let num = number % 10;\n        result += roman_numeral[num];\n       \
    \ number = Math.floor(number / 10);\n    }\n    return result.toLowerCase();\n\
    }\n", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  let roman_num\
    \ = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I']\n\
    \  while (num > 0) {\n    let roman_digit = roman_num[num % 10]\n    roman_numeral\
    \ += roman_digit\n    num = Math.floor(num / 10)\n    i += 1\n  }\n  return roman_numeral.toLowerCase()\n\
    }\n", "  const roman_numeral_map = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n\
    \    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\n  let result\
    \ = '';\n  while (number > 0) {\n    const num = number % 10;\n    if (num ===\
    \ 1) {\n      result = roman_numeral_map[num] + result;\n    } else if (num ===\
    \ 5) {\n      result = 'v' + result;\n    } else if (num === 10) {\n      result\
    \ = 'x' + result;\n    } else if (num === 50) {\n      result = 'l' + result;\n\
    \    } else if (num === 100) {\n      result = 'c' + result;\n    } else if (num\
    \ === 500) {\n      result = 'd' + result;\n    } else if (num === 1000) {\n \
    \     result = 'm' + result;\n    }\n    number = Math.floor(number / 10);\n \
    \ }\n  return result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1:\
    \ 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0) {\n   \
    \ const value = number % 10;\n    number = number / 10;\n    roman_numeral = roman_numerals[value]\
    \ + roman_numeral;\n  }\n  return roman_numeral;\n}\n", "  let roman_numeral =\
    \ '';\n  let num = number;\n  let i = 0;\n  while (num > 0) {\n    let roman_digit\
    \ = roman_numerals[num % 10];\n    num = Math.floor(num / 10);\n    roman_numeral\
    \ = roman_numeral + roman_digit;\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  let result = ''\n  let num = number\n  let roman_numerals = {\n    1:\
    \ 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm'\n  }\n  let i = 0\n  while (num > 0) {\n    let roman_num = roman_numerals[num]\n\
    \    if (num === 1) {\n      result += roman_num\n    } else {\n      result +=\
    \ roman_num\n      num -= 1\n    }\n    i += 1\n  }\n  return result.toLowerCase()\n\
    }\n", "    let roman_numeral = '';\n    let num = number;\n    let roman_num =\
    \ {\n        '1': 'i',\n        '2': 'ii',\n        '3': 'iii',\n        '4':\
    \ 'iv',\n        '5': 'v',\n        '6': 'vi',\n        '7': 'vii',\n        '8':\
    \ 'viii',\n        '9': 'ix',\n        '10': 'x',\n        '11': 'xi',\n     \
    \   '12': 'xii',\n        '13': 'xiii',\n        '14': 'xiv',\n        '15': 'xv',\n\
    \        '16': 'xvi',\n        '17': 'xvii',\n        '18': 'xviii',\n       \
    \ '19': 'xix',\n        '20': 'xx',\n        '30': 'xxx',\n        '40': 'xl',\n\
    \        '50': 'l',\n        '60': 'lx',\n        '70': 'lxx',\n        '80':\
    \ 'lxxx',\n        '90': 'lxxxx',\n        '100': 'c',\n        '200': 'cc',\n\
    \        '300': 'ccc',\n        '400': 'cd',\n        '500': 'd',\n        '600':\
    \ 'dxc',\n        '700': 'dxx',\n        '800': 'dxxx',\n        '900': 'dxxxx',\n\
    \        '1000': 'm'\n    };\n    while (num > 0) {\n        let roman_digit =\
    \ roman_num[num % 1000];\n        if (roman_digit) {\n            roman_numeral\
    \ = roman_numeral + roman_digit;\n        }\n        num = Math.floor(num / 1000);\n\
    \    }\n    return roman_numeral.toLowerCase();\n}\n", "  const roman_numerals\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n  while (number\
    \ > 0) {\n    const roman_digit = number % 10;\n    if (roman_digit in roman_numerals)\
    \ {\n      roman_numeral += roman_numerals[roman_digit];\n      number -= roman_digit;\n\
    \    } else {\n      roman_numeral += roman_numerals[roman_numerals.1000];\n \
    \     number -= roman_numerals.1000;\n    }\n  }\n  return roman_numeral.toLowerCase();\n\
    }\n", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  while (num\
    \ > 0) {\n    let roman_digit = roman_digits[num % 10]\n    roman_numeral = roman_numeral\
    \ + roman_digit\n    num = Math.floor(num / 10)\n    i++\n  }\n  return roman_numeral.toLowerCase()\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  let result = '';\n  let roman_numeral = {\n    'I': 1,\n    'V': 5,\n\
    \    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D': 500,\n    'M': 1000\n  };\n\
    \n  for (let i = 0; i < number; i++) {\n    let num = number % 10;\n    let roman_num\
    \ = roman_numeral[num];\n    result += roman_num;\n    number = Math.floor(number\
    \ / 10);\n  }\n\n  return result.toLowerCase();\n}\n", "    let roman_numeral\
    \ = '';\n    let num = number;\n    let i = 0;\n    while (num > 0) {\n      \
    \  let value = num % 10;\n        if (value === 4 || value === 9) {\n        \
    \    roman_numeral += 'iv';\n        } else if (value === 5) {\n            roman_numeral\
    \ += 'v';\n        } else if (value === 6) {\n            roman_numeral += 'vi';\n\
    \        } else if (value === 7) {\n            roman_numeral += 'vii';\n    \
    \    } else if (value === 8) {\n            roman_numeral += 'viii';\n       \
    \ } else if (value === 9) {\n            roman_numeral += 'ix';\n        } else\
    \ {\n            roman_numeral += value.toString();\n        }\n        num =\
    \ num / 10;\n        i++;\n    }\n    return roman_numeral.toLowerCase();\n}\n",
  "  if (number === 0) {\n    return \"\";\n  }\n  let result = \"\";\n  let num =\
    \ number;\n  let num_str = String(num);\n  let num_len = num_str.length;\n  let\
    \ i = num_len - 1;\n  let last_digit = num_str[i];\n  let last_digit_value = parseInt(last_digit);\n\
    \  let last_digit_value_str = String(last_digit_value);\n  let last_digit_value_str_len\
    \ = last_digit_value_str.length;\n  let last_digit_value_str_value = parseInt(last_digit_value_str);\n\
    \  let last_digit_value_str_value_str = String(last_digit_value_str_value);\n\
    \  let last_digit_value_str_value_str_len = last_digit_value_str_value_str.length;\n\
    \  let last_digit_value_str_value_str_value = parseInt(last_digit_value_str_value_str);\n\
    \  let last_digit_value_str_value_str_value_str = String(last_digit_value_str_value_str_value);\n\
    \  let last_digit_value_str_value_str_value_str_len = last_digit_value_str_value_str_value_str.length;\n\
    \  let last_digit_value_str_value_str_value_str_value = parseInt(last_digit_value_str_value_str_value_str);\n\
    \  let last_digit_value_str_value_str_value_str_value_str = String(last_digit_value_str_value_str_value_str_value);\n\
    \  let last_digit_value_str_value_str_value_str_value_str_len = last_digit_value_str_value_str_value_str_value_str.length;\n\
    \  let last_digit_value_str_value_str_value_str_value_str_value = parseInt(last_digit_value_str_value_str_value_str_value_str);\n\
    \  let last_digit_value_str", "  const roman_numerals = {\n    1: 'i',\n    5:\
    \ 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n\
    \  };\n  let roman_numeral = '';\n  while (number > 0) {\n    const value = number\
    \ % 10;\n    if (value === 1) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= 1;\n    } else if (value === 5) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= 5;\n    } else if (value === 10) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= 10;\n    } else if (value === 50) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= 50;\n    } else if (value === 100) {\n      roman_numeral +=\
    \ roman_numerals[value];\n      number -= 100;\n    } else if (value === 500)\
    \ {\n      roman_numeral += roman_numerals[value];\n      number -= 500;\n   \
    \ } else if (value === 1000) {\n      roman_numeral += roman_numerals[value];\n\
    \      number -= 1000;\n    }\n  }\n  return roman_numeral.toLowerCase();\n}\n",
  "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let result = '';\n  while\
    \ (number > 0) {\n    const roman_numeral = roman_numerals[number % 1000];\n \
    \   result = roman_numeral + result;\n    number = Math.floor(number / 1000);\n\
    \  }\n  return result.toLowerCase();\n}\n", "  let result = ''\n  let roman_numeral\
    \ = {\n    'I': '',\n    'V': '',\n    'X': '',\n    'L': '',\n    'C': '',\n\
    \    'D': '',\n    'M': '',\n  }\n  let roman_numeral_list = ['I', 'V', 'X', 'L',\
    \ 'C', 'D', 'M']\n  let i = 0\n  while (number > 0) {\n    let digit = number\
    \ % 10\n    number = number / 10\n    if (digit === 9) {\n      result += roman_numeral[roman_numeral_list[i]]\n\
    \    } else {\n      result += roman_numeral[roman_numeral_list[i]] + roman_numeral[digit]\n\
    \    }\n    i++\n  }\n  return result.toLowerCase()\n}\n", "    if (number <=\
    \ 0) {\n        throw new Error('Invalid number');\n    }\n    let result = '';\n\
    \    let i = 0;\n    while (number > 0) {\n        let num = number % 10;\n  \
    \      if (num === 1 || num === 5) {\n            result = 'x' + result;\n   \
    \     } else if (num === 2 || num === 3) {\n            result = 'c' + result;\n\
    \        } else if (num === 4) {\n            result = 'd' + result;\n       \
    \ } else if (num === 6) {\n            result = 'm' + result;\n        } else\
    \ if (num === 7) {\n            result = 'm' + result;\n        } else if (num\
    \ === 8) {\n            result = 'c' + result;\n        } else if (num === 9)\
    \ {\n            result = 'x' + result;\n        }\n        number = number /\
    \ 10;\n        i++;\n    }\n    return result.toLowerCase();\n}\n", "  let result\
    \ = ''\n  let num = number\n  let roman_map = {\n    1000: 'm',\n    900: 'cm',\n\
    \    500: 'd',\n    400: 'cd',\n    100: 'c',\n    90: 'xc',\n    50: 'l',\n \
    \   40: 'xl',\n    10: 'x',\n    9: 'ix',\n    5: 'v',\n    4: 'iv',\n    1: 'i'\n\
    \  }\n  while (num > 0) {\n    let key = num % 10\n    result = roman_map[key]\
    \ + result\n    num = Math.floor(num / 10)\n  }\n  return result\n}\n", "  const\
    \ roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n \
    \   100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral = '';\n\
    \  for (let i = number; i > 0; i -= roman_numerals[i]) {\n    roman_numeral +=\
    \ roman_numerals[i];\n  }\n  return roman_numeral;\n}\n", "  const roman_numerals\
    \ = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n \
    \   500: 'd',\n    1000: 'm'\n  }\n  let roman_numeral = ''\n  while (number >\
    \ 0) {\n    const value = number % 10\n    if (value === 1) {\n      roman_numeral\
    \ += roman_numerals[value]\n      number -= value\n    } else if (value === 5)\
    \ {\n      roman_numeral += roman_numerals[value]\n      number -= value\n   \
    \ } else if (value === 10) {\n      roman_numeral += roman_numerals[value]\n \
    \     number -= value\n    } else if (value === 50) {\n      roman_numeral +=\
    \ roman_numerals[value]\n      number -= value\n    } else if (value === 100)\
    \ {\n      roman_numeral += roman_numerals[value]\n      number -= value\n   \
    \ } else if (value === 500) {\n      roman_numeral += roman_numerals[value]\n\
    \      number -= value\n    } else if (value === 1000) {\n      roman_numeral\
    \ += roman_numerals[value]\n      number -= value\n    }\n  }\n  return roman_numeral.toLowerCase()\n\
    }\n", "  let roman_num = ''\n  let num = number\n  let roman_num_map = {\n   \
    \ 1000: 'm',\n    900: 'cm',\n    500: 'd',\n    400: 'cd',\n    100: 'c',\n \
    \   90: 'xc',\n    50: 'l',\n    40: 'xl',\n    10: 'x',\n    9: 'ix',\n    5:\
    \ 'v',\n    4: 'iv',\n    1: 'i'\n  }\n  while (num > 0) {\n    let key = num\
    \ % 10\n    roman_num += roman_num_map[key]\n    num = Math.floor(num / 10)\n\
    \  }\n  return roman_num.toLowerCase()\n}\n", "  if (number < 1 || number > 1000)\
    \ {\n    throw new Error('Invalid number');\n  }\n\n  let result = '';\n  let\
    \ roman_numeral = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n  \
    \  'C': 100,\n    'D': 500,\n    'M': 1000\n  };\n\n  for (let i = number; i >\
    \ 0; i -= roman_numeral[result[result.length - 1]]) {\n    result += roman_numeral[i\
    \ % roman_numeral[result[result.length - 1]]];\n  }\n\n  return result.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\"\
    ,\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n\
    \  let roman_numeral = \"\";\n  for (let i = number; i > 0; i -= 1000) {\n   \
    \ roman_numeral += roman_numerals[i];\n  }\n  return roman_numeral;\n}\n", " \
    \ if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  let roman_numeral = '';\n  let roman_numeral_array = ['', 'i', 'ii', 'iii',\
    \ 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n  let roman_numeral_array_length = roman_numeral_array.length;\n\
    \  let roman_numeral_array_index = 0;\n  let roman_numeral_array_index_length\
    \ = roman_numeral_array_length - 1;\n  while (number > 0) {\n    roman_numeral_array_index\
    \ = roman_numeral_array_index + 1;\n    if (number >= roman_numeral_array_index)\
    \ {\n      roman_numeral += roman_numeral_array[roman_numeral_array_index];\n\
    \      number -= roman_numeral_array_index;\n    } else {\n      roman_numeral\
    \ += roman_numeral_array[roman_numeral_array_index_length];\n      roman_numeral_array_index_length\
    \ -= 1;\n    }\n  }\n  return roman_numeral.toLowerCase();\n}\n", "    let roman_numeral\
    \ = '';\n    let num = number;\n    let roman_num = {\n        'I': 1,\n     \
    \   'V': 5,\n        'X': 10,\n        'L': 50,\n        'C': 100,\n        'D':\
    \ 500,\n        'M': 1000\n    };\n    while (num > 0) {\n        let roman_num_val\
    \ = roman_num[num % 10];\n        roman_numeral = roman_numeral + roman_num[num\
    \ % 10];\n        num = Math.floor(num / 10);\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  const roman_numeral_map = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n\
    \    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\n  let roman_numeral\
    \ = '';\n  while (number > 0) {\n    const value = number % 10;\n    number =\
    \ number / 10;\n    roman_numeral = roman_numeral_map[value] + roman_numeral;\n\
    \  }\n\n  return roman_numeral.toLowerCase();\n}\n", "  let result = ''\n  let\
    \ num = number\n  let i = 0\n  let j = 0\n  let k = 0\n  let m = 0\n  let n =\
    \ 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u\
    \ = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let\
    \ a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let\
    \ g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let\
    \ m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let\
    \ s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let\
    \ y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let\
    \ e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let\
    \ k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let\
    \ q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let\
    \ w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let\
    \ c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let\
    \ i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let\
    \ o = 0\n  let", "  let result = ''\n  let num = number\n  let roman_num = []\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \n  while (num > 0) {\n    if (num >= 1000) {\n      roman_num.push(1000)\n  \
    \    num -= 1000\n    } else if (num >= 900) {\n      roman_num.push(900)\n  \
    \    num -= 900\n    } else if (num >= 500) {\n      roman_num.push(500)\n   \
    \   num -= 500\n    } else if (num >= 400) {\n      roman_num.push(400)\n    \
    \  num -= 400\n    } else if (num >= 100) {\n      roman_num.push(100)\n     \
    \ num -= 100\n    } else if (num >= 90) {\n      roman_num.push(90)\n      num\
    \ -= 90\n    } else if (num >= 50) {\n      roman_num.push(50)\n      num -= 50\n\
    \    } else if (num >= 40) {\n      roman_num.push(40)\n      num -= 40\n    }\
    \ else if (num >= 10) {\n      roman_num.push(10)\n      num -= 10\n    } else\
    \ if (num >= 9) {\n      roman_num.push(9)\n      num -= 9\n    } else if (num\
    \ >= 5) {\n      roman_num.push(5)\n      num -= 5\n    } else if (num >= 4) {\n\
    \      roman_num.push(4)\n      num -= 4\n    } else if (num >= 1) {\n      roman_num.push(1)\n\
    \      num -= 1\n    }\n  }\n\n  for (i = 0; i < roman_num.length; i++) {\n  \
    \  for (j = 0; j < roman_", "  let result = ''\n  let roman_numerals = {\n   \
    \ 'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D': 500,\n\
    \    'M': 1000\n  }\n  for (let key in roman_numerals) {\n    while (number >=\
    \ roman_numerals[key]) {\n      result += key\n      number -= roman_numerals[key]\n\
    \    }\n  }\n  return result\n}\n", "  const roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0) {\n    const value\
    \ = number % 10;\n    roman_numeral = roman_numerals[value] + roman_numeral;\n\
    \    number = Math.floor(number / 10);\n  }\n  return roman_numeral;\n}\n", " \
    \ let roman_numeral = ''\n  let num = number\n  let roman_numeral_array = ['m',\
    \ 'cm', 'd', 'cd', 'c', 'xc', 'l', 'xl', 'x', 'ix', 'v', 'iv', 'i']\n  let roman_numeral_array_length\
    \ = roman_numeral_array.length\n  let roman_numeral_array_index = 0\n  while (num\
    \ > 0) {\n    let roman_numeral_index = roman_numeral_array_index\n    while (num\
    \ >= roman_numeral_array[roman_numeral_index]) {\n      num -= roman_numeral_array[roman_numeral_index]\n\
    \      roman_numeral += roman_numeral_array[roman_numeral_index]\n      roman_numeral_array_index\
    \ += 1\n    }\n    roman_numeral_array_index = roman_numeral_index\n  }\n  return\
    \ roman_numeral.toLowerCase()\n}\n", "  const result = [];\n  const digits = number.toString();\n\
    \  const len = digits.length;\n  let i = len - 1;\n  let j = len - 1;\n  let k\
    \ = len - 1;\n  let l = len - 1;\n  let m = len - 1;\n  let n = len - 1;\n  let\
    \ o = len - 1;\n  let p = len - 1;\n  let q = len - 1;\n  let r = len - 1;\n \
    \ let s = len - 1;\n  let t = len - 1;\n  let u = len - 1;\n  let v = len - 1;\n\
    \  let w = len - 1;\n  let x = len - 1;\n  let y = len - 1;\n  let z = len - 1;\n\
    \  let a = len - 1;\n  let b = len - 1;\n  let c = len - 1;\n  let d = len - 1;\n\
    \  let e = len - 1;\n  let f = len - 1;\n  let g = len - 1;\n  let h = len - 1;\n\
    \  let i = len - 1;\n  let j = len - 1;\n  let k = len - 1;\n  let l = len - 1;\n\
    \  let m = len - 1;\n  let n = len - 1;\n  let o = len - 1;\n  let p = len - 1;\n\
    \  let q = len - 1;\n  let r = len - 1;\n  let s = len - 1;\n  let t = len - 1;\n\
    \  let u = len - 1;\n  let v = len - 1;\n  let w = len - 1;\n  let x = len - 1;\n\
    \  let y = len - 1;\n  let z = len - 1;\n  let a = len - 1;\n  let b = len - 1;\n\
    \  let c = len - 1;\n  let d = len - 1;\n  let e = len - 1;\n  let f = len - 1;\n\
    \  let g = len - 1;\n  let h = len - 1;\n  let i = len - 1;\n  let j = len - 1;\n\
    \  ", "  let roman_numeral = ''\n  let num = number\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n\
    \  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n\
    \  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\n  while (num > 0) {\n \
    \   if (num >= 1000) {\n      roman_numeral += 'm'\n      num -= 1000\n    } else\
    \ if (num >= 900) {\n      roman_numeral += 'cm'\n      num -= 900\n    } else\
    \ if (num >= 500) {\n      roman_numeral += 'd'\n      num -= 500\n    } else\
    \ if (num >= 400) {\n      roman_numeral += 'cd'\n      num -= 400\n    } else\
    \ if (num >= 100) {\n      roman_numeral += 'c'\n      num -= 100\n    } else\
    \ if (num >= 90) {\n      roman_numeral += 'xc'\n      num -= 90\n    } else if\
    \ (num >= 50) {\n      roman_numeral += 'l'\n      num -= 50\n    } else if (num\
    \ >= 40) {\n      roman_numeral += 'xl'\n      num -= 40\n    } else if (num >=\
    \ 10) {\n      roman_numeral += 'x'\n      num -= 10\n    } else if (num >= 9)\
    \ {\n      roman_numeral += 'ix'\n      num -= 9\n    } else if (num >= 5) {\n\
    \      roman_numeral += 'v'\n      num -= 5\n    } else if (num >= 4) {\n    \
    \  roman_numeral += 'iv'\n      num -= 4\n    } else if (num >= 1) {\n      roman_numeral\
    \ += 'i'\n      num -= 1\n    }\n  }\n  return roman_numeral\n}\n", "  let result\
    \ = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n\
    \  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n\
    \  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n\
    \  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n\
    \  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n\
    \  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n\
    \  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n\
    \  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n\
    \  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n\
    \  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n\
    \  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n\
    \  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n\
    \  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n\
    \  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n\
    \  let m = 0\n  let", "    let roman_numeral = '';\n    let roman_numeral_array\
    \ = [\n        '', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'\n  \
    \  ];\n    let roman_numeral_array_length = roman_numeral_array.length;\n    let\
    \ roman_numeral_array_index = 0;\n    let roman_numeral_array_index_length = roman_numeral_array_length\
    \ - 1;\n    let roman_numeral_array_index_index = 0;\n    let roman_numeral_array_index_index_length\
    \ = roman_numeral_array_length - 2;\n    while (number > 0) {\n        if (number\
    \ >= roman_numeral_array_index_index_length) {\n            roman_numeral += roman_numeral_array[roman_numeral_array_index];\n\
    \            roman_numeral_array_index++;\n            number -= roman_numeral_array_index_index_length;\n\
    \        } else if (number >= roman_numeral_array_index_length) {\n          \
    \  roman_numeral += roman_numeral_array[roman_numeral_array_index];\n        \
    \    roman_numeral_array_index++;\n            number -= roman_numeral_array_index_length;\n\
    \        } else if (number >= roman_numeral_array_index) {\n            roman_numeral\
    \ += roman_numeral_array[roman_numeral_array_index];\n            roman_numeral_array_index++;\n\
    \            number -= roman_numeral_array_index;\n        } else {\n        \
    \    roman_numeral += roman_numeral_array[roman_numeral_array_index];\n      \
    \      roman_numeral_array_index++;\n            number -= roman_numeral_array_index;\n\
    \        }\n    }\n    return roman_numeral.toLowerCase();\n}\n", "  const roman_numerals\
    \ = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100:\
    \ \"c\",\n    500: \"d\",\n    1000: \"m\"\n  };\n  let result = \"\";\n  while\
    \ (number > 0) {\n    const value = number % 10;\n    result = roman_numerals[value]\
    \ + result;\n    number = number / 10;\n  }\n  return result.toLowerCase();\n\
    }\n", "    let roman_numeral = '';\n    let num = number;\n    let i = 0;\n  \
    \  while (num > 0) {\n        let roman_digit = num % 10;\n        if (roman_digit\
    \ === 4 || roman_digit === 9) {\n            roman_numeral += 'v';\n        }\
    \ else if (roman_digit === 5) {\n            roman_numeral += 'l';\n        }\
    \ else if (roman_digit === 6) {\n            roman_numeral += 'x';\n        }\
    \ else if (roman_digit === 7) {\n            roman_numeral += 'c';\n        }\
    \ else if (roman_digit === 8) {\n            roman_numeral += 'd';\n        }\
    \ else if (roman_digit === 9) {\n            roman_numeral += 'm';\n        }\n\
    \        num = Math.floor(num / 10);\n        i++;\n    }\n    return roman_numeral.toLowerCase();\n\
    }\n", "    if (number < 1 || number > 1000) {\n        throw new Error(\"Invalid\
    \ number\");\n    }\n    let result = \"\";\n    let num = number;\n    let i\
    \ = 0;\n    while (num > 0) {\n        let digit = num % 10;\n        if (digit\
    \ === 1) {\n            result += \"i\";\n        } else if (digit === 2) {\n\
    \            result += \"ii\";\n        } else if (digit === 3) {\n          \
    \  result += \"iii\";\n        } else if (digit === 4) {\n            result +=\
    \ \"iv\";\n        } else if (digit === 5) {\n            result += \"v\";\n \
    \       } else if (digit === 6) {\n            result += \"vi\";\n        } else\
    \ if (digit === 7) {\n            result += \"vii\";\n        } else if (digit\
    \ === 8) {\n            result += \"viii\";\n        } else if (digit === 9) {\n\
    \            result += \"ix\";\n        } else if (digit === 0) {\n          \
    \  result += \"x\";\n        }\n        num = num / 10;\n        i++;\n    }\n\
    \    return result.toLowerCase();\n}\n", "  const roman_numeral_map = {\n    1:\
    \ 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n\
    \    1000: 'm',\n  };\n  const roman_numeral_list = [\n    'i',\n    'v',\n  \
    \  'x',\n    'l',\n    'c',\n    'd',\n    'm',\n  ];\n  const roman_numeral_list_length\
    \ = roman_numeral_list.length;\n  let roman_numeral_list_index = 0;\n  let roman_numeral_list_value\
    \ = 0;\n  let roman_numeral_list_value_length = 0;\n  let roman_numeral_list_value_index\
    \ = 0;\n  let roman_numeral_list_value_value = 0;\n  let roman_numeral_list_value_value_length\
    \ = 0;\n  let roman_numeral_list_value_value_index = 0;\n  let roman_numeral_list_value_value_value\
    \ = 0;\n  let roman_numeral_list_value_value_value_length = 0;\n  let roman_numeral_list_value_value_value_index\
    \ = 0;\n  let roman_numeral_list_value_value_value_value = 0;\n  let roman_numeral_list_value_value_value_value_length\
    \ = 0;\n  let roman_numeral_list_value_value_value_value_index = 0;\n  let roman_numeral_list_value_value_value_value_value\
    \ = 0;\n  let roman_numeral_list_value_value_value_value_value_length = 0;\n \
    \ let roman_numeral_list_value_value_value_value_value_index = 0;\n  let roman_numeral_list_value_value_value_value_value_value\
    \ = 0;\n  let roman_numeral_list_value_value_value_value_value_value_length =\
    \ 0;\n  let roman_", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n \
    \   10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\
    \  let roman_numeral = '';\n  while (number > 0) {\n    const roman_digit = roman_numerals[number\
    \ % 10];\n    roman_numeral = roman_digit + roman_numeral;\n    number = Math.floor(number\
    \ / 10);\n  }\n  return roman_numeral.toLowerCase();\n}\n", "  let result = ''\n\
    \  let num = number\n  let roman_num = []\n  let roman_num_length = 0\n  let roman_num_index\
    \ = 0\n  let roman_num_index_previous = 0\n  let roman_num_index_next = 0\n  let\
    \ roman_num_index_next_previous = 0\n  let roman_num_index_next_next = 0\n  let\
    \ roman_num_index_next_next_previous = 0\n  let roman_num_index_next_next_next\
    \ = 0\n  let roman_num_index_next_next_next_previous = 0\n  let roman_num_index_next_next_next_next\
    \ = 0\n  let roman_num_index_next_next_next_next_previous = 0\n  let roman_num_index_next_next_next_next_next\
    \ = 0\n  let roman_num_index_next_next_next_next_next_previous = 0\n  let roman_num_index_next_next_next_next_next_next\
    \ = 0\n  let roman_num_index_next_next_next_next_next_next_previous = 0\n  let\
    \ roman_num_index_next_next_next_next_next_next_next = 0\n  let roman_num_index_next_next_next_next_next_next_next_previous\
    \ = 0\n  let roman_num_index_next_next_next_next_next_next_next_next = 0\n  let\
    \ roman_num_index_next_next_next_next_next_next_next_next_previous = 0\n  let\
    \ roman_num_index_next_next_next_next_next_next_next_next_next = 0\n  let roman_num_index_next_next_next_next_next_next_next_next_next_previous\
    \ = 0\n  let roman_num_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0\n  let roman_num_index_next_next_next_next_next_", "  let result = ''\n\
    \  let num = number\n  let i = 0\n  let roman_num = ['', 'i', 'ii', 'iii', 'iv',\
    \ 'v', 'vi', 'vii', 'viii', 'ix']\n  let roman_num_len = roman_num.length\n  while\
    \ (num > 0) {\n    let digit = num % 10\n    num = num / 10\n    if (num > 0)\
    \ {\n      digit = digit * 10\n    }\n    result = roman_num[digit] + result\n\
    \  }\n  return result\n}\n", "  if (number < 1 || number > 1000) {\n    throw\
    \ new Error('Invalid number');\n  }\n\n  const roman_numerals = {\n    'I': 1,\n\
    \    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D': 500,\n    'M':\
    \ 1000,\n  };\n\n  let roman_numeral = '';\n  let current_numeral = 0;\n  while\
    \ (number > 0) {\n    current_numeral = number % 10;\n    number = number / 10;\n\
    \    roman_numeral = roman_numerals[current_numeral];\n    if (number > 0) {\n\
    \      roman_numeral += roman_numerals[number];\n    }\n  }\n  return roman_numeral;\n\
    }\n", "  if (number <= 0) {\n    throw new Error('Invalid number');\n  }\n\n \
    \ let roman_numeral = '';\n  let roman_numeral_array = ['', 'i', 'ii', 'iii',\
    \ 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n  let roman_numeral_array_length = roman_numeral_array.length;\n\
    \n  while (number > 0) {\n    let remainder = number % 10;\n    number = number\
    \ / 10;\n\n    roman_numeral = roman_numeral_array[remainder] + roman_numeral;\n\
    \  }\n\n  return roman_numeral;\n}\n", "  const roman_numerals = {\n    1: 'i',\n\
    \    5: 'v',\n    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000:\
    \ 'm',\n  };\n  let roman_numeral = '';\n  while (number > 0) {\n    const value\
    \ = number % 10;\n    number = number / 10;\n    roman_numeral = roman_numerals[value]\
    \ + roman_numeral;\n  }\n  return roman_numeral;\n}\n", "  if (number < 1 || number\
    \ > 1000) {\n    throw new Error('Invalid number');\n  }\n  let result = '';\n\
    \  let num = number;\n  let i = 0;\n  while (num > 0) {\n    let digit = num %\
    \ 10;\n    if (digit === 9) {\n      result += 'xix';\n    } else if (digit ===\
    \ 4) {\n      result += 'x';\n    } else if (digit === 5) {\n      result += 'v';\n\
    \    } else if (digit === 6) {\n      result += 'l';\n    } else if (digit ===\
    \ 7) {\n      result += 'x';\n    } else if (digit === 8) {\n      result += 'c';\n\
    \    } else if (digit === 9) {\n      result += 'x';\n    } else if (digit ===\
    \ 2) {\n      result += 'ii';\n    } else if (digit === 3) {\n      result +=\
    \ 'vii';\n    } else if (digit === 1) {\n      result += 'i';\n    }\n    num\
    \ = Math.floor(num / 10);\n    i++;\n  }\n  return result.toLowerCase();\n}\n",
  "    let result = '';\n    let num = number;\n    let i = 0;\n    while (num > 0)\
    \ {\n        let roman_num = roman_numerals[num % 10];\n        result = roman_num\
    \ + result;\n        num = Math.floor(num / 10);\n        i++;\n    }\n    return\
    \ result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1: \"i\",\n  \
    \  5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\"\
    ,\n    1000: \"m\",\n  };\n\n  let roman_numeral = \"\";\n  for (let i = number;\
    \ i > 0; i -= 1) {\n    roman_numeral += roman_numerals[i];\n  }\n\n  return roman_numeral.toLowerCase();\n\
    }\n", "  let result = ''\n  let roman_numeral = ['', 'i', 'ii', 'iii', 'iv', 'v',\
    \ 'vi', 'vii', 'viii', 'ix']\n  let roman_numeral_length = roman_numeral.length\n\
    \  let roman_numeral_index = 0\n  let roman_numeral_value = 0\n  let roman_numeral_count\
    \ = 0\n  let roman_numeral_index_count = 0\n  let roman_numeral_value_count =\
    \ 0\n  let roman_numeral_index_value_count = 0\n  let roman_numeral_index_value_count_index\
    \ = 0\n  let roman_numeral_index_value_count_index_count = 0\n  let roman_numeral_index_value_count_index_count_index\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value = 0\n  let\
    \ roman_numeral_index_value_count_index_count_index_value_count = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value_count\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value_count_index\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value_count_index_value\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value_count_index_value_count\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_value_count_index_value_count_index_value_count_index\
    \ = 0\n  let roman_numeral_index_value_count_index_count_index_", "  let result\
    \ = ''\n  let num = number\n  let i = 0\n  let j = 0\n  let k = 0\n  let m = 0\n\
    \  let n = 0\n  let d = 0\n  let c = 0\n  let v = 0\n  let x = 0\n  let l = 0\n\
    \  let r = 0\n  let f = 0\n  let s = 0\n  let t = 0\n  let a = 0\n  let b = 0\n\
    \  let q = 0\n  let p = 0\n  let g = 0\n  let m = 0\n  let n = 0\n  let d = 0\n\
    \  let c = 0\n  let v = 0\n  let x = 0\n  let l = 0\n  let r = 0\n  let f = 0\n\
    \  let s = 0\n  let t = 0\n  let a = 0\n  let b = 0\n  let q = 0\n  let p = 0\n\
    \  let g = 0\n  let m = 0\n  let n = 0\n  let d = 0\n  let c = 0\n  let v = 0\n\
    \  let x = 0\n  let l = 0\n  let r = 0\n  let f = 0\n  let s = 0\n  let t = 0\n\
    \  let a = 0\n  let b = 0\n  let q = 0\n  let p = 0\n  let g = 0\n  let m = 0\n\
    \  let n = 0\n  let d = 0\n  let c = 0\n  let v = 0\n  let x = 0\n  let l = 0\n\
    \  let r = 0\n  let f = 0\n  let s = 0\n  let t = 0\n  let a = 0\n  let b = 0\n\
    \  let q = 0\n  let p = 0\n  let g = 0\n  let m = 0\n  let n = 0\n  let d = 0\n\
    \  let c = 0\n  let v = 0\n  let x = 0\n  let l = 0\n  let r = 0\n  let f = 0\n\
    \  let s = 0\n  let t = 0\n  let a = 0\n  let b = 0\n  let q = 0\n  let p = 0\n\
    \  let g = 0\n  let", "    let result = '';\n    let num = number;\n    let i\
    \ = 0;\n    let j = 0;\n    let k = 0;\n    let roman_num = {\n        'I': 1,\n\
    \        'V': 5,\n        'X': 10,\n        'L': 50,\n        'C': 100,\n    \
    \    'D': 500,\n        'M': 1000\n    };\n    while (num > 0) {\n        if (num\
    \ >= roman_num[i]) {\n            result += roman_num[i];\n            num -=\
    \ roman_num[i];\n            k += roman_num[i];\n        } else if (num >= roman_num[j])\
    \ {\n            result += roman_num[j];\n            num -= roman_num[j];\n \
    \           k += roman_num[j];\n        } else {\n            result += roman_num[k];\n\
    \            num -= roman_num[k];\n            k += roman_num[k];\n        }\n\
    \        i++;\n        j++;\n    }\n    return result;\n}\n", "  if (number <\
    \ 1 || number > 1000) {\n    throw new Error('Invalid number');\n  }\n  let roman\
    \ = '';\n  let num = number;\n  let i = 0;\n  while (num > 0) {\n    let roman_digit\
    \ = roman_digits[num % 10];\n    if (i > 0 && roman_digit !== 'I') {\n      roman\
    \ = roman + roman_digit;\n    } else {\n      roman = roman + roman_digit;\n \
    \     i++;\n    }\n    num = Math.floor(num / 10);\n  }\n  return roman.toLowerCase();\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  const roman_numeral = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L':\
    \ 50,\n    'C': 100,\n    'D': 500,\n    'M': 1000,\n  };\n  let result = '';\n\
    \  for (let i = number; i > 0; i -= roman_numeral[result]) {\n    result = roman_numeral[result];\n\
    \  }\n  return result;\n}\n", "  let result = ''\n  let i = number\n  let j =\
    \ 0\n  let k = 0\n  let num = 0\n  let num_str = ''\n  let num_str_len = 0\n \
    \ let num_str_len_max = 0\n  let num_str_len_min = 0\n  let num_str_len_max_min\
    \ = 0\n  let num_str_len_min_max = 0\n  let num_str_len_max_min_max = 0\n  let\
    \ num_str_len_min_max_min_max = 0\n  let num_str_len_max_min_min_max = 0\n  let\
    \ num_str_len_min_min_max_min_max = 0\n  let num_str_len_max_min_min_min_max =\
    \ 0\n  let num_str_len_min_min_min_min_max = 0\n  let num_str_len_max_min_min_min_min_max\
    \ = 0\n  let num_str_len_min_min_min_min_min_min_max = 0\n  let num_str_len_max_min_min_min_min_min_min_max\
    \ = 0\n  let num_str_len_min_min_min_min_min_min_min_min_max = 0\n  let num_str_len_max_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_str_len_min_min_min_min_min_min_min_min_min_min_max = 0\n  let\
    \ num_str_len_max_min_min_min_min_min_min_min_min_min_min_max = 0\n  let num_str_len_min_min_min_min_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_str_len_max_min_min_min_min_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_str_len_min_min_min_min_min_min_min_min_min_min_min_", "  if\
    \ (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n  }\n\
    \n  let roman_numeral = '';\n  let roman_numeral_map = {\n    'I': '',\n    'V':\
    \ '',\n    'X': '',\n    'L': '',\n    'C': '',\n    'D': '',\n    'M': '',\n\
    \  };\n\n  for (let i = number; i > 0; i--) {\n    let roman_numeral_part = roman_numeral_map[i];\n\
    \    if (roman_numeral_part) {\n      roman_numeral = roman_numeral + roman_numeral_part;\n\
    \    } else {\n      roman_numeral = roman_numeral + roman_numeral_map['I'];\n\
    \    }\n  }\n\n  return roman_numeral.toLowerCase();\n}\n", "    let roman_numeral\
    \ = '';\n    let num = number;\n    let roman_num = {\n        '1': 'i',\n   \
    \     '2': 'ii',\n        '3': 'iii',\n        '4': 'iv',\n        '5': 'v',\n\
    \        '6': 'vi',\n        '7': 'vii',\n        '8': 'viii',\n        '9': 'ix',\n\
    \        '10': 'x',\n        '11': 'xi',\n        '12': 'xii',\n        '13':\
    \ 'xiii',\n        '14': 'xiv',\n        '15': 'xv',\n        '16': 'xvi',\n \
    \       '17': 'xvii',\n        '18': 'xviii',\n        '19': 'xix',\n        '20':\
    \ 'xx',\n        '30': 'xxx',\n        '40': 'xl',\n        '50': 'l',\n     \
    \   '60': 'lx',\n        '70': 'lxx',\n        '80': 'lxxx',\n        '90': 'lxxxx',\n\
    \        '100': 'xc',\n        '200': 'cc',\n        '300': 'ccc',\n        '400':\
    \ 'cd',\n        '500': 'd',\n        '600': 'dxc',\n        '700': 'dxx',\n \
    \       '800': 'dxxx',\n        '900': 'dxxxx',\n        '1000': 'm'\n    };\n\
    \    while (num > 0) {\n        let roman_num = num % 1000;\n        let roman_numeral\
    \ = roman_num + roman_numeral;\n        num = Math.floor(num / 1000);\n    }\n\
    \    return roman_numeral;\n}\n", "  let result = ''\n  let num = number\n  let\
    \ roman_num = []\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m\
    \ = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let\
    \ s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let\
    \ y = 0\n  let z = 0\n\n  while (num > 0) {\n    if (num >= 1000) {\n      roman_num.push(1000)\n\
    \      num -= 1000\n    } else if (num >= 900) {\n      roman_num.push(900)\n\
    \      num -= 900\n    } else if (num >= 500) {\n      roman_num.push(500)\n \
    \     num -= 500\n    } else if (num >= 400) {\n      roman_num.push(400)\n  \
    \    num -= 400\n    } else if (num >= 100) {\n      roman_num.push(100)\n   \
    \   num -= 100\n    } else if (num >= 90) {\n      roman_num.push(90)\n      num\
    \ -= 90\n    } else if (num >= 50) {\n      roman_num.push(50)\n      num -= 50\n\
    \    } else if (num >= 40) {\n      roman_num.push(40)\n      num -= 40\n    }\
    \ else if (num >= 10) {\n      roman_num.push(10)\n      num -= 10\n    } else\
    \ if (num >= 9) {\n      roman_num.push(9)\n      num -= 9\n    } else if (num\
    \ >= 5) {\n      roman_num.push(5)\n      num -= 5\n    } else if (num >= 4) {\n\
    \      roman_num.push(4)\n      num -= 4\n    } else if (num >= 1) {\n      roman_num.push(1)\n\
    \      num -= 1\n    }\n  }\n\n  for (i = 0; i < roman_num.length; i++) {\n  \
    \  if (roman_num[i] === 1000)", "    let result = '';\n    let num = number;\n\
    \    let i = 0;\n    while (num > 0) {\n        let digit = num % 10;\n      \
    \  if (digit === 0) {\n            result += 'x';\n        } else if (digit ===\
    \ 1) {\n            result += 'i';\n        } else if (digit === 2) {\n      \
    \      result += 'ii';\n        } else if (digit === 3) {\n            result\
    \ += 'iii';\n        } else if (digit === 4) {\n            result += 'iv';\n\
    \        } else if (digit === 5) {\n            result += 'v';\n        } else\
    \ if (digit === 6) {\n            result += 'vi';\n        } else if (digit ===\
    \ 7) {\n            result += 'vii';\n        } else if (digit === 8) {\n    \
    \        result += 'viii';\n        } else if (digit === 9) {\n            result\
    \ += 'ix';\n        }\n        num = num / 10;\n        i++;\n    }\n    return\
    \ result.toLowerCase();\n}\n", "  const roman_numerals = {\n    1: \"i\",\n  \
    \  5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"d\"\
    ,\n    1000: \"m\",\n  };\n  let roman_numeral = \"\";\n  for (let i = number;\
    \ i > 0; i -= 1000) {\n    roman_numeral += roman_numerals[1000];\n  }\n  for\
    \ (let i = number; i >= 100; i -= 100) {\n    roman_numeral += roman_numerals[100];\n\
    \  }\n  for (let i = number; i >= 50; i -= 50) {\n    roman_numeral += roman_numerals[50];\n\
    \  }\n  for (let i = number; i >= 10; i -= 10) {\n    roman_numeral += roman_numerals[10];\n\
    \  }\n  for (let i = number; i >= 5; i -= 5) {\n    roman_numeral += roman_numerals[5];\n\
    \  }\n  for (let i = number; i >= 1; i -= 1) {\n    roman_numeral += roman_numerals[1];\n\
    \  }\n  return roman_numeral;\n}\n", "  if (number < 1 || number > 1000) {\n \
    \   throw new Error('Invalid number');\n  }\n\n  const roman_numeral_map = {\n\
    \    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n    'D':\
    \ 500,\n    'M': 1000,\n  };\n\n  let roman_numeral = '';\n  while (number > 0)\
    \ {\n    const value = number % 10;\n    number = number / 10;\n\n    roman_numeral\
    \ = roman_numeral_map[value] + roman_numeral;\n  }\n\n  return roman_numeral;\n\
    }\n", "  const roman_numeral_map = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n\
    \    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral\
    \ = '';\n  while (number > 0) {\n    const value = number % 10;\n    if (value\
    \ === 1) {\n      roman_numeral += roman_numeral_map[value];\n    } else if (value\
    \ === 5) {\n      roman_numeral += roman_numeral_map[value];\n      number -=\
    \ 4;\n    } else if (value === 10) {\n      roman_numeral += roman_numeral_map[value];\n\
    \      number -= 9;\n    } else if (value === 50) {\n      roman_numeral += roman_numeral_map[value];\n\
    \      number -= 40;\n    } else if (value === 100) {\n      roman_numeral +=\
    \ roman_numeral_map[value];\n      number -= 90;\n    } else if (value === 500)\
    \ {\n      roman_numeral += roman_numeral_map[value];\n      number -= 400;\n\
    \    } else if (value === 1000) {\n      roman_numeral += roman_numeral_map[value];\n\
    \      number -= 900;\n    }\n  }\n  return roman_numeral.toLowerCase();\n}\n",
  "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  let roman_numeral = '';\n  let roman_numeral_array = [];\n  let roman_numeral_array_length\
    \ = 0;\n  let roman_numeral_array_index = 0;\n  let roman_numeral_array_index_2\
    \ = 0;\n  let roman_numeral_array_index_3 = 0;\n  let roman_numeral_array_index_4\
    \ = 0;\n  let roman_numeral_array_index_5 = 0;\n  let roman_numeral_array_index_6\
    \ = 0;\n  let roman_numeral_array_index_7 = 0;\n  let roman_numeral_array_index_8\
    \ = 0;\n  let roman_numeral_array_index_9 = 0;\n  let roman_numeral_array_index_10\
    \ = 0;\n  let roman_numeral_array_index_11 = 0;\n  let roman_numeral_array_index_12\
    \ = 0;\n  let roman_numeral_array_index_13 = 0;\n  let roman_numeral_array_index_14\
    \ = 0;\n  let roman_numeral_array_index_15 = 0;\n  let roman_numeral_array_index_16\
    \ = 0;\n  let roman_numeral_array_index_17 = 0;\n  let roman_numeral_array_index_18\
    \ = 0;\n  let roman_numeral_array_index_19 = 0;\n  let roman_numeral_array_index_20\
    \ = 0;\n  let roman_numeral_array_index_21 = 0;\n  let roman_numeral_array_index_22\
    \ = 0;\n  let roman_numeral_array_index_23 = 0;\n  let roman_numeral_array_index_24\
    \ = 0;\n  let roman_numeral_array_index_25 = 0;\n  let roman_numeral_array_index_26\
    \ = 0;\n  let roman_numeral_array", "    let result = '';\n    let num = number;\n\
    \    let i = 0;\n    let roman_num = {\n        'I': 1,\n        'V': 5,\n   \
    \     'X': 10,\n        'L': 50,\n        'C': 100,\n        'D': 500,\n     \
    \   'M': 1000\n    };\n    while (num > 0) {\n        let value = roman_num[num\
    \ % 10];\n        if (value > 1) {\n            result = value + result;\n   \
    \     }\n        num = Math.floor(num / 10);\n        i++;\n    }\n    return\
    \ result.toLowerCase();\n}\n", "  if (number < 1 || number > 1000) {\n    throw\
    \ new Error('Invalid number');\n  }\n  let result = '';\n  let roman_numeral =\
    \ ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n  let i = 0;\n\
    \  while (number > 0) {\n    if (number >= 1000) {\n      result = roman_numeral[i]\
    \ + result;\n      number -= 1000;\n    } else if (number >= 900) {\n      result\
    \ = 'cm' + result;\n      number -= 900;\n    } else if (number >= 500) {\n  \
    \    result = 'd' + result;\n      number -= 500;\n    } else if (number >= 400)\
    \ {\n      result = 'cd' + result;\n      number -= 400;\n    } else if (number\
    \ >= 100) {\n      result = 'c' + result;\n      number -= 100;\n    } else if\
    \ (number >= 90) {\n      result = 'xc' + result;\n      number -= 90;\n    }\
    \ else if (number >= 50) {\n      result = 'l' + result;\n      number -= 50;\n\
    \    } else if (number >= 40) {\n      result = 'xl' + result;\n      number -=\
    \ 40;\n    } else if (number >= 10) {\n      result = 'x' + result;\n      number\
    \ -= 10;\n    } else if (number >= 9) {\n      result = 'ix' + result;\n     \
    \ number -= 9;\n    } else if (number >= 5) {\n      result = 'v' + result;\n\
    \      number -= 5;\n    } else if (number >= 4) {\n      result = 'iv' + result;\n\
    \      number -= 4;\n    } else if (number >= 1) {\n      result = 'i' + result;\n\
    \      number -= 1;\n    }\n    i++;\n  }\n  return result.toLowerCase();\n}\n",
  "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\",\n    50:\
    \ \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n  let roman_numeral\
    \ = \"\";\n  while (number > 0) {\n    const num = number % 10;\n    roman_numeral\
    \ = roman_numerals[num] + roman_numeral;\n    number = Math.floor(number / 10);\n\
    \  }\n  return roman_numeral;\n}\n", "  if (number < 1 || number > 1000) {\n \
    \   throw new Error(\"Invalid number\");\n  }\n  let result = \"\";\n  let num\
    \ = number;\n  let lastDigit = 0;\n  let lastDigitValue = 0;\n  while (num > 0)\
    \ {\n    let digit = num % 10;\n    if (digit === 0) {\n      result += \"\";\n\
    \    } else if (digit === 1) {\n      result += \"i\";\n    } else if (digit ===\
    \ 2) {\n      result += \"ii\";\n    } else if (digit === 3) {\n      result +=\
    \ \"iii\";\n    } else if (digit === 4) {\n      result += \"iv\";\n    } else\
    \ if (digit === 5) {\n      result += \"v\";\n    } else if (digit === 6) {\n\
    \      result += \"vi\";\n    } else if (digit === 7) {\n      result += \"vii\"\
    ;\n    } else if (digit === 8) {\n      result += \"viii\";\n    } else if (digit\
    \ === 9) {\n      result += \"ix\";\n    } else {\n      throw new Error(\"Invalid\
    \ number\");\n    }\n    num = num / 10;\n  }\n  return result.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n  \
    \  50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral\
    \ = '';\n  while (number > 0) {\n    const roman_digit = number % 10;\n    number\
    \ = Math.floor(number / 10);\n    roman_numeral = roman_numerals[roman_digit]\
    \ + roman_numeral;\n  }\n  return roman_numeral;\n}\n", "  let result = ''\n \
    \ let num = number\n  let i = 0\n  while (num > 0) {\n    let roman_num = roman_numerals[num\
    \ % 10]\n    result = roman_num + result\n    num = Math.floor(num / 10)\n   \
    \ i++\n  }\n  return result.toLowerCase()\n}\n", "  let result = ''\n  let roman_numerals\
    \ = {\n    'I': 1,\n    'V': 5,\n    'X': 10,\n    'L': 50,\n    'C': 100,\n \
    \   'D': 500,\n    'M': 1000\n  }\n  for (let key in roman_numerals) {\n    while\
    \ (number >= roman_numerals[key]) {\n      result += key\n      number -= roman_numerals[key]\n\
    \    }\n  }\n  return result\n}\n", "  const roman_numerals = {\n    1: \"i\"\
    ,\n    5: \"v\",\n    10: \"x\",\n    50: \"l\",\n    100: \"c\",\n    500: \"\
    d\",\n    1000: \"m\",\n  };\n  let roman_numeral = \"\";\n  while (number > 0)\
    \ {\n    const roman_numeral_part = roman_numerals[number % 10];\n    roman_numeral\
    \ = roman_numeral_part + roman_numeral;\n    number = Math.floor(number / 10);\n\
    \  }\n  return roman_numeral.toLowerCase();\n}\n", "  let result = ''\n  let num\
    \ = number\n  let i = 0\n  while (num > 0) {\n    let digit = num % 10\n    if\
    \ (digit === 4 || digit === 9) {\n      result += 'v'\n    } else if (digit ===\
    \ 5) {\n      result += 'x'\n    } else if (digit === 6) {\n      result += 'l'\n\
    \    } else if (digit === 7) {\n      result += 'c'\n    } else if (digit ===\
    \ 8) {\n      result += 'd'\n    } else if (digit === 2) {\n      result += 'ii'\n\
    \    } else if (digit === 3) {\n      result += 'iii'\n    } else if (digit ===\
    \ 1) {\n      result += 'i'\n    }\n    num = num / 10\n    i++\n  }\n  return\
    \ result.toLowerCase()\n}\n", "  let roman_numeral = ''\n  let i = 0\n  let num\
    \ = number\n  while (num > 0) {\n    let roman_digit = roman_numeral_digits[num\
    \ % 10]\n    if (i > 0 && roman_digit === 'x') {\n      roman_numeral = 'x' +\
    \ roman_numeral\n    } else if (i > 0 && roman_digit === 'c') {\n      roman_numeral\
    \ = 'c' + roman_numeral\n    } else if (i > 0 && roman_digit === 'l') {\n    \
    \  roman_numeral = 'l' + roman_numeral\n    } else if (i > 0 && roman_digit ===\
    \ 'd') {\n      roman_numeral = 'd' + roman_numeral\n    } else if (i > 0 && roman_digit\
    \ === 'm') {\n      roman_numeral = 'm' + roman_numeral\n    } else if (i > 0\
    \ && roman_digit === 'v') {\n      roman_numeral = 'v' + roman_numeral\n    }\
    \ else if (i > 0 && roman_digit === 'i') {\n      roman_numeral = 'i' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'x') {\n      roman_numeral = 'x' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'c') {\n      roman_numeral = 'c' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'l') {\n      roman_numeral = 'l' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'd') {\n      roman_numeral = 'd' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'm') {\n      roman_numeral = 'm' + roman_numeral\n\
    \    } else if (i > 0 && roman_digit === 'v') {\n      roman_numeral = 'v' + roman_numeral\n\
    \    } else if (i >", "  let result = ''\n  let num = number\n  let i = 0\n  let\
    \ j = 0\n  let k = 0\n  let roman_num = ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi',\
    \ 'vii', 'viii', 'ix']\n  let roman_num_len = roman_num.length\n  while (num >\
    \ 0) {\n    if (num >= 1000) {\n      result = roman_num[roman_num_len - 1] +\
    \ result\n      num -= 1000\n    } else if (num >= 900) {\n      result = roman_num[roman_num_len\
    \ - 2] + result\n      num -= 900\n    } else if (num >= 500) {\n      result\
    \ = roman_num[roman_num_len - 3] + result\n      num -= 500\n    } else if (num\
    \ >= 400) {\n      result = roman_num[roman_num_len - 4] + result\n      num -=\
    \ 400\n    } else if (num >= 100) {\n      result = roman_num[roman_num_len -\
    \ 5] + result\n      num -= 100\n    } else if (num >= 90) {\n      result = roman_num[roman_num_len\
    \ - 6] + result\n      num -= 90\n    } else if (num >= 50) {\n      result =\
    \ roman_num[roman_num_len - 7] + result\n      num -= 50\n    } else if (num >=\
    \ 40) {\n      result = roman_num[roman_num_len - 8] + result\n      num -= 40\n\
    \    } else if (num >= 10) {\n      result = roman_num[roman_num_len - 9] + result\n\
    \      num -= 10\n    } else if (num >= 9) {\n      result = roman_num[roman_num_len\
    \ - 10] + result\n      num -= 9\n    } else if (num >= 5) {\n      result = roman_num[roman_num_len\
    \ - 11] + result\n      num -= 5\n    } else if (num >= 4) {\n      result = roman_num[roman_num_len\
    \ - 12] + result\n      num -= 4\n", "    let result = '';\n    let num = number;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let m = 0;\n    let n = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n\
    \    let e = 0;\n    ", "  const roman_numeral_map = {\n    1: 'i',\n    5: 'v',\n\
    \    10: 'x',\n    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\
    \n  const roman_numeral_list = [\n    'i',\n    'v',\n    'x',\n    'l',\n   \
    \ 'c',\n    'd',\n    'm',\n  ];\n\n  const roman_numeral_list_length = roman_numeral_list.length;\n\
    \n  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n\n  let roman_numeral_list_index = 0;\n\n  while (number > 0) {\n    const\
    \ roman_numeral_value = number % 10;\n\n    if (roman_numeral_value === 5) {\n\
    \      roman_numeral_list_index += 1;\n    } else if (roman_numeral_value ===\
    \ 1) {\n      roman_numeral_list_index += 2;\n    } else {\n      roman_numeral_list_index\
    \ += 1;\n    }\n\n    number = Math.floor(number / 10);\n  }\n\n  return roman_numeral_list[roman_numeral_list_index];\n\
    }\n\nmodule.exports = int_to_mini_roman;\n", "  let result = ''\n  let num = number\n\
    \  let i = 0\n  while (num > 0) {\n    let digit = num % 10\n    if (digit ===\
    \ 4 || digit === 9) {\n      result += 'v'\n    } else if (digit === 5) {\n  \
    \    result += 'x'\n    } else if (digit === 6) {\n      result += 'l'\n    }\
    \ else if (digit === 7) {\n      result += 'c'\n    } else if (digit === 8) {\n\
    \      result += 'd'\n    } else if (digit === 2) {\n      result += 'ii'\n  \
    \  } else if (digit === 3) {\n      result += 'iii'\n    } else if (digit ===\
    \ 1) {\n      result += 'i'\n    }\n    num = num / 10\n  }\n  return result\n\
    }\n", "  if (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n\
    \  }\n  const roman_numeral = {\n    'I': '',\n    'V': 'v',\n    'X': 'x',\n\
    \    'L': 'l',\n    'C': 'c',\n    'D': 'd',\n    'M': 'm',\n  };\n  let result\
    \ = '';\n  while (number > 0) {\n    const digit = number % 10;\n    if (digit\
    \ === 0) {\n      result += roman_numeral[digit];\n      number = Math.floor(number\
    \ / 10);\n    } else {\n      result += roman_numeral[digit];\n      number -=\
    \ digit;\n      number = Math.floor(number / 10);\n    }\n  }\n  return result.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n  \
    \  50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  const roman_numerals_reversed\
    \ = {\n    1000: 'm',\n    500: 'd',\n    100: 'c',\n    50: 'l',\n    10: 'x',\n\
    \    5: 'v',\n    1: 'i',\n  };\n  let result = '';\n  while (number > 0) {\n\
    \    const digit = number % 10;\n    result = roman_numerals[digit] + result;\n\
    \    number = Math.floor(number / 10);\n  }\n  return result.split('').reverse().join('');\n\
    }\n", "    let result = '';\n    let num = number;\n    let i = 0;\n    let j\
    \ = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let\
    \ o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n   \
    \ let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\
    \    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n\
    \    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n\
    \    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    ", "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n\
    \    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  let roman_numeral\
    \ = '';\n  while (number > 0) {\n    const roman_numeral_part = roman_numerals[number\
    \ % 10];\n    if (roman_numeral_part === 'i') {\n      roman_numeral += 'v';\n\
    \    } else if (roman_numeral_part === 'v') {\n      roman_numeral += 'x';\n \
    \   } else if (roman_numeral_part === 'x') {\n      roman_numeral += 'l';\n  \
    \  } else if (roman_numeral_part === 'l') {\n      roman_numeral += 'c';\n   \
    \ } else if (roman_numeral_part === 'c') {\n      roman_numeral += 'd';\n    }\
    \ else if (roman_numeral_part === 'd') {\n      roman_numeral += 'm';\n    } else\
    \ if (roman_numeral_part === 'm') {\n      roman_numeral += 'x';\n    }\n    number\
    \ = Math.floor(number / 10);\n  }\n  return roman_numeral.toLowerCase();\n}\n",
  "  let roman_num = ''\n  let num_array = []\n  let num_array_length = []\n  let\
    \ num_array_length_index = 0\n  let num_array_length_index_max = 0\n  let num_array_length_index_min\
    \ = 0\n  let num_array_length_index_min_max = 0\n  let num_array_length_index_min_min\
    \ = 0\n  let num_array_length_index_min_min_max = 0\n  let num_array_length_index_min_min_min\
    \ = 0\n  let num_array_length_index_min_min_min_max = 0\n  let num_array_length_index_min_min_min_min\
    \ = 0\n  let num_array_length_index_min_min_min_min_max = 0\n  let num_array_length_index_min_min_min_min_min\
    \ = 0\n  let num_array_length_index_min_min_min_min_min_max = 0\n  let num_array_length_index_min_min_min_min_min_min\
    \ = 0\n  let num_array_length_index_min_min_min_min_min_min_max = 0\n  let num_array_length_index_min_min_min_min_min_min_min\
    \ = 0\n  let num_array_length_index_min_min_min_min_min_min_min_max = 0\n  let\
    \ num_array_length_index_min_min_min_min_min_min_min_min = 0\n  let num_array_length_index_min_min_min_min_min_min_min_min_max\
    \ = 0\n  let num_array_length_index_min_min_min_min_min_min_min_min_min = 0\n\
    \  let num_array_length_index_min_min_min_min_min_min_min_min_min_max = 0\n  let\
    \ num_array_length_index_min_min_min_min_min_min_min_min_min_min = 0\n  let num_array_length_index_min_min",
  "  const roman_numerals = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n    50: 'l',\n\
    \    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n\n  let roman_numeral = '';\n\
    \  while (number > 0) {\n    const roman_digit = number % 10;\n    number = Math.floor(number\
    \ / 10);\n    roman_numeral = roman_numerals[roman_digit] + roman_numeral;\n \
    \ }\n\n  return roman_numeral.toLowerCase();\n}\n", "    let roman_numeral = '';\n\
    \    let num = number;\n    let roman_numeral_map = {\n        1000: 'M',\n  \
    \      900: 'CM',\n        500: 'D',\n        400: 'CD',\n        100: 'C',\n\
    \        90: 'XC',\n        50: 'L',\n        40: 'XL',\n        10: 'X',\n  \
    \      9: 'IX',\n        5: 'V',\n        4: 'IV',\n        1: 'I'\n    };\n \
    \   while (num > 0) {\n        let key = num % 10;\n        roman_numeral = roman_numeral_map[key]\
    \ + roman_numeral;\n        num = Math.floor(num / 10);\n    }\n    return roman_numeral;\n\
    }\n", "  const roman_numeral_map = {\n    1: 'i',\n    5: 'v',\n    10: 'x',\n\
    \    50: 'l',\n    100: 'c',\n    500: 'd',\n    1000: 'm',\n  };\n  const roman_numeral_list\
    \ = [\n    'i',\n    'v',\n    'x',\n    'l',\n    'c',\n    'd',\n    'm',\n\
    \  ];\n  const roman_numeral_list_length = roman_numeral_list.length;\n\n  if\
    \ (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n  }\n\
    \n  let roman_numeral_list_index = 0;\n  let roman_numeral_list_index_prev = 0;\n\
    \  let roman_numeral_list_index_next = 0;\n  let roman_numeral_list_index_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next = 0;\n\n  let roman_numeral_list_index_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next = 0;\n\n  let\
    \ roman_numeral_list_index_next_next_next_next_next_next = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n\n  let roman_numeral_list_index_next_next_next_next_next_next", "  if\
    \ (number < 1 || number > 1000) {\n    throw new Error('Invalid number');\n  }\n\
    \  let result = '';\n  let num = number;\n  let i = 0;\n  while (num > 0) {\n\
    \    let roman = roman_numerals[num % 10];\n    if (roman === undefined) {\n \
    \     throw new Error('Invalid number');\n    }\n    result = roman + result;\n\
    \    num = Math.floor(num / 10);\n    i++;\n  }\n  return result.toLowerCase();\n\
    }\n", "  const roman_numerals = {\n    1: \"i\",\n    5: \"v\",\n    10: \"x\"\
    ,\n    50: \"l\",\n    100: \"c\",\n    500: \"d\",\n    1000: \"m\",\n  };\n\
    \  let result = \"\";\n  while (number > 0) {\n    const value = number % 10;\n\
    \    number = number / 10;\n    result = roman_numerals[value] + result;\n  }\n\
    \  return result.toLowerCase();\n}\n", "    let result = '';\n    let num = number;\n\
    \    let roman_num = ['', 'i', 'ii', 'iii', 'iv', 'v', 'vi', 'vii', 'viii', 'ix'];\n\
    \    let roman_num_len = roman_num.length;\n    while (num > 0) {\n        let\
    \ digit = num % 10;\n        result = roman_num[digit] + result;\n        num\
    \ = Math.floor(num / 10);\n    }\n    return result.toLowerCase();\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

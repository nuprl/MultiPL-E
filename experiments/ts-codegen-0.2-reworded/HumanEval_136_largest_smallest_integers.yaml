name: HumanEval_136_largest_smallest_integers
language: ts
prompt: "//Create a function that returns an array (a, b), where 'a' is\n// the largest\
  \ of negative integers, and 'b' is the smallest\n// of positive integers in an array.\n\
  // If there is no negative or positive integers, return them as undefined.\n// Examples:\n\
  // >>> largest_smallest_integers([2, 4, 1, 3, 5, 7])\n// [undefined, 1]\n// >>>\
  \ largest_smallest_integers([])\n// [undefined, undefined]\n// >>> largest_smallest_integers([0])\n\
  // [undefined, undefined]\nfunction largest_smallest_integers(lst: number[]): [number\
  \ | undefined, number | undefined] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = largest_smallest_integers;\n  assert.deepEqual(candidate([2,\
  \ 4, 1, 3, 5, 7]),[undefined, 1]);\n  assert.deepEqual(candidate([2, 4, 1, 3, 5,\
  \ 7, 0]),[undefined, 1]);\n  assert.deepEqual(candidate([1, 3, 2, 4, 5, 6, -2]),[-2,\
  \ 1]);\n  assert.deepEqual(candidate([4, 5, 3, 6, 2, 7, -7]),[-7, 2]);\n  assert.deepEqual(candidate([7,\
  \ 3, 8, 4, 9, 2, 5, -9]),[-9, 2]);\n  assert.deepEqual(candidate([]),[undefined,\
  \ undefined]);\n  assert.deepEqual(candidate([0]),[undefined, undefined]);\n  assert.deepEqual(candidate([-1,\
  \ -3, -5, -6]),[-1, undefined]);\n  assert.deepEqual(candidate([-1, -3, -5, -6,\
  \ 0]),[-1, undefined]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, 1]),[-3,\
  \ 1]);\n  assert.deepEqual(candidate([-6, -4, -4, -3, -100, 1]),[-3, 1]);\n}\n\n\
  test();"
completions: ["  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (a === undefined) {\n        a = lst[i];\n\
    \      } else if (lst[i] > a) {\n        a = lst[i];\n      }\n    } else if (lst[i]\
    \ > 0) {\n      if (b === undefined) {\n        b = lst[i];\n      } else if (lst[i]\
    \ < b) {\n        b = lst[i];\n      }\n    }\n  }\n  return [a, b];\n}\n", " \
    \ let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  let result = []\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    result = [undefined, undefined]\n  } else {\n    result = [max, min]\n\
    \  }\n  return result\n}\n", "  let min = Infinity\n  let max = -Infinity\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min ===\
    \ Infinity || max === -Infinity) {\n    return [undefined, undefined]\n  }\n \
    \ return [max, min]\n}\n", "  let min = Infinity;\n  let max = -Infinity;\n  let\
    \ min_index = 0;\n  let max_index = 0;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n      max_index = i;\n    }\n \
    \ }\n  if (min === Infinity) {\n    return [undefined, undefined];\n  }\n  return\
    \ [min, lst[min_index]];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (a === undefined) {\n        a = lst[i];\n\
    \      } else if (lst[i] > a) {\n        a = lst[i];\n      }\n    } else if (lst[i]\
    \ > 0) {\n      if (b === undefined) {\n        b = lst[i];\n      } else if (lst[i]\
    \ < b) {\n        b = lst[i];\n      }\n    }\n  }\n  return [a, b];\n}\n", " \
    \ if (lst.length === 0) {\n    return [undefined, undefined];\n  }\n\n  let max\
    \ = -Infinity;\n  let min = Infinity;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n\n  return [max, min];\n}\n", "  let max\
    \ = -Infinity\n  let min = Infinity\n  let res = []\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n    if (lst[i] <\
    \ min) {\n      min = lst[i]\n    }\n  }\n  if (max === -Infinity) {\n    res\
    \ = [undefined, undefined]\n  } else {\n    res = [max, min]\n  }\n  return res\n\
    }\n", "  const neg = lst.filter(x => x < 0);\n  const pos = lst.filter(x => x\
    \ > 0);\n  if (neg.length === 0 && pos.length === 0) {\n    return [undefined,\
    \ undefined];\n  }\n  if (neg.length === 0) {\n    return [undefined, pos[0]];\n\
    \  }\n  if (pos.length === 0) {\n    return [neg[0], undefined];\n  }\n  return\
    \ [Math.max(...neg), Math.min(...pos)];\n}\n", "  let a = undefined;\n  let b\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n\
    \  }\n  return [a, b];\n}\n", "  let a = undefined;\n  let b = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  if (min === Infinity) {\n    return\
    \ [undefined, undefined];\n  }\n  return [max, min];\n}\n", "  let min = Number.MAX_VALUE;\n\
    \  let max = Number.MIN_VALUE;\n  let a = undefined;\n  let b = undefined;\n \
    \ for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min =\
    \ lst[i];\n      a = undefined;\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \      b = undefined;\n    }\n    if (lst[i] < min && lst[i] > max) {\n      a\
    \ = lst[i];\n      b = undefined;\n    }\n  }\n  return [a, b];\n}\n", "  let\
    \ min = undefined;\n  let max = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (min === undefined) {\n        min =\
    \ lst[i];\n      } else {\n        min = Math.min(min, lst[i]);\n      }\n   \
    \ } else if (lst[i] > 0) {\n      if (max === undefined) {\n        max = lst[i];\n\
    \      } else {\n        max = Math.max(max, lst[i]);\n      }\n    }\n  }\n \
    \ return [min, max];\n}\n", "  let min = 0\n  let max = 0\n  let min_index = 0\n\
    \  let max_index = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      min = lst[i]\n      min_index = i\n    }\n    if (lst[i] > 0)\
    \ {\n      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min === 0) {\n\
    \    return [undefined, undefined]\n  }\n  return [min, max]\n}\n", "  if (lst.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  let min = lst[0];\n  let\
    \ max = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  return [min, max];\n}\n", "  let min = 0\n  let max = 0\n  let\
    \ min_index = 0\n  let max_index = 0\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      min = lst[i]\n      min_index = i\n    }\n    if\
    \ (lst[i] > 0) {\n      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min\
    \ === 0) {\n    return [undefined, undefined]\n  }\n  return [min, max]\n}\n",
  "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n\
    \      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  if (min === Infinity || max === -Infinity) {\n    return [undefined,\
    \ undefined]\n  }\n  return [max, min]\n}\n", "  let min = Infinity\n  let max\
    \ = -Infinity\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  if (min === Infinity || max === -Infinity) {\n    return [undefined,\
    \ undefined]\n  }\n  return [min, max]\n}\n", "  let min = 0\n  let max = 0\n\
    \  let min_index = 0\n  let max_index = 0\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      if (min === 0) {\n        min = lst[i]\n   \
    \     min_index = i\n      } else if (lst[i] < min) {\n        min = lst[i]\n\
    \        min_index = i\n      }\n    } else if (lst[i] > 0) {\n      if (max ===\
    \ 0) {\n        max = lst[i]\n        max_index = i\n      } else if (lst[i] >\
    \ max) {\n        max = lst[i]\n        max_index = i\n      }\n    }\n  }\n \
    \ if (min === 0) {\n    return [undefined, undefined]\n  } else {\n    return\
    \ [min, max]\n  }\n}\n", "  let min = 0\n  let max = 0\n  let min_index = 0\n\
    \  let max_index = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      if (min === 0) {\n        min = lst[i]\n        min_index = i\n\
    \      } else if (lst[i] < min) {\n        min = lst[i]\n        min_index = i\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (max === 0) {\n        max =\
    \ lst[i]\n        max_index = i\n      } else if (lst[i] > max) {\n        max\
    \ = lst[i]\n        max_index = i\n      }\n    }\n  }\n  if (min === 0) {\n \
    \   return [undefined, undefined]\n  } else {\n    return [min, max]\n  }\n}\n",
  "  let min = Infinity;\n  let max = -Infinity;\n  let min_index = -1;\n  let max_index\
    \ = -1;\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n\
    \      min = lst[i];\n      min_index = i;\n    }\n    if (lst[i] > max) {\n \
    \     max = lst[i];\n      max_index = i;\n    }\n  }\n\n  if (min_index === -1)\
    \ {\n    return [undefined, undefined];\n  } else {\n    return [lst[min_index],\
    \ lst[max_index]];\n  }\n}\n", "  let min = Infinity, max = -Infinity\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  return [min,\
    \ max]\n}\n", "  let max = 0\n  let min = 0\n  let max_index = 0\n  let min_index\
    \ = 0\n  let i = 0\n  for (i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (lst[i] > max) {\n        max = lst[i]\n        max_index = i\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n        min\
    \ = lst[i]\n        min_index = i\n      }\n    }\n  }\n  if (max === 0 && min\
    \ === 0) {\n    return [undefined, undefined]\n  } else if (max === 0) {\n   \
    \ return [undefined, lst[min_index]]\n  } else if (min === 0) {\n    return [lst[max_index],\
    \ undefined]\n  } else {\n    return [lst[max_index], lst[min_index]]\n  }\n}\n",
  "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      if (a === undefined) {\n        a = lst[i];\n\
    \      } else {\n        a = Math.max(a, lst[i]);\n      }\n    } else if (lst[i]\
    \ > 0) {\n      if (b === undefined) {\n        b = lst[i];\n      } else {\n\
    \        b = Math.min(b, lst[i]);\n      }\n    }\n  }\n  return [a, b];\n}\n",
  "  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n  let min_index =\
    \ -1;\n  let max_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < min) {\n      min = lst[i];\n      min_index = i;\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n      max_index = i;\n    }\n  }\n  if (min_index\
    \ === -1 && max_index === -1) {\n    return [undefined, undefined];\n  }\n  if\
    \ (min_index === -1) {\n    return [undefined, max];\n  }\n  if (max_index ===\
    \ -1) {\n    return [min, undefined];\n  }\n  return [min, max];\n}\n", "  let\
    \ min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity) {\n    return [undefined,\
    \ undefined]\n  }\n  return [min, max]\n}\n", "  let min = Number.MAX_VALUE\n\
    \  let max = Number.MIN_VALUE\n  let min_index = -1\n  let max_index = -1\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \      min_index = i\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n   \
    \   max_index = i\n    }\n  }\n  if (min_index === -1) {\n    return [undefined,\
    \ undefined]\n  } else {\n    return [min, max]\n  }\n}\n", "  let max = 0\n \
    \ let min = 0\n  let res = []\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n      }\n \
    \   } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n        min = lst[i]\n\
    \      }\n    } else {\n      res.push(undefined)\n    }\n  }\n  if (max === 0\
    \ && min === 0) {\n    res.push(undefined)\n  }\n  return res\n}\n", "  let min\
    \ = undefined;\n  let max = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      min = lst[i];\n    } else if (lst[i] > 0) {\n\
    \      max = lst[i];\n    }\n  }\n  return [min, max];\n}\n", "  let a = undefined;\n\
    \  let b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n\
    \    }\n  }\n  return [a, b];\n}\n", "  const neg = [];\n  const pos = [];\n \
    \ for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      neg.push(lst[i]);\n\
    \    } else if (lst[i] > 0) {\n      pos.push(lst[i]);\n    }\n  }\n  if (neg.length\
    \ === 0 && pos.length === 0) {\n    return [undefined, undefined];\n  }\n  if\
    \ (neg.length === 0) {\n    return [undefined, pos[0]];\n  }\n  if (pos.length\
    \ === 0) {\n    return [neg[0], undefined];\n  }\n  return [Math.max(neg[0], pos[0]),\
    \ Math.min(neg[0], pos[0])];\n}\n", "  let min = 0\n  let max = 0\n  let min_index\
    \ = 0\n  let max_index = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < 0) {\n      min = lst[i]\n      min_index = i\n    } else if (lst[i]\
    \ > 0) {\n      max = lst[i]\n      max_index = i\n    }\n  }\n\n  if (min ===\
    \ 0 && max === 0) {\n    return [undefined, undefined]\n  } else if (min === 0)\
    \ {\n    return [undefined, max]\n  } else if (max === 0) {\n    return [min,\
    \ undefined]\n  } else {\n    return [min, max]\n  }\n}\n", "  const neg = lst.filter(x\
    \ => x < 0);\n  const pos = lst.filter(x => x > 0);\n  if (neg.length === 0 &&\
    \ pos.length === 0) {\n    return [undefined, undefined];\n  } else if (neg.length\
    \ === 0) {\n    return [undefined, pos[0]];\n  } else if (pos.length === 0) {\n\
    \    return [neg[0], undefined];\n  } else {\n    return [Math.max(...neg), Math.min(...pos)];\n\
    \  }\n}\n", "  let min = undefined;\n  let max = undefined;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min === undefined)\
    \ {\n        min = lst[i];\n      } else {\n        min = Math.min(min, lst[i]);\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (max === undefined) {\n     \
    \   max = lst[i];\n      } else {\n        max = Math.max(max, lst[i]);\n    \
    \  }\n    }\n  }\n  return [min, max];\n}\n", "  let min = Infinity;\n  let max\
    \ = -Infinity;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  if (min === Infinity) {\n    return [undefined, undefined];\n \
    \ }\n  return [min, max];\n}\n", "  let max = -Infinity\n  let min = Infinity\n\
    \  let result = []\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ > max) {\n      max = lst[i]\n    }\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \    }\n  }\n\n  if (max === -Infinity && min === Infinity) {\n    result = [undefined,\
    \ undefined]\n  } else if (max === -Infinity) {\n    result = [undefined, min]\n\
    \  } else if (min === Infinity) {\n    result = [max, undefined]\n  } else {\n\
    \    result = [max, min]\n  }\n\n  return result\n}\n", "  let min = Infinity\n\
    \  let max = -Infinity\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  if (min === Infinity || max === -Infinity) {\n    return [undefined,\
    \ undefined]\n  }\n  return [max, min]\n}\n", "  let min = 0\n  let max = 0\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min =\
    \ Math.min(min, lst[i])\n    } else if (lst[i] > 0) {\n      max = Math.max(max,\
    \ lst[i])\n    }\n  }\n  return [min, max]\n}\n", "  const negative = lst.filter(n\
    \ => n < 0);\n  const positive = lst.filter(n => n > 0);\n  if (negative.length\
    \ === 0 && positive.length === 0) {\n    return [undefined, undefined];\n  }\n\
    \  if (negative.length === 0) {\n    return [undefined, positive[0]];\n  }\n \
    \ if (positive.length === 0) {\n    return [negative[0], undefined];\n  }\n  return\
    \ [negative[0], positive[0]];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let min = Infinity;\n  let max = -Infinity;\n  let min_index = -1;\n\
    \  let max_index = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n      min_index = i;\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i];\n      max_index = i;\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return [undefined, undefined];\n  }\n  return [min_index, max_index];\n\
    }\n", "  let max = -Infinity\n  let min = Infinity\n  let result = [undefined,\
    \ undefined]\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n\n  if (min === Infinity) {\n    result[0] = undefined\n  } else\
    \ {\n    result[0] = min\n  }\n\n  if (max === -Infinity) {\n    result[1] = undefined\n\
    \  } else {\n    result[1] = max\n  }\n\n  return result\n}\n", "  if (lst.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  let max = lst[0];\n  let\
    \ min = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \    }\n  }\n  return [max, min];\n}\n", "  let max = -Infinity\n  let min = Infinity\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > max) {\n      max\
    \ = lst[i]\n    }\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n \
    \ if (max === -Infinity && min === Infinity) {\n    return [undefined, undefined]\n\
    \  }\n  return [max, min]\n}\n", "  let min = undefined;\n  let max = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min\
    \ === undefined) {\n        min = lst[i];\n      } else {\n        min = Math.min(min,\
    \ lst[i]);\n      }\n    } else if (lst[i] > 0) {\n      if (max === undefined)\
    \ {\n        max = lst[i];\n      } else {\n        max = Math.max(max, lst[i]);\n\
    \      }\n    }\n  }\n  return [min, max];\n}\n", "  if (lst.length === 0) {\n\
    \    return [undefined, undefined];\n  }\n\n  let max_negative = -Infinity;\n\
    \  let min_positive = Infinity;\n  let max_negative_index = 0;\n  let min_positive_index\
    \ = 0;\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n  \
    \    if (lst[i] > max_negative) {\n        max_negative = lst[i];\n        max_negative_index\
    \ = i;\n      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min_positive)\
    \ {\n        min_positive = lst[i];\n        min_positive_index = i;\n      }\n\
    \    }\n  }\n\n  if (max_negative === -Infinity) {\n    return [undefined, undefined];\n\
    \  } else {\n    return [lst[max_negative_index], lst[min_positive_index]];\n\
    \  }\n}\n", "  let max = -Infinity\n  let min = Infinity\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n \
    \   if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity\
    \ || max === -Infinity) {\n    return [undefined, undefined]\n  }\n  return [max,\
    \ min]\n}\n", "  if (lst.length === 0) {\n    return [undefined, undefined];\n\
    \  }\n  let min = lst[0];\n  let max = lst[0];\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  return [min, max];\n}\n", "  let\
    \ a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n\
    \      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  let result = []\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity) {\n    result.push(undefined)\n\
    \  }\n  if (max === -Infinity) {\n    result.push(undefined)\n  }\n  return result\n\
    }\n", "  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  if (min === Infinity || max ===\
    \ -Infinity) {\n    return [undefined, undefined];\n  }\n  return [max, min];\n\
    }\n", "  let min = Infinity\n  let max = -Infinity\n  let min_index = -1\n  let\
    \ max_index = -1\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i]\n      min_index = i\n    }\n    if (lst[i] > max) {\n\
    \      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return [undefined, undefined]\n  }\n  return [min, max]\n}\n", "  let\
    \ min = Number.MAX_VALUE\n  let max = Number.MIN_VALUE\n  let min_index = 0\n\
    \  let max_index = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i]\n      min_index = i\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n      max_index = i\n    }\n  }\n\n  if (min === Number.MAX_VALUE)\
    \ {\n    return [undefined, undefined]\n  } else {\n    return [lst[min_index],\
    \ lst[max_index]]\n  }\n}\n", "  let max = -Infinity\n  let min = Infinity\n \
    \ for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > max) {\n      max =\
    \ lst[i]\n    }\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n  if\
    \ (max === -Infinity || min === Infinity) {\n    return [undefined, undefined]\n\
    \  }\n  return [max, min]\n}\n", "  if (lst.length === 0) {\n    return [undefined,\
    \ undefined];\n  }\n  let negative = lst.find(x => x < 0);\n  let positive = lst.find(x\
    \ => x > 0);\n  if (negative === undefined && positive === undefined) {\n    return\
    \ [undefined, undefined];\n  }\n  if (negative === undefined) {\n    return [positive,\
    \ undefined];\n  }\n  if (positive === undefined) {\n    return [undefined, negative];\n\
    \  }\n  return [negative, positive];\n}\n", "  let min = 0\n  let max = 0\n  let\
    \ min_index = 0\n  let max_index = 0\n  let min_value = 0\n  let max_value = 0\n\
    \  let min_value_index = 0\n  let max_value_index = 0\n  let result = []\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min_index\
    \ === 0) {\n        min_index = i\n        min_value = lst[i]\n      } else {\n\
    \        if (lst[i] < min_value) {\n          min_index = i\n          min_value\
    \ = lst[i]\n        }\n      }\n    } else if (lst[i] > 0) {\n      if (max_index\
    \ === 0) {\n        max_index = i\n        max_value = lst[i]\n      } else {\n\
    \        if (lst[i] > max_value) {\n          max_index = i\n          max_value\
    \ = lst[i]\n        }\n      }\n    }\n  }\n  if (min_index === 0) {\n    result.push(undefined)\n\
    \  } else {\n    result.push(min_value)\n  }\n  if (max_index === 0) {\n    result.push(undefined)\n\
    \  } else {\n    result.push(max_value)\n  }\n  return result\n}\n", "  let max\
    \ = -Infinity\n  let min = Infinity\n  let result = []\n  for (let i = 0; i <\
    \ lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n   \
    \ if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity)\
    \ {\n    result.push(undefined)\n  }\n  if (max === -Infinity) {\n    result.push(undefined)\n\
    \  }\n  result.push(min)\n  result.push(max)\n  return result\n}\n", "  let min\
    \ = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n\
    \      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  if\
    \ (lst.length === 0) {\n    return [undefined, undefined];\n  }\n  let max = -Infinity;\n\
    \  let min = Infinity;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  return [max, min];\n}\n", "  let max = -Infinity\n  let min = Infinity\n\
    \  let res = []\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  if (min === Infinity) {\n    res.push(undefined)\n  }\n  if (max\
    \ === -Infinity) {\n    res.push(undefined)\n  }\n  return res\n}\n", "  let a\
    \ = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n    \
    \  b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let a = undefined;\n  let\
    \ b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n\
    \  }\n  return [a, b];\n}\n", "  let min = 0\n  let max = 0\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = Math.min(min, lst[i])\n\
    \    } else if (lst[i] > 0) {\n      max = Math.max(max, lst[i])\n    }\n  }\n\
    \  return [min, max]\n}\n", "  const neg = lst.filter(x => x < 0);\n  const pos\
    \ = lst.filter(x => x > 0);\n  if (neg.length === 0 && pos.length === 0) {\n \
    \   return [undefined, undefined];\n  }\n  return [\n    Math.max(...neg),\n \
    \   Math.min(...pos),\n  ];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let a = undefined;\n\
    \  let b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n\
    \    }\n  }\n  return [a, b];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ min = 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = lst[i]\n \
    \     min_index = i\n    } else if (lst[i] > 0) {\n      max = lst[i]\n      max_index\
    \ = i\n    }\n  }\n  if (min === 0 && max === 0) {\n    return [undefined, undefined]\n\
    \  } else if (min === 0) {\n    return [undefined, max]\n  } else if (max ===\
    \ 0) {\n    return [min, undefined]\n  } else {\n    return [min, max]\n  }\n\
    }\n", "  let max = -Infinity\n  let min = Infinity\n  let result = []\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min ===\
    \ Infinity) {\n    result.push(undefined)\n  }\n  if (max === -Infinity) {\n \
    \   result.push(undefined)\n  }\n  result.push(min)\n  result.push(max)\n  return\
    \ result\n}\n", "  let max = -Infinity\n  let min = Infinity\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n\
    \    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n  if (max === -Infinity\
    \ && min === Infinity) {\n    return [undefined, undefined]\n  }\n  return [max,\
    \ min]\n}\n", "  let min = undefined;\n  let max = undefined;\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = lst[i];\n    }\
    \ else if (lst[i] > 0) {\n      max = lst[i];\n    }\n  }\n  return [min, max];\n\
    }\n", "  let min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ min = 0\n  let max = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      min = Math.max(min, lst[i])\n    } else if (lst[i] > 0) {\n  \
    \    max = Math.min(max, lst[i])\n    }\n  }\n  return [min, max]\n}\n", "  const\
    \ lst_len = lst.length\n  if (lst_len === 0) {\n    return [undefined, undefined]\n\
    \  }\n  let max_negative = -Infinity\n  let min_positive = Infinity\n  for (let\
    \ i = 0; i < lst_len; i++) {\n    const num = lst[i]\n    if (num < 0) {\n   \
    \   if (num > max_negative) {\n        max_negative = num\n      }\n    } else\
    \ if (num > 0) {\n      if (num < min_positive) {\n        min_positive = num\n\
    \      }\n    }\n  }\n  if (max_negative === -Infinity) {\n    return [undefined,\
    \ min_positive]\n  } else if (min_positive === Infinity) {\n    return [max_negative,\
    \ undefined]\n  } else {\n    return [max_negative, min_positive]\n  }\n}\n",
  "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n\
    \      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let min = 0\n  let\
    \ max = 0\n  let min_index = 0\n  let max_index = 0\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (min > lst[i]) {\n        min = lst[i]\n\
    \        min_index = i\n      }\n    } else if (lst[i] > 0) {\n      if (max <\
    \ lst[i]) {\n        max = lst[i]\n        max_index = i\n      }\n    }\n  }\n\
    \  if (min === 0 && max === 0) {\n    return [undefined, undefined]\n  } else\
    \ if (min === 0) {\n    return [undefined, lst[max_index]]\n  } else if (max ===\
    \ 0) {\n    return [lst[min_index], undefined]\n  } else {\n    return [lst[min_index],\
    \ lst[max_index]]\n  }\n}\n", "  const negative = lst.filter(x => x < 0);\n  const\
    \ positive = lst.filter(x => x > 0);\n  if (negative.length === 0 && positive.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  if (negative.length ===\
    \ 0) {\n    return [undefined, positive[0]];\n  }\n  if (positive.length === 0)\
    \ {\n    return [negative[0], undefined];\n  }\n  return [negative[0], positive[0]];\n\
    }\n", "  let min = 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min\
    \ === 0) {\n        min = lst[i]\n        min_index = i\n      } else if (lst[i]\
    \ < min) {\n        min = lst[i]\n        min_index = i\n      }\n    } else if\
    \ (lst[i] > 0) {\n      if (max === 0) {\n        max = lst[i]\n        max_index\
    \ = i\n      } else if (lst[i] > max) {\n        max = lst[i]\n        max_index\
    \ = i\n      }\n    }\n  }\n  if (min === 0) {\n    return [undefined, undefined]\n\
    \  } else {\n    return [min, max]\n  }\n}\n", "  const negative = lst.filter(x\
    \ => x < 0);\n  const positive = lst.filter(x => x > 0);\n  if (negative.length\
    \ === 0 && positive.length === 0) {\n    return [undefined, undefined];\n  }\n\
    \  if (negative.length === 0) {\n    return [undefined, positive[0]];\n  }\n \
    \ if (positive.length === 0) {\n    return [negative[0], undefined];\n  }\n  return\
    \ [negative[0], positive[0]];\n}\n", "  if (lst.length === 0) {\n    return [undefined,\
    \ undefined];\n  }\n\n  let max = -Infinity;\n  let min = Infinity;\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n\n  return [max,\
    \ min];\n}\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else\
    \ if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", " \
    \ let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let min = Infinity;\n\
    \  let max = -Infinity;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  if (min === Infinity || max === -Infinity) {\n    return [undefined,\
    \ undefined];\n  }\n  return [max, min];\n}\n", "  let max = -Infinity\n  let\
    \ min = Infinity\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  return [max, min]\n}\n", "  let max = 0\n  let min = 0\n  let max_index\
    \ = 0\n  let min_index = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n        max_index\
    \ = i\n      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n    \
    \    min = lst[i]\n        min_index = i\n      }\n    }\n  }\n\n  if (max ===\
    \ 0 && min === 0) {\n    return [undefined, undefined]\n  } else if (max === 0)\
    \ {\n    return [undefined, lst[min_index]]\n  } else if (min === 0) {\n    return\
    \ [lst[max_index], undefined]\n  } else {\n    return [lst[max_index], lst[min_index]]\n\
    \  }\n}\n", "  const neg = lst.filter(n => n < 0);\n  const pos = lst.filter(n\
    \ => n > 0);\n  if (neg.length === 0 && pos.length === 0) {\n    return [undefined,\
    \ undefined];\n  } else if (neg.length === 0) {\n    return [undefined, pos[0]];\n\
    \  } else if (pos.length === 0) {\n    return [neg[0], undefined];\n  } else {\n\
    \    return [Math.max(...neg), Math.min(...pos)];\n  }\n}\n", "  let max_negative\
    \ = 0\n  let min_positive = 0\n  let max_negative_index = 0\n  let min_positive_index\
    \ = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n   \
    \   if (lst[i] > max_negative) {\n        max_negative = lst[i]\n        max_negative_index\
    \ = i\n      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min_positive)\
    \ {\n        min_positive = lst[i]\n        min_positive_index = i\n      }\n\
    \    }\n  }\n\n  if (max_negative_index === min_positive_index) {\n    return\
    \ [undefined, undefined]\n  } else if (max_negative_index < min_positive_index)\
    \ {\n    return [undefined, lst[min_positive_index]]\n  } else {\n    return [lst[max_negative_index],\
    \ lst[min_positive_index]]\n  }\n}\n", "  let min = 0\n  let max = 0\n  let min_index\
    \ = 0\n  let max_index = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < 0) {\n      if (min === 0) {\n        min = lst[i]\n        min_index\
    \ = i\n      } else {\n        min = Math.min(lst[i], min)\n        min_index\
    \ = i\n      }\n    } else if (lst[i] > 0) {\n      if (max === 0) {\n       \
    \ max = lst[i]\n        max_index = i\n      } else {\n        max = Math.max(lst[i],\
    \ max)\n        max_index = i\n      }\n    }\n  }\n\n  if (min === 0) {\n   \
    \ return [undefined, undefined]\n  } else {\n    return [min, max]\n  }\n}\n",
  "  if (lst.length === 0) {\n    return [undefined, undefined];\n  }\n  let min =\
    \ lst[0];\n  let max = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n   \
    \ if (lst[i] < min) {\n      min = lst[i];\n    } else if (lst[i] > max) {\n \
    \     max = lst[i];\n    }\n  }\n  return [min, max];\n}\n", "  let max = 0\n\
    \  let min = 0\n  let res = []\n\n  for (let i = 0; i < lst.length; i++) {\n \
    \   if (lst[i] < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n     \
    \ }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n        min = lst[i]\n\
    \      }\n    }\n  }\n\n  if (max === 0 && min === 0) {\n    res = [undefined,\
    \ undefined]\n  } else if (max === 0) {\n    res = [undefined, min]\n  } else\
    \ if (min === 0) {\n    res = [max, undefined]\n  } else {\n    res = [max, min]\n\
    \  }\n\n  return res\n}\n", "  let a = undefined;\n  let b = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let max = -Infinity\n  let min = Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity) {\n    return\
    \ [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let max = 0\n  let\
    \ min = 0\n  let result = []\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n      }\n \
    \   } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n        min = lst[i]\n\
    \      }\n    }\n  }\n  if (max === 0 && min === 0) {\n    result = [undefined,\
    \ undefined]\n  } else if (max === 0) {\n    result = [undefined, min]\n  } else\
    \ if (min === 0) {\n    result = [max, undefined]\n  } else {\n    result = [max,\
    \ min]\n  }\n  return result\n}\n", "  let min = 0\n  let max = 0\n  let min_index\
    \ = 0\n  let max_index = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      min = lst[i]\n      min_index = i\n    }\n    if (lst[i] > 0)\
    \ {\n      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min === 0 && max\
    \ === 0) {\n    return [undefined, undefined]\n  }\n  return [min, max]\n}\n",
  "  let max = 0\n  let min = 0\n  let lst_len = lst.length\n  let i = 0\n  let j\
    \ = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let\
    \ p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let\
    \ v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let\
    \ b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let\
    \ h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let l = 0\n  let m = 0\n  let\
    \ n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let r = 0\n  let s = 0\n  let\
    \ t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let x = 0\n  let y = 0\n  let\
    \ z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let d = 0\n  let e = 0\n  let\
    \ f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let j = 0\n  let k = 0\n  let\
    \ l = 0\n  let m = 0\n  let n = 0\n  let o = 0\n  let p = 0\n  let q = 0\n  let\
    \ r = 0\n  let s = 0\n  let t = 0\n  let u = 0\n  let v = 0\n  let w = 0\n  let\
    \ x = 0\n  let y = 0\n  let z = 0\n  let a = 0\n  let b = 0\n  let c = 0\n  let\
    \ d = 0\n  let e = 0\n  let f = 0\n  let g = 0\n  let h = 0\n  let i = 0\n  let\
    \ j = 0\n  let k = 0\n  let", "  if (lst.length === 0) {\n    return [undefined,\
    \ undefined];\n  }\n  let min = lst[0];\n  let max = lst[0];\n  for (let i = 1;\
    \ i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n\
    \    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  return [min, max];\n\
    }\n", "  let min = 0\n  let max = 0\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      min = lst[i]\n    } else if (lst[i] > 0) {\n   \
    \   max = lst[i]\n    }\n  }\n  return [min, max]\n}\n", "  if (lst.length ===\
    \ 0) {\n    return [undefined, undefined];\n  }\n\n  let min = lst[0];\n  let\
    \ max = lst[0];\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n    } else if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n\n  return [min, max];\n}\n", "  let min = undefined;\n  let max\
    \ = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0)\
    \ {\n      if (min === undefined) {\n        min = lst[i];\n      } else if (lst[i]\
    \ < min) {\n        min = lst[i];\n      }\n    } else if (lst[i] > 0) {\n   \
    \   if (max === undefined) {\n        max = lst[i];\n      } else if (lst[i] >\
    \ max) {\n        max = lst[i];\n      }\n    }\n  }\n  return [min, max];\n}\n",
  "  let min = Infinity;\n  let max = -Infinity;\n  let min_index = -1;\n  let max_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n    if (lst[i] > max) {\n  \
    \    max = lst[i];\n      max_index = i;\n    }\n  }\n  if (min_index === -1)\
    \ {\n    return [undefined, undefined];\n  } else {\n    return [lst[min_index],\
    \ lst[max_index]];\n  }\n}\n", "  let min = undefined;\n  let max = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min =\
    \ lst[i];\n    } else if (lst[i] > 0) {\n      max = lst[i];\n    }\n  }\n  return\
    \ [min, max];\n}\n", "  let max = 0\n  let min = 0\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min) {\n        min\
    \ = lst[i]\n      }\n    }\n  }\n  return [max, min]\n}\n", "  let a = undefined;\n\
    \  let b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n\
    \    }\n  }\n  return [a, b];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  if (lst.length === 0) {\n    return [undefined, undefined];\n  }\n\n\
    \  let min = lst[0];\n  let max = lst[0];\n  for (let i = 1; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n\n  return [min, max];\n}\n", "  let min\
    \ = Infinity;\n  let max = -Infinity;\n  let result = [undefined, undefined];\n\
    \n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n\
    \n  if (min === Infinity) {\n    result[0] = undefined;\n  } else {\n    result[0]\
    \ = min;\n  }\n\n  if (max === -Infinity) {\n    result[1] = undefined;\n  } else\
    \ {\n    result[1] = max;\n  }\n\n  return result;\n}\n", "  if (lst.length ===\
    \ 0) {\n    return [undefined, undefined];\n  }\n\n  let min = lst[0];\n  let\
    \ max = lst[0];\n\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] <\
    \ min) {\n      min = lst[i];\n    } else if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n\n  return [min, max];\n}\n", "  if (lst.length === 0) {\n    return\
    \ [undefined, undefined];\n  }\n  let max = -Infinity;\n  let min = Infinity;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n\
    \  return [max, min];\n}\n", "  let min = undefined;\n  let max = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min =\
    \ lst[i];\n    }\n    if (lst[i] > 0) {\n      max = lst[i];\n    }\n  }\n  return\
    \ [min, max];\n}\n", "  let min = Infinity\n  let max = -Infinity\n  let min_index\
    \ = -1\n  let max_index = -1\n  for (let i = 0; i < lst.length; i++) {\n    if\
    \ (lst[i] < min) {\n      min = lst[i]\n      min_index = i\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min_index\
    \ === -1) {\n    return [undefined, undefined]\n  }\n  return [min, max]\n}\n",
  "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      a = lst[i];\n    }\n    if (lst[i] > 0) {\n\
    \      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  const negative = lst.filter(x\
    \ => x < 0);\n  const positive = lst.filter(x => x > 0);\n  if (negative.length\
    \ === 0 && positive.length === 0) {\n    return [undefined, undefined];\n  } else\
    \ if (negative.length === 0) {\n    return [undefined, positive[0]];\n  } else\
    \ if (positive.length === 0) {\n    return [negative[0], undefined];\n  } else\
    \ {\n    return [negative[0], positive[0]];\n  }\n}\n", "  let min = 0\n  let\
    \ max = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n \
    \     min = lst[i]\n    } else if (lst[i] > 0) {\n      max = lst[i]\n    }\n\
    \  }\n  return [min, max]\n}\n", "  let max_negative = -Infinity\n  let min_positive\
    \ = Infinity\n  let max_negative_index = -1\n  let min_positive_index = -1\n \
    \ for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (lst[i]\
    \ > max_negative) {\n        max_negative = lst[i]\n        max_negative_index\
    \ = i\n      }\n    } else if (lst[i] > 0) {\n      if (lst[i] < min_positive)\
    \ {\n        min_positive = lst[i]\n        min_positive_index = i\n      }\n\
    \    }\n  }\n  if (max_negative_index === -1) {\n    return [undefined, undefined]\n\
    \  } else if (min_positive_index === -1) {\n    return [undefined, max_negative]\n\
    \  } else {\n    return [max_negative, min_positive]\n  }\n}\n", "  let min =\
    \ 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = lst[i]\n     \
    \ min_index = i\n    } else if (lst[i] > 0) {\n      max = lst[i]\n      max_index\
    \ = i\n    }\n  }\n\n  if (min === 0 && max === 0) {\n    return [undefined, undefined]\n\
    \  } else if (min === 0) {\n    return [undefined, max]\n  } else if (max ===\
    \ 0) {\n    return [min, undefined]\n  } else {\n    return [min, max]\n  }\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  let result = []\n\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n    if (lst[i] <\
    \ min) {\n      min = lst[i]\n    }\n  }\n\n  if (max === -Infinity) {\n    result\
    \ = [undefined, undefined]\n  } else {\n    result = [max, min]\n  }\n\n  return\
    \ result\n}\n", "  if (lst.length === 0) {\n    return [undefined, undefined];\n\
    \  }\n  let max = lst[0];\n  let min = lst[0];\n  for (let i = 1; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  return [max, min];\n}\n", "  let\
    \ min = undefined;\n  let max = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      min = lst[i];\n    } else if (lst[i] >\
    \ 0) {\n      max = lst[i];\n    }\n  }\n  return [min, max];\n}\n", "  if (lst.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  let max = -Infinity;\n\
    \  let min = Infinity;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  return [max, min];\n}\n", "  let min = 0\n  let max = 0\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = lst[i]\n\
    \    } else if (lst[i] > 0) {\n      max = lst[i]\n    }\n  }\n  return [min,\
    \ max]\n}\n", "  const neg = lst.filter(x => x < 0);\n  const pos = lst.filter(x\
    \ => x > 0);\n  if (neg.length === 0 && pos.length === 0) {\n    return [undefined,\
    \ undefined];\n  }\n  if (neg.length === 0) {\n    return [undefined, pos[0]];\n\
    \  }\n  if (pos.length === 0) {\n    return [neg[0], undefined];\n  }\n  return\
    \ [Math.max(...neg), Math.min(...pos)];\n}\n", "  let min = undefined;\n  let\
    \ max = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] <\
    \ 0) {\n      if (min === undefined) {\n        min = lst[i];\n      } else {\n\
    \        min = Math.min(min, lst[i]);\n      }\n    } else if (lst[i] > 0) {\n\
    \      if (max === undefined) {\n        max = lst[i];\n      } else {\n     \
    \   max = Math.max(max, lst[i]);\n      }\n    }\n  }\n  return [min, max];\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let min = Infinity\n\
    \  let max = -Infinity\n  let min_index = 0\n  let max_index = 0\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n \
    \     min_index = i\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n    \
    \  max_index = i\n    }\n  }\n  if (min === Infinity || max === -Infinity) {\n\
    \    return [undefined, undefined]\n  }\n  return [lst[min_index], lst[max_index]]\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  if (lst.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  let max = -Infinity;\n\
    \  let min = Infinity;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  return [max, min];\n}\n", "  let max = -Infinity\n  let min = Infinity\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] > max) {\n      max\
    \ = lst[i]\n    }\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n \
    \ if (max === -Infinity || min === Infinity) {\n    return [undefined, undefined]\n\
    \  }\n  return [max, min]\n}\n", "  let min = 0\n  let max = 0\n  let min_index\
    \ = 0\n  let max_index = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      if (min === 0) {\n        min = lst[i]\n        min_index = i\n\
    \      } else if (lst[i] < min) {\n        min = lst[i]\n        min_index = i\n\
    \      }\n    } else if (lst[i] > 0) {\n      if (max === 0) {\n        max =\
    \ lst[i]\n        max_index = i\n      } else if (lst[i] > max) {\n        max\
    \ = lst[i]\n        max_index = i\n      }\n    }\n  }\n  if (min === 0) {\n \
    \   return [undefined, undefined]\n  } else {\n    return [min, max]\n  }\n}\n",
  "  if (lst.length === 0) {\n    return [undefined, undefined];\n  }\n  let max =\
    \ lst[0];\n  let min = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n   \
    \ if (lst[i] > max) {\n      max = lst[i];\n    }\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n    }\n  }\n  return [max, min];\n}\n", "  let min = Infinity\n\
    \  let max = -Infinity\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n\
    \    }\n  }\n  if (min === Infinity) {\n    return [undefined, undefined]\n  }\n\
    \  return [min, max]\n}\n", "  let a = undefined;\n  let b = undefined;\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ max = -Infinity\n  let min = Infinity\n  let res = []\n  for (let i = 0; i <\
    \ lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n   \
    \ if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity)\
    \ {\n    res = [undefined, undefined]\n  } else {\n    res = [max, min]\n  }\n\
    \  return res\n}\n", "  let a = undefined;\n  let b = undefined;\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    }\
    \ else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n",
  "  let min = 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n  let min_value\
    \ = 0\n  let max_value = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      min = lst[i]\n      min_index = i\n    } else if (lst[i] > 0)\
    \ {\n      max = lst[i]\n      max_index = i\n    }\n  }\n  if (min === 0 && max\
    \ === 0) {\n    return [undefined, undefined]\n  }\n  return [min, max]\n}\n",
  "  let max_num = 0\n  let min_num = 0\n  let max_neg = 0\n  let min_pos = 0\n\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (lst[i]\
    \ > max_neg) {\n        max_neg = lst[i]\n      }\n    } else if (lst[i] > 0)\
    \ {\n      if (lst[i] < min_pos) {\n        min_pos = lst[i]\n      }\n    } else\
    \ {\n      if (lst[i] > max_num) {\n        max_num = lst[i]\n      }\n      if\
    \ (lst[i] < min_num) {\n        min_num = lst[i]\n      }\n    }\n  }\n\n  return\
    \ [max_num, min_num]\n}\n", "  let min = undefined;\n  let max = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min =\
    \ lst[i];\n    } else if (lst[i] > 0) {\n      max = lst[i];\n    }\n  }\n  return\
    \ [min, max];\n}\n", "  let min = Infinity;\n  let max = -Infinity;\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  if (min ===\
    \ Infinity || max === -Infinity) {\n    return [undefined, undefined];\n  }\n\
    \  return [max, min];\n}\n", "  let min = 0\n  let max = 0\n  let min_index =\
    \ 0\n  let max_index = 0\n  let min_found = false\n  let max_found = false\n\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (!min_found)\
    \ {\n        min = lst[i]\n        min_index = i\n        min_found = true\n \
    \     } else {\n        if (lst[i] < min) {\n          min = lst[i]\n        \
    \  min_index = i\n        }\n      }\n    } else if (lst[i] > 0) {\n      if (!max_found)\
    \ {\n        max = lst[i]\n        max_index = i\n        max_found = true\n \
    \     } else {\n        if (lst[i] > max) {\n          max = lst[i]\n        \
    \  max_index = i\n        }\n      }\n    }\n  }\n\n  if (min_found && max_found)\
    \ {\n    return [min, max]\n  } else if (min_found) {\n    return [min, undefined]\n\
    \  } else if (max_found) {\n    return [undefined, max]\n  } else {\n    return\
    \ [undefined, undefined]\n  }\n}\n", "  let min = Infinity\n  let max = -Infinity\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n \
    \ if (min === Infinity) {\n    return [undefined, undefined]\n  }\n  return [min,\
    \ max]\n}\n", "  let min = 0\n  let max = 0\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      if (min === 0) {\n        min = lst[i]\n\
    \      } else {\n        min = Math.min(min, lst[i])\n      }\n    } else if (lst[i]\
    \ > 0) {\n      if (max === 0) {\n        max = lst[i]\n      } else {\n     \
    \   max = Math.max(max, lst[i])\n      }\n    }\n  }\n  return [min, max]\n}\n",
  "  let min = 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n  for (let\
    \ i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min === 0) {\n\
    \        min = lst[i]\n        min_index = i\n      } else {\n        min = Math.min(min,\
    \ lst[i])\n        min_index = i\n      }\n    } else if (lst[i] > 0) {\n    \
    \  if (max === 0) {\n        max = lst[i]\n        max_index = i\n      } else\
    \ {\n        max = Math.max(max, lst[i])\n        max_index = i\n      }\n   \
    \ }\n  }\n  if (min === 0) {\n    return [undefined, undefined]\n  } else {\n\
    \    return [min, max]\n  }\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (a\
    \ === undefined) {\n        a = lst[i];\n      } else {\n        a = Math.max(a,\
    \ lst[i]);\n      }\n    } else if (lst[i] > 0) {\n      if (b === undefined)\
    \ {\n        b = lst[i];\n      } else {\n        b = Math.min(b, lst[i]);\n \
    \     }\n    }\n  }\n  return [a, b];\n}\n", "  if (lst.length === 0) {\n    return\
    \ [undefined, undefined];\n  }\n\n  let min = lst[0];\n  let max = lst[0];\n\n\
    \  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i];\n    } else if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n\
    \n  return [min, max];\n}\n", "  let min = 0\n  let max = 0\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < 0) {\n      min = Math.min(min, lst[i])\n\
    \    } else if (lst[i] > 0) {\n      max = Math.max(max, lst[i])\n    }\n  }\n\
    \  return [min, max]\n}\n", "  let min = Infinity\n  let max = -Infinity\n  for\
    \ (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min ===\
    \ Infinity || max === -Infinity) {\n    return [undefined, undefined]\n  }\n \
    \ return [max, min]\n}\n", "  let min = Number.MAX_VALUE;\n  let max = Number.MIN_VALUE;\n\
    \  let result = [undefined, undefined];\n\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i];\n    }\n  }\n\n  if (min === max) {\n    result = [undefined,\
    \ min];\n  } else {\n    result = [max, min];\n  }\n\n  return result;\n}\n",
  "  let min = Infinity;\n  let max = -Infinity;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i]\
    \ > max) {\n      max = lst[i];\n    }\n  }\n  if (min === Infinity || max ===\
    \ -Infinity) {\n    return [undefined, undefined];\n  }\n  return [max, min];\n\
    }\n", "  let a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0)\
    \ {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  if (lst.length\
    \ === 0) {\n    return [undefined, undefined];\n  }\n  let min = lst[0];\n  let\
    \ max = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min)\
    \ {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n      max = lst[i];\n\
    \    }\n  }\n  return [min, max];\n}\n", "  let min = Infinity, max = -Infinity\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min\
    \ = lst[i]\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n \
    \ if (min === Infinity || max === -Infinity) {\n    return [undefined, undefined]\n\
    \  }\n  return [min, max]\n}\n", "  let min = Infinity\n  let max = -Infinity\n\
    \  let min_index = undefined\n  let max_index = undefined\n\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n      min_index\
    \ = i\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n      max_index = i\n\
    \    }\n  }\n\n  if (min === Infinity || max === -Infinity) {\n    return [undefined,\
    \ undefined]\n  }\n\n  return [min_index, max_index]\n}\n", "  let min = 0\n \
    \ let max = 0\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n\
    \      if (min === 0) {\n        min = lst[i]\n      } else {\n        min = Math.min(min,\
    \ lst[i])\n      }\n    } else if (lst[i] > 0) {\n      if (max === 0) {\n   \
    \     max = lst[i]\n      } else {\n        max = Math.max(max, lst[i])\n    \
    \  }\n    }\n  }\n  return [min, max]\n}\n", "  if (lst.length === 0) {\n    return\
    \ [undefined, undefined];\n  }\n  let min = lst[0];\n  let max = lst[0];\n  for\
    \ (let i = 1; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i];\n\
    \    }\n    if (lst[i] > max) {\n      max = lst[i];\n    }\n  }\n  return [min,\
    \ max];\n}\n", "  let max = -Infinity\n  let min = Infinity\n  for (let i = 0;\
    \ i < lst.length; i++) {\n    if (lst[i] > max) {\n      max = lst[i]\n    }\n\
    \    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n  if (max === -Infinity\
    \ && min === Infinity) {\n    return [undefined, undefined]\n  }\n  return [max,\
    \ min]\n}\n", "  let min = Infinity, max = -Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  return [min, max]\n}\n", "  let min\
    \ = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max) {\n\
    \      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ a = undefined;\n  let b = undefined;\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n\
    \      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  let result = []\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity) {\n    result.push(undefined)\n\
    \  } else {\n    result.push(min)\n  }\n  if (max === -Infinity) {\n    result.push(undefined)\n\
    \  } else {\n    result.push(max)\n  }\n  return result\n}\n", "  let a = undefined;\n\
    \  let b = undefined;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      a = lst[i];\n    } else if (lst[i] > 0) {\n      b = lst[i];\n\
    \    }\n  }\n  return [a, b];\n}\n", "  let a = undefined;\n  let b = undefined;\n\
    \  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n\
    \    } else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n\
    }\n", "  let min = 0\n  let max = 0\n  for (let i = 0; i < lst.length; i++) {\n\
    \    if (lst[i] < 0) {\n      min = lst[i]\n    } else if (lst[i] > 0) {\n   \
    \   max = lst[i]\n    }\n  }\n  return [min, max]\n}\n", "  let max = -Infinity\n\
    \  let min = Infinity\n  let res = []\n  for (let i = 0; i < lst.length; i++)\
    \ {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] > max)\
    \ {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    res = [undefined, undefined]\n  } else {\n    res = [max, min]\n  }\n\
    \  return res\n}\n", "  let a = undefined;\n  let b = undefined;\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      a = lst[i];\n    }\
    \ else if (lst[i] > 0) {\n      b = lst[i];\n    }\n  }\n  return [a, b];\n}\n",
  "  if (lst.length === 0) {\n    return [undefined, undefined];\n  }\n  let min =\
    \ lst[0];\n  let max = lst[0];\n  for (let i = 1; i < lst.length; i++) {\n   \
    \ if (lst[i] < min) {\n      min = lst[i];\n    }\n    if (lst[i] > max) {\n \
    \     max = lst[i];\n    }\n  }\n  return [min, max];\n}\n", "  let min = Infinity\n\
    \  let max = -Infinity\n  let min_index = 0\n  let max_index = 0\n  for (let i\
    \ = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n \
    \     min_index = i\n    }\n    if (lst[i] > max) {\n      max = lst[i]\n    \
    \  max_index = i\n    }\n  }\n  if (min === Infinity || max === -Infinity) {\n\
    \    return [undefined, undefined]\n  } else {\n    return [lst[min_index], lst[max_index]]\n\
    \  }\n}\n", "  let min = Infinity\n  let max = -Infinity\n  for (let i = 0; i\
    \ < lst.length; i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n \
    \   if (lst[i] > max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity\
    \ || max === -Infinity) {\n    return [undefined, undefined]\n  }\n  return [max,\
    \ min]\n}\n", "  let min = 0\n  let max = 0\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < 0) {\n      min = Math.min(min, lst[i])\n    } else\
    \ {\n      max = Math.max(max, lst[i])\n    }\n  }\n  return [min, max]\n}\n",
  "  let min = Infinity\n  let max = -Infinity\n  for (let i = 0; i < lst.length;\
    \ i++) {\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n    if (lst[i] >\
    \ max) {\n      max = lst[i]\n    }\n  }\n  if (min === Infinity || max === -Infinity)\
    \ {\n    return [undefined, undefined]\n  }\n  return [max, min]\n}\n", "  let\
    \ min = Infinity;\n  let max = -Infinity;\n  let min_index = -1;\n  let max_index\
    \ = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i] < min) {\n \
    \     min = lst[i];\n      min_index = i;\n    }\n    if (lst[i] > max) {\n  \
    \    max = lst[i];\n      max_index = i;\n    }\n  }\n  if (min_index === -1 &&\
    \ max_index === -1) {\n    return [undefined, undefined];\n  } else if (min_index\
    \ === -1) {\n    return [undefined, max];\n  } else if (max_index === -1) {\n\
    \    return [min, undefined];\n  } else {\n    return [min, max];\n  }\n}\n",
  "  let max = -Infinity\n  let min = Infinity\n  let result = []\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (lst[i] > max) {\n      max = lst[i]\n   \
    \ }\n    if (lst[i] < min) {\n      min = lst[i]\n    }\n  }\n  if (max === -Infinity\
    \ && min === Infinity) {\n    result = [undefined, undefined]\n  } else if (max\
    \ === -Infinity) {\n    result = [undefined, min]\n  } else if (min === Infinity)\
    \ {\n    result = [max, undefined]\n  } else {\n    result = [max, min]\n  }\n\
    \  return result\n}\n", "  let max = 0\n  let min = 0\n  let max_index = 0\n \
    \ let min_index = 0\n\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i]\
    \ < 0) {\n      if (lst[i] > max) {\n        max = lst[i]\n        max_index =\
    \ i\n      }\n    } else {\n      if (lst[i] < min) {\n        min = lst[i]\n\
    \        min_index = i\n      }\n    }\n  }\n\n  if (max === 0 && min === 0) {\n\
    \    return [undefined, undefined]\n  } else if (max === 0) {\n    return [undefined,\
    \ lst[min_index]]\n  } else if (min === 0) {\n    return [lst[max_index], undefined]\n\
    \  } else {\n    return [lst[max_index], lst[min_index]]\n  }\n}\n", "  let min\
    \ = 0\n  let max = 0\n  let min_index = 0\n  let max_index = 0\n  for (let i =\
    \ 0; i < lst.length; i++) {\n    if (lst[i] < 0) {\n      if (min > lst[i]) {\n\
    \        min = lst[i]\n        min_index = i\n      }\n    } else if (lst[i] >\
    \ 0) {\n      if (max < lst[i]) {\n        max = lst[i]\n        max_index = i\n\
    \      }\n    }\n  }\n  if (min === 0 && max === 0) {\n    return [undefined,\
    \ undefined]\n  } else if (min === 0) {\n    return [undefined, lst[max_index]]\n\
    \  } else if (max === 0) {\n    return [lst[min_index], undefined]\n  } else {\n\
    \    return [lst[min_index], lst[max_index]]\n  }\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_161_solve
language: ts
prompt: "//You are given a string s.\n// if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n// otherwise keep it as it is.\n// If the string\
  \ contains no letters, reverse the string.\n// The function should return the resulted\
  \ string.\n// Examples\n// >>> solve(\"1234\")\n// \"4321\"\n// >>> solve(\"ab\"\
  )\n// \"AB\"\n// >>> solve(\"#a@C\")\n// \"#A@c\"\nfunction solve(s: string): string\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = solve;\n  assert.deepEqual(candidate(\"AsDf\"),\"\
  aSdF\");\n  assert.deepEqual(candidate(\"1234\"),\"4321\");\n  assert.deepEqual(candidate(\"\
  ab\"),\"AB\");\n  assert.deepEqual(candidate(\"#a@C\"),\"#A@c\");\n  assert.deepEqual(candidate(\"\
  #AsdfW^45\"),\"#aSDFw^45\");\n  assert.deepEqual(candidate(\"#6@2\"),\"2@6#\");\n\
  \  assert.deepEqual(candidate(\"#$a^D\"),\"#$A^d\");\n  assert.deepEqual(candidate(\"\
  #ccc\"),\"#CCC\");\n}\n\ntest();"
completions: ["    let result = '';\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (s[i].match(/[a-zA-Z]/)) {\n            result += s[i].toUpperCase();\n\
    \        } else {\n            result += s[i].toLowerCase();\n        }\n    }\n\
    \    return result;\n}\n", "    let result = s.split('').map(c => c.toUpperCase()).join('');\n\
    \    if (!result.match(/[a-zA-Z]/)) {\n        result = result.split('').reverse().join('');\n\
    \    }\n    return result;\n}\n", "    let result = ''\n    let i = 0\n    let\
    \ len = s.length\n    while (i < len) {\n        let c = s[i]\n        if (c >=\
    \ 'a' && c <= 'z') {\n            result += c.toUpperCase()\n        } else if\
    \ (c >= 'A' && c <= 'Z') {\n            result += c.toLowerCase()\n        } else\
    \ {\n            result += c\n        }\n        i++\n    }\n    return result\n\
    }\n", "  let result = ''\n  for (let i = 0; i < s.length; i++) {\n    if (s[i].match(/[a-zA-Z]/))\
    \ {\n      result += s[i].toUpperCase()\n    } else {\n      result += s[i].toLowerCase()\n\
    \    }\n  }\n  return result\n}\n", "    let result = ''\n    for (let i = 0;\
    \ i < s.length; i++) {\n        if (s[i].match(/[a-z]/i)) {\n            result\
    \ += s[i].toUpperCase()\n        } else {\n            result += s[i].toLowerCase()\n\
    \        }\n    }\n    return result\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

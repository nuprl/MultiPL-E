name: HumanEval_77_iscube
language: ts
prompt: "//Write a function that takes an integer a and returns true \n// if this\
  \ ingeger is a cube of some integer number.\n// Note: you may assume the input is\
  \ always valid.\n// Examples:\n// >>> iscube(1)\n// true\n// >>> iscube(2)\n// false\n\
  // >>> iscube(-1)\n// true\n// >>> iscube(64)\n// true\n// >>> iscube(0)\n// true\n\
  // >>> iscube(180)\n// false\nfunction iscube(a: number): boolean {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = iscube;\n  assert.deepEqual(candidate(1),true);\n\
  \  assert.deepEqual(candidate(2),false);\n  assert.deepEqual(candidate(-1),true);\n\
  \  assert.deepEqual(candidate(64),true);\n  assert.deepEqual(candidate(180),false);\n\
  \  assert.deepEqual(candidate(1000),true);\n  assert.deepEqual(candidate(0),true);\n\
  \  assert.deepEqual(candidate(1729),false);\n}\n\ntest();"
completions: ["    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  if (a === 0) {\n    return\
    \ true;\n  }\n  if (a < 0) {\n    return false;\n  }\n  let i = 1;\n  while (i\
    \ * i * i <= a) {\n    if (a % i === 0) {\n      return false;\n    }\n    i++;\n\
    \  }\n  return true;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    if (a\
    \ === 0) {\n        return true;\n    }\n    if (a < 0) {\n        return false;\n\
    \    }\n    if (a % 3 === 0) {\n        return true;\n    }\n    if (a % 3 ===\
    \ 1) {\n        return false;\n    }\n    if (a % 3 === 2) {\n        return true;\n\
    \    }\n    return false;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    if\
    \ (a === 0) return true;\n    if (a < 0) return false;\n    let i = 1;\n    while\
    \ (i * i * i <= a) {\n        if (a % i === 0) return false;\n        i++;\n \
    \   }\n    return true;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n        return true;\n   \
    \ }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return iscube(a / 3);\n    }\n    return false;\n}\n", "  return a ===\
    \ Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    if (a ===\
    \ 0) {\n        return true;\n    }\n    if (a < 0) {\n        return false;\n\
    \    }\n    if (a % 3 === 0) {\n        return true;\n    }\n    return false;\n\
    }\n", "    return a > 0 && Math.floor(Math.sqrt(a)) === Math.sqrt(a);\n}\n", " \
    \   return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  return a % a === 0;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    if\
    \ (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n        return false;\n\
    \    }\n    if (a % 3 === 0) {\n        return false;\n    }\n    return iscube(a\
    \ / 3);\n}\n", "  if (a === 0) return true;\n  if (a < 0) return false;\n  if\
    \ (a % 3 === 0) return true;\n  return false;\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  if (a === 0) {\n    return\
    \ true;\n  }\n  if (a < 0) {\n    return false;\n  }\n  let i = 1;\n  while (i\
    \ * i * i <= a) {\n    if (a % i === 0) {\n      return false;\n    }\n    i++;\n\
    \  }\n  return true;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a > 0 && Math.pow(a, 3) == a;\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a > 0 && Math.pow(a, 3) === a;\n}\n", "    return a > 0 && Math.pow(a,\
    \ 3) === a;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a ===\
    \ Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n        return true;\n   \
    \ }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return iscube(a / 3);\n    }\n    return false;\n}\n", "  return a ===\
    \ Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    if\
    \ (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n        return false;\n\
    \    }\n    let n = Math.sqrt(a);\n    if (n * n === a) {\n        return true;\n\
    \    }\n    return false;\n}", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n        return true;\n   \
    \ }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return true;\n    }\n    return false;\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    if (a === 0) {\n        return true;\n    }\n    if (a < 0)\
    \ {\n        return false;\n    }\n    let n = Math.floor(Math.sqrt(a));\n   \
    \ if (n * n === a) {\n        return true;\n    }\n    return false;\n}\n", " \
    \   return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n        return true;\n\
    \    }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return iscube(a / 3);\n    }\n    return false;\n}\n", "  if (a === 0)\
    \ return true;\n  if (a < 0) return false;\n  if (a % 3 === 0) return false;\n\
    \  if (a % 4 === 0) return false;\n  if (a % 5 === 0) return false;\n  if (a %\
    \ 6 === 0) return false;\n  return true;\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    if (a === 0) {\n        return true;\n    }\n    if (a < 0)\
    \ {\n        return false;\n    }\n    if (a % 3 === 0) {\n        return iscube(a\
    \ / 3);\n    }\n    return false;\n}\n", "    if (a === 0) {\n        return true;\n\
    \    }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return true;\n    }\n    return false;\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n  \
    \      return true;\n    }\n    if (a < 0) {\n        return false;\n    }\n \
    \   if (a % 3 === 0) {\n        return true;\n    }\n    if (a % 3 === 1) {\n\
    \        return false;\n    }\n    if (a % 3 === 2) {\n        return true;\n\
    \    }\n    return false;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  \
    \  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    if (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n        return\
    \ false;\n    }\n    if (a % 3 === 0) {\n        return iscube(a / 3);\n    }\n\
    \    return false;\n}\n", "    if (a === 0) {\n        return true;\n    }\n \
    \   if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n     \
    \   return true;\n    }\n    return false;\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "    if (a === 0) {\n        return true;\n    }\n    if (a < 0)\
    \ {\n        return false;\n    }\n    if (a % 3 === 0) {\n        return true;\n\
    \    }\n    return false;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a % 3 === 0 && a % 5 === 0;\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "  if (a === 0) return true;\n  if (a < 0)\
    \ return false;\n  if (a % 3 === 0) return false;\n  if (a % 4 === 0) return false;\n\
    \  if (a % 5 === 0) return false;\n  if (a % 6 === 0) return false;\n  return\
    \ true;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a,\
    \ 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a,\
    \ 3);\n}\n", "    if (a === 0) {\n        return true;\n    }\n    if (a < 0)\
    \ {\n        return false;\n    }\n    if (a % 3 === 0) {\n        return iscube(a\
    \ / 3);\n    }\n    return false;\n}\n", "  if (a === 0) return true;\n  if (a\
    \ < 0) return false;\n  if (a % 3 === 0) return false;\n  return true;\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "  if (a === 0) return true;\n  if (a <\
    \ 0) return false;\n  if (a % 3 === 0) return false;\n  if (a % 4 === 0) return\
    \ false;\n  if (a % 5 === 0) return false;\n  if (a % 6 === 0) return false;\n\
    \  return true;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return a\
    \ === Math.pow(a, 3);\n}\n", "    return a > 0 && Math.pow(a, 3) == a;\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", " \
    \   return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  if (a === 0) {\n    return true;\n  }\n  if (a < 0) {\n    return false;\n  }\n\
    \  let n = Math.sqrt(a);\n  return n * n === a;\n}\n", "    if (a === 0) {\n \
    \       return true;\n    }\n    if (a < 0) {\n        return false;\n    }\n\
    \    if (a % 3 === 0) {\n        return true;\n    }\n    return false;\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", " \
    \ return a === Math.pow(a, 3);\n}\n", "  if (a === 0) return true;\n  if (a <\
    \ 0) return false;\n  if (a % 3 === 0) return false;\n  if (a % 4 === 0) return\
    \ false;\n  if (a % 5 === 0) return false;\n  return true;\n}\n", "  return a\
    \ === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    return a > 0 && Math.pow(a, 3) === a;\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    if (a === 0) {\n        return true;\n\
    \    }\n    if (a < 0) {\n        return false;\n    }\n    if (a % 3 === 0) {\n\
    \        return true;\n    }\n    if (a % 3 === 1) {\n        return false;\n\
    \    }\n    if (a % 3 === 2) {\n        return true;\n    }\n    return false;\n\
    }\n", "  return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n\
    }\n", "  if (a < 0) {\n    return false;\n  }\n  if (a === 0) {\n    return true;\n\
    \  }\n  if (a % 3 === 0) {\n    return false;\n  }\n  return true;\n}\n", "  \
    \  if (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n        return\
    \ false;\n    }\n    if (a % 3 === 0) {\n        return true;\n    }\n    return\
    \ false;\n}\n", "    return a === Math.pow(a, 3);\n}\n", "  if (a === 0) {\n \
    \   return true;\n  }\n  if (a < 0) {\n    return false;\n  }\n  let i = 1;\n\
    \  while (i * i * i <= a) {\n    if (a % i === 0) {\n      return false;\n   \
    \ }\n    i++;\n  }\n  return true;\n}\n", "    return a === Math.pow(a, 3);\n\
    }\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n\
    }\n", "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n\
    }\n", "    if (a === 0) {\n        return true;\n    }\n    if (a < 0) {\n   \
    \     return false;\n    }\n    if (a % 3 === 0) {\n        return iscube(a /\
    \ 3);\n    }\n    return false;\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n",
  "  return a === Math.pow(a, 3);\n}\n", "  if (a < 0) {\n    return false;\n  }\n\
    \  if (a === 0) {\n    return true;\n  }\n  if (a % 3 === 0) {\n    return iscube(a\
    \ / 3);\n  }\n  return false;\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a > 0 && Math.floor(Math.sqrt(a)) === Math.sqrt(a);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "  return a === Math.pow(a, 3);\n}\n", "  return\
    \ a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n", "    return\
    \ a === Math.pow(a, 3);\n}\n", "    if (a < 0) {\n        return false;\n    }\n\
    \    if (a === 0) {\n        return true;\n    }\n    if (a % 3 === 0) {\n   \
    \     return iscube(a / 3);\n    }\n    return false;\n}\n", "  if (a === 0) {\n\
    \    return true;\n  }\n  if (a < 0) {\n    return false;\n  }\n  let i = 1;\n\
    \  while (i * i * i <= a) {\n    if (a % i === 0) {\n      return false;\n   \
    \ }\n    i++;\n  }\n  return true;\n}\n", "  return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n",
  "    return a === Math.pow(a, 3);\n}\n", "  if (a === 0) {\n    return true;\n \
    \ }\n  if (a < 0) {\n    return false;\n  }\n  let i = 1;\n  while (i * i * i\
    \ <= a) {\n    if (a % i === 0) {\n      return false;\n    }\n    i++;\n  }\n\
    \  return true;\n}\n", "  return a === Math.pow(a, 3);\n}\n", "    return a ===\
    \ Math.pow(a, 3);\n}\n", "    return a === Math.pow(a, 3);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

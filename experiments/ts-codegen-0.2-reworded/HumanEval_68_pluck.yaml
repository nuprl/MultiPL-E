name: HumanEval_68_pluck
language: ts
prompt: "//\"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n// your task is to pluck one of the nodes and return it.\n// The\
  \ plucked node should be the node with the smallest even value.\n// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n// The plucked node should be returned in an array, [ smalest_value, its\
  \ index ],\n// If there are no even values or the given array is empty, return [].\n\
  // Example 1:\n// >>> pluck([4, 2, 3])\n// [2, 1]\n// Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n// Example 2:\n// >>> pluck([1, 2,\
  \ 3])\n// [2, 1]\n// Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n// Example 3:\n// >>> pluck([])\n// []\n// Example 4:\n// >>> pluck([5,\
  \ 0, 3, 0, 4, 2])\n// [0, 1]\n// Explanation: 0 is the smallest value, but  there\
  \ are two zeros,\n// so we will choose the first zero, which has the smallest index.\n\
  // Constraints:\n// * 1 <= nodes.length <= 10000\n// * 0 <= node.value\nfunction\
  \ pluck(arr: number[]): number[] {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = pluck;\n  assert.deepEqual(candidate([4, 2, 3]),[2,\
  \ 1]);\n  assert.deepEqual(candidate([1, 2, 3]),[2, 1]);\n  assert.deepEqual(candidate([]),[]);\n\
  \  assert.deepEqual(candidate([5, 0, 3, 0, 4, 2]),[0, 1]);\n  assert.deepEqual(candidate([1,\
  \ 2, 3, 0, 5, 3]),[0, 3]);\n  assert.deepEqual(candidate([5, 4, 8, 4, 8]),[4, 1]);\n\
  \  assert.deepEqual(candidate([7, 6, 7, 1]),[6, 1]);\n  assert.deepEqual(candidate([7,\
  \ 9, 7, 1]),[]);\n}\n\ntest();"
completions: ["  let smallest_even = Infinity;\n  let smallest_index = -1;\n  let\
    \ result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0) {\n      if (arr[i] < smallest_even) {\n        smallest_even = arr[i];\n\
    \        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_even === Infinity)\
    \ {\n    return [];\n  }\n  result.push(smallest_even);\n  result.push(smallest_index);\n\
    \  return result;\n}\n", "  let smallest_even = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even) {\n        smallest_even\
    \ = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index\
    \ !== -1) {\n    result = [smallest_even, smallest_index];\n  }\n  return result;\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex !== -1) {\n    result.push(min, minIndex);\n  }\n  return result;\n\
    }\n\nmodule.exports = pluck;\n", "  let smallest_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ let result = [smallest_value, smallest_index];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n\
    \        smallest_value = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  return result;\n}\n", "  let result = [];\n  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        index\
    \ = i;\n      }\n    }\n  }\n  if (index === -1) {\n    return [];\n  }\n  result.push(min);\n\
    \  result.push(index);\n  return result;\n}\n", "  let smallest_value = Infinity;\n\
    \  let smallest_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n\
    \        smallest_value = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  if (smallest_index !== -1) {\n    result = [smallest_value, smallest_index];\n\
    \  }\n  return result;\n}\n", "  const result = [];\n  let min = arr[0];\n  let\
    \ minIndex = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] % 2\
    \ === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n\
    \  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n", " \
    \ const result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let i =\
    \ 1; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n   \
    \   min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "  const result = [];\n  let min = 0;\n  let minIndex\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  if (min === 0) {\n    result.push(minIndex);\n  } else {\n\
    \    result.push(min);\n  }\n  return result;\n}\n\nmodule.exports = pluck;\n",
  "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] <\
    \ min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "    let min = Infinity;\n    let minIndex = -1;\n  \
    \  for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i]\
    \ < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n\
    \    }\n    if (minIndex === -1) {\n        return [];\n    }\n    let result\
    \ = [min, minIndex];\n    for (let i = minIndex + 1; i < arr.length; i++) {\n\
    \        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (minIndex === -1) {\n   \
    \     return [];\n    }\n    result = [min, minIndex];\n    return result;\n}",
  "    let min = Infinity;\n    let minIndex = -1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (minIndex === -1) {\n   \
    \     return [];\n    }\n    return [min, minIndex];\n}\n", "  const result =\
    \ [];\n  const evens = [];\n  let minEven = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ evens.push(arr[i]);\n      if (arr[i] < minEven) {\n        minEven = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (evens.length === 0) {\n   \
    \ return [];\n  }\n  result.push(minEven);\n  result.push(minIndex);\n  return\
    \ result;\n}\n", "  let result = [];\n  let min = arr[0];\n  let minIndex = 0;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n\
    \    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  let smallest_value = arr[0];\n  let smallest_index = 0;\n  for (let i\
    \ = 1; i < arr.length; i++) {\n    if (arr[i] < smallest_value) {\n      smallest_value\
    \ = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_value,\
    \ smallest_index];\n}\n", "  let smallest_even = arr.reduce((a, b) => a + b) %\
    \ 2 === 0 ? a : b\n  let smallest_index = arr.reduce((a, b) => a < b ? a : b)\n\
    \  return [smallest_even, smallest_index]\n}\n", "    let min = arr[0];\n    let\
    \ minIndex = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i]\
    \ < min) {\n            min = arr[i];\n            minIndex = i;\n        }\n\
    \    }\n    if (min % 2 === 0) {\n        return [min, minIndex];\n    }\n   \
    \ for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && i !==\
    \ minIndex) {\n            return [arr[i], i];\n        }\n    }\n    return [];\n\
    }\n", "  let smallest_even_value = arr[0];\n  let smallest_index = 0;\n  for (let\
    \ i = 1; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value)\
    \ {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n \
    \ }\n  return [smallest_even_value, smallest_index];\n}\n", "  const result =\
    \ [];\n  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min\
    \ = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n  if (minIndex === -1)\
    \ {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return\
    \ result;\n}\n", "  let smallest_even = Infinity;\n  let smallest_index = -1;\n\
    \  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < smallest_even) {\n        smallest_even = arr[i];\n\
    \        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index !== -1)\
    \ {\n    result = [smallest_even, smallest_index];\n  }\n  return result;\n}\n",
  "  let min = Infinity\n  let minIndex = -1\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i]\n\
    \        minIndex = i\n      }\n    }\n  }\n  if (minIndex === -1) return []\n\
    \  return [min, minIndex]\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n\
    \    }\n  }\n  if (minIndex === -1) return [];\n  return [min, minIndex];\n}\n",
  "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n\
    \  let min_index_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n\
    \        min_index = i;\n      }\n    } else {\n      if (arr[i] < min_value)\
    \ {\n        min_value = arr[i];\n        min_index_value = i;\n      }\n    }\n\
    \  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  if (min_index ===\
    \ -1) {\n    return [min_value, min_index_value];\n  }\n  return [min_even, min_index];\n\
    }\n", "  const result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n \
    \ result.push(minIndex);\n  return result;\n}\n", "  const result = [];\n  let\
    \ min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  const result = [];\n  const evens = arr.filter(x => x % 2 === 0);\n \
    \ if (evens.length === 0) return [];\n  const smallest = evens[0];\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] === smallest) {\n      result.push([arr[i],\
    \ i]);\n      break;\n    }\n  }\n  return result;\n}\n", "  let smallest_value\
    \ = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] < smallest_value) {\n      smallest_value = arr[i];\n    \
    \  smallest_index = i;\n    }\n  }\n  let result = [];\n  for (let i = 0; i <\
    \ arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      result.push([arr[i],\
    \ i]);\n    }\n  }\n  if (result.length === 0) {\n    return [];\n  }\n  result.sort((a,\
    \ b) => a[0] - b[0]);\n  return result[0];\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex === -1) {\n    return\
    \ [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) return [];\n  return [min, minIndex];\n}\n", "    let\
    \ min = Infinity;\n    let minIndex = -1;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (minIndex === -1) return\
    \ [];\n    return [min, minIndex];\n}", "  let smallest_even = Infinity;\n  let\
    \ smallest_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even) {\n \
    \       smallest_even = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  if (smallest_even === Infinity) {\n    return [];\n  }\n  result.push(smallest_even);\n\
    \  result.push(smallest_index);\n  return result;\n}\n", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result\
    \ = [min, minIndex];\n  }\n  return result;\n}\n", "  let smallest_value = Infinity;\n\
    \  let smallest_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < smallest_value) {\n      smallest_value = arr[i];\n\
    \      smallest_index = i;\n    }\n  }\n  if (smallest_index === -1) return [];\n\
    \  let result = [smallest_value, smallest_index];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] === smallest_value) {\n      result\
    \ = [arr[i], i];\n      break;\n    }\n  }\n  return result;\n}\n", "  let smallest_value\
    \ = Infinity;\n  let smallest_index = -1;\n  let result = [];\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ if (smallest_index !== -1) {\n    result = [smallest_value, smallest_index];\n\
    \  }\n  return result;\n}\n", "  let smallest_even = -1\n  let smallest_index\
    \ = -1\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (smallest_even === -1) {\n        smallest_even = arr[i]\n\
    \        smallest_index = i\n      } else if (arr[i] < smallest_even) {\n    \
    \    smallest_even = arr[i]\n        smallest_index = i\n      } else if (arr[i]\
    \ === smallest_even && i < smallest_index) {\n        smallest_index = i\n   \
    \   }\n    }\n  }\n  if (smallest_even === -1) {\n    result = []\n  } else {\n\
    \    result = [smallest_even, smallest_index]\n  }\n  return result\n}\n", " \
    \ let smallest_value = arr[0];\n  let smallest_index = 0;\n  let result = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n        smallest_index\
    \ = i;\n      }\n    }\n  }\n  result.push(smallest_value);\n  result.push(smallest_index);\n\
    \  return result;\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n  let minValue\
    \ = Infinity;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n      if (arr[i] < minValue) {\n        minValue\
    \ = arr[i];\n        result = [minValue, minIndex];\n      }\n    }\n  }\n  return\
    \ result;\n}\n", "  const result = [];\n  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min, minIndex);\n\
    \  }\n  return result;\n}\n", "  let result = [];\n  let min = arr[0];\n  let\
    \ minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2\
    \ === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n\
    \  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n", " \
    \ const result = [];\n  let smallestEven = -1;\n  let smallestEvenIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (smallestEven === -1) {\n        smallestEven = arr[i];\n        smallestEvenIndex\
    \ = i;\n      } else if (arr[i] < smallestEven) {\n        smallestEven = arr[i];\n\
    \        smallestEvenIndex = i;\n      } else if (arr[i] === smallestEven && i\
    \ < smallestEvenIndex) {\n        smallestEvenIndex = i;\n      }\n    }\n  }\n\
    \  if (smallestEven !== -1) {\n    result.push(smallestEven, smallestEvenIndex);\n\
    \  }\n  return result;\n}\n", "  let smallest_value = Infinity;\n  let smallest_index\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n    \
    \    smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index === -1) {\n\
    \    return [];\n  }\n  let result = [smallest_value, smallest_index];\n  for\
    \ (let i = smallest_index + 1; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0) {\n      if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n\
    \        smallest_index = i;\n      }\n    }\n  }\n  result = [smallest_value,\
    \ smallest_index];\n  return result;\n}\n", "  let smallest_value = arr[0];\n\
    \  let smallest_index = 0;\n  let result = [];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n\
    \        smallest_value = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  result = [smallest_value, smallest_index];\n  return result;\n}\n", " \
    \ let smallest_even = arr.reduce((a, b) => a + b) % 2 === 0 ? a : b\n  let smallest_index\
    \ = arr.reduce((a, b) => a < b ? a : b)\n  return [smallest_even, smallest_index]\n\
    }\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let result = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n\
    \      }\n    }\n  }\n  if (min_index !== -1) {\n    result.push(min_index);\n\
    \    result.push(min_even);\n  }\n  return result;\n}\n", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex === -1) {\n    return\
    \ [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "  let smallest_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ return [smallest_value, smallest_index];\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (min === Infinity) {\n    return\
    \ [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex !== -1) {\n    result.push(min, minIndex);\n  }\n  return result;\n\
    }", "  const result = [];\n  const min = arr.reduce((a, b) => a < b ? a : b);\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min) {\n      result.push([arr[i],\
    \ i]);\n    }\n  }\n  return result.length === 0 ? [] : result.sort((a, b) =>\
    \ a[0] - b[0])[0];\n}\n\nmodule.exports = pluck;\n", "  let smallest_value = Infinity;\n\
    \  let smallest_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n\
    \        smallest_value = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  if (smallest_index !== -1) {\n    result = [smallest_value, smallest_index];\n\
    \  }\n  return result;\n}\n", "  const result = [];\n  let min = arr[0];\n  let\
    \ minIndex = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] % 2\
    \ === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n    }\n\
    \  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n}\n", " \
    \ let smallest_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] < smallest_value) {\n      smallest_value\
    \ = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_value,\
    \ smallest_index];\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  return [min, minIndex];\n}\n",
  "  let smallest_value = arr[0];\n  let smallest_index = 0;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] < smallest_value) {\n      smallest_value\
    \ = arr[i];\n      smallest_index = i;\n    }\n  }\n  return [smallest_value,\
    \ smallest_index];\n}\n", "  let smallest_value = Infinity;\n  let smallest_index\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index\
    \ = i;\n    }\n  }\n  if (smallest_index === -1) {\n    return [];\n  }\n  let\
    \ result = [smallest_value, smallest_index];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && i !== smallest_index) {\n      result =\
    \ [arr[i], i];\n    }\n  }\n  return result;\n}\n", "  let min_even = Infinity\n\
    \  let min_index = -1\n  let min_value = Infinity\n  let min_index_value = -1\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min_even) {\n        min_even = arr[i]\n        min_index = i\n\
    \      }\n    } else if (arr[i] < min_value) {\n      min_value = arr[i]\n   \
    \   min_index_value = i\n    }\n  }\n  if (min_index_value === -1) {\n    return\
    \ []\n  }\n  return [min_even, min_index]\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min,\
    \ minIndex);\n  }\n  return result;\n}\n", "  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  return [min, minIndex];\n}\n", "  let result = [];\n  let\
    \ min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n\nmodule.exports = pluck;\n", "  let min = Infinity\n  let\
    \ minIndex = -1\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i]\n\
    \        minIndex = i\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result\
    \ = [min, minIndex]\n  }\n  return result\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min);\n\
    \    result.push(minIndex);\n  }\n  return result;\n}", "  let result = [];\n\
    \  let min = arr[0];\n  let minIndex = 0;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex !== -1) {\n    result.push(min);\n    result.push(minIndex);\n\
    \  }\n  return result;\n}\n", "  let smallest_even_value = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value\
    \ = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index\
    \ !== -1) {\n    result = [smallest_even_value, smallest_index];\n  }\n  return\
    \ result;\n}\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value\
    \ = Infinity;\n  let min_index_value = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n      \
    \  min_even = arr[i];\n        min_index = i;\n      }\n    } else if (arr[i]\
    \ < min_value) {\n      min_value = arr[i];\n      min_index_value = i;\n    }\n\
    \  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  return [min_even,\
    \ min_index_value];\n}\n", "  const result = [];\n  const evens = [];\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      evens.push(arr[i]);\n\
    \    }\n  }\n  if (evens.length === 0) {\n    return [];\n  }\n  for (let i =\
    \ 0; i < evens.length; i++) {\n    if (result.length === 0 || evens[i] < result[0])\
    \ {\n      result = [evens[i], i];\n    } else if (evens[i] === result[0]) {\n\
    \      result[1] = i;\n    }\n  }\n  return result;\n}\n", "  const result = [];\n\
    \  const evens = [];\n  let smallestEven = Infinity;\n  let smallestEvenIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      evens.push(arr[i]);\n      if (arr[i] < smallestEven) {\n        smallestEven\
    \ = arr[i];\n        smallestEvenIndex = i;\n      }\n    }\n  }\n  if (evens.length\
    \ === 0) {\n    return [];\n  }\n  if (evens.length === 1) {\n    result.push(evens[0]);\n\
    \    result.push(smallestEvenIndex);\n    return result;\n  }\n  for (let i =\
    \ 0; i < evens.length; i++) {\n    if (evens[i] === smallestEven) {\n      result.push(evens[i]);\n\
    \      result.push(smallestEvenIndex);\n      return result;\n    }\n  }\n  return\
    \ result;\n}", "  const result = [];\n  const min = arr.reduce((prev, curr) =>\
    \ {\n    if (prev === null) {\n      return curr;\n    }\n    if (curr % 2 ===\
    \ 0) {\n      return curr;\n    }\n    return prev;\n  });\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] === min) {\n      result.push([min, i]);\n\
    \      break;\n    }\n  }\n  return result;\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min,\
    \ minIndex);\n  }\n  return result;\n}\n", "    let min = arr[0];\n    let minIndex\
    \ = 0;\n    for (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min)\
    \ {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    if (min % 2 === 0) {\n        return [min, minIndex];\n    }\n    for (let\
    \ i = 1; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n            min = arr[i];\n            minIndex = i;\n        }\n    }\n\
    \    return [min, minIndex];\n}\n", "  let smallest_value = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n        smallest_value\
    \ = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index\
    \ !== -1) {\n    result = [smallest_value, smallest_index];\n  }\n  return result;\n\
    }\n", "  let smallest_even_value = Infinity;\n  let smallest_index = -1;\n  let\
    \ result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 ===\
    \ 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n\
    \      smallest_index = i;\n    }\n  }\n  if (smallest_index !== -1) {\n    result\
    \ = [smallest_even_value, smallest_index];\n  }\n  return result;\n}\n", "  let\
    \ smallest_even_value = Infinity;\n  let smallest_index = -1;\n  let result =\
    \ [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n\
    \        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index !== -1)\
    \ {\n    result = [smallest_even_value, smallest_index];\n  }\n  return result;\n\
    }\n", "  let smallest_even = Number.MAX_SAFE_INTEGER;\n  let smallest_index =\
    \ -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < smallest_even) {\n      smallest_even = arr[i];\n    \
    \  smallest_index = i;\n    }\n  }\n  if (smallest_index !== -1) {\n    result\
    \ = [smallest_even, smallest_index];\n  }\n  return result;\n}\n", "  const result\
    \ = [];\n  const evens = [];\n  let minEven = Infinity;\n  let minIndex = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ evens.push(arr[i]);\n      if (arr[i] < minEven) {\n        minEven = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (evens.length === 0) {\n   \
    \ return [];\n  }\n  if (evens.length === 1) {\n    result.push(minIndex);\n \
    \   result.push(minEven);\n    return result;\n  }\n  for (let i = 0; i < evens.length;\
    \ i++) {\n    if (evens[i] === minEven) {\n      result.push(minIndex);\n    \
    \  result.push(minEven);\n      return result;\n    }\n  }\n  for (let i = 0;\
    \ i < evens.length; i++) {\n    if (evens[i] === minEven) {\n      result.push(minIndex);\n\
    \      result.push(minEven);\n      return result;\n    }\n  }\n  return result;\n\
    }", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex !== -1) {\n    result.push(min, minIndex);\n  }\n  return result;\n\
    }\n", "  let smallest_value = Infinity;\n  let smallest_index = -1;\n  let result\
    \ = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index\
    \ = i;\n    }\n  }\n  if (smallest_index !== -1) {\n    result = [smallest_value,\
    \ smallest_index];\n  }\n  return result;\n}\n", "  const result = [];\n  const\
    \ min = arr.reduce((a, b) => a < b ? a : b);\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] === min) {\n      result.push([arr[i], i]);\n    }\n\
    \  }\n  return result.length === 0 ? [] : result.sort((a, b) => a[0] - b[0])[0][1];\n\
    }\n", "  const result = [];\n  let smallestEven = Infinity;\n  let index = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i]\
    \ < smallestEven) {\n      smallestEven = arr[i];\n      index = i;\n    }\n \
    \ }\n  if (index !== -1) {\n    result.push(smallestEven);\n    result.push(index);\n\
    \  }\n  return result;\n}\n\nmodule.exports = pluck;\n", "  const result = [];\n\
    \  let min = arr[0];\n  let minIndex = 0;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  let smallest = arr[0]\n  let smallest_index = 0\n  let result = []\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < smallest) {\n        smallest = arr[i]\n        smallest_index\
    \ = i\n      }\n    }\n  }\n  result = [smallest, smallest_index]\n  return result\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "  let smallest_even_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n     \
    \ smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n\
    }\n", "  let smallest_even = arr[0]\n  let smallest_index = 0\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even)\
    \ {\n        smallest_even = arr[i]\n        smallest_index = i\n      }\n   \
    \ }\n  }\n  return [smallest_even, smallest_index]\n}\n", "  let smallest_value\
    \ = arr[0];\n  let smallest_index = 0;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] < smallest_value) {\n      smallest_value = arr[i];\n    \
    \  smallest_index = i;\n    }\n  }\n  return [smallest_value, smallest_index];\n\
    }\n\nmodule.exports = pluck;\n", "  let result = [];\n  let min_even = Infinity;\n\
    \  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n \
    \       min_index = i;\n      }\n    }\n  }\n  if (min_index !== -1) {\n    result.push(min_even);\n\
    \    result.push(min_index);\n  }\n  return result;\n}\n", "  let result = [];\n\
    \  let min = Number.MAX_SAFE_INTEGER;\n  let index = -1;\n  for (let i = 0; i\
    \ < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n\
    \        min = arr[i];\n        index = i;\n      }\n    }\n  }\n  if (index ===\
    \ -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(index);\n  return\
    \ result;\n}\n", "  let min = Infinity\n  let minIndex = -1\n  let result = []\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min) {\n        min = arr[i]\n        minIndex = i\n      }\n \
    \   }\n  }\n  if (minIndex !== -1) {\n    result = [min, minIndex]\n  }\n  return\
    \ result\n}\n", "  let smallest_even_value = Number.MAX_SAFE_INTEGER;\n  let smallest_index\
    \ = 0;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n\
    \      smallest_index = i;\n    }\n  }\n  if (smallest_even_value === Number.MAX_SAFE_INTEGER)\
    \ {\n    result = [];\n  } else {\n    result = [smallest_even_value, smallest_index];\n\
    \  }\n  return result;\n}\n", "  let smallest_value = Infinity;\n  let smallest_index\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n    \
    \    smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index === -1) {\n\
    \    return [];\n  }\n  return [smallest_value, smallest_index];\n}\n", "  let\
    \ smallest_value = Infinity;\n  let smallest_index = -1;\n  let result = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < smallest_value) {\n        smallest_value = arr[i];\n        smallest_index\
    \ = i;\n      }\n    }\n  }\n  if (smallest_index !== -1) {\n    result = [smallest_value,\
    \ smallest_index];\n  }\n  return result;\n}\n", "  let smallest_value = arr[0];\n\
    \  let smallest_index = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i]\
    \ < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index =\
    \ i;\n    }\n  }\n  return [smallest_value, smallest_index];\n}\n", "  let min_even\
    \ = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n  let min_index_value\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index\
    \ = i;\n      }\n      if (arr[i] < min_value) {\n        min_value = arr[i];\n\
    \        min_index_value = i;\n      }\n    }\n  }\n  if (min_even === Infinity)\
    \ {\n    return [];\n  }\n  return [min_value, min_index_value];\n}\n", "  let\
    \ smallest_even_value = Infinity;\n  let smallest_index = -1;\n  let result =\
    \ [];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < smallest_even_value) {\n        smallest_even_value = arr[i];\n\
    \        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index !== -1)\
    \ {\n    result.push(smallest_index);\n    result.push(smallest_even_value);\n\
    \  }\n  return result;\n}\n", "    let result = [];\n    let min = Infinity;\n\
    \    let minIndex = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if\
    \ (arr[i] % 2 === 0) {\n            if (arr[i] < min) {\n                min =\
    \ arr[i];\n                minIndex = i;\n            }\n        }\n    }\n  \
    \  if (minIndex !== -1) {\n        result.push(min);\n        result.push(minIndex);\n\
    \    }\n    return result;\n}\n", "  const result = [];\n  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex\
    \ = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min, minIndex);\n\
    \  }\n  return result;\n}\n", "  let smallest_value = Infinity;\n  let smallest_index\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 &&\
    \ arr[i] < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index\
    \ = i;\n    }\n  }\n  if (smallest_index === -1) {\n    return [];\n  }\n  return\
    \ [smallest_value, smallest_index];\n}\n", "  let smallest_even_value = arr[0];\n\
    \  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value = arr[i];\n\
    \      smallest_index = i;\n    }\n  }\n  return [smallest_even_value, smallest_index];\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let index = 0;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      index = i;\n    }\n  }\n  result.push(min);\n  result.push(index);\n\
    \  return result;\n}\n", "  const result = [];\n  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min);\n    result.push(minIndex);\n\
    \  }\n  return result;\n}\n", "  const result = [];\n  let min = arr[0];\n  let\
    \ minIndex = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] % 2\
    \ === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex\
    \ = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n \
    \ return result;\n}\n", "    let min = arr[0];\n    let minIndex = 0;\n    for\
    \ (let i = 1; i < arr.length; i++) {\n        if (arr[i] < min) {\n          \
    \  min = arr[i];\n            minIndex = i;\n        }\n    }\n    if (min % 2\
    \ === 0) {\n        return [min, minIndex];\n    }\n    for (let i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    return [min, minIndex];\n}\n",
  "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] <\
    \ min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex !== -1) {\n    result.push(min);\n    result.push(minIndex);\n\
    \  }\n  return result;\n}\n", "  const result = [];\n  const minEven = arr.reduce((prev,\
    \ curr) => {\n    if (prev === null) {\n      return curr;\n    }\n    if (curr\
    \ % 2 === 0) {\n      return curr;\n    }\n    return prev;\n  });\n  const minEvenIndex\
    \ = arr.indexOf(minEven);\n  result.push(minEven);\n  result.push(minEvenIndex);\n\
    \  return result;\n}\n", "  let smallest_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ return [smallest_value, smallest_index];\n}\n", "  const result = [];\n  let\
    \ min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex === -1) {\n    return\
    \ [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_even_index\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_even_index\
    \ = i;\n      }\n    }\n  }\n  if (min_even_index === -1) {\n    return [];\n\
    \  }\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min_even) {\n\
    \      if (i < min_index) {\n        min_index = i;\n      }\n    }\n  }\n  return\
    \ [min_even, min_index];\n}", "  const result = [];\n  const min = arr.reduce((a,\
    \ b) => a > b ? b : a);\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ === min) {\n      result.push([arr[i], i]);\n    }\n  }\n  return result.length\
    \ === 0 ? [] : result.sort((a, b) => a[0] - b[0])[0];\n}", "  let smallest_even_value\
    \ = Infinity;\n  let smallest_index = -1;\n  let result = [];\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_even_value)\
    \ {\n      smallest_even_value = arr[i];\n      smallest_index = i;\n    }\n \
    \ }\n  if (smallest_index !== -1) {\n    result = [smallest_even_value, smallest_index];\n\
    \  }\n  return result;\n}\n", "  let smallest_even_value = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value\
    \ = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  if (smallest_index\
    \ !== -1) {\n    result = [smallest_even_value, smallest_index];\n  }\n  return\
    \ result;\n}\n", "  const result = [];\n  const evens = arr.filter(x => x % 2\
    \ === 0);\n  if (evens.length === 0) return [];\n  const smallestEven = evens[0];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === smallestEven) {\n\
    \      result.push([arr[i], i]);\n      break;\n    }\n  }\n  return result;\n\
    }\n", "  const result = [];\n  let min = arr[0];\n  let minIndex = 0;\n  for (let\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n\
    \      min = arr[i];\n      minIndex = i;\n    }\n  }\n  result.push(min);\n \
    \ result.push(minIndex);\n  return result;\n}\n", "  let smallest_even = arr[0]\n\
    \  let smallest_index = 0\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < smallest_even) {\n        smallest_even = arr[i]\n\
    \        smallest_index = i\n      }\n    }\n  }\n  return [smallest_even, smallest_index]\n\
    }\n", "    let smallest = Number.MAX_VALUE;\n    let result = [];\n    for (let\
    \ i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0 && arr[i] < smallest)\
    \ {\n            smallest = arr[i];\n            result = [arr[i], i];\n     \
    \   }\n    }\n    return result;\n}\n", "    let smallestEvenValue = arr.reduce((a,\
    \ b) => a + b) % 2 === 0 ? a : b;\n    let index = arr.reduce((a, b) => a < b\
    \ ? a : b);\n    return [smallestEvenValue, index];\n}\n", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex = i;\n   \
    \ }\n  }\n  if (minIndex === -1) return [];\n  return [min, minIndex];\n}\n",
  "    let result = [];\n    let minEven = Number.MAX_VALUE;\n    let minIndex = -1;\n\
    \    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 === 0) {\n\
    \            if (arr[i] < minEven) {\n                minEven = arr[i];\n    \
    \            minIndex = i;\n            }\n        }\n    }\n    if (minIndex\
    \ !== -1) {\n        result.push(minEven);\n        result.push(minIndex);\n \
    \   }\n    return result;\n}\n", "    let min = Infinity;\n    let minIndex =\
    \ -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] % 2 ===\
    \ 0 && arr[i] < min) {\n            min = arr[i];\n            minIndex = i;\n\
    \        }\n    }\n    if (minIndex === -1) {\n        return [];\n    }\n   \
    \ let result = [min, minIndex];\n    for (let i = minIndex + 1; i < arr.length;\
    \ i++) {\n        if (arr[i] % 2 === 0 && arr[i] < min) {\n            min = arr[i];\n\
    \            minIndex = i;\n        }\n    }\n    if (minIndex === -1) {\n   \
    \     return [];\n    }\n    result = [min, minIndex];\n    return result;\n}",
  "  const result = [];\n  const min = arr.reduce((prev, curr) => {\n    if (prev\
    \ === null) {\n      return curr;\n    }\n    if (curr % 2 === 0) {\n      return\
    \ curr;\n    }\n    return prev;\n  });\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] === min) {\n      result.push([arr[i], i]);\n    }\n  }\n\
    \  return result;\n}\n", "  let result = [];\n  let min = Number.MAX_SAFE_INTEGER;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      index = i;\n    }\n \
    \ }\n  if (index === -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(index);\n\
    \  return result;\n}\n", "  const result = [];\n  let min = 0;\n  let minIndex\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  if (min === 0) {\n    result.push(min, minIndex);\n  }\n\
    \  return result;\n}\n", "  let smallest_even = arr.reduce((prev, curr) => {\n\
    \    if (curr % 2 === 0) {\n      return curr\n    } else if (prev === 0) {\n\
    \      return curr\n    } else {\n      return prev\n    }\n  })\n  let smallest_even_index\
    \ = arr.indexOf(smallest_even)\n  let smallest_even_value = arr[smallest_even_index]\n\
    \  let smallest_even_index_arr = [smallest_even_value, smallest_even_index]\n\
    \  return smallest_even_index_arr\n}\n", "  const result = [];\n  let min = Infinity;\n\
    \  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex\
    \ = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n \
    \ return result;\n}\n", "  const result = [];\n  let min = arr[0];\n  let minIndex\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n\
    \  let min_index_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n\
    \        min_index = i;\n      }\n    } else if (arr[i] < min_value) {\n     \
    \ min_value = arr[i];\n      min_index_value = i;\n    }\n  }\n  if (min_even\
    \ === Infinity) return [];\n  if (min_index === -1) return [min_value, min_index_value];\n\
    \  return [min_value, min_index];\n}\n", "  let smallest_even = Number.MAX_SAFE_INTEGER;\n\
    \  let smallest_index = -1;\n  let result = [];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_even) {\n \
    \       smallest_even = arr[i];\n        smallest_index = i;\n      }\n    }\n\
    \  }\n  if (smallest_index !== -1) {\n    result = [smallest_even, smallest_index];\n\
    \  }\n  return result;\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if\
    \ (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n  \
    \  }\n  }\n  return [min, minIndex];\n}\n", "  const result = [];\n  let min =\
    \ Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n      minIndex\
    \ = i;\n    }\n  }\n  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n\
    \  result.push(minIndex);\n  return result;\n}\n", "  const result = [];\n  let\
    \ min = arr[0];\n  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n", "    let smallest_even = -1\n    let smallest_index =\
    \ -1\n    let result = []\n    for (let i = 0; i < arr.length; i++) {\n      \
    \  if (arr[i] % 2 === 0) {\n            if (smallest_even === -1) {\n        \
    \        smallest_even = arr[i]\n                smallest_index = i\n        \
    \    } else if (arr[i] < smallest_even) {\n                smallest_even = arr[i]\n\
    \                smallest_index = i\n            } else if (arr[i] === smallest_even\
    \ && i < smallest_index) {\n                smallest_index = i\n            }\n\
    \        }\n    }\n    if (smallest_even === -1) {\n        result = []\n    }\
    \ else {\n        result = [smallest_even, smallest_index]\n    }\n    return\
    \ result\n}\n", "  let smallest_value = arr[0];\n  let smallest_index = 0;\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallest_value) {\n\
    \      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n  let\
    \ result = [smallest_value, smallest_index];\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      result = [arr[i], i];\n      break;\n\
    \    }\n  }\n  return result;\n}\n", "  let smallest_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ return [smallest_value, smallest_index];\n}\n", "  let min = Infinity;\n  let\
    \ minIndex = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result\
    \ = [min, minIndex];\n  }\n  return result;\n}\n", "  let min = Infinity;\n  let\
    \ minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2\
    \ === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex\
    \ = i;\n      }\n    }\n  }\n  return [min, minIndex];\n}\n", "  let min_even\
    \ = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n  let min_index_value\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index\
    \ = i;\n      }\n      if (arr[i] < min_value) {\n        min_value = arr[i];\n\
    \        min_index_value = i;\n      }\n    }\n  }\n  if (min_even === Infinity)\
    \ return [];\n  return [min_value, min_index_value];\n}\n", "  let min = Infinity;\n\
    \  let minIndex = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++)\
    \ {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1) {\n    result\
    \ = [min, minIndex];\n  }\n  return result;\n}\n", "  let smallest = arr[0]\n\
    \  let index = 0\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < smallest)\
    \ {\n      smallest = arr[i]\n      index = i\n    }\n  }\n  return [smallest,\
    \ index]\n}\n", "  let smallest_even = -1\n  let smallest_index = -1\n  let result\
    \ = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (smallest_even === -1) {\n        smallest_even = arr[i]\n        smallest_index\
    \ = i\n      } else if (arr[i] < smallest_even) {\n        smallest_even = arr[i]\n\
    \        smallest_index = i\n      } else if (arr[i] === smallest_even && i <\
    \ smallest_index) {\n        smallest_index = i\n      }\n    }\n  }\n  if (smallest_even\
    \ === -1) {\n    result = []\n  } else {\n    result = [smallest_even, smallest_index]\n\
    \  }\n  return result\n}\n", "  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i]\
    \ < min) {\n        min = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n\
    \  if (minIndex === -1) {\n    return [];\n  }\n  return [min, minIndex];\n}\n",
  "  let smallest_value = Infinity;\n  let smallest_index = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ if (smallest_index === -1) {\n    return [];\n  }\n  let result = [smallest_value,\
    \ smallest_index];\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && i !== smallest_index) {\n      result = [Math.min(result[0], arr[i]),\
    \ Math.min(result[1], i)];\n    }\n  }\n  return result;\n}\n", "  const result\
    \ = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min\
    \ = arr[i];\n        minIndex = i;\n      }\n    }\n  }\n  if (minIndex !== -1)\
    \ {\n    result.push(min, minIndex);\n  }\n  return result;\n}\n", "    let smallest_value\
    \ = arr[0];\n    let smallest_index = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] < smallest_value) {\n            smallest_value =\
    \ arr[i];\n            smallest_index = i;\n        }\n    }\n    if (arr.length\
    \ === 1) {\n        return [arr[0], 0];\n    }\n    let result = [];\n    for\
    \ (let i = 0; i < arr.length; i++) {\n        if (arr[i] === smallest_value) {\n\
    \            result.push([arr[i], i]);\n        }\n    }\n    if (result.length\
    \ === 0) {\n        return [];\n    }\n    if (result.length === 1) {\n      \
    \  return result[0];\n    }\n    result.sort((a, b) => a[0] - b[0]);\n    return\
    \ result[0];\n}\n", "  const result = [];\n  const index = [];\n  let min = arr[0];\n\
    \  let minIndex = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n        minIndex\
    \ = i;\n      }\n    }\n  }\n  result.push(min);\n  result.push(minIndex);\n \
    \ return result;\n}\n", "  let min = arr[0]\n  let min_index = 0\n  for (let i\
    \ = 1; i < arr.length; i++) {\n    if (arr[i] < min) {\n      min = arr[i]\n \
    \     min_index = i\n    }\n  }\n  let result = [min, min_index]\n  for (let i\
    \ = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] !== min) {\n\
    \      result = [arr[i], i]\n      break\n    }\n  }\n  return result\n}\n", " \
    \ let min = Infinity\n  let minIndex = -1\n  let result = []\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min)\
    \ {\n        min = arr[i]\n        minIndex = i\n      }\n    }\n  }\n  if (minIndex\
    \ !== -1) {\n    result = [min, minIndex]\n  }\n  return result\n}\n", "  let\
    \ smallest_even = arr.reduce((prev, curr) => {\n    if (curr % 2 === 0) {\n  \
    \    return curr\n    }\n    return prev\n  })\n  let smallest_index = arr.reduce((prev,\
    \ curr) => {\n    if (curr === smallest_even) {\n      return curr\n    }\n  \
    \  return prev\n  })\n  return [smallest_even, smallest_index]\n}\n", "  let smallest_value\
    \ = arr[0];\n  let smallest_index = 0;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] < smallest_value) {\n      smallest_value = arr[i];\n    \
    \  smallest_index = i;\n    }\n  }\n  return [smallest_value, smallest_index];\n\
    }\n", "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  if (minIndex === -1) return [];\n  return [min,\
    \ minIndex];\n}\n", "  let smallest_even_value = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value\
    \ = arr[i];\n      smallest_index = i;\n    }\n  }\n  if (smallest_index === -1)\
    \ {\n    return [];\n  }\n  result.push(smallest_even_value);\n  result.push(smallest_index);\n\
    \  return result;\n}\n", "  let smallest_value = arr[0];\n  let smallest_index\
    \ = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < smallest_value)\
    \ {\n      smallest_value = arr[i];\n      smallest_index = i;\n    }\n  }\n \
    \ return [smallest_value, smallest_index];\n}\n", "  let smallest = Infinity;\n\
    \  let index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] %\
    \ 2 === 0 && arr[i] < smallest) {\n      smallest = arr[i];\n      index = i;\n\
    \    }\n  }\n  return [smallest, index];\n}\n", "  let smallest_value = arr[0];\n\
    \  let smallest_index = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ < smallest_value) {\n      smallest_value = arr[i];\n      smallest_index =\
    \ i;\n    }\n  }\n  return [smallest_value, smallest_index];\n}\n", "  let smallest_value\
    \ = arr[0];\n  let smallest_index = 0;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] < smallest_value) {\n      smallest_value = arr[i];\n    \
    \  smallest_index = i;\n    }\n  }\n  return [smallest_value, smallest_index];\n\
    }\n", "  const result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min)\
    \ {\n      min = arr[i];\n      minIndex = i;\n    }\n  }\n  if (minIndex ===\
    \ -1) {\n    return [];\n  }\n  result.push(min);\n  result.push(minIndex);\n\
    \  return result;\n}\n\nmodule.exports = pluck;\n", "  let min_even = Infinity;\n\
    \  let min_index = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n \
    \       min_index = i;\n      }\n    }\n  }\n  if (min_index === -1) {\n    return\
    \ [];\n  }\n  return [min_even, min_index];\n}\n", "  let smallest_value = arr[0];\n\
    \  let smallest_index = 0;\n  let i = 0;\n  for (i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < smallest_value) {\n        smallest_value\
    \ = arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n  return [smallest_value,\
    \ smallest_index];\n}\n", "  let smallest_even_value = Infinity;\n  let smallest_index\
    \ = -1;\n  let result = [];\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0 && arr[i] < smallest_even_value) {\n      smallest_even_value\
    \ = arr[i];\n      smallest_index = i;\n    }\n  }\n  if (smallest_index !== -1)\
    \ {\n    result.push(smallest_index);\n    result.push(smallest_even_value);\n\
    \  }\n  return result;\n}\n", "  let smallest = Infinity\n  let smallestIndex\
    \ = -1\n  let result = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ % 2 === 0) {\n      if (arr[i] < smallest) {\n        smallest = arr[i]\n  \
    \      smallestIndex = i\n      }\n    }\n  }\n  if (smallestIndex !== -1) {\n\
    \    result = [smallest, smallestIndex]\n  }\n  return result\n}\n", "  const\
    \ result = [];\n  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min\
    \ = arr[i];\n      minIndex = i;\n    }\n  }\n  if (minIndex !== -1) {\n    result.push(min,\
    \ minIndex);\n  }\n  return result;\n}\n", "  const result = [];\n  let min =\
    \ Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      if (arr[i] < min) {\n        min = arr[i];\n\
    \        minIndex = i;\n      }\n    }\n  }\n  if (minIndex === -1) {\n    return\
    \ [];\n  }\n  result.push(min);\n  result.push(minIndex);\n  return result;\n\
    }\n", "  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0 && arr[i] < min) {\n      min = arr[i];\n \
    \     minIndex = i;\n    }\n  }\n  if (minIndex === -1) return [];\n  return [min,\
    \ minIndex];\n}\n", "  let min_index = 0\n  let min_value = arr[0]\n  let result\
    \ = []\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min_value) {\n        min_value = arr[i]\n        min_index\
    \ = i\n      }\n    }\n  }\n  result = [min_value, min_index]\n  return result\n\
    }\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value = Infinity;\n\
    \  let min_index_value = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n        min_even = arr[i];\n\
    \        min_index = i;\n      }\n    } else {\n      if (arr[i] < min_value)\
    \ {\n        min_value = arr[i];\n        min_index_value = i;\n      }\n    }\n\
    \  }\n  if (min_index_value === -1) {\n    return [];\n  }\n  return [min_value,\
    \ min_index_value];\n}\n", "  const result = [];\n  const evens = [];\n  let smallest\
    \ = Infinity;\n  let index = -1;\n\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] % 2 === 0) {\n      evens.push(arr[i]);\n    } else {\n      if\
    \ (arr[i] < smallest) {\n        smallest = arr[i];\n        index = i;\n    \
    \  }\n    }\n  }\n\n  if (evens.length === 0) {\n    return [];\n  }\n\n  result.push(smallest);\n\
    \  result.push(index);\n\n  return result;\n}\n\nmodule.exports = pluck;\n", " \
    \ let smallest_even_value = Infinity;\n  let smallest_index = -1;\n  let result\
    \ = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0)\
    \ {\n      if (arr[i] < smallest_even_value) {\n        smallest_even_value =\
    \ arr[i];\n        smallest_index = i;\n      }\n    }\n  }\n\n  if (smallest_index\
    \ !== -1) {\n    result = [smallest_even_value, smallest_index];\n  }\n\n  return\
    \ result;\n}\n", "  const result = [];\n  let min = Infinity;\n  let minIndex\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n\
    \      if (arr[i] < min) {\n        min = arr[i];\n        minIndex = i;\n   \
    \   }\n    }\n  }\n  if (minIndex === -1) {\n    return [];\n  }\n  result.push(min);\n\
    \  result.push(minIndex);\n  return result;\n}", "  let min_even = Infinity;\n\
    \  let min_index = -1;\n  let min_value = Infinity;\n  let min_index_value = -1;\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] % 2 === 0) {\n     \
    \ if (arr[i] < min_even) {\n        min_even = arr[i];\n        min_index = i;\n\
    \      }\n    } else {\n      if (arr[i] < min_value) {\n        min_value = arr[i];\n\
    \        min_index_value = i;\n      }\n    }\n  }\n  if (min_index_value ===\
    \ -1) {\n    return [];\n  } else {\n    return [min_value, min_index_value];\n\
    \  }\n}\n", "  let min_even = Infinity;\n  let min_index = -1;\n  let min_value\
    \ = Infinity;\n  let min_index_value = -1;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] % 2 === 0) {\n      if (arr[i] < min_even) {\n      \
    \  min_even = arr[i];\n        min_index = i;\n      }\n    } else if (arr[i]\
    \ < min_value) {\n      min_value = arr[i];\n      min_index_value = i;\n    }\n\
    \  }\n  if (min_even === Infinity) {\n    return [];\n  }\n  return [min_even,\
    \ min_index_value];\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

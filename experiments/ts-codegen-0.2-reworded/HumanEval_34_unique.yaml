name: HumanEval_34_unique
language: ts
prompt: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2, 3,\
  \ 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2,\
  \ 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
completions: ["    let result = [];\n    for (let i = 0; i < l.length; i++) {\n  \
    \      if (result.indexOf(l[i]) === -1) {\n            result.push(l[i]);\n  \
    \      }\n    }\n    return result;\n}\n", "  let u = [];\n  for (let i = 0; i\
    \ < l.length; i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n\
    \    }\n  }\n  return u;\n}\n", "    let result = [];\n    for (let i = 0; i <\
    \ l.length; i++) {\n        if (result.indexOf(l[i]) === -1) {\n            result.push(l[i]);\n\
    \        }\n    }\n    return result;\n}\n", "  let result = [];\n  for (let i\
    \ = 0; i < l.length; i++) {\n    if (result.indexOf(l[i]) === -1) {\n      result.push(l[i]);\n\
    \    }\n  }\n  return result;\n}\n", "  let result = [];\n  let i = 0;\n  let\
    \ j = 0;\n  while (i < l.length) {\n    if (result.indexOf(l[i]) === -1) {\n \
    \     result.push(l[i]);\n    }\n    i++;\n  }\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_58_common
language: ts
prompt: "//Return sorted unique common elements for two arrays.\n// >>> common([1,\
  \ 4, 3, 34, 653, 2, 5], [5, 7, 1, 5, 9, 653, 121])\n// [1, 5, 653]\n// >>> common([5,\
  \ 3, 2, 8], [3, 2])\n// [2, 3]\nfunction common(l1: number[], l2: number[]): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = common;\n  assert.deepEqual(candidate([1, 4, 3, 34,\
  \ 653, 2, 5], [5, 7, 1, 5, 9, 653, 121]),[1, 5, 653]);\n  assert.deepEqual(candidate([5,\
  \ 3, 2, 8], [3, 2]),[2, 3]);\n  assert.deepEqual(candidate([4, 3, 2, 8], [3, 2,\
  \ 4]),[2, 3, 4]);\n  assert.deepEqual(candidate([4, 3, 2, 8], []),[]);\n}\n\ntest();"
completions: ["  const result = [];\n  const l1Len = l1.length;\n  const l2Len = l2.length;\n\
    \  let i = 0;\n  let j = 0;\n  while (i < l1Len && j < l2Len) {\n    if (l1[i]\
    \ === l2[j]) {\n      result.push(l1[i]);\n      i++;\n      j++;\n    } else\
    \ if (l1[i] > l2[j]) {\n      j++;\n    } else {\n      i++;\n    }\n  }\n  return\
    \ result;\n}\n", "  let l1_len = l1.length\n  let l2_len = l2.length\n  let l1_index\
    \ = 0\n  let l2_index = 0\n  let common_array = []\n  while (l1_index < l1_len\
    \ && l2_index < l2_len) {\n    if (l1[l1_index] === l2[l2_index]) {\n      common_array.push(l1[l1_index])\n\
    \      l1_index++\n      l2_index++\n    } else if (l1[l1_index] < l2[l2_index])\
    \ {\n      l1_index++\n    } else {\n      l2_index++\n    }\n  }\n  return common_array\n\
    }\n", "  let l1_len = l1.length\n  let l2_len = l2.length\n  let l1_i = 0\n  let\
    \ l2_i = 0\n  let result = []\n  while (l1_i < l1_len && l2_i < l2_len) {\n  \
    \  if (l1[l1_i] === l2[l2_i]) {\n      result.push(l1[l1_i])\n      l1_i++\n \
    \     l2_i++\n    } else if (l1[l1_i] < l2[l2_i]) {\n      l1_i++\n    } else\
    \ {\n      l2_i++\n    }\n  }\n  return result\n}\n", "  let l1_len = l1.length\n\
    \  let l2_len = l2.length\n  let result = []\n  let i = 0\n  let j = 0\n  while\
    \ (i < l1_len && j < l2_len) {\n    if (l1[i] === l2[j]) {\n      result.push(l1[i])\n\
    \      i++\n      j++\n    } else if (l1[i] > l2[j]) {\n      j++\n    } else\
    \ {\n      i++\n    }\n  }\n  return result\n}\n", "  let l1_len = l1.length;\n\
    \  let l2_len = l2.length;\n  let result = [];\n  let i = 0;\n  let j = 0;\n \
    \ while (i < l1_len && j < l2_len) {\n    if (l1[i] === l2[j]) {\n      result.push(l1[i]);\n\
    \      i++;\n      j++;\n    } else if (l1[i] > l2[j]) {\n      j++;\n    } else\
    \ {\n      i++;\n    }\n  }\n  return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

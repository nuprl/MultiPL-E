{
  "name": "HumanEval_43_pairs_sum_to_zero",
  "language": "ts",
  "prompt": "//pairs_sum_to_zero takes an array of integers as an input.\n// it returns true if there are two distinct elements in the array that\n// sum to zero, and false otherwise.\n// >>> pairs_sum_to_zero([1, 3, 5, 0])\n// false\n// >>> pairs_sum_to_zero([1, 3, -2, 1])\n// false\n// >>> pairs_sum_to_zero([1, 2, 3, 7])\n// false\n// >>> pairs_sum_to_zero([2, 4, -5, 3, 5, 7])\n// true\n// >>> pairs_sum_to_zero([1])\n// false\nfunction pairs_sum_to_zero(l: number[]): boolean {\n",
  "tests": "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = pairs_sum_to_zero;\n  assert.deepEqual(candidate([1, 3, 5, 0]),false);\n  assert.deepEqual(candidate([1, 3, -2, 1]),false);\n  assert.deepEqual(candidate([1, 2, 3, 7]),false);\n  assert.deepEqual(candidate([2, 4, -5, 3, 5, 7]),true);\n  assert.deepEqual(candidate([1]),false);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 30]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 3, 2, 31]),true);\n  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 30]),false);\n  assert.deepEqual(candidate([-3, 9, -1, 4, 2, 31]),false);\n}\n\ntest();",
  "completions": [
    "  let i = 0\n  let j = 0\n  let sum = 0\n  let count = 0\n  let result = false\n  while (i < l.length) {\n    sum = l[i] + l[j]\n    if (sum === 0) {\n      count++\n      if (count > 1) {\n        result = true\n      }\n    }\n    if (sum < 0) {\n      j++\n    } else {\n      i++\n    }\n  }\n  return result\n}\n",
    "    let i = 0;\n    let j = 0;\n    let count = 0;\n    while (i < l.length) {\n        if (l[i] === 0) {\n            count++;\n            if (count > 1) {\n                return false;\n            }\n            j = i + 1;\n            while (j < l.length && l[j] === 0) {\n                j++;\n            }\n            i = j;\n        } else {\n            i++;\n        }\n    }\n    return count === 2;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let sum_to_zero = false;\n  while (i < l.length) {\n    sum = l[i];\n    while (j < l.length) {\n      if (sum === l[j]) {\n        pairs.push([i, j]);\n        sum = 0;\n        break;\n      }\n      j++;\n    }\n    i++;\n  }\n  for (let [a, b] of pairs) {\n    if (l[a] + l[b] === 0) {\n      sum_to_zero = true;\n      break;\n    }\n  }\n  return sum_to_zero;\n}\n",
    "  if (l.length === 0) {\n    return false;\n  }\n  let i = 0;\n  let j = 0;\n  let count = 0;\n  let sum = 0;\n  while (i < l.length) {\n    sum += l[i];\n    if (sum === 0) {\n      count++;\n      if (count === 2) {\n        return true;\n      }\n      sum = 0;\n      j = i + 1;\n    } else {\n      i++;\n    }\n  }\n  return false;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        count++;\n      }\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < l.length; j++) {\n            if (i != j) {\n                sum += l[i] + l[j];\n            }\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let found = false;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length && sum + l[j] === 0) {\n      pairs.push([l[i], l[j]]);\n      j += 1;\n    }\n    i += 1;\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let result = false;\n    while (i < l.length) {\n        sum = l[i];\n        j = i + 1;\n        while (j < l.length && sum + l[j] === 0) {\n            count++;\n            j++;\n        }\n        i = j;\n    }\n    if (count === 2) {\n        result = true;\n    }\n    return result;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++;\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n            if (sum === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let count = 0\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++\n    }\n  }\n  return count === 2\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 1;\n}",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                count++;\n            }\n        }\n    }\n    return count === 2;\n}\n",
    "  if (l.length === 1) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0 && l.length > 2;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        count++;\n      }\n    }\n  }\n  return count === 2;\n}\n",
    "  let pairs = [];\n  let i;\n  let j;\n  let k;\n  let l_len = l.length;\n  let sum;\n  let sum_i;\n  let sum_j;\n\n  for (i = 0; i < l_len; i++) {\n    sum = 0;\n    for (j = i + 1; j < l_len; j++) {\n      sum += l[i] + l[j];\n      if (sum === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n\n  if (pairs.length === 0) {\n    return false;\n  }\n\n  for (i = 0; i < pairs.length; i++) {\n    sum_i = pairs[i][0];\n    sum_j = pairs[i][1];\n    for (k = i + 1; k < pairs.length; k++) {\n      if (pairs[k][0] === sum_i && pairs[k][1] === sum_j) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < l.length; j++) {\n            if (i != j) {\n                sum += l[i] + l[j];\n            }\n        }\n        if (sum === 0) {\n            pairs.push(i);\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let pairs = [];\n    while (i < l.length) {\n        sum = 0;\n        count = 0;\n        while (j < l.length) {\n            if (l[i] + l[j] === 0) {\n                count++;\n                if (count > 1) {\n                    return true;\n                }\n                pairs.push([l[i], l[j]]);\n            }\n            j++;\n        }\n        i++;\n    }\n    return false;\n}\n",
    "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  if (sum === 0) {\n    return false;\n  }\n  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < l.length - 1; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                count++;\n            }\n        }\n    }\n    return count === 2;\n}\n",
    "    let pairs = [];\n    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        if (sum === 0) {\n            pairs.push(i);\n            sum = l[i];\n        } else {\n            sum += l[i];\n        }\n    }\n    return pairs.length === 2 && pairs[0] !== pairs[1];\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    while (i < l.length) {\n        if (l[i] === 0) {\n            if (pairs.length === 0) {\n                pairs.push([l[i], l[j]]);\n                i++;\n                j++;\n            } else {\n                if (pairs[pairs.length - 1][0] === l[i]) {\n                    pairs[pairs.length - 1][1] = l[j];\n                    j++;\n                } else {\n                    pairs.push([l[i], l[j]]);\n                    i++;\n                    j++;\n                }\n            }\n        } else {\n            i++;\n        }\n    }\n    return pairs.length === 2;\n}",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let sum = 0;\n  let count = 0;\n  let flag = false;\n\n  for (i = 0; i < l.length; i++) {\n    sum = 0;\n    for (j = i + 1; j < l.length; j++) {\n      sum += l[i] + l[j];\n      if (sum === 0) {\n        count++;\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n\n  if (count === 2) {\n    flag = true;\n  }\n\n  return flag;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "    let pairs = [];\n    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n        if (sum === 0) {\n            pairs.push(i);\n            sum = 0;\n        }\n    }\n    return pairs.length === 2;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let k = 0;\n  let count = 0;\n  let sum = 0;\n  let sum_of_two = 0;\n  let sum_of_three = 0;\n  let sum_of_four = 0;\n  let sum_of_five = 0;\n  let sum_of_six = 0;\n  let sum_of_seven = 0;\n  let sum_of_eight = 0;\n  let sum_of_nine = 0;\n  let sum_of_ten = 0;\n  let sum_of_eleven = 0;\n  let sum_of_twelve = 0;\n  let sum_of_thirteen = 0;\n  let sum_of_fourteen = 0;\n  let sum_of_fifteen = 0;\n  let sum_of_sixteen = 0;\n  let sum_of_seventeen = 0;\n  let sum_of_eighteen = 0;\n  let sum_of_nineteen = 0;\n  let sum_of_twenty = 0;\n  let sum_of_twentyone = 0;\n  let sum_of_twentytwo = 0;\n  let sum_of_twentythree = 0;\n  let sum_of_twentyfour = 0;\n  let sum_of_twentyfive = 0;\n  let sum_of_twentysix = 0;\n  let sum_of_twentyseven = 0;\n  let sum_of_twentyeight = 0;\n  let sum_of_twentynine = 0;\n  let sum_of_thirty = 0;\n  let sum_of_thirtyone = 0;\n  let sum_of_thirtytwo = 0;\n  let sum_of_thirtythree = 0;\n  let sum_of_thirtyfour = 0;\n  let sum_of_thirtyfive = 0;\n  let sum_of_thirtysix = 0;\n  let sum_of_thirtyseven = 0;\n  let sum_of_thirtyeight = 0;\n  let sum_of_thirtynine = 0;\n  let sum_of_forty =",
    "    let pairs = [];\n    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n        if (sum === 0) {\n            pairs.push(i);\n            sum = 0;\n        }\n    }\n    return pairs.length === 2;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let pairs = [];\n    while (i < l.length) {\n        sum = l[i];\n        count = 1;\n        while (j < l.length && l[j] === sum) {\n            count++;\n            j++;\n        }\n        if (count === 2) {\n            pairs.push(sum);\n        }\n        i++;\n    }\n    return pairs.length === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    if (sum === 0) {\n        return false;\n    }\n    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < l.length; j++) {\n            if (i != j) {\n                sum += l[i] + l[j];\n            }\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = 0;\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs++;\n            }\n        }\n    }\n    return pairs === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}",
    "    let pairs = [];\n    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n        if (sum === 0) {\n            pairs.push(i);\n            sum = 0;\n        }\n    }\n    return pairs.length === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n\n  while (i < l.length) {\n    sum = l[i];\n    count = 0;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count > 1) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    if (result) {\n      break;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "  let pairs = [];\n  let i;\n  let j;\n  let k;\n  let l_len = l.length;\n  for (i = 0; i < l_len; i++) {\n    for (j = i + 1; j < l_len; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  if (pairs.length === 0) {\n    return false;\n  }\n  for (i = 0; i < pairs.length; i++) {\n    for (j = i + 1; j < pairs.length; j++) {\n      for (k = j + 1; k < pairs.length; k++) {\n        if (pairs[i][0] === pairs[j][0] && pairs[i][1] === pairs[k][1]) {\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = l[i];\n        while (j < l.length) {\n            if (sum === l[j]) {\n                pairs.push([l[i], l[j]]);\n                j++;\n            } else {\n                j++;\n            }\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let count = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = l[i] + l[j];\n        if (sum === 0) {\n            count++;\n        }\n        if (count > 1) {\n            return true;\n        }\n        j++;\n        if (j === l.length) {\n            j = 0;\n            i++;\n        }\n    }\n    return false;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    if (sum === 0) {\n      count++;\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length && l[j] === sum) {\n      j++;\n    }\n    if (j - i > 1) {\n      pairs.push([i, j - 1]);\n    }\n    i = j;\n  }\n  return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let count = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = 0;\n        while (j < l.length) {\n            if (l[i] + l[j] === 0) {\n                count++;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return count === 2;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let count2 = 0;\n    let count3 = 0;\n    let count4 = 0;\n    let count5 = 0;\n    let count6 = 0;\n    let count7 = 0;\n    let count8 = 0;\n    let count9 = 0;\n    let count10 = 0;\n    let count11 = 0;\n    let count12 = 0;\n    let count13 = 0;\n    let count14 = 0;\n    let count15 = 0;\n    let count16 = 0;\n    let count17 = 0;\n    let count18 = 0;\n    let count19 = 0;\n    let count20 = 0;\n    let count21 = 0;\n    let count22 = 0;\n    let count23 = 0;\n    let count24 = 0;\n    let count25 = 0;\n    let count26 = 0;\n    let count27 = 0;\n    let count28 = 0;\n    let count29 = 0;\n    let count30 = 0;\n    let count31 = 0;\n    let count32 = 0;\n    let count33 = 0;\n    let count34 = 0;\n    let count35 = 0;\n    let count36 = 0;\n    let count37 = 0;\n    let count38 = 0;\n    let count39 = 0;\n    let count40 = 0;\n    let count41 = 0;\n    let count42 = 0;\n    let count43 = 0;\n    let count44 = 0;\n    let count45 = 0;\n    let count46 = 0;\n    let count47 = 0;\n    let count48 = 0;\n    let count49 = 0;\n    let count50 = 0;\n    let count51 = 0;\n    let count52 = 0;\n    let count53 = 0;\n    let count54 = 0;\n    let count55 = 0;\n    let count56 = 0;\n    let count57 = 0;\n    let count58 = 0;\n    let count59 = 0;\n    let count60 = 0;\n    let count61 = 0",
    "  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (sum === 0) {\n      count++;\n      sum = l[i];\n    } else {\n      sum += l[i];\n    }\n  }\n  return count === 2;\n}\n",
    "  if (l.length === 0) {\n    return false;\n  }\n\n  let count = 0;\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++;\n      sum += l[i];\n    }\n  }\n\n  return count === 2 && sum === 0;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let sum_2 = 0;\n    let count = 0;\n    let count_2 = 0;\n    let count_3 = 0;\n    let count_4 = 0;\n    let count_5 = 0;\n    let count_6 = 0;\n    let count_7 = 0;\n    let count_8 = 0;\n    let count_9 = 0;\n    let count_10 = 0;\n    let count_11 = 0;\n    let count_12 = 0;\n    let count_13 = 0;\n    let count_14 = 0;\n    let count_15 = 0;\n    let count_16 = 0;\n    let count_17 = 0;\n    let count_18 = 0;\n    let count_19 = 0;\n    let count_20 = 0;\n    let count_21 = 0;\n    let count_22 = 0;\n    let count_23 = 0;\n    let count_24 = 0;\n    let count_25 = 0;\n    let count_26 = 0;\n    let count_27 = 0;\n    let count_28 = 0;\n    let count_29 = 0;\n    let count_30 = 0;\n    let count_31 = 0;\n    let count_32 = 0;\n    let count_33 = 0;\n    let count_34 = 0;\n    let count_35 = 0;\n    let count_36 = 0;\n    let count_37 = 0;\n    let count_38 = 0;\n    let count_39 = 0;\n    let count_40 = 0;\n    let count_41 = 0;\n    let count_42 = 0;\n    let count_43 = 0;\n    let count_44 = 0;\n    let count_45 = 0;\n    let count_46 = 0;\n    let count_47 = 0;\n    let count_48 = 0;\n    let count_49 = 0;\n    let count_50 = 0;\n    let count_51 = 0;\n    let count_52 = 0;\n    let count_53 = 0;\n    ",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = l[i];\n        while (j < l.length && l[j] === sum) {\n            j++;\n        }\n        if (j - i > 1) {\n            pairs.push([i, j]);\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let pairs = [];\n    while (i < l.length) {\n        sum = 0;\n        count = 0;\n        while (j < l.length && l[i] + l[j] === 0) {\n            count++;\n            j++;\n        }\n        if (count > 1) {\n            pairs.push(l[i] + \",\" + l[j]);\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length && l[j] === sum) {\n      count++;\n      j++;\n    }\n    if (count === 2) {\n      pairs.push([l[i], l[j - 1]]);\n    }\n    i++;\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let result = false;\n    while (i < l.length) {\n        sum = l[i];\n        count = 0;\n        while (j < l.length) {\n            if (sum === l[j]) {\n                count++;\n                if (count === 2) {\n                    result = true;\n                    break;\n                }\n            }\n            j++;\n        }\n        i++;\n    }\n    return result;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum += l[i];\n    count++;\n    if (sum === 0) {\n      pairs.push([l[i], l[j]]);\n      j++;\n      while (j < l.length && l[j] === l[j - 1]) {\n        j++;\n      }\n      i++;\n      j++;\n    } else {\n      i++;\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    while (i < l.length) {\n        sum += l[i];\n        if (sum === 0) {\n            count++;\n            if (count > 1) {\n                return true;\n            }\n            sum = 0;\n            j = i + 1;\n        } else {\n            i++;\n        }\n    }\n    return false;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let i = 0, j = 0, sum = 0;\n    while (i < l.length) {\n        if (sum === 0) {\n            if (j < i) {\n                return false;\n            }\n            j = i;\n            sum = l[i];\n            i++;\n        } else {\n            sum += l[i];\n            i++;\n        }\n    }\n    return j !== i - 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++;\n    }\n  }\n  return count === 2;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      } else {\n        j++;\n      }\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    if (sum === 0) {\n        return false;\n    }\n    let count = 0;\n    for (let i = 0; i < l.length; i++) {\n        if (l[i] === 0) {\n            count++;\n        }\n    }\n    return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n            if (sum === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                count++;\n            }\n        }\n    }\n    return count === 2;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length && l[j] === sum) {\n      count++;\n      j++;\n    }\n    if (count === 2) {\n      pairs.push([l[i], l[j]]);\n    }\n    i++;\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n\n  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n\n  while (i < l.length) {\n    sum = l[i] + l[j];\n    if (sum === 0) {\n      pairs.push([l[i], l[j]]);\n      i++;\n      j++;\n    } else if (sum < 0) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n\n  return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let count = 0;\n  let sum = 0;\n  let result = false;\n\n  while (i < l.length && j < l.length) {\n    sum = l[i] + l[j];\n    if (sum === 0) {\n      count++;\n      if (count > 1) {\n        result = true;\n        break;\n      }\n    }\n    if (sum < 0) {\n      j++;\n    } else {\n      i++;\n    }\n  }\n\n  return result;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n\n  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    if (sum === 0) {\n      count++;\n    }\n  }\n  return count === 2;\n}\n",
    "    let count = 0;\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                count++;\n            }\n        }\n    }\n    return count === 2;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let result = false;\n    while (i < l.length) {\n        sum = l[i];\n        count = 0;\n        while (j < l.length) {\n            if (sum === l[j]) {\n                count++;\n                if (count > 1) {\n                    result = true;\n                    break;\n                }\n            }\n            j++;\n        }\n        i++;\n    }\n    return result;\n}",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length && l[j] === sum) {\n      j++;\n    }\n    if (j - i === 2) {\n      count++;\n    }\n    i = j;\n  }\n  if (count === 2) {\n    result = true;\n  }\n  return result;\n}\n",
    "  let pairs = 0;\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs++;\n      }\n    }\n  }\n  return pairs === 2;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum += l[i];\n    count++;\n    if (sum === 0) {\n      j = i;\n      while (j < l.length && l[j] === l[j + 1]) {\n        j++;\n      }\n      if (j === l.length) {\n        result = true;\n        break;\n      }\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return (sum === 0 && l.length > 2);\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let result = false;\n    while (i < l.length) {\n        sum = l[i];\n        count = 1;\n        while (j < l.length && l[j] === sum) {\n            count++;\n            j++;\n        }\n        if (count === 2) {\n            result = true;\n            break;\n        }\n        i++;\n    }\n    return result;\n}",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let count = 0;\n    let flag = false;\n    while (i < l.length) {\n        sum = 0;\n        count = 0;\n        while (j < l.length) {\n            sum += l[i];\n            count++;\n            j++;\n        }\n        if (count > 1) {\n            pairs.push([l[i], sum]);\n        }\n        i++;\n    }\n    for (let k = 0; k < pairs.length; k++) {\n        if (pairs[k][1] === 0) {\n            flag = true;\n            break;\n        }\n    }\n    return flag;\n}",
    "    let count = 0;\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    let result = false;\n    while (i < l.length) {\n        sum = l[i];\n        j = i + 1;\n        while (j < l.length && sum + l[j] === 0) {\n            count++;\n            j++;\n        }\n        i = j;\n    }\n    if (count === 2) {\n        result = true;\n    }\n    return result;\n}",
    "  let i = 0\n  let j = 0\n  let sum = 0\n  let count = 0\n  let result = false\n\n  while (i < l.length) {\n    sum = l[i] + l[j]\n    if (sum === 0) {\n      count++\n    }\n    if (count === 2) {\n      result = true\n      break\n    }\n    j++\n    if (j === l.length) {\n      j = 0\n      i++\n    }\n  }\n  return result\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum += l[i];\n    count++;\n    if (sum === 0) {\n      j = i;\n      while (j < l.length) {\n        if (l[j] !== l[j + 1]) {\n          return true;\n        }\n        j++;\n      }\n    }\n    i++;\n  }\n  return false;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  while (i < l.length) {\n    if (sum === 0) {\n      pairs.push([l[i], l[j]]);\n      i++;\n      j++;\n      sum = l[i] + l[j];\n    } else if (sum < 0) {\n      sum = l[i] + l[j];\n      i++;\n    } else {\n      sum = l[i] + l[j];\n      j++;\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let i = 0\n  let j = 0\n  let sum = 0\n  let count = 0\n\n  while (i < l.length) {\n    sum = l[i] + l[j]\n    if (sum === 0) {\n      count++\n      if (count === 2) {\n        return true\n      }\n    } else if (sum < 0) {\n      j++\n    } else {\n      i++\n    }\n  }\n  return false\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    if (sum === 0) {\n        return false;\n    }\n    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n            if (sum === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length && l[j] === sum) {\n      j++;\n      count++;\n    }\n    if (count === 2) {\n      pairs.push([l[i], l[j - 1]]);\n    }\n    i++;\n  }\n  return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let k = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    j = i + 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        j++;\n      } else {\n        break;\n      }\n    }\n    if (count === 2) {\n      result = true;\n      break;\n    }\n    i = j;\n  }\n  return result;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    count = 1;\n    while (j < l.length && l[j] === sum) {\n      j++;\n      count++;\n    }\n    if (count === 2) {\n      return true;\n    }\n    i++;\n  }\n  return false;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = l[i];\n        while (j < l.length && l[j] === sum) {\n            j++;\n        }\n        if (j - i > 1) {\n            pairs.push([i, j]);\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}\n",
    "  let count = 0\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        count++\n        if (count > 1) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let sum = 0;\n    let i = 0;\n    let j = 0;\n    let count = 0;\n    let result = false;\n    while (i < l.length) {\n        sum += l[i];\n        i++;\n        if (sum === 0) {\n            count++;\n            if (count === 2) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n}",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n\n  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    count++;\n  }\n\n  if (sum === 0) {\n    return false;\n  }\n\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      continue;\n    }\n\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[j] === 0) {\n        continue;\n      }\n\n      if (l[i] + l[j] === sum) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < l.length; j++) {\n            if (i != j) {\n                sum += l[i] + l[j];\n            }\n        }\n        if (sum === 0) {\n            pairs.push([l[i], l[j]]);\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n\n  let count = 0;\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++;\n      sum = 0;\n    } else {\n      sum += l[i];\n    }\n  }\n\n  return count === 2 && sum === 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let i = 0;\n    let j = 0;\n    let count = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = 0;\n        while (j < l.length) {\n            sum += l[i];\n            sum += l[j];\n            if (sum === 0) {\n                count++;\n                break;\n            }\n            j++;\n        }\n        i++;\n    }\n    return count === 2;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0 && l.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let sum = 0;\n        for (let j = 0; j < l.length; j++) {\n            if (i != j) {\n                sum += l[i] + l[j];\n            }\n        }\n        if (sum === 0) {\n            pairs.push(i);\n            pairs.push(j);\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        count++;\n      }\n    }\n  }\n  return count === 2;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    count = 0;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n  let sum = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n  }\n  return sum === 0;\n}\n",
    "  let pairs = [];\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        pairs.push([l[i], l[j]]);\n      }\n    }\n  }\n  return pairs.length > 0;\n}\n",
    "  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    sum += l[i];\n    if (sum === 0) {\n      count++;\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    if (l[i] === 0) {\n      count++;\n      if (count > 1) {\n        return false;\n      }\n      sum = 0;\n      j = i + 1;\n      while (j < l.length && l[j] !== 0) {\n        sum += l[j];\n        j++;\n      }\n      i = j - 1;\n    }\n    i++;\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length === 0) {\n    return false;\n  }\n  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    for (let j = i + 1; j < l.length; j++) {\n      if (l[i] + l[j] === 0) {\n        count++;\n      }\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  let result = false;\n  while (i < l.length) {\n    sum = l[i];\n    count = 0;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          result = true;\n          break;\n        }\n      }\n      j++;\n    }\n    if (result) {\n      break;\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = l[i];\n        while (j < l.length && l[j] === sum) {\n            j++;\n        }\n        if (j - i > 1) {\n            pairs.push([i, j]);\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    count = 0;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          pairs.push([i, j]);\n        }\n      }\n      j++;\n    }\n    i++;\n  }\n  return (pairs.length > 0);\n}\n",
    "  let i = 0;\n  let j = 0;\n  let sum = 0;\n  let count = 0;\n  while (i < l.length) {\n    sum = l[i];\n    j = i + 1;\n    while (j < l.length) {\n      if (sum === l[j]) {\n        count++;\n        if (count === 2) {\n          return true;\n        }\n      } else {\n        count = 0;\n      }\n      j++;\n    }\n    i++;\n  }\n  return false;\n}\n",
    "    let sum = 0;\n    for (let i = 0; i < l.length; i++) {\n        sum += l[i];\n    }\n    return sum === 0;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  if (l.length < 2) {\n    return false;\n  }\n\n  let sum = 0;\n  let i = 0;\n  let j = 0;\n\n  while (i < l.length) {\n    sum += l[i];\n    i++;\n  }\n\n  while (j < l.length) {\n    if (sum === 0) {\n      return false;\n    }\n\n    sum -= l[j];\n    j++;\n  }\n\n  return true;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        let j = i + 1;\n        while (j < l.length && l[i] + l[j] === 0) {\n            pairs.push([l[i], l[j]]);\n            j++;\n        }\n    }\n    return pairs.length > 1;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n",
    "  let pairs = [];\n  let i;\n  let j;\n  let k;\n  let l_len = l.length;\n  let sum;\n  let sum_count = 0;\n  let sum_count_2 = 0;\n  let sum_2;\n  let sum_2_count = 0;\n  let sum_2_count_2 = 0;\n  let sum_2_2;\n  let sum_2_2_count = 0;\n  let sum_2_2_count_2 = 0;\n  let sum_2_2_2;\n  let sum_2_2_2_count = 0;\n  let sum_2_2_2_count_2 = 0;\n  let sum_2_2_2_2;\n  let sum_2_2_2_2_count = 0;\n  let sum_2_2_2_2_count_2 = 0;\n  let sum_2_2_2_2_2;\n  let sum_2_2_2_2_2_count = 0;\n  let sum_2_2_2_2_2_count_2 = 0;\n  let sum_2_2_2_2_2_2;\n  let sum_2_2_2_2_2_2_count = 0;\n  let sum_2_2_2_2_2_2_count_2 = 0;\n  let sum_2_2_2_2_2_2_2;\n  let sum_2_2_2_2_2_2_2_count = 0;\n  let sum_2_2_2_2_2_2_2_count_2 = 0;\n  let sum_2_2_2_2_2_2_2_2;\n  let sum_2_2_2_2_2_2_2_2_count = 0;\n  let sum_2_2_2_2_2_2_2_2_count_2 = 0;\n  let sum_2_2_2_2_2_2_2_2_2;\n  let sum_2_2_2_2_2_2_",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}",
    "  let i = 0;\n  let j = 0;\n  let count = 0;\n  let sum = 0;\n  let result = false;\n  while (i < l.length) {\n    sum += l[i];\n    if (sum === 0) {\n      count++;\n      if (count === 2) {\n        result = true;\n        break;\n      }\n    }\n    i++;\n  }\n  return result;\n}\n",
    "    let pairs = [];\n    let i = 0;\n    let j = 0;\n    let sum = 0;\n    while (i < l.length) {\n        sum = 0;\n        for (j = i + 1; j < l.length; j++) {\n            sum += l[i] + l[j];\n            if (sum === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n        i++;\n    }\n    return pairs.length > 0;\n}\n",
    "  let count = 0;\n  for (let i = 0; i < l.length; i++) {\n    if (l[i] === 0) {\n      count++;\n      if (count > 1) {\n        return false;\n      }\n    }\n  }\n  return count === 2;\n}\n",
    "    let pairs = [];\n    for (let i = 0; i < l.length; i++) {\n        for (let j = i + 1; j < l.length; j++) {\n            if (l[i] + l[j] === 0) {\n                pairs.push([l[i], l[j]]);\n            }\n        }\n    }\n    return pairs.length > 0;\n}\n"
  ],
  "stop_tokens": [
    "\nfunction ",
    "\n/*",
    "\n//",
    "\nclass"
  ]
}
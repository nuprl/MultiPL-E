name: HumanEval_67_fruit_distribution
language: ts
prompt: "//In this task, you will be given a string that represents a number of apples\
  \ and oranges \n// that are distributed in a basket of fruit this basket contains\
  \ \n// apples, oranges, and mango fruits. Given the string that represents the total\
  \ number of \n// the oranges and apples and an integer that represent the total\
  \ number of the fruits \n// in the basket return the number of the mango fruits\
  \ in the basket.\n// for examble:\n// >>> fruit_distribution(\"5 apples and 6 oranges\"\
  , 19)\n// 8\n// >>> fruit_distribution(\"0 apples and 1 oranges\", 3)\n// 2\n//\
  \ >>> fruit_distribution(\"2 apples and 3 oranges\", 100)\n// 95\n// >>> fruit_distribution(\"\
  100 apples and 1 oranges\", 120)\n// 19\nfunction fruit_distribution(s: string,\
  \ n: number): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = fruit_distribution;\n  assert.deepEqual(candidate(\"\
  5 apples and 6 oranges\", 19),8);\n  assert.deepEqual(candidate(\"5 apples and 6\
  \ oranges\", 21),10);\n  assert.deepEqual(candidate(\"0 apples and 1 oranges\",\
  \ 3),2);\n  assert.deepEqual(candidate(\"1 apples and 0 oranges\", 3),2);\n  assert.deepEqual(candidate(\"\
  2 apples and 3 oranges\", 100),95);\n  assert.deepEqual(candidate(\"2 apples and\
  \ 3 oranges\", 5),0);\n  assert.deepEqual(candidate(\"1 apples and 100 oranges\"\
  , 120),19);\n}\n\ntest();"
completions: ["    let apples = 0, oranges = 0, mango = 0;\n    let arr = s.split(\"\
    \ \");\n    let total = arr.length;\n    let num = parseInt(arr[0]);\n    let\
    \ num_of_apples = parseInt(arr[1]);\n    let num_of_oranges = parseInt(arr[2]);\n\
    \    let num_of_mango = parseInt(arr[3]);\n    let num_of_apples_in_basket = num_of_apples\
    \ + num_of_oranges + num_of_mango;\n    let num_of_oranges_in_basket = num_of_oranges\
    \ + num_of_mango;\n    let num_of_mango_in_basket = num_of_mango;\n    let num_of_apples_in_basket_per_mango\
    \ = num_of_apples_in_basket / num_of_mango;\n    let num_of_oranges_in_basket_per_mango\
    \ = num_of_oranges_in_basket / num_of_mango;\n    let num_of_mango_in_basket_per_orange\
    \ = num_of_mango_in_basket / num_of_oranges;\n    let num_of_mango_in_basket_per_apples\
    \ = num_of_mango_in_basket / num_of_apples;\n    let num_of_mango_in_basket_per_mango\
    \ = num_of_mango_in_basket / num_of_mango;\n    let num_of_mango_in_basket_per_apples_per_orange\
    \ = num_of_mango_in_basket_per_apples / num_of_oranges;\n    let num_of_mango_in_basket_per_apples_per_mango\
    \ = num_of_mango_in_basket_per_apples / num_of_mango;\n    let num_of_mango_in_basket_per_oranges_per_mango\
    \ = num_of_mango_in_basket_", "    let apples = 0, oranges = 0, mango = 0;\n \
    \   for (let i = 0; i < s.length; i++) {\n        if (s[i] === 'a') {\n      \
    \      apples++;\n        } else if (s[i] === 'o') {\n            oranges++;\n\
    \        } else if (s[i] === 'm') {\n            mango++;\n        }\n    }\n\
    \    let total = apples + oranges + mango;\n    if (total === 0) {\n        return\
    \ 0;\n    }\n    let ratio = mango / total;\n    let result = Math.floor(n * ratio);\n\
    \    return result;\n}\n", "    let apples = 0, oranges = 0, mango = 0;\n    let\
    \ str = s.split(\" \");\n    let num = parseInt(str[0]);\n    let num_of_apples\
    \ = parseInt(str[1]);\n    let num_of_oranges = parseInt(str[2]);\n    let num_of_mango\
    \ = parseInt(str[3]);\n    let total_apples = num_of_apples + apples;\n    let\
    \ total_oranges = num_of_oranges + oranges;\n    let total_mango = num_of_mango\
    \ + mango;\n    let total_fruits = total_apples + total_oranges + total_mango;\n\
    \    if (total_fruits < n) {\n        return 0;\n    }\n    if (total_fruits ==\
    \ n) {\n        if (total_apples >= n) {\n            return total_apples;\n \
    \       }\n        if (total_oranges >= n) {\n            return total_oranges;\n\
    \        }\n        if (total_mango >= n) {\n            return total_mango;\n\
    \        }\n    }\n    if (total_fruits > n) {\n        if (total_apples >= n)\
    \ {\n            return total_apples;\n        }\n        if (total_oranges >=\
    \ n) {\n            return total_oranges;\n        }\n        if (total_mango\
    \ >= n) {\n            return total_mango;\n        }\n    }\n}\n", "    let apples\
    \ = 0, oranges = 0, mango = 0;\n    for (let i = 0; i < s.length; i++) {\n   \
    \     if (s[i] === 'a') {\n            apples++;\n        } else if (s[i] ===\
    \ 'o') {\n            oranges++;\n        } else if (s[i] === 'm') {\n       \
    \     mango++;\n        }\n    }\n    return mango / (apples + oranges);\n}\n",
  "    let apples = 0, oranges = 0, mango = 0;\n    let s_arr = s.split(\" \");\n\
    \    let n_arr = n.toString().split(\"\");\n    let i = 0;\n    let j = 0;\n \
    \   let k = 0;\n    while (i < s_arr.length) {\n        if (s_arr[i] === \"apple\"\
    ) {\n            apples += parseInt(n_arr[j]);\n            j++;\n        } else\
    \ if (s_arr[i] === \"orange\") {\n            oranges += parseInt(n_arr[j]);\n\
    \            j++;\n        } else if (s_arr[i] === \"mango\") {\n            mango\
    \ += parseInt(n_arr[j]);\n            j++;\n        }\n        i++;\n    }\n \
    \   return mango;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_6_parse_nested_parens
language: ts
prompt: "//Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\n// >>> parse_nested_parens(\"(()()) ((())) () ((())()())\"\
  )\n// [2, 3, 1, 3]\nfunction parse_nested_parens(paren_string: string): number[]\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = parse_nested_parens;\n  assert.deepEqual(candidate(\"\
  (()()) ((())) () ((())()())\"),[2, 3, 1, 3]);\n  assert.deepEqual(candidate(\"()\
  \ (()) ((())) (((())))\"),[1, 2, 3, 4]);\n  assert.deepEqual(candidate(\"(()(())((())))\"\
  ),[4]);\n}\n\ntest();"
completions: ["    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_length = 0;\n    let paren_count_stack_max = 0;\n \
    \   let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_length = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_length = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_length", "    let\
    \ paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n    let\
    \ max_level_index = 0;\n    let current_index = 0;\n    let next_index = 0;\n\
    \    let next_char = '';\n    let current_char = '';\n    let paren_count = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n    let\
    \ paren_count_stack_top_char = '';\n    let paren_count_stack_top_char_index =\
    \ 0;\n    let paren_count_stack_top_char_count = 0;\n    let paren_count_stack_top_char_count_index\
    \ = 0;\n    let paren_count_stack_top_char_count_count = 0;\n    let paren_count_stack_top_char_count_count_index\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count = 0;\n    let paren_count_stack_top_char_count_count_count_index\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count = 0;\n    let\
    \ paren_count_stack_top_char_count_count_count_count_index = 0;\n    let paren_count_stack_top_char_count_count_count_count_count\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count_count_index\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count_count_count\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count_count_count_index\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count_count_count_count\
    \ = 0;\n    let paren_count_stack_top_char_count_count_count_count_", "    let\
    \ paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let\
    \ paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_top\
    \ = 0;\n    let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_top\
    \ = 0;\n    let paren_count_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_index = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top", "    let paren_stack: number[] = [];\n  \
    \  let paren_count: number = 0;\n    let paren_count_stack: number[] = [];\n \
    \   let paren_count_stack_index: number = 0;\n    let paren_count_stack_max: number\
    \ = 0;\n    let paren_count_stack_max_index: number = 0;\n    let paren_count_stack_max_max:\
    \ number = 0;\n    let paren_count_stack_max_max_index: number = 0;\n    let paren_count_stack_max_max_max:\
    \ number = 0;\n    let paren_count_stack_max_max_max_index: number = 0;\n    let\
    \ paren_count_stack_max_max_max_max: number = 0;\n    let paren_count_stack_max_max_max_max_index:\
    \ number = 0;\n    let paren_count_stack_max_max_max_max_max: number = 0;\n  \
    \  let paren_count_stack_max_max_max_max_max_index: number = 0;\n    let paren_count_stack_max_max_max_max_max_max:\
    \ number = 0;\n    let paren_count_stack_max_max_max_max_max_max_index: number\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max: number = 0;\n \
    \   let paren_count_stack_max_max_max_max_max_max_max_index: number = 0;\n   \
    \ let paren_count_stack_max_max_max_max_max_max_max_max: number = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index: number = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_max: number = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_max_index: number = 0;\n \
    \   let paren_count_stack", "  let paren_stack = [];\n  let max_nesting = 0;\n\
    \  let current_nesting = 0;\n  let current_index = 0;\n  let current_char = paren_string[current_index];\n\
    \  while (current_index < paren_string.length) {\n    if (current_char === '(')\
    \ {\n      paren_stack.push(current_index);\n      current_nesting++;\n    } else\
    \ if (current_char === ')') {\n      if (paren_stack.length > 0) {\n        current_index\
    \ = paren_stack.pop();\n        current_nesting--;\n      } else {\n        throw\
    \ new Error(\"Invalid input\");\n      }\n    }\n    current_index++;\n    current_char\
    \ = paren_string[current_index];\n    if (current_nesting > max_nesting) {\n \
    \     max_nesting = current_nesting;\n    }\n  }\n  return max_nesting;\n}\n",
  "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting =\
    \ 0;\n    let current_paren = 0;\n    let current_paren_string = \"\";\n    let\
    \ current_paren_string_length = 0;\n    let current_paren_string_index = 0;\n\
    \    let current_paren_string_index_end = 0;\n    let current_paren_string_index_start\
    \ = 0;\n    let current_paren_string_length_end = 0;\n    let current_paren_string_length_start\
    \ = 0;\n    let current_paren_string_length_start_end = 0;\n    let current_paren_string_length_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_end = 0;\n    let current_paren_string_length_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_end = 0;\n    let\
    \ current_paren_string_length_start_start_start_start = 0;\n    let current_paren_string_length_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start = 0;\n\
    \    let current_paren_string_length_start_start_start_start_start_end = 0;\n\
    \    let current_paren_string_length_start_start_start_start_start_start = 0;\n\
    \    let current_paren_string_length_start_start_start_start_start_start_end =\
    \ 0;\n    let current_paren_string_length_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_index_stack = [];\n    let paren_count_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max = 0;\n    let paren_count_stack_max_index_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack = [];\n    let\
    \ paren_count_stack_max_index_stack_max_index_stack_index = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index =\
    \ 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack\
    \ = [];\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack\
    \ = [];\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n\
    \    let paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "  let paren_stack =\
    \ [];\n  let paren_count = 0;\n  let paren_level = 0;\n  let paren_count_in_level\
    \ = 0;\n  let paren_level_in_stack = 0;\n  let paren_count_in_paren_level = 0;\n\
    \  let paren_level_in_paren_stack = 0;\n  let paren_count_in_paren_level = 0;\n\
    \  let paren_level_in_paren_count = 0;\n  let paren_count_in_paren_level = 0;\n\
    \  let paren_level_in_paren_count = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;\n  let paren_count_in_paren_level_in_stack\
    \ = 0;\n  let paren_level_in_paren_count_in_stack = 0;", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_index\
    \ = 0;\n    let paren_string_length = paren_string.length;\n    let paren_string_index\
    \ = 0;\n    let paren_string_char = '';\n    let paren_string_char_index = 0;\n\
    \    let paren_string_char_count = 0;\n    let paren_string_char_count_max = 0;\n\
    \    let paren_string_char_count_min = 0;\n    let paren_string_char_count_sum\
    \ = 0;\n    let paren_string_char_count_avg = 0;\n    let paren_string_char_count_stddev\
    \ = 0;\n    let paren_string_char_count_stddev_avg = 0;\n    let paren_string_char_count_stddev_stddev\
    \ = 0;\n    let paren_string_char_count_stddev_stddev_avg = 0;\n    let paren_string_char_count_stddev_stddev_stddev\
    \ = 0;\n    let paren_string_char_count_stddev_stddev_stddev_avg = 0;\n    let\
    \ paren_string_char_count_stddev_stddev_stddev_stddev = 0;\n    let paren_string_char_count_stddev_stddev_stddev_stddev_avg\
    \ = 0;\n    let paren_string_char_count_stddev_stddev_stddev_stddev_stddev = 0;\n\
    \    let paren_string_char_count_stddev_stddev_stddev_stddev_stddev_avg = 0;\n\
    \    let paren_string_char_count_stddev_stddev_stddev_stddev_stddev_stddev = 0;\n\
    \    let paren_string_char_count_stddev_stddev_stddev_stddev", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let max_nesting\
    \ = 0;\n    let current_level = 0;\n    let current_paren = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_count_max = 0;\n    let current_paren_count_min\
    \ = 0;\n    let current_paren_count_max_min = 0;\n    let current_paren_count_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min = 0;\n    let current_paren_count_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min = 0;\n    let current_paren_count_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min = 0;\n   \
    \ let current_paren_count_max_min_max_min_max_min_max_min_max = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_max_min_max_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current", "    let paren_stack: number[] = [];\n    let paren_count:\
    \ number = 0;\n    let paren_count_stack: number[] = [];\n    let paren_count_stack_index:\
    \ number = 0;\n    let paren_count_stack_top: number = 0;\n    let paren_count_stack_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top: number = 0;\n    let paren_count_stack_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top: number = 0;\n    let paren_count_stack_top_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_index: number = 0;\n    let paren_count_stack_top_top_top_top_top:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top_top_index: number = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top: number = 0;\n    let paren_count_stack_top_top_top_top_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top_top_top_top: number =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index: number = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_top_index: number = 0;\n \
    \   let paren_count_stack", "    let result: number[] = [];\n    let stack: number[]\
    \ = [];\n    let paren_count: number = 0;\n    let paren_level: number = 0;\n\
    \    let paren_stack: number[] = [];\n    let paren_stack_count: number = 0;\n\
    \    let paren_stack_level: number = 0;\n    let paren_stack_count_stack: number[]\
    \ = [];\n    let paren_stack_level_stack: number[] = [];\n    let paren_stack_count_stack_level:\
    \ number[] = [];\n    let paren_stack_level_stack_count: number[] = [];\n    let\
    \ paren_stack_count_stack_level_stack: number[] = [];\n    let paren_stack_level_stack_count_stack:\
    \ number[] = [];\n    let paren_stack_count_stack_level_stack_count: number[]\
    \ = [];\n    let paren_stack_level_stack_count_stack_count: number[] = [];\n \
    \   let paren_stack_count_stack_level_stack_count_stack: number[] = [];\n    let\
    \ paren_stack_level_stack_count_stack_count_stack: number[] = [];\n    let paren_stack_count_stack_level_stack_count_stack_count:\
    \ number[] = [];\n    let paren_stack_level_stack_count_stack_count_stack_count:\
    \ number[] = [];\n    let paren_stack_count_stack_level_stack_count_stack_count_stack:\
    \ number[] = [];\n    let paren_stack_level_stack_count_stack_count_stack_count_stack_count:\
    \ number[] = [];\n    let paren_stack_count_stack_level_stack_count_stack_count_stack_count_stack:\
    \ number[] = [];\n    let paren_stack_level_stack_count_stack_count_stack_count_stack_count_stack_count:\
    \ number[] = [];\n    let paren_stack_count_stack_level_stack_count_stack_count_stack_count_stack_count_stack:\
    \ number[] = [];\n    let paren_stack_level_stack_count_stack_count_stack", " \
    \   let paren_stack = [];\n    let paren_count = 0;\n    let max_nesting = 0;\n\
    \    let current_level = 0;\n    let current_paren = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_string_count\
    \ = 0;\n    let current_paren_string_index = 0;\n    let current_paren_string_length\
    \ = 0;\n    let current_paren_string_length_count = 0;\n    let current_paren_string_length_index\
    \ = 0;\n    let current_paren_string_length_length = 0;\n    let current_paren_string_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_index = 0;\n    let current_paren_string_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_count = 0;\n    let\
    \ current_paren_string_length_length_length_index = 0;\n    let current_paren_string_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_count = 0;\n\
    \    let current_paren_string_length_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length_length = 0;\n    let current_paren_string_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_length", "  \
    \  let result = [];\n    let stack = [];\n    let max_depth = 0;\n    let current_depth\
    \ = 0;\n    let current_char = \"\";\n    let current_char_index = 0;\n    let\
    \ paren_count = 0;\n    let paren_count_index = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_length\
    \ = 0;\n    let paren_count_stack_length_index = 0;\n    let paren_count_stack_length_length\
    \ = 0;\n    let paren_count_stack_length_length_index = 0;\n    let paren_count_stack_length_length_length\
    \ = 0;\n    let paren_count_stack_length_length_length_index = 0;\n    let paren_count_stack_length_length_length_length\
    \ = 0;\n    let paren_count_stack_length_length_length_length_index = 0;\n   \
    \ let paren_count_stack_length_length_length_length_length = 0;\n    let paren_count_stack_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length =\
    \ 0;\n    let paren_count_stack_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    ", "    let paren_stack = [];\n    let paren_count = 0;\n    let max_nesting\
    \ = 0;\n    for (let i = 0; i < paren_string.length; i++) {\n        if (paren_string[i]\
    \ === '(') {\n            paren_stack.push(paren_count);\n            paren_count++;\n\
    \        } else if (paren_string[i] === ')') {\n            paren_count--;\n \
    \           if (paren_count < 0) {\n                throw new Error(\"Invalid\
    \ parentheses string\");\n            }\n            if (paren_stack.length >\
    \ 0 && paren_stack.pop() !== paren_count) {\n                throw new Error(\"\
    Invalid parentheses string\");\n            }\n        }\n        if (paren_count\
    \ > max_nesting) {\n            max_nesting = paren_count;\n        }\n    }\n\
    \    if (paren_stack.length > 0) {\n        throw new Error(\"Invalid parentheses\
    \ string\");\n    }\n    return max_nesting;\n}\n", "    let paren_stack = [];\n\
    \    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n\
    \    let paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index\
    \ = 0;\n    let paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_length = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_min = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_min_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_min_length = 0;\n    let paren_count_stack_max_length_index\
    \ = 0;\n    let paren_count_stack_min_length_index = 0;\n    let paren_count_stack_max_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length = 0;\n    let paren_count_stack_max_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_index = 0;\n    let paren_count_stack_max_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length = 0;\n    let paren_count_stack_max_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_index = 0;\n    let\
    \ paren_count_stack_max_length_length_length_length = 0;\n    let paren_count_stack_min_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_index = 0;\n\
    \    let paren_count_stack_min_length_length_length_length_index = 0;\n    let\
    \ paren_count_stack_max_length_length_length_length_length = 0;\n    let paren_count_stack_min_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_top =\
    \ 0;\n    let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_value\
    \ = 0;\n    let paren_count_stack_top_value_index = 0;\n    let paren_count_stack_top_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_index = 0;\n    let paren_count_stack_top_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_index = 0;\n    let paren_count_stack_top_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_index = 0;\n   \
    \ let paren_count_stack_top_value_value_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_top_value_value_value_value_value_value_index = 0;\n\
    \    let paren_count_stack_top_value_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_top_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value", "    let result = [];\n    let stack\
    \ = [];\n    let paren_count = 0;\n    let paren_index = 0;\n    let paren_char\
    \ = \"\";\n    let paren_char_count = 0;\n    let paren_char_index = 0;\n    let\
    \ paren_char_count_stack = [];\n    let paren_char_index_stack = [];\n    let\
    \ paren_char_stack = [];\n    let paren_char_stack_index = 0;\n    let paren_char_stack_count\
    \ = 0;\n    let paren_char_stack_count_stack = [];\n    let paren_char_stack_index_stack\
    \ = [];\n    let paren_char_stack_count_stack_index = 0;\n    let paren_char_stack_count_stack_index_stack\
    \ = [];\n    let paren_char_stack_index_stack_index = 0;\n    let paren_char_stack_index_stack_index_stack\
    \ = [];\n    let paren_char_stack_index_stack_index_stack_index = 0;\n    let\
    \ paren_char_stack_index_stack_index_stack_index_stack = [];\n    let paren_char_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack\
    \ = [];\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack\
    \ = [];\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack", "    let paren_stack\
    \ = [];\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_index\
    \ = 0;\n    let current_char = paren_string[current_index];\n    while (current_index\
    \ < paren_string.length) {\n        if (current_char === \"(\") {\n          \
    \  paren_stack.push(current_index);\n            current_nesting++;\n        }\
    \ else if (current_char === \")\") {\n            if (current_nesting === 0) {\n\
    \                throw new Error(\"Invalid input\");\n            }\n        \
    \    current_nesting--;\n            if (current_nesting === 0) {\n          \
    \      current_index = paren_stack.pop();\n                max_nesting = Math.max(max_nesting,\
    \ current_nesting);\n            }\n        }\n        current_index++;\n    \
    \    current_char = paren_string[current_index];\n    }\n    return max_nesting;\n\
    }\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_size = 0;\n    let paren_count_stack_max = 0;\n   \
    \ let paren_count_stack_min = 0;\n    let paren_count_stack_max_index = 0;\n \
    \   let paren_count_stack_min_index = 0;\n    let paren_count_stack_size_max =\
    \ 0;\n    let paren_count_stack_size_min = 0;\n    let paren_count_stack_size_max_index\
    \ = 0;\n    let paren_count_stack_size_min_index = 0;\n    let paren_count_stack_size_max_index_min\
    \ = 0;\n    let paren_count_stack_size_min_index_max = 0;\n    let paren_count_stack_size_max_index_min_max\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min = 0;\n    let paren_count_stack_size_max_index_min_max_min\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min_max = 0;\n    let paren_count_stack_size_max_index_min_max_min_max\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min_max_min_max = 0;\n  \
    \  let paren_count_stack_size_max_index_min_max_min_max_min_max = 0;\n    let\
    \ paren_count_stack_size_min_index_max_min_max_min_max_min_max = 0;\n    let paren_count_stack_size_max_index_min_max_min_max_min_max_min_max\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min_max_min_max_min_max_min_max\
    \ = 0", "    let paren_stack = [];\n    let current_level = 0;\n    let max_level\
    \ = 0;\n    let current_paren_count = 0;\n    let paren_count = 0;\n    let paren_index\
    \ = 0;\n    let paren_count_in_string = 0;\n    let paren_count_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack = 0;\n    let paren_count_in_paren_stack_in_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_string = 0;\n    let paren_count_in_paren_stack_in_paren_stack\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_string = 0;\n   \
    \ let paren_count_in_paren_stack_in_paren_stack_in_paren_string = 0;\n    let\
    \ paren_count_in_paren_stack_in_paren_stack_in_paren_stack = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in_paren_string\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren_stack_in",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let max_nesting = 0;\n    let max_nesting_stack = [];\n    let current_nesting\
    \ = 0;\n    let current_nesting_stack = [];\n    let current_paren_count = 0;\n\
    \    let current_paren_count_stack = [];\n    let current_paren_count_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack = [];\n    let current_paren_count_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack = [];\n    let\
    \ current_paren_count_stack_index_stack_index_stack_index = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack\
    \ = [];\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack\
    \ = [];\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let current_paren_count_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ =", "    let result = [];\n    let stack = [];\n    let parens = 0;\n    let\
    \ i = 0;\n    let j = 0;\n    let k = 0;\n    let level = 0;\n    while (i < paren_string.length)\
    \ {\n        if (paren_string[i] === '(') {\n            stack.push(i);\n    \
    \        parens++;\n        } else if (paren_string[i] === ')') {\n          \
    \  if (stack.length === 0) {\n                throw new Error(\"Invalid parentheses\"\
    );\n            }\n            stack.pop();\n            parens--;\n        }\n\
    \        i++;\n    }\n    if (stack.length > 0) {\n        throw new Error(\"\
    Invalid parentheses\");\n    }\n    for (i = 0; i < paren_string.length; i++)\
    \ {\n        if (paren_string[i] === '(') {\n            level++;\n        } else\
    \ if (paren_string[i] === ')') {\n            level--;\n        }\n        if\
    \ (level === 0) {\n            result.push(i);\n        }\n    }\n    return result;\n\
    }\n", "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting\
    \ = 0;\n    let current_level = 0;\n    let current_paren = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_count = 0;\n    let current_paren_count_string\
    \ = \"\";\n    let current_paren_count_string_length = 0;\n    let current_paren_count_string_index\
    \ = 0;\n    let current_paren_count_string_index_end = 0;\n    let current_paren_count_string_index_start\
    \ = 0;\n    let current_paren_count_string_index_start_end = 0;\n    let current_paren_count_string_index_start_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end = 0;\n    let\
    \ current_paren_count_string_index_start_end_end_end_end = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result: number[] = [];\n    let\
    \ stack: number[] = [];\n    let paren_count: number = 0;\n    let paren_index:\
    \ number = 0;\n    let paren_depth: number = 0;\n    let paren_depth_count: number\
    \ = 0;\n    let paren_depth_index: number = 0;\n    let paren_depth_depth: number\
    \ = 0;\n    let paren_depth_depth_count: number = 0;\n    let paren_depth_depth_index:\
    \ number = 0;\n    let paren_depth_depth_depth: number = 0;\n    let paren_depth_depth_depth_count:\
    \ number = 0;\n    let paren_depth_depth_depth_index: number = 0;\n    let paren_depth_depth_depth_depth:\
    \ number = 0;\n    let paren_depth_depth_depth_depth_count: number = 0;\n    let\
    \ paren_depth_depth_depth_depth_index: number = 0;\n    let paren_depth_depth_depth_depth_depth:\
    \ number = 0;\n    let paren_depth_depth_depth_depth_depth_count: number = 0;\n\
    \    let paren_depth_depth_depth_depth_depth_index: number = 0;\n    let paren_depth_depth_depth_depth_depth_depth:\
    \ number = 0;\n    let paren_depth_depth_depth_depth_depth_depth_count: number\
    \ = 0;\n    let paren_depth_depth_depth_depth_depth_depth_index: number = 0;\n\
    \    let paren_depth_depth_depth_depth_depth_depth_depth: number = 0;\n    let\
    \ paren_depth_depth_depth_depth_depth_depth_depth_count: number = 0;\n    let\
    \ paren_depth_depth_depth_depth_depth_depth_depth_index: number = 0;\n    let\
    \ paren_depth_depth_depth_depth_depth_depth_depth_depth: number = 0;\n    let\
    \ paren_depth_depth_depth_depth_depth_depth_depth_depth_count: number = 0;\n \
    \   let paren_depth_depth_depth", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_stack = [];\n\
    \    let current_paren_stack_count = 0;\n    let current_paren_stack_string =\
    \ \"\";\n    let current_paren_stack_string_count = 0;\n    let current_paren_stack_string_count_max\
    \ = 0;\n    let current_paren_stack_string_count_min = 0;\n    let current_paren_stack_string_count_min_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count = 0;\n    let current_paren_stack_string_count_min_max_count_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min = 0;\n    let\
    \ current_paren_stack_string_count_min_max_count_min_max = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_min_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_min_max_count\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_min_max_count_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_min_max_count_min_max\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_min_max_count_min_max_count\
    \ = 0;\n    let current_paren_stack_string_count_min_max_count_min_max_count_",
  "    let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let paren_count = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_level_stack\
    \ = [];\n    let paren_count_in_level_stack_top = 0;\n    let paren_count_in_level_stack_top_index\
    \ = 0;\n    let paren_count_in_level_stack_top_value = 0;\n    let paren_count_in_level_stack_top_value_index\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value = 0;\n    let paren_count_in_level_stack_top_value_value_index\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value = 0;\n    let\
    \ paren_count_in_level_stack_top_value_value_value_index = 0;\n    let paren_count_in_level_stack_top_value_value_value_value\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value_value_index =\
    \ 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value = 0;\n\
    \    let paren_count_in_level_stack_top_value_value_value_value_value_index =\
    \ 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_in_level_stack_top_value_value_value_value_value_value_value_value",
  "    let result: number[] = [];\n    let stack: number[] = [];\n    let level: number\
    \ = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let paren_count: number\
    \ = 0;\n    let paren_count_stack: number[] = [];\n    let paren_count_stack_index:\
    \ number = 0;\n    let paren_count_stack_length: number = 0;\n    let paren_count_stack_length_index:\
    \ number = 0;\n    let paren_count_stack_length_length: number = 0;\n    let paren_count_stack_length_length_index:\
    \ number = 0;\n    let paren_count_stack_length_length_length: number = 0;\n \
    \   let paren_count_stack_length_length_length_index: number = 0;\n    let paren_count_stack_length_length_length_length:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_index: number\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length: number =\
    \ 0;\n    let paren_count_stack_length_length_length_length_length_index: number\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length: number\
    \ = 0;\n    let paren_count_stack_length_length_length_length_length_length_index:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_length_length_length:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_index:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length_index:\
    \ number = 0;\n    let paren_count_stack_length_length_length_length_length_length_length_length_length:\
    \ number = 0;\n    let paren_count_stack_", "    let paren_stack = [];\n    let\
    \ paren_count = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_length = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_min = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_min_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_min_length = 0;\n    let paren_count_stack_max_length_index\
    \ = 0;\n    let paren_count_stack_min_length_index = 0;\n    let paren_count_stack_max_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length = 0;\n    let paren_count_stack_max_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_index = 0;\n    let paren_count_stack_max_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length = 0;\n    let paren_count_stack_max_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_index = 0;\n    let\
    \ paren_count_stack_max_length_length_length_length = 0;\n    let paren_count_stack_min_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_index = 0;\n\
    \    let paren_count_stack_min_length_length_length_length_index = 0;\n    let\
    \ paren_count_stack_max_length_length_length_length_length = 0;\n    let paren_count_stack_min_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_index\
    \ = 0;\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_next_level =\
    \ 0;\n    let paren_count_in_next_next_level = 0;\n    let paren_count_in_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_level = 0;\n    let\
    \ paren_count_in_next_next_next_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_", "    let result = [];\n\
    \    let stack = [];\n    let current_level = 0;\n    let current_index = 0;\n\
    \    let current_paren_count = 0;\n    let current_paren_count_in_string = 0;\n\
    \    let current_paren_count_in_string_index = 0;\n    let current_paren_count_in_string_index_in_string\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index = 0;\n   \
    \ let current_paren_count_in_string_index_in_string_index_in_string = 0;\n   \
    \ let current_paren_count_in_string_index_in_string_index_in_string_index = 0;\n\
    \    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index_in_string\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index\
    \ = 0;\n    let current_paren_count_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index_in_string_index_in_string\
    \ = 0;\n    ", "    let result = [];\n    let stack = [];\n    let current_level\
    \ = 0;\n    let current_paren = 0;\n    let current_paren_count = 0;\n    let\
    \ current_paren_count_max = 0;\n    let current_paren_count_min = 0;\n    let\
    \ current_paren_count_max_min = 0;\n    let current_paren_count_min_max = 0;\n\
    \    let current_paren_count_min_max_max = 0;\n    let current_paren_count_min_max_min\
    \ = 0;\n    let current_paren_count_min_max_min_max = 0;\n    let current_paren_count_min_max_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min = 0;\n    let current_paren_count_min_max_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min = 0;\n    let\
    \ current_paren_count_min_max_min_min_min_min_min_min = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min =\
    \ 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let current_paren_count_min_max_min_min_min_min_min_min_min_min_min_min_min_min_min\
    \ = 0;\n    let", "    let paren_stack: number[] = [];\n    let paren_count: number\
    \ = 0;\n    let paren_count_stack: number[] = [];\n    let paren_count_stack_index:\
    \ number = 0;\n    let paren_count_stack_top: number = 0;\n    let paren_count_stack_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top: number = 0;\n    let paren_count_stack_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top: number = 0;\n    let paren_count_stack_top_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_index: number = 0;\n    let paren_count_stack_top_top_top_top_top:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top_top_index: number = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top: number = 0;\n    let paren_count_stack_top_top_top_top_top_top_index:\
    \ number = 0;\n    let paren_count_stack_top_top_top_top_top_top_top: number =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index: number = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_top: number = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_top_index: number = 0;\n \
    \   let paren_count_stack", "  let paren_stack = [];\n  let paren_count = 0;\n\
    \  let paren_level = 0;\n  let paren_count_stack = [];\n  let paren_count_stack_index\
    \ = 0;\n  let paren_count_stack_max = 0;\n  let paren_count_stack_max_index =\
    \ 0;\n  let paren_count_stack_max_max = 0;\n  let paren_count_stack_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max = 0;\n  let paren_count_stack_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max = 0;\n  let paren_count_stack_max_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max_max = 0;\n  let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max_max_max = 0;\n  let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max_max_max_max = 0;\n  let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n  let paren_count_stack_max_max_max_max_max_max_max_max_index\
    \ = 0;\n  let paren_count_stack_max_max_max_max_max_max_max_max_max = 0;\n  let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_max_index = 0;\n  let paren_count_stack_max_max_max_max_max_max_max_max_max_max\
    \ = 0;\n  let paren_count_stack_max_max", "    let paren_stack = [];\n    let\
    \ max_nesting = 0;\n    let current_nesting = 0;\n    let current_index = 0;\n\
    \    let paren_count = 0;\n    let paren_count_in_string = 0;\n    let paren_count_in_string_index\
    \ = 0;\n    let paren_count_in_string_count = 0;\n    let paren_count_in_string_count_index\
    \ = 0;\n    let paren_count_in_string_count_count = 0;\n    let paren_count_in_string_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count = 0;\n    let paren_count_in_string_count_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count_count = 0;\n    let paren_count_in_string_count_count_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count = 0;\n   \
    \ let paren_count_in_string_count_count_count_count_count_index = 0;\n    let\
    \ paren_count_in_string_count_count_count_count_count_count = 0;\n    let paren_count_in_string_count_count_count_count_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count_count_count\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count_count_count_count\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let paren_count_in_string_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let paren_count_in_string_count_count_count_count", "    let paren_stack\
    \ = [];\n    let max_depth = 0;\n    let current_depth = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_stack = [];\n    let current_paren_stack_length\
    \ = 0;\n    let current_paren_stack_max_depth = 0;\n    let current_paren_stack_max_depth_index\
    \ = 0;\n    let current_paren_stack_max_depth_value = 0;\n    let current_paren_stack_max_depth_value_index\
    \ = 0;\n    let current_paren_stack_max_depth_value_value = 0;\n    let current_paren_stack_max_depth_value_value_index\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value = 0;\n    let\
    \ current_paren_stack_max_depth_value_value_value_index = 0;\n    let current_paren_stack_max_depth_value_value_value_value\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value_index =\
    \ 0;\n    let current_paren_stack_max_depth_value_value_value_value_value = 0;\n\
    \    let current_paren_stack_max_depth_value_value_value_value_value_index = 0;\n\
    \    let current_paren_stack_max_depth_value_value_value_value_value_value = 0;\n\
    \    let current_paren_stack_max_depth_value_value_value_value_value_value_index\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value_value_value_value\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value_value_value_value_index\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value_value_value_value_value\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let current_paren_stack_max_depth_value_value_value_value", "    let\
    \ paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n    let\
    \ current_paren = 0;\n    let paren_count = 0;\n    let paren_count_stack = [];\n\
    \    let paren_count_stack_index = 0;\n    let paren_count_stack_max = 0;\n  \
    \  let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max = 0;\n\
    \    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_", "    let\
    \ result = [];\n    let stack = [];\n    let level = 0;\n    let paren_count =\
    \ 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_stack = 0;\n \
    \   let paren_count_in_paren_count = 0;\n    let paren_count_in_paren_count_in_level\
    \ = 0;\n    let paren_count_in_paren_count_in_stack = 0;\n    let paren_count_in_paren_count_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_level = 0;\n    let\
    \ paren_count_in_paren_count_in_paren_count_in_stack = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_level\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_stack\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_level\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_stack\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_level\
    \ = 0;\n    let paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_paren_count_in_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n    let\
    \ paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index = 0;\n\
    \    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index\
    \ = 0;\n    let paren_count_stack_top_value = 0;\n    let paren_count_stack_top_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value = 0;\n    let paren_count_stack_top_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_top_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_top_value_value_value_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value", "    let paren_stack = [];\n   \
    \ let current_level = 0;\n    let max_level = 0;\n    let max_index = 0;\n   \
    \ let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n\
    \    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n\
    \    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n", "    let result = [];\n  \
    \  let stack = [];\n    let current_level = 0;\n    let current_paren = 0;\n \
    \   let paren_count = 0;\n    let paren_string = paren_string.split(\" \");\n\
    \    for (let i = 0; i < paren_string.length; i++) {\n        if (paren_string[i]\
    \ === \"(\") {\n            stack.push(i);\n            current_level++;\n   \
    \         current_paren++;\n            paren_count++;\n        } else if (paren_string[i]\
    \ === \")\") {\n            if (stack.length > 0) {\n                stack.pop();\n\
    \                current_level--;\n                current_paren--;\n        \
    \        paren_count--;\n            }\n        }\n        if (current_level ===\
    \ 0 && paren_count === 0) {\n            result.push(current_paren);\n       \
    \ }\n    }\n    return result;\n}\n", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n\
    \    let paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_value\
    \ = 0;\n    let paren_count_stack_max_value_index = 0;\n    let paren_count_stack_max_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_index = 0;\n    let paren_count_stack_max_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_index = 0;\n    let paren_count_stack_max_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_index = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_index = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value", "    let paren_stack = [];\n   \
    \ let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_count_in_parent = 0;\n    let paren_count_in_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent = 0;\n    let paren_count_in_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent = 0;\n    let paren_count_in_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent = 0;\n    let paren_count_in_parent_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent = 0;\n    let\
    \ paren_count_in_parent_parent_parent_parent_parent_level = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_parent\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_parent_parent\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_parent_parent_level\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_parent_parent_parent\
    \ = 0;\n    let paren_count_in_parent_parent_parent_parent_parent_parent_parent_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_length = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_min\
    \ = 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_min_index\
    \ = 0;\n    let paren_count_stack_min_length = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length = 0;\n    let paren_count_stack_min_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length = 0;\n    let paren_count_stack_min_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length = 0;\n    let\
    \ paren_count_stack_min_length_length_length_length_index = 0;\n    let paren_count_stack_min_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_min_length_length_length_length_length_length_length_length_index\
    \ = 0;\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren\
    \ = 0;\n    let current_paren_count = 0;\n    let current_paren_string = \"\"\
    ;\n    let current_paren_string_count = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_length_count\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_length_length\
    \ = 0;\n    let current_paren_string_length_length_count = 0;\n    let current_paren_string_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length = 0;\n    let current_paren_string_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length = 0;\n    let current_paren_string_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_index = 0;\n\
    \    let current_paren_string_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_count = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length_count = 0;\n\
    \    let current_paren_string_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_string_length = paren_string.length;\n    let paren_string_index\
    \ = 0;\n    let paren_string_index_in_level = 0;\n    let paren_string_index_in_level_end\
    \ = 0;\n    let paren_string_index_in_level_start = 0;\n    let paren_string_index_in_level_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start = 0;\n    let paren_string_index_in_level_start_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start_start = 0;\n    let paren_string_index_in_level_start_start_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start = 0;\n   \
    \ let paren_string_index_in_level_start_start_start_start_end = 0;\n    let paren_string_index_in_level_start_start_start_start_start\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start_start\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start_start_end\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start_start_start\
    \ = 0;\n    let paren_string_index_in_level_start_start_start_start_start_start",
  "    let result = [];\n    let paren_stack = [];\n    let paren_count = 0;\n   \
    \ let paren_count_in_paren = 0;\n    let paren_count_in_paren_in_paren = 0;\n\
    \    let paren_count_in_paren_in_paren_in_paren = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren = 0;\n\
    \    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren = 0;\n\
    \    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_",
  "    let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let current_paren_level = 0;\n    let current_paren_count = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_string_count = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_char\
    \ = \"\";\n    let current_paren_string_char_count = 0;\n    let current_paren_string_char_index\
    \ = 0;\n    let current_paren_string_char_length = 0;\n    let current_paren_string_char_index_end\
    \ = 0;\n    let current_paren_string_char_count_end = 0;\n    let current_paren_string_char_length_end\
    \ = 0;\n    let current_paren_string_char_index_start = 0;\n    let current_paren_string_char_count_start\
    \ = 0;\n    let current_paren_string_char_length_start = 0;\n    let current_paren_string_char_index_end_start\
    \ = 0;\n    let current_paren_string_char_count_end_start = 0;\n    let current_paren_string_char_length_end_start\
    \ = 0;\n    let current_paren_string_char_index_end_end = 0;\n    let current_paren_string_char_count_end_end\
    \ = 0;\n    let current_paren_string_char_length_end_end = 0;\n    let current_paren_string_char_index_start_end\
    \ = 0;\n    let current_paren_string_char_count_start_end = 0;\n    let current_paren_string_char_length_start_end\
    \ = 0;\n    let current_paren_string_char_index_end_start_end = 0;\n    let current_paren_string_char_count_end_start_end\
    \ = 0;\n    let current_paren_string_char_length_end_start_end = 0;\n    let current_paren_string_char_index_end_start_start\
    \ = 0", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_index = 0;\n    let paren_length = paren_string.length;\n\
    \    let paren_char = paren_string[paren_index];\n    let paren_char_count = 0;\n\
    \    let paren_char_index = 0;\n    let paren_char_length = paren_char.length;\n\
    \    let paren_char_char = paren_char[paren_char_index];\n    let paren_char_char_count\
    \ = 0;\n    let paren_char_char_index = 0;\n    let paren_char_char_length = paren_char_char.length;\n\
    \    let paren_char_char_char = paren_char_char[paren_char_char_index];\n    while\
    \ (paren_index < paren_length) {\n        if (paren_char_char_char === '(') {\n\
    \            paren_char_char_char_count++;\n            if (paren_char_char_char_count\
    \ === 1) {\n                paren_char_char_index++;\n                paren_char_char_length\
    \ = paren_char_char.length;\n                paren_char_char_char = paren_char_char[paren_char_char_index];\n\
    \            }\n        } else if (paren_char_char_char === ')') {\n         \
    \   paren_char_char_char_count--;\n            if (paren_char_char_char_count\
    \ === 0) {\n                paren_char_char_index++;\n                paren_char_char_length\
    \ = paren_char_char.length;\n                paren_char_char_char = paren_char_char[paren_char_char_index];\n\
    \            }\n        }\n        if (paren_char_char_char === '(') {\n     \
    \       paren_char_char_char_count++;\n            if (paren_char_char_char_count\
    \ === 1) {\n                paren_char_char_index++;\n                paren_char_char_length\
    \ = paren_char_char.length;\n                paren_char_", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_level_in_stack = 0;\n    let paren_level_in_string = 0;\n\
    \    let paren_count_in_string = 0;\n    let paren_count_in_paren_level = 0;\n\
    \    let paren_count_in_paren_level_in_string = 0;\n    let paren_count_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level_in_paren_level_in_string\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_stack = 0;\n    let\
    \ paren_count_in_paren_level_in_paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_string\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level_in_string\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level_in_paren_level\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level_in_paren_level_in_string\
    \ = 0;\n    let paren_count_in_paren_", "    let paren_stack = [];\n    let max_nesting\
    \ = 0;\n    let current_nesting = 0;\n    let current_paren = 0;\n    let current_char\
    \ = 0;\n    let current_char_is_open = false;\n    let current_char_is_close =\
    \ false;\n    let current_char_is_open_paren = false;\n    let current_char_is_close_paren\
    \ = false;\n    let current_char_is_open_paren_close_paren = false;\n    let current_char_is_open_paren_open_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_close_paren = false;\n\
    \    let current_char_is_open_paren_open_paren_open_paren = false;\n    let current_char_is_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    let current_char_is_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_open_paren_close_paren\
    \ = false;\n    for (let i = 0; i < paren_string.length; i++) {\n        let current_char\
    \ = paren_string[i];\n        if (current_char === \"(\") {\n            current_char_is_open\
    \ = true;\n            current_char_is_close = false;\n            current_char_is_open_paren\
    \ = false;\n            current_char_is_close_paren = false;\n            current_char_",
  "    let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let current_paren_level = 0;\n    let current_paren_string = \"\";\n    let\
    \ current_paren_string_length = 0;\n    let current_paren_string_index = 0;\n\
    \    let current_paren_string_index_end = 0;\n    let current_paren_string_index_start\
    \ = 0;\n    let current_paren_string_index_start_end = 0;\n    let current_paren_string_index_start_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end = 0;\n    let current_paren_string_index_start_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end = 0;\n  \
    \  let current_paren_string_index_start_end_end_end_end_end_end = 0;\n    let\
    \ current_paren_string_index_start_end_end_end_end_end_end_end = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end_end_end_end_end_end_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_start = 0;\n    let paren_end = 0;\n    let paren_count_start =\
    \ 0;\n    let paren_count_end = 0;\n    let paren_count_start_end = 0;\n    let\
    \ paren_count_end_start = 0;\n    let paren_count_end_start_end = 0;\n    let\
    \ paren_count_start_end_end = 0;\n    let paren_count_end_start_end_end = 0;\n\
    \    let paren_count_end_start_end_end_start = 0;\n    let paren_count_end_start_end_end_start_end\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end = 0;\n    let paren_count_end_start_end_end_start_end_end_start\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end_start_end = 0;\n \
    \   let paren_count_end_start_end_end_start_end_end_start_end_start = 0;\n   \
    \ let paren_count_end_start_end_end_start_end_end_start_end_start_end = 0;\n \
    \   let paren_count_end_start_end_end_start_end_end_start_end_start_end_start\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end_start_end_start_end_start_end\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end_start_end_start_end_start_end_start\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end_start_end_start_end_start_end_start_end\
    \ = 0;\n    let paren_count_end_start_end_end_start_end_end_start_end_start_end_start_",
  "    let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let max_level_index = 0;\n    let current_index = 0;\n    let paren_count\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_level_index\
    \ = 0;\n    let paren_count_in_level_in_stack = 0;\n    let paren_count_in_level_in_stack_index\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack = 0;\n    let paren_count_in_level_in_stack_in_stack_index\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack = 0;\n    let\
    \ paren_count_in_level_in_stack_in_stack_in_stack_index = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_index\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_index\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_index\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_stack = [];\n\
    \    let current_paren_stack_count = 0;\n    let current_paren_stack_string =\
    \ \"\";\n    let current_paren_stack_string_count = 0;\n    let current_paren_stack_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_count = 0;\n    let current_paren_stack_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_count = 0;\n    let\
    \ current_paren_stack_string_string_string_string = \"\";\n    let current_paren_stack_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string = \"\"\
    ;\n    let current_paren_stack_string_string_string_string_string_count = 0;\n\
    \    let current_paren_stack_string_string_string_string_string_string = \"\"\
    ;\n    let current_paren_stack_string_string_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_string_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_string_string_string_string\
    \ = \"\";\n    ", "    let paren_stack = [];\n    let max_nesting = 0;\n    let\
    \ current_nesting = 0;\n    let current_index = 0;\n    let current_char = paren_string[current_index];\n\
    \    while (current_index < paren_string.length) {\n        if (current_char ===\
    \ '(') {\n            paren_stack.push(current_char);\n            current_nesting++;\n\
    \        } else if (current_char === ')') {\n            if (paren_stack.length\
    \ === 0) {\n                throw new Error(\"Unexpected closing parenthesis\"\
    );\n            }\n            paren_stack.pop();\n            current_nesting--;\n\
    \        } else if (current_char === ' ') {\n            if (paren_stack.length\
    \ === 0) {\n                throw new Error(\"Unexpected space\");\n         \
    \   }\n            if (current_nesting === 0) {\n                max_nesting =\
    \ Math.max(max_nesting, current_nesting);\n            }\n            current_nesting\
    \ = 0;\n        }\n        current_index++;\n        current_char = paren_string[current_index];\n\
    \    }\n    if (paren_stack.length > 0) {\n        throw new Error(\"Unexpected\
    \ closing parenthesis\");\n    }\n    return [max_nesting, current_nesting];\n\
    }\n", "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting\
    \ = 0;\n    let current_paren = 0;\n    let current_char = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_count_max = 0;\n    let current_paren_count_min\
    \ = 0;\n    let current_paren_count_max_min = 0;\n    let current_paren_count_min_max\
    \ = 0;\n    let current_paren_count_min_max_min = 0;\n    let current_paren_count_min_max_min_max\
    \ = 0;\n    let current_paren_count_min_max_min_max_min = 0;\n    let current_paren_count_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min = 0;\n    let\
    \ current_paren_count_min_max_min_max_min_max_min_max = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max =\
    \ 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let current_paren_count_min_max_min_max_min_max_min", "  let paren_stack\
    \ = [];\n  let paren_count = 0;\n  let paren_level = 0;\n  let paren_index = 0;\n\
    \  let paren_count_max = 0;\n  let paren_count_min = 0;\n  let paren_level_max\
    \ = 0;\n  let paren_level_min = 0;\n  let paren_index_max = 0;\n  let paren_index_min\
    \ = 0;\n  let paren_count_max_index = 0;\n  let paren_count_min_index = 0;\n \
    \ let paren_level_max_index = 0;\n  let paren_level_min_index = 0;\n  let paren_index_max_index\
    \ = 0;\n  let paren_index_min_index = 0;\n  let paren_count_max_index_index =\
    \ 0;\n  let paren_count_min_index_index = 0;\n  let paren_level_max_index_index\
    \ = 0;\n  let paren_level_min_index_index = 0;\n  let paren_index_max_index_index\
    \ = 0;\n  let paren_index_min_index_index = 0;\n  let paren_count_max_index_index_index\
    \ = 0;\n  let paren_count_min_index_index_index = 0;\n  let paren_level_max_index_index_index\
    \ = 0;\n  let paren_level_min_index_index_index = 0;\n  let paren_index_max_index_index_index\
    \ = 0;\n  let paren_index_min_index_index_index = 0;\n  let paren_count_max_index_index_index_index\
    \ = 0;\n  let paren_count_min_index_index_index_index = 0;\n  let paren_level_max_index_index_index_index\
    \ = 0;\n  let paren_level_min_index_index_index_index = 0;\n  let paren_index_max_index_index_index_index\
    \ = 0;\n  let paren_index_min_index_index_", "    let paren_stack = [];\n    let\
    \ paren_count = 0;\n    let paren_level = 0;\n    let paren_start = 0;\n    let\
    \ paren_end = 0;\n    let paren_count_stack = [];\n    let paren_level_stack =\
    \ [];\n    let paren_start_stack = [];\n    let paren_end_stack = [];\n    let\
    \ paren_count_stack_stack = [];\n    let paren_level_stack_stack = [];\n    let\
    \ paren_start_stack_stack = [];\n    let paren_end_stack_stack = [];\n    let\
    \ paren_count_stack_stack_stack = [];\n    let paren_level_stack_stack_stack =\
    \ [];\n    let paren_start_stack_stack_stack = [];\n    let paren_end_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack\
    \ = [];\n    let paren_start_stack_stack_stack_stack = [];\n    let paren_end_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_start_stack_stack_stack_stack_stack = [];\n    let paren_end_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_start_stack_stack_stack_stack_stack = [];\n    let paren_end_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_start_stack_stack_stack_stack_stack = [];\n    let paren_end_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_", "  let result = [];\n  let paren_stack\
    \ = [];\n  let paren_count = 0;\n  let paren_index = 0;\n  let paren_char = \"\
    \";\n  let paren_level = 0;\n  let paren_count_in_level = 0;\n  let paren_stack_in_level\
    \ = [];\n  let paren_stack_in_level_index = 0;\n  let paren_stack_in_level_count\
    \ = 0;\n  let paren_stack_in_level_count_in_level = 0;\n  let paren_stack_in_level_count_in_level_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count = 0;\n  let paren_stack_in_level_count_in_level_count_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count = 0;\n  let paren_stack_in_level_count_in_level_count_count_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count = 0;\n  let\
    \ paren_stack_in_level_count_in_level_count_count_count_index = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count_count\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count_count_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count_count_count\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count_count_count_count_count_index\
    \ = 0;\n  let paren_stack_in_level_count_in_level_count_count", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let max_nesting = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let current_level\
    \ = 0;\n    let max_level = 0;\n    let current_paren = 0;\n    let paren_count\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_level_stack\
    \ = [];\n    let paren_count_in_level_stack_top = 0;\n    let paren_count_in_level_stack_top_in_level\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack = [];\n    let paren_count_in_level_stack_top_in_level_stack_top\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level = 0;\n\
    \    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack = [];\n\
    \    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack\
    \ = [];\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack_top\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level\
    \ = 0;\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack\
    \ = [];\n    let paren_count_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_level_stack_top_in_",
  "    let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let paren_count = 0;\n    let paren_index = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_count_in_level_in_stack = 0;\n    let paren_count_in_level_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack = 0;\n    let\
    \ paren_count_in_level_in_stack_in_stack_in_stack_in_stack = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_index = 0;\n    let paren_count_max = 0;\n    let paren_count_min\
    \ = 0;\n    let paren_count_max_index = 0;\n    let paren_count_min_index = 0;\n\
    \    let paren_count_max_level = 0;\n    let paren_count_min_level = 0;\n    let\
    \ paren_count_max_level_index = 0;\n    let paren_count_min_level_index = 0;\n\
    \    let paren_count_max_level_count = 0;\n    let paren_count_min_level_count\
    \ = 0;\n    let paren_count_max_level_count_index = 0;\n    let paren_count_min_level_count_index\
    \ = 0;\n    let paren_count_max_level_count_count = 0;\n    let paren_count_min_level_count_count\
    \ = 0;\n    let paren_count_max_level_count_count_index = 0;\n    let paren_count_min_level_count_count_index\
    \ = 0;\n    let paren_count_max_level_count_count_count = 0;\n    let paren_count_min_level_count_count_count\
    \ = 0;\n    let paren_count_max_level_count_count_count_index = 0;\n    let paren_count_min_level_count_count_count_index\
    \ = 0;\n    let paren_count_max_level_count_count_count_count = 0;\n    let paren_count_min_level_count_count_count_count\
    \ = 0;\n    let paren_count_max_level_count_count_count_count_index = 0;\n   \
    \ let paren_count_min_level_count_count_count_count_index = 0;\n    let paren_count_max_level_count_count_count_count_count\
    \ = 0;\n    let paren_count_min_level_count_count_count_", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_depth = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_depth_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_depth_stack_index = 0;\n    let paren_count_stack_index_max = 0;\n\
    \    let paren_depth_stack_index_max = 0;\n    let paren_count_stack_max = 0;\n\
    \    let paren_depth_stack_max = 0;\n    let paren_count_stack_index_min = 0;\n\
    \    let paren_depth_stack_index_min = 0;\n    let paren_count_stack_min = 0;\n\
    \    let paren_depth_stack_min = 0;\n    let paren_count_stack_min_max = 0;\n\
    \    let paren_depth_stack_min_max = 0;\n    let paren_count_stack_min_max_index\
    \ = 0;\n    let paren_depth_stack_min_max_index = 0;\n    let paren_count_stack_min_max_index_max\
    \ = 0;\n    let paren_depth_stack_min_max_index_max = 0;\n    let paren_count_stack_min_max_index_min\
    \ = 0;\n    let paren_depth_stack_min_max_index_min = 0;\n    let paren_count_stack_min_max_index_min_max\
    \ = 0;\n    let paren_depth_stack_min_max_index_min_max = 0;\n    let paren_count_stack_min_max_index_min_max_index\
    \ = 0;\n    let paren_depth_stack_min_max_index_min_max_index = 0;\n    let paren_count_stack_min_max_index_min_max_index_max\
    \ = 0;\n    let paren_depth_stack_min_max_index_min_max_index_max = 0;\n    let\
    \ paren_count_stack_min_max_index_min_max_index_", "    let paren_stack = [];\n\
    \    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_count_in_next_level = 0;\n    let paren_count_in_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_level = 0;\n \
    \   let paren_count_in_next_next_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let stack = [];\n\
    \    let current_level = 0;\n    let current_paren_level = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_string_count\
    \ = 0;\n    let current_paren_string_start = 0;\n    let current_paren_string_end\
    \ = 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_length_count\
    \ = 0;\n    let current_paren_string_length_start = 0;\n    let current_paren_string_length_end\
    \ = 0;\n    let current_paren_string_length_length = 0;\n    let current_paren_string_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_start = 0;\n    let current_paren_string_length_length_end\
    \ = 0;\n    let current_paren_string_length_length_length = 0;\n    let current_paren_string_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_start = 0;\n    let\
    \ current_paren_string_length_length_length_end = 0;\n    let current_paren_string_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_count = 0;\n\
    \    let current_paren_string_length_length_length_length_start = 0;\n    let\
    \ current_paren_string_length_length_length_length_end = 0;\n    let current_paren_string_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_start\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_end =\
    \ 0;\n    let current_paren_string_length_length_length_length_length_length =\
    \ 0;\n    let current_paren_string_length_length_length_length_length_length_count\
    \ = 0;\n    ", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_level_in_stack = 0;\n\
    \    let paren_count_in_paren_level = 0;\n    let paren_count_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_stack_in_level_in_stack_in_level_in_stack_in_level\
    \ = 0;\n    let paren_count_in_paren_level_in_stack_in_level_in_", "    let paren_stack\
    \ = [];\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren\
    \ = 0;\n    let current_char = 0;\n    let paren_count = 0;\n    let paren_start\
    \ = 0;\n    let paren_end = 0;\n    let paren_length = 0;\n    let paren_string_length\
    \ = paren_string.length;\n    let paren_string_index = 0;\n    let paren_string_char\
    \ = 0;\n    let paren_string_char_index = 0;\n    let paren_string_char_count\
    \ = 0;\n    let paren_string_char_count_index = 0;\n    let paren_string_char_count_count\
    \ = 0;\n    let paren_string_char_count_count_index = 0;\n    let paren_string_char_count_count_count\
    \ = 0;\n    let paren_string_char_count_count_count_index = 0;\n    let paren_string_char_count_count_count_count\
    \ = 0;\n    let paren_string_char_count_count_count_count_index = 0;\n    let\
    \ paren_string_char_count_count_count_count_count = 0;\n    let paren_string_char_count_count_count_count_count_index\
    \ = 0;\n    let paren_string_char_count_count_count_count_count_count = 0;\n \
    \   let paren_string_char_count_count_count_count_count_count_index = 0;\n   \
    \ let paren_string_char_count_count_count_count_count_count_count = 0;\n    let\
    \ paren_string_char_count_count_count_count_count_count_count_index = 0;\n   \
    \ let paren_string_char_count_count_count_count_count_count_count_count = 0;\n\
    \    let paren_string_char_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let paren_string_char_count_count_count_count_count", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_level_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_level_stack_index\
    \ = 0;\n    let paren_count_stack_top = 0;\n    let paren_level_stack_top = 0;\n\
    \    let paren_count_stack_top_index = 0;\n    let paren_level_stack_top_index\
    \ = 0;\n    let paren_count_stack_top_top = 0;\n    let paren_level_stack_top_top\
    \ = 0;\n    let paren_count_stack_top_top_index = 0;\n    let paren_level_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_level_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_level_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_level_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_level_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_level_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_level_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_level_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let p", "    let result = [];\n    let stack = [];\n    let current_level\
    \ = 0;\n    let paren_count = 0;\n    let paren_index = 0;\n    let paren_length\
    \ = paren_string.length;\n    let paren_char = paren_string[paren_index];\n  \
    \  let paren_char_count = 1;\n    let paren_char_index = 0;\n    let paren_char_length\
    \ = paren_char.length;\n    while (paren_index < paren_length) {\n        if (paren_char\
    \ === '(') {\n            stack.push(paren_char);\n            current_level +=\
    \ 1;\n            paren_char_count += 1;\n            paren_char_index += 1;\n\
    \        } else if (paren_char === ')') {\n            if (stack.length > 0) {\n\
    \                stack.pop();\n                current_level -= 1;\n         \
    \       paren_char_count -= 1;\n                paren_char_index += 1;\n     \
    \       } else {\n                throw new Error(\"Invalid parentheses string\"\
    );\n            }\n        } else if (paren_char === ' ') {\n            if (stack.length\
    \ > 0) {\n                paren_count += 1;\n                paren_char_count\
    \ += 1;\n                paren_char_index += 1;\n            } else {\n      \
    \          throw new Error(\"Invalid parentheses string\");\n            }\n \
    \       } else {\n            throw new Error(\"Invalid parentheses string\");\n\
    \        }\n        if (paren_char_count === paren_char_length) {\n          \
    \  paren_index += 1;\n            paren_char_count = 0;\n            paren_char_index\
    \ = 0;\n            paren_char = paren_string[paren_index];\n        }\n     \
    \   if (current_level === 0) {\n            result.push(paren_count);\n      \
    \      paren_count = 0;\n        }\n    }\n    return result;\n}\n", "    let\
    \ paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting = 0;\n\
    \    let current_paren = 0;\n    let current_char = 0;\n    let current_paren_string\
    \ = '';\n    let current_paren_string_length = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_length_index_end\
    \ = 0;\n    let current_paren_string_length_index_start = 0;\n    let current_paren_string_length_index_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end = 0;\n    let\
    \ current_paren_string_length_index_start_end_end_end = 0;\n    let current_paren_string_length_index_start_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end =\
    \ 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end", "    let\
    \ paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let\
    \ paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max\
    \ = 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n\
    \    let paren_count_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let max_nesting = 0;\n    let i = 0;\n\
    \    while (i < paren_string.length) {\n        if (paren_string[i] === '(') {\n\
    \            paren_stack.push(paren_count);\n            paren_count++;\n    \
    \    } else if (paren_string[i] === ')') {\n            paren_count--;\n     \
    \       if (paren_stack.length > 0) {\n                max_nesting = Math.max(max_nesting,\
    \ paren_stack.pop());\n            }\n        }\n        i++;\n    }\n    return\
    \ max_nesting;\n}\n", "  const paren_groups = paren_string.split(\" \");\n  const\
    \ result = [];\n  for (let i = 0; i < paren_groups.length; i++) {\n    const paren_group\
    \ = paren_groups[i];\n    if (paren_group === \"\") {\n      continue;\n    }\n\
    \    const paren_count = paren_group.split(\"\").length - 1;\n    result.push(paren_count);\n\
    \  }\n  return result;\n}\n", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren\
    \ = 0;\n    let current_paren_count = 0;\n    let current_paren_string = \"\"\
    ;\n    let current_paren_string_count = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_length_count\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_length_length\
    \ = 0;\n    let current_paren_string_length_length_count = 0;\n    let current_paren_string_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length = 0;\n    let current_paren_string_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length = 0;\n    let current_paren_string_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_index = 0;\n\
    \    let current_paren_string_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_count = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length_count = 0;\n\
    \    let current_paren_string_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_", "    let paren_stack\
    \ = [];\n    let max_nesting = 0;\n    let current_level = 0;\n    let current_paren\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_count = 0;\n\
    \    let current_paren_string_count = 0;\n    let current_paren_string_index =\
    \ 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_length_index\
    \ = 0;\n    let current_paren_string_length_length = 0;\n    let current_paren_string_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length = 0;\n    let current_paren_string_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_index = 0;\n    let current_paren_string_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_length_length_length\
    \ = 0;\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_index = 0;\n    let paren_string_length = paren_string.length;\n\
    \    let paren_string_index = 0;\n    let paren_string_char;\n    let paren_string_char_index;\n\
    \    let paren_string_char_count;\n    let paren_string_char_count_index;\n  \
    \  let paren_string_char_count_count;\n    let paren_string_char_count_count_index;\n\
    \    let paren_string_char_count_count_count;\n    let paren_string_char_count_count_count_index;\n\
    \    let paren_string_char_count_count_count_count;\n    let paren_string_char_count_count_count_count_index;\n\
    \    let paren_string_char_count_count_count_count_count;\n    let paren_string_char_count_count_count_count_count_index;\n\
    \    let paren_string_char_count_count_count_count_count_count;\n    let paren_string_char_count_count_count_count_count_count_index;\n\
    \    let paren_string_char_count_count_count_count_count_count_count;\n    let\
    \ paren_string_char_count_count_count_count_count_count_count_index;\n    let\
    \ paren_string_char_count_count_count_count_count_count_count_count;\n    let\
    \ paren_string_char_count_count_count_count_count_count_count_count_index;\n \
    \   let paren_string_char_count_count_count_count_count_count_count_count_count;\n\
    \    let paren_string_char_count_count_count_count_count_count_count_count_count_index;\n\
    \    let paren_string_char_count_count_count_count_count_count_count_count_count_count;\n\
    \    let paren_string_char_count_count_count", "    let paren_stack = [];\n  \
    \  let paren_count = 0;\n    let paren_depth = 0;\n    let paren_start = 0;\n\
    \    let paren_end = 0;\n    let paren_count_stack = [];\n    let paren_depth_stack\
    \ = [];\n    let paren_start_stack = [];\n    let paren_end_stack = [];\n    let\
    \ paren_count_stack_index = 0;\n    let paren_depth_stack_index = 0;\n    let\
    \ paren_start_stack_index = 0;\n    let paren_end_stack_index = 0;\n    let paren_count_stack_length\
    \ = 0;\n    let paren_depth_stack_length = 0;\n    let paren_start_stack_length\
    \ = 0;\n    let paren_end_stack_length = 0;\n    let paren_count_stack_index_max\
    \ = 0;\n    let paren_depth_stack_index_max = 0;\n    let paren_start_stack_index_max\
    \ = 0;\n    let paren_end_stack_index_max = 0;\n    let paren_count_stack_length_max\
    \ = 0;\n    let paren_depth_stack_length_max = 0;\n    let paren_start_stack_length_max\
    \ = 0;\n    let paren_end_stack_length_max = 0;\n    let paren_count_stack_index_min\
    \ = 0;\n    let paren_depth_stack_index_min = 0;\n    let paren_start_stack_index_min\
    \ = 0;\n    let paren_end_stack_index_min = 0;\n    let paren_count_stack_length_min\
    \ = 0;\n    let paren_depth_stack_length_min = 0;\n    let paren_start_stack_length_min\
    \ = 0;\n    let paren_end_stack_length_min = 0;\n    let paren_count_stack_index_min_max\
    \ = 0;\n    let paren_depth_stack_index_min_max = 0;\n    let paren_start_stack_index_min_max\
    \ =", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_depth\
    \ = 0;\n    let paren_index = 0;\n    let paren_char = '';\n    let paren_char_index\
    \ = 0;\n    let paren_char_count = 0;\n    let paren_char_count_max = 0;\n   \
    \ let paren_char_count_min = 0;\n    let paren_char_count_diff = 0;\n    let paren_char_count_diff_max\
    \ = 0;\n    let paren_char_count_diff_min = 0;\n    let paren_char_count_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_max = 0;\n    let paren_char_count_diff_diff_min\
    \ = 0;\n    let paren_char_count_diff_diff_diff = 0;\n    let paren_char_count_diff_diff_diff_max\
    \ = 0;\n    let paren_char_count_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_max = 0;\n    let paren_char_count_diff_diff_diff_diff_min\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_max\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff_max = 0;\n    let\
    \ paren_char_count_diff_diff_diff_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_", "    let result =\
    \ [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_index = 0;\n    let paren_string_length = paren_string.length;\n\
    \    let paren_string_index = 0;\n    let paren_string_char = '';\n    let paren_string_char_index\
    \ = 0;\n    let paren_string_char_length = 0;\n    let paren_string_char_length_index\
    \ = 0;\n    let paren_string_char_length_length = 0;\n    let paren_string_char_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length = 0;\n    let paren_string_char_length_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length_length = 0;\n    let paren_string_char_length_length_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length_length_length = 0;\n  \
    \  let paren_string_char_length_length_length_length_length_index = 0;\n    let\
    \ paren_string_char_length_length_length_length_length_length = 0;\n    let paren_string_char_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_string_char_length_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    ", "    let result = [];\n    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max_max_max", "    let paren_stack = [];\n    let\
    \ current_level = 0;\n    let max_level = 0;\n    let current_index = 0;\n   \
    \ let paren_count = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_value = 0;\n    let paren_count_stack_max_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value = 0;\n    let paren_count_stack_max_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_max_value_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let max_nesting = 0;\n\
    \    let max_nesting_index = 0;\n    let current_nesting = 0;\n    let current_nesting_index\
    \ = 0;\n    let current_char = '';\n    let current_char_index = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_index = 0;\n    let current_paren_stack = [];\n\
    \    let current_paren_stack_index = 0;\n    let current_paren_stack_count = 0;\n\
    \    let current_paren_stack_count_index = 0;\n    let current_paren_stack_count_count\
    \ = 0;\n    let current_paren_stack_count_count_index = 0;\n    let current_paren_stack_count_count_count\
    \ = 0;\n    let current_paren_stack_count_count_count_index = 0;\n    let current_paren_stack_count_count_count_count\
    \ = 0;\n    let current_paren_stack_count_count_count_count_index = 0;\n    let\
    \ current_paren_stack_count_count_count_count_count = 0;\n    let current_paren_stack_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_stack_count_count_count_count_count_count = 0;\n\
    \    let current_paren_stack_count_count_count_count_count_count_index = 0;\n\
    \    let current_paren_stack_count_count_count_count_count_count_count = 0;\n\
    \    let current_paren_stack_count_count_count_count_count_count_count_index =\
    \ 0;\n    let current_paren_stack_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_stack_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_stack_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_stack_count_count_count_count_count_count", "  \
    \  let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let stack = [];\n\
    \    let paren_count = 0;\n    let paren_level = 0;\n    let paren_stack = [];\n\
    \    let paren_stack_count = 0;\n    let paren_stack_level = 0;\n    let paren_stack_index\
    \ = 0;\n    let paren_stack_index_count = 0;\n    let paren_stack_index_level\
    \ = 0;\n    let paren_stack_index_index = 0;\n    let paren_stack_index_index_count\
    \ = 0;\n    let paren_stack_index_index_level = 0;\n    let paren_stack_index_index_index\
    \ = 0;\n    let paren_stack_index_index_index_count = 0;\n    let paren_stack_index_index_index_level\
    \ = 0;\n    let paren_stack_index_index_index_index = 0;\n    let paren_stack_index_index_index_index_count\
    \ = 0;\n    let paren_stack_index_index_index_index_level = 0;\n    let paren_stack_index_index_index_index_index\
    \ = 0;\n    let paren_stack_index_index_index_index_index_count = 0;\n    let\
    \ paren_stack_index_index_index_index_index_level = 0;\n    let paren_stack_index_index_index_index_index_index\
    \ = 0;\n    let paren_stack_index_index_index_index_index_index_count = 0;\n \
    \   let paren_stack_index_index_index_index_index_index_level = 0;\n    let paren_stack_index_index_index_index_index_index_index\
    \ = 0;\n    let paren_stack_index_index_index_index_index_index_index_count =\
    \ 0;\n    let paren_stack_index_index_index_index_index_index_index_level = 0;\n\
    \    let paren_stack_index_index_index_index_index_index_index_index = 0;\n  \
    \  let paren_stack_index_index_index_index_", "    let result = [];\n    let stack\
    \ = [];\n    let max_depth = 0;\n    let current_depth = 0;\n    let current_char\
    \ = \"\";\n    let current_char_index = 0;\n    let current_paren_index = 0;\n\
    \    let current_paren_count = 0;\n    let current_paren_count_index = 0;\n  \
    \  let current_paren_count_count = 0;\n    let current_paren_count_count_index\
    \ = 0;\n    let current_paren_count_count_count = 0;\n    let current_paren_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count = 0;\n    let current_paren_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count = 0;\n    let current_paren_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count = 0;\n    let\
    \ current_paren_count_count_count_count_count_count_index = 0;\n    let current_paren_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_top =\
    \ 0;\n    let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_top\
    \ = 0;\n    let paren_count_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_index = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let max_nesting = 0;\n    let current_level = 0;\n    let current_paren\
    \ = 0;\n    let paren_count = 0;\n    let paren_count_in_paren = 0;\n    let paren_count_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren = 0;\n\
    \    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren = 0;\n\
    \    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren\
    \ = 0;\n    let paren_count_in_paren_in_paren_in_paren_in_paren_in_paren_in_paren_in_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_size\
    \ = 0;\n    let paren_count_stack_size_index = 0;\n    let paren_count_stack_size_size\
    \ = 0;\n    let paren_count_stack_size_size_index = 0;\n    let paren_count_stack_size_size_size\
    \ = 0;\n    let paren_count_stack_size_size_size_index = 0;\n    let paren_count_stack_size_size_size_size\
    \ = 0;\n    let paren_count_stack_size_size_size_size_index = 0;\n    let paren_count_stack_size_size_size_size_size\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_index = 0;\n    let\
    \ paren_count_stack_size_size_size_size_size_size = 0;\n    let paren_count_stack_size_size_size_size_size_size_index\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_size_size = 0;\n  \
    \  let paren_count_stack_size_size_size_size_size_size_size_index = 0;\n    let\
    \ paren_count_stack_size_size_size_size_size_size_size_size = 0;\n    let paren_count_stack_size_size_size_size_size_size_size_size_index\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_size_size_size_size_index\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let paren_count_stack_size_size_size_size_size_size_size", "    let\
    \ result = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_level_in_count = 0;\n\
    \    let paren_level_in_count_in_level = 0;\n    let paren_level_in_count_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level = 0;\n    let\
    \ paren_level_in_count_in_level_in_level_in_level_in_level = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_level_in_stack = 0;\n    let paren_count_in_stack = 0;\n\
    \    let paren_count_in_paren_stack = 0;\n    let paren_count_in_paren_level =\
    \ 0;\n    let paren_count_in_paren_stack = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_count_in_paren_count = 0;\n    let paren_count_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_stack = 0;\n    let paren_count_in_paren_level_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_stack = 0;\n\
    \    let paren_count_in_paren_level_in_paren_level_in_paren_count = 0;\n    let\
    \ paren_count_in_paren_level_in_paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_stack\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_count\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_in_paren_level\
    \ = 0;\n    let paren_count_in_paren_level_in_paren_level_in_paren_level_", " \
    \   let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_in_level = 0;\n    let paren_level_in_count = 0;\n    let\
    \ paren_level_in_count_in_level = 0;\n    let paren_level_in_count_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level = 0;\n    let\
    \ paren_level_in_count_in_level_in_level_in_level_in_level = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_index = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_length = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_length = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_length = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max", "    let paren_stack = [];\n \
    \   let paren_count = 0;\n    let paren_depth = 0;\n    let paren_index = 0;\n\
    \    let paren_count_max = 0;\n    let paren_depth_max = 0;\n    let paren_index_max\
    \ = 0;\n    let paren_count_max_index = 0;\n    let paren_depth_max_index = 0;\n\
    \    let paren_index_max_index = 0;\n    let paren_count_max_index_max = 0;\n\
    \    let paren_depth_max_index_max = 0;\n    let paren_index_max_index_max = 0;\n\
    \    let paren_count_max_index_max_index = 0;\n    let paren_depth_max_index_max_index\
    \ = 0;\n    let paren_index_max_index_max_index = 0;\n    let paren_count_max_index_max_index_max\
    \ = 0;\n    let paren_depth_max_index_max_index_max = 0;\n    let paren_index_max_index_max_index_max\
    \ = 0;\n    let paren_count_max_index_max_index_max_index = 0;\n    let paren_depth_max_index_max_index_max_index\
    \ = 0;\n    let paren_index_max_index_max_index_max_index = 0;\n    let paren_count_max_index_max_index_max_index_max\
    \ = 0;\n    let paren_depth_max_index_max_index_max_index_max = 0;\n    let paren_index_max_index_max_index_max_index_max\
    \ = 0;\n    let paren_count_max_index_max_index_max_index_max_index = 0;\n   \
    \ let paren_depth_max_index_max_index_max_index_max_index = 0;\n    let paren_index_max_index_max_index_max_index_max_index\
    \ = 0;\n    let paren_count_max_index_max_index_max_", "    let paren_stack =\
    \ [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_level_in_stack = 0;\n    let paren_count_in_stack = 0;\n\
    \    let paren_level_in_paren_stack = 0;\n    let paren_count_in_paren_stack =\
    \ 0;\n    let paren_level_in_paren_stack = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_paren_level\
    \ = 0;\n    let paren_level_in_paren_level = 0;\n    let paren_count_in_", " \
    \   let paren_stack = [];\n    let current_level = 0;\n    let max_level = 0;\n\
    \    let max_level_index = 0;\n    let paren_count = 0;\n    let i = 0;\n    let\
    \ j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n   \
    \ let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n\
    \    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\
    \    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n\
    \    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n\
    \    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_top =\
    \ 0;\n    let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_top\
    \ = 0;\n    let paren_count_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_index = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let max_nesting\
    \ = 0;\n    let paren_count = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_length = 0;\n    let paren_count_stack_max_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length = 0;\n    let paren_count_stack_max_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length = 0;\n    let paren_count_stack_max_length_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length = 0;\n    let\
    \ paren_count_stack_max_length_length_length_length_index = 0;\n    let paren_count_stack_max_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_count_stack_max_length_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_count_stack_max_length", "    let paren_stack = [];\n  \
    \  let current_level = 0;\n    let max_level = 0;\n    let max_index = 0;\n  \
    \  let current_index = 0;\n    let current_char = \"\";\n    let current_char_index\
    \ = 0;\n    let next_char_index = 0;\n    let next_char = \"\";\n    let next_char_index\
    \ = 0;\n    let next_char_next_index = 0;\n    let next_char_next = \"\";\n  \
    \  let next_char_next_index = 0;\n    let next_char_next_next_index = 0;\n   \
    \ let next_char_next_next = \"\";\n    let next_char_next_next_next_index = 0;\n\
    \    let next_char_next_next_next = \"\";\n    let next_char_next_next_next_next_index\
    \ = 0;\n    let next_char_next_next_next_next = \"\";\n    let next_char_next_next_next_next_next_index\
    \ = 0;\n    let next_char_next_next_next_next_next = \"\";\n    let next_char_next_next_next_next_next_next_index\
    \ = 0;\n    let next_char_next_next_next_next_next_next = \"\";\n    let next_char_next_next_next_next_next_next_next_index\
    \ = 0;\n    let next_char_next_next_next_next_next_next_next = \"\";\n    let\
    \ next_char_next_next_next_next_next_next_next_next_index = 0;\n    let next_char_next_next_next_next_next_next_next_next\
    \ = \"\";\n    let next_char_next_next_next_next_next_next_next_next_next_index\
    \ = 0;\n    let next_char_next_next_next_next_next_next_next_next_next = \"\"\
    ;\n    let next_char_next_next_next_next_next_next_next_next_next_next_index =\
    \ 0;\n    let next_char_next_next_next_", "    let paren_stack = [];\n    let\
    \ current_level = 0;\n    let max_level = 0;\n    let paren_count = 0;\n    let\
    \ paren_count_in_level = 0;\n    let paren_count_in_next_level = 0;\n    let paren_count_in_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_level = 0;\n \
    \   let paren_count_in_next_next_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let stack = [];\n\
    \    let current_level = 0;\n    let current_group = 0;\n    let current_paren\
    \ = 0;\n    let current_paren_count = 0;\n    let current_paren_level = 0;\n \
    \   let current_paren_count_level = 0;\n    let current_paren_count_level_stack\
    \ = [];\n    let current_paren_count_level_stack_index = 0;\n    let current_paren_count_level_stack_length\
    \ = 0;\n    let current_paren_count_level_stack_length_stack = [];\n    let current_paren_count_level_stack_length_stack_index\
    \ = 0;\n    let current_paren_count_level_stack_length_stack_length = 0;\n   \
    \ let current_paren_count_level_stack_length_stack_length_stack = [];\n    let\
    \ current_paren_count_level_stack_length_stack_length_stack_index = 0;\n    let\
    \ current_paren_count_level_stack_length_stack_length_stack_length = 0;\n    let\
    \ current_paren_count_level_stack_length_stack_length_stack_length_stack = [];\n\
    \    let current_paren_count_level_stack_length_stack_length_stack_length_stack_index\
    \ = 0;\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length\
    \ = 0;\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length_stack\
    \ = [];\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length_stack_index\
    \ = 0;\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length_stack_length\
    \ = 0;\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length_stack_length_stack\
    \ = [];\n    let current_paren_count_level_stack_length_stack_length_stack_length_stack_length_stack_length_stack_index\
    \ = 0;\n    let current_paren_count", "    let result = [];\n    let stack = [];\n\
    \    let level = 0;\n    let paren_count = 0;\n    let paren_index = 0;\n    let\
    \ paren_length = paren_string.length;\n    let paren_char = paren_string[paren_index];\n\
    \    let paren_char_length = paren_char.length;\n    let paren_char_index = 0;\n\
    \    let paren_char_char = paren_char[paren_char_index];\n    let paren_char_char_length\
    \ = paren_char_char.length;\n    let paren_char_char_index = 0;\n    let paren_char_char_char\
    \ = paren_char_char[paren_char_char_index];\n    let paren_char_char_char_length\
    \ = paren_char_char_char.length;\n    let paren_char_char_char_index = 0;\n  \
    \  let paren_char_char_char_char = paren_char_char_char[paren_char_char_char_index];\n\
    \    let paren_char_char_char_char_length = paren_char_char_char_char.length;\n\
    \    let paren_char_char_char_char_index = 0;\n    let paren_char_char_char_char_char\
    \ = paren_char_char_char_char[paren_char_char_char_char_index];\n    let paren_char_char_char_char_char_length\
    \ = paren_char_char_char_char_char.length;\n    let paren_char_char_char_char_char_index\
    \ = 0;\n    let paren_char_char_char_char_char_char = paren_char_char_char_char_char[paren_char_char_char_char_char_index];\n\
    \    let paren_char_char_char_char_char_char_length = paren_char_char_char_char_char_char.length;\n\
    \    let paren_char_char_char_char_char_char_index = 0;\n    let paren_char_char_char_char",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_value = 0;\n    let paren_count_stack_max_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value = 0;\n    let paren_count_stack_max_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_max_value_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value", "    let paren_stack = [];\n   \
    \ let max_nesting = 0;\n    let current_level = 0;\n    let paren_count = 0;\n\
    \    let paren_string_length = paren_string.length;\n    let i = 0;\n    while\
    \ (i < paren_string_length) {\n        if (paren_string[i] === '(') {\n      \
    \      paren_stack.push(i);\n            paren_count++;\n        } else if (paren_string[i]\
    \ === ')') {\n            if (paren_count === 0) {\n                throw new\
    \ Error(\"Invalid parentheses string\");\n            }\n            paren_count--;\n\
    \            if (paren_count === 0) {\n                current_level++;\n    \
    \            if (current_level > max_nesting) {\n                    max_nesting\
    \ = current_level;\n                }\n            }\n            i = paren_stack.pop();\n\
    \        }\n        i++;\n    }\n    if (paren_count !== 0) {\n        throw new\
    \ Error(\"Invalid parentheses string\");\n    }\n    return max_nesting;\n}\n",
  "    let result = [];\n    let stack = [];\n    let current_level = 0;\n    let\
    \ current_paren_level = 0;\n    let current_paren_count = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_string_length = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_index_end\
    \ = 0;\n    let current_paren_string_length_index_end = 0;\n    let current_paren_string_index_start\
    \ = 0;\n    let current_paren_string_length_index_start = 0;\n    let current_paren_string_index_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_end = 0;\n    let current_paren_string_index_start_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end = 0;\n    let\
    \ current_paren_string_index_start_end_end_end = 0;\n    let current_paren_string_length_index_start_end_end_end\
    \ = 0;\n    let current_paren_string_index_start_end_end_end_end = 0;\n    let\
    \ current_paren_string_length_index_start_end_end_end_end = 0;\n    let current_paren_string_index_start_end_end_end_end_end\
    \ = 0;\n    let current_paren_string_length_index_start_end_end_end_end_end =\
    \ 0;\n    let current_paren_string_index_start_end_end_end_end_end_end = 0;\n\
    \    let current_paren_string_length_index_start_end_end_end_end_end_end = 0;\n\
    \    let current_paren_string_index_start_end_end_end_end_end_end_end = 0;\n \
    \   let current_paren_string_length_index_start_end_end_end_end_end_end_end =\
    \ 0;\n    let current_paren_string_index_start_end_end_end", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_count_in_next_level = 0;\n    let paren_count_in_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_level = 0;\n \
    \   let paren_count_in_next_next_next_next_next_next_next_next_next_level = 0;\n\
    \    let paren_count_in_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_", "    let paren_stack\
    \ = [];\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_paren\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_count = 0;\n\
    \    let current_paren_string_count = 0;\n    let current_paren_string_count_end\
    \ = 0;\n    let current_paren_string_count_start = 0;\n    let current_paren_string_count_start_end\
    \ = 0;\n    let current_paren_string_count_start_start = 0;\n    let current_paren_string_count_start_start_end\
    \ = 0;\n    let current_paren_string_count_start_start_start = 0;\n    let current_paren_string_count_start_start_start_end\
    \ = 0;\n    let current_paren_string_count_start_start_start_start = 0;\n    let\
    \ current_paren_string_count_start_start_start_start_end = 0;\n    let current_paren_string_count_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_end =\
    \ 0;\n    let current_paren_string_count_start_start_start_start_start_start =\
    \ 0;\n    let current_paren_string_count_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_count_start_start_start_start_start_start_start_start",
  "    let result = [];\n    let stack = [];\n    let level = 0;\n    let paren_count\
    \ = 0;\n    let paren_index = 0;\n    let paren_length = paren_string.length;\n\
    \    let paren_char = paren_string[paren_index];\n    let paren_char_length =\
    \ paren_char.length;\n    let paren_char_index = 0;\n    let paren_char_char =\
    \ paren_char[paren_char_index];\n    while (paren_index < paren_length) {\n  \
    \      if (paren_char_index < paren_char_length) {\n            if (paren_char_char\
    \ === '(') {\n                stack.push(paren_char_index);\n                paren_count\
    \ += 1;\n            } else if (paren_char_char === ')') {\n                if\
    \ (stack.length > 0) {\n                    stack.pop();\n                   \
    \ paren_count -= 1;\n                }\n            }\n            paren_char_index\
    \ += 1;\n        } else {\n            if (stack.length > 0) {\n             \
    \   stack.pop();\n                paren_count -= 1;\n            }\n         \
    \   paren_char_index = 0;\n        }\n        if (paren_count === 0) {\n     \
    \       result.push(level);\n            level = 0;\n        } else {\n      \
    \      level += 1;\n        }\n        paren_index += 1;\n    }\n    return result;\n\
    }\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_index = 0;\n    let paren_string_length = paren_string.length;\n\
    \    let paren_string_index = 0;\n    let paren_string_index_prev = 0;\n    let\
    \ paren_string_index_next = 0;\n    let paren_string_index_next_prev = 0;\n  \
    \  let paren_string_index_next_next = 0;\n    let paren_string_index_next_next_prev\
    \ = 0;\n    let paren_string_index_next_next_next = 0;\n    let paren_string_index_next_next_next_prev\
    \ = 0;\n    let paren_string_index_next_next_next_next = 0;\n    let paren_string_index_next_next_next_next_prev\
    \ = 0;\n    let paren_string_index_next_next_next_next_next = 0;\n    let paren_string_index_next_next_next_next_next_prev\
    \ = 0;\n    let paren_string_index_next_next_next_next_next_next = 0;\n    let\
    \ paren_string_index_next_next_next_next_next_next_prev = 0;\n    let paren_string_index_next_next_next_next_next_next_next\
    \ = 0;\n    let paren_string_index_next_next_next_next_next_next_next_prev = 0;\n\
    \    let paren_string_index_next_next_next_next_next_next_next_next = 0;\n   \
    \ let paren_string_index_next_next_next_next_next_next_next_next_prev = 0;\n \
    \   let paren_string_index_next_next_next_next_next_next_next_next_next = 0;\n\
    \    let paren_string_index_next_next_next_next_next_next_next_next_next_prev\
    \ = 0;\n    let paren_string_index_next_next_next_next", "    let result = [];\n\
    \    let stack = [];\n    let max_depth = 0;\n    let current_depth = 0;\n   \
    \ let current_char = \"\";\n    let current_char_index = 0;\n    let current_paren_index\
    \ = 0;\n    let current_paren_count = 0;\n    let current_paren_count_index =\
    \ 0;\n    let current_paren_count_count = 0;\n    let current_paren_count_count_index\
    \ = 0;\n    let current_paren_count_count_count = 0;\n    let current_paren_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count = 0;\n    let current_paren_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count = 0;\n    let current_paren_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count = 0;\n    let\
    \ current_paren_count_count_count_count_count_count_index = 0;\n    let current_paren_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let current_paren_count_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_value = 0;\n    let paren_count_stack_max_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value = 0;\n    let paren_count_stack_max_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_max_value_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value", "  let paren_stack = [];\n  let\
    \ paren_count = 0;\n  let paren_level = 0;\n  let paren_count_stack = [];\n  let\
    \ paren_count_stack_index = 0;\n  let paren_count_stack_length = 0;\n  let paren_count_stack_max\
    \ = 0;\n  let paren_count_stack_max_index = 0;\n  let paren_count_stack_max_length\
    \ = 0;\n  let paren_count_stack_max_length_index = 0;\n  let paren_count_stack_max_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_index = 0;\n  let paren_count_stack_max_length_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_length_index = 0;\n  let paren_count_stack_max_length_length_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_index = 0;\n \
    \ let paren_count_stack_max_length_length_length_length_length = 0;\n  let paren_count_stack_max_length_length_length_length_length_index\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_length_length\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_count_stack_max_length_length_length_length_length_length_length_length_length\
    \ = 0", "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_level\
    \ = 0;\n    let current_paren = 0;\n    let current_paren_count = 0;\n    let\
    \ paren_count = 0;\n    let paren_string_length = paren_string.length;\n    for\
    \ (let i = 0; i < paren_string_length; i++) {\n        if (paren_string[i] ===\
    \ '(') {\n            paren_stack.push(i);\n            current_paren_count++;\n\
    \            current_level++;\n            if (current_level > max_nesting) {\n\
    \                max_nesting = current_level;\n            }\n        } else if\
    \ (paren_string[i] === ')') {\n            current_paren_count--;\n          \
    \  if (current_paren_count === 0) {\n                current_level--;\n      \
    \          paren_stack.pop();\n                paren_count++;\n            }\n\
    \        }\n    }\n    return [max_nesting, paren_count];\n}\n", "    let paren_stack\
    \ = [];\n    let current_level = 0;\n    let max_level = 0;\n    let current_paren_count\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_count_string\
    \ = \"\";\n    let current_paren_count_string_length = 0;\n    let current_paren_count_string_index\
    \ = 0;\n    let current_paren_count_string_index_end = 0;\n    let current_paren_count_string_index_start\
    \ = 0;\n    let current_paren_count_string_index_start_end = 0;\n    let current_paren_count_string_index_start_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end = 0;\n    let\
    \ current_paren_count_string_index_start_end_end_end_end = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_end_end_end_end_end_end\
    \ = 0;\n    let current_paren_count_string_index_start_end_end_end_end_end_end_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_top =\
    \ 0;\n    let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_top\
    \ = 0;\n    let paren_count_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_index = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top_top_top_top_top_top", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_count_stack = [];\n    let max_nesting\
    \ = 0;\n    let max_nesting_stack = [];\n    let current_nesting = 0;\n    let\
    \ current_nesting_stack = [];\n    let current_paren_count = 0;\n    let current_paren_count_stack\
    \ = [];\n    let current_paren_stack = [];\n    let current_paren_stack_stack\
    \ = [];\n    let current_paren_stack_count = 0;\n    let current_paren_stack_count_stack\
    \ = [];\n    let current_paren_stack_count_stack_stack = [];\n    let current_paren_stack_count_stack_count\
    \ = 0;\n    let current_paren_stack_count_stack_count_stack = [];\n    let current_paren_stack_count_stack_count_stack_count\
    \ = 0;\n    let current_paren_stack_count_stack_count_stack_count_stack = [];\n\
    \    let current_paren_stack_count_stack_count_stack_count_stack_count = 0;\n\
    \    let current_paren_stack_count_stack_count_stack_count_stack_count_stack =\
    \ [];\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count\
    \ = 0;\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count_stack\
    \ = [];\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count\
    \ = 0;\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count_stack\
    \ = [];\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count\
    \ = 0;\n    let current_paren_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count_stack_count_stack\
    \ = [];\n    let current_paren_stack_count_stack_count_stack_count_stack_count_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let max_depth\
    \ = 0;\n    let current_depth = 0;\n    let current_index = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_string_length = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_length_index_end\
    \ = 0;\n    let current_paren_string_length_index_start = 0;\n    let current_paren_string_length_index_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start = 0;\n    let current_paren_string_length_index_start_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start_start = 0;\n   \
    \ let current_paren_string_length_index_start_start_start_end = 0;\n    let current_paren_string_length_index_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_index_start_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string", "    let paren_stack = [];\n    let current_level\
    \ = 0;\n    let max_level = 0;\n    let paren_count = 0;\n    let paren_index\
    \ = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_level_stack\
    \ = [];\n    let paren_count_in_level_stack_index = 0;\n    let paren_count_in_level_stack_stack\
    \ = [];\n    let paren_count_in_level_stack_stack_index = 0;\n    let paren_count_in_level_stack_stack_stack\
    \ = [];\n    let paren_count_in_level_stack_stack_stack_index = 0;\n    let paren_count_in_level_stack_stack_stack_stack\
    \ = [];\n    let paren_count_in_level_stack_stack_stack_stack_index = 0;\n   \
    \ let paren_count_in_level_stack_stack_stack_stack_stack = [];\n    let paren_count_in_level_stack_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_in_level_stack_stack_stack_stack_stack_stack = [];\n\
    \    let paren_count_in_level_stack_stack_stack_stack_stack_stack_index = 0;\n\
    \    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack = [];\n\
    \    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_in_level_stack_stack_stack_stack_stack_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_in_level", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_start = 0;\n    let paren_end\
    \ = 0;\n    let paren_count_start = 0;\n    let paren_count_end = 0;\n    let\
    \ paren_count_start_end = 0;\n    let paren_count_start_end_start = 0;\n    let\
    \ paren_count_start_end_end = 0;\n    let paren_count_start_end_start_end = 0;\n\
    \    let paren_count_start_end_end_start = 0;\n    let paren_count_start_end_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start = 0;\n    let paren_count_start_end_end_start_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start_end = 0;\n    let paren_count_start_end_end_start_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start_end_start = 0;\n    let\
    \ paren_count_start_end_end_start_end_end_start = 0;\n    let paren_count_start_end_start_end_start_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start_end_start_end = 0;\n   \
    \ let paren_count_start_end_start_end_start_end_end_start = 0;\n    let paren_count_start_end_start_end_start_end_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start_end_start_end = 0;\n   \
    \ let paren_count_start_end_start_end_start_end_end_start = 0;\n    let paren_count_start_end_start_end_start_end_end_end\
    \ = 0;\n    let paren_count_start_end_start_end_start_end_start_end = 0;", " \
    \   let result = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_index\
    \ = 0;\n    let paren_depth = 0;\n    let paren_char = \"\";\n    let paren_char_count\
    \ = 0;\n    let paren_char_index = 0;\n    let paren_char_depth = 0;\n    let\
    \ paren_char_stack = [];\n    let paren_char_stack_index = 0;\n    let paren_char_stack_count\
    \ = 0;\n    let paren_char_stack_depth = 0;\n    let paren_char_stack_char = \"\
    \";\n    let paren_char_stack_char_count = 0;\n    let paren_char_stack_char_index\
    \ = 0;\n    let paren_char_stack_char_depth = 0;\n    let paren_char_stack_char_stack\
    \ = [];\n    let paren_char_stack_char_stack_index = 0;\n    let paren_char_stack_char_stack_count\
    \ = 0;\n    let paren_char_stack_char_stack_depth = 0;\n    let paren_char_stack_char_stack_char\
    \ = \"\";\n    let paren_char_stack_char_stack_char_count = 0;\n    let paren_char_stack_char_stack_char_index\
    \ = 0;\n    let paren_char_stack_char_stack_char_depth = 0;\n    let paren_char_stack_char_stack_char_stack\
    \ = [];\n    let paren_char_stack_char_stack_char_stack_index = 0;\n    let paren_char_stack_char_stack_char_stack_count\
    \ = 0;\n    let paren_char_stack_char_stack_char_stack_depth = 0;\n    let paren_char_stack_char_stack_char_stack_char\
    \ = \"\";\n    let paren_char_stack_char_stack_char_stack_char_count = 0;\n  \
    \  let paren_char_stack_char_stack_char_stack_char_index = 0;\n    let paren_char_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_value = 0;\n    let paren_count_stack_max_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value = 0;\n    let paren_count_stack_max_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_max_value_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value", "    let paren_stack = [];\n   \
    \ let paren_count = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n\
    \    let current_paren = 0;\n    let current_paren_count = 0;\n    let current_paren_string\
    \ = \"\";\n    let current_paren_string_count = 0;\n    let current_paren_string_index\
    \ = 0;\n    let current_paren_string_length = 0;\n    let current_paren_string_length_count\
    \ = 0;\n    let current_paren_string_length_index = 0;\n    let current_paren_string_length_length\
    \ = 0;\n    let current_paren_string_length_length_count = 0;\n    let current_paren_string_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length = 0;\n    let current_paren_string_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length = 0;\n    let current_paren_string_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_index = 0;\n\
    \    let current_paren_string_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_count = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_index = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length = 0;\n    let\
    \ current_paren_string_length_length_length_length_length_length_count = 0;\n\
    \    let current_paren_string_length_length_length_length_length_length_index\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length\
    \ = 0;\n    let current_paren_string_length_length_length_length_length_length_length_count\
    \ = 0;\n    let current_paren_string_length_length_length_length_", "    let result\
    \ = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level =\
    \ 0;\n    let paren_stack = [];\n    let paren_stack_count = 0;\n    let paren_stack_level\
    \ = 0;\n    let paren_stack_index = 0;\n    let paren_stack_string = \"\";\n \
    \   let paren_stack_string_count = 0;\n    let paren_stack_string_index = 0;\n\
    \    let paren_stack_string_string = \"\";\n    let paren_stack_string_string_count\
    \ = 0;\n    let paren_stack_string_string_index = 0;\n    let paren_stack_string_string_string\
    \ = \"\";\n    let paren_stack_string_string_string_count = 0;\n    let paren_stack_string_string_string_index\
    \ = 0;\n    let paren_stack_string_string_string_string = \"\";\n    let paren_stack_string_string_string_string_count\
    \ = 0;\n    let paren_stack_string_string_string_string_index = 0;\n    let paren_stack_string_string_string_string_string\
    \ = \"\";\n    let paren_stack_string_string_string_string_string_count = 0;\n\
    \    let paren_stack_string_string_string_string_string_index = 0;\n    let paren_stack_string_string_string_string_string_string\
    \ = \"\";\n    let paren_stack_string_string_string_string_string_string_count\
    \ = 0;\n    let paren_stack_string_string_string_string_string_string_index =\
    \ 0;\n    let paren_stack_string_string_string_string_string_string_string = \"\
    \";\n    let paren_stack_string_string_string_string_string_string_string_count\
    \ = 0;\n    let paren_stack_string_string_string_string_string_string_string_index\
    \ = 0;\n    let paren_stack_string_string_string_string_string_string_string_string\
    \ = \"\";\n    let p", "    let paren_stack = [];\n    let paren_count = 0;\n\
    \    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_length = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_length = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_length = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_length", "    let\
    \ paren_stack = [];\n    let max_nesting = 0;\n    let paren_count = 0;\n    let\
    \ paren_index = 0;\n    let paren_length = paren_string.length;\n    let paren_char\
    \ = paren_string[paren_index];\n    while (paren_index < paren_length) {\n   \
    \     if (paren_char === '(') {\n            paren_stack.push(paren_count);\n\
    \            paren_count++;\n        } else if (paren_char === ')') {\n      \
    \      paren_count--;\n            if (paren_stack.length === 0) {\n         \
    \       throw new Error(\"Invalid parentheses\");\n            }\n           \
    \ paren_count = paren_stack.pop();\n        }\n        paren_index++;\n      \
    \  paren_char = paren_string[paren_index];\n    }\n    if (paren_stack.length\
    \ > 0) {\n        throw new Error(\"Invalid parentheses\");\n    }\n    return\
    \ paren_count;\n}\n", "    let paren_stack = [];\n    let max_nesting = 0;\n \
    \   let current_nesting = 0;\n    let paren_count = 0;\n    let paren_index =\
    \ 0;\n    let paren_char = '';\n    let paren_char_count = 0;\n    let paren_char_index\
    \ = 0;\n    let paren_char_count_max = 0;\n    let paren_char_count_min = 0;\n\
    \    let paren_char_count_diff = 0;\n    let paren_char_count_diff_max = 0;\n\
    \    let paren_char_count_diff_min = 0;\n    let paren_char_count_diff_diff =\
    \ 0;\n    let paren_char_count_diff_diff_max = 0;\n    let paren_char_count_diff_diff_min\
    \ = 0;\n    let paren_char_count_diff_diff_diff = 0;\n    let paren_char_count_diff_diff_diff_max\
    \ = 0;\n    let paren_char_count_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_max = 0;\n    let paren_char_count_diff_diff_diff_diff_min\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_max\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff_max = 0;\n    let\
    \ paren_char_count_diff_diff_diff_diff_diff_diff_min = 0;\n    let paren_char_count_diff_diff_diff_diff_diff_diff_diff\
    \ = 0;\n    let paren_char_count_", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_in_level = 0;\n    let paren_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_level = 0;\n    let paren_level_in_count_in_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level = 0;\n    let\
    \ paren_level_in_count_in_level_in_count_in_level_in_count = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_count_in_level_in_count_in_level_in_count_in_",
  "    let result = [];\n    let current_level = 0;\n    let current_group = 0;\n\
    \    let current_paren = 0;\n    let paren_stack = [];\n    let paren_count =\
    \ 0;\n    let paren_string_length = paren_string.length;\n    for (let i = 0;\
    \ i < paren_string_length; i++) {\n        if (paren_string[i] === '(') {\n  \
    \          current_group++;\n            current_paren++;\n        } else if (paren_string[i]\
    \ === ')') {\n            current_group--;\n            current_paren--;\n   \
    \     } else if (paren_string[i] === ' ') {\n            if (current_level ===\
    \ 0) {\n                result.push(current_paren);\n            } else {\n  \
    \              current_level--;\n            }\n        } else {\n           \
    \ current_level++;\n        }\n    }\n    return result;\n}\n", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_value\
    \ = 0;\n    let paren_count_stack_max_value_index = 0;\n    let paren_count_stack_max_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_index = 0;\n    let paren_count_stack_max_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_index = 0;\n    let paren_count_stack_max_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_index = 0;\n   \
    \ let paren_count_stack_max_value_value_value_value_value = 0;\n    let paren_count_stack_max_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_index = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_value = 0;\n\
    \    let paren_count_stack_max_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_max_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_max_value", "    let paren_stack = [];\n   \
    \ let paren_count = 0;\n    let paren_depth = 0;\n    let paren_count_stack =\
    \ [];\n    let paren_depth_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_depth_stack_index = 0;\n    let paren_count_stack_top = 0;\n  \
    \  let paren_depth_stack_top = 0;\n    let paren_count_stack_top_index = 0;\n\
    \    let paren_depth_stack_top_index = 0;\n    let paren_count_stack_top_top =\
    \ 0;\n    let paren_depth_stack_top_top = 0;\n    let paren_count_stack_top_top_index\
    \ = 0;\n    let paren_depth_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_depth_stack_top_top_top = 0;\n    let paren_count_stack_top_top_top_index\
    \ = 0;\n    let paren_depth_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_depth_stack_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_index\
    \ = 0;\n    let paren_depth_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_depth_stack_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_index\
    \ = 0;\n    let paren_depth_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_depth_stack_top_top_top_top_top_top = 0;\n    let paren_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_count_stack\
    \ = [];\n    let max_nesting = 0;\n    let max_nesting_stack = [];\n    let current_nesting\
    \ = 0;\n    let current_nesting_stack = [];\n    let current_paren_count = 0;\n\
    \    let current_paren_count_stack = [];\n    let current_paren_stack = [];\n\
    \    let current_paren_stack_stack = [];\n    let current_paren_string = \"\"\
    ;\n    let current_paren_string_stack = [];\n    let current_paren_string_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack = [];\n    let current_paren_string_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack = [];\n  \
    \  let current_paren_string_stack_stack_stack_stack_stack_stack = [];\n    let\
    \ current_paren_string_stack_stack_stack_stack_stack_stack_stack = [];\n    let\
    \ current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack = [];\n\
    \    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_stack_stack_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let current_paren_string_stack_", "    let paren_stack = [];\n  \
    \  let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack =\
    \ [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max = 0;\n\
    \    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max =\
    \ 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let stack = [];\n\
    \    let current_level = 0;\n    let current_paren_count = 0;\n    let current_paren_count_in_level\
    \ = 0;\n    let current_paren_count_in_level_in_stack = 0;\n    let current_paren_count_in_level_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack = 0;\n\
    \    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack = 0;\n\
    \    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let current_paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_",
  "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_level = 0;\n\
    \    let current_paren_string = \"\";\n    let current_paren_string_length = 0;\n\
    \    let current_paren_string_index = 0;\n    let current_paren_string_index_end\
    \ = 0;\n    let current_paren_string_index_start = 0;\n    let current_paren_string_length_end\
    \ = 0;\n    let current_paren_string_length_start = 0;\n    let current_paren_string_length_start_end\
    \ = 0;\n    let current_paren_string_length_start_start = 0;\n    let current_paren_string_length_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start = 0;\n    let current_paren_string_length_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start = 0;\n   \
    \ let current_paren_string_length_start_start_start_start_end = 0;\n    let current_paren_string_length_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_start_end\
    \ = 0;\n    let current_paren_string_length_start_start_start_start_start_start_start_start_start\
    \ = 0;\n    let current", "    let result = [];\n    let stack = [];\n    let\
    \ paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level = 0;\n\
    \    let paren_level_in_count = 0;\n    let paren_level_in_count_in_level = 0;\n\
    \    let paren_level_in_count_in_level_in_level = 0;\n    let paren_level_in_count_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level = 0;\n\
    \    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level = 0;\n\
    \    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level_in_level\
    \ = 0;\n    let paren_level_in_count_in_level_in_level_in_level_in_level_in_level_in_level",
  "    let result = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_index = 0;\n    let paren_char = \"\";\n    let paren_char_count\
    \ = 0;\n    let paren_char_index = 0;\n    let paren_char_count_prev = 0;\n  \
    \  let paren_char_index_prev = 0;\n    let paren_char_count_next = 0;\n    let\
    \ paren_char_index_next = 0;\n    let paren_char_count_next_prev = 0;\n    let\
    \ paren_char_index_next_prev = 0;\n    let paren_char_count_next_next = 0;\n \
    \   let paren_char_index_next_next = 0;\n    let paren_char_count_next_next_prev\
    \ = 0;\n    let paren_char_index_next_next_prev = 0;\n    let paren_char_count_next_next_next\
    \ = 0;\n    let paren_char_index_next_next_next = 0;\n    let paren_char_count_next_next_next_prev\
    \ = 0;\n    let paren_char_index_next_next_next_prev = 0;\n    let paren_char_count_next_next_next_next\
    \ = 0;\n    let paren_char_index_next_next_next_next = 0;\n    let paren_char_count_next_next_next_next_prev\
    \ = 0;\n    let paren_char_index_next_next_next_next_prev = 0;\n    let paren_char_count_next_next_next_next_next\
    \ = 0;\n    let paren_char_index_next_next_next_next_next = 0;\n    let paren_char_count_next_next_next_next_next_prev\
    \ = 0;\n    let paren_char_index_next_next_next_next_next_prev = 0;\n    let paren_char_count_next_next_next_next_next_next\
    \ = 0;\n    let paren", "    let paren_stack = [];\n    let paren_count = 0;\n\
    \    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_level_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_level_stack_index\
    \ = 0;\n    let paren_count_stack_stack = [];\n    let paren_level_stack_stack\
    \ = [];\n    let paren_count_stack_stack_index = 0;\n    let paren_level_stack_stack_index\
    \ = 0;\n    let paren_count_stack_stack_stack = [];\n    let paren_level_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_index = 0;\n    let paren_level_stack_stack_stack_index\
    \ = 0;\n    let paren_count_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack_index = 0;\n    let paren_level_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_stack_stack_stack_stack_stack = [];\n    let paren_level_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_count_stack_stack_stack_stack_stack_index = 0;\n    let\
    \ paren_level_stack_stack_stack_stack_stack_index = 0;\n    let paren_count_stack_stack_stack_stack_stack_stack\
    \ = [];\n    let paren_level_stack_stack_stack_stack_stack_stack = [];\n    let\
    \ paren_count_stack_stack_stack_stack_stack_stack_index = 0;\n    let paren_level_stack_stack_stack_stack_stack_stack_index\
    \ = 0;\n    let paren_count_stack_stack_stack_stack_stack_stack_stack = [];\n\
    \    let paren_level_stack_stack_stack_stack_stack_stack_stack_index = 0;\n  \
    \  let paren_count_stack_stack_stack_stack", "    let paren_stack = [];\n    let\
    \ max_nesting = 0;\n    for (let i = 0; i < paren_string.length; i++) {\n    \
    \    if (paren_string[i] === '(') {\n            paren_stack.push(i);\n      \
    \  } else if (paren_string[i] === ')') {\n            if (paren_stack.length ===\
    \ 0) {\n                throw new Error(\"Invalid input\");\n            }\n \
    \           let level = paren_stack.pop();\n            if (level > max_nesting)\
    \ {\n                max_nesting = level;\n            }\n        }\n    }\n \
    \   if (paren_stack.length > 0) {\n        throw new Error(\"Invalid input\");\n\
    \    }\n    return max_nesting;\n}\n", "    let paren_stack = [];\n    let current_level\
    \ = 0;\n    let max_level = 0;\n    let i = 0;\n    let j = 0;\n    let paren_count\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max", "    let paren_stack\
    \ = [];\n    let paren_count = 0;\n    let paren_count_stack = [];\n    let max_nesting\
    \ = 0;\n    let max_nesting_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    ", "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting\
    \ = 0;\n    let current_paren_string = \"\";\n    let current_paren_index = 0;\n\
    \    let current_paren_count = 0;\n    let current_paren_char = \"\";\n    let\
    \ current_paren_char_count = 0;\n    let current_paren_char_index = 0;\n    let\
    \ current_paren_char_count_index = 0;\n    let current_paren_char_count_index_count\
    \ = 0;\n    let current_paren_char_count_index_count_index = 0;\n    let current_paren_char_count_index_count_index_count\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index = 0;\n\
    \    let current_paren_char_count_index_count_index_count_index_count = 0;\n \
    \   let current_paren_char_count_index_count_index_count_index_count_index = 0;\n\
    \    let current_paren_char_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0;\n    let current_paren_char_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0", "    let paren_stack = [];\n    let paren_count = 0;\n    let max_nesting\
    \ = 0;\n    let current_level = 0;\n    let current_paren = 0;\n    let paren_count_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max", "    let\
    \ result = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_stack = [];\n    let paren_stack_count = 0;\n    let paren_stack_level\
    \ = 0;\n    let paren_stack_count_max = 0;\n    let paren_stack_level_max = 0;\n\
    \    let paren_stack_count_min = 0;\n    let paren_stack_level_min = 0;\n    let\
    \ paren_stack_count_min_max = 0;\n    let paren_stack_level_min_max = 0;\n   \
    \ let paren_stack_count_min_max_min = 0;\n    let paren_stack_level_min_max_min\
    \ = 0;\n    let paren_stack_count_min_max_min_max = 0;\n    let paren_stack_level_min_max_min_max\
    \ = 0;\n    let paren_stack_count_min_max_min_max_min = 0;\n    let paren_stack_level_min_max_min_max_min\
    \ = 0;\n    let paren_stack_count_min_max_min_max_min_max = 0;\n    let paren_stack_level_min_max_min_max_min_max_min\
    \ = 0;\n    let paren_stack_count_min_max_min_max_min_max_min_max = 0;\n    let\
    \ paren_stack_level_min_max_min_max_min_max_min_max_min = 0;\n    let paren_stack_count_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let paren_stack_level_min_max_min_max_min_max_min_max_min_max_min\
    \ = 0;\n    let paren_stack_count_min_max_min_max_min_max_min_max_min_max_min_max\
    \ = 0;\n    let paren_stack_level_min_max_min_max_min_max_min_max_min_max_", " \
    \   let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_size = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_min\
    \ = 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_min_index\
    \ = 0;\n    let paren_count_stack_size_max = 0;\n    let paren_count_stack_size_min\
    \ = 0;\n    let paren_count_stack_size_max_index = 0;\n    let paren_count_stack_size_min_index\
    \ = 0;\n    let paren_count_stack_size_max_index_min = 0;\n    let paren_count_stack_size_min_index_max\
    \ = 0;\n    let paren_count_stack_size_max_index_min_max = 0;\n    let paren_count_stack_size_min_index_max_min\
    \ = 0;\n    let paren_count_stack_size_max_index_min_max_min = 0;\n    let paren_count_stack_size_min_index_max_min_max\
    \ = 0;\n    let paren_count_stack_size_max_index_min_max_min_max = 0;\n    let\
    \ paren_count_stack_size_min_index_max_min_max_min_max = 0;\n    let paren_count_stack_size_max_index_min_max_min_max_min_max\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min_max_min_max_min_max =\
    \ 0;\n    let paren_count_stack_size_max_index_min_max_min_max_min_max_min_max\
    \ = 0;\n    let paren_count_stack_size_min_index_max_min_max_min_max_min_max_min_max\
    \ = 0", "    let paren_stack = [];\n    let max_nesting = 0;\n    let current_nesting\
    \ = 0;\n    let current_index = 0;\n    let current_char = paren_string[current_index];\n\
    \    while (current_index < paren_string.length) {\n        if (current_char ===\
    \ \"(\") {\n            paren_stack.push(current_index);\n            current_index++;\n\
    \            current_char = paren_string[current_index];\n            current_nesting++;\n\
    \        } else if (current_char === \")\") {\n            current_index++;\n\
    \            current_char = paren_string[current_index];\n            current_nesting--;\n\
    \            if (current_nesting === 0) {\n                current_index = paren_stack.pop();\n\
    \                max_nesting = Math.max(max_nesting, current_nesting);\n     \
    \       }\n        }\n        current_index++;\n        current_char = paren_string[current_index];\n\
    \    }\n    return max_nesting;\n}\n", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let stack = [];\n\
    \    let paren_count = 0;\n    let paren_level = 0;\n    let paren_stack = [];\n\
    \    let paren_stack_count = 0;\n    let paren_stack_level = 0;\n    let paren_stack_string\
    \ = '';\n    let paren_stack_string_count = 0;\n    let paren_stack_string_level\
    \ = 0;\n    let paren_stack_string_string = '';\n    let paren_stack_string_string_count\
    \ = 0;\n    let paren_stack_string_string_level = 0;\n    let paren_stack_string_string_string\
    \ = '';\n    let paren_stack_string_string_string_count = 0;\n    let paren_stack_string_string_string_level\
    \ = 0;\n    let paren_stack_string_string_string_string = '';\n    let paren_stack_string_string_string_string_count\
    \ = 0;\n    let paren_stack_string_string_string_string_level = 0;\n    let paren_stack_string_string_string_string_string\
    \ = '';\n    let paren_stack_string_string_string_string_string_count = 0;\n \
    \   let paren_stack_string_string_string_string_string_level = 0;\n    let paren_stack_string_string_string_string_string_string\
    \ = '';\n    let paren_stack_string_string_string_string_string_string_count =\
    \ 0;\n    let paren_stack_string_string_string_string_string_string_level = 0;\n\
    \    let paren_stack_string_string_string_string_string_string_string = '';\n\
    \    let paren_stack_string_string_string_string_string_string_string_count =\
    \ 0;\n    let paren_stack_string_string_string_string_string_string_string_level\
    \ = 0;\n    let paren_stack_string_string_string_string_string_string_string_string\
    \ = '';\n    let paren_stack_string_string_string_string_", "    let paren_stack\
    \ = [];\n    let current_level = 0;\n    let max_level = 0;\n    let current_index\
    \ = 0;\n    let paren_count = 0;\n    let paren_count_in_level = 0;\n    let paren_count_in_level_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack = 0;\n\
    \    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack = 0;\n\
    \    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack\
    \ = 0;\n    let paren_count_in_level_in_stack_in_stack_in_stack_in_stack_in_stack_in_stack",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n    let\
    \ paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index = 0;\n\
    \    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let current_level\
    \ = 0;\n    let max_level = 0;\n    let paren_count = 0;\n    for (let i = 0;\
    \ i < paren_string.length; i++) {\n        if (paren_string[i] === '(') {\n  \
    \          paren_stack.push(i);\n            current_level++;\n        } else\
    \ if (paren_string[i] === ')') {\n            if (current_level === 0) {\n   \
    \             throw new Error('Invalid parentheses');\n            }\n       \
    \     paren_stack.pop();\n            current_level--;\n        } else if (paren_string[i]\
    \ === ' ') {\n            if (current_level === 0) {\n                throw new\
    \ Error('Invalid parentheses');\n            }\n        }\n        if (current_level\
    \ > max_level) {\n            max_level = current_level;\n        }\n        paren_count\
    \ += current_level;\n    }\n    if (current_level !== 0) {\n        throw new\
    \ Error('Invalid parentheses');\n    }\n    return max_level;\n}\n", "    let\
    \ paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let\
    \ paren_start = 0;\n    let paren_end = 0;\n    let paren_count_stack = [];\n\
    \    let paren_count_stack_index = 0;\n    let paren_count_stack_length = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_length = 0;\n    let paren_count_stack_max_max\
    \ = 0;\n    let paren_count_stack_max_max_index = 0;\n    let paren_count_stack_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_index = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index = 0;\n   \
    \ let paren", "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n\
    \    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index = 0;\n\
    \    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let max_nesting = 0;\n    let current_nesting = 0;\n    let current_index\
    \ = 0;\n    let current_paren_count = 0;\n    let current_paren_string = \"\"\
    ;\n    let current_paren_stack = [];\n    let current_paren_stack_index = 0;\n\
    \    let current_paren_stack_count = 0;\n    let current_paren_stack_string =\
    \ \"\";\n    let current_paren_stack_string_index = 0;\n    let current_paren_stack_string_count\
    \ = 0;\n    let current_paren_stack_string_string = \"\";\n    let current_paren_stack_string_string_index\
    \ = 0;\n    let current_paren_stack_string_string_count = 0;\n    let current_paren_stack_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_index = 0;\n    let\
    \ current_paren_stack_string_string_string_count = 0;\n    let current_paren_stack_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_index = 0;\n\
    \    let current_paren_stack_string_string_string_string_count = 0;\n    let current_paren_stack_string_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_string_index\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_count =\
    \ 0;\n    let current_paren_stack_string_string_string_string_string_string =\
    \ \"\";\n    let current_paren_stack_string_string_string_string_string_string_index\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_count\
    \ = 0;\n    let current_paren_stack_string_string_string_string_string_string_string\
    \ = \"\";\n    let current_paren_stack_string_string_string_string_string_string_string_index\
    \ = 0;\n    let current_paren_", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_top = 0;\n    let paren_count_stack_top_index\
    \ = 0;\n    let paren_count_stack_top_value = 0;\n    let paren_count_stack_top_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value = 0;\n    let paren_count_stack_top_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value = 0;\n   \
    \ let paren_count_stack_top_value_value_value_value_value_index = 0;\n    let\
    \ paren_count_stack_top_value_value_value_value_value_value = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_index\
    \ = 0;\n    let paren_count_stack_top_value_value_value_value_value_value_value_value_value\
    \ = 0;\n    let paren_count_stack_top_value", "    let result = [];\n    let stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_index\
    \ = 0;\n    let paren_string_length = paren_string.length;\n    for (let i = 0;\
    \ i < paren_string_length; i++) {\n        if (paren_string[i] === '(') {\n  \
    \          paren_count++;\n            stack.push(paren_count);\n            paren_level\
    \ = stack.length - 1;\n        } else if (paren_string[i] === ')') {\n       \
    \     paren_count--;\n            if (paren_count === 0) {\n                result.push(paren_level);\n\
    \                paren_count = stack.pop();\n                paren_level = stack.length\
    \ - 1;\n            }\n        }\n    }\n    return result;\n}\n", "    let result\
    \ = [];\n    let stack = [];\n    let current_level = 0;\n    let current_index\
    \ = 0;\n    let paren_count = 0;\n    let paren_index = 0;\n    let paren_string\
    \ = paren_string.split(\" \");\n    for (let i = 0; i < paren_string.length; i++)\
    \ {\n        if (paren_string[i] === \"(\") {\n            stack.push(paren_string[i]);\n\
    \            current_level++;\n            current_index = i;\n            paren_count++;\n\
    \        } else if (paren_string[i] === \")\") {\n            if (stack.length\
    \ > 0) {\n                stack.pop();\n                current_level--;\n   \
    \         }\n        } else if (paren_string[i] === \" \") {\n            if (stack.length\
    \ > 0 && current_level === stack[stack.length - 1]) {\n                result.push(current_index\
    \ - paren_count + 1);\n            }\n        }\n    }\n    return result;\n}\n",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_stack = [];\n    let paren_count_stack_index = 0;\n    let\
    \ paren_count_stack_length = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_min\
    \ = 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_min_index\
    \ = 0;\n    let paren_count_stack_max_length = 0;\n    let paren_count_stack_min_length\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_min_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index\
    \ = 0;\n    let paren_count_stack_max_length_index = 0;\n    let paren_count_stack_min_length_index",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_level = 0;\n\
    \    let paren_count_in_level = 0;\n    let paren_count_in_next_level = 0;\n \
    \   let paren_count_in_next_next_level = 0;\n    let paren_count_in_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_level = 0;\n    let\
    \ paren_count_in_next_next_next_next_next_next_next_level = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next_level\
    \ = 0;\n    let paren_count_in_next_next_next_next_next_", "  let paren_stack\
    \ = [];\n  let max_nesting = 0;\n  let current_nesting = 0;\n  let paren_count\
    \ = 0;\n  let i = 0;\n  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n\
    \  let n = 0;\n  let o = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s\
    \ = 0;\n  let t = 0;\n  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n\
    \  let y = 0;\n  let z = 0;\n  let a = 0;\n  let b = 0;\n  let c = 0;\n  let d\
    \ = 0;\n  let e = 0;\n  let f = 0;\n  let g = 0;\n  let h = 0;\n  let i = 0;\n\
    \  let j = 0;\n  let k = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o\
    \ = 0;\n  let p = 0;\n  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n\
    \  let u = 0;\n  let v = 0;\n  let w = 0;\n  let x = 0;\n  let y = 0;\n  let z\
    \ = 0;\n  let a = 0;\n  let b = 0;\n  let c = 0;\n  let d = 0;\n  let e = 0;\n\
    \  let f = 0;\n  let g = 0;\n  let h = 0;\n  let i = 0;\n  let j = 0;\n  let k\
    \ = 0;\n  let l = 0;\n  let m = 0;\n  let n = 0;\n  let o = 0;\n  let p = 0;\n\
    \  let q = 0;\n  let r = 0;\n  let s = 0;\n  let t = 0;\n  let u = 0;\n  let v\
    \ = 0;\n  let w = 0;\n  let x =", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_level_stack\
    \ = [];\n    let paren_count_stack_index = 0;\n    let paren_level_stack_index\
    \ = 0;\n    let paren_count_stack_index_max = 0;\n    let paren_level_stack_index_max\
    \ = 0;\n    let paren_count_stack_index_min = 0;\n    let paren_level_stack_index_min\
    \ = 0;\n    let paren_count_stack_index_min_max = 0;\n    let paren_level_stack_index_min_max\
    \ = 0;\n    let paren_count_stack_index_min_min = 0;\n    let paren_level_stack_index_min_min\
    \ = 0;\n    let paren_count_stack_index_min_min_max = 0;\n    let paren_level_stack_index_min_min_max\
    \ = 0;\n    let paren_count_stack_index_min_min_min = 0;\n    let paren_level_stack_index_min_min_min\
    \ = 0;\n    let paren_count_stack_index_min_min_min_max = 0;\n    let paren_level_stack_index_min_min_min_max\
    \ = 0;\n    let paren_count_stack_index_min_min_min_min = 0;\n    let paren_level_stack_index_min_min_min_min_max\
    \ = 0;\n    let paren_count_stack_index_min_min_min_min_min = 0;\n    let paren_level_stack_index_min_min_min_min_min_max\
    \ = 0;\n    let paren_count_stack_index_min_min_min_min_min_min = 0;\n    let\
    \ paren_level_stack_index_min_min_min_min_min_min_max = 0;\n    let paren_count_stack_index_min_min_min_min_min_min_",
  "    let paren_stack = [];\n    let max_depth = 0;\n    for (let i = 0; i < paren_string.length;\
    \ i++) {\n        if (paren_string[i] === '(') {\n            paren_stack.push(i);\n\
    \        } else if (paren_string[i] === ')') {\n            if (paren_stack.length\
    \ === 0) {\n                throw new Error(\"Mismatched parentheses\");\n   \
    \         }\n            let depth = paren_stack.pop();\n            if (depth\
    \ > max_depth) {\n                max_depth = depth;\n            }\n        }\n\
    \    }\n    if (paren_stack.length > 0) {\n        throw new Error(\"Mismatched\
    \ parentheses\");\n    }\n    return max_depth;\n}\n", "    let paren_stack =\
    \ [];\n    let paren_count = 0;\n    let max_nesting = 0;\n    let current_nesting\
    \ = 0;\n    let current_paren = 0;\n    let current_paren_count = 0;\n    let\
    \ current_paren_string = \"\";\n    let current_paren_string_count = 0;\n    let\
    \ current_paren_string_index = 0;\n    let current_paren_string_length = 0;\n\
    \    let current_paren_string_char = \"\";\n    let current_paren_string_char_count\
    \ = 0;\n    let current_paren_string_char_index = 0;\n    let current_paren_string_char_length\
    \ = 0;\n    let current_paren_string_char_index_end = 0;\n    let current_paren_string_char_count_end\
    \ = 0;\n    let current_paren_string_char_length_end = 0;\n    let current_paren_string_char_index_start\
    \ = 0;\n    let current_paren_string_char_count_start = 0;\n    let current_paren_string_char_length_start\
    \ = 0;\n    let current_paren_string_char_index_end_start = 0;\n    let current_paren_string_char_count_end_start\
    \ = 0;\n    let current_paren_string_char_length_end_start = 0;\n    let current_paren_string_char_index_end_end\
    \ = 0;\n    let current_paren_string_char_count_end_end = 0;\n    let current_paren_string_char_length_end_end\
    \ = 0;\n    let current_paren_string_char_index_start_end = 0;\n    let current_paren_string_char_count_start_end\
    \ = 0;\n    let current_paren_string_char_length_start_end = 0;\n    let current_paren_string_char_index_end_start_end\
    \ = 0;\n    let current_paren_string_char_count_end_start_end = 0;\n    let current_paren_string_char_length_end_start_end\
    \ = 0;\n    let current_paren_string_char", "    let paren_stack = [];\n    let\
    \ paren_count = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n\
    \    let paren_count_stack_index = 0;\n    let paren_count_stack_top = 0;\n  \
    \  let paren_count_stack_top_index = 0;\n    let paren_count_stack_top_top = 0;\n\
    \    let paren_count_stack_top_top_index = 0;\n    let paren_count_stack_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_index = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_index\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top = 0;\n    let\
    \ paren_count_stack_top_top_top_top_top_top_top_top_index = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top\
    \ = 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_index =\
    \ 0;\n    let paren_count_stack_top_top_top_top_top_top_top_top_top_top = 0;\n\
    \    let paren_count_stack_top_top", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_index_stack = [];\n    let paren_count_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max = 0;\n    let paren_count_stack_max_index_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack = [];\n    let\
    \ paren_count_stack_max_index_stack_max_index_stack_index = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index =\
    \ 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack\
    \ = [];\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack\
    \ = [];\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack_index\
    \ = 0;\n    let paren_count_stack_max_index_stack_max_index_stack_max_index_stack_max_index_stack_max\
    \ = 0;\n    let paren_count_stack", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "  let result = [];\n  let stack = [];\n\
    \  let paren_count = 0;\n  let paren_level = 0;\n  let paren_stack = [];\n  let\
    \ paren_stack_count = 0;\n  let paren_stack_level = 0;\n  let paren_stack_count_max\
    \ = 0;\n  let paren_stack_count_min = 0;\n  let paren_stack_level_max = 0;\n \
    \ let paren_stack_level_min = 0;\n  let paren_stack_level_count = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_count_min = 0;\n  let paren_stack_level_count_max\
    \ = 0;\n  let paren_stack_level_", "    let paren_stack = [];\n    let paren_count\
    \ = 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_length = 0;\n    let paren_count_stack_max =\
    \ 0;\n    let paren_count_stack_max_index = 0;\n    let paren_count_stack_max_length\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_length = 0;\n    let paren_count_stack_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_length = 0;\n    let paren_count_stack_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_length\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_length = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_length", "    let\
    \ result = [];\n    let stack = [];\n    let paren_count = 0;\n    let paren_level\
    \ = 0;\n    let paren_index = 0;\n    let paren_char = '';\n    let paren_char_count\
    \ = 0;\n    let paren_char_index = 0;\n    let paren_char_count_stack = [];\n\
    \    let paren_char_index_stack = [];\n    let paren_char_stack = [];\n    let\
    \ paren_char_stack_index = 0;\n    let paren_char_stack_count = 0;\n    let paren_char_stack_count_stack\
    \ = [];\n    let paren_char_stack_index_stack = [];\n    let paren_char_stack_count_stack_index\
    \ = 0;\n    let paren_char_stack_count_stack_index_stack = [];\n    let paren_char_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack = [];\n    let paren_char_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack = [];\n \
    \   let paren_char_stack_index_stack_index_stack_index_stack_index = 0;\n    let\
    \ paren_char_stack_index_stack_index_stack_index_stack_index_stack = [];\n   \
    \ let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index =\
    \ 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack\
    \ = [];\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char_stack_index_stack_index_stack_index_stack_index_stack_index_stack_index\
    \ = 0;\n    let paren_char", "    let paren_stack = [];\n    let paren_count =\
    \ 0;\n    let paren_level = 0;\n    let paren_count_stack = [];\n    let paren_count_stack_index\
    \ = 0;\n    let paren_count_stack_max = 0;\n    let paren_count_stack_max_index\
    \ = 0;\n    let paren_count_stack_max_max = 0;\n    let paren_count_stack_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max = 0;\n    let paren_count_stack_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_index\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max = 0;\n    let\
    \ paren_count_stack_max_max_max_max_max_max_max_max_index = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max\
    \ = 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_index =\
    \ 0;\n    let paren_count_stack_max_max_max_max_max_max_max_max_max_max = 0;\n\
    \    let paren_count_stack_max_max", "    let result = [];\n    let paren_stack\
    \ = [];\n    let current_level = 0;\n    let current_paren = 0;\n    let paren_count\
    \ = 0;\n    let paren_count_in_paren = 0;\n    let paren_count_in_paren_stack\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren = 0;\n    let paren_count_in_paren_stack_in_paren_stack\
    \ = 0;\n    let paren_count_in_paren_stack_in_paren_stack_in_paren = 0;\n    let\
    \ paren_count_in_paren_stack_in_paren_stack_in_paren_stack = 0;\n    for (let\
    \ i = 0; i < paren_string.length; i++) {\n        let current_char = paren_string[i];\n\
    \        if (current_char === \"(\") {\n            paren_count++;\n         \
    \   paren_count_in_paren++;\n            paren_stack.push(paren_count_in_paren);\n\
    \            current_level++;\n            current_paren++;\n        } else if\
    \ (current_char === \")\") {\n            paren_count--;\n            paren_count_in_paren--;\n\
    \            paren_count_in_paren_stack--;\n            paren_count_in_paren_stack_in_paren--;\n\
    \            paren_count_in_paren_stack_in_paren_stack--;\n            paren_count_in_paren_stack_in_paren_stack_in_paren--;\n\
    \            if (paren_count === 0) {\n                result.push(current_level);\n\
    \                current_level = 0;\n                current_paren = 0;\n    \
    \        }\n        } else if (current_char === \" \") {\n            if (paren_count\
    \ === 0) {\n                result.push(current_level);\n                current_level\
    \ = 0;\n                current_paren = 0;\n            }\n        }\n    }\n\
    \    return result;\n}\n", "  let paren_stack = [];\n  let current_level = 0;\n\
    \  let max_level = 0;\n  let paren_count = 0;\n  let paren_index = 0;\n  let paren_length\
    \ = paren_string.length;\n  let paren_char;\n  let paren_char_index = 0;\n  let\
    \ paren_char_length = 0;\n  let paren_char_count = 0;\n  let paren_char_count_index\
    \ = 0;\n  let paren_char_count_length = 0;\n  let paren_char_count_length_index\
    \ = 0;\n  let paren_char_count_length_length = 0;\n  let paren_char_count_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length = 0;\n  let paren_char_count_length_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length_length = 0;\n  let paren_char_count_length_length_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length_length_length = 0;\n  let\
    \ paren_char_count_length_length_length_length_length_index = 0;\n  let paren_char_count_length_length_length_length_length_length\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_length\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_length_length\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_length_length_index\
    \ = 0;\n  let paren_char_count_length_length_length_length_length_length_length_length_length\
    \ = 0;\n  let paren_char_count_length", "    let result = [];\n    let stack =\
    \ [];\n    let paren_count = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let paren_stack = [];\n    let paren_stack_count = 0;\n    let paren_stack_index\
    \ = 0;\n    let paren_stack_length = 0;\n    let paren_stack_max_length = 0;\n\
    \    let paren_stack_max_index = 0;\n    let paren_stack_max_count = 0;\n    let\
    \ paren_stack_max_count_index = 0;\n    let paren_stack_max_count_length = 0;\n\
    \    let paren_stack_max_count_length_index = 0;\n    let paren_stack_max_count_length_length\
    \ = 0;\n    let paren_stack_max_count_length_length_index = 0;\n    let paren_stack_max_count_length_length_length\
    \ = 0;\n    let paren_stack_max_count_length_length_length_index = 0;\n    let\
    \ paren_stack_max_count_length_length_length_length = 0;\n    let paren_stack_max_count_length_length_length_length_index\
    \ = 0;\n    let paren_stack_max_count_length_length_length_length_length = 0;\n\
    \    let paren_stack_max_count_length_length_length_length_length_index = 0;\n\
    \    let paren_stack_max_count_length_length_length_length_length_length = 0;\n\
    \    let paren_stack_max_count_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_stack_max_count_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_stack_max_count_length_length_length_length_length_length_length_index\
    \ = 0;\n    let paren_stack_max_count_length_length_length_length_length_length_length_length\
    \ = 0;\n    let paren_stack_max_count_length_length", "    let paren_stack = [];\n\
    \    let paren_count = 0;\n    let paren_level = 0;\n    let paren_count_in_level\
    \ = 0;\n    let paren_level_in_count = 0;\n    let paren_count_in_level_in_count\
    \ = 0;\n    let paren_level_in_count_in_count = 0;\n    let paren_count_in_level_in_count_in_count\
    \ = 0;\n    let paren_level_in_count_in_count_in_count = 0;\n    let paren_count_in_level_in_count_in_count_in_count\
    \ = 0;\n    let paren_level_in_count_in_count_in_count_in_count = 0;\n    let\
    \ paren_count_in_level_in_count_in_count_in_count_in_count = 0;\n    let paren_level_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_count_in_level_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_level_in_count_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_count_in_level_in_count_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_level_in_count_in_count_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_count_in_level_in_count_in_count_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_level_in_count_in_count_in_count_in_count_in_count_in_count_in_count_in_count\
    \ = 0;\n    let paren_count_in_level_in_count_in_count_in_count_in_count_in_count_in_count_",
  "    let paren_stack = [];\n    let paren_count = 0;\n    let paren_depth = 0;\n\
    \    let paren_index = 0;\n    let paren_start = 0;\n    let paren_end = 0;\n\
    \    let paren_count_start = 0;\n    let paren_count_end = 0;\n    let paren_count_start_end\
    \ = 0;\n    let paren_count_end_start = 0;\n    let paren_count_end_start_end\
    \ = 0;\n    let paren_count_start_end_start = 0;\n    let paren_count_start_end_end\
    \ = 0;\n    let paren_count_start_end_start_end = 0;\n    let paren_count_start_end_end_start\
    \ = 0;\n    let paren_count_start_end_end_start_end = 0;\n    let paren_count_start_end_end_start_end_start\
    \ = 0;\n    let paren_count_start_end_end_start_end_start_end = 0;\n    let paren_count_start_end_end_start_end_start_end_start\
    \ = 0;\n    let paren_count_start_end_end_start_end_start_end_start_end = 0;\n\
    \    let paren_count_start_end_end_start_end_start_end_start_end_start = 0;\n\
    \    let paren_count_start_end_end_start_end_start_end_start_end_start_end = 0;\n\
    \    let paren_count_start_end_end_start_end_start_end_start_end_start_end_start\
    \ = 0;\n    let paren_count_start_end_end_start_end_start_end_start_end_start_end_start_end\
    \ = 0;\n    let paren_count_start_end_end_start_end_start_end_start_end_start_end_start_end_start\
    \ = 0;\n    let paren_count_start_end_end_start_end_start_end_start_end_start_",
  "    let result = [];\n    let stack = [];\n    let current_level = 0;\n    let\
    \ current_paren = 0;\n    let paren_count = 0;\n    let paren_string = \"\";\n\
    \    let paren_string_length = paren_string.length;\n    for (let i = 0; i < paren_string_length;\
    \ i++) {\n        let c = paren_string[i];\n        if (c === \"(\") {\n     \
    \       paren_count++;\n            if (stack.length === 0) {\n              \
    \  current_level++;\n                current_paren = 0;\n            }\n     \
    \       stack.push(current_level);\n            current_paren++;\n        } else\
    \ if (c === \")\") {\n            current_level = stack.pop();\n            current_paren--;\n\
    \        }\n        if (current_paren === 0) {\n            result.push(current_level);\n\
    \        }\n    }\n    return result;\n}\n", "    let result = [];\n    let stack\
    \ = [];\n    let paren_count = 0;\n    let paren_level = 0;\n    let paren_index\
    \ = 0;\n    let paren_string_length = paren_string.length;\n    let paren_string_index\
    \ = 0;\n    while (paren_string_index < paren_string_length) {\n        if (paren_string[paren_string_index]\
    \ === '(') {\n            paren_count++;\n            stack.push(paren_count);\n\
    \            paren_level = stack.length - 1;\n        } else if (paren_string[paren_string_index]\
    \ === ')') {\n            paren_count--;\n            if (paren_count === 0) {\n\
    \                result.push(paren_level);\n                paren_index = paren_string_index\
    \ + 1;\n                while (paren_index < paren_string_length && paren_string[paren_index]\
    \ === ' ') {\n                    paren_index++;\n                }\n        \
    \        paren_string_index = paren_index;\n            } else {\n           \
    \     stack.pop();\n                paren_level = stack[stack.length - 1];\n \
    \           }\n        } else {\n            paren_index = paren_string_index\
    \ + 1;\n            while (paren_index < paren_string_length && paren_string[paren_index]\
    \ === ' ') {\n                paren_index++;\n            }\n            paren_string_index\
    \ = paren_index;\n        }\n    }\n    return result;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

name: HumanEval_153_Strongest_Extension
language: ts
prompt: "//You will be given the name of a class (a string) and an array of extensions.\n\
  // The extensions are to be used to load additional classes to the class. The\n\
  // strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  // letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n// You should find the strongest extension and return a string in this \n//\
  \ format: ClassName.StrongestExtensionName.\n// If there are two or more extensions\
  \ with the same strength, you should\n// choose the one that comes first in the\
  \ array.\n// For example, if you are given \"Slices\" as the class and an array\
  \ of the\n// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  // return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n// (its strength is -1).\n// Example:\n// >>> Strongest_Extension(\"my_class\"\
  , [\"AA\", \"Be\", \"CC\"])\n// \"my_class.AA\"\nfunction Strongest_Extension(class_name:\
  \ string, extensions: string[]): string {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = Strongest_Extension;\n  assert.deepEqual(candidate(\"\
  Watashi\", [\"tEN\", \"niNE\", \"eIGHt8OKe\"]),\"Watashi.eIGHt8OKe\");\n  assert.deepEqual(candidate(\"\
  Boku123\", [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"]),\"Boku123.YEs.WeCaNe\"\
  );\n  assert.deepEqual(candidate(\"__YESIMHERE\", [\"t\", \"eMptY\", \"nothing\"\
  , \"zeR00\", \"NuLl__\", \"123NoooneB321\"]),\"__YESIMHERE.NuLl__\");\n  assert.deepEqual(candidate(\"\
  K\", [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]),\"K.TAR\");\n  assert.deepEqual(candidate(\"\
  __HAHA\", [\"Tab\", \"123\", \"781345\", \"-_-\"]),\"__HAHA.123\");\n  assert.deepEqual(candidate(\"\
  YameRore\", [\"HhAas\", \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]),\"YameRore.okIWILL123\"\
  );\n  assert.deepEqual(candidate(\"finNNalLLly\", [\"Die\", \"NowW\", \"Wow\", \"\
  WoW\"]),\"finNNalLLly.WoW\");\n  assert.deepEqual(candidate(\"_\", [\"Bb\", \"91245\"\
  ]),\"_.Bb\");\n  assert.deepEqual(candidate(\"Sp\", [\"671235\", \"Bb\"]),\"Sp.671235\"\
  );\n}\n\ntest();"
completions: ["    let strength = 0;\n    let extension = extensions[0];\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let\
    \ sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n        \
    \    if (extensions[i][j].toUpperCase() !== extensions[i][j]) {\n            \
    \    cap++;\n            }\n            if (extensions[i][j].toLowerCase() !==\
    \ extensions[i][j]) {\n                sm++;\n            }\n        }\n     \
    \   if (cap - sm > strength) {\n            strength = cap - sm;\n           \
    \ extension = extensions[i];\n        }\n    }\n    return class_name + \".\"\
    \ + extension;\n}\n", "    let strength = 0;\n    let extension = '';\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let\
    \ sm = 0;\n        let ext = extensions[i];\n        for (let j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            }\n            else {\n                sm++;\n         \
    \   }\n        }\n        strength += cap - sm;\n        if (strength > extension.length)\
    \ {\n            extension = ext;\n        }\n    }\n    return class_name + '.'\
    \ + extension;\n}\n", "    // Write your code here\n    var max_strength = 0;\n\
    \    var max_extension = \"\";\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var strength = 0;\n        var extension = extensions[i];\n     \
    \   var cap = extension.length;\n        var sm = extension.toLowerCase().length;\n\
    \        strength = cap - sm;\n        if (strength > max_strength) {\n      \
    \      max_strength = strength;\n            max_extension = extension;\n    \
    \    }\n    }\n    return class_name + \".\" + max_extension;\n}\n", "    var\
    \ strength = 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var s = extensions[i];\n        var cap = 0;\n        var sm\
    \ = 0;\n        for (var j = 0; j < s.length; j++) {\n            if (s[j].toUpperCase()\
    \ === s[j]) {\n                cap++;\n            }\n            else {\n   \
    \             sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = s;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var extension_name = extensions[i];\n        var cap = extension_name.match(/[A-Z]/g);\n\
    \        var sm = extension_name.match(/[a-z]/g);\n        var strength_value\
    \ = cap.length - sm.length;\n        if (strength_value > strength) {\n      \
    \      strength = strength_value;\n            extension = extension_name;\n \
    \       }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var strength\
    \ = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n\
    \        var sm = extension.match(/[a-z]/g);\n        var strength_value = cap.length\
    \ - sm.length;\n        if (strength_value > strength) {\n            strength\
    \ = strength_value;\n            extension_name = extension;\n        }\n    }\n\
    \    return class_name + \".\" + extension_name;\n}\n", "    // your code goes\
    \ here\n    var result = class_name + \".\" + extensions[0];\n    var strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var current_extension\
    \ = extensions[i];\n        var current_extension_strength = 0;\n        var current_extension_length\
    \ = current_extension.length;\n        for (var j = 0; j < current_extension_length;\
    \ j++) {\n            if (current_extension[j].toUpperCase() > current_extension[j].toLowerCase())\
    \ {\n                current_extension_strength++;\n            }\n        }\n\
    \        if (current_extension_strength > strength) {\n            strength =\
    \ current_extension_strength;\n            result = class_name + \".\" + current_extension;\n\
    \        }\n    }\n    return result;\n}\n", "    let strength = 0;\n    let extension_name\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ === extension[j]) {\n                cap++;\n            } else {\n        \
    \        sm++;\n            }\n        }\n        strength += cap - sm;\n    \
    \    if (strength > strength) {\n            strength = cap - sm;\n          \
    \  extension_name = extension;\n        }\n    }\n    return class_name + \".\"\
    \ + extension_name;\n}\n", "    var strength = 0;\n    var extension = \"\";\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            }\n            if (ext[j].toLowerCase() === ext[j]) {\n\
    \                sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > extension.length) {\n            extension = ext;\n  \
    \      }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var strength\
    \ = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n\
    \        var sm = extension.match(/[a-z]/g);\n        var strength_of_extension\
    \ = cap.length - sm.length;\n        if (strength_of_extension > strength) {\n\
    \            strength = strength_of_extension;\n            extension_name = extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "  \
    \  let strength = 0;\n    let extension_name = \"\";\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension = extensions[i];\n        let\
    \ cap = extension.match(/[A-Z]/g);\n        let sm = extension.match(/[a-z]/g);\n\
    \        strength += cap.length - sm.length;\n        if (strength > strength)\
    \ {\n            strength = cap.length - sm.length;\n            extension_name\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    let strength = 0;\n    let extension_name = \"\";\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let cap = extension.match(/[A-Z]/g);\n        let sm = extension.match(/[a-z]/g);\n\
    \        let strength_of_extension = cap.length - sm.length;\n        if (strength_of_extension\
    \ > strength) {\n            strength = strength_of_extension;\n            extension_name\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    // Write your code here\n    let strength = 0;\n    let extension =\
    \ '';\n    let i = 0;\n    for (let extension of extensions) {\n        let cap\
    \ = 0;\n        let sm = 0;\n        for (let c of extension) {\n            if\
    \ (c.toUpperCase() === c) {\n                cap++;\n            } else {\n  \
    \              sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            strength = cap - sm;\n      \
    \      extension = extension;\n        }\n    }\n    return class_name + '.' +\
    \ extension;\n}\n", "    var strength: number = 0;\n    var extension: string\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension_name:\
    \ string = extensions[i];\n        var CAP: number = 0;\n        var SM: number\
    \ = 0;\n        for (var j = 0; j < extension_name.length; j++) {\n          \
    \  if (extension_name[j].toUpperCase() !== extension_name[j]) {\n            \
    \    CAP++;\n            }\n            if (extension_name[j].toLowerCase() !==\
    \ extension_name[j]) {\n                SM++;\n            }\n        }\n    \
    \    strength += CAP - SM;\n        if (strength > extension.length) {\n     \
    \       extension = extension_name;\n        }\n    }\n    return class_name +\
    \ \".\" + extension;\n}\n", "    // Write your code here\n    let result = ''\n\
    \    let strength = 0\n    let i = 0\n    let j = 0\n    let k = 0\n    let l\
    \ = 0\n    let m = 0\n    let n = 0\n    let o = 0\n    let p = 0\n    let q =\
    \ 0\n    let r = 0\n    let s = 0\n    let t = 0\n    let u = 0\n    let v = 0\n\
    \    let w = 0\n    let x = 0\n    let y = 0\n    let z = 0\n    let a = 0\n \
    \   let b = 0\n    let c = 0\n    let d = 0\n    let e = 0\n    let f = 0\n  \
    \  let g = 0\n    let h = 0\n    let i = 0\n    let j = 0\n    let k = 0\n   \
    \ let l = 0\n    let m = 0\n    let n = 0\n    let o = 0\n    let p = 0\n    let\
    \ q = 0\n    let r = 0\n    let s = 0\n    let t = 0\n    let u = 0\n    let v\
    \ = 0\n    let w = 0\n    let x = 0\n    let y = 0\n    let z = 0\n    let a =\
    \ 0\n    let b = 0\n    let c = 0\n    let d = 0\n    let e = 0\n    let f = 0\n\
    \    let g = 0\n    let h = 0\n    let i = 0\n    let j = 0\n    let k = 0\n \
    \   let l = 0\n    let m = 0\n    let n = 0\n    let o = 0\n    let p = 0\n  \
    \  let q = 0\n    let r = 0\n    let s = 0\n    let t = 0\n    let u = 0\n   \
    \ let v = 0\n    let w = 0\n    let x = 0\n    let y = 0\n    let z = 0\n    let\
    \ a = 0\n    let b = 0\n    let c = 0\n    let d = 0\n    let e = 0\n    let f\
    \ = 0\n    let g = 0\n    let h = 0\n    let i = 0\n    let j = 0\n    let k =\
    \ 0\n    let l = 0\n    ", "    // Write your code here\n    let strength = 0;\n\
    \    let extension = '';\n    for (let i = 0; i < extensions.length; i++) {\n\
    \        let cap = extensions[i].match(/[A-Z]/g);\n        let sm = extensions[i].match(/[a-z]/g);\n\
    \        strength += cap.length - sm.length;\n        if (cap.length > strength)\
    \ {\n            strength = cap.length;\n            extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + extension;\n}\n", "    let strength\
    \ = 0;\n    let extension_name = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let cap = extension.match(/[A-Z]/g);\n\
    \        let sm = extension.match(/[a-z]/g);\n        strength += cap.length -\
    \ sm.length;\n        if (strength > strength) {\n            extension_name =\
    \ extension;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    // Write your code here\n    let strength = 0;\n    let extension =\
    \ '';\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n\
    \        let sm = 0;\n        let ext = extensions[i];\n        for (let j = 0;\
    \ j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n\
    \                cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > extension.length) {\n            extension = ext;\n        }\n    }\n    return\
    \ class_name + '.' + extension;\n}\n", "    let strength = 0;\n    let extension\
    \ = '';\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let\
    \ m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n   \
    \ let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let a = 0;\n    ", "    var result = class_name;\n    var\
    \ strength = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var\
    \ ext = extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n        var sm\
    \ = ext.match(/[a-z]/g);\n        var strength_val = cap.length - sm.length;\n\
    \        if (strength_val > strength) {\n            strength = strength_val;\n\
    \            result = class_name + \".\" + ext;\n        }\n    }\n    return\
    \ result;\n}\n", "    var strength = 0;\n    var extension = extensions[0];\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var s = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < s.length;\
    \ j++) {\n            if (s[j].toUpperCase() === s[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        if (cap - sm > strength) {\n            strength = cap - sm;\n\
    \            extension = s;\n        }\n    }\n    return class_name + \".\" +\
    \ extension;\n}\n", "    var strength = 0;\n    var extension = null;\n    for\
    \ (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            }\n            else {\n                sm++;\n         \
    \   }\n        }\n        strength += cap - sm;\n        if (strength > extension)\
    \ {\n            extension = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + extensions[0];\n}\n", "    // Write your code here\n    let max_strength\
    \ = 0;\n    let max_extension = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let strength = 0;\n        let extension = extensions[i];\n\
    \        let cap = extension.match(/[A-Z]/g);\n        let sm = extension.match(/[a-z]/g);\n\
    \        strength = cap.length - sm.length;\n        if (strength > max_strength)\
    \ {\n            max_strength = strength;\n            max_extension = extension;\n\
    \        }\n    }\n    return class_name + '.' + max_extension;\n}\n", "    let\
    \ strength = 0;\n    let extension_name = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        let ext = extensions[i];\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            strength = cap - sm;\n      \
    \      extension_name = ext;\n        }\n    }\n    return class_name + \".\"\
    \ + extension_name;\n}\n", "    let strength = 0;\n    let extension = extensions[0];\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let ext = extensions[i];\n\
    \        let cap = ext.match(/[A-Z]/g);\n        let sm = ext.match(/[a-z]/g);\n\
    \        let s = cap.length - sm.length;\n        if (s > strength) {\n      \
    \      strength = s;\n            extension = ext;\n        }\n    }\n    return\
    \ class_name + \".\" + extension;\n}\n", "    var strength = 0;\n    var extension_name\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ === extension[j]) {\n                cap++;\n            } else {\n        \
    \        sm++;\n            }\n        }\n        strength += cap - sm;\n    \
    \    if (strength > strength_of_extension) {\n            strength_of_extension\
    \ = strength;\n            extension_name = extension;\n        }\n    }\n   \
    \ return class_name + \".\" + extension_name;\n}\n", "    var strength = 0;\n\
    \    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ === current_extension[j]) {\n                current_cap++;\n            }\n\
    \            else {\n                current_sm++;\n            }\n        }\n\
    \        strength += (current_cap - current_sm) / current_cap;\n        if (strength\
    \ > strength) {\n            extension = current_extension;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    var strength = 0;\n  \
    \  var extension = null;\n    for (var i = 0; i < extensions.length; i++) {\n\
    \        var extension_name = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < extension_name.length; j++) {\n       \
    \     if (extension_name[j].toUpperCase() === extension_name[j]) {\n         \
    \       cap++;\n            }\n            else {\n                sm++;\n   \
    \         }\n        }\n        strength += cap - sm;\n        if (strength >\
    \ extension) {\n            extension = strength;\n        }\n    }\n    return\
    \ class_name + \".\" + extensions[0];\n}\n", "    var strength = 0;\n    var extension\
    \ = '';\n    for (var i = 0; i < extensions.length; i++) {\n        var ext =\
    \ extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        var s = cap.length - sm.length;\n        if (s > strength) {\n      \
    \      strength = s;\n            extension = ext;\n        }\n    }\n    return\
    \ class_name + '.' + extension;\n}\n", "    let strength = 0;\n    let extension\
    \ = '';\n    for (let i = 0; i < extensions.length; i++) {\n        let cap =\
    \ 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j] === 'A' || extensions[i][j] === 'a') {\n\
    \                cap++;\n            }\n            if (extensions[i][j] === 'a')\
    \ {\n                sm++;\n            }\n        }\n        strength += cap\
    \ - sm;\n        if (strength > extension.length) {\n            extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + extension;\n}\n", "    var strength\
    \ = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.length\
    \ - extension.replace(/[a-z]/g, \"\").length;\n        var sm = extension.length\
    \ - extension.replace(/[A-Z]/g, \"\").length;\n        strength += (cap - sm)\
    \ * 1;\n        if (strength > 0) {\n            extension_name = extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "  \
    \  var strength = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension_name = extensions[i];\n        var cap = 0;\n\
    \        var sm = 0;\n        for (var j = 0; j < extension_name.length; j++)\
    \ {\n            if (extension_name[j].toUpperCase() === extension_name[j]) {\n\
    \                cap++;\n            } else {\n                sm++;\n       \
    \     }\n        }\n        strength += cap - sm;\n        if (strength > extension)\
    \ {\n            extension = strength;\n        }\n    }\n    return class_name\
    \ + \".\" + extensions[0];\n}\n", "    // Write your code here\n    var result\
    \ = class_name + \".\";\n    var max_strength = 0;\n    var max_extension = \"\
    \";\n    for (var i = 0; i < extensions.length; i++) {\n        var strength =\
    \ 0;\n        var extension = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n            if\
    \ (extension[j].toUpperCase() === extension[j]) {\n                cap++;\n  \
    \          }\n            else {\n                sm++;\n            }\n     \
    \   }\n        strength = cap - sm;\n        if (strength > max_strength) {\n\
    \            max_strength = strength;\n            max_extension = extension;\n\
    \        }\n    }\n    result += max_extension;\n    return result;\n}\n", " \
    \   var strength = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = ext;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() === extension[j]) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   strength += cap - sm;\n        if (strength > strength) {\n            strength\
    \ = cap - sm;\n            extension_name = extension;\n        }\n    }\n   \
    \ return class_name + \".\" + extension_name;\n}\n", "    // Write your code here\n\
    \    let strength = 0;\n    let extension = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = extensions[i].match(/[A-Z]/g);\n        let sm = extensions[i].match(/[a-z]/g);\n\
    \        let strength_val = cap.length - sm.length;\n        if (strength_val\
    \ > strength) {\n            strength = strength_val;\n            extension =\
    \ extensions[i];\n        }\n    }\n    return class_name + '.' + extension;\n\
    }\n", "    var strength = 0;\n    var extension = extensions[0];\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var s = extensions[i];\n     \
    \   var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < s.length; j++)\
    \ {\n            if (s[j].toUpperCase() !== s[j]) {\n                cap++;\n\
    \            }\n            if (s[j].toLowerCase() !== s[j]) {\n             \
    \   sm++;\n            }\n        }\n        if (cap - sm > strength) {\n    \
    \        strength = cap - sm;\n            extension = s;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    // Write your code here\n\
    \    let strength = 0\n    let max_strength = 0\n    let max_extension = \"\"\n\
    \    let extension_count = 0\n    let extension_index = 0\n    let extension_name\
    \ = \"\"\n    let extension_name_length = 0\n    let extension_name_index = 0\n\
    \    let extension_name_count = 0\n    let extension_name_index_count = 0\n  \
    \  let extension_name_index_count_max = 0\n    let extension_name_index_count_min\
    \ = 0\n    let extension_name_index_count_sum = 0\n    let extension_name_index_count_sum_max\
    \ = 0\n    let extension_name_index_count_sum_min = 0\n    let extension_name_index_count_sum_sum\
    \ = 0\n    let extension_name_index_count_sum_sum_max = 0\n    let extension_name_index_count_sum_sum_min\
    \ = 0\n    let extension_name_index_count_sum_sum_sum = 0\n    let extension_name_index_count_sum_sum_sum_max\
    \ = 0\n    let extension_name_index_count_sum_sum_sum_min = 0\n    let extension_name_index_count_sum_sum_sum_sum\
    \ = 0\n    let extension_name_index_count_sum_sum_sum_sum_max = 0\n    let extension_name_index_count_sum_sum_sum_sum_min\
    \ = 0\n    let extension_name_index_count_sum_sum_sum_sum_sum = 0\n    let extension_name_index_count_sum_sum_sum_sum_sum_max\
    \ = 0\n    let extension_name_index_count_sum_sum_sum_sum_sum_min = 0\n    let\
    \ extension_name_index_count_sum_sum_sum_sum_sum_sum = 0\n    let extension_name_index_count_sum_sum_sum_sum_sum_sum_max\
    \ = 0\n    let extension_name_index_count_sum_sum_sum_sum_sum_sum_min = 0\n  \
    \  let extension_name_index_count_sum_sum_sum_sum_sum_sum_", "    // Write your\
    \ code here\n    let class_name_lower = class_name.toLowerCase();\n    let extensions_lower\
    \ = extensions.map(x => x.toLowerCase());\n    let max_strength = 0;\n    let\
    \ max_extension = '';\n    for (let i = 0; i < extensions_lower.length; i++) {\n\
    \        let strength = 0;\n        let extension = extensions_lower[i];\n   \
    \     let class_name_upper = class_name_lower.split('').map(x => x.toUpperCase()).join('');\n\
    \        let extension_upper = extension.split('').map(x => x.toUpperCase()).join('');\n\
    \        strength = class_name_upper.length - extension_upper.length;\n      \
    \  if (strength > max_strength) {\n            max_strength = strength;\n    \
    \        max_extension = extension;\n        }\n    }\n    return class_name +\
    \ '.' + max_extension;\n}\n", "    let strength = 0;\n    let extension_name =\
    \ \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap =\
    \ 0;\n        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j].toUpperCase() === extensions[i][j]) {\n\
    \                cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength) {\n            strength = cap - sm;\n            extension_name\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    let strength = 0;\n    let max_strength = 0;\n    let max_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ === extension[j]) {\n                cap++;\n            }\n            else\
    \ {\n                sm++;\n            }\n        }\n        strength += cap\
    \ - sm;\n        if (strength > max_strength) {\n            max_strength = strength;\n\
    \            max_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + max_extension;\n}\n", "    // Write your code here\n    let strength\
    \ = 0;\n    let strongest_extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let ext = extensions[i];\n        let cap = ext.match(/[A-Z]/g);\n\
    \        let sm = ext.match(/[a-z]/g);\n        strength = cap.length - sm.length;\n\
    \        if (strength > strength) {\n            strength = strength;\n      \
    \      strongest_extension = ext;\n        }\n    }\n    return class_name + \"\
    .\" + strongest_extension;\n}\n", "    var strength = 0;\n    var extension =\
    \ null;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext =\
    \ extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        var s = cap.length - sm.length;\n        if (s > strength) {\n      \
    \      strength = s;\n            extension = ext;\n        }\n    }\n    return\
    \ class_name + \".\" + extension;\n}\n", "    let strength = 0;\n    let extension\
    \ = extensions[0];\n    for (let i = 0; i < extensions.length; i++) {\n      \
    \  let extension_name = extensions[i];\n        let cap = extension_name.match(/[A-Z]/g);\n\
    \        let sm = extension_name.match(/[a-z]/g);\n        strength += cap.length\
    \ - sm.length;\n        if (strength > strength) {\n            extension = extension_name;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var\
    \ strength = 0;\n    var best_extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() === extension[j]) {\n                cap++;\n\
    \            } else {\n                sm++;\n            }\n        }\n     \
    \   strength += cap - sm;\n        if (strength > best_extension) {\n        \
    \    best_extension = extension;\n        }\n    }\n    return class_name + \"\
    .\" + best_extension;\n}\n", "    var strength = 0;\n    var extension = null;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            }\n            if (ext[j].toLowerCase() === ext[j]) {\n\
    \                sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = ext;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension = '';\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var extension_name = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension_name.length; j++) {\n \
    \           if (extension_name[j].toUpperCase() === extension_name[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > extension.length) {\n            extension = extension_name;\n        }\n\
    \    }\n    return class_name + '.' + extension;\n}\n", "    // Write your code\
    \ here\n    var result = class_name;\n    var strength = 0;\n    for (var i =\
    \ 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n \
    \       var cap = extension.match(/[A-Z]/g);\n        var sm = extension.match(/[a-z]/g);\n\
    \        strength = strength + (cap.length - sm.length);\n    }\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        if (extension.match(/[A-Z]/g) > strength) {\n            result = class_name\
    \ + \".\" + extension;\n        }\n    }\n    return result;\n}\n", "    // Write\
    \ your code here\n    var result = class_name;\n    var strength = 0;\n    for\
    \ (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        strength = cap.length - sm.length;\n        if (strength > 0) {\n   \
    \         result = result + \".\" + ext;\n        }\n    }\n    return result;\n\
    }\n", "    var strength = 0;\n    var extension = '';\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var cap = 0;\n        var sm = 0;\n     \
    \   for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ == 'A' || extensions[i][j] == 'a') {\n                cap++;\n            }\n\
    \            if (extensions[i][j] == 'a') {\n                sm++;\n         \
    \   }\n        }\n        if (cap - sm > strength) {\n            strength = cap\
    \ - sm;\n            extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + extension;\n}\n", "    let class_name_upper = class_name.toUpperCase();\n\
    \    let class_name_lower = class_name.toLowerCase();\n    let class_name_extensions\
    \ = class_name_lower + \".\";\n    let class_name_extensions_upper = class_name_extensions.toUpperCase();\n\
    \    let class_name_extensions_lower = class_name_extensions.toLowerCase();\n\
    \    let class_name_extensions_extensions = class_name_extensions_lower + \".\"\
    ;\n    let class_name_extensions_extensions_upper = class_name_extensions_extensions.toUpperCase();\n\
    \    let class_name_extensions_extensions_lower = class_name_extensions_extensions.toLowerCase();\n\
    \    let class_name_extensions_extensions_extensions = class_name_extensions_extensions_lower\
    \ + \".\";\n    let class_name_extensions_extensions_extensions_upper = class_name_extensions_extensions_extensions.toUpperCase();\n\
    \    let class_name_extensions_extensions_extensions_lower = class_name_extensions_extensions_extensions.toLowerCase();\n\
    \    let class_name_extensions_extensions_extensions_extensions = class_name_extensions_extensions_extensions_lower\
    \ + \".\";\n    let class_name_extensions_extensions_extensions_extensions_upper\
    \ = class_name_extensions_extensions_extensions_extensions.toUpperCase();\n  \
    \  let class_name_extensions_extensions_extensions_extensions_lower = class_name_extensions_extensions_extensions_extensions.toLowerCase();\n\
    \    let class_name_extensions_extensions_extensions_extensions_extensions = class_name_extensions_extensions_extensions_extensions_lower\
    \ + \".\";\n    let class_name_extensions_extensions_extensions_extensions_extensions_upper\
    \ = class_name_extensions_extensions_extensions_extensions_extensions.toUpperCase();\n\
    \    let class_name_extensions_extensions_extensions", "    let class_name_array\
    \ = class_name.split(\".\");\n    let class_name_length = class_name_array.length;\n\
    \    let strongest_extension = \"\";\n    let strongest_extension_strength = 0;\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let extension_array\
    \ = extensions[i].split(\".\");\n        let extension_length = extension_array.length;\n\
    \        let extension_strength = 0;\n        for (let j = 0; j < extension_length;\
    \ j++) {\n            let extension_char = extension_array[j];\n            if\
    \ (extension_char.toUpperCase() > extension_char.toLowerCase()) {\n          \
    \      extension_strength += 1;\n            }\n            else {\n         \
    \       extension_strength -= 1;\n            }\n        }\n        if (extension_strength\
    \ > strongest_extension_strength) {\n            strongest_extension = extensions[i];\n\
    \            strongest_extension_strength = extension_strength;\n        }\n \
    \   }\n    return class_name_array[class_name_length - 1] + \".\" + strongest_extension;\n\
    }\n", "    // Write your code here\n    let result = class_name;\n    let strength\
    \ = 0;\n    for (let i = 0; i < extensions.length; i++) {\n        let ext = extensions[i];\n\
    \        let cap = ext.match(/[A-Z]/g);\n        let sm = ext.match(/[a-z]/g);\n\
    \        strength = cap.length - sm.length;\n        if (strength > strength)\
    \ {\n            result = class_name + \".\" + ext;\n        }\n    }\n    return\
    \ result;\n}\n", "    var strength = 0;\n    var extension_name = \"\";\n    for\
    \ (var i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() == extension[j]) {\n    \
    \            cap++;\n            }\n            if (extension[j].toLowerCase()\
    \ == extension[j]) {\n                sm++;\n            }\n        }\n      \
    \  strength += (cap - sm) / extension.length;\n        if (strength > extension_name.length)\
    \ {\n            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    // Write your code here\n    var result\
    \ = class_name;\n    var max_strength = 0;\n    var max_extension = \"\";\n  \
    \  for (var i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        var extension = extensions[i];\n        var cap = extension.length;\n\
    \        var sm = extension.length;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap--;\n            }\n            else {\n                sm--;\n\
    \            }\n        }\n        strength = cap - sm;\n        if (strength\
    \ > max_strength) {\n            max_strength = strength;\n            max_extension\
    \ = extension;\n        }\n    }\n    result += \".\" + max_extension;\n    return\
    \ result;\n}\n", "    var strength = 0;\n    var extension = null;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension_name = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension_name.length;\
    \ j++) {\n            if (extension_name[j].toUpperCase() === extension_name[j])\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += (cap - sm);\n       \
    \ if (strength > strength) {\n            extension = extension_name;\n      \
    \  }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let class_name_upper\
    \ = class_name.toUpperCase();\n    let class_name_lower = class_name.toLowerCase();\n\
    \    let strength = 0;\n    let strongest_extension = class_name_upper;\n    let\
    \ strongest_extension_strength = strength;\n    for (let extension of extensions)\
    \ {\n        let extension_upper = extension.toUpperCase();\n        let extension_lower\
    \ = extension.toLowerCase();\n        let extension_strength = 0;\n        let\
    \ extension_strength_count = 0;\n        for (let i = 0; i < extension_upper.length;\
    \ i++) {\n            if (extension_upper[i] == 'A') {\n                extension_strength\
    \ += 1;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'B') {\n                extension_strength\
    \ += 2;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'C') {\n                extension_strength\
    \ += 3;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'D') {\n                extension_strength\
    \ += 4;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'E') {\n                extension_strength\
    \ += 5;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'F') {\n                extension_strength\
    \ += 6;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'G') {\n                extension_strength\
    \ += 7;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'H') {\n                extension_strength\
    \ += 8;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper[i] == 'I') {\n                extension_strength\
    \ += 9;\n                extension_strength_count += 1;\n            }\n     \
    \       else if (extension_upper", "    var strength = 0;\n    var extension_name\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var ext\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j])\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > strength_of_extension) {\n            strength_of_extension = strength;\n\
    \            extension_name = ext;\n        }\n    }\n    return class_name +\
    \ \".\" + extension_name;\n}\n", "    var strength = 0;\n    var extension = null;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() == ext[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        if (cap - sm > strength) {\n            strength = cap - sm;\n\
    \            extension = ext;\n        }\n    }\n    return class_name + \".\"\
    \ + extension;\n}\n", "    let strength = 0;\n    let extension = '';\n    let\
    \ i = 0;\n    for (let extension of extensions) {\n        let CAP = 0;\n    \
    \    let SM = 0;\n        for (let c of extension) {\n            if (c.toUpperCase()\
    \ === c) {\n                CAP++;\n            } else {\n                SM++;\n\
    \            }\n        }\n        strength += CAP - SM;\n        if (strength\
    \ > i) {\n            i = strength;\n            extension = extension;\n    \
    \    }\n    }\n    return class_name + '.' + extension;\n}\n", "    // Write your\
    \ code here\n    let strength = 0;\n    let extension = null;\n    for (let i\
    \ = 0; i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n\
    \        for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j].toUpperCase()\
    \ === extensions[i][j]) {\n                cap++;\n            }\n           \
    \ else {\n                sm++;\n            }\n        }\n        strength =\
    \ cap - sm;\n        if (strength > strength) {\n            extension = extensions[i];\n\
    \            strength = strength;\n        }\n    }\n    return class_name + \"\
    .\" + extension;\n}\n", "    var strength = 0;\n    var extension_name = \"\"\
    ;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension =\
    \ extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ === extension[j]) {\n                cap++;\n            }\n            else\
    \ {\n                sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension_name = extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "  \
    \  // Write your code here\n    let result = ''\n    let strength = 0\n    let\
    \ i = 0\n    let j = 0\n    let k = 0\n    let l = 0\n    let m = 0\n    let n\
    \ = 0\n    let o = 0\n    let p = 0\n    let q = 0\n    let r = 0\n    let s =\
    \ 0\n    let t = 0\n    let u = 0\n    let v = 0\n    let w = 0\n    let x = 0\n\
    \    let y = 0\n    let z = 0\n    let a = 0\n    let b = 0\n    let c = 0\n \
    \   let d = 0\n    let e = 0\n    let f = 0\n    let g = 0\n    let h = 0\n  \
    \  let i = 0\n    let j = 0\n    let k = 0\n    let l = 0\n    let m = 0\n   \
    \ let n = 0\n    let o = 0\n    let p = 0\n    let q = 0\n    let r = 0\n    let\
    \ s = 0\n    let t = 0\n    let u = 0\n    let v = 0\n    let w = 0\n    let x\
    \ = 0\n    let y = 0\n    let z = 0\n    let a = 0\n    let b = 0\n    let c =\
    \ 0\n    let d = 0\n    let e = 0\n    let f = 0\n    let g = 0\n    let h = 0\n\
    \    let i = 0\n    let j = 0\n    let k = 0\n    let l = 0\n    let m = 0\n \
    \   let n = 0\n    let o = 0\n    let p = 0\n    let q = 0\n    let r = 0\n  \
    \  let s = 0\n    let t = 0\n    let u = 0\n    let v = 0\n    let w = 0\n   \
    \ let x = 0\n    let y = 0\n    let z = 0\n    let a = 0\n    let b = 0\n    let\
    \ c = 0\n    let d = 0\n    let e = 0\n    let f = 0\n    let g = 0\n    let h\
    \ = 0\n    let i = 0\n    let j = 0\n    let k = 0\n    let l = 0\n    ", "  \
    \  // Write your code here\n    var result = class_name;\n    var strength = 0;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var cap = extension.match(/[A-Z]/g);\n        var sm = extension.match(/[a-z]/g);\n\
    \        if (cap.length > strength) {\n            strength = cap.length;\n  \
    \          result = class_name + \".\" + extension;\n        }\n        else if\
    \ (sm.length > strength && cap.length == strength) {\n            strength = sm.length;\n\
    \            result = class_name + \".\" + extension;\n        }\n    }\n    return\
    \ result;\n}\n", "    var result: string = class_name;\n    var strength: number\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext: string\
    \ = extensions[i];\n        var cap: number = 0;\n        var sm: number = 0;\n\
    \        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            } else {\n              \
    \  sm++;\n            }\n        }\n        strength = cap - sm;\n        if (strength\
    \ > strength) {\n            result = class_name + \".\" + ext;\n        }\n \
    \   }\n    return result;\n}\n", "    var result = class_name;\n    var strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = ext.match(/([A-Z])/g);\n        var sm = ext.match(/([a-z])/g);\n\
    \        var strength_value = cap.length - sm.length;\n        if (strength_value\
    \ > strength) {\n            strength = strength_value;\n            result =\
    \ class_name + \".\" + ext;\n        }\n    }\n    return result;\n}\n", "   \
    \ // your code here\n    let cap = 0\n    let sm = 0\n    let result = \"\"\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let ext = extensions[i]\n\
    \        let ext_cap = 0\n        let ext_sm = 0\n        for (let j = 0; j <\
    \ ext.length; j++) {\n            let c = ext[j]\n            if (c.toUpperCase()\
    \ === c) {\n                ext_cap++\n            } else {\n                ext_sm++\n\
    \            }\n        }\n        if (ext_cap - ext_sm > cap - sm) {\n      \
    \      cap = ext_cap - ext_sm\n            sm = ext_sm\n            result = class_name\
    \ + \".\" + ext\n        }\n    }\n    return result\n}\n", "    var strength\
    \ = 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ !== current_extension[j]) {\n                current_cap++;\n            }\n\
    \            if (current_extension[j].toLowerCase() !== current_extension[j])\
    \ {\n                current_sm++;\n            }\n        }\n        strength\
    \ += (current_cap - current_sm) / current_extension.length;\n        if (strength\
    \ > strength) {\n            extension = current_extension;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    // Write your code here\n\
    \    let strength = 0;\n    let extension = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j].toUpperCase()\
    \ !== extensions[i][j]) {\n                cap++;\n            }\n           \
    \ if (extensions[i][j].toLowerCase() !== extensions[i][j]) {\n               \
    \ sm++;\n            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > extension.length) {\n            extension = extensions[i];\n        }\n \
    \   }\n    return class_name + '.' + extension;\n}\n", "    let strength = 0;\n\
    \    let max_strength = 0;\n    let max_extension = '';\n    let extension_count\
    \ = 0;\n    let extension_index = 0;\n    let extension_name = '';\n    let extension_strength\
    \ = 0;\n    let extension_name_length = 0;\n    let class_name_length = 0;\n \
    \   let extension_name_length_count = 0;\n    let extension_name_length_index\
    \ = 0;\n    let extension_name_length_count_count = 0;\n    let extension_name_length_count_index\
    \ = 0;\n    let extension_name_length_count_count_count = 0;\n    let extension_name_length_count_count_index\
    \ = 0;\n    let extension_name_length_count_count_count_count = 0;\n    let extension_name_length_count_count_count_index\
    \ = 0;\n    let extension_name_length_count_count_count_count_count = 0;\n   \
    \ let extension_name_length_count_count_count_count_index = 0;\n    let extension_name_length_count_count_count_count_count_count\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_index = 0;\n\
    \    let extension_name_length_count_count_count_count_count_count_count = 0;\n\
    \    let extension_name_length_count_count_count_count_count_count_index = 0;\n\
    \    let extension_name_length_count_count_count_count_count_count_count_count\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_count_count_index\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_count_count_count_index\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_count_count_count_count_count\
    \ = 0;\n    let extension_name_length_count_count_count_count_count_count", " \
    \   var strength = 0;\n    var extension = extensions[0];\n    for (var i = 0;\
    \ i < extensions.length; i++) {\n        var current_extension = extensions[i];\n\
    \        var current_strength = 0;\n        var current_cap = 0;\n        var\
    \ current_sm = 0;\n        for (var j = 0; j < current_extension.length; j++)\
    \ {\n            if (current_extension[j].toUpperCase() === current_extension[j])\
    \ {\n                current_cap++;\n            }\n            else {\n     \
    \           current_sm++;\n            }\n        }\n        strength += (current_cap\
    \ - current_sm) / current_extension.length;\n        if (strength > strength)\
    \ {\n            extension = current_extension;\n        }\n    }\n    return\
    \ class_name + \".\" + extension;\n}\n", "    // Write your code here\n    let\
    \ class_name_extensions = class_name + '.';\n    let strongest_extension = '';\n\
    \    let strongest_extension_strength = 0;\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_strength\
    \ = 0;\n        let extension_name = extension.substring(extension.indexOf('.')\
    \ + 1);\n        for (let j = 0; j < extension_name.length; j++) {\n         \
    \   if (extension_name[j].toUpperCase() > extension_name[j].toLowerCase()) {\n\
    \                extension_strength += 1;\n            }\n            else {\n\
    \                extension_strength += -1;\n            }\n        }\n       \
    \ if (extension_strength > strongest_extension_strength) {\n            strongest_extension\
    \ = extension;\n            strongest_extension_strength = extension_strength;\n\
    \        }\n    }\n    return class_name_extensions + strongest_extension;\n}\n",
  "    let strength = 0;\n    let extension = extensions[0];\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n \
    \       for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j].toUpperCase()\
    \ === extensions[i][j]) {\n                cap++;\n            }\n           \
    \ else {\n                sm++;\n            }\n        }\n        if (cap - sm\
    \ > strength) {\n            strength = cap - sm;\n            extension = extensions[i];\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    // Write\
    \ your code here\n    var strength = 0;\n    var extension = null;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n   \
    \     var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            }\n            else {\n                sm++;\n         \
    \   }\n        }\n        if (cap - sm > strength) {\n            strength = cap\
    \ - sm;\n            extension = ext;\n        }\n    }\n    return class_name\
    \ + \".\" + extension;\n}\n", "    // Write your code here\n    let strength =\
    \ 0\n    let extension = \"\"\n    let i = 0\n    for (i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0\n        let sm = 0\n        let ext = extensions[i]\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ !== ext[j]) {\n                cap++\n            }\n            if (ext[j].toLowerCase()\
    \ !== ext[j]) {\n                sm++\n            }\n        }\n        strength\
    \ += cap - sm\n        if (strength > extension.length) {\n            extension\
    \ = ext\n        }\n    }\n    return class_name + \".\" + extension\n}\n", " \
    \   var result = class_name;\n    var strength = 0;\n    var extension_name =\
    \ \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = extension.length - extension.replace(/[a-z]/g,\
    \ \"\").length;\n        var sm = extension.length - extension.replace(/[A-Z]/g,\
    \ \"\").length;\n        if (cap - sm > strength) {\n            strength = cap\
    \ - sm;\n            extension_name = extension;\n        }\n    }\n    result\
    \ += \".\" + extension_name;\n    return result;\n}\n", "    // Write your code\
    \ here\n    let strength = 0;\n    let maxStrength = 0;\n    let maxStrengthExtension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let ext\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j])\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        let strength = cap - sm;\n      \
    \  if (strength > maxStrength) {\n            maxStrength = strength;\n      \
    \      maxStrengthExtension = ext;\n        }\n    }\n    return class_name +\
    \ \".\" + maxStrengthExtension;\n}\n", "    let class_name_upper = class_name.toUpperCase();\n\
    \    let class_name_lower = class_name.toLowerCase();\n    let strength = 0;\n\
    \    let strongest_extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_upper = extensions[i].toUpperCase();\n       \
    \ let extension_lower = extensions[i].toLowerCase();\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension_upper.length; j++) {\n         \
    \   if (extension_upper[j] === class_name_upper[j]) {\n                extension_strength\
    \ += 1;\n            }\n            else if (extension_upper[j] === class_name_lower[j])\
    \ {\n                extension_strength += 2;\n            }\n        }\n    \
    \    for (let j = 0; j < extension_lower.length; j++) {\n            if (extension_lower[j]\
    \ === class_name_upper[j]) {\n                extension_strength += 1;\n     \
    \       }\n            else if (extension_lower[j] === class_name_lower[j]) {\n\
    \                extension_strength += 2;\n            }\n        }\n        if\
    \ (extension_strength > strength) {\n            strength = extension_strength;\n\
    \            strongest_extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension;\n}\n", "    let strength = 0;\n  \
    \  let extension = extensions[0];\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let ext = extensions[i];\n        let cap = 0;\n        let\
    \ sm = 0;\n        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            extension = ext;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var ext = extensions[i];\n        var cap = 0;\n        var sm =\
    \ 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = ext;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var ext = extensions[i];\n        var cap = 0;\n        var sm =\
    \ 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > extension) {\n            extension = strength;\n    \
    \    }\n    }\n    return class_name + \".\" + extensions[0];\n}\n", "    let\
    \ strength = 0;\n    let extension = extensions[0];\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_extension = extensions[i];\n        let current_strength\
    \ = 0;\n        for (let j = 0; j < current_extension.length; j++) {\n       \
    \     let current_char = current_extension[j];\n            if (current_char.toUpperCase()\
    \ > current_char.toLowerCase()) {\n                current_strength += 1;\n  \
    \          }\n            else {\n                current_strength -= 1;\n   \
    \         }\n        }\n        if (current_strength > strength) {\n         \
    \   strength = current_strength;\n            extension = current_extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let\
    \ strength = 0;\n    let extension = extensions[0];\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        strength += cap - sm;\n        if (strength >\
    \ strength) {\n            extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + \".\" + extension;\n}\n", "    let strength = 0;\n    let extension\
    \ = '';\n    for (let i = 0; i < extensions.length; i++) {\n        let cap =\
    \ 0;\n        let sm = 0;\n        let ext = extensions[i];\n        for (let\
    \ j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j])\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        strength += cap - sm;\n        if (strength >\
    \ extension.length) {\n            extension = ext;\n        }\n    }\n    return\
    \ class_name + '.' + extension;\n}\n", "    var strength = 0;\n    var extension\
    \ = null;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j])\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        if (cap - sm > strength) {\n    \
    \        strength = cap - sm;\n            extension = ext;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    var result = class_name\
    \ + \".\";\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = ext.match(/^([A-Z])/g);\n\
    \        var sm = ext.match(/^([a-z])/g);\n        if (cap.length > strength)\
    \ {\n            strength = cap.length;\n            result += ext;\n        }\n\
    \        else if (sm.length > strength) {\n            strength = sm.length;\n\
    \            result += ext;\n        }\n    }\n    return result;\n}\n", "   \
    \ var strength = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = ext.length - ext.replace(/[a-z]/g,\
    \ \"\").length;\n        var sm = ext.length - ext.replace(/[A-Z]/g, \"\").length;\n\
    \        if (cap - sm > strength) {\n            strength = cap - sm;\n      \
    \      extension = ext;\n        }\n    }\n    return class_name + \".\" + extension;\n\
    }\n", "    // Write your code here\n    let result = '';\n    let strength = 0;\n\
    \    let extension_name = '';\n    let extension_index = 0;\n    let class_name_length\
    \ = class_name.length;\n    let extension_length = extensions.length;\n    for\
    \ (let i = 0; i < extension_length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_name_length = extension.length;\n        let extension_strength\
    \ = 0;\n        for (let j = 0; j < extension_name_length; j++) {\n          \
    \  let character = extension[j];\n            if (character.toUpperCase() ===\
    \ character) {\n                extension_strength += 1;\n            } else {\n\
    \                extension_strength += 2;\n            }\n        }\n        if\
    \ (extension_strength > strength) {\n            strength = extension_strength;\n\
    \            extension_index = i;\n        }\n    }\n    extension_name = extensions[extension_index];\n\
    \    result = class_name + '.' + extension_name;\n    return result;\n}\n", " \
    \   let class_name_lower = class_name.toLowerCase();\n    let class_name_upper\
    \ = class_name.toUpperCase();\n    let class_name_length = class_name.length;\n\
    \    let class_name_upper_length = class_name_upper.length;\n    let class_name_lower_length\
    \ = class_name_lower.length;\n    let class_name_extensions = [];\n    let class_name_extensions_length\
    \ = 0;\n    let class_name_extensions_upper_length = 0;\n    let class_name_extensions_lower_length\
    \ = 0;\n    let class_name_extensions_upper_count = 0;\n    let class_name_extensions_lower_count\
    \ = 0;\n    let class_name_extensions_count = 0;\n    for (let i = 0; i < class_name_length;\
    \ i++) {\n        if (class_name[i] === class_name_upper[i]) {\n            class_name_extensions_upper_count++;\n\
    \        }\n        else if (class_name[i] === class_name_lower[i]) {\n      \
    \      class_name_extensions_lower_count++;\n        }\n        else {\n     \
    \       class_name_extensions_count++;\n        }\n    }\n    for (let i = 0;\
    \ i < class_name_length; i++) {\n        if (class_name[i] === class_name_upper[i])\
    \ {\n            class_name_extensions[class_name_extensions_length] = class_name_upper[i];\n\
    \            class_name_extensions_length++;\n        }\n        else if (class_name[i]\
    \ === class_name_lower[i]) {\n            class_name_extensions[class_name_extensions_length]\
    \ = class_name_lower[i];\n            class_name_extensions_length++;\n      \
    \  }\n        else {\n            class_name_extensions[class_name_extensions_length]\
    \ = class_name[i];\n            class_name_extensions_length++;\n        }\n \
    \   }\n    for (let i = 0; i < class_name_extensions_length", "    // Write your\
    \ code here\n    let strength = 0;\n    let extension = '';\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let cap = extensions[i].match(/[A-Z]/g);\n\
    \        let sm = extensions[i].match(/[a-z]/g);\n        strength += cap.length\
    \ - sm.length;\n        if (cap.length > strength) {\n            strength = cap.length;\n\
    \            extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + extension;\n}\n", "    var strength = 0;\n    var extension_name = \"\
    \";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = extension.match(/^[A-Z]/g);\n        var\
    \ sm = extension.match(/^[a-z]/g);\n        var strength_of_extension = cap.length\
    \ - sm.length;\n        if (strength_of_extension > strength) {\n            strength\
    \ = strength_of_extension;\n            extension_name = extension;\n        }\n\
    \    }\n    return class_name + \".\" + extension_name;\n}\n", "    let class_name_upper\
    \ = class_name.toUpperCase();\n    let class_name_lower = class_name.toLowerCase();\n\
    \    let strength = 0;\n    let strongest_extension = \"\";\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let extension_upper = extension.toUpperCase();\n        let extension_lower\
    \ = extension.toLowerCase();\n        let extension_strength = 0;\n        let\
    \ extension_strength_upper = 0;\n        let extension_strength_lower = 0;\n \
    \       for (let j = 0; j < extension.length; j++) {\n            if (extension[j]\
    \ === \"A\") {\n                extension_strength_upper += 1;\n            }\
    \ else if (extension[j] === \"B\") {\n                extension_strength_lower\
    \ += 1;\n            }\n        }\n        extension_strength = extension_strength_upper\
    \ - extension_strength_lower;\n        if (extension_strength > strength) {\n\
    \            strength = extension_strength;\n            strongest_extension =\
    \ extension;\n        }\n    }\n    return class_name_upper + \".\" + strongest_extension;\n\
    }\n", "    // Write your code here\n    let result = class_name;\n    let strength\
    \ = 0;\n    let extension_name = \"\";\n    let extension_index = 0;\n    for\
    \ (let i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let extension_strength = 0;\n        let extension_name_length = extension.length;\n\
    \        for (let j = 0; j < extension_name_length; j++) {\n            let character\
    \ = extension[j];\n            if (character.toUpperCase() > character.toLowerCase())\
    \ {\n                extension_strength += 1;\n            }\n        }\n    \
    \    if (extension_strength > strength) {\n            strength = extension_strength;\n\
    \            extension_index = i;\n        }\n    }\n    result += \".\" + extensions[extension_index];\n\
    \    return result;\n}\n", "    var strength = 0;\n    var extension = extensions[0];\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var extension_name\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            } else {\n   \
    \             sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            extension = extension_name;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let\
    \ class_name_upper = class_name.toUpperCase();\n    let class_name_lower = class_name.toLowerCase();\n\
    \    let strength = 0;\n    let strongest_extension = \"\";\n    for (let i =\
    \ 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n \
    \       let extension_upper = extension.toUpperCase();\n        let extension_lower\
    \ = extension.toLowerCase();\n        let cap = extension_upper.length;\n    \
    \    let sm = extension_lower.length;\n        strength += (cap - sm);\n     \
    \   if (strength > strength) {\n            strength = strength;\n           \
    \ strongest_extension = extension;\n        }\n    }\n    return class_name_upper\
    \ + \".\" + strongest_extension;\n}\n", "    // Write your code here\n    let\
    \ strength = 0;\n    let extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        let ext = extensions[i];\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            extension = ext;\n          \
    \  strength = cap - sm;\n        }\n    }\n    return class_name + \".\" + extension;\n\
    }\n", "    var strength = 0;\n    var extension_name = \"\";\n    for (var i =\
    \ 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n \
    \       var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength_of_extension) {\n            strength_of_extension = strength;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    let strength = 0;\n    let extension_name\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let extension\
    \ = extensions[i];\n        let cap = extension.match(/[A-Z]/g);\n        let\
    \ sm = extension.match(/[a-z]/g);\n        strength += cap.length - sm.length;\n\
    \        if (strength > strength) {\n            strength = cap.length - sm.length;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    let class_name_lower = class_name.toLowerCase();\n\
    \    let extensions_lower = extensions.map(e => e.toLowerCase());\n    let strength\
    \ = 0;\n    let strongest_extension = \"\";\n    for (let i = 0; i < extensions_lower.length;\
    \ i++) {\n        let extension_lower = extensions_lower[i];\n        let cap\
    \ = extension_lower.match(/[A-Z]/g).length;\n        let sm = extension_lower.match(/[a-z]/g).length;\n\
    \        strength += cap - sm;\n        if (strength > strength) {\n         \
    \   strength = strength;\n            strongest_extension = class_name_lower +\
    \ \".\" + extension_lower;\n        }\n    }\n    return strongest_extension;\n\
    }\n", "    var strength = 0;\n    var extension = '';\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var cap = 0;\n        var sm = 0;\n     \
    \   for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j].toUpperCase()\
    \ !== extensions[i][j]) {\n                cap++;\n            }\n           \
    \ if (extensions[i][j].toLowerCase() !== extensions[i][j]) {\n               \
    \ sm++;\n            }\n        }\n        if (cap - sm > strength) {\n      \
    \      strength = cap - sm;\n            extension = extensions[i];\n        }\n\
    \    }\n    return class_name + '.' + extension;\n}\n", "    var result: string\
    \ = class_name;\n    var strength: number = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext: string = extensions[i];\n        var cap: number =\
    \ ext.match(/[A-Z]/g).length;\n        var sm: number = ext.match(/[a-z]/g).length;\n\
    \        strength = cap - sm;\n        if (strength > strength) {\n          \
    \  result = class_name + \".\" + ext;\n        }\n    }\n    return result;\n\
    }\n", "    let strength = 0;\n    let extension = '';\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let cap = 0;\n        let sm = 0;\n     \
    \   for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap++;\n            }\n\
    \            if (extensions[i][j] === extensions[i][j].toLowerCase()) {\n    \
    \            sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > extension.length) {\n            extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + extension;\n}\n", "    var result\
    \ = class_name + \".\";\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n\
    \        var sm = extension.match(/[a-z]/g);\n        strength += cap.length -\
    \ sm.length;\n    }\n    for (var i = 0; i < extensions.length; i++) {\n     \
    \   var extension = extensions[i];\n        if (extension.match(/[A-Z]/g).length\
    \ == strength) {\n            result += extension;\n        }\n    }\n    return\
    \ result;\n}\n", "    var strength = 0;\n    var extension = null;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n   \
    \     var cap = ext.length - ext.replace(/[^A-Z]/g, \"\").length;\n        var\
    \ sm = ext.length - ext.replace(/[^a-z]/g, \"\").length;\n        strength +=\
    \ cap - sm;\n        if (strength > strength) {\n            extension = ext;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var\
    \ strength = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n\
    \        var sm = ext.match(/[a-z]/g);\n        var s = cap.length - sm.length;\n\
    \        if (s > strength) {\n            strength = s;\n            extension\
    \ = ext;\n        }\n    }\n    return class_name + \".\" + extension;\n}\n",
  "    var strength = 0;\n    var extension_name = \"\";\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var extension = extensions[i];\n        var\
    \ cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength_of_extension) {\n            strength_of_extension = strength;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    var result = class_name;\n    var strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n        var\
    \ sm = extension.match(/[a-z]/g);\n        var strength_value = cap.length - sm.length;\n\
    \        if (strength_value > strength) {\n            strength = strength_value;\n\
    \            result = class_name + \".\" + extension;\n        }\n    }\n    return\
    \ result;\n}\n", "    var strength = 0;\n    var extension = '';\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension_name = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension_name.length;\
    \ j++) {\n            if (extension_name[j].toUpperCase() === extension_name[j])\
    \ {\n                cap++;\n            }\n            if (extension_name[j].toLowerCase()\
    \ === extension_name[j]) {\n                sm++;\n            }\n        }\n\
    \        strength += cap - sm;\n        if (strength > extension.length) {\n \
    \           extension = extension_name;\n        }\n    }\n    return class_name\
    \ + '.' + extension;\n}\n", "    let strength = 0;\n    let extension_name = \"\
    \";\n    for (let i = 0; i < extensions.length; i++) {\n        let cap = 0;\n\
    \        let sm = 0;\n        for (let j = 0; j < extensions[i].length; j++) {\n\
    \            if (extensions[i][j] === extensions[i][j].toUpperCase()) {\n    \
    \            cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength) {\n            strength = cap - sm;\n            extension_name\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    var result = class_name + \".\";\n    var strength = 0;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n\
    \        var cap = extension.match(/[A-Z]/g);\n        var sm = extension.match(/[a-z]/g);\n\
    \        if (cap.length > strength) {\n            strength = cap.length - sm.length;\n\
    \            result += extension;\n        }\n    }\n    return result;\n}\n",
  "    let strength = 0;\n    let extension = extensions[0];\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let current_extension = extensions[i];\n\
    \        let current_strength = 0;\n        let current_cap = 0;\n        let\
    \ current_sm = 0;\n        for (let j = 0; j < current_extension.length; j++)\
    \ {\n            if (current_extension[j].toUpperCase() === current_extension[j])\
    \ {\n                current_cap++;\n            } else {\n                current_sm++;\n\
    \            }\n        }\n        strength += (current_cap - current_sm) / current_cap;\n\
    \        if (strength > strength) {\n            extension = current_extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var\
    \ strength = 0;\n    var extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] == \"A\" ||\
    \ extensions[i][j] == \"a\") {\n                cap++;\n            }\n      \
    \      else {\n                sm++;\n            }\n        }\n        strength\
    \ += cap - sm;\n        if (strength > extension.length) {\n            extension\
    \ = extensions[i];\n        }\n    }\n    return class_name + \".\" + extension;\n\
    }\n", "    let class_name_array = class_name.split(\".\");\n    let class_name_length\
    \ = class_name_array.length;\n    let extensions_array = extensions;\n    let\
    \ extensions_length = extensions_array.length;\n    let class_name_extensions\
    \ = class_name_array.slice(class_name_length - 1, class_name_length);\n    let\
    \ extensions_extensions = extensions_array.slice(extensions_length - 1, extensions_length);\n\
    \    let class_name_extensions_array = class_name_extensions.split(\"_\");\n \
    \   let class_name_extensions_length = class_name_extensions_array.length;\n \
    \   let extensions_extensions_array = extensions_extensions.split(\"_\");\n  \
    \  let extensions_extensions_length = extensions_extensions_array.length;\n  \
    \  let class_name_extensions_extensions = [];\n    let extensions_extensions_extensions\
    \ = [];\n    for (let i = 0; i < class_name_extensions_length; i++) {\n      \
    \  class_name_extensions_extensions.push(class_name_extensions_array[i].toUpperCase());\n\
    \    }\n    for (let i = 0; i < extensions_extensions_length; i++) {\n       \
    \ extensions_extensions_extensions.push(extensions_extensions_array[i].toLowerCase());\n\
    \    }\n    let class_name_extensions_extensions_array = class_name_extensions_extensions.sort();\n\
    \    let class_name_extensions_extensions_length = class_name_extensions_extensions_array.length;\n\
    \    let extensions_extensions_extensions_array = extensions_extensions_extensions.sort();\n\
    \    let extensions_extensions_extensions_length = extensions_extensions_extensions_array.length;\n\
    \    let class_name_extensions_extensions_extensions = [];\n    let extensions_extensions_extensions_extensions\
    \ = [];\n    for (let i = 0; i < class_name_extensions_extensions_length; i++)\
    \ {\n        class_name_extensions_extensions_extensions.push(class_name_", " \
    \   let strength = 0;\n    let extension_name = \"\";\n    let i = 0;\n    let\
    \ j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n   \
    \ let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n\
    \    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\
    \    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n\
    \    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n\
    \    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;",
  "    var result = class_name;\n    var max_strength = 0;\n    var max_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        var extension = extensions[i];\n        var cap = extension.length;\n\
    \        var sm = extension.toLowerCase().length;\n        strength = cap - sm;\n\
    \        if (strength > max_strength) {\n            max_strength = strength;\n\
    \            max_extension = extension;\n        }\n    }\n    result += \".\"\
    \ + max_extension;\n    return result;\n}\n", "    // Write your code here\n \
    \   var result = class_name + \".\";\n    var strength = 0;\n    var extension_name\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = extension.match(/^[A-Z]/g);\n        var\
    \ sm = extension.match(/^[a-z]/g);\n        var strength_value = cap.length -\
    \ sm.length;\n        if (strength_value > strength) {\n            strength =\
    \ strength_value;\n            extension_name = extension;\n        }\n    }\n\
    \    result += extension_name;\n    return result;\n}\n", "    let strength =\
    \ 0;\n    let extension_name = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        let ext = extensions[i];\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            } else {\n              \
    \  sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > strength) {\n            strength = cap - sm;\n            extension_name\
    \ = ext;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    var strength = 0;\n    var extension = '';\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var ext = extensions[i];\n        var cap\
    \ = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length; j++) {\n\
    \            if (ext[j].toUpperCase() === ext[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        strength += cap - sm;\n        if (strength > extension.length)\
    \ {\n            extension = ext;\n        }\n    }\n    return class_name + '.'\
    \ + extension;\n}\n", "    // Write your code here\n    let strength = 0;\n  \
    \  let extension = '';\n    for (let i = 0; i < extensions.length; i++) {\n  \
    \      let cap = extensions[i].match(/[A-Z]/g);\n        let sm = extensions[i].match(/[a-z]/g);\n\
    \        strength += cap.length - sm.length;\n        if (cap.length > strength)\
    \ {\n            extension = extensions[i];\n            strength = cap.length;\n\
    \        }\n    }\n    return class_name + '.' + extension;\n}\n", "    var strength\
    \ = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            } else {\n              \
    \  sm++;\n            }\n        }\n        if (cap - sm > strength) {\n     \
    \       strength = cap - sm;\n            extension = ext;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    // Write your code here\n\
    \    var result = class_name + \".\";\n    var max_strength = 0;\n    var max_extension\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var strength\
    \ = 0;\n        var extension = extensions[i];\n        var cap = extension.length;\n\
    \        var sm = extension.toLowerCase().length;\n        strength = cap - sm;\n\
    \        if (strength > max_strength) {\n            max_strength = strength;\n\
    \            max_extension = extension;\n        }\n    }\n    result += max_extension;\n\
    \    return result;\n}\n", "    let strength = 0;\n    let extension = extensions[0];\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let current_extension\
    \ = extensions[i];\n        let current_strength = 0;\n        for (let j = 0;\
    \ j < current_extension.length; j++) {\n            if (current_extension[j] ===\
    \ 'A' || current_extension[j] === 'a') {\n                current_strength++;\n\
    \            }\n        }\n        if (current_strength > strength) {\n      \
    \      strength = current_strength;\n            extension = current_extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let\
    \ strength = 0;\n    let extension_name = \"\";\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n\
    \    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n\
    \    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n\
    \    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n\
    \    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n\
    \    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n\
    \    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n\
    \    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;", "    var strength\
    \ = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var upper_count = 0;\n\
    \        var lower_count = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            if (extension[j].toUpperCase() === extension[j]) {\n        \
    \        upper_count++;\n            }\n            else {\n                lower_count++;\n\
    \            }\n        }\n        strength += upper_count - lower_count;\n  \
    \      if (strength > strength) {\n            strength = upper_count - lower_count;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    var result: string = class_name;\n   \
    \ var strength: number = 0;\n    var extension: string = \"\";\n    for (var i\
    \ = 0; i < extensions.length; i++) {\n        var extension_name: string = extensions[i];\n\
    \        var cap: number = 0;\n        var sm: number = 0;\n        for (var j\
    \ = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            }\n          \
    \  else {\n                sm++;\n            }\n        }\n        strength =\
    \ cap - sm;\n        if (strength > strength) {\n            extension = extension_name;\n\
    \            strength = strength;\n        }\n    }\n    result += \".\" + extension;\n\
    \    return result;\n}\n", "    let strength = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let ext\
    \ = extensions[i];\n        let cap = 0;\n        let sm = 0;\n        for (let\
    \ j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase() === ext[j])\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > strongest_extension.length) {\n            strongest_extension =\
    \ ext;\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    var strength = 0;\n    var extension = extensions[0];\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var current_extension = extensions[i];\n\
    \        var current_strength = 0;\n        var current_cap = 0;\n        var\
    \ current_sm = 0;\n        for (var j = 0; j < current_extension.length; j++)\
    \ {\n            if (current_extension[j].toUpperCase() !== current_extension[j])\
    \ {\n                current_cap++;\n            }\n            if (current_extension[j].toLowerCase()\
    \ !== current_extension[j]) {\n                current_sm++;\n            }\n\
    \        }\n        strength += current_cap - current_sm;\n        if (strength\
    \ > strength) {\n            extension = current_extension;\n        }\n    }\n\
    \    return class_name + \".\" + extension;\n}\n", "    // Write your code here\n\
    \    let strength = 0;\n    let extension = '';\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            if (extensions[i][j] ===\
    \ extensions[i][j].toLowerCase()) {\n                sm++;\n            }\n  \
    \      }\n        strength += cap - sm;\n        if (strength > extension.length)\
    \ {\n            extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + extension;\n}\n", "    var strength = 0;\n    var extension = extensions[0];\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var current_extension\
    \ = extensions[i];\n        var current_strength = 0;\n        var current_cap\
    \ = 0;\n        var current_sm = 0;\n        for (var j = 0; j < current_extension.length;\
    \ j++) {\n            if (current_extension[j] === 'A' || current_extension[j]\
    \ === 'a') {\n                current_cap++;\n            }\n            if (current_extension[j]\
    \ === 'a') {\n                current_sm++;\n            }\n        }\n      \
    \  strength += current_cap - current_sm;\n        if (strength > strength) {\n\
    \            extension = current_extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension;\n}\n", "    var strength = 0;\n    var extension = null;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var extension_name\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            }\n          \
    \  else {\n                sm++;\n            }\n        }\n        strength +=\
    \ cap - sm;\n        if (strength > extension) {\n            extension = strength;\n\
    \        }\n    }\n    return class_name + \".\" + extensions[0];\n}\n", "   \
    \ // Write your code here\n    var result = class_name;\n    var strength = 0;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        var strength_value = cap.length - sm.length;\n        if (strength_value\
    \ > strength) {\n            strength = strength_value;\n            result =\
    \ class_name + \".\" + ext;\n        }\n    }\n    return result;\n}\n", "   \
    \ // Write your code here\n    let strength = 0;\n    let extension = '';\n  \
    \  for (let i = 0; i < extensions.length; i++) {\n        let cap = extensions[i].match(/[A-Z]/g);\n\
    \        let sm = extensions[i].match(/[a-z]/g);\n        let strength_of_extension\
    \ = cap.length - sm.length;\n        if (strength_of_extension > strength) {\n\
    \            strength = strength_of_extension;\n            extension = extensions[i];\n\
    \        }\n    }\n    return class_name + '.' + extension;\n}\n", "    let strength\
    \ = 0;\n    let extension_name = \"\";\n    let extension_index = 0;\n    let\
    \ extension_count = extensions.length;\n    for (let i = 0; i < extension_count;\
    \ i++) {\n        let extension = extensions[i];\n        let extension_length\
    \ = extension.length;\n        let extension_strength = 0;\n        for (let j\
    \ = 0; j < extension_length; j++) {\n            let character = extension[j];\n\
    \            if (character.toUpperCase() === character) {\n                extension_strength++;\n\
    \            }\n        }\n        if (extension_strength > strength) {\n    \
    \        strength = extension_strength;\n            extension_name = extension;\n\
    \            extension_index = i;\n        }\n    }\n    return class_name + \"\
    .\" + extension_name;\n}\n", "    let strength = 0;\n    let strongest_extension\
    \ = \"\";\n    for (let i = 0; i < extensions.length; i++) {\n        let ext\
    \ = extensions[i];\n        let cap = ext.match(/[A-Z]/g);\n        let sm = ext.match(/[a-z]/g);\n\
    \        strength += (cap.length - sm.length);\n        if (strength > strongest_extension.length)\
    \ {\n            strongest_extension = ext;\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension;\n}\n", "    // Write your code here\n    let\
    \ strength = 0\n    let extension = \"\"\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0\n        let sm = 0\n        let ext = extensions[i]\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++\n            } else {\n               \
    \ sm++\n            }\n        }\n        strength += cap - sm\n        if (strength\
    \ > extension.length) {\n            extension = ext\n        }\n    }\n    return\
    \ class_name + \".\" + extension\n}\n", "    var strength = 0;\n    var extension\
    \ = extensions[0];\n    for (var i = 0; i < extensions.length; i++) {\n      \
    \  var s = extensions[i];\n        var cap = 0;\n        var sm = 0;\n       \
    \ for (var j = 0; j < s.length; j++) {\n            if (s[j].toUpperCase() ==\
    \ s[j]) {\n                cap++;\n            }\n            else {\n       \
    \         sm++;\n            }\n        }\n        if (cap - sm > strength) {\n\
    \            strength = cap - sm;\n            extension = s;\n        }\n   \
    \ }\n    return class_name + \".\" + extension;\n}\n", "    var strength = 0;\n\
    \    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = 0;\n        var\
    \ sm = 0;\n        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            extension = ext;\n            strength = cap - sm;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    let class_name_upper\
    \ = class_name.toUpperCase();\n    let class_name_lower = class_name.toLowerCase();\n\
    \    let strength = 0;\n    let strongest_extension = \"\";\n    let extension_name\
    \ = \"\";\n    let extension_name_upper = \"\";\n    let extension_name_lower\
    \ = \"\";\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n  \
    \  let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let", "    var strength = 0;\n    var extension\
    \ = null;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension_name\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            }\n          \
    \  else {\n                sm++;\n            }\n        }\n        strength +=\
    \ (cap - sm);\n        if (strength > strength) {\n            extension = extension_name;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    // Write\
    \ your code here\n    var result = class_name + \".\";\n    var max_strength =\
    \ 0;\n    var max_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        var extension = extensions[i];\n\
    \        var cap = extension.length;\n        var sm = extension.toLowerCase().length;\n\
    \        strength = cap - sm;\n        if (strength > max_strength) {\n      \
    \      max_strength = strength;\n            max_extension = extension;\n    \
    \    }\n    }\n    result += max_extension;\n    return result;\n}\n", "    var\
    \ strength = 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var s = extensions[i];\n        var cap = 0;\n        var sm\
    \ = 0;\n        for (var j = 0; j < s.length; j++) {\n            if (s[j] ==\
    \ '_') {\n                continue;\n            }\n            if (s[j] >= 'A'\
    \ && s[j] <= 'Z') {\n                cap++;\n            }\n            else {\n\
    \                sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = s;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    var strength =\
    \ 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var s = extensions[i];\n        var cap = 0;\n        var sm\
    \ = 0;\n        for (var j = 0; j < s.length; j++) {\n            if (s[j] ===\
    \ '_') {\n                continue;\n            }\n            if (s[j] === 'A'\
    \ || s[j] === 'a') {\n                cap++;\n            }\n            if (s[j]\
    \ === 'a') {\n                sm++;\n            }\n        }\n        if (cap\
    \ - sm > strength) {\n            strength = cap - sm;\n            extension\
    \ = s;\n        }\n    }\n    return class_name + \".\" + extension;\n}\n", " \
    \   let strength = 0;\n    let extension = extensions[0];\n    for (let i = 0;\
    \ i < extensions.length; i++) {\n        let curr_strength = 0;\n        let curr_extension\
    \ = extensions[i];\n        for (let j = 0; j < curr_extension.length; j++) {\n\
    \            if (curr_extension[j] === curr_extension[j].toUpperCase()) {\n  \
    \              curr_strength++;\n            }\n        }\n        if (curr_strength\
    \ > strength) {\n            strength = curr_strength;\n            extension\
    \ = curr_extension;\n        }\n    }\n    return class_name + \".\" + extension;\n\
    }\n", "    // Write your code here\n    var result = class_name + \".\";\n   \
    \ var strength = 0;\n    var i = 0;\n    while (i < extensions.length) {\n   \
    \     var extension = extensions[i];\n        var cap = 0;\n        var sm = 0;\n\
    \        for (var j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ !== extension[j]) {\n                cap++;\n            }\n            if (extension[j].toLowerCase()\
    \ !== extension[j]) {\n                sm++;\n            }\n        }\n     \
    \   if (cap - sm > strength) {\n            strength = cap - sm;\n        }\n\
    \        i++;\n    }\n    if (strength === 0) {\n        return class_name;\n\
    \    }\n    for (var j = 0; j < extensions.length; j++) {\n        var extension\
    \ = extensions[j];\n        if (extension.length === strength) {\n           \
    \ result += extension;\n        }\n    }\n    return result;\n}\n", "    var strength\
    \ = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension_name = extensions[i];\n        var cap = extension_name.match(/[A-Z]/g);\n\
    \        var sm = extension_name.match(/[a-z]/g);\n        var strength_value\
    \ = cap.length - sm.length;\n        if (strength_value > strength) {\n      \
    \      strength = strength_value;\n            extension = extension_name;\n \
    \       }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var strength\
    \ = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() !== extension[j]) {\n                cap++;\n\
    \            }\n            if (extension[j].toLowerCase() !== extension[j]) {\n\
    \                sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            extension_name = extension;\n\
    \            strength = cap - sm;\n        }\n    }\n    return class_name + \"\
    .\" + extension_name;\n}\n", "    var result = class_name;\n    var strength =\
    \ 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = extension.match(/([A-Z])/g);\n        var\
    \ sm = extension.match(/([a-z])/g);\n        var strength_value = cap.length -\
    \ sm.length;\n        if (strength_value > strength) {\n            strength =\
    \ strength_value;\n            result = class_name + \".\" + extension;\n    \
    \    }\n    }\n    return result;\n}\n", "    var strength = 0;\n    var extension\
    \ = '';\n    for (var i = 0; i < extensions.length; i++) {\n        var cap =\
    \ 0;\n        var sm = 0;\n        for (var j = 0; j < extensions[i].length; j++)\
    \ {\n            if (extensions[i][j].toUpperCase() !== extensions[i][j]) {\n\
    \                cap++;\n            }\n            if (extensions[i][j].toLowerCase()\
    \ !== extensions[i][j]) {\n                sm++;\n            }\n        }\n \
    \       strength += (cap - sm) / extensions[i].length;\n        if (strength >\
    \ extension) {\n            extension = extensions[i];\n        }\n    }\n   \
    \ return class_name + '.' + extension;\n}\n", "    // Write your code here\n \
    \   var result = class_name + \".\";\n    var strength = 0;\n    var i = 0;\n\
    \    for (i = 0; i < extensions.length; i++) {\n        var cap = extensions[i].match(/[A-Z]/g);\n\
    \        var sm = extensions[i].match(/[a-z]/g);\n        var strength_value =\
    \ cap.length - sm.length;\n        if (strength_value > strength) {\n        \
    \    strength = strength_value;\n            result = result + extensions[i];\n\
    \        }\n    }\n    return result;\n}\n", "    var strength = 0;\n    var extension\
    \ = extensions[0];\n    for (var i = 0; i < extensions.length; i++) {\n      \
    \  var ext = extensions[i];\n        var cap = 0;\n        var sm = 0;\n     \
    \   for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ == ext[j]) {\n                cap++;\n            }\n            else {\n  \
    \              sm++;\n            }\n        }\n        strength += (cap - sm);\n\
    \        if (strength > strength) {\n            extension = ext;\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    // Write your code\
    \ here\n    let strength = 0\n    let extension = \"\"\n    for (let i = 0; i\
    \ < extensions.length; i++) {\n        let cap = 0\n        let sm = 0\n     \
    \   for (let j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === extensions[i][j].toUpperCase()) {\n                cap += 1\n          \
    \  }\n            else {\n                sm += 1\n            }\n        }\n\
    \        strength += cap - sm\n        if (strength > extension.length) {\n  \
    \          extension = extensions[i]\n        }\n    }\n    return class_name\
    \ + \".\" + extension\n}\n", "    // Write your code here\n    let strength =\
    \ 0;\n    let maxStrength = 0;\n    let maxStrengthExtension = '';\n    for (let\
    \ i = 0; i < extensions.length; i++) {\n        let extension = extensions[i];\n\
    \        let cap = extension.match(/([A-Z])/g);\n        let sm = extension.match(/([a-z])/g);\n\
    \        let strength = cap.length - sm.length;\n        if (strength > maxStrength)\
    \ {\n            maxStrength = strength;\n            maxStrengthExtension = extension;\n\
    \        }\n    }\n    return class_name + '.' + maxStrengthExtension;\n}\n",
  "    let strength = 0;\n    let extension_name = \"\";\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension = extensions[i];\n        let\
    \ cap = 0;\n        let sm = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            } else {\n                sm++;\n          \
    \  }\n        }\n        strength += cap - sm;\n        if (strength > strength)\
    \ {\n            strength = cap - sm;\n            extension_name = extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "  \
    \  var strength = 0;\n    var extension = '';\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var cap = 0;\n        var sm = 0;\n        var ext = extensions[i];\n\
    \        for (var j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ == ext[j]) {\n                cap++;\n            }\n            else {\n  \
    \              sm++;\n            }\n        }\n        if (cap - sm > strength)\
    \ {\n            strength = cap - sm;\n            extension = ext;\n        }\n\
    \    }\n    return class_name + '.' + extension;\n}\n", "    var strength = 0;\n\
    \    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ === current_extension[j]) {\n                current_cap++;\n            }\n\
    \            else {\n                current_sm++;\n            }\n        }\n\
    \        strength += (current_cap - current_sm);\n        if (strength > strength)\
    \ {\n            extension = current_extension;\n        }\n    }\n    return\
    \ class_name + \".\" + extension;\n}\n", "    var result: string = class_name;\n\
    \    var strength: number = 0;\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var extension: string = extensions[i];\n        var cap: number =\
    \ 0;\n        var sm: number = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength = cap - sm;\n        if (strength\
    \ > strength) {\n            result = class_name + \".\" + extension;\n      \
    \  }\n    }\n    return result;\n}\n", "    // Write your code here\n    var result\
    \ = \"\";\n    var strength = 0;\n    var extension_name = \"\";\n    var extension_name_index\
    \ = 0;\n    var extension_name_length = 0;\n    var extension_name_count = 0;\n\
    \    var extension_name_index_count = 0;\n    var extension_name_index_count_max\
    \ = 0;\n    var extension_name_index_count_min = 0;\n    var extension_name_index_count_sum\
    \ = 0;\n    var extension_name_index_count_sum_max = 0;\n    var extension_name_index_count_sum_min\
    \ = 0;\n    var extension_name_index_count_sum_sum = 0;\n    var extension_name_index_count_sum_sum_max\
    \ = 0;\n    var extension_name_index_count_sum_sum_min = 0;\n    var extension_name_index_count_sum_sum_sum\
    \ = 0;\n    var extension_name_index_count_sum_sum_sum_max = 0;\n    var extension_name_index_count_sum_sum_sum_min\
    \ = 0;\n    var extension_name_index_count_sum_sum_sum_sum = 0;\n    var extension_name_index_count_sum_sum_sum_sum_max\
    \ = 0;\n    var extension_name_index_count_sum_sum_sum_sum_min = 0;\n    var extension_name_index_count_sum_sum_sum_sum_sum\
    \ = 0;\n    var extension_name_index_count_sum_sum_sum_sum_sum_max = 0;\n    var\
    \ extension_name_index_count_sum_sum_sum_sum_sum_min = 0;\n    var extension_name_index_count_sum_sum_sum_sum_sum_sum\
    \ = 0;\n    var extension_name_index_count_sum_sum_sum_sum_sum_sum_max = 0;\n\
    \    var extension_name_index_count_sum_sum_sum_sum_sum_sum_min = 0;\n    var\
    \ extension_name_index_count_sum_sum_sum_sum_sum_sum_", "    let strength = 0;\n\
    \    let extension = extensions[0];\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let current_extension = extensions[i];\n        let current_strength\
    \ = 0;\n        let current_cap = 0;\n        let current_sm = 0;\n        for\
    \ (let j = 0; j < current_extension.length; j++) {\n            let current_char\
    \ = current_extension[j];\n            if (current_char.toUpperCase() === current_char)\
    \ {\n                current_cap++;\n            } else {\n                current_sm++;\n\
    \            }\n        }\n        strength += current_cap - current_sm;\n   \
    \     if (strength > strength) {\n            extension = current_extension;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let\
    \ strength = 0;\n    let extension = extensions[0];\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > strength) {\n            extension = extensions[i];\n        }\n\
    \    }\n    return class_name + \".\" + extension;\n}\n", "    let strength =\
    \ 0;\n    let extension_name = \"\";\n    let i = 0;\n    for (i = 0; i < extensions.length;\
    \ i++) {\n        let extension = extensions[i];\n        let cap = 0;\n     \
    \   let sm = 0;\n        for (let j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() === extension[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        strength += cap - sm;\n        if (strength > strength) {\n \
    \           strength = cap - sm;\n            extension_name = extension;\n  \
    \      }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "    var\
    \ strength = 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ !== current_extension[j]) {\n                current_cap++;\n            }\n\
    \            if (current_extension[j].toLowerCase() !== current_extension[j])\
    \ {\n                current_sm++;\n            }\n        }\n        strength\
    \ += current_cap - current_sm;\n        if (strength > strength) {\n         \
    \   extension = current_extension;\n        }\n    }\n    return class_name +\
    \ \".\" + extension;\n}\n", "    let class_name_upper = class_name.toUpperCase();\n\
    \    let class_name_lower = class_name.toLowerCase();\n    let strength = 0;\n\
    \    let strongest_extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let extension_upper = extensions[i].toUpperCase();\n       \
    \ let extension_lower = extensions[i].toLowerCase();\n        let extension_strength\
    \ = 0;\n        let extension_name_upper = extension_upper.split(\"_\")[0];\n\
    \        let extension_name_lower = extension_lower.split(\"_\")[0];\n       \
    \ if (extension_name_upper.length > extension_name_lower.length) {\n         \
    \   extension_strength = extension_name_upper.length - extension_name_lower.length;\n\
    \        } else {\n            extension_strength = extension_name_lower.length\
    \ - extension_name_upper.length;\n        }\n        if (extension_strength >\
    \ strength) {\n            strength = extension_strength;\n            strongest_extension\
    \ = class_name + \".\" + extension_upper;\n        }\n    }\n    return strongest_extension;\n\
    }\n", "    var strength = 0;\n    var extension = extensions[0];\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var s = extensions[i];\n     \
    \   var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < s.length; j++)\
    \ {\n            if (s[j] === 'A' || s[j] === 'a') {\n                cap++;\n\
    \            }\n            if (s[j] === 'a') {\n                sm++;\n     \
    \       }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            extension = s;\n        }\n    }\n    return class_name\
    \ + \".\" + extension;\n}\n", "    var strength = 0;\n    var extension = null;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var extension_name\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            } else {\n   \
    \             sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > extension) {\n            extension = strength;\n    \
    \    }\n    }\n    return class_name + \".\" + extensions[0];\n}\n", "    let\
    \ strength = 0;\n    let extension = null;\n    let extension_name = null;\n \
    \   let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n\
    \    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n\
    \    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n    let w = 0;\n\
    \    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n    let b = 0;\n\
    \    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n    let g = 0;\n\
    \    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n    let l = 0;\n\
    \    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n    let q = 0;\n\
    \    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n    let v = 0;\n\
    \    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n    let a = 0;\n\
    \    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n    let f = 0;\n\
    \    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;",
  "    // Write your code here\n    let strength = 0;\n    let extension = '';\n \
    \   let i = 0;\n    for (i = 0; i < extensions.length; i++) {\n        let cap\
    \ = extensions[i].match(/[A-Z]/g);\n        let sm = extensions[i].match(/[a-z]/g);\n\
    \        strength = cap.length - sm.length;\n        if (strength > strength)\
    \ {\n            extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + extension;\n}\n", "    var ext_strength = 0;\n    var ext_name = \"\"\
    ;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var ext_cap = ext.length - ext.replace(/[A-Z]/g, \"\").length;\n    \
    \    var ext_sm = ext.length - ext.replace(/[a-z]/g, \"\").length;\n        if\
    \ (ext_cap - ext_sm > ext_strength) {\n            ext_strength = ext_cap - ext_sm;\n\
    \            ext_name = ext;\n        }\n    }\n    return class_name + \".\"\
    \ + ext_name;\n}\n", "    var strength = 0;\n    var extension = \"\";\n    for\
    \ (var i = 0; i < extensions.length; i++) {\n        var extension_name = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension_name.length;\
    \ j++) {\n            if (extension_name[j].toUpperCase() === extension_name[j])\
    \ {\n                cap++;\n            } else {\n                sm++;\n   \
    \         }\n        }\n        strength += cap - sm;\n        if (strength >\
    \ strength) {\n            extension = extension_name;\n        }\n    }\n   \
    \ return class_name + \".\" + extension;\n}\n", "    var strength = 0;\n    var\
    \ extension = extensions[0];\n    for (var i = 0; i < extensions.length; i++)\
    \ {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ === current_extension[j]) {\n                current_cap++;\n            } else\
    \ {\n                current_sm++;\n            }\n        }\n        strength\
    \ += current_cap - current_sm;\n        if (strength > strength) {\n         \
    \   extension = current_extension;\n            strength = current_strength;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    // your\
    \ code here\n    var strength = 0;\n    var result = class_name;\n    for (var\
    \ i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n   \
    \     var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        strength = cap.length - sm.length;\n        if (strength > 0) {\n   \
    \         result = result + \".\" + ext;\n        }\n    }\n    return result;\n\
    }\n", "    // Write your code here\n    var result = class_name;\n    var strength\
    \ = 0;\n    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = ext.match(/[A-Z]/g);\n        var sm = ext.match(/[a-z]/g);\n\
    \        var strength = cap.length - sm.length;\n        if (strength > strength)\
    \ {\n            result = class_name + \".\" + ext;\n        }\n    }\n    return\
    \ result;\n}\n", "    let class_name_upper = class_name.toUpperCase();\n    let\
    \ class_name_lower = class_name.toLowerCase();\n    let class_name_length = class_name.length;\n\
    \    let extensions_length = extensions.length;\n    let strength = 0;\n    let\
    \ strongest_extension = \"\";\n    let i = 0;\n    let j = 0;\n    let k = 0;\n\
    \    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n    let p = 0;\n\
    \    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n    let u = 0;\n\
    \    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n    let z = 0;\n\
    \    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n    let e = 0;\n\
    \    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n    let j = 0;\n\
    \    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n    let o = 0;\n\
    \    let p = 0;\n    let q = 0;\n    let r = 0;\n    let s = 0;\n    let t = 0;\n\
    \    let u = 0;\n    let v = 0;\n    let w = 0;\n    let x = 0;\n    let y = 0;\n\
    \    let z = 0;\n    let a = 0;\n    let b = 0;\n    let c = 0;\n    let d = 0;\n\
    \    let e = 0;\n    let f = 0;\n    let g = 0;\n    let h = 0;\n    let i = 0;\n\
    \    let j = 0;\n    let k = 0;\n    let l = 0;\n    let m = 0;\n    let n = 0;\n\
    \    let o = 0;\n    let p = 0;\n    let q = 0;\n    let r = 0;\n", "    // Write\
    \ your code here\n    var result = class_name + \".\";\n    var max_strength =\
    \ 0;\n    var max_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var strength = 0;\n        var extension = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength = cap - sm;\n        if (strength\
    \ > max_strength) {\n            max_strength = strength;\n            max_extension\
    \ = extension;\n        }\n    }\n    result += max_extension;\n    return result;\n\
    }\n", "    var strength = 0;\n    var extension_name = \"\";\n    for (var i =\
    \ 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n \
    \       var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength_of_extension) {\n            strength_of_extension = strength;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    // Write your code here\n    let strength\
    \ = 0;\n    let extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > extension.length) {\n            extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var result\
    \ = class_name + \".\";\n    var strength = 0;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n\
    \        var sm = extension.match(/[a-z]/g);\n        strength += cap.length -\
    \ sm.length;\n    }\n    for (var i = 0; i < extensions.length; i++) {\n     \
    \   var extension = extensions[i];\n        if (extension.indexOf(result) ===\
    \ 0) {\n            return result + extension;\n        }\n    }\n    return result\
    \ + extensions[0];\n}\n", "    // your code here\n    var result = class_name\
    \ + \".\" + extensions[0];\n    var strength = extensions[0].length - extensions[0].match(/[a-z]/g).length;\n\
    \    for (var i = 1; i < extensions.length; i++) {\n        var curr_strength\
    \ = extensions[i].length - extensions[i].match(/[a-z]/g).length;\n        if (curr_strength\
    \ > strength) {\n            strength = curr_strength;\n            result = class_name\
    \ + \".\" + extensions[i];\n        }\n    }\n    return result;\n}\n", "    var\
    \ strength = 0;\n    var extension = '';\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n\
    \        var sm = ext.match(/[a-z]/g);\n        if (cap.length > strength) {\n\
    \            strength = cap.length;\n            extension = ext;\n        }\n\
    \        else if (sm.length > strength && cap.length == strength) {\n        \
    \    strength = sm.length;\n            extension = ext;\n        }\n    }\n \
    \   return class_name + '.' + extension;\n}\n", "    var class_name_upper = class_name.toUpperCase();\n\
    \    var class_name_lower = class_name.toLowerCase();\n    var strength = 0;\n\
    \    var strongest_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension_upper = extensions[i].toUpperCase();\n       \
    \ var extension_lower = extensions[i].toLowerCase();\n        var extension_strength\
    \ = 0;\n        var extension_index = 0;\n        for (var j = 0; j < extension_upper.length;\
    \ j++) {\n            if (extension_upper[j] == class_name_upper[extension_index])\
    \ {\n                extension_strength += 1;\n                extension_index\
    \ += 1;\n            }\n            else {\n                extension_index =\
    \ 0;\n            }\n        }\n        for (var j = 0; j < extension_lower.length;\
    \ j++) {\n            if (extension_lower[j] == class_name_lower[extension_index])\
    \ {\n                extension_strength += 1;\n                extension_index\
    \ += 1;\n            }\n            else {\n                extension_index =\
    \ 0;\n            }\n        }\n        if (extension_strength > strength) {\n\
    \            strength = extension_strength;\n            strongest_extension =\
    \ extensions[i];\n        }\n    }\n    return class_name + \".\" + strongest_extension;\n\
    }\n", "    // your code here\n    var i, j, max_strength = 0, max_extension =\
    \ '';\n    for (i = 0; i < extensions.length; i++) {\n        var strength = 0;\n\
    \        for (j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === 'A') {\n                strength += 1;\n            }\n            if (extensions[i][j]\
    \ === 'a') {\n                strength += 1;\n            }\n        }\n     \
    \   if (strength > max_strength) {\n            max_strength = strength;\n   \
    \         max_extension = extensions[i];\n        }\n    }\n    return class_name\
    \ + '.' + max_extension;\n}\n", "    let class_name_upper = class_name.toUpperCase();\n\
    \    let class_name_lower = class_name.toLowerCase();\n    let class_name_extensions\
    \ = class_name_upper + class_name_lower;\n    let class_name_extensions_length\
    \ = class_name_extensions.length;\n    let class_name_extensions_upper = class_name_extensions.toUpperCase();\n\
    \    let class_name_extensions_lower = class_name_extensions.toLowerCase();\n\
    \    let class_name_extensions_extensions = class_name_extensions_upper + class_name_extensions_lower;\n\
    \    let class_name_extensions_extensions_length = class_name_extensions_extensions.length;\n\
    \    let class_name_extensions_extensions_extensions = class_name_extensions_extensions.split(\"\
    \");\n    let class_name_extensions_extensions_extensions_length = class_name_extensions_extensions_extensions.length;\n\
    \    let class_name_extensions_extensions_extensions_extensions = class_name_extensions_extensions_extensions.sort();\n\
    \    let class_name_extensions_extensions_extensions_extensions_length = class_name_extensions_extensions_extensions_extensions.length;\n\
    \    let class_name_extensions_extensions_extensions_extensions_extensions = class_name_extensions_extensions_extensions_extensions.join(\"\
    \");\n    let class_name_extensions_extensions_extensions_extensions_extensions_length\
    \ = class_name_extensions_extensions_extensions_extensions_extensions.length;\n\
    \    let class_name_extensions_extensions_extensions_extensions_extensions_extensions\
    \ = class_name_extensions_extensions_extensions_extensions_extensions.join(\"\"\
    );\n    let class_name_extensions_extensions_extensions_extensions_extensions_extensions_length\
    \ = class_name_extensions_extensions_extensions_extensions_extensions_extensions.length;\n\
    \    let class_name_extensions_ext", "    // your code here\n    var strength\
    \ = 0;\n    var best_extension = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = extension.match(/[A-Z]/g);\n\
    \        var sm = extension.match(/[a-z]/g);\n        strength = cap.length -\
    \ sm.length;\n        if (strength > strength) {\n            strength = strength;\n\
    \            best_extension = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + best_extension;\n}\n", "    var strength = 0;\n    var extension =\
    \ null;\n    for (var i = 0; i < extensions.length; i++) {\n        var extension_name\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension_name.length; j++) {\n            if (extension_name[j].toUpperCase()\
    \ === extension_name[j]) {\n                cap++;\n            } else {\n   \
    \             sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            extension = extension_name;\n\
    \        }\n    }\n    return class_name + \".\" + extension;\n}\n", "    var\
    \ strength = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() === extension[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        strength += cap - sm;\n        if (strength > strength_of_extension)\
    \ {\n            strength_of_extension = strength;\n            extension_name\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    var strength = 0;\n    var extension = '';\n    for (var i = 0; i <\
    \ extensions.length; i++) {\n        var cap = 0;\n        var sm = 0;\n     \
    \   for (var j = 0; j < extensions[i].length; j++) {\n            if (extensions[i][j]\
    \ === 'A' || extensions[i][j] === 'a') {\n                cap++;\n           \
    \ }\n            if (extensions[i][j] === 'a') {\n                sm++;\n    \
    \        }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            extension = extensions[i];\n        }\n    }\n    return\
    \ class_name + '.' + extension;\n}\n", "    var strength = 0;\n    var extension_name\
    \ = \"\";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ === extension[j]) {\n                cap++;\n            }\n            else\
    \ {\n                sm++;\n            }\n        }\n        strength += cap\
    \ - sm;\n        if (strength > strength) {\n            strength = cap - sm;\n\
    \            extension_name = extension;\n        }\n    }\n    return class_name\
    \ + \".\" + extension_name;\n}\n", "    var result: string = class_name;\n   \
    \ var strength: number = 0;\n    for (var i = 0; i < extensions.length; i++) {\n\
    \        var extension: string = extensions[i];\n        var cap: number = 0;\n\
    \        var sm: number = 0;\n        for (var j = 0; j < extension.length; j++)\
    \ {\n            if (extension[j].toUpperCase() === extension[j]) {\n        \
    \        cap++;\n            }\n            else {\n                sm++;\n  \
    \          }\n        }\n        strength = cap - sm;\n        if (strength >\
    \ strength) {\n            result = class_name + \".\" + extension;\n        }\n\
    \    }\n    return result;\n}", "    // Write your code here\n    let strength\
    \ = 0\n    let strongest_extension = \"\"\n    let extension_names = extensions.map(extension\
    \ => extension.toLowerCase())\n    let class_name_lower = class_name.toLowerCase()\n\
    \    for (let i = 0; i < extension_names.length; i++) {\n        let extension_name\
    \ = extension_names[i]\n        let extension_strength = 0\n        let extension_name_lower\
    \ = extension_name.toLowerCase()\n        for (let j = 0; j < class_name_lower.length;\
    \ j++) {\n            let class_name_lower_char = class_name_lower[j]\n      \
    \      if (class_name_lower_char === extension_name_lower[j]) {\n            \
    \    extension_strength += 1\n            }\n        }\n        if (extension_strength\
    \ > strength) {\n            strength = extension_strength\n            strongest_extension\
    \ = extension_name\n        }\n    }\n    return class_name + \".\" + strongest_extension\n\
    }\n", "    // Write your code here\n    let cap = 0\n    let sm = 0\n    let result\
    \ = \"\"\n    let i = 0\n    for (let e of extensions) {\n        let c = e.charCodeAt(0)\n\
    \        if (c >= 65 && c <= 90) {\n            cap += 1\n        }\n        if\
    \ (c >= 97 && c <= 122) {\n            sm += 1\n        }\n        i += 1\n  \
    \  }\n    let strength = cap - sm\n    if (strength > 0) {\n        result = class_name\
    \ + \".\" + extensions[0]\n    }\n    else if (strength < 0) {\n        result\
    \ = class_name + \".\" + extensions[i - 1]\n    }\n    else {\n        result\
    \ = class_name + \".\" + extensions[0]\n    }\n    return result\n}\n", "    var\
    \ strength = 0;\n    var extension_name = \"\";\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var extension = extensions[i];\n        var cap = 0;\n     \
    \   var sm = 0;\n        for (var j = 0; j < extension.length; j++) {\n      \
    \      if (extension[j].toUpperCase() == extension[j]) {\n                cap++;\n\
    \            }\n            else {\n                sm++;\n            }\n   \
    \     }\n        strength += cap - sm;\n        if (strength > strength) {\n \
    \           strength = cap - sm;\n            extension_name = extension;\n  \
    \      }\n    }\n    return class_name + \".\" + extension_name;\n}\n", "    var\
    \ strength = 0;\n    var extension = extensions[0];\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var current_extension = extensions[i];\n        var current_strength\
    \ = 0;\n        var current_cap = 0;\n        var current_sm = 0;\n        for\
    \ (var j = 0; j < current_extension.length; j++) {\n            if (current_extension[j].toUpperCase()\
    \ === current_extension[j]) {\n                current_cap++;\n            } else\
    \ {\n                current_sm++;\n            }\n        }\n        strength\
    \ += current_cap - current_sm;\n        if (strength > strength) {\n         \
    \   extension = current_extension;\n        }\n    }\n    return class_name +\
    \ \".\" + extension;\n}\n", "    var strength = 0;\n    var extension_name = \"\
    \";\n    for (var i = 0; i < extensions.length; i++) {\n        var extension\
    \ = extensions[i];\n        var cap = 0;\n        var sm = 0;\n        for (var\
    \ j = 0; j < extension.length; j++) {\n            if (extension[j].toUpperCase()\
    \ == extension[j]) {\n                cap++;\n            } else {\n         \
    \       sm++;\n            }\n        }\n        strength += cap - sm;\n     \
    \   if (strength > strength) {\n            strength = cap - sm;\n           \
    \ extension_name = extension;\n        }\n    }\n    return class_name + \".\"\
    \ + extension_name;\n}\n", "    // your code goes here\n    var result = class_name;\n\
    \    var strength = 0;\n    var extension = null;\n    for (var i = 0; i < extensions.length;\
    \ i++) {\n        var ext = extensions[i];\n        var cap = ext.match(/[A-Z]/g);\n\
    \        var sm = ext.match(/[a-z]/g);\n        var strength = cap.length - sm.length;\n\
    \        if (strength > strength) {\n            extension = ext;\n          \
    \  strength = strength;\n        }\n    }\n    result += \".\" + extension;\n\
    \    return result;\n}\n", "    let strength = 0;\n    let extension = extensions[0];\n\
    \    for (let i = 0; i < extensions.length; i++) {\n        let current_extension\
    \ = extensions[i];\n        let current_strength = 0;\n        let current_cap\
    \ = 0;\n        let current_sm = 0;\n        for (let j = 0; j < current_extension.length;\
    \ j++) {\n            let current_char = current_extension[j];\n            if\
    \ (current_char.toUpperCase() !== current_char) {\n                current_cap++;\n\
    \            }\n            if (current_char.toLowerCase() !== current_char) {\n\
    \                current_sm++;\n            }\n        }\n        strength +=\
    \ current_cap - current_sm;\n        if (strength > strength) {\n            extension\
    \ = current_extension;\n        }\n    }\n    return class_name + \".\" + extension;\n\
    }\n", "    // your code here\n    var strength = 0;\n    var extension = null;\n\
    \    for (var i = 0; i < extensions.length; i++) {\n        var ext = extensions[i];\n\
    \        var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < ext.length;\
    \ j++) {\n            if (ext[j].toUpperCase() === ext[j]) {\n               \
    \ cap++;\n            } else {\n                sm++;\n            }\n       \
    \ }\n        if (cap - sm > strength) {\n            strength = cap - sm;\n  \
    \          extension = ext;\n        }\n    }\n    return class_name + \".\" +\
    \ extension;\n}\n", "    let strength = 0;\n    let extension_name = \"\";\n \
    \   let extension_index = 0;\n    let extension_strength = 0;\n    let extension_name_length\
    \ = 0;\n    let extension_name_index = 0;\n    let extension_name_found = false;\n\
    \    let extension_name_found_index = 0;\n    let extension_name_found_length\
    \ = 0;\n    let extension_name_found_found = false;\n    let extension_name_found_found_index\
    \ = 0;\n    let extension_name_found_found_length = 0;\n    let extension_name_found_found_found\
    \ = false;\n    let extension_name_found_found_found_index = 0;\n    let extension_name_found_found_found_length\
    \ = 0;\n    let extension_name_found_found_found_found = false;\n    let extension_name_found_found_found_found_index\
    \ = 0;\n    let extension_name_found_found_found_found_length = 0;\n    let extension_name_found_found_found_found_found\
    \ = false;\n    let extension_name_found_found_found_found_found_index = 0;\n\
    \    let extension_name_found_found_found_found_found_length = 0;\n    let extension_name_found_found_found_found_found_found\
    \ = false;\n    let extension_name_found_found_found_found_found_found_index =\
    \ 0;\n    let extension_name_found_found_found_found_found_found_length = 0;\n\
    \    let extension_name_found_found_found_found_found_found_found = false;\n \
    \   let extension_name_found_found_found_found_found_found_found_index = 0;\n\
    \    let extension_name_found_found_found_found_found_found_found_length = 0;\n\
    \    let extension_name_found_found_found_found_found_found_found_found = false;\n\
    \    let extension_name_found_found_found_found_found_found_found_found_index\
    \ = 0;\n    let extension_name_found_found_found_found_found_found_found", " \
    \   let strength = 0;\n    let extension_name = \"\";\n    for (let i = 0; i <\
    \ extensions.length; i++) {\n        let extension = extensions[i];\n        let\
    \ cap = 0;\n        let sm = 0;\n        for (let j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        strength += cap - sm;\n        if (strength\
    \ > strength) {\n            strength = cap - sm;\n            extension_name\
    \ = extension;\n        }\n    }\n    return class_name + \".\" + extension_name;\n\
    }\n", "    var strength = 0;\n    var extension_name = \"\";\n    for (var i =\
    \ 0; i < extensions.length; i++) {\n        var extension = extensions[i];\n \
    \       var cap = 0;\n        var sm = 0;\n        for (var j = 0; j < extension.length;\
    \ j++) {\n            if (extension[j].toUpperCase() === extension[j]) {\n   \
    \             cap++;\n            }\n            else {\n                sm++;\n\
    \            }\n        }\n        if (cap - sm > strength) {\n            strength\
    \ = cap - sm;\n            extension_name = extension;\n        }\n    }\n   \
    \ return class_name + \".\" + extension_name;\n}\n", "    // Write your code here\n\
    \    let strength = 0;\n    let extension = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        for (let j = 0; j\
    \ < extensions[i].length; j++) {\n            if (extensions[i][j] === extensions[i][j].toUpperCase())\
    \ {\n                cap++;\n            }\n            else {\n             \
    \   sm++;\n            }\n        }\n        strength += cap - sm;\n        if\
    \ (strength > extension.length) {\n            extension = extensions[i];\n  \
    \      }\n    }\n    return class_name + \".\" + extension;\n}\n", "    let strength\
    \ = 0;\n    let extension_name = \"\";\n    for (let i = 0; i < extensions.length;\
    \ i++) {\n        let cap = 0;\n        let sm = 0;\n        let ext = extensions[i];\n\
    \        for (let j = 0; j < ext.length; j++) {\n            if (ext[j].toUpperCase()\
    \ === ext[j]) {\n                cap++;\n            }\n            else {\n \
    \               sm++;\n            }\n        }\n        strength += cap - sm;\n\
    \        if (strength > strength) {\n            strength = cap - sm;\n      \
    \      extension_name = ext;\n        }\n    }\n    return class_name + \".\"\
    \ + extension_name;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

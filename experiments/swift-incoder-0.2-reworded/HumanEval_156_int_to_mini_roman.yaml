name: HumanEval_156_int_to_mini_roman
language: swift
prompt: "\n/// Given a positive integer, obtain its roman numeral equivalent as a\
  \ string,\n/// and return it in lowercase.\n/// Restrictions: 1 <= num <= 1000\n\
  /// Examples:\n/// >>> int_to_mini_roman(number: 19)\n/// \"xix\"\n/// >>> int_to_mini_roman(number:\
  \ 152)\n/// \"clii\"\n/// >>> int_to_mini_roman(number: 426)\n/// \"cdxxvi\"\nfunc\
  \ int_to_mini_roman(number: Int) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(int_to_mini_roman(number: 19) == \"xix\"\
  )\nassert(int_to_mini_roman(number: 152) == \"clii\")\nassert(int_to_mini_roman(number:\
  \ 251) == \"ccli\")\nassert(int_to_mini_roman(number: 426) == \"cdxxvi\")\nassert(int_to_mini_roman(number:\
  \ 500) == \"d\")\nassert(int_to_mini_roman(number: 1) == \"i\")\nassert(int_to_mini_roman(number:\
  \ 4) == \"iv\")\nassert(int_to_mini_roman(number: 43) == \"xliii\")\nassert(int_to_mini_roman(number:\
  \ 90) == \"xc\")\nassert(int_to_mini_roman(number: 94) == \"xciv\")\nassert(int_to_mini_roman(number:\
  \ 532) == \"dxxxii\")\nassert(int_to_mini_roman(number: 900) == \"cm\")\nassert(int_to_mini_roman(number:\
  \ 994) == \"cmxciv\")\nassert(int_to_mini_roman(number: 1000) == \"m\")"
completions: ["    let roman = mini_roman(number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.lowercased()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digits_count = 0\n    var roman_numeral_digits_index\
    \ = 0\n    var roman_numeral_digits_index_count = 0\n    var roman_numeral_digits_index_count_max\
    \ = 0\n    var roman_numeral_digits_index_count_max_max = 0\n    var roman_numeral_digits_index_count_max_min\
    \ = 0\n    var roman_numeral_digits_index_count_min = 0\n    var roman_numeral_digits_index_count_min_max\
    \ = 0\n    var roman_numeral_digits_index_count_min_min = 0\n    var roman_numeral_digits_index_count_min_index\
    \ = 0\n    var roman_numeral_digits_index_count_max_index = 0\n    var roman_numeral_digits_index_count_max_index\
    \ = 0\n    var roman_numeral_digits_index_count_min_index = 0\n    var roman_numeral_digits_index_count_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min = 0\n    var roman_numeral_digits_index_count_min_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_max = 0\n\
    \    var roman_numeral_digits_index_count_min_index_min_index_min = 0\n    var\
    \ roman_numeral_digits_index_count_min_index_min_index_min_index = 0\n    var\
    \ roman_numeral_digits_index_count_min_index_min_index_min_index_max = 0\n   \
    \ var roman_numeral_digits_index_count_min_index_min_index_min_index_min = 0\n\
    \    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index_min\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index_min_index\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index_min_index_max\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_min_index_min_index_min_index_min_index_min_index_min\
    \ = 0\n    var roman_numeral_digits_index_count_min_index_", "    let roman =\
    \ StringBuilder()\n    let num2roman = num2roman(number)\n    for char in num2roman\
    \ {\n        roman.append(char)\n    }\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\
    \"\n    var roman_numeral_digit_count = 0\n    var roman_numeral_digit_count_max\
    \ = 0\n    var roman_numeral_digit_count_min = 0\n    var roman_numeral_digit_count_max_min\
    \ = 0\n    var roman_numeral_digit_count_max_min_index = 0\n    var roman_numeral_digit_count_max_min_index2\
    \ = 0\n    var roman_numeral_digit_count_max_min_index3 = 0\n    var roman_numeral_digit_count_max_min_index4\
    \ = 0\n    var roman_numeral_digit_count_max_min_index5 = 0\n    var roman_numeral_digit_count_max_min_index6\
    \ = 0\n    var roman_numeral_digit_count_max_min_index7 = 0\n    var roman_numeral_digit_count_max_min_index8\
    \ = 0\n    var roman_numeral_digit_count_max_min_index9 = 0\n    var roman_numeral_digit_count_max_min_index10\
    \ = 0\n    var roman_numeral_digit_count_max_min_index11 = 0\n    var roman_numeral_digit_count_max_min_index12\
    \ = 0\n    var roman_numeral_digit_count_max_min_index13 = 0\n    var roman_numeral_digit_count_max_min_index14\
    \ = 0\n    var roman_numeral_digit_count_max_min_index15 = 0\n    var roman_numeral_digit_count_max_min_index16\
    \ = 0\n    var roman_numeral_digit_count_max_min_index17 = 0\n    var roman_numeral_digit_count_max_min_index18\
    \ = 0\n    var roman_numeral_digit_count_max_min_index19 = 0\n    var roman_numeral_digit_count_max_min_index20\
    \ = 0\n    var roman_numeral_digit_count_max_min_index21 = 0\n    var roman_numeral_digit_count_max_min_index22\
    \ = 0\n    var roman_numeral_digit_count_max_min_index23 = 0\n    var roman_numeral_digit_count_max_min_index24\
    \ = 0\n    var roman_numeral_digit_count_max_min_index25 = 0\n    var roman_numeral_digit_count_max_min_index26\
    \ = 0\n    var roman_numeral_digit_count_max_min_index27 = 0\n    var roman_numeral_digit_count_max_min_index28\
    \ = 0\n    var roman_numeral_digit_count_max_min_index29 = 0\n    var roman_numeral_digit_count_max_min_index30\
    \ = 0\n    var roman_numeral_digit_count_max_min_index31 = 0\n    var roman_numeral_digit_count_max_min_index32\
    \ = 0\n    var roman_numeral_digit_count_max_min_index33 = 0\n    var roman_numeral_digit_count_max_min_index34\
    \ = 0\n    var roman_numeral_digit_count_max_min_index35", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    var roman =\
    \ \"\"\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m\
    \ = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r =\
    \ 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n\
    \    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n \
    \   var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n  \
    \  var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n   \
    \ var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var\
    \ r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w\
    \ = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b =\
    \ 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n\
    \    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n \
    \   var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n  \
    \  var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n   \
    \ var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var\
    \ b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g\
    \ = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var ", "    var roman = \"\"\n    var numeral = number\n  \
    \  var index = 0\n    while numeral > 1000 {\n        numeral /= 1000\n      \
    \  roman += mini_roman[index] + \" \"\n        index++\n    }\n    roman += mini_roman[index]\
    \ + int_to_roman(numeral)\n    return roman.lowercased()", "    var roman = \"\
    \"\n    var num: Int\n    var roman_num: Int\n    var roman_num_str: String\n\
    \    var roman_num_str_c: Int\n    var roman_num_str_c_c: Int\n    var roman_num_str_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c: Int\n\
    \    var roman_num_str_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var\
    \ roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c:\
    \ Int\n    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n\
    \    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c: Int\n\
    \    var roman_num_str_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_c_", "  \
    \  var roman = \"\"\n    var num: Int\n    var remainder: Int\n    for num in\
    \ 1...number {\n        remainder = num % 10\n        roman += mini_roman[remainder]\n\
    \    }\n    return roman.lowercased()", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var romanDigits =\
    \ \"\"\n    var romanNumeral = \"\"\n    var romanNumeralDigits = \"\"\n    var\
    \ romanNumeralDigit = 0\n    var romanNumeralDigitCount = 0\n    var romanNumeralDigitCountMax\
    \ = 0\n    var romanNumeralDigitCountMaxMax = 0\n    var romanNumeralDigitCountMaxMin\
    \ = 0\n    var romanNumeralDigitCountMin = 0\n    var romanNumeralDigitCountMinMax\
    \ = 0\n    var romanNumeralDigitCountMinMin = 0\n    var romanNumeralDigitCountMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMax = 0\n    var romanNumeralDigitCountMinMinMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var romanNumeralDigitCountMinMinMaxMax = 0\n    var romanNumeralDigitCountMinMinMaxMax\
    \ = 0\n    var roman", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.map(String.init).joinWithSeparator(\"\")", "    var roman = \"\"\n   \
    \ var num = 0\n    var index = 0\n    var roman_num = 0\n    var roman_num_index\
    \ = 0\n    var roman_num_digits = 0\n    var roman_num_digits_index = 0\n    var\
    \ roman_num_digits_digit = 0\n    var roman_num_digits_digit_index = 0\n    var\
    \ roman_num_digits_digit_value = 0\n    var roman_num_digits_digit_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value = 0\n    var roman_num_digits_digit_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digits_digit_value_value_value_index\
    \ = 0\n    var roman_num_digits_digit_value_value_value_value = 0\n    var roman_num_digit",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = int_to_roman(number)\n    return roman.lowercased()", "    let roman = StringBuilder()\n\
    \    let numString = String(number)\n    let numStringLength = numString.count\n\
    \    let numStringIntArray = numString.characters\n    let numStringIntArrayLength\
    \ = numStringIntArray.count\n    let numStringIntArrayIndex = 0\n    let numStringIntArrayIndexMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMin = 0\n    let\
    \ numStringIntArrayIndexMinMax = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMin = numStringIntArrayLength\
    \ - 1\n    let numStringIntArrayIndexMinMaxMax = numStringIntArrayLength - 1\n\
    \    let numStringIntArrayIndexMaxMinMax = numStringIntArrayLength - 1\n    let\
    \ numStringIntArrayIndexMinMaxMaxMin = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMax =\
    \ numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMin =\
    \ numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMax =\
    \ numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMaxMax =\
    \ numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMaxMaxMaxMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMaxMaxMaxMaxMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMaxMinMaxMaxMaxMaxMaxMaxMaxMin\
    \ = numStringIntArrayLength - 1\n    let numStringIntArrayIndexMinMaxMaxMaxMaxMaxMaxMaxMaxMax\
    \ = numStringIntArrayLength - 1\n    let num", "    var roman = \"\"\n    var\
    \ remainder = number % 100\n    var digit = number / 100\n    for _ in 0..<digit\
    \ {\n        roman += \"M\"\n    }\n    for _ in 0..<remainder {\n        roman\
    \ += \"C\"\n    }\n    for _ in 0..<digit {\n        roman += \"D\"\n    }\n \
    \   for _ in 0..<remainder {\n        roman += \"X\"\n    }\n    for _ in 0..<digit\
    \ {\n        roman += \"V\"\n    }\n    for _ in 0..<remainder {\n        roman\
    \ += \"I\"\n    }\n    return roman.lowercased()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    let roman = StringBuilder()\n    let num2roman\
    \ = StringBuilder()\n    let num2roman2 = StringBuilder()\n    let num2roman3\
    \ = StringBuilder()\n    let num2roman4 = StringBuilder()\n    let num2roman5\
    \ = StringBuilder()\n    let num2roman6 = StringBuilder()\n    let num2roman7\
    \ = StringBuilder()\n    let num2roman8 = StringBuilder()\n    let num2roman9\
    \ = StringBuilder()\n    let num2roman10 = StringBuilder()\n    let num2roman11\
    \ = StringBuilder()\n    let num2roman12 = StringBuilder()\n    let num2roman13\
    \ = StringBuilder()\n    let num2roman14 = StringBuilder()\n    let num2roman15\
    \ = StringBuilder()\n    let num2roman16 = StringBuilder()\n    let num2roman17\
    \ = StringBuilder()\n    let num2roman18 = StringBuilder()\n    let num2roman19\
    \ = StringBuilder()\n    let num2roman20 = StringBuilder()\n    let num2roman21\
    \ = StringBuilder()\n    let num2roman22 = StringBuilder()\n    let num2roman23\
    \ = StringBuilder()\n    let num2roman24 = StringBuilder()\n    let num2roman25\
    \ = StringBuilder()\n    let num2roman26 = StringBuilder()\n    let num2roman27\
    \ = StringBuilder()\n    let num2roman28 = StringBuilder()\n    let num2roman29\
    \ = StringBuilder()\n    let num2roman30 = StringBuilder()\n    let num2roman31\
    \ = StringBuilder()\n    let num2roman32 = StringBuilder()\n    let num2roman33\
    \ = StringBuilder()\n    let num2roman34 = StringBuilder()\n    let num2roman35\
    \ = StringBuilder()\n    let num2roman36 = StringBuilder()\n    let num2roman37\
    \ = StringBuilder()\n    let num2roman38 = StringBuilder()\n    let num2roman39\
    \ = StringBuilder()\n    let num2roman40 = StringBuilder()\n    let num2roman41\
    \ = StringBuilder()\n    let num2roman42 = StringBuilder()\n    let num2roman43\
    \ = StringBuilder()\n    let num2roman44 = StringBuilder()\n    let num2roman45\
    \ = StringBuilder()\n    let num2roman46 = StringBuilder()\n    let num2roman47\
    \ = StringBuilder()", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.map(String.init).joinWithSeparator(\"\")", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = RomanNumerals(number: number)\n\
    \    return roman.miniRoman", "    let roman = Array(1...number).map { roman_numeral($0)\
    \ }\n    return roman.join()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    let roman =\
    \ MiniRoman(number)\n    return roman.lowercase()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joinWithSeparator(\"\")", "    let\
    \ roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    guard number >= 1 && number <= 1000 else {\n        return\
    \ \"\"\n    }\n    var roman = \"\"\n    var remainder = number\n    var index\
    \ = 0\n    while remainder > 0 {\n        let remainderDigit = remainder % 10\n\
    \        remainder = remainder / 10\n        roman += mini_roman[remainderDigit]\n\
    \        index++\n    }\n    return roman.lowercased()", "    let roman = roman_numeral_to_roman(number)\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var numeral = \"\"\
    \n    var remainder = 0\n    var romanDigits = \"\"\n    var romanNumeral = \"\
    \"\n\n    if number < 1 || number > 1000 {\n        return \"\"\n    }\n\n   \
    \ // Convert integer into roman\n    for remainder in 0..<number {\n        numeral\
    \ = String(number % 10)\n        roman = String(numeral) + String(roman)\n   \
    \     number = number / 10\n    }\n\n    // Convert roman to numeral\n    for\
    \ romanDigit in roman.characters {\n        romanNumeral = String(romanDigit -\
    \ '0') + romanNumeral\n    }\n\n    // Convert numeral to lowercase\n    romanNumeral\
    \ = String(romanNumeral.lowercased())\n\n    // Return romanNumeral\n    return\
    \ romanNumeral", "    let roman = mini_roman(number)\n    return roman.lowercased()",
  "    var roman = \"\"\n    var num: Int\n    var i: Int\n    for i = 1, num = number;\
    \ i > 0; i *= 10 {\n        roman += String(num % i)\n        num /= i\n    }\n\
    \    return roman", "    var roman = \"\"\n    var num = 0\n    var last = 0\n\
    \    var i = 0\n    for _ in 0..<number {\n        roman = roman + roman_digits[num]\n\
    \        num += 1\n    }\n    for _ in 0..<number {\n        if num == 0 {\n \
    \           roman = roman + roman_digits[last]\n        } else {\n           \
    \ roman = roman + roman_digits[num] + roman_digits[last]\n        }\n        last\
    \ += 1\n        num += 1\n    }\n    return roman.lowercased()", "    var roman\
    \ = \"\"\n    var numeral = \"\"\n    var remainder = number % 100\n    var quotient\
    \ = number / 100\n    if quotient > 0 {\n        numeral = String(quotient)\n\
    \    }\n    if remainder > 0 {\n        numeral = numeral + String(remainder)\n\
    \    }\n    if quotient > 0 {\n        roman = roman + String(quotient)\n    }\n\
    \    if remainder > 0 {\n        roman = roman + String(remainder)\n    }\n  \
    \  if quotient > 0 {\n        roman = roman + String(quotient)\n    }\n    if\
    \ remainder > 0 {\n        roman = roman + String(remainder)\n    }\n    if quotient\
    \ > 0 {\n        roman = roman + String(quotient)\n    }\n    if remainder > 0\
    \ {\n        roman = roman + String(remainder)\n    }\n    if quotient > 0 {\n\
    \        roman = roman + String(quotient)\n    }\n    if remainder > 0 {\n   \
    \     roman = roman + String(remainder)\n    }\n    if quotient > 0 {\n      \
    \  roman = roman + String(quotient)\n    }\n    if remainder > 0 {\n        roman\
    \ = roman + String(remainder)\n    }\n    if quotient > 0 {\n        roman = roman\
    \ + String(quotient)\n    }\n    if remainder > 0 {\n        roman = roman + String(remainder)\n\
    \    }\n    if quotient > 0 {\n        roman = roman + String(quotient)\n    }\n\
    \    if remainder > 0 {\n        roman = roman + String(remainder)\n    }\n  \
    \  if quotient > 0 {\n        roman = roman + String(quotient)\n    }\n    if\
    \ remainder > 0 {\n        roman = roman + String(remainder)\n    }\n    if quotient\
    \ > 0 {\n        roman = roman + String(quotient)\n    }\n    if remainder > 0\
    \ {\n        roman = roman + String(remainder)\n    }\n    if quotient > 0 {\n\
    \        roman = roman + String(quotient)\n    }\n    if remainder > 0 {\n   \
    \     roman = roman + String(remainder)\n    }\n    if quotient > 0 {\n      \
    \  roman = roman + String(quotient)\n    }\n    if remainder > 0 {\n        roman\
    \ = roman + String(remainder)\n    }\n    if quotient > 0 {\n        roman = roman ",
  "    let roman = RomanNumerals(number: number)\n    return roman.romanNumeral",
  "    var roman = \"\"\n    var num = 0\n    var index = 0\n    var roman_num = 0\n\
    \    var roman_num_str = \"\"\n    var roman_num_str_index = 0\n    var roman_num_str_index2\
    \ = 0\n    var roman_num_str_index3 = 0\n    var roman_num_str_index4 = 0\n  \
    \  var roman_num_str_index5 = 0\n    var roman_num_str_index6 = 0\n    var roman_num_str_index7\
    \ = 0\n    var roman_num_str_index8 = 0\n    var roman_num_str_index9 = 0\n  \
    \  var roman_num_str_index10 = 0\n    var roman_num_str_index11 = 0\n    var roman_num_str_index12\
    \ = 0\n    var roman_num_str_index13 = 0\n    var roman_num_str_index14 = 0\n\
    \    var roman_num_str_index15 = 0\n    var roman_num_str_index16 = 0\n    var\
    \ roman_num_str_index17 = 0\n    var roman_num_str_index18 = 0\n    var roman_num_str_index19\
    \ = 0\n    var roman_num_str_index20 = 0\n    var roman_num_str_index21 = 0\n\
    \    var roman_num_str_index22 = 0\n    var roman_num_str_index23 = 0\n    var\
    \ roman_num_str_index24 = 0\n    var roman_num_str_index25 = 0\n    var roman_num_str_index26\
    \ = 0\n    var roman_num_str_index27 = 0\n    var roman_num_str_index28 = 0\n\
    \    var roman_num_str_index29 = 0\n    var roman_num_str_index30 = 0\n    var\
    \ roman_num_str_index31 = 0\n    var roman_num_str_index32 = 0\n    var roman_num_str_index33\
    \ = 0\n    var roman_num_str_index34 = 0\n    var roman_num_str_index35 = 0\n\
    \    var roman_num_str_index36 = 0\n    var roman_num_str_index37 = 0\n    var\
    \ roman_num_str_index38 = 0\n    var roman_num_str_index39 = 0\n    var roman_num_str_index40\
    \ = 0\n    var roman_num_str_index41 = 0\n    var roman_num_str_index42 = 0\n\
    \    var roman_num_str_index43 = 0\n    var roman_num_str_index44 = 0\n    var\
    \ roman_num_str_index45 = 0\n    var roman_num_str_index46 = 0\n    var roman_num_str_index47\
    \ = 0\n    var roman_num_str_index48 = 0\n    var roman_num_str_index49 = 0\n\
    \    var roman_num_str_index50 = 0\n    var roman_num_str_index51 = 0\n    var\
    \ roman_num_str_index52 = 0\n    var roman_num_str_index53 = 0\n    var roman_num_str_index54\
    \ = 0\n    var ", "    var roman = \"\"\n    var roman_numeral = \"\"\n    var\
    \ numeral = number\n    var roman_numeral_digits = \"\"\n    var numeral_digits\
    \ = \"\"\n    var numeral_digits_count = 0\n    var numeral_digits_count_minus_one\
    \ = 0\n    var numeral_digits_count_minus_two = 0\n    var numeral_digits_count_minus_three\
    \ = 0\n    var numeral_digits_count_minus_four = 0\n    var numeral_digits_count_minus_five\
    \ = 0\n    var numeral_digits_count_minus_six = 0\n    var numeral_digits_count_minus_seven\
    \ = 0\n    var numeral_digits_count_minus_eight = 0\n    var numeral_digits_count_minus_nine\
    \ = 0\n    var numeral_digits_count_minus_ten = 0\n    var numeral_digits_count_minus_eleven\
    \ = 0\n    var numeral_digits_count_minus_twelve = 0\n    var numeral_digits_count_minus_thirteen\
    \ = 0\n    var numeral_digits_count_minus_fourteen = 0\n    var numeral_digits_count_minus_fifteen\
    \ = 0\n    var numeral_digits_count_minus_sixteen = 0\n    var numeral_digits_count_minus_seventeen\
    \ = 0\n    var numeral_digits_count_minus_eighteen = 0\n    var numeral_digits_count_minus_nineteen\
    \ = 0\n    var numeral_digits_count_minus_twenty = 0\n    var numeral_digits_count_minus_twenty_one\
    \ = 0\n    var numeral_digits_count_minus_twenty_two = 0\n    var numeral_digits_count_minus_twenty_three\
    \ = 0\n    var numeral_digits_count_minus_twenty_four = 0\n    var numeral_digits_count_minus_twenty_five\
    \ = 0\n    var numeral_digits_count_minus_twenty_six = 0\n    var numeral_digits_count_minus_twenty_seven\
    \ = 0\n    var numeral_digits_count_minus_twenty_eight = 0\n    var numeral_digits_count_minus_twenty_nine\
    \ = 0\n    var numeral_digits_count_minus_thirty = 0\n    var numeral_digits_count_minus_thirty_one\
    \ = 0\n    var numeral_digits_count_minus_thirty_two = 0\n    var numeral_digits_count_minus_thirty_three\
    \ = 0\n    var numeral_digits_count_minus_thirty_four = 0\n    var numeral_digits_count_minus_thirty_five\
    \ = 0\n    var numeral_digits_count_minus_thirty_six = 0\n    var numeral_digits_count_minus_thirty_se",
  "    var roman = \"\"\n    var numeral = \"\"\n    var remainder = number\n    var\
    \ i = Int(1)\n    while remainder > 0 {\n        remainder -= Int(pow(10, i))\n\
    \        numeral += String(format: \"%0*d\", i, remainder)\n        i += 1\n \
    \   }\n    roman = numeral\n    return roman.lowercased()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    var roman = \"\"\n\
    \    var remainder = number\n    var i = 0\n    while remainder > 0 {\n      \
    \  remainder, remainder = remainder / 10, remainder % 10\n        roman = String(repeating:\
    \ \"m\", count: i) + roman\n        i += 1\n    }\n    return roman", "    guard\
    \ number > 0 && number <= 1000 else {\n        return \"\"\n    }\n    var roman\
    \ = \"\"\n    var remainder = number\n    var i = 2\n    while remainder > 0 {\n\
    \        remainder, remainder = remainder / 10, remainder % 10\n        roman\
    \ += mini_roman[i]\n        i += 1\n    }\n    return roman", "    let roman =\
    \ roman_numerals(number: number)\n    return roman.lowercased()", "    let roman\
    \ = romanNumerals(number: number)\n    return roman.map({ $0.lowercased() }).joined()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  let roman = StringBuilder()\n    var num: Int = 0\n    var numStr = \"\"\n\
    \    while number > 0 {\n        roman.insert(numStr, String(number % 10))\n \
    \       number /= 10\n        numStr = \"i\"\n    }\n    return roman.lowercased()",
  "    let roman = roman_numeral_map[number]\n    return roman.lowercased()", "  \
    \  var roman = \"\"\n    var roman_numeral = \"\"\n    var numeral = \"\"\n  \
    \  var numeral_string = \"\"\n    var numeral_string_index = 0\n    var numeral_string_length\
    \ = 0\n    var numeral_string_length_index = 0\n    var numeral_string_length_string\
    \ = \"\"\n    var numeral_string_length_string_index = 0\n    var numeral_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_index = 0\n    var numeral_string_length_string_length_string\
    \ = \"\"\n    var numeral_string_length_string_length_string_index = 0\n    var\
    \ numeral_string_length_string_length_string_length = 0\n    var numeral_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string = \"\"\
    \n    var numeral_string_length_string_length_string_length_string_index = 0\n\
    \    var numeral_string_length_string_length_string_length_string_length = 0\n\
    \    var numeral_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length_index\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_length_string_length\
    \ = 0\n    var numeral_string_length_string_length_string_length_string_", " \
    \   let roman = MiniRoman(number)\n    return roman.lowercase()", "    let roman\
    \ = mini_roman(number)\n    return roman.lowercased()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    var roman = \"\"\n\
    \    var num = 0\n    var num2 = 0\n    var num3 = 0\n    var num4 = 0\n    var\
    \ num5 = 0\n    var num6 = 0\n    var num7 = 0\n    var num8 = 0\n    var num9\
    \ = 0\n    var num10 = 0\n    var num11 = 0\n    var num12 = 0\n    var num13\
    \ = 0\n    var num14 = 0\n    var num15 = 0\n    var num16 = 0\n    var num17\
    \ = 0\n    var num18 = 0\n    var num19 = 0\n    var num20 = 0\n    var num21\
    \ = 0\n    var num22 = 0\n    var num23 = 0\n    var num24 = 0\n    var num25\
    \ = 0\n    var num26 = 0\n    var num27 = 0\n    var num28 = 0\n    var num29\
    \ = 0\n    var num30 = 0\n    var num31 = 0\n    var num32 = 0\n    var num33\
    \ = 0\n    var num34 = 0\n    var num35 = 0\n    var num36 = 0\n    var num37\
    \ = 0\n    var num38 = 0\n    var num39 = 0\n    var num40 = 0\n    var num41\
    \ = 0\n    var num42 = 0\n    var num43 = 0\n    var num44 = 0\n    var num45\
    \ = 0\n    var num46 = 0\n    var num47 = 0\n    var num48 = 0\n    var num49\
    \ = 0\n    var num50 = 0\n    var num51 = 0\n    var num52 = 0\n    var num53\
    \ = 0\n    var num54 = 0\n    var num55 = 0\n    var num56 = 0\n    var num57\
    \ = 0\n    var num58 = 0\n    var num59 = 0\n    var num60 = 0\n    var num61\
    \ = 0\n    var num62 = 0\n    var num63 = 0\n    var num64 = 0\n    var num65\
    \ = 0\n    var num66 = 0\n    var num67 = 0\n    var num68 = 0\n    var num69\
    \ = 0\n    var num70 = 0\n    var num71 = 0\n    var num72 = 0\n    var num73\
    \ = 0\n    var num74 = 0\n    var num75 = 0\n    var num76 = 0\n    var num77\
    \ = 0\n    var num78 = 0\n    var num79 = 0\n    var num80 = 0\n    var num81\
    \ = 0\n    var num82 = 0\n    var num83 = 0\n    var num84 = 0\n    var num85\
    \ = 0\n    var num86 = 0\n    var num87 = 0\n    var num88 = 0\n    var num89\
    \ = 0\n    var num90 = 0\n    var num91 = 0\n    var num92 = 0\n    var num93\
    \ = 0\n    var num94 = 0\n    var num95 = 0\n    var num96 = 0\n    var num97\
    \ = 0\n    var num98 = 0\n    var num99 = 0\n    var num100 = 0\n    var num101\
    \ = 0\n    var num102", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.lowercased()", "    let roman = StringBuilder()\n    let romanDigits =\
    \ romanDigits(number)\n    for digit in romanDigits {\n        roman.append(digit)\n\
    \    }\n    return roman.lowercased()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var numeral = number\n    var numeral_string = \"\"\n    var numeral_string_index\
    \ = 0\n    var numeral_string_length = 0\n    var numeral_string_length_index\
    \ = 0\n    var numeral_string_length_roman = 0\n    var numeral_string_length_roman_index\
    \ = 0\n    var numeral_string_length_roman_numeral = 0\n    var numeral_string_length_roman_numeral_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string = 0\n    var numeral_string_length_roman_numeral_string_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length = 0\n    var\
    \ numeral_string_length_roman_numeral_string_length_index = 0\n    var numeral_string_length_roman_numeral_string_length_roman\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_index =\
    \ 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral =\
    \ 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_string\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_string_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_string_length\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_index\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman_numeral_string_length_roman\
    \ = 0\n    var numeral_string_length_roman_numeral_string_length_roman_numer",
  "    var roman = \"\"\n    var num: Int\n    var i: Int\n    var j: Int\n    var\
    \ k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p\
    \ = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u =\
    \ 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n\
    \    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n \
    \   var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n  \
    \  var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n   \
    \ var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var\
    \ u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z\
    \ = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e =\
    \ 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n\
    \    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n \
    \   var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n  \
    \  var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n   \
    \ var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var\
    \ e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j\
    \ = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o =\
    \ 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n\
    \    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n \
    \   var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n  \
    \  var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n   \
    \ var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var\
    \ o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t\
    \ = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y =\
    \ 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n\
    \    var e = 0\n    var f", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joined()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digit = \"\"\n    var roman_numeral_digit_count\
    \ = 0\n    var roman_numeral_digit_count_max = 0\n    var roman_numeral_digit_count_min\
    \ = 0\n    var roman_numeral_digit_count_max_min = 0\n    var roman_numeral_digit_count_max_min_index\
    \ = 0\n    var roman_numeral_digit_count_max_min_index2 = 0\n    var roman_numeral_digit_count_max_min_index3\
    \ = 0\n    var roman_numeral_digit_count_max_min_index4 = 0\n    var roman_numeral_digit_count_max_min_index5\
    \ = 0\n    var roman_numeral_digit_count_max_min_index6 = 0\n    var roman_numeral_digit_count_max_min_index7\
    \ = 0\n    var roman_numeral_digit_count_max_min_index8 = 0\n    var roman_numeral_digit_count_max_min_index9\
    \ = 0\n    var roman_numeral_digit_count_max_min_index10 = 0\n    var roman_numeral_digit_count_max_min_index11\
    \ = 0\n    var roman_numeral_digit_count_max_min_index12 = 0\n    var roman_numeral_digit_count_max_min_index13\
    \ = 0\n    var roman_numeral_digit_count_max_min_index14 = 0\n    var roman_numeral_digit_count_max_min_index15\
    \ = 0\n    var roman_numeral_digit_count_max_min_index16 = 0\n    var roman_numeral_digit_count_max_min_index17\
    \ = 0\n    var roman_numeral_digit_count_max_min_index18 = 0\n    var roman_numeral_digit_count_max_min_index19\
    \ = 0\n    var roman_numeral_digit_count_max_min_index20 = 0\n    var roman_numeral_digit_count_max_min_index21\
    \ = 0\n    var roman_numeral_digit_count_max_min_index22 = 0\n    var roman_numeral_digit_count_max_min_index23\
    \ = 0\n    var roman_numeral_digit_count_max_min_index24 = 0\n    var roman_numeral_digit_count_max_min_index25\
    \ = 0\n    var roman_numeral_digit_count_max_min_index26 = 0\n    var roman_numeral_digit_count_max_min_index27\
    \ = 0\n    var roman_numeral_digit_count_max_min_index28 = 0\n    var roman_numeral_digit_count_max_min_index29\
    \ = 0\n    var roman_numeral_digit_count_max_min_index30 = 0\n    var roman_numeral_digit_count_max_min_index31\
    \ = 0\n    var roman_numeral_digit_count_max_min_index32 = 0\n    var roman_numeral_digit_count_max_min_index33\
    \ = 0\n    var roman_numeral_digit_count_max_min_index34 = 0\n    var roman_numeral_digit_count_max_min_index35\
    \ = 0", "    let roman = romanNumerals(from: number)\n    return roman.joined(separator:\
    \ \"\")", "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits\
    \ = \"\"\n    var roman_numeral_digits_length = 0\n    var roman_numeral_digits_index\
    \ = 0\n    var roman_numeral_digits_last_index = 0\n    var roman_numeral_digits_last_digit\
    \ = 0\n    var roman_numeral_digits_last_digit_index = 0\n    var roman_numeral_digits_last_digit_index2\
    \ = 0\n    var roman_numeral_digits_last_digit_index3 = 0\n    var roman_numeral_digits_last_digit_index4\
    \ = 0\n    var roman_numeral_digits_last_digit_index5 = 0\n    var roman_numeral_digits_last_digit_index6\
    \ = 0\n    var roman_numeral_digits_last_digit_index7 = 0\n    var roman_numeral_digits_last_digit_index8\
    \ = 0\n    var roman_numeral_digits_last_digit_index9 = 0\n    var roman_numeral_digits_last_digit_index10\
    \ = 0\n    var roman_numeral_digits_last_digit_index11 = 0\n    var roman_numeral_digits_last_digit_index12\
    \ = 0\n    var roman_numeral_digits_last_digit_index13 = 0\n    var roman_numeral_digits_last_digit_index14\
    \ = 0\n    var roman_numeral_digits_last_digit_index15 = 0\n    var roman_numeral_digits_last_digit_index16\
    \ = 0\n    var roman_numeral_digits_last_digit_index17 = 0\n    var roman_numeral_digits_last_digit_index18\
    \ = 0\n    var roman_numeral_digits_last_digit_index19 = 0\n    var roman_numeral_digits_last_digit_index20\
    \ = 0\n    var roman_numeral_digits_last_digit_index21 = 0\n    var roman_numeral_digits_last_digit_index22\
    \ = 0\n    var roman_numeral_digits_last_digit_index23 = 0\n    var roman_numeral_digits_last_digit_index24\
    \ = 0\n    var roman_numeral_digits_last_digit_index25 = 0\n    var roman_numeral_digits_last_digit_index26\
    \ = 0\n    var roman_numeral_digits_last_digit_index27 = 0\n    var roman_numeral_digits_last_digit_index28\
    \ = 0\n    var roman_numeral_digits_last_digit_index29 = 0\n    var roman_numeral_digits_last_digit_index30\
    \ = 0\n    var roman_numeral_digits_last_digit_index31 = 0\n    var roman_numeral_digits_last_digit_index32\
    \ = 0\n    var roman_numeral_digits_last_digit_index33 = 0\n    var roman_numeral_digits_last_digit_index34\
    \ = 0\n    var roman_numeral_digits_last_", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joinWithSeparator(\"\")", "    let\
    \ roman = RomanNumerals(number: number)\n    return roman.romanNumerals.lowercased()",
  "    let roman = roman_numeral(number)\n    return roman.lowercased()", "    let\
    \ roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numeral(number)\n    return roman.lowercased()", "    let\
    \ roman = int_to_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = roman_numeral(number)\n    return roman.lowercased()", "    let roman = int_to_roman(number)\n\
    \    let mini = roman.lowercased()\n    return mini", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map({ String($0) }).joined()", "    let roman = RomanNumerals(number:\
    \ number)\n    return roman.miniRomanNumeral", "    let roman = roman_numeral_map[number]\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 0\n    var roman_numeral_digit_count_max = 0\n    var roman_numeral_digit_count_min\
    \ = 0\n    var roman_numeral_digit_count_max_min = 0\n    var roman_numeral_digit_count_max_min_index\
    \ = 0\n    var roman_numeral_digit_count_max_min_index2 = 0\n    var roman_numeral_digit_count_max_min_index3\
    \ = 0\n    var roman_numeral_digit_count_max_min_index4 = 0\n    var roman_numeral_digit_count_max_min_index5\
    \ = 0\n    var roman_numeral_digit_count_max_min_index6 = 0\n    var roman_numeral_digit_count_max_min_index7\
    \ = 0\n    var roman_numeral_digit_count_max_min_index8 = 0\n    var roman_numeral_digit_count_max_min_index9\
    \ = 0\n    var roman_numeral_digit_count_max_min_index10 = 0\n    var roman_numeral_digit_count_max_min_index11\
    \ = 0\n    var roman_numeral_digit_count_max_min_index12 = 0\n    var roman_numeral_digit_count_max_min_index13\
    \ = 0\n    var roman_numeral_digit_count_max_min_index14 = 0\n    var roman_numeral_digit_count_max_min_index15\
    \ = 0\n    var roman_numeral_digit_count_max_min_index16 = 0\n    var roman_numeral_digit_count_max_min_index17\
    \ = 0\n    var roman_numeral_digit_count_max_min_index18 = 0\n    var roman_numeral_digit_count_max_min_index19\
    \ = 0\n    var roman_numeral_digit_count_max_min_index20 = 0\n    var roman_numeral_digit_count_max_min_index21\
    \ = 0\n    var roman_numeral_digit_count_max_min_index22 = 0\n    var roman_numeral_digit_count_max_min_index23\
    \ = 0\n    var roman_numeral_digit_count_max_min_index24 = 0\n    var roman_numeral_digit_count_max_min_index25\
    \ = 0\n    var roman_numeral_digit_count_max_min_index26 = 0\n    var roman_numeral_digit_count_max_min_index27\
    \ = 0\n    var roman_numeral_digit_count_max_min_index28 = 0\n    var roman_numeral_digit_count_max_min_index29\
    \ = 0\n    var roman_numeral_digit_count_max_min_index30 = 0\n    var roman_numeral_digit_count_max_min_index31\
    \ = 0\n    var roman_numeral_digit_count_max_min_index32 = 0\n    var roman_numeral_digit_count_max_min_index33\
    \ = 0\n    var roman_numeral_digit_count_max_min_index34 = 0\n    var roman_numeral_digit_count_max_min_index35",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    guard number >= 1 && number <= 1000 else {\n        return \"\"\n    }\n  \
    \  var roman = \"\"\n    var remainder = number\n    while remainder > 0 {\n \
    \       let remainderDigit = remainder % 10\n        roman = String(remainderDigit\
    \ + roman)\n        remainder = Int(remainder / 10)\n    }\n    return roman.lowercased()",
  "    let roman = RomanNumerals(number: number)\n    return roman.romanNumeral",
  "    var roman = \"\"\n    var remainder = number\n    var index = 0\n    while\
    \ remainder > 0 {\n        var remainderDigit = remainder % 10\n        remainder\
    \ = remainder / 10\n        roman += mini_roman[remainderDigit]\n        index++\n\
    \    }\n    return roman", "    let roman = roman_numerals(number: number)\n \
    \   return roman.map { $0.lowercased() }.reduce(\"\", combine: +)", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    var roman = \"\"\n    var num: Int\n    var i: Int\n    for i = 1,\
    \ num < 1000; i++ {\n        roman = roman + mini_roman[number % 10]\n       \
    \ number /= 10\n    }\n    return roman", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    let roman = roman_numeral_map[number]\n\
    \    return roman.lowercased()", "    let roman = mini_roman(number)\n    return\
    \ roman.lowercased()", "    var roman = \"\"\n    var num: Int\n    var remainder:\
    \ Int\n    var i: Int\n\n    for i = 1, num < 1000; i++ {\n        remainder =\
    \ number % 10\n        roman = roman.characters.last + String(remainder)\n   \
    \     number /= 10\n    }\n\n    return roman", "    var roman = \"\"\n    var\
    \ roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digit_count\
    \ = 1\n    var roman_numeral_digit_count_max = 0\n    var roman_numeral_digit_count_min\
    \ = 0\n    var roman_numeral_digit_count_max_min = 0\n    var roman_numeral_digit_count_max_min_index\
    \ = 0\n    var roman_numeral_digit_count_max_min_index2 = 0\n    var roman_numeral_digit_count_max_min_index3\
    \ = 0\n    var roman_numeral_digit_count_max_min_index4 = 0\n    var roman_numeral_digit_count_max_min_index5\
    \ = 0\n    var roman_numeral_digit_count_max_min_index6 = 0\n    var roman_numeral_digit_count_max_min_index7\
    \ = 0\n    var roman_numeral_digit_count_max_min_index8 = 0\n    var roman_numeral_digit_count_max_min_index9\
    \ = 0\n    var roman_numeral_digit_count_max_min_index10 = 0\n    var roman_numeral_digit_count_max_min_index11\
    \ = 0\n    var roman_numeral_digit_count_max_min_index12 = 0\n    var roman_numeral_digit_count_max_min_index13\
    \ = 0\n    var roman_numeral_digit_count_max_min_index14 = 0\n    var roman_numeral_digit_count_max_min_index15\
    \ = 0\n    var roman_numeral_digit_count_max_min_index16 = 0\n    var roman_numeral_digit_count_max_min_index17\
    \ = 0\n    var roman_numeral_digit_count_max_min_index18 = 0\n    var roman_numeral_digit_count_max_min_index19\
    \ = 0\n    var roman_numeral_digit_count_max_min_index20 = 0\n    var roman_numeral_digit_count_max_min_index21\
    \ = 0\n    var roman_numeral_digit_count_max_min_index22 = 0\n    var roman_numeral_digit_count_max_min_index23\
    \ = 0\n    var roman_numeral_digit_count_max_min_index24 = 0\n    var roman_numeral_digit_count_max_min_index25\
    \ = 0\n    var roman_numeral_digit_count_max_min_index26 = 0\n    var roman_numeral_digit_count_max_min_index27\
    \ = 0\n    var roman_numeral_digit_count_max_min_index28 = 0\n    var roman_numeral_digit_count_max_min_index29\
    \ = 0\n    var roman_numeral_digit_count_max_min_index30 = 0\n    var roman_numeral_digit_count_max_min_index31\
    \ = 0\n    var roman_numeral_digit_count_max_min_index32 = 0\n    var roman_numeral_digit_count_max_min_index33\
    \ = 0\n    var roman_numeral_digit_count_max_min_index34 = 0\n    var roman_numeral_digit_count_max_min_index",
  "    var roman = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_length\
    \ = \"\"\n    var roman_numeral_length_index = 0\n    var roman_numeral_length_string\
    \ = \"\"\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var roman_numeral_length_counter\
    \ = 0\n    var roman_numeral_length_counter = 0\n    var ro", "    let roman =\
    \ romanNumerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var num: Int\n    var remainder: Int\n    var i: Int\n   \
    \ var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var o: Int\n    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n\
    \    var t: Int\n    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n\
    \    var y: Int\n    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n\
    \    var d: Int\n    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n\
    \    var i: Int\n    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n\
    \    var n: Int\n    var o: Int\n    var p: Int\n    var q: Int\n    var r: Int\n\
    \    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n    var w: Int\n\
    \    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n    var b: Int\n\
    \    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n    var g: Int\n\
    \    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n    var l: Int\n\
    \    var m: Int\n    var n: Int\n    var o: Int\n    var p: Int\n    var q: Int\n\
    \    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n    var v: Int\n\
    \    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n    var a: Int\n\
    \    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n    var f: Int\n\
    \    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n    var k: Int\n\
    \    var l: Int\n    var m: Int\n    var n: Int\n    var o: Int\n    var p: Int\n\
    \    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n    var u: Int\n\
    \    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n    var z: Int\n\
    \    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n    var e: Int\n\
    \    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n    var j: Int\n\
    \    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n    var o: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n",
  "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    guard number > 0 && number <= 1000 else {\n        return \"\"\n    }\n\n \
    \   var roman = \"\"\n    var numeral = number\n    var index = 0\n    while numeral\
    \ > 0 {\n        let remainder = numeral % 10\n        numeral = numeral / 10\n\
    \        roman += mini_roman[remainder]\n        index++\n    }\n\n    return\
    \ roman.lowercased()", "    let roman = romanNumerals(number: number)\n    return\
    \ roman.map(String.init).joined()", "    let roman = roman_numeral_map[number]\n\
    \    return roman.lowercased()", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_length = 0\n    var roman_numeral_length2 = 0\n\
    \    var roman_numeral_length3 = 0\n    var roman_numeral_length4 = 0\n    var\
    \ roman_numeral_length5 = 0\n    var roman_numeral_length6 = 0\n    var roman_numeral_length7\
    \ = 0\n    var roman_numeral_length8 = 0\n    var roman_numeral_length9 = 0\n\
    \    var roman_numeral_length10 = 0\n    var roman_numeral_length11 = 0\n    var\
    \ roman_numeral_length12 = 0\n    var roman_numeral_length13 = 0\n    var roman_numeral_length14\
    \ = 0\n    var roman_numeral_length15 = 0\n    var roman_numeral_length16 = 0\n\
    \    var roman_numeral_length17 = 0\n    var roman_numeral_length18 = 0\n    var\
    \ roman_numeral_length19 = 0\n    var roman_numeral_length20 = 0\n    var roman_numeral_length21\
    \ = 0\n    var roman_numeral_length22 = 0\n    var roman_numeral_length23 = 0\n\
    \    var roman_numeral_length24 = 0\n    var roman_numeral_length25 = 0\n    var\
    \ roman_numeral_length26 = 0\n    var roman_numeral_length27 = 0\n    var roman_numeral_length28\
    \ = 0\n    var roman_numeral_length29 = 0\n    var roman_numeral_length30 = 0\n\
    \    var roman_numeral_length31 = 0\n    var roman_numeral_length32 = 0\n    var\
    \ roman_numeral_length33 = 0\n    var roman_numeral_length34 = 0\n    var roman_numeral_length35\
    \ = 0\n    var roman_numeral_length36 = 0\n    var roman_numeral_length37 = 0\n\
    \    var roman_numeral_length38 = 0\n    var roman_numeral_length39 = 0\n    var\
    \ roman_numeral_length40 = 0\n    var roman_numeral_length41 = 0\n    var roman_numeral_length42\
    \ = 0\n    var roman_numeral_length43 = 0\n    var roman_numeral_length44 = 0\n\
    \    var roman_numeral_length45 = 0\n    var roman_numeral_length46 = 0\n    var\
    \ roman_numeral_length47 = 0\n    var roman_numeral_length48 = 0\n    var roman_numeral_length49\
    \ = 0\n    var roman_numeral_length50 = 0\n    var roman_numeral_length51 = 0\n\
    \    var roman_numeral_length52 = 0\n    var roman_numeral_length53 = 0\n    var\
    \ roman_numeral_length54 = 0\n    var roman_numeral_length55 = 0\n    var roman_numeral_length",
  "    let roman = mini_roman(number: number)\n    return roman.lowercased()", " \
    \   let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = romanNumerals(number: number)\n    return roman.map({ $0.lowercased() }).joined()",
  "    let roman = int_to_roman(number)\n    return roman.lowercased()", "    let\
    \ roman = mini_roman(number)\n    return roman.lowercased()", "    let roman =\
    \ roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = Array(1...number).map { roman_numeral($0) }\n    return\
    \ roman.join()", "    let roman = Array(1...number).map { roman_numeral($0) }\n\
    \    return roman.join()", "    var roman = \"\"\n    var roman_numeral = \"\"\
    \n    var roman_numeral_digit = \"\"\n    var roman_numeral_digit_count = 1\n\
    \    var roman_numeral_digit_sum = 0\n    var roman_numeral_digit_index = 0\n\
    \    var roman_numeral_digit_sum_index = 0\n    var roman_numeral_digit_index2\
    \ = 0\n    var roman_numeral_digit_sum_index2 = 0\n    var roman_numeral_digit_index3\
    \ = 0\n    var roman_numeral_digit_sum_index3 = 0\n    var roman_numeral_digit_index4\
    \ = 0\n    var roman_numeral_digit_sum_index4 = 0\n    var roman_numeral_digit_index5\
    \ = 0\n    var roman_numeral_digit_sum_index5 = 0\n    var roman_numeral_digit_index6\
    \ = 0\n    var roman_numeral_digit_sum_index6 = 0\n    var roman_numeral_digit_index7\
    \ = 0\n    var roman_numeral_digit_sum_index7 = 0\n    var roman_numeral_digit_index8\
    \ = 0\n    var roman_numeral_digit_sum_index8 = 0\n    var roman_numeral_digit_index9\
    \ = 0\n    var roman_numeral_digit_sum_index9 = 0\n    var roman_numeral_digit_index10\
    \ = 0\n    var roman_numeral_digit_sum_index10 = 0\n    var roman_numeral_digit_index11\
    \ = 0\n    var roman_numeral_digit_sum_index11 = 0\n    var roman_numeral_digit_index12\
    \ = 0\n    var roman_numeral_digit_sum_index12 = 0\n    var roman_numeral_digit_index13\
    \ = 0\n    var roman_numeral_digit_sum_index13 = 0\n    var roman_numeral_digit_index14\
    \ = 0\n    var roman_numeral_digit_sum_index14 = 0\n    var roman_numeral_digit_index15\
    \ = 0\n    var roman_numeral_digit_sum_index15 = 0\n    var roman_numeral_digit_index16\
    \ = 0\n    var roman_numeral_digit_sum_index16 = 0\n    var roman_numeral_digit_index17\
    \ = 0\n    var roman_numeral_digit_sum_index17 = 0\n    var roman_numeral_digit_index18\
    \ = 0\n    var roman_numeral_digit_sum_index18 = 0\n    var roman_numeral_digit_index19\
    \ = 0\n    var roman_numeral_digit_sum_index19 = 0\n    var roman_numeral_digit_index20\
    \ = 0\n    var roman_numeral_digit_sum_index20 = 0\n    var roman_numeral_digit_index21\
    \ = 0\n    var roman_numeral_digit_sum_index21 = 0\n    var roman_numeral_digit_index22\
    \ = 0\n    var roman_numeral_digit_sum_index22 = 0\n    var roman_numeral_digit_index23\
    \ = 0\n    var roman_numer", "    var roman = \"\"\n    var num = 0\n    var last\
    \ = 0\n    var lastNum = 0\n    var lastLast = 0\n    var lastLastNum = 0\n  \
    \  var lastLastLast = 0\n    var lastLastLastNum = 0\n    var lastLastLastLast\
    \ = 0\n    var lastLastLastLastNum = 0\n    var lastLastLastLastLast = 0\n   \
    \ var lastLastLastLastLastNum = 0\n    var lastLastLastLastLastLast = 0\n    var\
    \ lastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLast = 0\n\
    \    var lastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastNum = 0\n    var lastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastNum\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastNum\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastLast\
    \ = 0\n    var lastLastLastLastLastLastLastLastLastLastLast = 0\n    var lastLastLastLastLastLastLastLastLastLastLast\
    \ = 0", "    let roman = MiniRoman(number)\n    return roman.lowercase", "   \
    \ let roman = int_to_roman(number)\n    return roman.lowercased()", "    var roman\
    \ = \"\"\n    var roman_numeral = \"\"\n    var roman_numeral_digits = \"\"\n\
    \    var roman_numeral_digit_count = 1\n\n    if number < 1 || number > 1000 {\n\
    \        return roman\n    }\n\n    if number == 1 {\n        roman = \"x\"\n\
    \        return roman\n    }\n\n    if number == 5 {\n        roman = \"v\"\n\
    \        return roman\n    }\n\n    if number == 10 {\n        roman = \"x\"\n\
    \        return roman\n    }\n\n    if number == 50 {\n        roman = \"l\"\n\
    \        return roman\n    }\n\n    if number == 100 {\n        roman = \"c\"\n\
    \        return roman\n    }\n\n    if number == 500 {\n        roman = \"cl\"\
    \n        return roman\n    }\n\n    if number == 1000 {\n        roman = \"d\"\
    \n        return roman\n    }\n\n    if number == 5000 {\n        roman = \"cd\"\
    \n        return roman\n    }\n\n    if number == 10000 {\n        roman = \"\
    cc\"\n        return roman\n    }\n\n    if number == 50000 {\n        roman =\
    \ \"cdl\"\n        return roman\n    }\n\n    if number == 100000 {\n        roman\
    \ = \"ccc\"\n        return roman\n    }\n\n    if number == 500000 {\n      \
    \  roman = \"cdcc\"\n        return roman\n    }\n\n    if number == 1000000 {\n\
    \        roman = \"cccd\"\n        return roman\n    }\n\n    if number == 5000000\
    \ {\n        roman = \"cdccd\"\n        return roman\n    }\n\n    if number ==\
    \ 10000000 {\n        roman = \"ccccd\"\n        return roman\n    }\n\n    if\
    \ number == 50000000 {\n        roman = \"cdcccd\"\n        return roman\n   \
    \ }\n\n    if number == 100000000 {\n        roman = \"cccdd\"\n        return\
    \ roman\n    }\n\n    if number == 500000000 {\n        roman = \"cdcccdd\"\n\
    \        return roman\n    }\n\n    if number == 1000000000 {\n        roman =\
    \ \"ccccdd\"\n        return roman\n    }\n\n    if number == 5000000000 {\n \
    \       roman = \"cdcccddd\"\n        return roman\n    }\n\n    if number ==\
    \ 10000000000 {\n        roman = \"cccdddd\"\n        return roman\n    }\n\n\
    \    if number == 50000000000 {\n        roman = \"cdcccdddd\"\n        return\
    \ roman\n    }\n\n    if number == 100000000000 {\n        roman = \"ccccddd\"\
    \n        return roman\n", "    let roman = roman_numerals(number: number)\n \
    \   return roman.map(String.init).joined()", "    var roman = \"\"\n    var num:\
    \ Int\n    var i: Int\n\n    for i = 1, num < number; i++ {\n        roman = roman\
    \ + mini_roman[i]\n    }\n\n    for i = 1, num > 0; i++ {\n        roman = roman\
    \ + mini_roman[num % 10]\n        num /= 10\n    }\n\n    return roman", "   \
    \ let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = int_to_roman(number)\n    return roman.lowercased()", "    let roman = mini_roman(number)\n\
    \    return roman.lowercased()", "    let roman = roman_numeral(number: number)\n\
    \    return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map({ $0.lowercased() }).joined()", "    let roman = romanNumerals(from:\
    \ number)\n    return roman.joined(separator: \"\")", "    let roman = romanNumerals(number:\
    \ number)\n    return roman.map({ $0.lowercased() }).joined()", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map(String.init).joinWithSeparator(\"\
    \")", "    let roman = roman_numeral_to_roman(number)\n    return roman.lowercased()",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map { $0.lowercased() }.reduce(\"\
    \") { $0 + $1 }", "    guard number >= 1 && number <= 1000 else {\n        return\
    \ \"\"\n    }\n    var roman = \"\"\n    var remainder = number % 100\n    var\
    \ counter = number / 100\n    for _ in 0..<4 {\n        roman += roman_digits[counter]\n\
    \        counter = counter * 10\n    }\n    roman += roman_digits[counter]\n \
    \   counter += remainder\n    for _ in 0..<remainder {\n        roman += roman_digits[counter]\n\
    \        counter = counter * 10\n    }\n    return roman.lowercased()", "    var\
    \ roman = \"\"\n    var i = 0\n    for _ in 0..<number {\n        let romanDigit\
    \ = Int(romanDigits[i % romanDigits.count])\n        roman += romanDigits[romanDigit]\n\
    \        i += 1\n    }\n    return roman.lowercased()", "    var roman = \"\"\n\
    \    var num = \"\"\n    var i = 0\n    var j = 0\n    var k = 0\n    var l =\
    \ 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n\
    \    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n \
    \   var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n  \
    \  var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n   \
    \ var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n    var\
    \ l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q\
    \ = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v =\
    \ 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n\
    \    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n \
    \   var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n  \
    \  var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n   \
    \ var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var\
    \ v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a\
    \ = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f =\
    \ 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k = 0\n\
    \    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n \
    \   var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n  \
    \  var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n   \
    \ var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var\
    \ f = 0\n    var g = 0\n    var h = 0\n    var i = 0\n    var j = 0\n    var k\
    \ = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p =\
    \ 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n\
    \    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n \
    \   var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n  \
    \  var f = 0\n    var ", "    var roman = \"\"\n    var roman_numeral = \"\"\n\
    \    var numeral = \"\"\n    var numeral_numeral = \"\"\n    var numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral = \"\"\n    var numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral = \"\"\n   \
    \ var numeral_numeral_numeral_numeral_numeral_numeral_numeral = \"\"\n    var\
    \ numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral = \"\"\n   \
    \ var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral\
    \ = \"\"\n    var numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_numeral_",
  "    let roman = mini_roman(number)\n    return roman.lowercased()", "    let roman\
    \ = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = romanNumerals(number: number)\n    return roman.map({ $0.lowercased()\
    \ }).joined()", "    let roman = roman_numerals(number: number)\n    return roman.map(String.init).joined()",
  "    let roman = MiniRoman(number)\n    return roman.lowercase()", "    let roman\
    \ = roman_numeral(number)\n    return roman.lowercased()", "    let roman = RomanNumeral(number:\
    \ number)\n    return roman.miniRomanNumeral()", "    let roman = mini_roman(number:\
    \ number)\n    return roman.lowercased()", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = MiniRoman(number)\n    return\
    \ roman.lowercaseString", "    let roman = RomanNumeral(number: number)\n    return\
    \ roman.miniRomanNumeral()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map { $0.lowercased() }", "    var roman = \"\"\n    var roman_numeral\
    \ = \"\"\n    var roman_numeral_digits = \"\"\n    var roman_numeral_digits_count\
    \ = 0\n    var roman_numeral_digits_index = 0\n    var roman_numeral_digits_index_count\
    \ = 0\n    var roman_numeral_digits_index_max = 0\n    var roman_numeral_digits_index_max_count\
    \ = 0\n    var roman_numeral_digits_index_min = 0\n    var roman_numeral_digits_index_min_count\
    \ = 0\n    var roman_numeral_digits_index_max_min = 0\n    var roman_numeral_digits_index_max_min_count\
    \ = 0\n    var roman_numeral_digits_index_min_max = 0\n    var roman_numeral_digits_index_min_max_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_index = 0\n    var roman_numeral_digits_index_max_min_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_index = 0\n    var roman_numeral_digits_index_min_max_count\
    \ = 0\n    var roman_numeral_digits_index_max_min_index_count = 0\n    var roman_numeral_digits_index_min_max_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_index_count = 0\n    var roman_numeral_digits_index_min_max_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_count = 0\n    var roman_numeral_digits_index_min_max_min_index_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max = 0\n  \
    \  var roman_numeral_digits_index_min_max_min_index_count_max_count = 0\n    var\
    \ roman_numeral_digits_index_min_max_min_index_count_min = 0\n    var roman_numeral_digits_index_min_max_min_index_count_min_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min = 0\n\
    \    var roman_numeral_digits_index_min_max_min_index_count_max_min_count = 0\n\
    \    var roman_numeral_digits_index_min_max_min_index_count_max_min_index = 0\n\
    \    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_max\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_max_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_min\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_min_count\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_min_index\
    \ = 0\n    var roman_numeral_digits_index_min_max_min_index_count_max_min_count_min_count_max\
    \ = 0\n    var roman_numeral_digits_index_", "    let roman = MiniRoman(number)\n\
    \    return roman.lowercase()", "    let roman = int_to_roman(number)\n    return\
    \ roman.lowercased()", "    let roman = roman_numerals(number: number)\n    return\
    \ roman.map(String.init).joined()", "    let roman = int_to_roman(number)\n  \
    \  return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joinWithSeparator(\"\")", "    guard number\
    \ >= 1 && number <= 1000 else {\n        return \"\"\n    }\n    var roman = \"\
    \"\n    var num = 0\n    var isNegative = false\n    var isFirstDigit = true\n\
    \    for _ in 0..<number {\n        let remainder = number % 100\n        let\
    \ digit = number / 100\n        roman += mini_roman_digits[digit]\n        number\
    \ -= remainder\n        if number == 0 {\n            break\n        }\n     \
    \   num += 1\n    }\n    if number > 0 {\n        roman += mini_roman_digits[num]\n\
    \    }\n    if isFirstDigit {\n        roman = \"x\" + roman\n    }\n    if isNegative\
    \ {\n        roman = \"-\" + roman\n    }\n    return roman", "    let roman =\
    \ mini_roman(number)\n    return roman.lowercased()", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = RomanNumerals(number: number)\n\
    \    return roman.miniRomanNumeral", "    let roman = StringBuilder()\n    let\
    \ romanDigits = romanDigits(number)\n    for digit in romanDigits {\n        roman.append(digit)\n\
    \    }\n    return roman.lowercased()", "    let roman = romans[number]\n    return\
    \ roman.lowercased()", "    let roman = RomanNumeral(number: number)\n    return\
    \ roman.miniRomanNumeral", "    let roman = roman_to_int(number: number)\n   \
    \ return mini_roman_to_int(roman: roman)", "    let roman = int_to_roman(number)\n\
    \    let mini = roman.lowercased()\n    return mini", "    let roman = int_to_roman(number)\n\
    \    return roman.lowercased()", "    let roman = roman_numerals(number: number)\n\
    \    return roman.map(String.init).joined()", "    guard number >= 1 && number\
    \ <= 1000 else {\n        return \"\"\n    }\n    var roman = \"\"\n    var remainder\
    \ = number\n    var i = 2\n    while remainder > 0 {\n        remainder, remainder\
    \ = remainder / 10, remainder % 10\n        roman += String(repeating: \"M\",\
    \ count: i)\n        i += 1\n    }\n    return roman", "    let roman = roman_numerals(number:\
    \ number)\n    return roman.map(String.init).joined()", "    var roman = \"\"\n\
    \    var num: Int\n    var numStr: String\n    var romanStr: String\n    if number\
    \ < 1 || number > 1000 {\n        return \"\"\n    }\n    num = number\n    numStr\
    \ = String(num)\n    romanStr = numStr\n    for _ in 1...4 {\n        roman =\
    \ roman.prefix(1) + romanStr\n        romanStr = roman.suffix(1) + numStr\n  \
    \  }\n    return roman.lowercased()", "    var roman = \"\"\n    var remainder\
    \ = number\n    var index = 0\n    while remainder > 0 {\n        let remainderDigit\
    \ = remainder % 10\n        roman = String(repeating: \"0\", count: index) + roman\n\
    \        remainder = remainder / 10\n        index = index + 1\n    }\n    return\
    \ roman", "    let roman = roman_numeral(number)\n    return roman.lowercased()",
  "    let roman = RomanNumerals(number: number)\n    return roman.romanNumeral"]
stop_tokens:
- "\n}"

name: HumanEval_70_strange_sort_list
language: swift
prompt: "\n/// Given array of integers, return array in strange order.\n/// Strange\
  \ sorting, is when you start with the minimum value,\n/// then maximum of the remaining\
  \ integers, then minimum and so on.\n/// Examples:\n/// >>> strange_sort_list(lst:\
  \ [1, 2, 3, 4])\n/// [1, 4, 2, 3]\n/// >>> strange_sort_list(lst: [5, 5, 5, 5])\n\
  /// [5, 5, 5, 5]\n/// >>> strange_sort_list(lst: [] as [Int])\n/// [] as [Int]\n\
  func strange_sort_list(lst: [Int]) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(strange_sort_list(lst: [1, 2, 3, 4]) ==\
  \ [1, 4, 2, 3])\nassert(strange_sort_list(lst: [5, 6, 7, 8, 9]) == [5, 9, 6, 8,\
  \ 7])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5]) == [1, 5, 2, 4, 3])\nassert(strange_sort_list(lst:\
  \ [5, 6, 7, 8, 9, 1]) == [1, 9, 5, 8, 6, 7])\nassert(strange_sort_list(lst: [5,\
  \ 5, 5, 5]) == [5, 5, 5, 5])\nassert(strange_sort_list(lst: [] as [Int]) == [] as\
  \ [Int])\nassert(strange_sort_list(lst: [1, 2, 3, 4, 5, 6, 7, 8]) == [1, 8, 2, 7,\
  \ 3, 6, 4, 5])\nassert(strange_sort_list(lst: [0, 2, 2, 2, 5, 5, -5, -5]) == [-5,\
  \ 5, -5, 5, 0, 2, 2, 2])\nassert(strange_sort_list(lst: [111111]) == [111111])"
completions: ["    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = value\n\
    \        }\n        if value > max {\n            max = value\n        }\n   \
    \ }\n    for value in lst {\n        if value < min {\n            min = ", " \
    \   var result = lst\n    for index in 0..<result.count {\n        let min = result[index]\n\
    \        let max = result[index + 1]\n        for value in result[index..<index+1]\
    \ {\n            if value < min {\n                result[index] = value\n   \
    \             index = index\n            } else if value > max {\n           \
    \     result[index] = value\n                index = index\n            }\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n  \
    \          min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n", "    var result = [Int]()\n\
    \    var min = lst[0]\n    var max = lst[0]\n    for element in lst {\n      \
    \  if element < min {\n            min = element\n        }\n        if element\
    \ > max {\n            max = element\n        }\n    }\n    for element in lst\
    \ {\n        if element == min {\n            result.insert(element, max)\n  \
    \      }\n        if element == max {\n            result.insert(element, min)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min {\n\
    \            min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, num)\n        }\n        if num == max {\n            result.insert(num,\
    \ num)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int = 0\n    var max: Int = 0\n    for x in lst {\n        if x < min {\n\
    \            min = x\n        }\n        if x > max {\n            max = x\n \
    \       }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ max)\n        } else {\n            result.insert(x, min)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var min: Int = 0\n    var\
    \ max: Int = 0\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for el in lst {\n        if el < min {\n\
    \            min = el\n        }\n        if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ max)\n        }\n        if el == max {\n            result.insert(min, el)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min {\n\
    \            min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, num)\n        }\n        if num == max {\n            result.insert(num,\
    \ num)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if num == min {\n   \
    \         result.insert(num, num)\n        }\n        if num == max {\n      \
    \      result.insert(num, num)\n        }\n    }\n    return result", "    var\
    \ result = lst\n    for idx in 0..<result.count {\n        let min = result[idx]\n\
    \        let max = result[(idx + 1) % result.count]\n        let swap = result[idx]\n\
    \        result[idx] = max\n        result[(idx + 1) % result.count] = min\n \
    \       result[idx] = swap\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int = 0\n    var max: Int = 0\n    for element in lst {\n        if\
    \ element < min {\n            min = element\n        }\n        if element >\
    \ max {\n            max = element\n        }\n    }\n    for element in lst {\n\
    \        if element == min {\n            result.insert(element, min)\n      \
    \  }\n        if element == max {\n            result.insert(element, max)\n \
    \       }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[index\
    \ + 1]\n        for value in result[index..<index+2] {\n            if value <\
    \ min {\n                result[index] = value\n            }\n            if\
    \ value > max {\n                result[index + 1] = value\n            }\n  \
    \      }\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n  \
    \          min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        } else {\n            result.insert(value, value)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min = lst[0]\n\
    \    var max = lst[0]\n    for el in lst {\n        if el < min {\n          \
    \  min = el\n        }\n        if el > max {\n            max = el\n        }\n\
    \    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ el)\n        }\n        if el == max {\n            result.insert(el, el)\n\
    \        }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ el)\n        }\n        if el == max {\n            result.insert(el, el)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for x in lst {\n        if x < min {\n  \
    \          min = x\n        }\n        if x > max {\n            max = x\n   \
    \     }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ min)\n        }\n        if x == max {\n            result.insert(x, max)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    for value in lst {\n        if value < minValue {\n          \
    \  minValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ == minValue {\n            continue\n        }\n        for value2 in lst {\n\
    \            if value == value2 {\n                continue\n            }\n \
    \           if value < value2 {\n                result.insert(value, at: 0)\n\
    \                result.insert(value2, at: 0)\n                break\n       \
    \     }\n        }\n    }\n    return result", "    var result = [Int]()\n   \
    \ var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num\
    \ < min {\n            min = num\n        }\n        if num > max {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if num == min\
    \ {\n            result.insert(num, num)\n        }\n        if num == max {\n\
    \            result.insert(num, num)\n        }\n    }\n    return result", " \
    \   var result = lst\n    for index in 0..<result.count {\n        let minIndex\
    \ = index\n        let maxIndex = index\n        while maxIndex < result.count\
    \ && result[maxIndex] < result[minIndex] {\n            maxIndex += 1\n      \
    \  }\n        if maxIndex < result.count {\n            let temp = result[index]\n\
    \            result[index] = result[maxIndex]\n            result[maxIndex] =\
    \ temp\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        } else if value\
    \ > maxValue {\n            maxValue = value\n        }\n    }\n    for value\
    \ in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        } else {\n            result.insert(value, value)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int\n    var\
    \ max: Int\n    for v in lst {\n        if min == nil {\n            min = v\n\
    \            max = v\n        } else {\n            if v < min {\n           \
    \     min = v\n            }\n            if v > max {\n                max =\
    \ v\n            }\n        }\n    }\n    for v in lst {\n        if v == min\
    \ {\n            result.insert(v, min)\n        } else {\n            result.insert(v,\
    \ max)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for el in lst {\n        if min\
    \ == nil || el < min {\n            min = el\n        }\n        if max == nil\
    \ || el > max {\n            max = el\n        }\n    }\n    if min != nil {\n\
    \        result.insert(min!, at: 0)\n    }\n    if max != nil {\n        result.insert(max!,\
    \ at: result.count - 1)\n    }\n    return result", "    if lst.count == 0 {\n\
    \        return lst\n    }\n    var min: Int\n    var max: Int\n    var minIndex:\
    \ Int\n    var maxIndex: Int\n    var temp: Int\n    for index in 0..<lst.count\
    \ {\n        min = lst[index]\n        max = lst[index]\n        minIndex = index\n\
    \        maxIndex = index\n        for index2 in index..<lst.count {\n       \
    \     if lst[index2] < min {\n                min = lst[index2]\n            \
    \    minIndex = index2\n            }\n            if lst[index2] > max {\n  \
    \              max = lst[index2]\n                maxIndex = index2\n        \
    \    }\n        }\n        temp = min\n        minIndex = minIndex\n        lst[minIndex]\
    \ = max\n        lst[maxIndex] = temp\n    }\n    return lst", "    var result\
    \ = lst\n    for index in 0..<result.count {\n        let min = result[index]\n\
    \        let max = result[index + 1]\n        for value in result[index..<index+1]\
    \ {\n            if value < min {\n                result[index] = value\n   \
    \             index = index + 1\n                continue\n            }\n   \
    \         if value > max {\n                result[index] = value\n          \
    \      index = index + 1\n                continue\n            }\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = Int.max\n    var max: Int = Int.min\n    for v in lst {\n        if v\
    \ < min {\n            min = v\n        }\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    for v in lst {\n        if v < min {\n          \
    \  min = v\n        }\n        if v > max {\n            max = v\n        }\n\
    \    }\n    for v in lst {\n        if v < min {\n            min = v\n      \
    \  }\n        if v > max {\n            max = v\n        }\n    }\n    for v in\
    \ lst {\n        if v < min {\n            min = v\n        }\n        if v >\
    \ max {\n            max = v\n        }\n    }\n    for v in lst {\n        if\
    \ v < min {\n            min = v\n        }\n        if v > max {\n          \
    \  max = v\n        }\n    }\n    for v in lst {\n        if v < min {\n     \
    \       min = v\n        }\n        if v > max {\n            max = v\n      \
    \  }\n    }\n    for v in lst {\n        if v < min {\n            min = v\n \
    \       }\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ v in lst {\n        if v < min {\n            min = v\n        }\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for v in lst {\n     \
    \   if v < min {\n            min = v\n        }\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    for v in lst {\n        if v < min {\n\
    \            min = v\n        }\n        if v > max {\n            max = v\n \
    \       }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v\n        }\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if ", "    if lst.count == 0 {\n        return lst\n\
    \    }\n    var min: Int = lst[0]\n    var max: Int = lst[0]\n    for x in lst\
    \ {\n        if x < min {\n            min = x\n        }\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    var result = [Int]()\n    for\
    \ x in lst {\n        if x == min {\n            result.insert(x, min)\n     \
    \   }\n        if x == max {\n            result.insert(x, max)\n        }\n \
    \   }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n \
    \   var max: Int = 0\n    for v in lst {\n        if v < min {\n            min\
    \ = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v == min {\n            result.insert(v, min)\n\
    \        }\n        if v == max {\n            result.insert(v, max)\n       \
    \ }\n    }\n    return result", "    var result = lst\n    for index in stride(from:\
    \ 0, to: result.count, by: 1) {\n        let min = result[index]\n        let\
    \ max = result[index + 1]\n        if min > max {\n            let temp = min\n\
    \            min = max\n            max = temp\n        }\n        result[index]\
    \ = min\n        result[index + 1] = max\n    }\n    return result", "    var\
    \ result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n   \
    \ for value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     result.insert(minValue, value)\n        } else {\n            result.insert(value,\
    \ maxValue)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        } else if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        } else {\n            result.insert(value, minValue)\n     \
    \       result.insert(value, maxValue)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num == min {\n            result.insert(num, num)\n        }\n\
    \        if num == max {\n            result.insert(num, num)\n        }\n   \
    \ }\n    return result", "    var result = lst\n    for i := 0; i < len(result);\
    \ i++ {\n        for j := 0; j < len(result) - i - 1; j++ {\n            if result[j]\
    \ > result[j+1] {\n                let tmp = result[j]\n                result[j]\
    \ = result[j+1]\n                result[j+1] = tmp\n            }\n        }\n\
    \    }\n    return result", "    if lst.count < 2 {\n        return lst\n    }\n\
    \    var min: Int = 0\n    var max: Int = lst.count - 1\n    var middle: Int =\
    \ 0\n    var swapped: Bool = false\n    while !swapped {\n        swapped = false\n\
    \        middle = min + ((max - min) / 2)\n        if lst[middle] > lst[min] {\n\
    \            min = middle\n            swapped = true\n        } else if lst[middle]\
    \ < lst[max] {\n            max = middle\n            swapped = true\n       \
    \ } else {\n            min = middle\n        }\n    }\n    var result = [Int]()\n\
    \    for var i = min; i <= max; i++ {\n        result.append(lst[i])\n    }\n\
    \    return result", "    var result = [Int]()\n    var minValue = lst[0]\n  \
    \  var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[(index\
    \ + 1) % result.count]\n        result[index] = max\n        result[(index + 1)\
    \ % result.count] = min\n    }\n    return result", "    if lst.count == 0 {\n\
    \        return lst\n    }\n    var result = [Int]()\n    var min: Int = 0\n \
    \   var max: Int = lst.count - 1\n    while min < max {\n        let mid = min\
    \ + ((max - min) / 2)\n        let value = lst[mid]\n        if value < lst[min]\
    \ {\n            min = mid + 1\n        } else if value > lst[max] {\n       \
    \     max = mid - 1\n        } else {\n            result.append(value)\n    \
    \        min = mid + 1\n            max = mid - 1\n        }\n    }\n    result.append(lst[min])\n\
    \    result.append(lst[max])\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for x in lst {\n        if x\
    \ < min {\n            min = x\n        }\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    for x in lst {\n        if x == min {\n         \
    \   result.insert(x, 0)\n        }\n        if x == max {\n            result.insert(x,\
    \ result.count - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = value\n        }\n        if value > max {\n\
    \            max = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < min {\n            min = ", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(minValue, value)\n \
    \       } else if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        } else {\n            result.insert(value, minValue)\n            result.insert(value,\
    \ maxValue)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int\n    var max: Int\n    for x in lst {\n        if min == 0 {\n\
    \            min = x\n        }\n        if x == min {\n            continue\n\
    \        }\n        if x > max {\n            max = x\n        }\n    }\n    for\
    \ x in lst {\n        if x == max {\n            result.append(x)\n          \
    \  continue\n        }\n        if x > max {\n            result.append(x)\n \
    \           continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == min {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)\n\
    \            continue\n        }\n        if x == max {\n            result.append(x)\n\
    \            continue\n        }\n        if x < min {\n            result.append(x)",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for x\
    \ in lst {\n        if x < min {\n            min = x\n        }\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    for x in lst {\n       \
    \ if x == min {\n            result.insert(x, 0)\n        }\n        if x == max\
    \ {\n            result.insert(x, result.count - 1)\n        }\n    }\n    return\
    \ result", "    if lst.count < 2 {\n        return lst\n    }\n    var min: Int\
    \ = Int.max\n    var max: Int = Int.min\n    for x in lst {\n        if x < min\
    \ {\n            min = x\n        }\n        if x > max {\n            max = x\n\
    \        }\n    }\n    var result: [Int] = []\n    for x in lst {\n        if\
    \ x == min {\n            result.insert(x, 0)\n        }\n        if x == max\
    \ {\n            result.insert(x, result.count - 1)\n        }\n    }\n    return\
    \ result", "    if lst.count == 0 {\n        return lst\n    }\n    var min: Int\n\
    \    var max: Int\n    var minIndex: Int\n    var maxIndex: Int\n    var i: Int\n\
    \    var j: Int\n    for i = 0; i < lst.count; i++ {\n        min = lst[i]\n \
    \       minIndex = i\n        for j = i + 1; j < lst.count; j++ {\n          \
    \  if lst[j] < min {\n                min = lst[j]\n                minIndex =\
    \ j\n            }\n        }\n        max = lst[i]\n        maxIndex = i\n  \
    \      for j = i + 1; j < lst.count; j++ {\n            if lst[j] > max {\n  \
    \              max = lst[j]\n                maxIndex = j\n            }\n   \
    \     }\n        lst[minIndex], lst[maxIndex] = lst[maxIndex], lst[minIndex]\n\
    \    }\n    return lst", "    var result = [Int]()\n    var min = lst[0]\n   \
    \ var max = lst[0]\n    for x in lst {\n        if x < min {\n            min\
    \ = x\n        }\n        if x > max {\n            max = x\n        }\n    }\n\
    \    for x in lst {\n        if x == min {\n            result.insert(x, 0)\n\
    \        }\n        if x == max {\n            result.insert(x, result.count -\
    \ 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for x in lst {\n        if min\
    \ == nil || x < min {\n            min = x\n        }\n        if max == nil ||\
    \ x > max {\n            max = x\n        }\n    }\n    if min != nil {\n    \
    \    result.insert(min!, 0)\n    }\n    if max != nil {\n        result.insert(max!,\
    \ result.count - 1)\n    }\n    return result", "    var result = lst\n    for\
    \ index in 0..<result.count {\n        let minIndex = index\n        for index2\
    \ in minIndex..<result.count {\n            if result[index2] < result[index]\
    \ {\n                minIndex = index2\n            }\n        }\n        let\
    \ tmp = result[index]\n        result[index] = result[minIndex]\n        result[minIndex]\
    \ = tmp\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if num < min {\n  \
    \          min = num\n        }\n        if num > max {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, num)\n        } else if num == max {\n            result.append(num)\n\
    \        } else {\n            result.insert(num, num)\n        }\n    }\n   \
    \ return result", "    var result = [Int]()\n    var min: Int = 0\n    var max:\
    \ Int = 0\n    for element in lst {\n        if element < min {\n            min\
    \ = element\n        }\n        if element > max {\n            max = element\n\
    \        }\n    }\n    for element in lst {\n        if element == min {\n   \
    \         result.insert(element, max)\n        }\n        if element == max {\n\
    \            result.insert(element, min)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n", "    var result = [Int]()\n \
    \   var minValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value == minValue {\n            continue\n        }\n        if value\
    \ < minValue {\n            minValue = value\n        }\n    }\n    for value\
    \ in lst {\n        if value == minValue {\n            continue\n        }\n\
    \        if value > minValue {\n            minValue = value\n        }\n    }\n\
    \    for value in lst {\n        if value == minValue {\n            continue\n\
    \        }\n        if value > minValue {\n            minValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value == minValue {\n      \
    \      continue\n        }\n        if value < minValue {\n            minValue\
    \ = value\n        }\n    }\n    for value in lst {\n        if value == minValue\
    \ {\n            continue\n        }\n        if value < minValue {\n        \
    \    minValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ == minValue {\n            continue\n        }\n        if value > minValue\
    \ {\n            minValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value == minValue {\n            continue\n        }\n        if value\
    \ > minValue {\n            minValue = value\n        }\n    }\n    for value\
    \ in lst {\n        if value == minValue {\n            continue\n        }\n\
    \        if value < minValue {\n            minValue = value\n        }\n    }\n\
    \    for value in lst {\n        if value == minValue {\n            continue\n\
    \        }\n        if value < minValue {\n            minValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value == minValue {\n      \
    \      continue\n        }\n        if value > minValue {\n            minValue\
    \ = value\n        }\n    }\n    for value in lst {\n        if value == minValue\
    \ {\n            continue\n        }\n        if value > minValue {\n        \
    \    minValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ == minValue {\n            continue\n        }\n        if value < minValue\
    \ {\n            minValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value == minValue {\n            continue\n        }\n        if value\
    \ < minValue {\n            minValue = value\n        }\n    }\n    for value\
    \ in lst {\n        if value == minValue {\n            continue\n        }\n\
    \        if value > minValue {\n            minValue = value\n        }\n    }\n\
    \    for value in lst {\n        if value == minValue {\n            continue\n\
    \        }\n        if value > minValue {\n            minValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value == minValue {\n      \
    \      continue", "    var result = lst\n    if lst.count > 0 {\n        let minValue\
    \ = lst[0]\n        let maxValue = lst[lst.count - 1]\n        for index in lst.indices\
    \ {\n            if index != lst.count - 1 {\n                result[index] =\
    \ minValue\n            } else {\n                result[index] = maxValue\n \
    \           }\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for element in lst {\n      \
    \  if element < min {\n            min = element\n        }\n        if element\
    \ > max {\n            max = element\n        }\n    }\n    for element in lst\
    \ {\n        if element == min {\n            result.insert(element, max)\n  \
    \      }\n        if element == max {\n            result.insert(element, min)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[index\
    \ + 1]\n        if min > max {\n            let temp = result[index]\n       \
    \     result[index] = result[index + 1]\n            result[index + 1] = temp\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min\
    \ = lst[0]\n    for v in lst {\n        if v < min {\n            min = v\n  \
    \      }\n    }\n    for v in lst {\n        if v == min {\n            result.insert(v,\
    \ min)\n        } else {\n            result.insert(v, v)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var min: Int = 0\n    var\
    \ max: Int = 0\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num == min {\n            result.insert(num,\
    \ num)\n        }\n        if num == max {\n            result.insert(num, num)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for el in lst {\n        if el < min {\n\
    \            min = el\n        }\n        if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ max)\n        } else {\n            result.insert(el, min)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var minValue = lst[0]\n  \
    \  var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        } else if value > maxValue {\n    \
    \        maxValue = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(minValue, value)\n        } else\
    \ if value > maxValue {\n            result.insert(maxValue, value)\n        }\
    \ else {\n            result.insert(value, value)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for num in lst {\n        if min > num {\n            min = num\n   \
    \     }\n        if max < num {\n            max = num\n        }\n    }\n   \
    \ for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.insert(num, num)\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            result.insert(num, num)\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            result.insert(num, num)\n    \
    \    }\n    }\n    for num in lst {\n        if min > num {\n            min =\
    \ num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }", "    var result = [Int]()\n    var minValue = lst[0]\n  \
    \  var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[(index\
    \ + 1) % result.count]\n        let swap = result[(index + 1) % result.count]\n\
    \        result[(index + 1) % result.count] = min\n        result[index] = max\n\
    \        result[(index + 1) % result.count] = swap\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, value)\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, value)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for x in lst {\n        if x < min {\n            min = x\n        }\n\
    \        if x > max {\n            max = x\n        }\n    }\n    for x in lst\
    \ {\n        if x == min {\n            result.insert(x, 0)\n        }\n     \
    \   if x == max {\n            result.insert(x, result.count - 1)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int? = nil\n\
    \    for value in lst {\n        if min == nil {\n            min = value\n  \
    \      } else {\n            if value < min {\n                min = value\n \
    \           }\n        }\n    }\n    if min != nil {\n        result.insert(min,\
    \ 0)\n    }\n    for value in lst {\n        if value < min {\n            result.insert(value,\
    \ 0)\n        }\n    }\n    return result", "    if lst.count == 0 {\n       \
    \ return lst\n    }\n    var min: Int = lst[0]\n    var max: Int = lst[0]\n  \
    \  for x in lst {\n        if x < min {\n            min = x\n        }\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    var result: [Int]\
    \ = []\n    for x in lst {\n        if x == min {\n            result.insert(0,\
    \ x)\n        }\n        if x == max {\n            result.append(x)\n       \
    \ }\n    }\n    return result", "    var result = lst\n    for index in 0..<result.count\
    \ {\n        let min = result[index]\n        let max = result[index + 1]\n  \
    \      let min = index == 0 ? min : result[index - 1]\n        let max = index\
    \ == result.count - 1 ? max : result[index + 1]\n        let tmp = result[index]\n\
    \        result[index] = min\n        result[index + 1] = max\n        result[index\
    \ - 1] = tmp\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for x in lst {\n        if x < min {\n  \
    \          min = x\n        }\n        if x > max {\n            max = x\n   \
    \     }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ max)\n        }\n        if x == max {\n            result.insert(x, min)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ stride(from: 0, to: result.count, by: -1) {\n        let min = result[index]\n\
    \        let max = result[index + 1]\n        let temp = result[index]\n     \
    \   result[index] = max\n        result[index + 1] = min\n        result[index]\
    \ = temp\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = Int.max\n    for x in lst {\n        if x < min {\n            min = x\n \
    \       }\n    }\n    for x in lst {\n        if x == min {\n            continue\n\
    \        }\n        if x > min {\n            result.insert(x, min)\n        }\
    \ else {\n            result.insert(x, x)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = Int.max\n    for el in lst {\n   \
    \     if el < min {\n            min = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == min {\n            result.insert(el, min)\n        } else\
    \ {\n            result.insert(el, min)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num == min {\n            result.insert(num, num)\n        }\n\
    \        if num == max {\n            result.insert(num, num)\n        }\n   \
    \ }\n    return result", "    var result = [Int]()\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    for element in lst {\n        if element < min\
    \ {\n            min = element\n        }\n        if element > max {\n      \
    \      max = element\n        }\n    }\n    for element in lst {\n        if element\
    \ == min {\n            result.insert(element, max)\n        }\n        if element\
    \ == max {\n            result.insert(element, min)\n        }\n    }\n    return\
    \ result", "    if lst.count == 0 {\n        return lst\n    }\n    var min: Int\n\
    \    var max: Int\n    var minIndex: Int\n    var maxIndex: Int\n    var minVal:\
    \ Int\n    var maxVal: Int\n    var minValIndex: Int\n    var maxValIndex: Int\n\
    \    var minValVal: Int\n    var maxValVal: Int\n    var minValValIndex: Int\n\
    \    var maxValValIndex: Int\n    var minValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValVal", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num ==\
    \ min {\n            result.insert(num, num)\n        }\n        if num == max\
    \ {\n            result.insert(num, num)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for element\
    \ in lst {\n        if element < min {\n            min = element\n        }\n\
    \        if element > max {\n            max = element\n        }\n    }\n   \
    \ for element in lst {\n        if element == min {\n            result.insert(element,\
    \ max)\n        } else {\n            result.insert(element, min)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min = lst[0]\n\
    \    var max = lst[0]\n    for element in lst {\n        if element < min {\n\
    \            min = element\n        }\n        if element > max {\n          \
    \  max = element\n        }\n    }\n    for element in lst {\n        if element\
    \ == min {\n            result.insert(element, min)\n        }\n        if element\
    \ == max {\n            result.insert(element, max)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for x in lst {\n        if x < min {\n            min = x\n        }\n\
    \        if x > max {\n            max = x\n        }\n    }\n    for x in lst\
    \ {\n        if x == min {\n            result.insert(x, 0)\n        }\n     \
    \   if x == max {\n            result.insert(x, 0)\n        }\n    }\n    for\
    \ x in lst {\n        if x == min {\n            result.insert(x, 0)\n       \
    \ }\n        if x == max {\n            result.insert(x, 0)\n        }\n    }\n\
    \    for x in lst {\n        if x == min {\n            result.insert(x, 0)\n\
    \        }\n        if x == max {\n            result.insert(x, 0)\n        }\n\
    \    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, 0)\n    \
    \    }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n\
    \    for num in lst {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if num < min {\n            result.insert(min, num)\n\
    \        } else if num > max {\n            result.insert(max, num)\n        }\
    \ else {\n            result.insert(num, num)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for v\
    \ in lst {\n        if v < min {\n            min = v\n        }\n        if v\
    \ > max {\n            max = v\n        }\n    }\n    for v in lst {\n       \
    \ if v == min {\n            result.insert(v, min)\n        }\n        if v ==\
    \ max {\n            result.insert(v, max)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = Int.max\n    for el in lst {\n   \
    \     if el < min {\n            min = el\n        }\n    }\n    for el in lst\
    \ {\n        if el == min {\n            continue\n        }\n        if el >\
    \ min {\n            result.insert(el, min)\n        }\n    }\n    return result",
  "    if lst.count < 2 {\n        return lst\n    }\n    var min: Int\n    var max:\
    \ Int\n    var minIndex: Int\n    var maxIndex: Int\n    var minVal: Int\n   \
    \ var maxVal: Int\n    var minValIndex: Int\n    var maxValIndex: Int\n    var\
    \ minValVal: Int\n    var maxValVal: Int\n    var minValValIndex: Int\n    var\
    \ maxValValIndex: Int\n    var minValValVal: Int\n    var maxValValVal: Int\n\
    \    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var minValValValVal:\
    \ Int\n    var maxValValVal: Int\n    var minValValValIndex: Int\n    var maxValValValIndex:\
    \ Int\n    var minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minValValValVal: Int\n    var maxValValVal: Int\n    var minValValValIndex:\
    \ Int\n    var maxValValValIndex: Int\n    var minValValValVal: Int\n    var maxValValVal:\
    \ Int\n    var minValValValIndex: Int\n    var maxValValValIndex: Int\n    var\
    \ minVal", "    var result = lst\n    for index in stride(from: 0, to: result.count,\
    \ by: -1) {\n        let min = result[index]\n        let max = result[index +\
    \ 1]\n        if min > max {\n            let temp = min\n            min = max\n\
    \            max = temp\n        }\n        result[index] = min\n    }\n    return\
    \ result", "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue\
    \ = lst[0]\n    for value in lst {\n        if value < minValue {\n          \
    \  minValue = value\n        }\n        if value > maxValue {\n            maxValue\
    \ = value\n        }\n    }\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     minValue = value\n        }\n        if value > maxValue {\n           \
    \ maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n", "    var\
    \ result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n   \
    \ for value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     minValue = value\n        }\n        if value > maxValue {\n           \
    \ maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n", "    var result = lst\n    for\
    \ index in 0..<result.count {\n        let min = result[index]\n        let max\
    \ = result[index + 1]\n        if min > max {\n            let temp = result[index]\n\
    \            result[index] = result[index + 1]\n            result[index + 1]\
    \ = temp\n        }\n    }\n    return result", "    if lst.count < 2 {\n    \
    \    return lst\n    }\n    var min: Int = Int.max\n    var max: Int = Int.min\n\
    \    var i: Int = 0\n    for element in lst {\n        if element < min {\n  \
    \          min = element\n        }\n        if element > max {\n            max\
    \ = element\n        }\n        i += 1\n    }\n    var result = [Int]()\n    for\
    \ element in lst {\n        if element == min {\n            result.insert(element,\
    \ i)\n        }\n        if element == max {\n            result.insert(element,\
    \ i)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }\n        if max < num {\n            result.insert(num,\
    \ num)\n        }\n    }\n    for num in lst {\n        if min > num {\n     \
    \       min = num\n        }", "    if lst.count == 0 {\n        return lst\n\
    \    }\n    var min: Int = 0\n    var max: Int = lst.count - 1\n    var swapped:\
    \ Bool = false\n    while !swapped {\n        swapped = false\n        if min\
    \ > max {\n            break\n        }\n        for i in min..<max {\n      \
    \      if lst[i] > lst[min] {\n                lst[i], lst[min] = lst[min], lst[i]\n\
    \                swapped = true\n            }\n            if lst[i] < lst[max]\
    \ {\n                lst[i], lst[max] = lst[max], lst[i]\n                swapped\
    \ = true\n            }\n        }\n        min = min + 1\n        max = max -\
    \ 2\n    }\n    return lst", "    var result = [Int]()\n    var min = lst[0]\n\
    \    var max = lst[0]\n    for v in lst {\n        if v < min {\n            min\
    \ = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v == min {\n            result.insert(v, min)\n\
    \        }\n        if v == max {\n            result.insert(v, max)\n       \
    \ }\n    }\n    return result", "    var result = lst\n    for index in 0..<result.count\
    \ {\n        let min = result[index]\n        for index2 in index..<result.count\
    \ {\n            if result[index2] < min {\n                min = result[index2]\n\
    \            }\n        }\n        result[index] = min\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int\n    var max: Int\n    for element in\
    \ lst {\n        if min == nil {\n            min = element\n            max =\
    \ element\n        } else {\n            if element < min {\n                min\
    \ = element\n            }\n            if element > max {\n                max\
    \ = element\n            }\n        }\n    }\n    for element in lst {\n     \
    \   if element == min {\n            result.insert(element, min)\n        }\n\
    \        if element == max {\n            result.insert(element, max)\n      \
    \  }\n    }\n    return result", "    var result = lst\n    for index in stride(from:\
    \ 0, to: result.count, by: 1) {\n        let min = result[index]\n        let\
    \ max = result[index + 1]\n        let middle = min + max / 2\n        result[index]\
    \ = middle\n        result[index + 1] = middle\n    }\n    return result", " \
    \   var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for\
    \ num in lst {\n        if num < min {\n            min = num\n        }\n   \
    \     if num > max {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if num == min {\n            result.insert(num, num)\n      \
    \  }\n        if num == max {\n            result.insert(num, num)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   } else {\n            result.insert(maxValue, value)\n        }\n    }\n \
    \   return result", "    var result = lst\n    for index in 0..<result.count {\n\
    \        let min = result[index]\n        let max = result[index + 1]\n      \
    \  if min > max {\n            let temp = min\n            min = max\n       \
    \     max = temp\n        }\n        result[index] = min\n        result[index\
    \ + 1] = max\n    }\n    return result", "    var result = lst\n    for index\
    \ in 0..<result.count {\n        let min = result[index]\n        let max = result[index+1]\n\
    \        for value in result[index..<index+2] {\n            if value < min {\n\
    \                result.insert(value, at: index)\n                result.insert(min,\
    \ at: index)\n                result.insert(max, at: index)\n                result.insert(value,\
    \ at: index+1)\n                result.insert(max, at: index+1)\n            }\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min\
    \ = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el < min {\n\
    \            min = el\n        }\n        if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el == min {\n            result.insert(el,\
    \ max)\n        } else {\n            result.insert(el, min)\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var min: Int = 0\n    var\
    \ max: Int = 0\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            result.insert(num, num)\n    \
    \    }\n    }\n    for num in lst {\n        if min > num {\n            min =\
    \ num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }", "    var result = [Int]()\n    var min: Int\n    var max:\
    \ Int\n    for value in lst {\n        if min == nil {\n            min = value\n\
    \            max = value\n        } else {\n            if value < min {\n   \
    \             min = value\n            }\n            if value > max {\n     \
    \           max = value\n            }\n        }\n    }\n    for value in lst\
    \ {\n        if min == nil {\n            min = value\n            max = value\n\
    \        } else {\n            if value < min {\n                min = value\n\
    \            }\n            if value > max {\n                max = value\n  \
    \          }\n        }\n    }\n    for value in lst {\n        if min == nil\
    \ {\n            min = value\n            max = value\n        } else {\n    \
    \        if value < min {\n                min = value\n            }\n      \
    \      if value > max {\n                max = value\n            }\n        }\n\
    \    }\n    for value in lst {\n        if min == nil {\n            min = value\n\
    \            max = value\n        } else {\n            if value < min {\n   \
    \             min = value\n            }\n            if value > max {\n     \
    \           max = value\n            }\n        }\n    }\n    for value in lst\
    \ {\n        if min == nil {\n            min = value\n            max = value\n\
    \        } else {\n            if value < min {\n                min = value\n\
    \            }\n            if value > max {\n                max = value\n  \
    \          }\n        }\n    }\n    for value in lst {\n        if min == nil\
    \ {\n            min = value\n            max = value\n        } else {\n    \
    \        if value < min {\n                min = value\n            }\n      \
    \      if value > max {\n                max = value\n            }\n        }\n\
    \    }\n    for value in lst {\n        if min == nil {\n            min = value\n\
    \            max = value\n        } else {\n            if value < min {\n   \
    \             min = value\n            }\n            if value > max {\n     \
    \           max = value\n            }\n        }\n    }\n    for value in lst\
    \ {\n        if min == nil {\n            min = value\n            max = value\n\
    \        } else {\n            if value < min {\n                min = value\n\
    \            }\n            if value > max {\n                max = value\n  \
    \          }\n        }\n    }\n    for value in lst {\n        if min == nil\
    \ {\n            min = value\n            max = value\n        } else {\n    \
    \        if value < min {\n                min = value\n            }\n      \
    \      if value > max {\n                max = value\n            }\n        }\n\
    \    }\n    for value in lst {\n        if min == nil {\n            min = value\n\
    \            max = value\n        } else {\n            if value < min {\n   \
    \             min = value\n            }\n            if value > max {\n     \
    \           max = value\n            }\n        }\n    }\n    for value in lst\
    \ {\n        if min == nil {\n            min = value\n            max = value\n\
    \        } else {\n            if value < min {", "    var result = lst\n    for\
    \ index in stride(from: 0, to: result.count, by: 1) {\n        let min = result[index]\n\
    \        let max = result[index + 1]\n        let value = result[index + 2]\n\
    \        if value < min {\n            result[index] = value\n            result[index\
    \ + 1] = min\n            result[index + 2] = max\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for num in lst {\n        if min > num {\n            min = num\n   \
    \     }\n        if max < num {\n            max = num\n        }\n    }\n   \
    \ for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n", "    if\
    \ lst.count == 0 {\n        return lst\n    }\n    var min: Int\n    var max:\
    \ Int\n    var minIndex: Int\n    var maxIndex: Int\n    var minVal: Int\n   \
    \ var maxVal: Int\n    var i: Int\n    var j: Int\n    var k: Int\n    var temp:\
    \ Int\n    for i = 0; i < lst.count; i++ {\n        minIndex = i\n        minVal\
    \ = lst[i]\n        for j = i + 1; j < lst.count; j++ {\n            if lst[j]\
    \ < minVal {\n                minIndex = j\n                minVal = lst[j]\n\
    \            }\n        }\n        maxIndex = i\n        maxVal = lst[i]\n   \
    \     for k = i + 1; k < lst.count; k++ {\n            if lst[k] > maxVal {\n\
    \                maxIndex = k\n                maxVal = lst[k]\n            }\n\
    \        }\n        if minIndex != maxIndex {\n            temp = lst[minIndex]\n\
    \            lst[minIndex] = lst[maxIndex]\n            lst[maxIndex] = temp\n\
    \        }\n    }\n    return lst", "    if lst.count == 0 {\n        return lst\n\
    \    }\n\n    var min: Int = 0\n    var max: Int = lst.count - 1\n\n    while\
    \ min < max {\n        var tmp: Int = min(max, min + max)\n        var tmp2: Int\
    \ = min(max, tmp)\n        var tmp3: Int = min(max, tmp2)\n\n        if tmp3 >\
    \ tmp2 {\n            max = tmp3\n        } else {\n            min = tmp2\n \
    \       }\n    }\n\n    return lst", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n  \
    \          min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ num < min {\n            min = num\n        }\n        if num > max {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if num ==\
    \ min {\n            result.insert(num, num)\n        }\n        if num == max\
    \ {\n            result.insert(num, num)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if min > num {\n            min = num\n        }\n       \
    \ if max < num {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if min > num {\n            min = num\n        }\n        if max\
    \ < num {\n            result.insert(num, num)\n        }\n    }\n    for num\
    \ in lst {\n        if min > num {\n            min = num\n        }\n       \
    \ if max < num {\n            result.insert(num, num)\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            result.insert(num, num)\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            result.insert(num, num)\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            result.insert(num, num)\n    \
    \    }\n    }\n    for num in lst {\n        if min > num {\n            min =\
    \ num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }", "    var result = [Int]()\n    var minValue = lst[0]\n  \
    \  var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   } else if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        } else {\n            result.insert(value, value)\n        }\n    }\n\
    \    return result", "    var result = lst\n    for idx in stride(from: 0, to:\
    \ lst.count, by: 1) {\n        let minIdx = idx\n        let maxIdx = idx + 1\n\
    \        if minIdx > lst.count {\n            break\n        }\n        if maxIdx\
    \ > lst.count {\n            maxIdx = lst.count\n        }\n        if result[minIdx]\
    \ > result[maxIdx] {\n            let tmp = result[minIdx]\n            result[minIdx]\
    \ = result[maxIdx]\n            result[maxIdx] = tmp\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for num in lst {\n        if min > num {\n            min = num\n   \
    \     }\n        if max < num {\n            max = num\n        }\n    }\n   \
    \ for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            max = num\n        }\n    }\n    for num\
    \ in lst {\n        if min > num {\n            min = num\n        }\n       \
    \ if max < num {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if min > num {\n            min = num\n        }\n        if max\
    \ < num {\n            max = num\n        }\n    }\n    for num in lst {\n   \
    \     if min > num {\n            min = num\n        }\n        if max < num {\n\
    \            max = num\n        }\n    }\n    for num in lst {\n        if min\
    \ > num {\n            min = num\n        }\n        if max < num {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if min > num {\n\
    \            min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n", "    var result = [Int]()\n    var min: Int = 0\n    var\
    \ max: Int = 0\n    for num in lst {\n        if num < min {\n            min\
    \ = num\n        }\n        if num > max {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if num == min {\n            result.insert(num,\
    \ num)\n        }\n        if num == max {\n            result.insert(num, num)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[(index\
    \ + 1) % result.count]\n        result[index] = min\n        result[(index + 1)\
    \ % result.count] = max\n    }\n    return result", "    var result = lst\n  \
    \  for index in 0..<result.count {\n        let min = result[index]\n        let\
    \ max = result[index + 1]\n        if min > max {\n            let temp = min\n\
    \            min = max\n            max = temp\n        }\n        if min == max\
    \ {\n            result[index] = min\n            continue\n        }\n      \
    \  let middle = min + ((max - min) / 2)\n        if middle == max {\n        \
    \    result[index] = middle\n            continue\n        }\n        if middle\
    \ > max {\n            result[index] = middle\n            continue\n        }\n\
    \        if middle < min {\n            result[index] = middle\n            continue\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for x in lst {\n        if x < min {\n  \
    \          min = x\n        }\n        if x > max {\n            max = x\n   \
    \     }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ min)\n        }\n        if x == max {\n            result.insert(x, max)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n\
    \            min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.append(num)\n \
    \       }\n", "    if lst.count == 0 {\n        return lst\n    }\n\n    var min:\
    \ Int = 0\n    var max: Int = 0\n    var minIndex: Int = 0\n    var maxIndex:\
    \ Int = 0\n\n    for index in 0..<lst.count {\n        if min > lst[index] {\n\
    \            min = lst[index]\n            minIndex = index\n        }\n\n   \
    \     if max < lst[index] {\n            max = lst[index]\n            maxIndex\
    \ = index\n        }\n    }\n\n    var result: [Int] = []\n    for index in minIndex..<maxIndex\
    \ {\n        result.append(lst[index])\n    }\n\n    for index in maxIndex..<lst.count\
    \ {\n        result.append(lst[index])\n    }\n\n    return result", "    var\
    \ result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for el in\
    \ lst {\n        if el < min {\n            min = el\n        }\n        if el\
    \ > max {\n            max = el\n        }\n    }\n    for el in lst {\n     \
    \   if el < min {\n            min = el\n        }\n        if el > max {\n  \
    \          max = el\n        }\n    }\n    for el in lst {\n        if el < min\
    \ {\n            min = el\n        }\n        if el > max {\n            max =\
    \ el\n        }\n    }\n    for el in lst {\n        if el < min {\n         \
    \   min = el\n        }\n        if el > max {\n            max = el\n       \
    \ }\n    }\n    for el in lst {\n        if el < min {\n            min = el\n\
    \        }\n        if el > max {\n            max = el\n        }\n    }\n  \
    \  for el in lst {\n        if el < min {\n            min = el\n        }\n \
    \       if el > max {\n            max = el\n        }\n    }\n    for el in lst\
    \ {\n        if el < min {\n            min = el\n        }\n        if el > max\
    \ {\n            max = el\n        }\n    }\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        }\n        if el > max {\n          \
    \  max = el\n        }\n    }\n    for el in lst {\n        if el < min {\n  \
    \          min = el\n        }\n        if el > max {\n            max = el\n\
    \        }\n    }\n    for el in lst {\n        if el < min {\n            min\
    \ = el\n        }\n        if el > max {\n            max = el\n        }\n  \
    \  }\n    for el in lst {\n        if el < min {\n            min = el\n     \
    \   }\n        if el > max {\n            max = el\n        }\n    }\n    for\
    \ el in lst {\n        if el < min {\n            min = el\n        }\n      \
    \  if el > max {\n            max = el\n        }\n    }\n    for el in lst {\n\
    \        if el < min {\n            min = el\n        }\n        if el > max {\n\
    \            max = el\n        }\n    }\n    for el in lst {\n        if el <\
    \ min {\n            min = el\n        }\n        if el > max {\n            max\
    \ = el\n        }\n    }\n    for el in lst {\n        if el < min {\n       \
    \     min = el\n        }\n        if el > max {\n            max = el\n     \
    \   }\n    }\n", "    var result = [Int]()\n    var min: Int = 0\n    var max:\
    \ Int = 0\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n", "    var result = [Int]()\n    var minValue\
    \ = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        } else if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            result.insert(minValue, value)\n \
    \       } else if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        } else {\n            result.insert(value, value)\n        }\n    }\n\
    \    return result", "    if lst.count == 0 {\n        return lst\n    }\n   \
    \ var min: Int = 0\n    var max: Int = 0\n    var minIndex: Int = 0\n    var maxIndex:\
    \ Int = 0\n    for index in 0..<lst.count {\n        if min > lst[index] {\n \
    \           min = lst[index]\n            minIndex = index\n        }\n      \
    \  if max < lst[index] {\n            max = lst[index]\n            maxIndex =\
    \ index\n        }\n    }\n    var result: [Int] = []\n    for index in minIndex..<maxIndex\
    \ {\n        result.append(lst[index])\n    }\n    for index in maxIndex..<lst.count\
    \ {\n        result.append(lst[index])\n    }\n    for index in minIndex..<lst.count\
    \ {\n        result.append(lst[index])\n    }\n    return result", "    var result\
    \ = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n    for el in lst {\n\
    \        if el < min {\n            min = el\n        }\n        if el > max {\n\
    \            max = el\n        }\n    }\n    for el in lst {\n        if el ==\
    \ min {\n            result.insert(el, max)\n        } else {\n            result.insert(el,\
    \ min)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for num in lst {\n        if min\
    \ == nil || num < min {\n            min = num\n        }\n        if max == nil\
    \ || num > max {\n            max = num\n        }\n    }\n    if min == nil {\n\
    \        return lst\n    }\n    if max == nil {\n        return lst\n    }\n \
    \   for num in lst {\n        if num == min {\n            result.insert(num,\
    \ 0)\n        }\n        if num == max {\n            result.insert(num, result.count\
    \ - 1)\n        }\n    }\n    return result", "    if lst.count == 0 {\n     \
    \   return lst\n    }\n    var result = [Int]()\n    var min = lst[0]\n    var\
    \ max = lst[0]\n    for el in lst {\n        if el < min {\n            min =\
    \ el\n        }\n        if el > max {\n            max = el\n        }\n    }\n\
    \    for el in lst {\n        if el == min {\n            result.insert(el, min)\n\
    \        }\n        if el == max {\n            result.insert(el, max)\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n  \
    \          min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            result.insert(num, num)\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }", "    if lst.count < 2 {\n        return lst\n    }\n\n  \
    \  var min: Int\n    var max: Int\n    var i: Int\n    var j: Int\n    var k:\
    \ Int\n    var temp: Int\n\n    for i = 0, j = 0, k = lst.count - 1; i < k; i,\
    \ j, k = i+1, j+1, k-1 {\n        if lst[i] < lst[j] {\n            temp = lst[i]\n\
    \            lst[i] = lst[j]\n            lst[j] = temp\n        }\n    }\n\n\
    \    min = lst[0]\n    max = lst[lst.count - 1]\n\n    for i = 1, j = lst.count\
    \ - 2; i < j; i, j = i+1, j-1 {\n        if lst[i] > lst[j] {\n            temp\
    \ = lst[i]\n            lst[i] = lst[j]\n            lst[j] = temp\n        }\n\
    \    }\n\n    return lst", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     minValue = value\n        }\n        if value > maxValue {\n           \
    \ maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n", "    var result = [Int]()\n    var min: Int = Int.max\n    var\
    \ max: Int = Int.min\n    for value in lst {\n        if value < min {\n     \
    \       min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if value < min {\n        \
    \    min = value\n        }\n        if value > max {\n            max = value\n\
    \        }\n    }\n    for value in lst {\n        if ", "    if lst.count ==\
    \ 0 {\n        return []\n    }\n    var min: Int = 0\n    var max: Int = lst.count\
    \ - 1\n    var swapped: Bool = false\n    var result: [Int] = []\n    while !swapped\
    \ {\n        swapped = false\n        if min > max {\n            break\n    \
    \    }\n        for i in min..<max {\n            if lst[i] > lst[min] {\n   \
    \             swap(lst[min], lst[i])\n                swapped = true\n       \
    \     }\n        }\n        min = min + 1\n        max = max - 2\n    }\n    for\
    \ i in min..<max {\n        result.append(lst[i])\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, value)\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, value)\n        }\n    }\n    return\
    \ result", "    var result = lst\n    for index in 0..<result.count {\n      \
    \  let min = result[index]\n        let max = result[(index + 1) % result.count]\n\
    \        result[index] = min\n        result[(index + 1) % result.count] = max\n\
    \    }\n    return result", "    if lst.count == 0 {\n        return lst\n   \
    \ }\n    var result = lst\n    var min = lst[0]\n    var max = lst[0]\n    for\
    \ v in lst {\n        if v < min {\n            min = v\n        }\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for v in lst {\n     \
    \   if v == min {\n            result.insert(v, at: 0)\n        }\n        if\
    \ v == max {\n            result.insert(v, at: result.count - 1)\n        }\n\
    \    }\n    return result", "    if lst.count == 0 {\n        return []\n    }\n\
    \    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, value)\n        }\n        if value > maxValue\
    \ {\n            result.insert(maxValue, value)\n        }\n    }\n    return\
    \ result", "    if lst.count < 2 {\n        return lst\n    }\n\n    var min:\
    \ Int? = nil\n    var max: Int? = nil\n    for x in lst {\n        if min == nil\
    \ || x < min {\n            min = x\n        }\n        if max == nil || x > max\
    \ {\n            max = x\n        }\n    }\n\n    var result: [Int] = []\n   \
    \ if min != nil {\n        result.insert(min, 0)\n    }\n    if max != nil {\n\
    \        result.insert(max, lst.count - 1)\n    }\n    return result", "    var\
    \ result = lst\n    for index in stride(from: 0, to: result.count, by: -1) {\n\
    \        let min = result[index]\n        let max = result[index + 1]\n      \
    \  let temp = result[index]\n        result[index] = max\n        result[index\
    \ + 1] = min\n        result[index] = temp\n    }\n    return result", "    var\
    \ result = [Int]()\n    var min: Int? = nil\n    for v in lst {\n        if min\
    \ == nil || v < min {\n            min = v\n        }\n    }\n    if min == nil\
    \ {\n        return result\n    }\n    for v in lst {\n        if v == min {\n\
    \            result.insert(v, min)\n        }\n    }\n    for v in lst {\n   \
    \     if v == min {\n            result.insert(v, min)\n        }\n    }\n   \
    \ return result", "    var result = [Int]()\n    var min: Int = Int.max\n    var\
    \ max: Int = Int.min\n    for element in lst {\n        if element < min {\n \
    \           min = element\n        }\n        if element > max {\n           \
    \ max = element\n        }\n    }\n    for element in lst {\n        if element\
    \ == min {\n            result.insert(element, min)\n        }\n        if element\
    \ == max {\n            result.insert(element, max)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for num in lst {\n        if min > num {\n            min = num\n   \
    \     }\n        if max < num {\n            max = num\n        }\n    }\n   \
    \ for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n    }\n  \
    \  for num in lst {\n        if min > num {\n            min = num\n        }\n\
    \        if max < num {\n            result.append(num)\n        }\n", "    var\
    \ result = [Int]()\n    var min: Int = Int.max\n    var max: Int = Int.min\n \
    \   for element in lst {\n        if element < min {\n            min = element\n\
    \        }\n        if element > max {\n            max = element\n        }\n\
    \    }\n    for element in lst {\n        if element == min {\n            result.insert(element,\
    \ min)\n        }\n        if element == max {\n            result.insert(element,\
    \ max)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if min\
    \ > num {\n            min = num\n        }\n        if max < num {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if num < min {\n\
    \            result.insert(min, num)\n        } else if num > max {\n        \
    \    result.insert(max, num)\n        } else {\n            result.insert(num,\
    \ num)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        } else if value\
    \ > maxValue {\n            maxValue = value\n        }\n    }\n    for value\
    \ in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        } else {\n            result.insert(value, value)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   } else if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        } else {\n            result.insert(value, value)\n        }\n    }\n\
    \    return result", "    var result = lst\n    for index in stride(from: 0, to:\
    \ result.count, by: 1) {\n        let minIndex = index\n        let maxIndex =\
    \ index\n        while minIndex < maxIndex {\n            let minValue = result[minIndex]\n\
    \            let maxValue = result[maxIndex]\n            if minValue > maxValue\
    \ {\n                let tmp = minValue\n                minValue = maxValue\n\
    \                maxValue = tmp\n            }\n            if minValue == maxValue\
    \ {\n                minIndex += 1\n                maxIndex += 1\n          \
    \  } else {\n                let tmp = minIndex\n                minIndex = maxIndex\n\
    \                maxIndex = tmp\n            }\n        }\n        result[minIndex]\
    \ = result[index]\n        result[index] = minValue\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n", "    var result = [Int]()\n \
    \   var minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min = lst[0]\n    var max = lst[0]\n    for element in lst {\n        if\
    \ element < min {\n            min = element\n        }\n        if element >\
    \ max {\n            max = element\n        }\n    }\n    for element in lst {\n\
    \        if element == min {\n            result.insert(element, 0)\n        }\n\
    \        if element == max {\n            result.insert(element, result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ min: Int? = nil\n    for value in lst {\n        if min == nil || value < min\
    \ {\n            min = value\n        } else {\n            result.append(min)\n\
    \            min = value\n        }\n    }\n    if min != nil {\n        result.append(min)\n\
    \    }\n    return result", "    var result = lst\n    for index in 0..<result.count\
    \ {\n        let min = result[index]\n        let max = result[(index + 1) % result.count]\n\
    \        result[index] = min\n        result[(index + 1) % result.count] = max\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n\
    \    var max: Int = 0\n    for x in lst {\n        if x < min {\n            min\
    \ = x\n        }\n        if x > max {\n            max = x\n        }\n    }\n\
    \    for x in lst {\n        if x == min {\n            result.insert(x, min)\n\
    \        }\n        if x == max {\n            result.insert(x, max)\n       \
    \ }\n    }\n    return result", "    var result = [Int]()\n    var min: Int =\
    \ 0\n    var max: Int = 0\n    for element in lst {\n        if element > max\
    \ {\n            max = element\n        }\n        if element < min {\n      \
    \      min = element\n        }\n    }\n    for element in lst {\n        if element\
    \ > max {\n            max = element\n        }\n        if element < min {\n\
    \            min = element\n        }\n    }\n    for element in lst {\n     \
    \   if element > max {\n            max = element\n        }\n        if element\
    \ < min {\n            min = element\n        }\n    }\n    for element in lst\
    \ {\n        if element > max {\n            max = element\n        }\n      \
    \  if element < min {\n            min = element\n        }\n    }\n    for element\
    \ in lst {\n        if element > max {\n            max = element\n        }\n\
    \        if element < min {\n            min = element\n        }\n    }\n   \
    \ for element in lst {\n        if element > max {\n            max = element\n\
    \        }\n        if element < min {\n            min = element\n        }\n\
    \    }\n    for element in lst {\n        if element > max {\n            max\
    \ = element\n        }\n        if element < min {\n            min = element\n\
    \        }\n    }\n    for element in lst {\n        if element > max {\n    \
    \        max = element\n        }\n        if element < min {\n            min\
    \ = element\n        }\n    }\n    for element in lst {\n        if element >\
    \ max {\n            max = element\n        }\n        if element < min {\n  \
    \          min = element\n        }\n    }\n    for element in lst {\n       \
    \ if element > max {\n            max = element\n        }\n        if element\
    \ < min {\n            min = element\n        }\n    }\n    for element in lst\
    \ {\n        if element > max {\n            max = element\n        }\n      \
    \  if element < min {\n            min = element\n        }\n    }\n    for element\
    \ in lst {\n        if element > max {\n            max = element\n        }\n\
    \        if element < min {\n            min = element\n        }\n    }\n   \
    \ for element in lst {\n        if element > max {\n            max = element\n\
    \        }\n        if element < min {\n            min = element\n        }\n\
    \    }\n    for element in lst {\n        if element > max {\n            max\
    \ = element\n        }\n        if element < min {\n            min = element\n\
    \        }\n    }\n    for element in lst {\n        if element > max {\n    \
    \        max = element\n        }\n        if element < min {\n            min\
    \ = element\n        }\n    }\n    for element in lst {\n        if element >\
    \ max {\n            ", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   } else {\n            result.insert(maxValue, value)\n        }\n    }\n \
    \   return result", "    if lst.count == 0 {\n        return lst\n    }\n    var\
    \ min: Int = Int.max\n    var max: Int = Int.min\n    for num in lst {\n     \
    \   if num < min {\n            min = num\n        }\n        if num > max {\n\
    \            max = num\n        }\n    }\n    var result = [Int]()\n    for num\
    \ in lst {\n        if num == min {\n            result.insert(0, num)\n     \
    \   }\n        if num == max {\n            result.append(num)\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    var min: Int = 0\n  \
    \  var max: Int = 0\n    for v in lst {\n        if v < min {\n            min\
    \ = v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v == min {\n            result.insert(v, max)\n\
    \        } else {\n            result.insert(v, min)\n        }\n    }\n    return\
    \ result", "    var result = lst\n    for index in 0..<result.count {\n      \
    \  let min = result[index]\n        let max = result[index + 1]\n        if min\
    \ > max {\n            let temp = result[index]\n            result[index] = result[index\
    \ + 1]\n            result[index + 1] = temp\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for element\
    \ in lst {\n        if element < min {\n            min = element\n        }\n\
    \        if element > max {\n            max = element\n        }\n    }\n   \
    \ for element in lst {\n        if element == min {\n            result.insert(element,\
    \ max)\n        }\n        if element == max {\n            result.insert(element,\
    \ min)\n        }\n    }\n    return result", "    var result = lst\n    for index\
    \ in 0..<result.count {\n        let min = result[index]\n        let max = result[index\
    \ + 1]\n        if min > max {\n            let temp = min\n            min =\
    \ max\n            max = temp\n        }\n        result[index] = min\n      \
    \  result[index + 1] = max\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for v in lst {\n        if v\
    \ < min {\n            min = v\n        }\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    for v in lst {\n        if v == min {\n         \
    \   result.insert(v, min)\n        }\n        if v == max {\n            result.insert(v,\
    \ max)\n        }\n    }\n    return result", "    if lst.count == 0 {\n     \
    \   return lst\n    }\n    var min: Int?\n    var max: Int?\n    for element in\
    \ lst {\n        if min == nil {\n            min = element\n        } else {\n\
    \            if element < min {\n                min = element\n            }\n\
    \        }\n        if max == nil {\n            max = element\n        } else\
    \ {\n            if element > max {\n                max = element\n         \
    \   }\n        }\n    }\n    if min == nil {\n        return lst\n    }\n    if\
    \ max == nil {\n        return lst\n    }\n    var result = [Int]()\n    for element\
    \ in lst {\n        if element == min {\n            result.insert(0, element)\n\
    \        }\n        if element == max {\n            result.append(element)\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let min = result[index]\n        let max = result[(index\
    \ + 1) % result.count]\n        result[index] = min\n        result[(index + 1)\
    \ % result.count] = max\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n    }\n    for\
    \ num in lst {\n        if min > num {\n            min = num\n        }\n   \
    \     if max < num {\n            max = num\n        }\n    }\n    for num in\
    \ lst {\n        if min > num {\n            min = num\n        }\n        if\
    \ max < num {\n            max = num\n        }\n    }\n    for num in lst {\n\
    \        if min > num {\n            min = num\n        }\n        if max < num\
    \ {\n            max = num\n        }\n    }\n    for num in lst {\n        if\
    \ min > num {\n            min = num\n        }\n        if max < num {\n    \
    \        max = num\n        }\n    }\n    for num in lst {\n        if min > num\
    \ {\n            min = num\n        }\n        if max < num {\n            max\
    \ = num\n        }\n    }\n    for num in lst {\n        if min > num {\n    \
    \        min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if min > num {\n            min\
    \ = num\n        }\n        if max < num {\n            max = num\n        }\n\
    \    }\n    for num in lst {\n        if min > num {\n            min = num\n\
    \        }\n        if max < num {\n            max = num\n        }\n    }\n\
    \    for num in lst {\n        if min > num {\n            min = num\n       \
    \ }\n        if max < num {\n            max = num\n        }\n", "    var result\
    \ = [Int]()\n    var min: Int\n    var max: Int\n    for element in lst {\n  \
    \      if min == nil {\n            min = element\n            max = element\n\
    \        } else {\n            if element < min {\n                min = element\n\
    \            }\n            if element > max {\n                max = element\n\
    \            }\n        }\n    }\n    for element in lst {\n        if element\
    \ == min {\n            result.insert(element, max)\n        } else {\n      \
    \      result.insert(element, min)\n        }\n    }\n    return result", "  \
    \  var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num == min {\n            result.insert(num, num)\n        }\n\
    \        if num == max {\n            result.insert(num, num)\n        }\n   \
    \ }\n    return result", "    var result = [Int]()\n    var minValue = lst[0]\n\
    \    var maxValue = lst[0]\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            result.insert(minValue, value)\n     \
    \   }\n        if value > maxValue {\n            result.insert(maxValue, value)\n\
    \        }\n    }\n    return result", "    if lst.count == 0 {\n        return\
    \ lst\n    }\n    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v == min {\n            result.insert(v, min)\n        }\n       \
    \ if v == max {\n            result.insert(v, max)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = Int.max\n    var max:\
    \ Int = Int.min\n    for element in lst {\n        if element < min {\n      \
    \      min = element\n        }\n        if element > max {\n            max =\
    \ element\n        }\n    }\n    for element in lst {\n        if element == min\
    \ {\n            result.insert(element, min)\n        }\n        if element ==\
    \ max {\n            result.insert(element, max)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v == min {\n            result.insert(v, min)\n        }\n       \
    \ if v == max {\n            result.insert(v, max)\n        }\n    }\n    return\
    \ result", "    var result = lst\n    for index in 0..<result.count {\n      \
    \  let min = result[index]\n        for index2 in index..<result.count {\n   \
    \         let max = result[index2]\n            if max < min {\n             \
    \   let tmp = result[index]\n                result[index] = result[index2]\n\
    \                result[index2] = tmp\n            }\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for element in lst {\n        if element < min {\n            min = element\n\
    \        }\n        if element > max {\n            max = element\n        }\n\
    \    }\n    for element in lst {\n        if element == min {\n            result.insert(element,\
    \ max)\n        } else {\n            result.insert(element, min)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int\n    var\
    \ max: Int\n    for x in lst {\n        if min == nil {\n            min = x\n\
    \            max = x\n        } else {\n            if x < min {\n           \
    \     min = x\n            }\n            if x > max {\n                max =\
    \ x\n            }\n        }\n    }\n    for x in lst {\n        if x == min\
    \ {\n            result.insert(x, 0)\n        }\n        if x == max {\n     \
    \       result.insert(x, result.count - 1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n\
    \    for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         result.insert(minValue, value)\n        } else if value > maxValue {\n\
    \            result.insert(maxValue, value)\n        } else {\n            result.insert(value,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int\n    var max: Int\n    for x in lst {\n        if min == 0 {\n\
    \            min = x\n            max = x\n        } else {\n            if x\
    \ < min {\n                min = x\n            }\n            if x > max {\n\
    \                max = x\n            }\n        }\n    }\n    for x in lst {\n\
    \        if x == min {\n            result.insert(x, 0)\n        } else {\n  \
    \          result.insert(x, 1)\n        }\n    }\n    for x in lst {\n       \
    \ if x == max {\n            result.insert(x, 0)\n        } else {\n         \
    \   result.insert(x, 2)\n        }\n    }\n    return result", "    if lst.count\
    \ == 0 {\n        return lst\n    }\n    var min: Int = 0\n    var max: Int =\
    \ lst.count - 1\n    var middle: Int\n    var middle2: Int\n    var middle3: Int\n\
    \    var middle4: Int\n    var middle5: Int\n    var middle6: Int\n    var middle7:\
    \ Int\n    var middle8: Int\n    var middle9: Int\n    var middle10: Int\n   \
    \ var middle11: Int\n    var middle12: Int\n    var middle13: Int\n    var middle14:\
    \ Int\n    var middle15: Int\n    var middle16: Int\n    var middle17: Int\n \
    \   var middle18: Int\n    var middle19: Int\n    var middle20: Int\n    var middle21:\
    \ Int\n    var middle22: Int\n    var middle23: Int\n    var middle24: Int\n \
    \   var middle25: Int\n    var middle26: Int\n    var middle27: Int\n    var middle28:\
    \ Int\n    var middle29: Int\n    var middle30: Int\n    var middle31: Int\n \
    \   var middle32: Int\n    var middle33: Int\n    var middle34: Int\n    var middle35:\
    \ Int\n    var middle36: Int\n    var middle37: Int\n    var middle38: Int\n \
    \   var middle39: Int\n    var middle40: Int\n    var middle41: Int\n    var middle42:\
    \ Int\n    var middle43: Int\n    var middle44: Int\n    var middle45: Int\n \
    \   var middle46: Int\n    var middle47: Int\n    var middle48: Int\n    var middle49:\
    \ Int\n    var middle50: Int\n    var middle51: Int\n    var middle52: Int\n \
    \   var middle53: Int\n    var middle54: Int\n    var middle55: Int\n    var middle56:\
    \ Int\n    var middle57: Int\n    var middle58: Int\n    var middle59: Int\n \
    \   var middle60: Int\n    var middle61: Int\n    var middle62: Int\n    var middle63:\
    \ Int\n    var middle64: Int\n    var middle65: Int\n    var middle66: Int\n \
    \   var middle67: Int\n    var middle68: Int\n    var middle69: Int\n    var middle70:\
    \ Int\n    var middle71: Int\n    var middle72: Int\n    var middle73: Int\n \
    \   var middle74: Int\n    var middle75: Int\n    var middle76: Int\n    var middle77:\
    \ Int\n    var middle78: Int\n    var middle79: Int\n    var middle80: Int\n \
    \   var middle81: Int\n    var middle82: ", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        } else {\n            result.insert(value, maxValue)\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for x in lst {\n        if x < min {\n      \
    \      min = x\n        }\n        if x > max {\n            max = x\n       \
    \ }\n    }\n    for x in lst {\n        if x == min {\n            result.insert(x,\
    \ 0)\n        }\n        if x == max {\n            result.insert(x, result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = lst\n    for index\
    \ in 0..<result.count {\n        let min = result[index]\n        let max = result[index\
    \ + 1]\n        if min > max {\n            let temp = result[index]\n       \
    \     result[index] = result[index + 1]\n            result[index + 1] = temp\n\
    \        }\n    }\n    return result", "    var result = lst\n    for index in\
    \ 0..<result.count {\n        let minIndex = index\n        let maxIndex = index\n\
    \        for index2 in minIndex..<result.count {\n            if result[index2]\
    \ < result[minIndex] {\n                minIndex = index2\n            }\n   \
    \         if result[index2] > result[maxIndex] {\n                maxIndex = index2\n\
    \            }\n        }\n        let tmp = result[index]\n        result[index]\
    \ = result[minIndex]\n        result[minIndex] = tmp\n    }\n    return result",
  "    var result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for num\
    \ in lst {\n        if num < min {\n            min = num\n        }\n       \
    \ if num > max {\n            max = num\n        }\n    }\n    for num in lst\
    \ {\n        if num == min {\n            result.insert(num, num)\n        } else\
    \ if num == max {\n            result.insert(num, num)\n        } else {\n   \
    \         result.insert(num, num)\n            result.insert(num, num)\n     \
    \   }\n    }\n    return result", "    if lst.count == 0 {\n        return lst\n\
    \    }\n    var result = [Int]()\n    var min = lst[0]\n    var max = lst[0]\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst {\n        if value < min {\n            min = value\n \
    \       }\n        if value > max {\n            max = value\n        }\n    }\n\
    \    for value in lst ", "    var result = [Int]()\n    var min: Int = 0\n   \
    \ var max: Int = 0\n    for x in lst {\n        if x < min {\n            min\
    \ = x\n        }\n        if x > max {\n            max = x\n        }\n    }\n\
    \    for x in lst {\n        if x == min {\n            result.insert(x, 0)\n\
    \        }\n        if x == max {\n            result.insert(x, result.count -\
    \ 1)\n        }\n    }\n    return result", "    var result = lst\n    for index\
    \ in stride(from: 0, to: result.count, by: 1) {\n        let min = result[index]\n\
    \        let max = result[index + 1]\n        let tmp = result[index]\n      \
    \  result[index] = max\n        result[index + 1] = min\n        result[index]\
    \ = tmp\n    }\n    return result", "    var result = [Int]()\n    var min: Int\
    \ = 0\n    var max: Int = 0\n    for num in lst {\n        if min > num {\n  \
    \          min = num\n        }\n        if max < num {\n            max = num\n\
    \        }\n    }\n    for num in lst {\n        if num == min {\n           \
    \ result.insert(num, at: 0)\n        } else if num == max {\n            result.insert(num,\
    \ at: result.count - 1)\n        } else {\n            result.insert(num, at:\
    \ result.count)\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min = lst[0]\n    var max = lst[0]\n    for el in lst {\n        if el\
    \ < min {\n            min = el\n        } else if el > max {\n            max\
    \ = el\n        }\n    }\n    for el in lst {\n        if el == min {\n      \
    \      result.insert(el, el)\n        } else if el == max {\n            result.insert(el,\
    \ el)\n        } else {\n            result.insert(el, el)\n            result.insert(el,\
    \ el)\n        }\n    }\n    return result", "    if lst.count == 0 {\n      \
    \  return lst\n    }\n    var min: Int = lst[0]\n    var max: Int = lst[0]\n \
    \   for val in lst {\n        if val < min {\n            min = val\n        }\n\
    \        if val > max {\n            max = val\n        }\n    }\n    var result:\
    \ [Int] = []\n    for val in lst {\n        if val == min {\n            result.insert(val,\
    \ 0)\n        }\n        if val == max {\n            result.insert(val, result.count\
    \ - 1)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    for value in lst {\n        if value < minValue {\n \
    \           minValue = value\n        }\n    }\n    for value in lst {\n     \
    \   if value == minValue {\n            continue\n        }\n        for value2\
    \ in lst {\n            if value2 == minValue {\n                continue\n  \
    \          }\n            if value < value2 {\n                result.insert(value,\
    \ at: 0)\n                result.insert(value2, at: 0)\n                break\n\
    \            }\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var min: Int = 0\n    var max: Int = 0\n    for v in lst {\n        if v\
    \ < min {\n            min = v\n        }\n        if v > max {\n            max\
    \ = v\n        }\n    }\n    for v in lst {\n        if v == min {\n         \
    \   result.insert(v, min)\n        }\n        if v == max {\n            result.insert(v,\
    \ max)\n        }\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = lst[0]\n    var maxValue = lst[0]\n    for value in lst {\n     \
    \   if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            result.insert(minValue,\
    \ value)\n        }\n        if value > maxValue {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int\n    var max: Int\n    for element in lst {\n        if min ==\
    \ 0 {\n            min = element\n            max = element\n        } else {\n\
    \            if element < min {\n                min = element\n            }\n\
    \            if element > max {\n                max = element\n            }\n\
    \        }\n    }\n    for element in lst {\n        if element == min {\n   \
    \         result.insert(element, 0)\n        } else {\n            result.insert(element,\
    \ 1)\n        }\n    }\n    for element in lst {\n        if element == max {\n\
    \            result.insert(element, 0)\n        } else {\n            result.insert(element,\
    \ -1)\n        }\n    }\n    return result", "    if lst.count < 2 {\n       \
    \ return lst\n    }\n    var result = [Int]()\n    var minValue = lst[0]\n   \
    \ var maxValue = lst[0]\n    for value in lst {\n        if value < minValue {\n\
    \            minValue = value\n        }\n        if value > maxValue {\n    \
    \        maxValue = value\n        }\n    }\n    for value in lst {\n        if\
    \ value < minValue {\n            result.insert(value, minValue)\n        } else\
    \ {\n            result.insert(value, maxValue)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var minValue = lst[0]\n    var maxValue\
    \ = lst[0]\n    for value in lst {\n        if value < minValue {\n          \
    \  minValue = value\n        }\n        if value > maxValue {\n            maxValue\
    \ = value\n        }\n    }\n    for value in lst {\n        if value < minValue\
    \ {\n            minValue = value\n        }\n        if value > maxValue {\n\
    \            maxValue = value\n        }\n    }\n    for value in lst {\n    \
    \    if value < minValue {\n            minValue = value\n        }\n        if\
    \ value > maxValue {\n            maxValue = value\n        }\n    }\n    for\
    \ value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     minValue = value\n        }\n        if value > maxValue {\n           \
    \ maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n    }\n \
    \   for value in lst {\n        if value < minValue {\n            minValue =\
    \ value\n        }\n        if value > maxValue {\n            maxValue = value\n\
    \        }\n    }\n    for value in lst {\n        if value < minValue {\n   \
    \         minValue = value\n        }\n        if value > maxValue {\n       \
    \     maxValue = value\n        }\n    }\n    for value in lst {\n        if value\
    \ < minValue {\n            minValue = value\n        }\n        if value > maxValue\
    \ {\n            maxValue = value\n        }\n    }\n    for value in lst {\n\
    \        if value < minValue {\n            minValue = value\n        }\n    \
    \    if value > maxValue {\n            maxValue = value\n        }\n", "    var\
    \ result = [Int]()\n    var minValue = lst[0]\n    var maxValue = lst[0]\n   \
    \ for value in lst {\n        if value < minValue {\n            minValue = value\n\
    \        }\n        if value > maxValue {\n            maxValue = value\n    \
    \    }\n    }\n    for value in lst {\n        if value < minValue {\n       \
    \     result.insert(minValue, value)\n        } else {\n            result.insert(maxValue,\
    \ value)\n        }\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num\
    \ < min {\n            min = num\n        }\n        if num > max {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if num < min {\n\
    \            result.insert(min, num)\n        }\n        if num > max {\n    \
    \        result.insert(max, num)\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var min: Int = 0\n    var max: Int = 0\n    for x in lst\
    \ {\n        if x < min {\n            min = x\n        }\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    for x in lst {\n        if x ==\
    \ min {\n            result.insert(x, 0)\n        }\n        if x == max {\n \
    \           result.insert(x, result.count - 1)\n        }\n    }\n    return result",
  "    if lst.count == 0 {\n        return lst\n    }\n    var result = [Int]()\n\
    \    var min: Int = Int.max\n    var max: Int = Int.min\n    for el in lst {\n\
    \        if el < min {\n            min = el\n        }\n        if el > max {\n\
    \            max = el\n        }\n    }\n    for el in lst {\n        if el ==\
    \ min {\n            result.insert(el, min)\n        }\n        if el == max {\n\
    \            result.insert(el, max)\n        }\n    }\n    return result", " \
    \   var result = lst\n    var min: Int = 0\n    var max: Int = result.count -\
    \ 1\n    for index in 0..<result.count {\n        if result[index] < min {\n \
    \           min = result[index]\n        }\n        if result[index] > max {\n\
    \            max = result[index]\n        }\n    }\n    for index in min..<max\
    \ {\n        let temp = result[index]\n        let index = index\n        let\
    \ value = result[index]\n        result[index] = result[index]\n        result[index]\
    \ = temp\n    }\n    return result", "    var result = [Int]()\n    var min: Int?\
    \ = nil\n    var max: Int? = nil\n    for x in lst {\n        if x == nil {\n\
    \            continue\n        }\n        if min == nil || x < min {\n       \
    \     min = x\n        }\n        if max == nil || x > max {\n            max\
    \ = x\n        }\n    }\n    if min == nil {\n        min = 1\n    }\n    if max\
    \ == nil {\n        max = 1\n    }\n    for x in lst {\n        if x == nil {\n\
    \            continue\n        }\n        if x == min {\n            result.insert(x,\
    \ 0)\n            continue\n        }\n        if x == max {\n            result.insert(x,\
    \ result.count - 1)\n            continue\n        }\n        result.insert(x,\
    \ result.count - 1)\n    }\n    return result", "    var result = [Int]()\n  \
    \  var min: Int = 0\n    var max: Int = 0\n    for num in lst {\n        if num\
    \ < min {\n            min = num\n        }\n        if num > max {\n        \
    \    max = num\n        }\n    }\n    for num in lst {\n        if num == min\
    \ {\n            result.insert(num, num)\n        }\n        if num == max {\n\
    \            result.insert(num, num)\n        }\n    }\n    return result", " \
    \   var result = lst\n    if lst.count == 0 {\n        return result\n    }\n\
    \    var min: Int = 0\n    var max: Int = lst.count - 1\n    while min < max {\n\
    \        let mid = min + ((max - min) / 2)\n        if result[mid] > result[min]\
    \ {\n            max = mid - 1\n        } else {\n            min = mid + 1\n\
    \        }\n    }\n    if min < lst.count {\n        result = result[0..<min]\n\
    \    }\n    if max > 0 {\n        result = result[0..<max]\n    }\n    return\
    \ result", "    var result = [Int]()\n    var min: Int = 0\n    var max: Int =\
    \ 0\n    for element in lst {\n        if element < min {\n            min = element\n\
    \        }\n        if element > max {\n            max = element\n        }\n\
    \    }\n    for element in lst {\n        if element == min {\n            result.insert(element,\
    \ max)\n        } else {\n            result.insert(element, min)\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var min: Int = Int.max\n\
    \    var max: Int = Int.min\n    for v in lst {\n        if v < min {\n      \
    \      min = v\n        }\n        if v > max {\n            max = v\n       \
    \ }\n    }\n    for v in lst {\n        if v < min {\n            min = v\n  \
    \      }\n        if v > max {\n            max = v\n        }\n    }\n    for\
    \ v in lst {\n        if v < min {\n            min = v\n        }\n        if\
    \ v > max {\n            max = v\n        }\n    }\n    for v in lst {\n     \
    \   if v < min {\n            min = v\n        }\n        if v > max {\n     \
    \       max = v\n        }\n    }\n    for v in lst {\n        if v < min {\n\
    \            min = v\n        }\n        if v > max {\n            max = v\n \
    \       }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v\n        }\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if v < min {\n            min = v\n        }\n        if v > max {\n\
    \            max = v\n        }\n    }\n    for v in lst {\n        if v < min\
    \ {\n            min = v\n        }\n        if v > max {\n            max = v\n\
    \        }\n    }\n    for v in lst {\n        if v < min {\n            min =\
    \ v\n        }\n        if v > max {\n            max = v\n        }\n    }\n\
    \    for v in lst {\n        if v < min {\n            min = v\n        }\n  \
    \      if v > max {\n            max = v\n        }\n    }\n    for v in lst {\n\
    \        if "]
stop_tokens:
- "\n}"

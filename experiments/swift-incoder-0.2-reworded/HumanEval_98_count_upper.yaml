name: HumanEval_98_count_upper
language: swift
prompt: "\n/// Given a string s, count the number of uppercase vowels in even indices.\n\
  /// For example:\n/// >>> count_upper(s: \"aBCdEf\")\n/// 1\n/// >>> count_upper(s:\
  \ \"abcdefg\")\n/// 0\n/// >>> count_upper(s: \"dBBE\")\n/// 0\nfunc count_upper(s:\
  \ String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(count_upper(s: \"aBCdEf\") == 1)\nassert(count_upper(s:\
  \ \"abcdefg\") == 0)\nassert(count_upper(s: \"dBBE\") == 0)\nassert(count_upper(s:\
  \ \"B\") == 0)\nassert(count_upper(s: \"U\") == 1)\nassert(count_upper(s: \"\")\
  \ == 0)\nassert(count_upper(s: \"EEEE\") == 2)"
completions: ["    var count = 0\n    for c in s.characters {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for c in s {\n    \
    \    if isUpper(c) {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if c.isUpper() {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        guard c >= 'A' && c <= 'Z' else {\n         \
    \   return count\n        }\n        if c >= 'a' && c <= 'z' {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for idx in\
    \ 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for idx in\
    \ 0..<s.count {\n        if idx % 2 == 0 {\n            if s.substring(idx, idx\
    \ + 1).uppercased() != s.substring(idx, idx + 1).lowercased() {\n            \
    \    count += 1\n            }\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for c in s.characters {\n        if isUpper(c) && isEven(c -\
    \ 'A') {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for i := 0; i <\
    \ len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n   \
    \ return count", "    var count = 0\n    for idx in 0..<s.count {\n        if\
    \ idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ c in s.characters {\n        if isUpper(c) {\n            count += 1\n     \
    \   }\n    }\n    return count", "    var count = 0\n    for c in s.characters\
    \ {\n        if isUppercase(c) {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for i := 0; i < len(s); i += 2 {\n\
    \        if s[i] == 'A' || s[i] == 'a' {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.countUpper { $0 % 2 == 0 }', "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if idx % 2 == 0 {\n            if s.characters[idx].isUpper() {\n\
    \                count += 1\n            }\n        }\n    }\n    return count",
  "    var count = 0\n    for index in 0..<s.characters.count {\n        if s[index].isUpper()\
    \ {\n            count += 1\n        }\n        if index % 2 == 0 && s[index].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for index in 0..<s.count {\n        if s[index].isUpper() {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", '    return s.unicodeScalars.filter({ $0.isUppercase
    }).count', '    return s.unicodeScalars.filter({ $0.isUppercase }).filter({ $0.isEvenIndex
    }).count', "    var count = 0\n    for c in s.characters {\n        if isUpper(c)\
    \ && isEven(c - 'A') {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s.characters {\n        if isUpper(c) {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for index in 0..<s.count {\n        if s[index].isUpper() {\n           \
    \ count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ c in s {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for i := 0; i < len(s); i += 2 {\n\
    \        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' || s[i] ==\
    \ 'U' {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2\
    \ == 0 && s[idx].isUpper() {\n            count += 1\n        }\n    }\n    return\
    \ count", '    return s.countUpper { $0 % 2 == 0 }', "    var count = 0\n    for\
    \ idx in 0..<s.count {\n        if idx % 2 == 0 {\n            if s.substring(idx,\
    \ idx + 1).uppercased() != s.substring(idx, idx + 1).lowercased() {\n        \
    \        count += 1\n            }\n        }\n    }\n    return count", '    return
    s.unicodeScalars.filter({ $0.isUppercase }).filter({ $0.isEvenIndex }).count',
  "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i] ==\
    \ 'a' {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ count = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", '    return s.countUpper { $0.isUpper()
    }', "    var count = 0\n    for c in s.characters {\n        if isUpper(c) {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n     \
    \   }\n    }\n    return count", "    var count = 0\n    for i := 0; i < len(s);\
    \ i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        if isUpper(c) {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s.characters {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for i := 0; i <\
    \ len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'a' {\n            count\
    \ += 1\n        } else if s[i] == 'B' || s[i] == 'b' {\n            count += 1\n\
    \        } else if s[i] == 'C' || s[i] == 'c' {\n            count += 1\n    \
    \    } else if s[i] == 'D' || s[i] == 'd' {\n            count += 1\n        }\
    \ else if s[i] == 'E' || s[i] == 'e' {\n            count += 1\n        } else\
    \ if s[i] == 'F' || s[i] == 'f' {\n            count += 1\n        } else if s[i]\
    \ == 'G' || s[i] == 'g' {\n            count += 1\n        } else if s[i] == 'H'\
    \ || s[i] == 'h' {\n            count += 1\n        } else if s[i] == 'I' || s[i]\
    \ == 'i' {\n            count += 1\n        } else if s[i] == 'J' || s[i] == 'j'\
    \ {\n            count += 1\n        } else if s[i] == 'K' || s[i] == 'k' {\n\
    \            count += 1\n        } else if s[i] == 'L' || s[i] == 'l' {\n    \
    \        count += 1\n        } else if s[i] == 'M' || s[i] == 'm' {\n        \
    \    count += 1\n        } else if s[i] == 'N' || s[i] == 'n' {\n            count\
    \ += 1\n        } else if s[i] == 'O' || s[i] == 'o' {\n            count += 1\n\
    \        } else if s[i] == 'P' || s[i] == 'p' {\n            count += 1\n    \
    \    } else if s[i] == 'Q' || s[i] == 'q' {\n            count += 1\n        }\
    \ else if s[i] == 'R' || s[i] == 'r' {\n            count += 1\n        } else\
    \ if s[i] == 'S' || s[i] == 's' {\n            count += 1\n        } else if s[i]\
    \ == 'T' || s[i] == 't' {\n            count += 1\n        } else if s[i] == 'U'\
    \ || s[i] == 'u' {\n            count += 1\n        } else if s[i] == 'V' || s[i]\
    \ == 'v' {\n            count += 1\n        } else if s[i] == 'W' || s[i] == 'w'\
    \ {\n            count += 1\n        } else if s[i] == 'X' || s[i] == 'x' {\n\
    \            count += 1\n        } else if s[i] == 'Y' || s[i] == 'y' {\n    \
    \        count += 1\n        } else if s[i] == 'Z' || s[i] == 'z' {\n        \
    \    count += 1\n        }\n    }\n    return count", "    var count = 0\n   \
    \ for c in s.characters {\n        if isUpper(c) {\n            count += 1\n \
    \       }\n    }\n    return count", '    return s.countUpper { $0 % 2 == 0 }',
  "    var count = 0\n    for c in s.characters {\n        if isUpper(c) {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s.characters {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for i := 0; i <\
    \ len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for index\
    \ in 0..<s.count {\n        if s[index].isUpper() {\n            count += 1\n\
    \        }\n        if index%2 == 0 && s[index].isUpper() {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n   \
    \ return count", "    var count = 0\n    for c in s {\n        if isUpper(c) {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n     \
    \   }\n    }\n    return count", "    var count = 0\n    for c in s {\n      \
    \  if isUpper(c) {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for index\
    \ in 0..<s.count {\n        if s[index].isUpper() {\n            count += 1\n\
    \        }\n        if index%2 == 0 && s[index].isUpper() {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for i :=\
    \ 0; i < len(s); i++ {\n        if s[i] == 'A' || s[i] == 'a' {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for i := 0; i < len(s); i +=\
    \ 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i] == 'I' || s[i] == 'O' ||\
    \ s[i] == 'U' {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A'\
    \ || s[i] == 'a' {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for idx in 0..<s.count {\n        if s[idx].isUpper() {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for c in s.characters {\n        if isUpper(c) {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    var count = 0\n    for c in s {\n\
    \        if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s.characters {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for index\
    \ in 0..<s.count {\n        if s[index].isUpper() {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        guard c.isUppercase else\
    \ { continue }\n        if c.isEven() { count += 1; }\n    }\n    return count",
  "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.countUpper { $0 % 2 == 0 }', "    var count = 0\n    for c in s {\n        if\
    \ isUpper(c) {\n            count += 1\n        }\n    }\n    return count", " \
    \   var count = 0\n    for c in s {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) {\n            if isEven(c - 'A') {\n\
    \                count += 1\n            }\n        }\n    }\n    return count",
  "    var count = 0\n    for index in 0..<s.count {\n        if s[index].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for idx in\
    \ 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n   \
    \ return count", "    var count = 0\n    for c in s {\n        switch c {\n  \
    \      case \"A\":\n        case \"E\":\n        case \"I\":\n        case \"\
    O\":\n        case \"U\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count", "    var count = 0\n    for c\
    \ in s.characters {\n        if isUpper(c) {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if s[idx].isUpper() {\n            count += 1\n        }\n      \
    \  if idx % 2 == 0 {\n            count += 1\n        }\n    }\n    return count",
  '    return s.countUpper { $0 % 2 == 0 }', "    var count = 0\n    for idx in 0..<s.characters.count\
    \ {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for index in 0..<s.count\
    \ {\n        if s[index].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", '    return s.unicodeScalars.filter({ $0.isUppercase }).count',
  "    var count = 0\n    for c in s {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) && isEven(c - 'A') {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n   \
    \ return count", "    var count = 0\n    for idx in 0..<s.count {\n        if\
    \ idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for idx in 0..<s.count {\n       \
    \ if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n        }\n \
    \   }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for c in s {\n    \
    \    if isUpper(c) {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) && isEven(c - 'A') {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s {\n        switch c {\n        case 'A':\n        case 'a':\n            count\
    \ += 1\n        case 'B':\n        case 'b':\n            count += 1\n       \
    \ case 'C':\n        case 'c':\n            count += 1\n        case 'D':\n  \
    \      case 'd':\n            count += 1\n        case 'E':\n        case 'e':\n\
    \            count += 1\n        case 'F':\n        case 'f':\n            count\
    \ += 1\n        case 'G':\n        case 'g':\n            count += 1\n       \
    \ case 'H':\n        case 'h':\n            count += 1\n        case 'I':\n  \
    \      case 'i':\n            count += 1\n        case 'J':\n        case 'j':\n\
    \            count += 1\n        case 'K':\n        case 'k':\n            count\
    \ += 1\n        case 'L':\n        case 'l':\n            count += 1\n       \
    \ case 'M':\n        case 'm':\n            count += 1\n        case 'N':\n  \
    \      case 'n':\n            count += 1\n        case 'O':\n        case 'o':\n\
    \            count += 1\n        case 'P':\n        case 'p':\n            count\
    \ += 1\n        case 'Q':\n        case 'q':\n            count += 1\n       \
    \ case 'R':\n        case 'r':\n            count += 1\n        case 'S':\n  \
    \      case 's':\n            count += 1\n        case 'T':\n        case 't':\n\
    \            count += 1\n        case 'U':\n        case 'u':\n            count\
    \ += 1\n        case 'V':\n        case 'v':\n            count += 1\n       \
    \ case 'W':\n        case 'w':\n            count += 1\n        case 'X':\n  \
    \      case 'x':\n            count += 1\n        case 'Y':\n        case 'y':\n\
    \            count += 1\n        case 'Z':\n        case 'z':\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for i :=\
    \ 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a' {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var count = 0\n    for\
    \ i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'E' || s[i]\
    \ == 'I' || s[i] == 'O' || s[i] == 'U' {\n            count += 1\n        }\n\
    \    }\n    return count", '    return s.countUpper { $0 % 2 == 0 }', "    var\
    \ count = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in s {\n \
    \       if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        if isUpper(c) {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        switch c {\n        case 'A':\n        case 'a':\n\
    \            count += 1\n        case 'B':\n        case 'b':\n            count\
    \ += 1\n        case 'C':\n        case 'c':\n            count += 1\n       \
    \ case 'D':\n        case 'd':\n            count += 1\n        case 'E':\n  \
    \      case 'e':\n            count += 1\n        case 'F':\n        case 'f':\n\
    \            count += 1\n        case 'G':\n        case 'g':\n            count\
    \ += 1\n        case 'H':\n        case 'h':\n            count += 1\n       \
    \ case 'I':\n        case 'i':\n            count += 1\n        case 'J':\n  \
    \      case 'j':\n            count += 1\n        case 'K':\n        case 'k':\n\
    \            count += 1\n        case 'L':\n        case 'l':\n            count\
    \ += 1\n        case 'M':\n        case 'm':\n            count += 1\n       \
    \ case 'N':\n        case 'n':\n            count += 1\n        case 'O':\n  \
    \      case 'o':\n            count += 1\n        case 'P':\n        case 'p':\n\
    \            count += 1\n        case 'Q':\n        case 'q':\n            count\
    \ += 1\n        case 'R':\n        case 'r':\n            count += 1\n       \
    \ case 'S':\n        case 's':\n            count += 1\n        case 'T':\n  \
    \      case 't':\n            count += 1\n        case 'U':\n        case 'u':\n\
    \            count += 1\n        case 'V':\n        case 'v':\n            count\
    \ += 1\n        case 'W':\n        case 'w':\n            count += 1\n       \
    \ case 'X':\n        case 'x':\n            count += 1\n        case 'Y':\n  \
    \      case 'y':\n            count += 1\n        case 'Z':\n        case 'z':\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A' || s[i] == 'a'\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) && isEven(c - 'A') {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if s[idx].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for c in s {\n    \
    \    switch c {\n        case 'A':\n        case 'a':\n            count += 1\n\
    \        case 'B':\n        case 'b':\n            count += 1\n        case 'C':\n\
    \        case 'c':\n            count += 1\n        case 'D':\n        case 'd':\n\
    \            count += 1\n        case 'E':\n        case 'e':\n            count\
    \ += 1\n        case 'F':\n        case 'f':\n            count += 1\n       \
    \ case 'G':\n        case 'g':\n            count += 1\n        case 'H':\n  \
    \      case 'h':\n            count += 1\n        case 'I':\n        case 'i':\n\
    \            count += 1\n        case 'J':\n        case 'j':\n            count\
    \ += 1\n        case 'K':\n        case 'k':\n            count += 1\n       \
    \ case 'L':\n        case 'l':\n            count += 1\n        case 'M':\n  \
    \      case 'm':\n            count += 1\n        case 'N':\n        case 'n':\n\
    \            count += 1\n        case 'O':\n        case 'o':\n            count\
    \ += 1\n        case 'P':\n        case 'p':\n            count += 1\n       \
    \ case 'Q':\n        case 'q':\n            count += 1\n        case 'R':\n  \
    \      case 'r':\n            count += 1\n        case 'S':\n        case 's':\n\
    \            count += 1\n        case 'T':\n        case 't':\n            count\
    \ += 1\n        case 'U':\n        case 'u':\n            count += 1\n       \
    \ case 'V':\n        case 'v':\n            count += 1\n        case 'W':\n  \
    \      case 'w':\n            count += 1\n        case 'X':\n        case 'x':\n\
    \            count += 1\n        case 'Y':\n        case 'y':\n            count\
    \ += 1\n        case 'Z':\n        case 'z':\n            count += 1\n       \
    \ default:\n            break\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) && isEven(c - 'A') {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.unicodeScalars.filter({ $0.isUppercase }).count', "    var count = 0\n    for\
    \ idx in 0..<s.characters.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", '    return
    s.unicodeScalars.filter({ $0.isUppercase }).filter({ $0.isEvenIndex }).count',
  "    var count = 0\n    for idx in 0..<s.characters.count {\n        if idx % 2\
    \ == 0 && s[idx].isUpper() {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for index in 0..<s.count {\n        if s[index].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for index in 0..<s.count {\n        if s[index].isUpper() {\n     \
    \       count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for i := 0; i < len(s); i++\
    \ {\n        if s[i] == 'A' || s[i] == 'a' {\n            count++\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ && isEven(c - 'A') {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s {\n        if isUpper(c) {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for idx in\
    \ 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var count = 0\n    for c in\
    \ s.characters {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for index in 0..<s.count {\n\
    \        if s[index].isUpper() {\n            count += 1\n        }\n    }\n \
    \   return count", "    var count = 0\n    for c in s.characters {\n        if\
    \ isUpper(c) {\n            count += 1\n        }\n    }\n    return count", " \
    \   var count = 0\n    for c in s.characters {\n        if isUpper(c) {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s {\n        if isUpper(c) {\n            count += 1\n        }\n\
    \    }\n    return count", "    var count = 0\n    for c in s.characters {\n \
    \       if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2\
    \ == 0 && s[idx].isUpper() {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        if isUpper(c) {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var count = 0\n\
    \    for c in s.characters {\n        if isUppercase(c) && isEven(c - 'a') {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for c in s.characters {\n        if isUpper(c) && isEven(c - 'A') {\n\
    \            count += 1\n        }\n    }\n    return count", "    var count =\
    \ 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s {\n        if isUpper(c) {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var count = 0\n    for c in s.characters\
    \ {\n        if isUpper(c) {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var count = 0\n    for c in s {\n        guard c >= 'A' && c <=\
    \ 'Z' else {\n            return count\n        }\n        guard c >= 'a' && c\
    \ <= 'z' else {\n            return count\n        }\n        count += 1\n   \
    \ }\n    return count", "    var count = 0\n    for i := 0; i < len(s); i += 2\
    \ {\n        if s[i] == 'A' || s[i] == 'a' {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n \
    \       }\n    }\n    return count", "    var count = 0\n    for index in 0..<s.characters.count\
    \ {\n        if s[index].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for idx in 0..<s.count {\n       \
    \ if idx % 2 == 0 && s[idx].isUpper() {\n            count += 1\n        }\n \
    \   }\n    return count", "    var count = 0\n    for c in s {\n        if isUpper(c)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var count\
    \ = 0\n    for c in s.characters {\n        if isUpper(c) {\n            if isEven(c)\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count",
  '    return s.countUpper { $0.isUpper() }', "    var count = 0\n    for idx in 0..<s.count\
    \ {\n        if s[idx].isUpper() {\n            count += 1\n        }\n    }\n\
    \    return count", "    var count = 0\n    for idx in 0..<s.count {\n       \
    \ if idx % 2 == 0 {\n            if s.unicodeScalars.contains(UnicodeScalar(s.unicodeScalars[idx]))\
    \ {\n                count += 1\n            }\n        }\n    }\n    return count",
  "    var count = 0\n    for c in s.characters {\n        if isUppercase(c) && isEven(c\
    \ - 'A') {\n            count += 1\n        }\n    }\n    return count", "   \
    \ var count = 0\n    for i := 0; i < len(s); i += 2 {\n        if s[i] == 'A'\
    \ || s[i] == 'a' {\n            count += 1\n        }\n    }\n    return count",
  "    var count = 0\n    for idx in 0..<s.count {\n        if idx % 2 == 0 && s[idx].isUpper()\
    \ {\n            count += 1\n        }\n    }\n    return count"]
stop_tokens:
- "\n}"

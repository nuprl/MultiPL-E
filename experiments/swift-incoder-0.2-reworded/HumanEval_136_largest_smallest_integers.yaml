name: HumanEval_136_largest_smallest_integers
language: swift
prompt: "\n/// Create a function that returns a tuple (a, b), where 'a' is\n/// the\
  \ largest of negative integers, and 'b' is the smallest\n/// of positive integers\
  \ in an array.\n/// If there is no negative or positive integers, return them as\
  \ nil.\n/// Examples:\n/// >>> largest_smallest_integers(lst: [2, 4, 1, 3, 5, 7])\n\
  /// (nil, 1)\n/// >>> largest_smallest_integers(lst: [] as [Int])\n/// (nil, nil)\n\
  /// >>> largest_smallest_integers(lst: [0])\n/// (nil, nil)\nfunc largest_smallest_integers(lst:\
  \ [Int]) -> (Int?, Int?) {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(largest_smallest_integers(lst: [2, 4, 1,\
  \ 3, 5, 7]) == (nil, 1))\nassert(largest_smallest_integers(lst: [2, 4, 1, 3, 5,\
  \ 7, 0]) == (nil, 1))\nassert(largest_smallest_integers(lst: [1, 3, 2, 4, 5, 6,\
  \ -2]) == (-2, 1))\nassert(largest_smallest_integers(lst: [4, 5, 3, 6, 2, 7, -7])\
  \ == (-7, 2))\nassert(largest_smallest_integers(lst: [7, 3, 8, 4, 9, 2, 5, -9])\
  \ == (-9, 2))\nassert(largest_smallest_integers(lst: [] as [Int]) == (nil, nil))\n\
  assert(largest_smallest_integers(lst: [0]) == (nil, nil))\nassert(largest_smallest_integers(lst:\
  \ [-1, -3, -5, -6]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-1, -3,\
  \ -5, -6, 0]) == (-1, nil))\nassert(largest_smallest_integers(lst: [-6, -4, -4,\
  \ -3, 1]) == (-3, 1))\nassert(largest_smallest_integers(lst: [-6, -4, -4, -3, -100,\
  \ 1]) == (-3, 1))"
completions: ["    var largest = Int?()\n    var smallest = Int?()\n    for num in\
    \ lst {\n        if num < 0 {\n            largest = num\n        } else {\n \
    \           smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    var largest =\
    \ Int?()\n    var smallest = Int?()\n    for number in lst {\n        if number\
    \ > largest {\n            largest = number\n        } else if number < smallest\
    \ {\n            smallest = number\n        }\n    }\n    return (largest, smallest)",
  "    var largest = nil\n    var smallest = nil\n    for num in lst {\n        if\
    \ num < 0 {\n            if largest == nil {\n                largest = num\n\
    \            } else {\n                largest = num\n            }\n        }\
    \ else {\n            if smallest == nil {\n                smallest = num\n \
    \           } else {\n                smallest = num\n            }\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n\n    var largest = lst[0]\n    var smallest = lst[0]\n    for i in 1..lst.count\
    \ {\n        if largest < lst[i] {\n            largest = lst[i]\n        }\n\
    \        if smallest > lst[i] {\n            smallest = lst[i]\n        }\n  \
    \  }\n    return (largest, smallest)", "    var largest = nil\n    var smallest\
    \ = nil\n    for x in lst {\n        if x < 0 {\n            if smallest == nil\
    \ {\n                smallest = x\n            } else {\n                smallest\
    \ = min(smallest, x)\n            }\n        } else {\n            if largest\
    \ == nil {\n                largest = x\n            } else {\n              \
    \  largest = max(largest, x)\n            }\n        }\n    }\n    return (largest,\
    \ smallest)", "    if lst.count < 2 {\n        return (nil, nil)\n    }\n    var\
    \ largest = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var min: Int? = nil\n    var max: Int? = nil\n    for x in\
    \ lst {\n        if x < 0 {\n            if min == nil {\n                min\
    \ = x\n            } else {\n                min = min(min, x)\n            }\n\
    \        } else {\n            if max == nil {\n                max = x\n    \
    \        } else {\n                max = max(max, x)\n            }\n        }\n\
    \    }\n    return (min, max)", "    var largest = Int?()\n    var smallest =\
    \ Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n  \
    \      } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest: Int?\n    var smallest: Int?\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n        if\
    \ num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for number in lst {\n        if number > 0 {\n\
    \            if smallest == nil {\n                smallest = number\n       \
    \     } else {\n                if number < smallest {\n                    smallest\
    \ = number\n                }\n            }\n        } else {\n            if\
    \ largest == nil {\n                largest = number\n            } else {\n \
    \               if number > largest {\n                    largest = number\n\
    \                }\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    var min: Int?\
    \ = nil\n    var max: Int? = nil\n    for v in lst {\n        if v < 0 {\n   \
    \         min = v\n        } else {\n            max = v\n        }\n    }\n \
    \   return (min, max)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for number in lst {\n        if number < 0 {\n            largest = number\n\
    \        } else {\n            smallest = number\n        }\n    }\n    return\
    \ (largest, smallest)", "    var min: Int? = nil\n    var max: Int? = nil\n  \
    \  for x in lst {\n        if x < 0 {\n            min = x\n        } else {\n\
    \            max = x\n        }\n    }\n    return (min, max)", "    var smallest:\
    \ Int?\n    var largest: Int?\n    for x in lst {\n        if x < 0 {\n      \
    \      smallest = x\n        } else {\n            largest = x\n        }\n  \
    \  }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var min: Int? = nil\n    var max: Int? = nil\n    for x in\
    \ lst {\n        if x < 0 {\n            if min == nil {\n                min\
    \ = x\n            } else {\n                min = nil\n            }\n      \
    \  } else {\n            if max == nil {\n                max = x\n          \
    \  } else {\n                max = nil\n            }\n        }\n    }\n    return\
    \ (min, max)", "    var largest = Int?()\n    var smallest = Int?()\n    for number\
    \ in lst {\n        if number > 0 {\n            if smallest == nil {\n      \
    \          smallest = number\n            } else {\n                if number\
    \ < smallest {\n                    smallest = number\n                }\n   \
    \         }\n        } else {\n            if largest == nil {\n             \
    \   largest = number\n            } else {\n                if number > largest\
    \ {\n                    largest = number\n                }\n            }\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number < 0 {\n\
    \            largest = number\n        } else {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    var min: Int?\n    var\
    \ max: Int?\n    for x in lst {\n        if x < 0 {\n            min = x\n   \
    \     } else {\n            max = x\n        }\n    }\n    return (min, max)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for num in lst {\n   \
    \     if num < 0 {\n            largest = num\n        } else if num > 0 {\n \
    \           smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number < 0 {\n\
    \            largest = number\n        } else {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    if lst.count < 2 {\n\
    \        return (nil, nil)\n    }\n    var largest = lst[0]\n    var smallest\
    \ = lst[0]\n    for x in lst {\n        if x < smallest {\n            smallest\
    \ = x\n        }\n        if x > largest {\n            largest = x\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for number\
    \ in lst {\n        if number > 0 {\n            if smallest == nil {\n      \
    \          smallest = number\n            } else {\n                if number\
    \ < smallest {\n                    smallest = number\n                }\n   \
    \         }\n        } else {\n            if largest == nil {\n             \
    \   largest = number\n            } else {\n                if number > largest\
    \ {\n                    largest = number\n                }\n            }\n\
    \        }\n    }\n    return (largest, smallest)", "    var smallest: Int?\n\
    \    var largest: Int?\n    for num in lst {\n        if num < 0 {\n         \
    \   smallest = num\n        } else if num > 0 {\n            largest = num\n \
    \       }\n    }\n    return (smallest, largest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    if lst.isEmpty() {\n        return (nil, nil)\n \
    \   }\n    var largest = lst.max()\n    var smallest = lst.min()\n    for number\
    \ in lst {\n        if number > largest {\n            largest = number\n    \
    \    } else if number < smallest {\n            smallest = number\n        }\n\
    \    }\n    return (largest, smallest)", "    var smallest: Int?\n    var largest:\
    \ Int?\n    for x in lst {\n        if x < 0 {\n            smallest = x\n   \
    \     } else {\n            largest = x\n        }\n    }\n    return (smallest,\
    \ largest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    if lst.isEmpty() {\n        return (nil, nil)\n    }\n    var max: Int? = nil\n\
    \    var min: Int? = nil\n    for x in lst {\n        if x < 0 {\n           \
    \ if max == nil {\n                max = x\n            } else {\n           \
    \     max = nil\n            }\n        } else {\n            if min == nil {\n\
    \                min = x\n            } else {\n                min = nil\n  \
    \          }\n        }\n    }\n    return (max, min)", "    guard lst.count >\
    \ 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for number in lst {\n        if number > largest {\n\
    \            largest = number\n        } else if number < smallest {\n       \
    \     smallest = number\n        }\n    }\n    return (largest, smallest)", " \
    \   guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if x < 0\
    \ {\n            largest = x\n        } else {\n            smallest = x\n   \
    \     }\n    }\n    return (largest, smallest)", "    var min: Int? = nil\n  \
    \  var max: Int? = nil\n    for x in lst {\n        if x < 0 {\n            min\
    \ = x\n        } else {\n            max = x\n        }\n    }\n    return (min,\
    \ max)", "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for v in lst {\n        if v < 0 {\n            largest = v\n\
    \        } else {\n            smallest = v\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = nil\n    var smallest = nil\n    for x in lst {\n        if\
    \ x < 0 {\n            if smallest == nil {\n                smallest = x\n  \
    \          } else {\n                smallest = min(smallest, x)\n           \
    \ }\n        } else {\n            if largest == nil {\n                largest\
    \ = x\n            } else {\n                largest = max(largest, x)\n     \
    \       }\n        }\n    }\n    return (largest, smallest)", "    if lst.isEmpty()\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number > largest\
    \ {\n            largest = number\n        } else if number < smallest {\n   \
    \         smallest = number\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest: Int?\
    \ = nil\n    var smallest: Int? = nil\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for num in lst {\n        if num < 0 {\n            largest\
    \ = num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for number in lst {\n        if number > largest {\n            largest =\
    \ number\n        } else if number < smallest {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number < 0 {\n\
    \            largest = number\n        } else {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number > 0 {\n\
    \            if smallest == nil {\n                smallest = number\n       \
    \     } else {\n                if number < smallest {\n                    smallest\
    \ = number\n                }\n            }\n        } else {\n            if\
    \ largest == nil {\n                largest = number\n            } else {\n \
    \               if number > largest {\n                    largest = number\n\
    \                }\n            }\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n\
    \        if number > largest {\n            largest = number\n        } else if\
    \ number < smallest {\n            smallest = number\n        }\n    }\n    return\
    \ (largest, smallest)", "    if lst.count < 2 {\n        return (nil, nil)\n \
    \   }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for x in lst\
    \ {\n        if x < 0 {\n            largest = x\n        } else {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    guard\
    \ lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n\
    \    var smallest = Int?(0)\n    for x in lst {\n        if x < 0 {\n        \
    \    largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var min: Int? = nil\n    var max: Int?\
    \ = nil\n    for x in lst {\n        if x < 0 {\n            if min == nil {\n\
    \                min = x\n            } else {\n                max = x\n    \
    \        }\n        } else {\n            if max == nil {\n                max\
    \ = x\n            } else {\n                min = x\n            }\n        }\n\
    \    }\n    return (min, max)", "    var smallest: Int?\n    var largest: Int?\n\
    \    for number in lst {\n        if number > 0 {\n            if smallest ==\
    \ nil {\n                smallest = number\n            } else {\n           \
    \     if number < smallest {\n                    smallest = number\n        \
    \        }\n            }\n        } else {\n            if largest == nil {\n\
    \                largest = number\n            } else {\n                if number\
    \ > largest {\n                    largest = number\n                }\n     \
    \       }\n        }\n    }\n    return (smallest, largest)", "    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for num in lst {\n        if num <\
    \ 0 {\n            largest = num\n        } else {\n            smallest = num\n\
    \        }\n    }\n    return (largest, smallest)", "    var min: Int?\n    var\
    \ max: Int?\n    for x in lst {\n        if x < 0 {\n            min = x\n   \
    \     } else {\n            max = x\n        }\n    }\n    return (min, max)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for num in lst {\n        if num\
    \ < 0 {\n            largest = num\n        } else {\n            smallest = num\n\
    \        }\n    }\n    return (largest, smallest)", "    var smallest: Int?\n\
    \    var largest: Int?\n    for x in lst {\n        if x < 0 {\n            smallest\
    \ = nil\n            break\n        } else if smallest == nil {\n            smallest\
    \ = x\n        } else {\n            if x > largest {\n                largest\
    \ = x\n            }\n        }\n    }\n    return (smallest, largest)", "   \
    \ guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    if lst.count < 2 {\n       \
    \ return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var min: Int? = nil\n    var max: Int? = nil\n    for v in lst {\n        if\
    \ v < 0 {\n            min = v\n        } else {\n            max = v\n      \
    \  }\n    }\n    return (min, max)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n\n    var largest = Int?()\n \
    \   var smallest = Int?()\n\n    for element in lst {\n        if element > 0\
    \ {\n            largest = element\n        } else {\n            smallest = element\n\
    \        }\n    }\n\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    guard lst.count > 0 else {\n   \
    \     return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest =\
    \ Int?(0)\n    for i in lst {\n        if i < 0 {\n            largest = i\n \
    \       } else {\n            smallest = i\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = nil\n    var smallest = nil\n    for x in lst {\n        if\
    \ x < 0 {\n            if smallest == nil {\n                smallest = x\n  \
    \          } else {\n                smallest = min(smallest, x)\n           \
    \ }\n        } else {\n            if largest == nil {\n                largest\
    \ = x\n            } else {\n                largest = max(largest, x)\n     \
    \       }\n        }\n    }\n    return (largest, smallest)", "    var smallest:\
    \ Int? = nil\n    var largest: Int? = nil\n    for x in lst {\n        if x <\
    \ 0 {\n            smallest = x\n        } else {\n            largest = x\n \
    \       }\n    }\n    return (largest, smallest)", "    guard lst.count > 0 else\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest\
    \ = Int?(0)\n    for number in lst {\n        if number > 0 {\n            if\
    \ smallest == nil {\n                smallest = number\n            } else {\n\
    \                if number < smallest {\n                    smallest = number\n\
    \                }\n            }\n        } else {\n            if largest ==\
    \ nil {\n                largest = number\n            } else {\n            \
    \    if number > largest {\n                    largest = number\n           \
    \     }\n            }\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n    \
    \    if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n\n    var largest = Int?(0)\n\
    \    var smallest = Int?(0)\n\n    for number in lst {\n        if number > largest\
    \ {\n            largest = number\n        }\n        if number < smallest {\n\
    \            smallest = number\n        }\n    }\n\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else if x > 0 {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    if lst.isEmpty()\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n    var smallest\
    \ = Int?(0)\n    for num in lst {\n        if num < 0 {\n            largest =\
    \ num\n        } else {\n            smallest = num\n        }\n    }\n    return\
    \ (largest, smallest)", "    guard lst.count > 0 else {\n        return (nil,\
    \ nil)\n    }\n\n    var largest = Int?(0)\n    var smallest = Int?(0)\n\n   \
    \ for number in lst {\n        if number > largest {\n            largest = number\n\
    \        } else if number < smallest {\n            smallest = number\n      \
    \  }\n    }\n\n    return (largest, smallest)", "    var largest = nil\n    var\
    \ smallest = nil\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else if x > 0 {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n\n    var largest = Int?(0)\n    var smallest = Int?(0)\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = nil\n\
    \    var smallest = nil\n    for x in lst {\n        if x < 0 {\n            if\
    \ smallest == nil {\n                smallest = x\n            } else {\n    \
    \            smallest = min(smallest, x)\n            }\n        } else {\n  \
    \          if largest == nil {\n                largest = x\n            } else\
    \ {\n                largest = max(largest, x)\n            }\n        }\n   \
    \ }\n    return (largest, smallest)", "    var smallest: Int?\n    var largest:\
    \ Int?\n    for number in lst {\n        if number < smallest {\n            smallest\
    \ = number\n        }\n        if number > largest {\n            largest = number\n\
    \        }\n    }\n    return (smallest, largest)", "    if lst.isEmpty {\n  \
    \      return (nil, nil)\n    }\n    var max: Int? = nil\n    var min: Int? =\
    \ nil\n    for x in lst {\n        if x < 0 {\n            if max == nil {\n \
    \               max = x\n            } else {\n                max = max(max,\
    \ x)\n            }\n        } else {\n            if min == nil {\n         \
    \       min = x\n            } else {\n                min = min(min, x)\n   \
    \         }\n        }\n    }\n    return (max, min)", "    var min: Int? = nil\n\
    \    var max: Int? = nil\n    for x in lst {\n        if x < 0 {\n           \
    \ if min == nil {\n                min = x\n            } else {\n           \
    \     min = nil\n            }\n        } else {\n            if max == nil {\n\
    \                max = x\n            } else {\n                max = nil\n  \
    \          }\n        }\n    }\n    return (min, max)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number > 0 {\n            if smallest\
    \ == nil {\n                smallest = number\n            } else {\n        \
    \        if number < smallest {\n                    smallest = number\n     \
    \           }\n            }\n        } else {\n            if largest == nil\
    \ {\n                largest = number\n            } else {\n                if\
    \ number > largest {\n                    largest = number\n                }\n\
    \            }\n        }\n    }\n    return (largest, smallest)", "    var smallest:\
    \ Int?\n    var largest: Int?\n    for x in lst {\n        if x < 0 {\n      \
    \      smallest = x\n        } else {\n            largest = x\n        }\n  \
    \  }\n    return (smallest, largest)", "    var min: Int? = nil\n    var max:\
    \ Int? = nil\n    for x in lst {\n        if x < 0 {\n            min = x\n  \
    \      } else {\n            max = x\n        }\n    }\n    return (min, max)",
  "    guard lst.count > 0 else {\n        return (nil, nil)\n    }\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n        if x < 0\
    \ {\n            largest = x\n        } else {\n            smallest = x\n   \
    \     }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n \
    \   var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n          \
    \  largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var min: Int? = nil\n    var max: Int?\
    \ = nil\n    for x in lst {\n        if x < 0 {\n            min = x\n       \
    \ } else {\n            max = x\n        }\n    }\n    return (min, max)", " \
    \   var largest = nil\n    var smallest = nil\n    for x in lst {\n        if\
    \ x < 0 {\n            largest = x\n        } else if largest == nil || x < largest\
    \ {\n            largest = x\n        }\n        if x > 0 {\n            smallest\
    \ = x\n        } else if smallest == nil || x > smallest {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n\n    var largest = Int?()\n    var smallest = Int?()\n \
    \   for number in lst {\n        if number > 0 {\n            if smallest == nil\
    \ {\n                smallest = number\n            } else {\n               \
    \ if number > smallest {\n                    smallest = number\n            \
    \    }\n            }\n        } else {\n            if largest == nil {\n   \
    \             largest = number\n            } else {\n                if number\
    \ < largest {\n                    largest = number\n                }\n     \
    \       }\n        }\n    }\n    return (largest, smallest)", "    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for number in lst {\n        if number\
    \ < 0 {\n            largest = number\n        } else {\n            smallest\
    \ = number\n        }\n    }\n    return (largest, smallest)", "    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for v in lst {\n        if v < 0 {\n\
    \            largest = v\n        } else {\n            smallest = v\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = nil\n    var smallest = nil\n    for\
    \ x in lst {\n        if x < 0 {\n            if smallest == nil {\n         \
    \       smallest = x\n            } else {\n                largest = smallest\n\
    \                smallest = x\n            }\n        } else {\n            if\
    \ largest == nil {\n                largest = x\n            } else {\n      \
    \          largest = largest!\n                smallest = x\n            }\n \
    \       }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    guard lst.count > 0 else {\n        return\
    \ (nil, nil)\n    }\n\n    var largest = lst[0]\n    var smallest = lst[0]\n \
    \   for i in 1..lst.count {\n        if largest < lst[i] {\n            largest\
    \ = lst[i]\n        }\n        if smallest > lst[i] {\n            smallest =\
    \ lst[i]\n        }\n    }\n    return (largest, smallest)", "    var largest\
    \ = Int?()\n    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n\
    \            largest = x\n        } else {\n            smallest = x\n       \
    \ }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    guard lst.count > 0 else {\n        return (nil, nil)\n   \
    \ }\n    var largest = Int?(0)\n    var smallest = Int?(0)\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n\
    \        if number > largest {\n            largest = number\n        } else if\
    \ number < smallest {\n            smallest = number\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for num in lst {\n        if num < 0 {\n            largest = num\n     \
    \   } else {\n            smallest = num\n        }\n    }\n    return (largest,\
    \ smallest)", "    var min: Int? = nil\n    var max: Int? = nil\n    for x in\
    \ lst {\n        if x < 0 {\n            min = x\n        } else {\n         \
    \   max = x\n        }\n    }\n    return (min, max)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   guard lst.count > 0 else {\n        return (nil, nil)\n    }\n\n    var largest\
    \ = Int?(0)\n    var smallest = Int?(0)\n\n    for number in lst {\n        if\
    \ number > largest {\n            largest = number\n        } else if number <\
    \ smallest {\n            smallest = number\n        }\n    }\n\n    return (largest,\
    \ smallest)", "    var min: Int? = nil\n    var max: Int? = nil\n    for x in\
    \ lst {\n        if x < 0 {\n            min = x\n        } else {\n         \
    \   max = x\n        }\n    }\n    return (min, max)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for x in lst {\n        if x < 0 {\n         \
    \   largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for num\
    \ in lst {\n        if num < 0 {\n            largest = num\n        } else {\n\
    \            smallest = num\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for v in lst {\n     \
    \   if v < 0 {\n            largest = v\n        } else {\n            smallest\
    \ = v\n        }\n    }\n    return (largest, smallest)", "    var smallest: Int?\n\
    \    var largest: Int?\n    for num in lst {\n        if num < smallest {\n  \
    \          smallest = num\n        } else if num > largest {\n            largest\
    \ = num\n        }\n    }\n    return (smallest, largest)", "    var largest =\
    \ Int?()\n    var smallest = Int?()\n    for num in lst {\n        if num < 0\
    \ {\n            largest = num\n        } else {\n            smallest = num\n\
    \        }\n    }\n    return (largest, smallest)", "    var min: Int? = nil\n\
    \    var max: Int? = nil\n    for x in lst {\n        if x < 0 {\n           \
    \ if min == nil {\n                min = x\n            } else {\n           \
    \     max = x\n            }\n        } else {\n            if max == nil {\n\
    \                max = x\n            } else {\n                if x > max {\n\
    \                    max = x\n                } else if x < min {\n          \
    \          min = x\n                }\n            }\n        }\n    }\n    return\
    \ (min, max)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var largest: Int? = nil\n    var smallest: Int? = nil\n    for x in lst {\n\
    \        if x < 0 {\n            largest = x\n        } else if x > 0 {\n    \
    \        smallest = x\n        }\n    }\n    return (largest, smallest)", "  \
    \  var largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n\
    \        if number > largest {\n            largest = number\n        } else if\
    \ number < smallest {\n            smallest = number\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for x in lst {\n        if x < 0 {\n            largest = x\n        } else\
    \ {\n            smallest = x\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else if x > 0 {\n         \
    \   smallest = x\n        }\n    }\n    return (largest, smallest)", "    var\
    \ min: Int? = nil\n    var max: Int? = nil\n    for x in lst {\n        if x <\
    \ 0 {\n            if min == nil {\n                min = x\n            } else\
    \ {\n                min = nil\n            }\n        } else {\n            if\
    \ max == nil {\n                max = x\n            } else {\n              \
    \  max = nil\n            }\n        }\n    }\n    return (min, max)", "    var\
    \ smallest: Int?\n    var largest: Int?\n    for number in lst {\n        if number\
    \ > 0 {\n            if smallest == nil {\n                smallest = number\n\
    \            } else {\n                if number < smallest {\n              \
    \      smallest = number\n                }\n            }\n        } else {\n\
    \            if largest == nil {\n                largest = number\n         \
    \   } else {\n                if number > largest {\n                    largest\
    \ = number\n                }\n            }\n        }\n    }\n    return (smallest,\
    \ largest)", "    var min: Int? = nil\n    var max: Int? = nil\n    for x in lst\
    \ {\n        if x < 0 {\n            if min == nil {\n                min = x\n\
    \            } else {\n                max = x\n            }\n        } else\
    \ {\n            if max == nil {\n                max = x\n            } else\
    \ {\n                if x > max {\n                    max = x\n             \
    \   } else if x < min {\n                    min = x\n                }\n    \
    \        }\n        }\n    }\n    return (min, max)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for num in lst {\n        if num < 0 {\n     \
    \       largest = num\n        } else {\n            smallest = num\n        }\n\
    \    }\n    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for number in lst {\n        if number < 0 {\n            largest\
    \ = number\n        } else {\n            smallest = number\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var min: Int?\n    var max: Int?\n    for x in lst {\n        if x < 0 {\n\
    \            min = nil\n        } else {\n            min = x\n        }\n   \
    \     if x > 0 {\n            max = nil\n        } else {\n            max = x\n\
    \        }\n    }\n    return (min, max)", "    var largest = Int?()\n    var\
    \ smallest = Int?()\n    for x in lst {\n        if x < 0 {\n            largest\
    \ = x\n        } else {\n            smallest = x\n        }\n    }\n    return\
    \ (largest, smallest)", "    var largest = Int?()\n    var smallest = Int?()\n\
    \    for number in lst {\n        if number > largest {\n            largest =\
    \ number\n        } else if number < smallest {\n            smallest = number\n\
    \        }\n    }\n    return (largest, smallest)", "    var largest = Int?()\n\
    \    var smallest = Int?()\n    for number in lst {\n        if number > largest\
    \ {\n            largest = number\n        } else if number < smallest {\n   \
    \         smallest = number\n        }\n    }\n    return (largest, smallest)",
  "    var largest = Int?()\n    var smallest = Int?()\n    for x in lst {\n     \
    \   if x < 0 {\n            largest = x\n        } else {\n            smallest\
    \ = x\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for x in lst {\n        if x < 0 {\n          \
    \  largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for v in lst {\n        if v < 0 {\n            largest = v\n\
    \        } else {\n            smallest = v\n        }\n    }\n    return (largest,\
    \ smallest)", "    var min: Int?\n    var max: Int?\n    for num in lst {\n  \
    \      if num < min {\n            min = num\n        } else if num > max {\n\
    \            max = num\n        }\n    }\n    return (min, max)", "    if lst.isEmpty()\
    \ {\n        return (nil, nil)\n    }\n    var largest = Int?()\n    var smallest\
    \ = Int?()\n    for x in lst {\n        if x < 0 {\n            largest = x\n\
    \        } else {\n            smallest = x\n        }\n    }\n    return (largest,\
    \ smallest)", "    var largest = Int?()\n    var smallest = Int?()\n    for number\
    \ in lst {\n        if number > largest {\n            largest = number\n    \
    \    } else if number < smallest {\n            smallest = number\n        }\n\
    \    }\n    return (largest, smallest)", "    var min: Int? = nil\n    var max:\
    \ Int? = nil\n    for x in lst {\n        if x < 0 {\n            min = x\n  \
    \      } else {\n            max = x\n        }\n    }\n    return (min, max)",
  "    var largest: Int?\n    var smallest: Int?\n    for x in lst {\n        if x\
    \ < 0 {\n            largest = x\n        } else {\n            smallest = x\n\
    \        }\n    }\n    return (largest, smallest)", "    var min: Int? = nil\n\
    \    var max: Int? = nil\n    for x in lst {\n        if x < 0 {\n           \
    \ min = x\n        } else {\n            max = x\n        }\n    }\n    return\
    \ (min, max)", "    var largest = Int?()\n    var smallest = Int?()\n    for x\
    \ in lst {\n        if x < 0 {\n            largest = x\n        } else {\n  \
    \          smallest = x\n        }\n    }\n    return (largest, smallest)", " \
    \   var min: Int? = nil\n    var max: Int? = nil\n    for x in lst {\n       \
    \ if x < 0 {\n            if min == nil {\n                min = x\n         \
    \   } else {\n                min = min(min, x)\n            }\n        } else\
    \ {\n            if max == nil {\n                max = x\n            } else\
    \ {\n                max = max(max, x)\n            }\n        }\n    }\n    return\
    \ (min, max)", "    var smallest: Int?\n    var largest: Int?\n    for x in lst\
    \ {\n        if x < 0 {\n            smallest = x\n        } else {\n        \
    \    largest = x\n        }\n    }\n    return (smallest, largest)", "    var\
    \ largest = Int?()\n    var smallest = Int?()\n    for number in lst {\n     \
    \   if number > largest {\n            largest = number\n        } else if number\
    \ < smallest {\n            smallest = number\n        }\n    }\n    return (largest,\
    \ smallest)", "    if lst.count < 2 {\n        return (nil, nil)\n    }\n    var\
    \ largest = Int?(0)\n    var smallest = Int?(0)\n    for num in lst {\n      \
    \  if num < 0 {\n            largest = num\n        } else {\n            smallest\
    \ = num\n        }\n    }\n    return (largest, smallest)", "    guard lst.count\
    \ > 0 else {\n        return (nil, nil)\n    }\n    var largest = Int?(0)\n  \
    \  var smallest = Int?(0)\n    for x in lst {\n        if x < 0 {\n          \
    \  largest = x\n        } else {\n            smallest = x\n        }\n    }\n\
    \    return (largest, smallest)", "    var min: Int? = nil\n    var max: Int?\
    \ = nil\n    for x in lst {\n        if x < 0 {\n            if min == nil {\n\
    \                min = x\n            } else {\n                min = nil\n  \
    \          }\n        } else {\n            if max == nil {\n                max\
    \ = x\n            } else {\n                max = nil\n            }\n      \
    \  }\n    }\n    return (min, max)"]
stop_tokens:
- "\n}"

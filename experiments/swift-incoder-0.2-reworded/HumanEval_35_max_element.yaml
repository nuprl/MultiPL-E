name: HumanEval_35_max_element
language: swift
prompt: "\n/// Return maximum element in the array.\n/// >>> max_element(l: [1, 2,\
  \ 3])\n/// 3\n/// >>> max_element(l: [5, 3, -5, 2, -3, 3, 9, 0, 123, 1, -10])\n\
  /// 123\nfunc max_element(l: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(max_element(l: [1, 2, 3]) == 3)\nassert(max_element(l:\
  \ [5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10]) == 124)"
completions: ['    return l.max()', "    var max: Int = 0\n    for x in l {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    return max", " \
    \   var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", '    return l.max()', '    return max(l)',
  "    var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    var max = 0\n    for x in l {\n     \
    \   if x > max {\n            max = x\n        }\n    }\n    return max", '    return
    l.max()', '    return l.max()', '    return l.max()', '    return l.max()', '    return
    l.max()', '    return l.max()', "    let maxValue = l[0]\n    for i in 1 ..< l.count\
    \ {\n        if l[i] > maxValue {\n            maxValue = l[i]\n        }\n  \
    \  }\n    return maxValue", "    var max = l[0]\n    for x in l {\n        if\
    \ x > max {\n            max = x\n        }\n    }\n    return max", "    var\
    \ max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n  \
    \      }\n    }\n    return max", '    return l.max()', '    return l.max()',
  "    var max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", '    return max(l)', "    var max = 0\n    for x in l {\n        if x\
    \ > max {\n            max = x\n        }\n    }\n    return max", "    if l ==\
    \ nil || len(l) == 0 {\n        return 0\n    }\n    var max = l[0]\n    for i\
    \ := 1; i < len(l); i++ {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n   \
    \     if x > max {\n            max = x\n        }\n    }\n    return max", '    return
    l.max()', "    var max: Int = 0\n    for x in l {\n        if x > max {\n    \
    \        max = x\n        }\n    }\n    return max", "    var max = l[0]\n   \
    \ for i in 1 ..< l.count {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return l.max()', "    var max = l[0]\n\
    \    for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", "    var max = l[0]\n    for x in l {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    return max", '    return l.max()',
  "    var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    let len = l.count\n    if len == 0 {\n\
    \        return 0\n    }\n    if len == 1 {\n        return l[0]\n    }\n    var\
    \ max = l[0]\n    for i in 1..<len {\n        if l[i] > max {\n            max\
    \ = l[i]\n        }\n    }\n    return max", '    return l.max()', "    var max\
    \ = l[0]\n    for x in l {\n        if x > max {\n            max = x\n      \
    \  }\n    }\n    return max", '    return l.max()', "    var max = l[0]\n    for\
    \ x in l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max: Int = 0\n    for element in l {\n        if element > max\
    \ {\n            max = element\n        }\n    }\n    return max", '    return
    l.max()', "    let maxIndex = l.count\n    guard maxIndex > 0 else {\n       \
    \ return 0\n    }\n    var maxValue = l[0]\n    for i in 1..<maxIndex {\n    \
    \    if l[i] > maxValue {\n            maxValue = l[i]\n        }\n    }\n   \
    \ return maxValue", '    return l.max()', "    var max: Int = 0\n    for x in\
    \ l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for x in l {\n        if x > max {\n        \
    \    max = x\n        }\n    }\n    return max", "    var max = 0\n    for x in\
    \ l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max: Int = 0\n    for x in l {\n        if x > max {\n      \
    \      max = x\n        }\n    }\n    return max", '    return l.max()', '    return
    l.max()', '    return l.max()', "    if l == nil || l.count == 0 {\n        return\
    \ 0\n    }\n    var max = l[0]\n    for x in l {\n        if x > max {\n     \
    \       max = x\n        }\n    }\n    return max", "    var max = l[0]\n    for\
    \ x in l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max: Int = 0\n    for el in l {\n        if el > max {\n    \
    \        max = el\n        }\n    }\n    return max", "    var max = l[0]\n  \
    \  for i in 1..<l.count {\n        if l[i] > max {\n            max = l[i]\n \
    \       }\n    }\n    return max", '    return l.max()', "    var max = 0\n  \
    \  for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", "    var max = 0\n    for x in l {\n        if x > max {\n \
    \           max = x\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i in 1 ..< l.count {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", '    return l.max()', "    if l == nil ||\
    \ len(l) == 0 {\n        return 0\n    }\n    var max = 0\n    var maxIndex =\
    \ 0\n    for i := 0; i < len(l); i++ {\n        if l[i] > max {\n            max\
    \ = l[i]\n            maxIndex = i\n        }\n    }\n    return max", "    var\
    \ max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n  \
    \      }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    return max", " \
    \   var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", '    return l.max()', "    var max: Int =\
    \ 0\n    for element in l {\n        if element > max {\n            max = element\n\
    \        }\n    }\n    return max", '    return l.max()', "    var max = l[0]\n\
    \    for i in 1..<l.count {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    var max = 0\n    for x in l {\n     \
    \   if x > max {\n            max = x\n        }\n    }\n    return max", "  \
    \  var max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", '    return l.max()',
  "    let max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", "    let len = l.count\n\
    \    if len == 0 {\n        return 0\n    }\n    if len == 1 {\n        return\
    \ l[0]\n    }\n    var max: Int = 0\n    for i in 0..<len {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for x in l {\n        if x > max {\n            max = x\n      \
    \  }\n    }\n    return max", "    if l.count < 1 {\n        return 0\n    }\n\
    \    var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    return max", " \
    \   var max: Int = 0\n    for x in l {\n        if x > max {\n            max\
    \ = x\n        }\n    }\n    return max", "    var max = l[0]\n    for x in l\
    \ {\n        if x > max {\n            max = x\n        }\n    }\n    return max",
  "    var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n  \
    \      if x > max {\n            max = x\n        }\n    }\n    return max", " \
    \   var max = l[0]\n    for x in l {\n        if x > max {\n            max =\
    \ x\n        }\n    }\n    return max", '    return max(l)', "    var max = 0\n\
    \    for element in l {\n        if element > max {\n            max = element\n\
    \        }\n    }\n    return max", '    return l.max()', '    return l.max()',
  "    let max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", '    return l.max()',
  "    var max = 0\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", '    return l.max()', "    var max = l[0]\n\
    \    for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", '    return l.max()', '    return l.max()', '    return l.max()',
  '    return l.max()', "    var max = l[0]\n    for x in l {\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    return max", '    return l.max()',
  '    return l.max()', '    return l.max()', '    return l.max()', "    var max:\
    \ Int = 0\n    for el in l {\n        if el > max {\n            max = el\n  \
    \      }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n    \
    \    if x > max {\n            max = x\n        }\n    }\n    return max", '    return
    l.max()', "    var max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n            max\
    \ = l[i]\n        }\n    }\n    return max", '    return l.max()', "    var max\
    \ = 0\n    for x in l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max", "    var max = 0\n    for x in l {\n        if x > max\
    \ {\n            max = x\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for i in 1..<l.count {\n        if l[i] > max {\n            max = l[i]\n\
    \        }\n    }\n    return max", "    var max = 0\n    for el in l {\n    \
    \    if el > max {\n            max = el\n        }\n    }\n    return max", '    return
    l.max()', "    var max = 0\n    for el in l {\n        if el > max {\n       \
    \     max = el\n        }\n    }\n    return max", "    var max = l[0]\n    for\
    \ x in l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    let max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    var max =\
    \ 0\n    for x in l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max", '    return l.max()', "    var max = l[0]\n    for x\
    \ in l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max = 0\n    for el in l {\n        if el > max {\n         \
    \   max = el\n        }\n    }\n    return max", "    if l == nil || l.count ==\
    \ 0 {\n        return 0\n    }\n    var max: Int = 0\n    var maxIndex: Int =\
    \ 0\n    for index in 0..<l.count {\n        if l[index] > max {\n           \
    \ max = l[index]\n            maxIndex = index\n        }\n    }\n    return max",
  "    var max = 0\n    for element in l {\n        if element > max {\n         \
    \   max = element\n        }\n    }\n    return max", "    var max: Int = 0\n\
    \    for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", "    let maxIndex = l.index(l.startIndex, offsetBy: 1)\n   \
    \ return l[maxIndex]", "    var max: Int = 0\n    for x in l {\n        if x >\
    \ max {\n            max = x\n        }\n    }\n    return max", "    var max\
    \ = l[0]\n    for x in l {\n        if x > max {\n            max = x\n      \
    \  }\n    }\n    return max", '    return l.max()', '    return max(l)', '    return
    max(l)', '    return l.max()', "    var max: Int = 0\n    for x in l {\n     \
    \   if x > max {\n            max = x\n        }\n    }\n    return max", "  \
    \  var max = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n   \
    \         max = l[i]\n        }\n    }\n    return max", "    var max = l[0]\n\
    \    for x in l {\n        if x > max {\n            max = x\n        }\n    }\n\
    \    return max", "    var max = l[0]\n    for x in l {\n        if x > max {\n\
    \            max = x\n        }\n    }\n    return max", "    var max: Int = 0\n\
    \    for element in l {\n        if element > max {\n            max = element\n\
    \        }\n    }\n    return max", "    if l.count < 1 {\n        return 0\n\
    \    }\n    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max\
    \ {\n            max = l[i]\n        }\n    }\n    return max", "    var max =\
    \ l[0]\n    for x in l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max", "    let maxValue = l[0]\n    for i in 1 ..< l.count\
    \ {\n        if l[i] > maxValue {\n            maxValue = l[i]\n        }\n  \
    \  }\n    return maxValue", '    return l.max()', '    return max(l)', "    if\
    \ l.count <= 1 {\n        return 0\n    }\n    var max = l[0]\n    for i in 1..<l.count\
    \ {\n        if l[i] > max {\n            max = l[i]\n        }\n    }\n    return\
    \ max", "    var max = 0\n    for x in l {\n        if x > max {\n           \
    \ max = x\n        }\n    }\n    return max", "    var max = l[0]\n    for x in\
    \ l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", '    return l.max()', "    if l == nil || l.count == 0 {\n        return\
    \ 0\n    }\n    var max = l[0]\n    for i in 1..<l.count {\n        if l[i] >\
    \ max {\n            max = l[i]\n        }\n    }\n    return max", "    var max\
    \ = 0\n    for x in l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max", "    var max = l[0]\n    for x in l {\n        if x >\
    \ max {\n            max = x\n        }\n    }\n    return max", "    let max\
    \ = l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n            max\
    \ = l[i]\n        }\n    }\n    return max", '    return l.max()', '    return
    l.max()', "    var max = 0\n    for x in l {\n        if x > max {\n         \
    \   max = x\n        }\n    }\n    return max", "    var max = l[0]\n    for x\
    \ in l {\n        if x > max {\n            max = x\n        }\n    }\n    return\
    \ max", "    var max = l[0]\n    for x in l {\n        if x > max {\n        \
    \    max = x\n        }\n    }\n    return max", '    return l.max()', "    var\
    \ max = l[0]\n    for i in 1..<l.count {\n        if l[i] > max {\n          \
    \  max = l[i]\n        }\n    }\n    return max", '    return l.max()', "    var\
    \ max = 0\n    for x in l {\n        if x > max {\n            max = x\n     \
    \   }\n    }\n    return max", "    if l.isEmpty {\n        return 0\n    }\n\
    \    var max = 0\n    var maxIndex = 0\n    for i := 0; i < l.count; i++ {\n \
    \       if l[i] > max {\n            max = l[i]\n            maxIndex = i\n  \
    \      }\n    }\n    return max", '    return l.max()', '    return l.max()',
  '    return l.max()', '    return l.max()', '    return l.max()', "    var max =\
    \ l[0]\n    for i in 1 ..< l.count {\n        if l[i] > max {\n            max\
    \ = l[i]\n        }\n    }\n    return max", "    var max = 0\n    for x in l\
    \ {\n        if x > max {\n            max = x\n        }\n    }\n    return max",
  "    var max = l[0]\n    for x in l {\n        if x > max {\n            max = x\n\
    \        }\n    }\n    return max", '    return l.max()', "    var max: Int =\
    \ 0\n    for x in l {\n        if x > max {\n            max = x\n        }\n\
    \    }\n    return max", "    var max = l[0]\n    for x in l {\n        if x >\
    \ max {\n            max = x\n        }\n    }\n    return max", '    return l.max()',
  '    return l.max()', "    var max: Int = 0\n    for el in l {\n        if el >\
    \ max {\n            max = el\n        }\n    }\n    return max", "    var max:\
    \ Int = 0\n    for x in l {\n        if x > max {\n            max = x\n     \
    \   }\n    }\n    return max", "    var max = l[0]\n    for x in l {\n       \
    \ if x > max {\n            max = x\n        }\n    }\n    return max"]
stop_tokens:
- "\n}"

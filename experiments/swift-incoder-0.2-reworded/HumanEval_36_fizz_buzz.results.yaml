language: swift
name: HumanEval_36_fizz_buzz
results:
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += number\n        }\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpq9qas4jc/tmpq9qas4jc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a4c28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a491fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a491f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a491e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq9qas4jc                        0x00005583e7842338 <unavailable> + 4920

    5    libc.so.6                          0x00002b04a4e14460 __libc_start_main +
    245

    6    tmpq9qas4jc                        0x00005583e7841fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 {\n        return 0\n    }\n    if n == 0 {\n  \
    \      return 0\n    }\n    if n % 11 == 0 || n % 13 == 0 {\n        return 1\
    \ + fizz_buzz(n - 1)\n    }\n    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpu1elgrbs.swift:17:30: error: missing argument label 'n:' in call\n\
    \        return 1 + fizz_buzz(n - 1)\n                             ^\n       \
    \                      n: \n/tmp/tmpu1elgrbs.swift:19:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n  \
    \                   n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", 0, n)\n    let digitCount\
    \ = digits.count\n    let digit7Count = digitCount.filter{$0 == 7}.count\n   \
    \ if digit7Count > 0 {\n        return digit7Count\n    }\n    return digitCount\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp2af8st1b.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", 0, n)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmp2af8st1b.swift:10:44: error: type\
    \ 'Int' cannot be used as a boolean; test for '!= 0' instead\n    let digits =\
    \ String(format: \"%0*d\", 0, n)\n                                           ^\n\
    \                                           ( != 0)\n/tmp/tmp2af8st1b.swift:10:18:\
    \ error: initializer 'init(_:radix:uppercase:)' requires that 'String' conform\
    \ to 'BinaryInteger'\n    let digits = String(format: \"%0*d\", 0, n)\n      \
    \           ^\nSwift.String:2:12: note: where 'T' = 'String'\n    public init<T>(_\
    \ value: T, radix: Int = 10, uppercase: Bool = false) where T : BinaryInteger\n\
    \           ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    if n % 11 == 1 {\n        return 1\n    }\n    if n % 13 == 1 {\n       \
    \ return 2\n    }\n    return 3\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp4qezmsrb/tmp4qezmsrb.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b43beeeec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b43bebe5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b43bebe5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b43bebe47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4qezmsrb                        0x000055ebc2a43248 <unavailable> + 4680

    5    libc.so.6                          0x00002b43bf0da460 __libc_start_main +
    245

    6    tmp4qezmsrb                        0x000055ebc2a42ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count\
    \ = 0\n    for n in 1...n {\n        if n % 11 == 0 || n % 13 == 0 {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpbzi3k_jr/tmpbzi3k_jr.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab821d58c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab821a4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab821a4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab821a4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbzi3k_jr                        0x000055fa0118b338 <unavailable> + 4920

    5    libc.so.6                          0x00002ab821f44460 __libc_start_main +
    245

    6    tmpbzi3k_jr                        0x000055fa0118afe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in stride(from: n, through:\
    \ 1, by: -1) {\n        if number % 11 == 0 || number % 13 == 0 {\n          \
    \  count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpxej1j_nf/tmpxej1j_nf.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9efd519c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9efd210b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9efd210988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9efd20f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxej1j_nf                        0x0000563b9b2e9478 <unavailable> + 5240

    5    libc.so.6                          0x00002b9efd705460 __libc_start_main +
    245

    6    tmpxej1j_nf                        0x0000563b9b2e9129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0\
    \ || n % 13 == 0 {\n        return fizz_buzz(n - 1)\n    }\n    return fizz_buzz(n\
    \ - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp37a_dg2s.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n/tmp/tmp37a_dg2s.swift:16:22: error: missing argument label 'n:'\
    \ in call\n    return fizz_buzz(n - 1) + 1\n                     ^\n         \
    \            n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9p4u1p2c.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += Int(number / 11)\n  \
    \      }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmpgmrtunz2/tmpgmrtunz2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0ebae58c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0ebab4fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0ebab4f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0ebab4e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgmrtunz2                        0x000055aaa79dc478 <unavailable> + 5240

    5    libc.so.6                          0x00002b0ebb044460 __libc_start_main +
    245

    6    tmpgmrtunz2                        0x000055aaa79dc129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpy054ngqv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmpy054ngqv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    return digits.characters.filter({\
    \ $0 == \"7\" }).count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpuz0jws9b.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpuz0jws9b.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpuz0jws9b.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0).characters.map({\
    \ Int(String($0)) })\n    let divisors = digits.filter { $0 % 11 == 0 || $0 %\
    \ 13 == 0 }\n    return divisors.count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxhrggk2x.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0).characters.map({ Int(String($0)) })\n                      \
    \ ^~~~~~~~~\n                                        radix:  uppercase: \n/tmp/tmpxhrggk2x.swift:10:18:\
    \ error: initializer 'init(_:radix:uppercase:)' requires that 'String' conform\
    \ to 'BinaryInteger'\n    let digits = String(format: \"%0*d\", n, 0).characters.map({\
    \ Int(String($0)) })\n                 ^\nSwift.String:2:12: note: where 'T' =\
    \ 'String'\n    public init<T>(_ value: T, radix: Int = 10, uppercase: Bool =\
    \ false) where T : BinaryInteger\n           ^\n/tmp/tmpxhrggk2x.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0).characters.map({ Int(String($0))\
    \ })\n                                           ^\n                         \
    \                  ( != 0)\n"
  stdout: ''
  timestamp: 1660014116
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9p4u1p2c.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0\
    \ || n % 13 == 0 {\n        return fizz_buzz(n - 1)\n    }\n    return fizz_buzz(n\
    \ - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp37a_dg2s.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n/tmp/tmp37a_dg2s.swift:16:22: error: missing argument label 'n:'\
    \ in call\n    return fizz_buzz(n - 1) + 1\n                     ^\n         \
    \            n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return 1\n    }\n    return fizz_buzz(n\
    \ - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpnr2cbhub.swift:16:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9p4u1p2c.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in stride(from: n, through:\
    \ 0, by: -1) {\n        if number % 11 == 0 || number % 13 == 0 {\n          \
    \  count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmp0qllz39l/tmp0qllz39l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ad2e71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ad2b68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ad2b68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ad2b677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qllz39l                        0x000055cbbb2ad478 <unavailable> + 5240

    5    libc.so.6                          0x00002b3ad305d460 __libc_start_main +
    245

    6    tmp0qllz39l                        0x000055cbbb2ad129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 0..<n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpu0c9vcve/tmpu0c9vcve.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4978691c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4978388b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4978388988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49783877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu0c9vcve                        0x0000556c090af338 <unavailable> + 4920

    5    libc.so.6                          0x00002b497887d460 __libc_start_main +
    245

    6    tmpu0c9vcve                        0x0000556c090aefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let divisor = 11\n    let remainder = n % divisor\n    if\
    \ remainder == 0 {\n        return 0\n    }\n    if remainder == 1 {\n       \
    \ return 1\n    }\n    if remainder == 2 {\n        return 2\n    }\n    if remainder\
    \ == 3 {\n        return 3\n    }\n    if remainder == 4 {\n        return 4\n\
    \    }\n    if remainder == 5 {\n        return 5\n    }\n    if remainder ==\
    \ 6 {\n        return 6\n    }\n    if remainder == 7 {\n        return 7\n  \
    \  }\n    if remainder == 8 {\n        return 8\n    }\n    if remainder == 9\
    \ {\n        return 9\n    }\n    if remainder == 10 {\n        return 10\n  \
    \  }\n    if remainder == 11 {\n        return 11\n    }\n    if remainder ==\
    \ 12 {\n        return 12\n    }\n    if remainder == 13 {\n        return 13\n\
    \    }\n    if remainder == 14 {\n        return 14\n    }\n    if remainder ==\
    \ 15 {\n        return 15\n    }\n    if remainder == 16 {\n        return 16\n\
    \    }\n    if remainder == 17 {\n        return 17\n    }\n    if remainder ==\
    \ 18 {\n        return 18\n    }\n    if remainder == 19 {\n        return 19\n\
    \    }\n    if remainder == 20 {\n        return 20\n    }\n    if remainder ==\
    \ 21 {\n        return 21\n    }\n    if remainder == 22 {\n        return 22\n\
    \    }\n    if remainder == 23 {\n        return 23\n    }\n    if remainder ==\
    \ 24 {\n        return 24\n    }\n    if remainder == 25 {\n        return 25\n\
    \    }\n    if remainder == 26 {\n        return 26\n    }\n    if remainder ==\
    \ 27 {\n        return 27\n    }\n    if remainder == 28 {\n        return 28\n\
    \    }\n    if remainder == 29 {\n        return 29\n    }\n    if remainder ==\
    \ 30 {\n        return 30\n    }\n    if remainder == 31 {\n        return 31\n\
    \    }\n    if remainder == 32 {\n        return 32\n    }\n    if remainder ==\
    \ 33 {\n        return 33\n    }\n    if remainder == 34 {\n        return 34\n\
    \    }\n    if remainder == 35 {\n        return 35\n    }\n    if remainder ==\
    \ 36 {\n        return 36\n    }\n    if remainder == 37 {\n        return 37\n\
    \    }\n    if remainder == 38 {\n        return 38\n    }\n    if remainder ==\
    \ 39 {\n        return 39\n    }\n    if remainder == 40 {\n        return 40\n\
    \    }\n    if remainder == 41 {\n        return 41\n    }\n    if remainder ==\
    \ \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: '/tmp/tmpsuxulfn3.swift:139:1: error: expected expression after operator

    }

    ^

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let divisors = [11, 13]\n    var count = 0\n    for divisor\
    \ in divisors {\n        if n % divisor == 0 {\n            count += 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp5j6pbw3j/tmp5j6pbw3j.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af43a09cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af439d93b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af439d93988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af439d927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5j6pbw3j                        0x0000564087d14533 <unavailable> + 5427

    5    libc.so.6                          0x00002af43a288460 __libc_start_main +
    245

    6    tmp5j6pbw3j                        0x0000564087d14169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    var count\
    \ = 0\n    for digit in digits {\n        switch digit {\n        case \"0\",\
    \ \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\":\n            count += 1\n \
    \       case \"8\", \"9\":\n            count += 1\n        case \"0\", \"1\"\
    , \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\":\n            count +=\
    \ 1\n        default:\n            break\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpzx3mzv8i.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpzx3mzv8i.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpzx3mzv8i.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += number\n        }\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpq9qas4jc/tmpq9qas4jc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b04a4c28c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04a491fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b04a491f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b04a491e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq9qas4jc                        0x00005583e7842338 <unavailable> + 4920

    5    libc.so.6                          0x00002b04a4e14460 __libc_start_main +
    245

    6    tmpq9qas4jc                        0x00005583e7841fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = [7, 11, 13]\n    var count = 0\n    for d in\
    \ digits {\n        if n % d == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxxap_gn7/tmpxxap_gn7.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae9d85eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae9d82e1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae9d82e1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae9d82e07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxap_gn7                        0x000055eb86b4d533 <unavailable> + 5427

    5    libc.so.6                          0x00002ae9d87d6460 __libc_start_main +
    245

    6    tmpxxap_gn7                        0x000055eb86b4d169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(Int(n)).characters\n    var count = 0\n\
    \    for digit in digits {\n        if digit == \"7\" {\n            count +=\
    \ 1\n        } else if digit == \"9\" {\n            count += 1\n        } else\
    \ if digit == \"11\" {\n            count += 1\n        } else if digit == \"\
    13\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpgi8j4pci.swift:10:33: error: 'characters' is unavailable: Please\
    \ use String directly\n    let digits = String(Int(n)).characters\n          \
    \                      ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n/tmp/tmpgi8j4pci.swift:17:25: error: binary operator '==' cannot be applied\
    \ to operands of type 'Character' and 'String'\n        } else if digit == \"\
    11\" {\n                  ~~~~~ ^  ~~~~\n/tmp/tmpgi8j4pci.swift:17:25: note: overloads\
    \ for '==' exist with these partially matching parameter lists: (Character, Character),\
    \ (String, String)\n        } else if digit == \"11\" {\n                    \
    \    ^\n/tmp/tmpgi8j4pci.swift:19:25: error: binary operator '==' cannot be applied\
    \ to operands of type 'Character' and 'String'\n        } else if digit == \"\
    13\" {\n                  ~~~~~ ^  ~~~~\n/tmp/tmpgi8j4pci.swift:19:25: note: overloads\
    \ for '==' exist with these partially matching parameter lists: (Character, Character),\
    \ (String, String)\n        } else if digit == \"13\" {\n                    \
    \    ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(n.toInt()).characters\n    let count\
    \ = digits.filter({ $0 == \"7\" }).count\n    if count > 0 {\n        return count\n\
    \    }\n    if n % 11 == 0 || n % 13 == 0 {\n        return 3\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpol0paldr.swift:10:27: error: value of type 'Int' has no member\
    \ 'toInt'\n    let digits = String(n.toInt()).characters\n                   \
    \     ~ ^~~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1) + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9vmqxj4b.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + 1\n                     ^\n                   \
    \  n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(n.toInt()).characters\n    let count\
    \ = digits.filter({ $0 == \"7\" }).count\n    if count > 0 {\n        return count\n\
    \    }\n    if n % 11 == 0 || n % 13 == 0 {\n        return 3\n    }\n    return\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpol0paldr.swift:10:27: error: value of type 'Int' has no member\
    \ 'toInt'\n    let digits = String(n.toInt()).characters\n                   \
    \     ~ ^~~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    let digitCount\
    \ = digits.count\n    var count = 0\n    for digit in digits {\n        if digit\
    \ == \"7\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpctor7ubw.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpctor7ubw.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpctor7ubw.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0).characters\n\
    \    let digitCount = digits.count\n    var count = 0\n    for digit in digits\
    \ {\n        if digit == \"7\" {\n            count += 1\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp20hz919g.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0).characters\n                       ^~~~~~~~~\n             \
    \                           radix:  uppercase: \n/tmp/tmp20hz919g.swift:10:18:\
    \ error: initializer 'init(_:radix:uppercase:)' requires that 'String' conform\
    \ to 'BinaryInteger'\n    let digits = String(format: \"%0*d\", n, 0).characters\n\
    \                 ^\nSwift.String:2:12: note: where 'T' = 'String'\n    public\
    \ init<T>(_ value: T, radix: Int = 10, uppercase: Bool = false) where T : BinaryInteger\n\
    \           ^\n/tmp/tmp20hz919g.swift:10:44: error: type 'Int' cannot be used\
    \ as a boolean; test for '!= 0' instead\n    let digits = String(format: \"%0*d\"\
    , n, 0).characters\n                                           ^\n           \
    \                                ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 || n > 100 {\n        return 0\n    }\n    var count\
    \ = 0\n    for number in stride(from: n, through: 1, by: -1) {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpx9xr_lk6/tmpx9xr_lk6.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af6b915dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af6b8e54b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af6b8e54988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af6b8e537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx9xr_lk6                        0x0000561264011478 <unavailable> + 5240

    5    libc.so.6                          0x00002af6b9349460 __libc_start_main +
    245

    6    tmpx9xr_lk6                        0x0000561264011129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 {\n        return 0\n    }\n    if n % 11 == 0\
    \ || n % 13 == 0 {\n        return 1 + fizz_buzz(n - 1)\n    }\n    return fizz_buzz(n\
    \ - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp8y73zre3.swift:14:30: error: missing argument label 'n:' in call\n\
    \        return 1 + fizz_buzz(n - 1)\n                             ^\n       \
    \                      n: \n/tmp/tmp8y73zre3.swift:16:22: error: missing argument\
    \ label 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n  \
    \                   n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 0..<n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpu0c9vcve/tmpu0c9vcve.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4978691c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4978388b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4978388988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49783877b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu0c9vcve                        0x0000556c090af338 <unavailable> + 4920

    5    libc.so.6                          0x00002b497887d460 __libc_start_main +
    245

    6    tmpu0c9vcve                        0x0000556c090aefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for num in 1...n {\n        if num % 11\
    \ == 0 || num % 13 == 0 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\n\
    assert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpsr5_n1k8/tmpsr5_n1k8.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3d9e6f8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3d9e3efb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3d9e3ef988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3d9e3ee7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsr5_n1k8                        0x000055e79d2b3338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3d9e8e4460 __libc_start_main +
    245

    6    tmpsr5_n1k8                        0x000055e79d2b2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return Int(ceil(log2(n)))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp47na82q5.swift:13:16: error: cannot find 'ceil' in scope\n    return\
    \ Int(ceil(log2(n)))\n               ^~~~\n/tmp/tmp47na82q5.swift:13:21: error:\
    \ cannot find 'log2' in scope\n    return Int(ceil(log2(n)))\n               \
    \     ^~~~\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for _ in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n        n /= 10\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp6bvguvuf.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n /= 10\n        ~ ^\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n / 11)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp9h50mni_.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n / 11)\n                         ^\n              \
    \           n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 0\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return 1\n    }\n    return fizz_buzz(n\
    \ - 1) + fizz_buzz(n - 3)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpmf69_66q.swift:16:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1) + fizz_buzz(n - 3)\n                     ^\n    \
    \                 n: \n/tmp/tmpmf69_66q.swift:16:41: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1) + fizz_buzz(n - 3)\n             \
    \                           ^\n                                        n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    return digits.count(\"\
    7\")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n:\
    \ 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp_ukmqfba.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmp_ukmqfba.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmp_ukmqfba.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            result += 1\n        }\n    }\n\
    \    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpgz4fwbm6/tmpgz4fwbm6.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c34ef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c34bebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c34beb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c34bea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgz4fwbm6                        0x0000561b559d1338 <unavailable> + 4920

    5    libc.so.6                          0x00002b3c350e0460 __libc_start_main +
    245

    6    tmpgz4fwbm6                        0x0000561b559d0fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var result = 0\n    var remainder = n\n    while remainder\
    \ > 0 {\n        if remainder % 11 == 0 || remainder % 13 == 0 {\n           \
    \ result += 1\n        }\n        remainder /= 10\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpobvizo27/tmpobvizo27.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b765055dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7650254b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7650254988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b76502537b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpobvizo27                        0x000055735a25b2c3 <unavailable> + 4803

    5    libc.so.6                          0x00002b7650749460 __libc_start_main +
    245

    6    tmpobvizo27                        0x000055735a25aef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return 1\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp948gqltv.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp948gqltv.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in stride(from: n, through:\
    \ 0, by: -1) {\n        if number % 11 == 0 || number % 13 == 0 {\n          \
    \  count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n:\
    \ 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\n\
    assert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n:\
    \ 100000) == 8026)"
  status: Exception
  stderr: 'tmp0qllz39l/tmp0qllz39l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ad2e71c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ad2b68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ad2b68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ad2b677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0qllz39l                        0x000055cbbb2ad478 <unavailable> + 5240

    5    libc.so.6                          0x00002b3ad305d460 __libc_start_main +
    245

    6    tmp0qllz39l                        0x000055cbbb2ad129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n < 0 {\n        return 0\n    }\n    var count = 0\n\
    \    for number in 1...n {\n        if number % 11 == 0 || number % 13 == 0 {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\n\
    assert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmp7gm0nemv/tmp7gm0nemv.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba2b955ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba2b9251b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba2b9251988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba2b92507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7gm0nemv                        0x0000562d4fca0338 <unavailable> + 4920

    5    libc.so.6                          0x00002ba2b9746460 __libc_start_main +
    245

    6    tmp7gm0nemv                        0x0000562d4fc9ffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return 0\n    }\n\
    \    return 1 + fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpxj7xd_1o.swift:13:26: error: missing argument label 'n:' in call\n\
    \    return 1 + fizz_buzz(n - 1)\n                         ^\n               \
    \          n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n % 11 == 0 || n % 13 == 0 {\n        return n\n    }\n\
    \    return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmptfpl2xcj.swift:13:22: error: missing argument label 'n:' in call\n\
    \    return fizz_buzz(n - 1)\n                     ^\n                     n:\
    \ \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for number in 1...n {\n        if number\
    \ % 11 == 0 || number % 13 == 0 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n: 50) ==\
    \ 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpukyq5qqk/tmpukyq5qqk.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a4a248c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a49f3fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9a49f3f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9a49f3e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpukyq5qqk                        0x0000562353c92338 <unavailable> + 4920

    5    libc.so.6                          0x00002b9a4a434460 __libc_start_main +
    245

    6    tmpukyq5qqk                        0x0000562353c91fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 1...n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpxyx4vr0v/tmpxyx4vr0v.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b52d7c96c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b52d798db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b52d798d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b52d798c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxyx4vr0v                        0x00005568de49c338 <unavailable> + 4920

    5    libc.so.6                          0x00002b52d7e82460 __libc_start_main +
    245

    6    tmpxyx4vr0v                        0x00005568de49bfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: -4
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    var count = 0\n    for n in 0..<n {\n        if n % 11 ==\
    \ 0 || n % 13 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fizz_buzz(n: 50) == 0)\nassert(fizz_buzz(n: 78)\
    \ == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n: 100) == 3)\nassert(fizz_buzz(n:\
    \ 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\nassert(fizz_buzz(n: 10000) ==\
    \ 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: Exception
  stderr: 'tmpz0ytyodi/tmpz0ytyodi.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b73e00c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b73dfdb9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b73dfdb9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b73dfdb87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz0ytyodi                        0x00005616478cf338 <unavailable> + 4920

    5    libc.so.6                          0x00002b73e02ae460 __libc_start_main +
    245

    6    tmpz0ytyodi                        0x00005616478cefe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    if n == 0 || n == 1 {\n        return n\n    }\n    if n\
    \ % 11 == 0 || n % 13 == 0 {\n        return fizz_buzz(n - 1) + 1\n    }\n   \
    \ return fizz_buzz(n - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmp94u33p4i.swift:14:26: error: missing argument label 'n:' in call\n\
    \        return fizz_buzz(n - 1) + 1\n                         ^\n           \
    \              n: \n/tmp/tmp94u33p4i.swift:16:22: error: missing argument label\
    \ 'n:' in call\n    return fizz_buzz(n - 1)\n                     ^\n        \
    \             n: \n"
  stdout: ''
  timestamp: 1660014113
- exit_code: 1
  program: "\n/// Return the number of times the digit 7 appears in integers less\
    \ than n which are divisible by 11 or 13.\n/// >>> fizz_buzz(n: 50)\n/// 0\n///\
    \ >>> fizz_buzz(n: 78)\n/// 2\n/// >>> fizz_buzz(n: 79)\n/// 3\nfunc fizz_buzz(n:\
    \ Int) -> Int {\n    let digits = String(format: \"%0*d\", n, 0)\n    return digits.characters.reduce(0)\
    \ {\n        guard $0 % 11 == 0 || $0 % 13 == 0 else { return $0 + 1 }\n     \
    \   return $0\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fizz_buzz(n:\
    \ 50) == 0)\nassert(fizz_buzz(n: 78) == 2)\nassert(fizz_buzz(n: 79) == 3)\nassert(fizz_buzz(n:\
    \ 100) == 3)\nassert(fizz_buzz(n: 200) == 6)\nassert(fizz_buzz(n: 4000) == 192)\n\
    assert(fizz_buzz(n: 10000) == 639)\nassert(fizz_buzz(n: 100000) == 8026)"
  status: SyntaxError
  stderr: "/tmp/tmpjcwj8g3r.swift:10:24: error: incorrect argument labels in call\
    \ (have 'format:_:_:', expected '_:radix:uppercase:')\n    let digits = String(format:\
    \ \"%0*d\", n, 0)\n                       ^~~~~~~~~\n                        \
    \                radix:  uppercase: \n/tmp/tmpjcwj8g3r.swift:10:18: error: initializer\
    \ 'init(_:radix:uppercase:)' requires that 'String' conform to 'BinaryInteger'\n\
    \    let digits = String(format: \"%0*d\", n, 0)\n                 ^\nSwift.String:2:12:\
    \ note: where 'T' = 'String'\n    public init<T>(_ value: T, radix: Int = 10,\
    \ uppercase: Bool = false) where T : BinaryInteger\n           ^\n/tmp/tmpjcwj8g3r.swift:10:44:\
    \ error: type 'Int' cannot be used as a boolean; test for '!= 0' instead\n   \
    \ let digits = String(format: \"%0*d\", n, 0)\n                              \
    \             ^\n                                           ( != 0)\n"
  stdout: ''
  timestamp: 1660014113

language: swift
name: HumanEval_55_fib
results:
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjjqsuuur.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, next: Int\n    for _ in 0..<n {\n        next = a\n      \
    \  a = b\n        b = next\n    }\n    return a\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpzrg3ofyy/tmpzrg3ofyy.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b10b4e62c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b10b4b59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b10b4b59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b10b4b587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzrg3ofyy                        0x000056522a645335 <unavailable> + 4917

    5    libc.so.6                          0x00002b10b504e460 __libc_start_main +
    245

    6    tmpzrg3ofyy                        0x000056522a644fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpcfpojzg9.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpcfpojzg9.swift:10:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphq7te4_1.swift:16:12: error: variable 'c' used before being initialized\n\
    \    return c\n           ^\n/tmp/tmphq7te4_1.swift:10:23: note: variable defined\
    \ here\n    var a = 0, b = 1, c: Int\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprct4nrg1.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, n)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n <= 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp2en3s58p.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmp2en3s58p.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a, b = 0, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n\
    \        b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpaq29_bra.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 0, c: Int\n        ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a, b = 1, c = 1\n    for _ in 0..<n {\n        let tmp = a\n        a =\
    \ b\n        b = tmp + c\n        c = a\n    }\n    return b\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp8xf5_k4p.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 1, c = 1\n        ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib: Int = 0\n    var fib1: Int = 0\n    var fib2: Int = 0\n    var fib3:\
    \ Int = 0\n    var fib4: Int = 0\n    var fib5: Int = 0\n    var fib6: Int = 0\n\
    \    var fib7: Int = 0\n    var fib8: Int = 0\n    var fib9: Int = 0\n    var\
    \ fib10: Int = 0\n    var fib11: Int = 0\n    var fib12: Int = 0\n    var fib13:\
    \ Int = 0\n    var fib14: Int = 0\n    var fib15: Int = 0\n    var fib16: Int\
    \ = 0\n    var fib17: Int = 0\n    var fib18: Int = 0\n    var fib19: Int = 0\n\
    \    var fib20: Int = 0\n    var fib21: Int = 0\n    var fib22: Int = 0\n    var\
    \ fib23: Int = 0\n    var fib24: Int = 0\n    var fib25: Int = 0\n    var fib26:\
    \ Int = 0\n    var fib27: Int = 0\n    var fib28: Int = 0\n    var fib29: Int\
    \ = 0\n    var fib30: Int = 0\n    var fib31: Int = 0\n    var fib32: Int = 0\n\
    \    var fib33: Int = 0\n    var fib34: Int = 0\n    var fib35: Int = 0\n    var\
    \ fib36: Int = 0\n    var fib37: Int = 0\n    var fib38: Int = 0\n    var fib39:\
    \ Int = 0\n    var fib40: Int = 0\n    var fib41: Int = 0\n    var fib42: Int\
    \ = 0\n    var fib43: Int = 0\n    var fib44: Int = 0\n    var fib45: Int = 0\n\
    \    var fib46: Int = 0\n    var fib47: Int = 0\n    var fib48: Int = 0\n    var\
    \ fib49: Int = 0\n    var fib50: Int = 0\n    var fib51: Int = 0\n    var fib52:\
    \ Int = 0\n    var fib53: Int = 0\n    var fib54: Int = 0\n    var fib55: Int\
    \ = 0\n    var fib56: Int = 0\n    var fib57: Int = 0\n    var fib58: Int = 0\n\
    \    var fib59: Int = 0\n    var fib60: Int = 0\n    var fib61: Int = 0\n    var\
    \ fib62: Int = 0\n    var fib63: Int = 0\n    var fib64: Int = 0\n    var fib65:\
    \ Int = 0\n    var fib66: Int = 0\n    var fib67: Int = 0\n    var fib68: Int\
    \ = 0\n    var fib69: Int = 0\n    var fib70: Int = 0\n    var fib71: Int = 0\n\
    \    var fib72: Int = 0\n    var fib73: Int = 0\n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0hseod43.swift:10:9: warning: variable 'fib' was never used; consider\
    \ replacing with '_' or removing it\n    var fib: Int = 0\n        ^~~\n     \
    \   _\n/tmp/tmp0hseod43.swift:11:9: warning: variable 'fib1' was never used; consider\
    \ replacing with '_' or removing it\n    var fib1: Int = 0\n        ^~~~\n   \
    \     _\n/tmp/tmp0hseod43.swift:12:9: warning: variable 'fib2' was never used;\
    \ consider replacing with '_' or removing it\n    var fib2: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:13:9: warning: variable 'fib3' was never used;\
    \ consider replacing with '_' or removing it\n    var fib3: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:14:9: warning: variable 'fib4' was never used;\
    \ consider replacing with '_' or removing it\n    var fib4: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:15:9: warning: variable 'fib5' was never used;\
    \ consider replacing with '_' or removing it\n    var fib5: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:16:9: warning: variable 'fib6' was never used;\
    \ consider replacing with '_' or removing it\n    var fib6: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:17:9: warning: variable 'fib7' was never used;\
    \ consider replacing with '_' or removing it\n    var fib7: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:18:9: warning: variable 'fib8' was never used;\
    \ consider replacing with '_' or removing it\n    var fib8: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:19:9: warning: variable 'fib9' was never used;\
    \ consider replacing with '_' or removing it\n    var fib9: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:20:9: warning: variable 'fib10' was never used;\
    \ consider replacing with '_' or removing it\n    var fib10: Int = 0\n       \
    \ ^~~~~\n        _\n/tmp/tmp0hseod43.swift:21:9: warning: variable 'fib11' was\
    \ never used; consider replacing with '_' or removing it\n    var fib11: Int =\
    \ 0\n        ^~~~~\n        _\n/tmp/tmp0hseod43.swift:22:9: warning: variable\
    \ 'fib12' was never used; consider replacing with '_' or removing it\n    var\
    \ fib12: Int = 0\n        ^~~~"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a, b = 0, c = 0\n  for _ in 0..<n {\n    a, b = b, a + b\n    c = a + b\n  }\n\
    \  return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpq9al0dky.swift:12:6: error: consecutive statements on a line must\
    \ be separated by ';'\n    a, b = b, a + b\n     ^\n     ;\n/tmp/tmpq9al0dky.swift:12:6:\
    \ error: expected expression\n    a, b = b, a + b\n     ^\n/tmp/tmpq9al0dky.swift:10:7:\
    \ error: type annotation missing in pattern\n  var a, b = 0, c = 0\n      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpbcqwkec2/tmpbcqwkec2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6d7949c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6d7640b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6d7640988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6d763f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcqwkec2                        0x0000555b20fe3335 <unavailable> + 4917

    5    libc.so.6                          0x00002ac6d7b35460 __libc_start_main +
    245

    6    tmpbcqwkec2                        0x0000555b20fe2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib: Int = 0\n    var fib1: Int = 0\n    var fib2: Int = 0\n    var fib3:\
    \ Int = 0\n    var fib4: Int = 0\n    var fib5: Int = 0\n    var fib6: Int = 0\n\
    \    var fib7: Int = 0\n    var fib8: Int = 0\n    var fib9: Int = 0\n    var\
    \ fib10: Int = 0\n    var fib11: Int = 0\n    var fib12: Int = 0\n    var fib13:\
    \ Int = 0\n    var fib14: Int = 0\n    var fib15: Int = 0\n    var fib16: Int\
    \ = 0\n    var fib17: Int = 0\n    var fib18: Int = 0\n    var fib19: Int = 0\n\
    \    var fib20: Int = 0\n    var fib21: Int = 0\n    var fib22: Int = 0\n    var\
    \ fib23: Int = 0\n    var fib24: Int = 0\n    var fib25: Int = 0\n    var fib26:\
    \ Int = 0\n    var fib27: Int = 0\n    var fib28: Int = 0\n    var fib29: Int\
    \ = 0\n    var fib30: Int = 0\n    var fib31: Int = 0\n    var fib32: Int = 0\n\
    \    var fib33: Int = 0\n    var fib34: Int = 0\n    var fib35: Int = 0\n    var\
    \ fib36: Int = 0\n    var fib37: Int = 0\n    var fib38: Int = 0\n    var fib39:\
    \ Int = 0\n    var fib40: Int = 0\n    var fib41: Int = 0\n    var fib42: Int\
    \ = 0\n    var fib43: Int = 0\n    var fib44: Int = 0\n    var fib45: Int = 0\n\
    \    var fib46: Int = 0\n    var fib47: Int = 0\n    var fib48: Int = 0\n    var\
    \ fib49: Int = 0\n    var fib50: Int = 0\n    var fib51: Int = 0\n    var fib52:\
    \ Int = 0\n    var fib53: Int = 0\n    var fib54: Int = 0\n    var fib55: Int\
    \ = 0\n    var fib56: Int = 0\n    var fib57: Int = 0\n    var fib58: Int = 0\n\
    \    var fib59: Int = 0\n    var fib60: Int = 0\n    var fib61: Int = 0\n    var\
    \ fib62: Int = 0\n    var fib63: Int = 0\n    var fib64: Int = 0\n    var fib65:\
    \ Int = 0\n    var fib66: Int = 0\n    var fib67: Int = 0\n    var fib68: Int\
    \ = 0\n    var fib69: Int = 0\n    var fib70: Int = 0\n    var fib71: Int = 0\n\
    \    var fib72: Int = 0\n    var fib73: Int = 0\n\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp0hseod43.swift:10:9: warning: variable 'fib' was never used; consider\
    \ replacing with '_' or removing it\n    var fib: Int = 0\n        ^~~\n     \
    \   _\n/tmp/tmp0hseod43.swift:11:9: warning: variable 'fib1' was never used; consider\
    \ replacing with '_' or removing it\n    var fib1: Int = 0\n        ^~~~\n   \
    \     _\n/tmp/tmp0hseod43.swift:12:9: warning: variable 'fib2' was never used;\
    \ consider replacing with '_' or removing it\n    var fib2: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:13:9: warning: variable 'fib3' was never used;\
    \ consider replacing with '_' or removing it\n    var fib3: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:14:9: warning: variable 'fib4' was never used;\
    \ consider replacing with '_' or removing it\n    var fib4: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:15:9: warning: variable 'fib5' was never used;\
    \ consider replacing with '_' or removing it\n    var fib5: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:16:9: warning: variable 'fib6' was never used;\
    \ consider replacing with '_' or removing it\n    var fib6: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:17:9: warning: variable 'fib7' was never used;\
    \ consider replacing with '_' or removing it\n    var fib7: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:18:9: warning: variable 'fib8' was never used;\
    \ consider replacing with '_' or removing it\n    var fib8: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:19:9: warning: variable 'fib9' was never used;\
    \ consider replacing with '_' or removing it\n    var fib9: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmp0hseod43.swift:20:9: warning: variable 'fib10' was never used;\
    \ consider replacing with '_' or removing it\n    var fib10: Int = 0\n       \
    \ ^~~~~\n        _\n/tmp/tmp0hseod43.swift:21:9: warning: variable 'fib11' was\
    \ never used; consider replacing with '_' or removing it\n    var fib11: Int =\
    \ 0\n        ^~~~~\n        _\n/tmp/tmp0hseod43.swift:22:9: warning: variable\
    \ 'fib12' was never used; consider replacing with '_' or removing it\n    var\
    \ fib12: Int = 0\n        ^~~~"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpo6ghpdqv/tmpo6ghpdqv.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba328f63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba328c5ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba328c5a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba328c597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo6ghpdqv                        0x00005563da0c2335 <unavailable> + 4917

    5    libc.so.6                          0x00002ba32914f460 __libc_start_main +
    245

    6    tmpo6ghpdqv                        0x00005563da0c1fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpcfpojzg9.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpcfpojzg9.swift:10:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib1: Int = 0\n    var fib2: Int = 0\n    for _ in 0..<n {\n        fib1\
    \ = fib1 + fib2\n        fib2 = fib1 - fib2\n    }\n    return fib1\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmp0o0cj2lr/tmp0o0cj2lr.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b743515fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7434e56b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7434e56988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7434e557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0o0cj2lr                        0x0000559d6214f335 <unavailable> + 4917

    5    libc.so.6                          0x00002b743534b460 __libc_start_main +
    245

    6    tmp0o0cj2lr                        0x0000559d6214efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibImpl(fibImplImpl, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp9_qllia4.swift:10:12: error: cannot find 'fibImpl' in scope\n \
    \   return fibImpl(fibImplImpl, n)\n           ^~~~~~~\n/tmp/tmp9_qllia4.swift:10:20:\
    \ error: cannot find 'fibImplImpl' in scope\n    return fibImpl(fibImplImpl, n)\n\
    \                   ^~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fib(n - 1) + fib(n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpcfpojzg9.swift:10:16: error: missing argument label 'n:' in call\n\
    \    return fib(n - 1) + fib(n - 2)\n               ^\n               n: \n/tmp/tmpcfpojzg9.swift:10:29:\
    \ error: missing argument label 'n:' in call\n    return fib(n - 1) + fib(n -\
    \ 2)\n                            ^\n                            n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int = 0\n    for _ in 0..<n {\n        c = a + b\n    \
    \    a = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmplzo4ogvd/tmplzo4ogvd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7cb1012c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7cb0d09b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7cb0d09988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7cb0d087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplzo4ogvd                        0x000055810a02f335 <unavailable> + 4917

    5    libc.so.6                          0x00002b7cb11fe460 __libc_start_main +
    245

    6    tmplzo4ogvd                        0x000055810a02efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpbcqwkec2/tmpbcqwkec2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6d7949c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6d7640b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6d7640988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6d763f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcqwkec2                        0x0000555b20fe3335 <unavailable> + 4917

    5    libc.so.6                          0x00002ac6d7b35460 __libc_start_main +
    245

    6    tmpbcqwkec2                        0x0000555b20fe2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fib(n: n, memo: nil)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpa9cs5u4j.swift:10:28: error: extra argument 'memo' in call\n  \
    \  return fib(n: n, memo: nil)\n              ~~~~~~~~~~~~~^~~~\n/tmp/tmpa9cs5u4j.swift:10:28:\
    \ error: 'nil' requires a contextual type\n    return fib(n: n, memo: nil)\n \
    \                          ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprct4nrg1.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, n)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphq7te4_1.swift:16:12: error: variable 'c' used before being initialized\n\
    \    return c\n           ^\n/tmp/tmphq7te4_1.swift:10:23: note: variable defined\
    \ here\n    var a = 0, b = 1, c: Int\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0, b = 1, next\n  for next in 1...n {\n    let next2 = a + b\n    a = b\n\
    \    b = next2\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp44tc5w4k.swift:10:21: error: type annotation missing in pattern\n\
    \  var a = 0, b = 1, next\n                    ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 1 // a\n  var b = 1 // b\n  var c = 1 // c\n  var d = 1 // d\n  var e =\
    \ 1 // e\n  var f = 1 // f\n  var g = 1 // g\n  var h = 1 // h\n  var i = 1 //\
    \ i\n  var j = 1 // j\n  var k = 1 // k\n  var l = 1 // l\n  var m = 1 // m\n\
    \  var n = 1 // n\n  var o = 1 // o\n  var p = 1 // p\n  var q = 1 // q\n  var\
    \ r = 1 // r\n  var s = 1 // s\n  var t = 1 // t\n  var u = 1 // u\n  var v =\
    \ 1 // v\n  var w = 1 // w\n  var x = 1 // x\n  var y = 1 // y\n  var z = 1 //\
    \ z\n\n  for _ in 0..<n {\n    let temp = a\n    a = b\n    b = c\n    c = d\n\
    \    d = e\n    e = f\n    f = g\n    g = h\n    h = i\n    i = j\n    j = k\n\
    \    k = l\n    l = m\n    m = n\n    n = o\n    o = p\n    p = q\n    q = r\n\
    \    r = s\n    s = t\n    t = u\n    u = v\n    v = w\n    w = x\n    x = y\n\
    \    y = z\n    z = temp\n  }\n\n  return z\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmp76uieb_c/tmp76uieb_c.swift:83: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b27a8970c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b27a8667b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b27a8667988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b27a86667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp76uieb_c                        0x0000555afee892a5 <unavailable> + 4773

    5    libc.so.6                          0x00002b27a8b5c460 __libc_start_main +
    245

    6    tmp76uieb_c                        0x0000555afee88f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 1 // 0th Fibonacci number\n    var b = 1 // 1st Fibonacci number\n \
    \   for _ in 0..<n {\n        let tmp = a\n        a = b\n        b = tmp + b\n\
    \    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpdxkb3xeu/tmpdxkb3xeu.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b75cf1b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b75ceeacb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b75ceeac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b75ceeab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdxkb3xeu                        0x000055ca38f05335 <unavailable> + 4917

    5    libc.so.6                          0x00002b75cf3a1460 __libc_start_main +
    245

    6    tmpdxkb3xeu                        0x000055ca38f04fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n <= 1 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpw2lhw356.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpw2lhw356.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0, b = 1, next\n  for next in 1...n {\n    let next2 = a + b\n    a = b\n\
    \    b = next2\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp44tc5w4k.swift:10:21: error: type annotation missing in pattern\n\
    \  var a = 0, b = 1, next\n                    ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a, b = 0, c = 0\n    for _ in 0..<n {\n        (c, a) = (b, a + b)\n   \
    \ }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp59yb7czc.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 0, c = 0\n        ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjjqsuuur.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 1, b = 0, tmp Int\n    for _ in 0..<n {\n        tmp = a + b\n     \
    \   a = b\n        b = tmp\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp6a_ek_we.swift:10:27: error: found an unexpected second identifier\
    \ in variable declaration; is there an accidental break?\n    var a = 1, b = 0,\
    \ tmp Int\n                          ^\n/tmp/tmp6a_ek_we.swift:10:27: note: join\
    \ the identifiers together\n    var a = 1, b = 0, tmp Int\n                  \
    \    ~~~~^~~\n                      tmpInt\n/tmp/tmp6a_ek_we.swift:10:23: error:\
    \ type annotation missing in pattern\n    var a = 1, b = 0, tmp Int\n        \
    \              ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, tmp: Int\n    for _ in 0..<n {\n        tmp = a + b\n    \
    \    a = b\n        b = tmp\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpfq5icaj9/tmpfq5icaj9.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7c53d69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7c53a60b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7c53a60988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7c53a5f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfq5icaj9                        0x0000561e6dece335 <unavailable> + 4917

    5    libc.so.6                          0x00002b7c53f55460 __libc_start_main +
    245

    6    tmpfq5icaj9                        0x0000561e6decdfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, next: Int\n    while n != 0 {\n        next = a + b\n    \
    \    a = b\n        b = next\n        n -= 1\n    }\n    return next\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpghan5j3w.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n -= 1\n        ~ ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 1 // a = 0\n  var b = 1 // b = 1\n  for _ in 0..<n {\n    let tmp = a\n\
    \    a = b\n    b = tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvtfnghjj/tmpvtfnghjj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b869bab1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b869b7a8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b869b7a8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b869b7a77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvtfnghjj                        0x0000556082430335 <unavailable> + 4917

    5    libc.so.6                          0x00002b869bc9d460 __libc_start_main +
    245

    6    tmpvtfnghjj                        0x000055608242ffe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphq7te4_1.swift:16:12: error: variable 'c' used before being initialized\n\
    \    return c\n           ^\n/tmp/tmphq7te4_1.swift:10:23: note: variable defined\
    \ here\n    var a = 0, b = 1, c: Int\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n       \
    \ a = b\n        b = next\n    }\n    return next\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp145s0u4v.swift:10:23: error: type annotation missing in pattern\n\
    \    var a = 0, b = 1, next\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjjqsuuur.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = b = 0\n  for i in 0..<n {\n    let tmp = a\n    a = b\n    b = tmp + a\n\
    \  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp5ts5bqa9.swift:10:11: error: cannot find 'b' in scope\n  var a\
    \ = b = 0\n          ^\n/tmp/tmp5ts5bqa9.swift:13:9: error: cannot find 'b' in\
    \ scope\n    a = b\n        ^\n/tmp/tmp5ts5bqa9.swift:14:5: error: cannot find\
    \ 'b' in scope\n    b = tmp + a\n    ^\n/tmp/tmp5ts5bqa9.swift:16:10: error: cannot\
    \ find 'b' in scope\n  return b\n         ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphq7te4_1.swift:16:12: error: variable 'c' used before being initialized\n\
    \    return c\n           ^\n/tmp/tmphq7te4_1.swift:10:23: note: variable defined\
    \ here\n    var a = 0, b = 1, c: Int\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a\
    \ = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphq7te4_1.swift:16:12: error: variable 'c' used before being initialized\n\
    \    return c\n           ^\n/tmp/tmphq7te4_1.swift:10:23: note: variable defined\
    \ here\n    var a = 0, b = 1, c: Int\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib: Int = 0\n    var fib2: Int = 0\n    var fib3: Int = 0\n    var fib4:\
    \ Int = 0\n    var fib5: Int = 0\n    var fib6: Int = 0\n    var fib7: Int = 0\n\
    \    var fib8: Int = 0\n    var fib9: Int = 0\n    var fib10: Int = 0\n    var\
    \ fib11: Int = 0\n    var fib12: Int = 0\n    var fib13: Int = 0\n    var fib14:\
    \ Int = 0\n    var fib15: Int = 0\n    var fib16: Int = 0\n    var fib17: Int\
    \ = 0\n    var fib18: Int = 0\n    var fib19: Int = 0\n    var fib20: Int = 0\n\
    \    var fib21: Int = 0\n    var fib22: Int = 0\n    var fib23: Int = 0\n    var\
    \ fib24: Int = 0\n    var fib25: Int = 0\n    var fib26: Int = 0\n    var fib27:\
    \ Int = 0\n    var fib28: Int = 0\n    var fib29: Int = 0\n    var fib30: Int\
    \ = 0\n    var fib31: Int = 0\n    var fib32: Int = 0\n    var fib33: Int = 0\n\
    \    var fib34: Int = 0\n    var fib35: Int = 0\n    var fib36: Int = 0\n    var\
    \ fib37: Int = 0\n    var fib38: Int = 0\n    var fib39: Int = 0\n    var fib40:\
    \ Int = 0\n    var fib41: Int = 0\n    var fib42: Int = 0\n    var fib43: Int\
    \ = 0\n    var fib44: Int = 0\n    var fib45: Int = 0\n    var fib46: Int = 0\n\
    \    var fib47: Int = 0\n    var fib48: Int = 0\n    var fib49: Int = 0\n    var\
    \ fib50: Int = 0\n    var fib51: Int = 0\n    var fib52: Int = 0\n    var fib53:\
    \ Int = 0\n    var fib54: Int = 0\n    var fib55: Int = 0\n    var fib56: Int\
    \ = 0\n    var fib57: Int = 0\n    var fib58: Int = 0\n    var fib59: Int = 0\n\
    \    var fib60: Int = 0\n    var fib61: Int = 0\n    var fib62: Int = 0\n    var\
    \ fib63: Int = 0\n    var fib64: Int = 0\n    var fib65: Int = 0\n    var fib66:\
    \ Int = 0\n    var fib67: Int = 0\n    var fib68: Int = 0\n    var fib69: Int\
    \ = 0\n    var fib70: Int = 0\n    var fib71: Int = 0\n    var fib72: Int = 0\n\
    \    var fib73: Int = 0\n    var fib74: Int = 0\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpkknyqqmk.swift:10:9: warning: variable 'fib' was never used; consider\
    \ replacing with '_' or removing it\n    var fib: Int = 0\n        ^~~\n     \
    \   _\n/tmp/tmpkknyqqmk.swift:11:9: warning: variable 'fib2' was never used; consider\
    \ replacing with '_' or removing it\n    var fib2: Int = 0\n        ^~~~\n   \
    \     _\n/tmp/tmpkknyqqmk.swift:12:9: warning: variable 'fib3' was never used;\
    \ consider replacing with '_' or removing it\n    var fib3: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:13:9: warning: variable 'fib4' was never used;\
    \ consider replacing with '_' or removing it\n    var fib4: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:14:9: warning: variable 'fib5' was never used;\
    \ consider replacing with '_' or removing it\n    var fib5: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:15:9: warning: variable 'fib6' was never used;\
    \ consider replacing with '_' or removing it\n    var fib6: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:16:9: warning: variable 'fib7' was never used;\
    \ consider replacing with '_' or removing it\n    var fib7: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:17:9: warning: variable 'fib8' was never used;\
    \ consider replacing with '_' or removing it\n    var fib8: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:18:9: warning: variable 'fib9' was never used;\
    \ consider replacing with '_' or removing it\n    var fib9: Int = 0\n        ^~~~\n\
    \        _\n/tmp/tmpkknyqqmk.swift:19:9: warning: variable 'fib10' was never used;\
    \ consider replacing with '_' or removing it\n    var fib10: Int = 0\n       \
    \ ^~~~~\n        _\n/tmp/tmpkknyqqmk.swift:20:9: warning: variable 'fib11' was\
    \ never used; consider replacing with '_' or removing it\n    var fib11: Int =\
    \ 0\n        ^~~~~\n        _\n/tmp/tmpkknyqqmk.swift:21:9: warning: variable\
    \ 'fib12' was never used; consider replacing with '_' or removing it\n    var\
    \ fib12: Int = 0\n        ^~~~~\n        _\n/tmp/tmpkknyqqmk.swift:22:9: warning:\
    \ variable 'fib13' was never used; consider replacing with '_' or removing it\n\
    \    var fib13: Int = 0\n        ^"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a, b = 1, c = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b = c\n\
    \    c = tmp + b\n  }\n  return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphzjxaaxb.swift:10:7: error: type annotation missing in pattern\n\
    \  var a, b = 1, c = 1\n      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n - 1, n + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmphwsghhee.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n - 1, n + 1)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpbcqwkec2/tmpbcqwkec2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6d7949c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6d7640b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6d7640988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6d763f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcqwkec2                        0x0000555b20fe3335 <unavailable> + 4917

    5    libc.so.6                          0x00002ac6d7b35460 __libc_start_main +
    245

    6    tmpbcqwkec2                        0x0000555b20fe2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, c: Int = 0\n    for _ in 0..<n {\n        c = a + b\n    \
    \    a = b\n        b = c\n    }\n    return c\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmplzo4ogvd/tmplzo4ogvd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7cb1012c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7cb0d09b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7cb0d09988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7cb0d087b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplzo4ogvd                        0x000055810a02f335 <unavailable> + 4917

    5    libc.so.6                          0x00002b7cb11fe460 __libc_start_main +
    245

    6    tmplzo4ogvd                        0x000055810a02efe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpbcqwkec2/tmpbcqwkec2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6d7949c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6d7640b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6d7640988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6d763f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcqwkec2                        0x0000555b20fe3335 <unavailable> + 4917

    5    libc.so.6                          0x00002ac6d7b35460 __libc_start_main +
    245

    6    tmpbcqwkec2                        0x0000555b20fe2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a, b = 0, c: Int\n    for _ in 0..<n {\n        c = a + b\n        a = b\n\
    \        b = c\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpaq29_bra.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 0, c: Int\n        ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n       \
    \ a = b\n        b = next\n    }\n    return next\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmp145s0u4v.swift:10:23: error: type annotation missing in pattern\n\
    \    var a = 0, b = 1, next\n                      ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib1 = 0\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2,\
    \ fib1 + fib2\n    }\n    return fib2\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqt2c2x01.swift:13:13: error: consecutive statements on a line must\
    \ be separated by ';'\n        fib1, fib2 = fib2, fib1 + fib2\n            ^\n\
    \            ;\n/tmp/tmpqt2c2x01.swift:13:13: error: expected expression\n   \
    \     fib1, fib2 = fib2, fib1 + fib2\n            ^\n/tmp/tmpqt2c2x01.swift:13:9:\
    \ warning: variable is unused\n        fib1, fib2 = fib2, fib1 + fib2\n      \
    \  ^~~~\n/tmp/tmpqt2c2x01.swift:10:9: warning: variable 'fib1' was never mutated;\
    \ consider changing to 'let' constant\n    var fib1 = 0\n    ~~~ ^\n    let\n\
    /tmp/tmpqt2c2x01.swift:11:9: warning: variable 'fib2' was never mutated; consider\
    \ changing to 'let' constant\n    var fib2 = 1\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  if\
    \ n < 2 {\n    return n\n  }\n  return fib(n-1) + fib(n-2)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpqp45dyzy.swift:13:14: error: missing argument label 'n:' in call\n\
    \  return fib(n-1) + fib(n-2)\n             ^\n             n: \n/tmp/tmpqp45dyzy.swift:13:25:\
    \ error: missing argument label 'n:' in call\n  return fib(n-1) + fib(n-2)\n \
    \                       ^\n                        n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpjjqsuuur.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, 0)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ return fibHelper(n, n)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmprct4nrg1.swift:10:12: error: cannot find 'fibHelper' in scope\n\
    \    return fibHelper(n, n)\n           ^~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var fib1 = 1\n    var fib2 = 1\n    for _ in 0..<n {\n        fib1, fib2 = fib2,\
    \ fib1 + fib2\n    }\n    return fib2\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n:\
    \ 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpydhpve_d.swift:13:13: error: consecutive statements on a line must\
    \ be separated by ';'\n        fib1, fib2 = fib2, fib1 + fib2\n            ^\n\
    \            ;\n/tmp/tmpydhpve_d.swift:13:13: error: expected expression\n   \
    \     fib1, fib2 = fib2, fib1 + fib2\n            ^\n/tmp/tmpydhpve_d.swift:13:9:\
    \ warning: variable is unused\n        fib1, fib2 = fib2, fib1 + fib2\n      \
    \  ^~~~\n/tmp/tmpydhpve_d.swift:10:9: warning: variable 'fib1' was never mutated;\
    \ consider changing to 'let' constant\n    var fib1 = 1\n    ~~~ ^\n    let\n\
    /tmp/tmpydhpve_d.swift:11:9: warning: variable 'fib2' was never mutated; consider\
    \ changing to 'let' constant\n    var fib2 = 1\n    ~~~ ^\n    let\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0, b = 1, next: Int\n    while n != 0 {\n        next = a + b\n    \
    \    a = b\n        b = next\n        n -= 1\n    }\n    return next\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpghan5j3w.swift:15:11: error: left side of mutating operator isn't\
    \ mutable: 'n' is a 'let' constant\n        n -= 1\n        ~ ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  for _ in 0..<n {\n    let tmp = a\n    a = b\n    b =\
    \ tmp + b\n  }\n  return b\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(fib(n: 10)\
    \ == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) ==\
    \ 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpbcqwkec2/tmpbcqwkec2.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac6d7949c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac6d7640b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac6d7640988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac6d763f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbcqwkec2                        0x0000555b20fe3335 <unavailable> + 4917

    5    libc.so.6                          0x00002ac6d7b35460 __libc_start_main +
    245

    6    tmpbcqwkec2                        0x0000555b20fe2fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0, b = 1, next\n  for next in 1...n {\n    let nextA = a + b\n    let nextB\
    \ = b\n    a = nextA\n    b = nextB\n  }\n  return a\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpaahx9mo3.swift:10:21: error: type annotation missing in pattern\n\
    \  var a = 0, b = 1, next\n                    ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a, b = 1, next\n    for _ in 0..<n {\n        next = a + b\n        a =\
    \ b\n        b = next\n    }\n    return next\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\n\
    assert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpcwpu745f.swift:10:9: error: type annotation missing in pattern\n\
    \    var a, b = 1, next\n        ^\n/tmp/tmpcwpu745f.swift:10:19: error: type\
    \ annotation missing in pattern\n    var a, b = 1, next\n                  ^\n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 0\n    var b = 1\n    for _ in 0..<n {\n        let tmp = a\n      \
    \  a = b\n        b = tmp + b\n    }\n    return b\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpvmrvdzgy/tmpvmrvdzgy.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b214f046c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b214ed3db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b214ed3d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b214ed3c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvmrvdzgy                        0x000055db25c3d335 <unavailable> + 4917

    5    libc.so.6                          0x00002b214f232460 __libc_start_main +
    245

    6    tmpvmrvdzgy                        0x000055db25c3cfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ var a = 1, b = 0, n1 = 0, n2 = 1\n    for _ in 0..<n {\n        let c = a +\
    \ b\n        a = b\n        b = c\n        n1 += a\n        n2 += b\n    }\n \
    \   return n1 + n2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(fib(n: 10) == 55)\n\
    assert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n:\
    \ 12) == 144)"
  status: Exception
  stderr: 'tmpwn5atb11/tmpwn5atb11.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5fe9dcbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5fe9ac2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5fe9ac2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5fe9ac17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwn5atb11                        0x00005622b91b5335 <unavailable> + 4917

    5    libc.so.6                          0x00002b5fe9fb7460 __libc_start_main +
    245

    6    tmpwn5atb11                        0x00005622b91b4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824455
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: -4
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n  var\
    \ a = 0\n  var b = 1\n  var c = 0\n  for _ in 0..<n {\n    c = a + b\n    a =\
    \ b\n    b = c\n  }\n  return c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(fib(n:\
    \ 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n: 8) == 21)\nassert(fib(n: 11)\
    \ == 89)\nassert(fib(n: 12) == 144)"
  status: Exception
  stderr: 'tmpmx07dly1/tmpmx07dly1.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadd26ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadd23e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadd23e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadd23e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmx07dly1                        0x0000558f6eb82335 <unavailable> + 4917

    5    libc.so.6                          0x00002aadd28d7460 __libc_start_main +
    245

    6    tmpmx07dly1                        0x0000558f6eb81fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824455
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454
- exit_code: 1
  program: "\n/// Return n-th Fibonacci number.\n/// >>> fib(n: 10)\n/// 55\n/// >>>\
    \ fib(n: 1)\n/// 1\n/// >>> fib(n: 8)\n/// 21\nfunc fib(n: Int) -> Int {\n   \
    \ if n < 2 {\n        return n\n    }\n    return fib(n-1) + fib(n-2)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(fib(n: 10) == 55)\nassert(fib(n: 1) == 1)\nassert(fib(n:\
    \ 8) == 21)\nassert(fib(n: 11) == 89)\nassert(fib(n: 12) == 144)"
  status: SyntaxError
  stderr: "/tmp/tmpsjiwxod4.swift:13:16: error: missing argument label 'n:' in call\n\
    \    return fib(n-1) + fib(n-2)\n               ^\n               n: \n/tmp/tmpsjiwxod4.swift:13:27:\
    \ error: missing argument label 'n:' in call\n    return fib(n-1) + fib(n-2)\n\
    \                          ^\n                          n: \n"
  stdout: ''
  timestamp: 1659824454

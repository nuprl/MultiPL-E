name: HumanEval_78_hex_key
language: swift
prompt: "\n/// You have been tasked to write a function that receives \n/// a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n/// digits that are\
  \ primes (prime number, or a prime, is a natural number \n/// greater than 1 that\
  \ is not a product of two smaller natural numbers).\n/// Hexadecimal digits are\
  \ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n/// Prime numbers are 2, 3, 5,\
  \ 7, 11, 13, 17,...\n/// So you have to determine a number of the following digits:\
  \ 2, 3, 5, 7, \n/// B (=decimal 11), D (=decimal 13).\n/// Note: you may assume\
  \ the input is always correct or empty string, \n/// and symbols A,B,C,D,E,F are\
  \ always uppercase.\n/// Examples:\n/// >>> hex_key(num: \"AB\")\n/// 1\n/// >>>\
  \ hex_key(num: \"1077E\")\n/// 2\n/// >>> hex_key(num: \"ABED1A33\")\n/// 4\n///\
  \ >>> hex_key(num: \"123456789ABCDEF0\")\n/// 6\n/// >>> hex_key(num: \"2020\")\n\
  /// 2\nfunc hex_key(num: String) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(hex_key(num: \"AB\") == 1)\nassert(hex_key(num:\
  \ \"1077E\") == 2)\nassert(hex_key(num: \"ABED1A33\") == 4)\nassert(hex_key(num:\
  \ \"2020\") == 2)\nassert(hex_key(num: \"123456789ABCDEF0\") == 6)\nassert(hex_key(num:\
  \ \"112233445566778899AABBCCDDEEFF00\") == 12)"
completions: ["    let digits = num.characters\n    var result = 0\n    for digit\
    \ in digits {\n        switch digit {\n        case \"0\":\n        case \"1\"\
    :\n        case \"2\":\n        case \"3\":\n        case \"4\":\n        case\
    \ \"5\":\n        case \"6\":\n        case \"7\":\n        case \"8\":\n    \
    \    case \"9\":\n        case \"A\":\n        case \"B\":\n        case \"C\"\
    :\n        case \"D\":\n        case \"E\":\n        case \"F\":\n           \
    \ result += 1\n        default:\n            break\n        }\n    }\n    return\
    \ result", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { $0.value }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime(hexDigit:\
    \ $0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount\
    \ < hexDigitPrimeCount {\n        return 0\n    }\n    return hexDigitPrimes.count",
  "    var hexDigits: [String] = []\n    for char in num {\n        hexDigits.append(String(char))\n\
    \    }\n    hexDigits.sort()\n    var primeCount = 0\n    for digit in hexDigits\
    \ {\n        if digit == \"A\" || digit == \"B\" || digit == \"C\" || digit ==\
    \ \"D\" || digit == \"E\" || digit == \"F\" {\n            continue\n        }\n\
    \        var prime = true\n        for index in 0..<hexDigits.count {\n      \
    \      if hexDigits[index] == digit {\n                prime = false\n       \
    \         break\n            }\n        }\n        if prime {\n            primeCount\
    \ += 1\n        }\n    }\n    return primeCount", "    let digits = num.characters\n\
    \    let len = digits.count\n    var primes = 0\n    var prime: Int = 0\n    var\
    \ prime_digit: Int = 0\n    var prime_digit_count: Int = 0\n    var prime_digit_sum:\
    \ Int = 0\n    var prime_digit_product: Int = 0\n    var prime_digit_product2:\
    \ Int = 0\n    var prime_digit_product3: Int = 0\n    var prime_digit_product4:\
    \ Int = 0\n    var prime_digit_product5: Int = 0\n    var prime_digit_product6:\
    \ Int = 0\n    var prime_digit_product7: Int = 0\n    var prime_digit_product8:\
    \ Int = 0\n    var prime_digit_product9: Int = 0\n    var prime_digit_product10:\
    \ Int = 0\n    var prime_digit_product11: Int = 0\n    var prime_digit_product12:\
    \ Int = 0\n    var prime_digit_product13: Int = 0\n    var prime_digit_product14:\
    \ Int = 0\n    var prime_digit_product15: Int = 0\n    var prime_digit_product16:\
    \ Int = 0\n    var prime_digit_product17: Int = 0\n    var prime_digit_product18:\
    \ Int = 0\n    var prime_digit_product19: Int = 0\n    var prime_digit_product20:\
    \ Int = 0\n    var prime_digit_product21: Int = 0\n    var prime_digit_product22:\
    \ Int = 0\n    var prime_digit_product23: Int = 0\n    var prime_digit_product24:\
    \ Int = 0\n    var prime_digit_product25: Int = 0\n    var prime_digit_product26:\
    \ Int = 0\n    var prime_digit_product27: Int = 0\n    var prime_digit_product28:\
    \ Int = 0\n    var prime_digit_product29: Int = 0\n    var prime_digit_product30:\
    \ Int = 0\n    var prime_digit_product31: Int = 0\n    var prime_digit_product32:\
    \ Int = 0\n    var prime_digit_product33: Int = 0\n    var prime_digit_product34:\
    \ Int = 0\n    var prime_digit_product35: Int = 0\n    var prime_digit_product36:\
    \ Int = 0\n    var prime_digit_product37: Int = 0\n    var prime_digit_product38:\
    \ Int = 0\n    var prime_digit_product39: Int = 0\n    var prime_digit_product40:\
    \ Int = 0\n    var prime_digit_product41: Int = 0\n    var prime_digit_product42:\
    \ Int = 0\n    var prime_digit_product43: Int = 0\n    var prime_digit_product44:\
    \ Int = 0\n    var prime_digit_product45: Int = 0\n    var prime_digit_product46:\
    \ Int = 0\n    var prime_digit_product47: Int = 0\n", "    var nums = num.characters\n\
    \    var primes = [Int]()\n    var primes_count = 0\n    var primes_sum = 0\n\
    \    var primes_sum2 = 0\n    var primes_sum3 = 0\n    var primes_sum4 = 0\n \
    \   var primes_sum5 = 0\n    var primes_sum6 = 0\n    var primes_sum7 = 0\n  \
    \  var primes_sum8 = 0\n    var primes_sum9 = 0\n    var primes_sum10 = 0\n  \
    \  var primes_sum11 = 0\n    var primes_sum12 = 0\n    var primes_sum13 = 0\n\
    \    var primes_sum14 = 0\n    var primes_sum15 = 0\n    var primes_sum16 = 0\n\
    \    var primes_sum17 = 0\n    var primes_sum18 = 0\n    var primes_sum19 = 0\n\
    \    var primes_sum20 = 0\n    var primes_sum21 = 0\n    var primes_sum22 = 0\n\
    \    var primes_sum23 = 0\n    var primes_sum24 = 0\n    var primes_sum25 = 0\n\
    \    var primes_sum26 = 0\n    var primes_sum27 = 0\n    var primes_sum28 = 0\n\
    \    var primes_sum29 = 0\n    var primes_sum30 = 0\n    var primes_sum31 = 0\n\
    \    var primes_sum32 = 0\n    var primes_sum33 = 0\n    var primes_sum34 = 0\n\
    \    var primes_sum35 = 0\n    var primes_sum36 = 0\n    var primes_sum37 = 0\n\
    \    var primes_sum38 = 0\n    var primes_sum39 = 0\n    var primes_sum40 = 0\n\
    \    var primes_sum41 = 0\n    var primes_sum42 = 0\n    var primes_sum43 = 0\n\
    \    var primes_sum44 = 0\n    var primes_sum45 = 0\n    var primes_sum46 = 0\n\
    \    var primes_sum47 = 0\n    var primes_sum48 = 0\n    var primes_sum49 = 0\n\
    \    var primes_sum50 = 0\n    var primes_sum51 = 0\n    var primes_sum52 = 0\n\
    \    var primes_sum53 = 0\n    var primes_sum54 = 0\n    var primes_sum55 = 0\n\
    \    var primes_sum56 = 0\n    var primes_sum57 = 0\n    var primes_sum58 = 0\n\
    \    var primes_sum59 = 0\n    var primes_sum60 = 0\n    var primes_sum61 = 0\n\
    \    var primes_sum62 = 0\n    var primes_sum63 = 0\n    var primes_sum64 = 0\n\
    \    var primes_sum65 = 0\n    var primes_sum66 = 0\n    var primes_sum67 = 0\n\
    \    var primes_sum68 = 0\n    var primes_sum69 = 0\n    var primes_sum70 = 0\n\
    \    var primes_sum", "    var nums = num.characters\n    var count = 0\n    for\
    \ _ in 0..<nums.count {\n        let hex = nums[_]\n        if hex >= '0' && hex\
    \ <= '9' {\n            count += 1\n        }\n    }\n    return count", "   \
    \ var hexNum = num.characters\n    var hexNumLen = hexNum.count\n    var hexNumStr\
    \ = \"\"\n    var hexNumStrLen = 0\n    var hexNumStrChar = \"\"\n    var hexNumStrCharLen\
    \ = 0\n    var hexNumStrCharChar = \"\"\n    var hexNumStrCharCharLen = 0\n  \
    \  var hexNumStrCharCharLen = 0\n    var hexNumStrCharCharChar = \"\"\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var hexNumStrCharCharCharLen = 0\n    var\
    \ hexNumStrCharCharCharLen = 0\n    var ", "    let digits = num.characters\n\
    \    var prime_count = 0\n    var prime_digits = 0\n    var prime_digit = 0\n\
    \    var prime_digit_count = 0\n    var prime_digit_count_max = 0\n    var prime_digit_count_min\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index\
    \ = 0\n    var prime_digit_count_min_index = 0\n    var prime_digit_count_max_index",
  "    // Your code here\n    let digits = num.characters\n    var count = 0\n   \
    \ for digit in digits {\n        if digit == \"A\" || digit == \"B\" || digit\
    \ == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"F\" {\n         \
    \   count += 1\n        }\n    }\n    return count", "    var nums: [Int] = []\n\
    \    var numsCount = 0\n    var numsCount2 = 0\n    var numsCount3 = 0\n    var\
    \ numsCount4 = 0\n    var numsCount5 = 0\n    var numsCount6 = 0\n    var numsCount7\
    \ = 0\n    var numsCount8 = 0\n    var numsCount9 = 0\n    var numsCount10 = 0\n\
    \    var numsCount11 = 0\n    var numsCount12 = 0\n    var numsCount13 = 0\n \
    \   var numsCount14 = 0\n    var numsCount15 = 0\n    var numsCount16 = 0\n  \
    \  var numsCount17 = 0\n    var numsCount18 = 0\n    var numsCount19 = 0\n   \
    \ var numsCount20 = 0\n    var numsCount21 = 0\n    var numsCount22 = 0\n    var\
    \ numsCount23 = 0\n    var numsCount24 = 0\n    var numsCount25 = 0\n    var numsCount26\
    \ = 0\n    var numsCount27 = 0\n    var numsCount28 = 0\n    var numsCount29 =\
    \ 0\n    var numsCount30 = 0\n    var numsCount31 = 0\n    var numsCount32 = 0\n\
    \    var numsCount33 = 0\n    var numsCount34 = 0\n    var numsCount35 = 0\n \
    \   var numsCount36 = 0\n    var numsCount37 = 0\n    var numsCount38 = 0\n  \
    \  var numsCount39 = 0\n    var numsCount40 = 0\n    var numsCount41 = 0\n   \
    \ var numsCount42 = 0\n    var numsCount43 = 0\n    var numsCount44 = 0\n    var\
    \ numsCount45 = 0\n    var numsCount46 = 0\n    var numsCount47 = 0\n    var numsCount48\
    \ = 0\n    var numsCount49 = 0\n    var numsCount50 = 0\n    var numsCount51 =\
    \ 0\n    var numsCount52 = 0\n    var numsCount53 = 0\n    var numsCount54 = 0\n\
    \    var numsCount55 = 0\n    var numsCount56 = 0\n    var numsCount57 = 0\n \
    \   var numsCount58 = 0\n    var numsCount59 = 0\n    var numsCount60 = 0\n  \
    \  var numsCount61 = 0\n    var numsCount62 = 0\n    var numsCount63 = 0\n   \
    \ var numsCount64 = 0\n    var numsCount65 = 0\n    var numsCount66 = 0\n    var\
    \ numsCount67 = 0\n    var numsCount68 = 0\n    var numsCount69 = 0\n    var numsCount70\
    \ = 0\n    var numsCount71 = 0\n    var numsCount72 = 0\n    var nums", "    var\
    \ count = 0\n    var digits = \"\"\n    for char in num {\n        if char ==\
    \ \"A\" || char == \"B\" || char == \"C\" || char == \"D\" || char == \"E\" ||\
    \ char == \"F\" {\n            digits = char\n        } else {\n            digits\
    \ += char\n        }\n    }\n    for char in digits {\n        if char == \"0\"\
    \ || char == \"1\" {\n            count += 1\n        }\n    }\n    return count",
  "    var nums = num.characters\n    var count = 0\n    for index in 0..<nums.count\
    \ {\n        let char = nums[index] // char is 'A'\n        if char.uppercased()\
    \ == \"A\" {\n            count += 2\n        } else if char.uppercased() == \"\
    B\" {\n            count += 3\n        } else if char.uppercased() == \"C\" {\n\
    \            count += 5\n        } else if char.uppercased() == \"D\" {\n    \
    \        count += 7\n        } else if char.uppercased() == \"E\" {\n        \
    \    count += 11\n        } else if char.uppercased() == \"F\" {\n           \
    \ count += 13\n        } else {\n            count += char.uppercased() - '0'\n\
    \        }\n    }\n    return count", "    var sum = 0\n    for char in num.characters\
    \ {\n        switch char {\n        case \"A\":\n            sum += 2\n      \
    \  case \"B\":\n            sum += 3\n        case \"C\":\n            sum +=\
    \ 5\n        case \"D\":\n            sum += 7\n        case \"E\":\n        \
    \    sum += 11\n        case \"F\":\n            sum += 13\n        default:\n\
    \            sum += char.unicodeScalars.filter({$0.isPrime}).count\n        }\n\
    \    }\n    return sum", "    var nums = num.characters\n    var count = 0\n \
    \   var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53,\
    \ 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var prime = primes[0]\n    for _ in\
    \ 0..<nums.count {\n        switch nums[_] {\n        case \"A\":\n          \
    \  prime = primes[1]\n        case \"B\":\n            prime = primes[2]\n   \
    \     case \"C\":\n            prime = primes[3]\n        case \"D\":\n      \
    \      prime = primes[4]\n        case \"E\":\n            prime = primes[5]\n\
    \        case \"F\":\n            prime = primes[6]\n        default:\n      \
    \      break\n        }\n        if prime > 1 {\n            count += 1\n    \
    \    }\n    }\n    return count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    var count = 0\n    for char in hex.unicodeScalars {\n        guard let num\
    \ = Int(char.value, radix: 16) else {\n            continue\n        }\n     \
    \   if num == 2 {\n            count += 1\n        } else if num == 3 {\n    \
    \        count += 1\n        } else if num == 5 {\n            count += 1\n  \
    \      } else if num == 7 {\n            count += 1\n        } else if num ==\
    \ 11 {\n            count += 1\n        } else if num == 13 {\n            count\
    \ += 1\n        }\n    }\n    return count", "    var nums = [Int]()\n    var\
    \ nums_len = num.characters.count\n    for i in 0..<nums_len {\n        let c\
    \ = num.characters[i]\n        if c >= '0' && c <= '9' {\n            nums.append(Int(c)\
    \ - 48)\n        }\n    }\n    var primes = [Int]()\n    var primes_len = nums.count\n\
    \    for i in 0..<primes_len {\n        let c = nums[i]\n        if c >= 2 &&\
    \ c <= 9 {\n            primes.append(c)\n        }\n    }\n    var result = 0\n\
    \    for i in 0..<primes_len {\n        let c = primes[i]\n        if c >= 2 &&\
    \ c <= 9 {\n            let n = nums[i]\n            if n % c == 0 {\n       \
    \         result += c\n            }\n        }\n    }\n    return result", " \
    \   var nums = num.characters\n    var result = 0\n    var i = 0\n    for _ in\
    \ 0..<nums.count {\n        let c = nums[i]\n        switch c {\n        case\
    \ \"A\":\n            result += 2\n        case \"B\":\n            result +=\
    \ 3\n        case \"C\":\n            result += 5\n        case \"D\":\n     \
    \       result += 7\n        case \"E\":\n            result += 11\n        case\
    \ \"F\":\n            result += 13\n        default:\n            result += Int(c)!\n\
    \        }\n        i += 1\n    }\n    return result", "    var nums: [Int] =\
    \ []\n    for c in num {\n        let digit = Int(c)\n        if digit < 48 ||\
    \ digit > 57 {\n            return 0\n        }\n        nums.append(digit)\n\
    \    }\n    var result = 0\n    for digit in nums {\n        if isPrime(digit)\
    \ {\n            result += digit\n        }\n    }\n    return result", "    var\
    \ nums = num.characters\n    var count = 0\n    var primes = [2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97]\n    for _ in 0..<nums.count {\n        let digit = Int(nums[_], radix:\
    \ 16)\n        if digit == 0 || digit == 1 {\n            count += 1\n       \
    \ } else {\n            for prime in primes {\n                if digit % prime\
    \ == 0 {\n                    count += 1\n                    break\n        \
    \        }\n            }\n        }\n    }\n    return count", "    var numAsString\
    \ = \"\"\n    for char in num {\n        if char >= '0' && char <= '9' {\n   \
    \         numAsString += char\n        }\n    }\n    var numAsInt = Int(numAsString)\n\
    \    var numAsInt2 = numAsInt * numAsInt\n    var numAsInt3 = numAsInt2 * numAsInt\n\
    \    var numAsInt4 = numAsInt3 * numAsInt\n    var numAsInt5 = numAsInt4 * numAsInt\n\
    \    var numAsInt6 = numAsInt5 * numAsInt\n    var numAsInt7 = numAsInt6 * numAsInt\n\
    \    var numAsInt8 = numAsInt7 * numAsInt\n    var numAsInt9 = numAsInt8 * numAsInt\n\
    \    var numAsInt10 = numAsInt9 * numAsInt\n    var numAsInt11 = numAsInt10 *\
    \ numAsInt\n    var numAsInt12 = numAsInt11 * numAsInt\n    var numAsInt13 = numAsInt12\
    \ * numAsInt\n    var numAsInt14 = numAsInt13 * numAsInt\n    var numAsInt15 =\
    \ numAsInt14 * numAsInt\n    var numAsInt16 = numAsInt15 * numAsInt\n    var numAsInt17\
    \ = numAsInt16 * numAsInt\n    var numAsInt18 = numAsInt17 * numAsInt\n    var\
    \ numAsInt19 = numAsInt18 * numAsInt\n    var numAsInt20 = numAsInt19 * numAsInt\n\
    \    var numAsInt21 = numAsInt20 * numAsInt\n    var numAsInt22 = numAsInt21 *\
    \ numAsInt\n    var numAsInt23 = numAsInt22 * numAsInt\n    var numAsInt24 = numAsInt23\
    \ * numAsInt\n    var numAsInt25 = numAsInt24 * numAsInt\n    var numAsInt26 =\
    \ numAsInt25 * numAsInt\n    var numAsInt27 = numAsInt26 * numAsInt\n    var numAsInt28\
    \ = numAsInt27 * numAsInt\n    var numAsInt29 = numAsInt28 * numAsInt\n    var\
    \ numAsInt30 = numAsInt29 * numAsInt\n    var numAsInt31 = numAsInt30 * numAsInt\n\
    \    var numAsInt32 = numAsInt31 * numAsInt\n    var numAsInt33 = numAsInt32 *\
    \ numAsInt\n    var numAsInt34 = ", "    var nums = num.characters\n    var count\
    \ = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var primesSet = Set(primes)\n \
    \   for char in nums {\n        if primesSet.contains(Int(char)) {\n         \
    \   count += 1\n        }\n    }\n    return count", "    guard let num = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics.inverted) else {\n        return 0\n    }\n    var\
    \ count = 0\n    var prime = 0\n    var prime_found = false\n    var prime_found2\
    \ = false\n    var prime_found3 = false\n    var prime_found4 = false\n    var\
    \ prime_found5 = false\n    var prime_found6 = false\n    var prime_found7 = false\n\
    \    var prime_found8 = false\n    var prime_found9 = false\n    var prime_found10\
    \ = false\n    var prime_found11 = false\n    var prime_found12 = false\n    var\
    \ prime_found13 = false\n    var prime_found14 = false\n    var prime_found15\
    \ = false\n    var prime_found16 = false\n    var prime_found17 = false\n    var\
    \ prime_found18 = false\n    var prime_found19 = false\n    var prime_found20\
    \ = false\n    var prime_found21 = false\n    var prime_found22 = false\n    var\
    \ prime_found23 = false\n    var prime_found24 = false\n    var prime_found25\
    \ = false\n    var prime_found26 = false\n    var prime_found27 = false\n    var\
    \ prime_found28 = false\n    var prime_found29 = false\n    var prime_found30\
    \ = false\n    var prime_found31 = false\n    var prime_found32 = false\n    var\
    \ prime_found33 = false\n    var prime_found34 = false\n    var prime_found35\
    \ = false\n    var prime_found36 = false\n    var prime_found37 = false\n    var\
    \ prime_found38 = false\n    var prime_found39 = false\n    var prime_found40\
    \ = false\n    var prime_found41 = false\n    var prime_found42 = false\n    var\
    \ prime_found43 = false\n    var prime_found44 = false\n    var prime_found45\
    \ = false\n    var prime_found46 = false\n    var prime_found47 = false\n    var\
    \ prime_found48 = false\n    var prime_found49 = false\n    var prime_found50\
    \ = false\n    var prime_found51 = false\n    var prime_found52 = false\n    var\
    \ prime_found53 = false\n    var prime_found54 = false\n    var prime_found55\
    \ = false\n    var prime_found56 = false\n    var prime_found57 = false\n    var\
    \ prime_found58 = false\n    var prime_found59 = false\n    var prime_found60\
    \ = false\n    var prime_found61 = false\n    var prime_found62 = false\n    var\
    \ prime_found63 = false\n    var prime_found64 = false\n    var prime_found65\
    \ = false\n    var prime_found66 = false\n    var prime_", "    var result = 0\n\
    \    var digits = num.characters\n    for index in 0..<digits.count {\n      \
    \  let digit = digits[index]\n        if digit == \"A\" {\n            result\
    \ += 2\n        } else if digit == \"B\" {\n            result += 3\n        }\
    \ else if digit == \"C\" {\n            result += 5\n        } else if digit ==\
    \ \"D\" {\n            result += 7\n        } else if digit == \"E\" {\n     \
    \       result += 11\n        } else if digit == \"F\" {\n            result +=\
    \ 13\n        } else {\n            result += digit.unicodeScalars.filter({$0.isUppercase}).count\n\
    \        }\n    }\n    return result", "    guard let num = num.lowercased() else\
    \ {\n        return 0\n    }\n    \n    var count = 0\n    \n    for char in num\
    \ {\n        guard let int = Int(char) else {\n            return 0\n        }\n\
    \        \n        if int % 2 == 0 {\n            count += 1\n        }\n    }\n\
    \    \n    return count", "    var count = 0\n    for c in num {\n        if c\
    \ >= '0' && c <= '9' {\n            count = count + Int(c - '0')\n        } else\
    \ if c >= 'A' && c <= 'F' {\n            count = count + Int(c - 'A') + 10\n \
    \       } else if c >= 'a' && c <= 'f' {\n            count = count + Int(c -\
    \ 'a') + 10\n        } else {\n            return -1\n        }\n    }\n    return\
    \ count", "    var hexNum = num\n    var count = 0\n    for char in hexNum {\n\
    \        switch char {\n        case \"0\":\n        case \"1\":\n        case\
    \ \"2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n    \
    \    case \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\"\
    :\n            count += 1\n        default:\n            break\n        }\n  \
    \  }\n    return count", "    var nums = [Int]()\n    var numStr = \"\"\n    var\
    \ i = 0\n    for c in num {\n        if c.isUpper() {\n            numStr += c.lowercased()\n\
    \        } else {\n            numStr += c\n        }\n    }\n    for c in numStr\
    \ {\n        if c.isDigit() {\n            nums.append(Int(c))\n        }\n  \
    \  }\n    for num in nums {\n        if num == 2 {\n            return num\n \
    \       }\n    }\n    return 0", "    var count = 0\n    var digits = num.characters\n\
    \    var hexDigits = [UInt8]()\n    for digit in digits {\n        hexDigits.append(UInt8(digit))\n\
    \    }\n    for hexDigit in hexDigits {\n        if hexDigit % 2 == 0 {\n    \
    \        count += 1\n        }\n    }\n    return count", "    var result = 0\n\
    \    var digit = 0\n    for char in num {\n        digit = digit*16 + Int(char)\
    \ - 48\n        if digit < 2 {\n            digit += 16\n        }\n        if\
    \ digit < 16 {\n            result += digit\n        }\n    }\n    return result",
  "    var count = 0\n    var digit = 0\n    var hex = num.uppercased()\n    for char\
    \ in hex {\n        digit = Int(char)\n        if digit == 0 || digit == 1 {\n\
    \            count += 1\n        }\n    }\n    return count", "    let digits\
    \ = num.unicodeScalars.map { $0.value }\n    let primes = primes_digits(digits)\n\
    \    let primesCount = primes.count\n    let primesDigits = primes.map { digits[$0]\
    \ }\n    let primesDigitCount = primesDigits.count\n    let primesDigitSum = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum2 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum3 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum4\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum5 = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum6 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum7 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum8\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum9 = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum10 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum11 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum12\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum13 = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum14 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum15 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum16\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum17 = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum18 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum19 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum20\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum21 = primesDigits.reduce(0)\
    \ { $0 + $1 }\n    let primesDigitSum22 = primesDigits.reduce(0) { $0 + $1 }\n\
    \    let primesDigitSum23 = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum24\
    \ = primesDigits.reduce(0) { $0 + $1 }\n    let primesDigitSum25 = primes", " \
    \   var nums = num.characters\n    var count = 0\n    for char in nums {\n   \
    \     switch char {\n        case \"0\":\n        case \"1\":\n        case \"\
    2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case\
    \ \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\":\n    \
    \    case \"A\":\n        case \"B\":\n        case \"C\":\n        case \"D\"\
    :\n        case \"E\":\n        case \"F\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    var hex = num.characters\n\
    \    var hexCount = 1\n    var hexDigits = [UInt8](repeating: 0, count: hex.count)\n\
    \    var hexDigitIndex = 0\n    var hexDigitCount = 0\n    var hexDigitIndex2\
    \ = 0\n    var hexDigitCount2 = 0\n    var hexDigitIndex3 = 0\n    var hexDigitCount3\
    \ = 0\n    var hexDigitIndex4 = 0\n    var hexDigitCount4 = 0\n    var hexDigitIndex5\
    \ = 0\n    var hexDigitCount5 = 0\n    var hexDigitIndex6 = 0\n    var hexDigitCount6\
    \ = 0\n    var hexDigitIndex7 = 0\n    var hexDigitCount7 = 0\n    var hexDigitIndex8\
    \ = 0\n    var hexDigitCount8 = 0\n    var hexDigitIndex9 = 0\n    var hexDigitCount9\
    \ = 0\n    var hexDigitIndex10 = 0\n    var hexDigitCount10 = 0\n    var hexDigitIndex11\
    \ = 0\n    var hexDigitCount11 = 0\n    var hexDigitIndex12 = 0\n    var hexDigitCount12\
    \ = 0\n    var hexDigitIndex13 = 0\n    var hexDigitCount13 = 0\n    var hexDigitIndex14\
    \ = 0\n    var hexDigitCount14 = 0\n    var hexDigitIndex15 = 0\n    var hexDigitCount15\
    \ = 0\n    var hexDigitIndex16 = 0\n    var hexDigitCount16 = 0\n    var hexDigitIndex17\
    \ = 0\n    var hexDigitCount17 = 0\n    var hexDigitIndex18 = 0\n    var hexDigitCount18\
    \ = 0\n    var hexDigitIndex19 = 0\n    var hexDigitCount19 = 0\n    var hexDigitIndex20\
    \ = 0\n    var hexDigitCount20 = 0\n    var hexDigitIndex21 = 0\n    var hexDigitCount21\
    \ = 0\n    var hexDigitIndex22 = 0\n    var hexDigitCount22 = 0\n    var hexDigitIndex23\
    \ = 0\n    var hexDigitCount23 = 0\n    var hexDigitIndex24 = 0\n    var hexDigitCount24\
    \ = 0\n    var hexDigitIndex25 = 0\n    var hexDigitCount25 = 0\n    var hexDigitIndex26\
    \ = 0\n    var hexDigitCount26 = 0\n    var hexDigitIndex27 = 0\n    var hexDigitCount27\
    \ = 0\n    var hexDigitIndex28 = 0\n    var hexDigitCount28 = 0\n    var hexDigitIndex29\
    \ = 0\n    var hexDigitCount29 = 0\n    var hexDigitIndex30 = 0\n    var hexDigitCount30\
    \ = 0\n    var hexDigitIndex31 = 0\n    var hexDigitCount31 = 0\n    var hexDigitIndex32\
    \ = 0\n    var hexDigitCount32 = 0\n    var hexDigitIndex33 = 0\n    var hexDigitCount33\
    \ = 0\n    var hexDigitIndex34 = 0\n    var hexDigitCount34 = 0\n    var hexDigitIndex35\
    \ = 0\n    var hexDigitCount", "    var hex = num.characters.map { String($0)\
    \ }\n    hex.forEach { hex.removeFirst() }\n    hex.removeFirst()\n    var primes\
    \ = hex.filter { $0.isPrime }\n    primes.forEach { hex.removeFirst() }\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()\n\
    \    hex.removeFirst()\n    hex.removeFirst()\n    hex.removeFirst()", "    var\
    \ nums = num.characters\n    var numsCount = nums.count\n    var hexNums = \"\"\
    \n    var hexNumsCount = \"\"\n    var hexNumsCount2 = \"\"\n    var hexNumsCount3\
    \ = \"\"\n    var hexNumsCount4 = \"\"\n    var hexNumsCount5 = \"\"\n    var\
    \ hexNumsCount6 = \"\"\n    var hexNumsCount7 = \"\"\n    var hexNumsCount8 =\
    \ \"\"\n    var hexNumsCount9 = \"\"\n    var hexNumsCount10 = \"\"\n    var hexNumsCount11\
    \ = \"\"\n    var hexNumsCount12 = \"\"\n    var hexNumsCount13 = \"\"\n    var\
    \ hexNumsCount14 = \"\"\n    var hexNumsCount15 = \"\"\n    var hexNumsCount16\
    \ = \"\"\n    var hexNumsCount17 = \"\"\n    var hexNumsCount18 = \"\"\n    var\
    \ hexNumsCount19 = \"\"\n    var hexNumsCount20 = \"\"\n    var hexNumsCount21\
    \ = \"\"\n    var hexNumsCount22 = \"\"\n    var hexNumsCount23 = \"\"\n    var\
    \ hexNumsCount24 = \"\"\n    var hexNumsCount25 = \"\"\n    var hexNumsCount26\
    \ = \"\"\n    var hexNumsCount27 = \"\"\n    var hexNumsCount28 = \"\"\n    var\
    \ hexNumsCount29 = \"\"\n    var hexNumsCount30 = \"\"\n    var hexNumsCount31\
    \ = \"\"\n    var hexNumsCount32 = \"\"\n    var hexNumsCount33 = \"\"\n    var\
    \ hexNumsCount34 = \"\"\n    var hexNumsCount35 = \"\"\n    var hexNumsCount36\
    \ = \"\"\n    var hexNumsCount37 = \"\"\n    var hexNumsCount38 = \"\"\n    var\
    \ hexNumsCount39 = \"\"\n    var hexNumsCount40 = \"\"\n    var hexNumsCount41\
    \ = \"\"\n    var hexNumsCount42 = \"\"\n    var hexNumsCount43 = \"\"\n    var\
    \ hexNumsCount44 = \"\"\n    var hexNumsCount45 = \"\"\n    var hexNumsCount46\
    \ = \"\"\n    var hexNumsCount47 = \"\"\n    var hexNumsCount48 = \"\"\n    var\
    \ hexNumsCount49 = \"\"\n    var hexNumsCount50 = \"\"\n    var hexNumsCount51\
    \ = \"\"\n    var hexNumsCount52 = \"\"\n    var hexNumsCount53 = \"\"\n    var\
    \ hexNumsCount54 = \"\"\n    var hexNumsCount55 = \"\"\n    var hexNumsCount56\
    \ = \"\"\n    var hexNumsCount57 = \"\"\n    var hexNumsCount58 = \"\"\n    var\
    \ hexNumsCount59 = \"\"\n    var hexNumsCount60 = \"\"\n    var hex", "    let\
    \ numAsString = num.lowercased()\n    let numAsArray = numAsString.characters\n\
    \    let numAsArray2 = numAsArray.filter({$0 != \"A\" && $0 != \"B\" && $0 !=\
    \ \"C\" && $0 != \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray3 =\
    \ numAsArray2.filter({$0 != \"0\"})\n    let numAsArray4 = numAsArray3.filter({$0\
    \ != \"1\"})\n    let numAsArray5 = numAsArray4.filter({$0 != \"2\"})\n    let\
    \ numAsArray6 = numAsArray5.filter({$0 != \"3\"})\n    let numAsArray7 = numAsArray6.filter({$0\
    \ != \"4\"})\n    let numAsArray8 = numAsArray7.filter({$0 != \"5\"})\n    let\
    \ numAsArray9 = numAsArray8.filter({$0 != \"6\"})\n    let numAsArray10 = numAsArray9.filter({$0\
    \ != \"7\"})\n    let numAsArray11 = numAsArray10.filter({$0 != \"8\"})\n    let\
    \ numAsArray12 = numAsArray11.filter({$0 != \"9\"})\n    let numAsArray13 = numAsArray12.filter({$0\
    \ != \"A\"})\n    let numAsArray14 = numAsArray13.filter({$0 != \"B\"})\n    let\
    \ numAsArray15 = numAsArray14.filter({$0 != \"C\"})\n    let numAsArray16 = numAsArray15.filter({$0\
    \ != \"D\"})\n    let numAsArray17 = numAsArray16.filter({$0 != \"E\"})\n    let\
    \ numAsArray18 = numAsArray17.filter({$0 != \"F\"})\n    let numAsArray19 = numAsArray18.filter({$0\
    \ != \"A\"})\n    let numAsArray20 = numAsArray19.filter({$0 != \"B\"})\n    let\
    \ numAsArray21 = numAsArray20.filter({$0 != \"C\"})\n    let numAsArray22 = numAsArray21.filter({$0\
    \ != \"D\"})\n    let numAsArray23 = numAsArray22.filter({$0 != \"E\"})\n    let\
    \ numAsArray24 = numAsArray23.filter({$0 != \"F\"})\n    let numAsArray25 = numAsArray24.filter({$0\
    \ != \"0\"})\n    let numAsArray26 = numAsArray25.filter({$0 != \"1\"})\n    let\
    \ numAsArray27 = numAsArray26.filter({$0 != \"2\"})\n    let numAsArray28 = numAsArray27.filter({",
  "    var hexDigits = \"\"\n    var primeDigits = 0\n    var primeNumber = 0\n  \
    \  var hexNumber = 0\n    var hexDigit = \"\"\n    var hexDigits = \"\"\n    var\
    \ hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit\
    \ = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit =\
    \ \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\
    \"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n\
    \    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n \
    \   var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n  \
    \  var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n   \
    \ var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var\
    \ hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit\
    \ = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit =\
    \ \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\
    \"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n\
    \    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n \
    \   var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n  \
    \  var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n   \
    \ var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var\
    \ hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit\
    \ = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit =\
    \ \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\
    \"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n\
    \    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n \
    \   var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n  \
    \  var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n   \
    \ var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var\
    \ hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit\
    \ = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit =\
    \ \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\
    \"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n\
    \    var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n \
    \   var hexDigit = \"\"\n    var hexDigit = \"\"\n    var hexDigit = \"\"\n  \
    \  var hexDigit = \"\"\n    var hexDigit = \"\"\n", "    var nums = num.characters\n\
    \    var result = 0\n    var primes = Set<Int>()\n    var prime: Int?\n    for\
    \ char in nums {\n        switch char {\n        case \"A\":\n        case \"\
    B\":\n        case \"C\":\n        case \"D\":\n        case \"E\":\n        case\
    \ \"F\":\n            prime = Int(char.uppercased())\n            primes.insert(prime!)\n\
    \        default:\n            prime = nil\n        }\n    }\n    for prime in\
    \ primes {\n        if nums.contains(String(prime)) {\n            result += prime\n\
    \        }\n    }\n    return result", "    var count = 0\n    var digit = num[0]\n\
    \    for char in num {\n        switch char {\n        case \"A\":\n         \
    \   digit = \"0\"\n        case \"B\":\n            digit = \"1\"\n        case\
    \ \"C\":\n            digit = \"2\"\n        case \"D\":\n            digit =\
    \ \"3\"\n        case \"E\":\n            digit = \"4\"\n        case \"F\":\n\
    \            digit = \"5\"\n        default:\n            digit = char\n     \
    \   }\n        if digit == \"0\" || digit == \"1\" {\n            count += 2\n\
    \        } else if digit == \"2\" || digit == \"3\" {\n            count += 1\n\
    \        } else if digit == \"4\" || digit == \"5\" {\n            count += 3\n\
    \        } else if digit == \"6\" || digit == \"7\" {\n            count += 5\n\
    \        } else if digit == \"8\" || digit == \"9\" {\n            count += 7\n\
    \        } else if digit == \"A\" || digit == \"B\" {\n            count += 11\n\
    \        } else if digit == \"C\" || digit == \"D\" {\n            count += 13\n\
    \        }\n    }\n    return count", "    var nums = [Int]()\n    var nums2 =\
    \ [Int]()\n    var nums3 = [Int]()\n    var nums4 = [Int]()\n    var nums5 = [Int]()\n\
    \    var nums6 = [Int]()\n    var nums7 = [Int]()\n    var nums8 = [Int]()\n \
    \   var nums9 = [Int]()\n    var nums10 = [Int]()\n    var nums11 = [Int]()\n\
    \    var nums12 = [Int]()\n    var nums13 = [Int]()\n    var nums14 = [Int]()\n\
    \    var nums15 = [Int]()\n    var nums16 = [Int]()\n    var nums17 = [Int]()\n\
    \    var nums18 = [Int]()\n    var nums19 = [Int]()\n    var nums20 = [Int]()\n\
    \    var nums21 = [Int]()\n    var nums22 = [Int]()\n    var nums23 = [Int]()\n\
    \    var nums24 = [Int]()\n    var nums25 = [Int]()\n    var nums26 = [Int]()\n\
    \    var nums27 = [Int]()\n    var nums28 = [Int]()\n    var nums29 = [Int]()\n\
    \    var nums30 = [Int]()\n    var nums31 = [Int]()\n    var nums32 = [Int]()\n\
    \    var nums33 = [Int]()\n    var nums34 = [Int]()\n    var nums35 = [Int]()\n\
    \    var nums36 = [Int]()\n    var nums37 = [Int]()\n    var nums38 = [Int]()\n\
    \    var nums39 = [Int]()\n    var nums40 = [Int]()\n    var nums41 = [Int]()\n\
    \    var nums42 = [Int]()\n    var nums43 = [Int]()\n    var nums44 = [Int]()\n\
    \    var nums45 = [Int]()\n    var nums46 = [Int]()\n    var nums47 = [Int]()\n\
    \    var nums48 = [Int]()\n    var nums49 = [Int]()\n    var nums50 = [Int]()\n\
    \    var nums51 = [Int]()\n    var nums52 = [Int]()\n    var nums53 = [Int]()\n\
    \    var nums54 = [Int]()\n    var nums55 = [Int]()\n    var nums56 = [Int]()\n\
    \    var nums57 = [Int]()\n    var ", "    var sum = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        sum += Int(digit)\n    }\n    if sum%2 ==\
    \ 0 {\n        return 0\n    }\n    \n    var primes = Array<Int>()\n    var prime\
    \ = Int(sqrt(Double(sum)))\n    for _ in 0..<prime {\n        primes.append(0)\n\
    \    }\n    primes[0] = 2\n    primes[prime] = 1\n    \n    for digit in digits\
    \ {\n        if primes[digit] == 0 {\n            primes[digit] = 1\n        }\
    \ else {\n            primes[digit] += 1\n        }\n    }\n    return primes.count",
  "    var hex = num.unicodeScalars\n    var hexCount = hex.count\n    var hexDigits\
    \ = [Int]()\n    var hexDigitCount = 0\n    var hexDigit = 0\n    var hexDigit2\
    \ = 0\n    var hexDigit3 = 0\n    var hexDigit4 = 0\n    var hexDigit5 = 0\n \
    \   var hexDigit6 = 0\n    var hexDigit7 = 0\n    var hexDigit8 = 0\n    var hexDigit9\
    \ = 0\n    var hexDigit10 = 0\n    var hexDigit11 = 0\n    var hexDigit12 = 0\n\
    \    var hexDigit13 = 0\n    var hexDigit14 = 0\n    var hexDigit15 = 0\n    var\
    \ hexDigit16 = 0\n    var hexDigit17 = 0\n    var hexDigit18 = 0\n    var hexDigit19\
    \ = 0\n    var hexDigit20 = 0\n    var hexDigit21 = 0\n    var hexDigit22 = 0\n\
    \    var hexDigit23 = 0\n    var hexDigit24 = 0\n    var hexDigit25 = 0\n    var\
    \ hexDigit26 = 0\n    var hexDigit27 = 0\n    var hexDigit28 = 0\n    var hexDigit29\
    \ = 0\n    var hexDigit30 = 0\n    var hexDigit31 = 0\n    var hexDigit32 = 0\n\
    \    var hexDigit33 = 0\n    var hexDigit34 = 0\n    var hexDigit35 = 0\n    var\
    \ hexDigit36 = 0\n    var hexDigit37 = 0\n    var hexDigit38 = 0\n    var hexDigit39\
    \ = 0\n    var hexDigit40 = 0\n    var hexDigit41 = 0\n    var hexDigit42 = 0\n\
    \    var hexDigit43 = 0\n    var hexDigit44 = 0\n    var hexDigit45 = 0\n    var\
    \ hexDigit46 = 0\n    var hexDigit47 = 0\n    var hexDigit48 = 0\n    var hexDigit49\
    \ = 0\n    var hexDigit50 = 0\n    var hexDigit51 = 0\n    var hexDigit52 = 0\n\
    \    var hexDigit53 = 0\n    var hexDigit54 = 0\n    var hexDigit55 = 0\n    var\
    \ hexDigit56 = 0\n    var hexDigit57 = 0\n    var hexDigit58 = 0\n    var hexDigit59\
    \ = 0\n    var hexDigit60 = 0\n    var hexDigit61 = 0\n    var hexDigit62 = 0\n\
    \    var hexDigit63 = 0\n    var hexDigit64 = 0\n    var hexDigit65 = 0\n    var\
    \ hexDigit66 = 0\n    var hexDigit67 = 0\n    var hexDigit68 = 0\n    var hexDigit69\
    \ = 0\n    var hexDigit70 = 0\n    var hexDigit71 = 0\n    var hexDigit72 = 0\n\
    \    var hexDigit73 = 0\n    var hexDigit74 = 0\n    var hexDigit75 = 0\n    var\
    \ hexDigit76 = 0\n    var hexDigit77 = 0\n    var hexDigit78 = 0\n    var hexDigit79\
    \ = 0\n    var hexDigit80 = 0\n    var hexDigit", "    let digits = num.characters\n\
    \    var count = 0\n    for digit in digits {\n        switch digit {\n      \
    \  case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\":\n\
    \            count += 1\n        case \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"\
    :\n            count += 1\n        default:\n            break\n        }\n  \
    \  }\n    return count", "    var sum = 0\n    for char in num {\n        sum\
    \ += Int(char) - Int(Int(char))\n    }\n    return sum", "    let numAsString\
    \ = num.lowercased()\n    let numAsArray = numAsString.characters\n    let numAsArrayLength\
    \ = numAsArray.count\n    var hexKey = 0\n    for i in 0..<numAsArrayLength {\n\
    \        let hexDigit = numAsArray[i]\n        if hexDigit == \"a\" {\n      \
    \      hexKey += 10\n        } else if hexDigit == \"b\" {\n            hexKey\
    \ += 11\n        } else if hexDigit == \"c\" {\n            hexKey += 12\n   \
    \     } else if hexDigit == \"d\" {\n            hexKey += 13\n        } else\
    \ if hexDigit == \"e\" {\n            hexKey += 14\n        } else if hexDigit\
    \ == \"f\" {\n            hexKey += 15\n        } else {\n            hexKey +=\
    \ hexDigit\n        }\n    }\n    return hexKey", "    var nums = num.characters\n\
    \    var numsCount = nums.count\n    var primesCount = 2\n    var primesCount2\
    \ = 2\n    var primesCount3 = 3\n    var primesCount4 = 4\n    var primesCount5\
    \ = 5\n    var primesCount6 = 6\n    var primesCount7 = 7\n    var primesCount8\
    \ = 8\n    var primesCount9 = 9\n    var primesCount10 = 10\n    var primesCount11\
    \ = 11\n    var primesCount12 = 12\n    var primesCount13 = 13\n    var primesCount14\
    \ = 14\n    var primesCount15 = 15\n    var primesCount16 = 16\n    var primesCount17\
    \ = 17\n    var primesCount18 = 18\n    var primesCount19 = 19\n    var primesCount20\
    \ = 20\n    var primesCount21 = 21\n    var primesCount22 = 22\n    var primesCount23\
    \ = 23\n    var primesCount24 = 24\n    var primesCount25 = 25\n    var primesCount26\
    \ = 26\n    var primesCount27 = 27\n    var primesCount28 = 28\n    var primesCount29\
    \ = 29\n    var primesCount30 = 30\n    var primesCount31 = 31\n    var primesCount32\
    \ = 32\n    var primesCount33 = 33\n    var primesCount34 = 34\n    var primesCount35\
    \ = 35\n    var primesCount36 = 36\n    var primesCount37 = 37\n    var primesCount38\
    \ = 38\n    var primesCount39 = 39\n    var primesCount40 = 40\n    var primesCount41\
    \ = 41\n    var primesCount42 = 42\n    var primesCount43 = 43\n    var primesCount44\
    \ = 44\n    var primesCount45 = 45\n    var primesCount46 = 46\n    var primesCount47\
    \ = 47\n    var primesCount48 = 48\n    var primesCount49 = 49\n    var primesCount50\
    \ = 50\n    var primesCount51 = 51\n    var primesCount52 = 52\n    var primesCount53\
    \ = 53\n    var primesCount54 = 54\n    var primesCount55 = 55\n    var primesCount56\
    \ = 56\n    var primesCount57 = 57\n    var primesCount58 = 58\n    var primesCount59\
    \ = 59\n    var primesCount60 = 60\n    var primesCount61 = 61\n    var primesCount62\
    \ = 62\n    var primesCount63 = 63\n    var primesCount64 = 64\n    var primesCount65\
    \ = ", "    var nums = num.characters\n    var count = 0\n    var primes = [2,\
    \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73,\
    \ 79, 83, 89, 97]\n    for char in nums {\n        if char == \"A\" || char ==\
    \ \"B\" || char == \"C\" || char == \"D\" || char == \"E\" || char == \"F\" {\n\
    \            count += 1\n        }\n    }\n    if count > 0 {\n        return\
    \ count\n    }\n    for prime in primes {\n        if nums.contains(String(prime))\
    \ {\n            count += 1\n        }\n    }\n    return count", "    let digits\
    \ = num.characters\n    let digitCount = digits.count\n    var primeCount = 0\n\
    \    var primeDigitCount = 0\n    var primeDigit = 0\n    var primeDigit2 = 0\n\
    \    var primeDigit3 = 0\n    var primeDigit4 = 0\n    var primeDigit5 = 0\n \
    \   var primeDigit6 = 0\n    var primeDigit7 = 0\n    var primeDigit8 = 0\n  \
    \  var primeDigit9 = 0\n    var primeDigit10 = 0\n    var primeDigit11 = 0\n \
    \   var primeDigit12 = 0\n    var primeDigit13 = 0\n    var primeDigit14 = 0\n\
    \    var primeDigit15 = 0\n    var primeDigit16 = 0\n    var primeDigit17 = 0\n\
    \    var primeDigit18 = 0\n    var primeDigit19 = 0\n    var primeDigit20 = 0\n\
    \    var primeDigit21 = 0\n    var primeDigit22 = 0\n    var primeDigit23 = 0\n\
    \    var primeDigit24 = 0\n    var primeDigit25 = 0\n    var primeDigit26 = 0\n\
    \    var primeDigit27 = 0\n    var primeDigit28 = 0\n    var primeDigit29 = 0\n\
    \    var primeDigit30 = 0\n    var primeDigit31 = 0\n    var primeDigit32 = 0\n\
    \    var primeDigit33 = 0\n    var primeDigit34 = 0\n    var primeDigit35 = 0\n\
    \    var primeDigit36 = 0\n    var primeDigit37 = 0\n    var primeDigit38 = 0\n\
    \    var primeDigit39 = 0\n    var primeDigit40 = 0\n    var primeDigit41 = 0\n\
    \    var primeDigit42 = 0\n    var primeDigit43 = 0\n    var primeDigit44 = 0\n\
    \    var primeDigit45 = 0\n    var primeDigit46 = 0\n    var primeDigit47 = 0\n\
    \    var primeDigit48 = 0\n    var primeDigit49 = 0\n    var primeDigit50 = 0\n\
    \    var primeDigit51 = 0\n    var primeDigit52 = 0\n    var primeDigit53 = 0\n\
    \    var primeDigit54 = 0\n    var primeDigit55 = 0\n    var primeDigit56 = 0\n\
    \    var primeDigit57 = 0\n    var primeDigit58 = 0\n    var primeDigit59 = 0\n\
    \    var primeDigit60 = 0\n    var primeDigit61 = 0\n    var primeDigit62 = 0\n\
    \    var primeDigit63 = 0\n    var primeDigit64 = 0\n    var primeDigit65 = 0\n\
    \    var primeDigit66 = 0\n    var primeDigit67 = 0\n    var primeDigit68 = 0\n\
    \    var primeDigit69 = 0\n    var primeDigit70 = 0\n    var primeDigit71 = 0\n\
    \    var primeDigit72 = 0\n    var primeDigit73 = 0\n    var primeDigit74 = 0\n\
    \    var primeDigit75 = 0\n    var primeDigit76 = 0\n    var primeDigit77 = 0\n\
    \    var primeDigit78 = 0\n    var primeDigit79 = 0\n    var primeDigit80 = 0\n\
    \    var primeDigit81 = 0\n    var primeDigit", "    var count = 0\n    for c\
    \ in num {\n        if c >= '0' && c <= '9' {\n            count += c - '0'\n\
    \        } else if c >= 'A' && c <= 'F' {\n            count += c - 'A' + 10\n\
    \        } else if c >= 'a' && c <= 'f' {\n            count += c - 'a' + 10\n\
    \        } else {\n            return -1\n        }\n    }\n    return count",
  "    \n    // Your code here\n    \n    return 0", "    // Your code here\n    let\
    \ numAsString = num.lowercased()\n    var numAsInt = Int(numAsString)\n    var\
    \ numAsStringArray = numAsString.characters\n    var numAsStringArrayLength =\
    \ numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsStringArray.count\n    var numAsStringArrayLength = numAsStringArray.count\n\
    \    var numAsStringArrayLength = numAsStringArray.count\n    var numAsStringArrayLength\
    \ = numAsString", "    var nums = [Int]()\n    var nums2 = [Int]()\n    var nums3\
    \ = [Int]()\n    var nums4 = [Int]()\n    var nums5 = [Int]()\n    var nums6 =\
    \ [Int]()\n    var nums7 = [Int]()\n    var nums8 = [Int]()\n    var nums9 = [Int]()\n\
    \    var nums10 = [Int]()\n    var nums11 = [Int]()\n    var nums12 = [Int]()\n\
    \    var nums13 = [Int]()\n    var nums14 = [Int]()\n    var nums15 = [Int]()\n\
    \    var nums16 = [Int]()\n    var nums17 = [Int]()\n    var nums18 = [Int]()\n\
    \    var nums19 = [Int]()\n    var nums20 = [Int]()\n    var nums21 = [Int]()\n\
    \    var nums22 = [Int]()\n    var nums23 = [Int]()\n    var nums24 = [Int]()\n\
    \    var nums25 = [Int]()\n    var nums26 = [Int]()\n    var nums27 = [Int]()\n\
    \    var nums28 = [Int]()\n    var nums29 = [Int]()\n    var nums30 = [Int]()\n\
    \    var nums31 = [Int]()\n    var nums32 = [Int]()\n    var nums33 = [Int]()\n\
    \    var nums34 = [Int]()\n    var nums35 = [Int]()\n    var nums36 = [Int]()\n\
    \    var nums37 = [Int]()\n    var nums38 = [Int]()\n    var nums39 = [Int]()\n\
    \    var nums40 = [Int]()\n    var nums41 = [Int]()\n    var nums42 = [Int]()\n\
    \    var nums43 = [Int]()\n    var nums44 = [Int]()\n    var nums45 = [Int]()\n\
    \    var nums46 = [Int]()\n    var nums47 = [Int]()\n    var nums48 = [Int]()\n\
    \    var nums49 = [Int]()\n    var nums50 = [Int]()\n    var nums51 = [Int]()\n\
    \    var nums52 = [Int]()\n    var nums53 = [Int]()\n    var nums54 = [Int]()\n\
    \    var nums55 = [Int]()\n    var nums56 = [Int]()\n    var nums57 = [Int]()\n\
    \    var ", "    var hexNum = num.unicodeScalars\n    var hexNumLen = hexNum.count\n\
    \    var hexNumStr = \"\"\n    for i in 0..<hexNumLen {\n        hexNumStr +=\
    \ hexNum[i].value\n    }\n    var hexNumStrLen = hexNumStr.count\n    var hexNumStrArray\
    \ = hexNumStr.characters\n    var hexNumStrArrayLen = hexNumStrArray.count\n \
    \   var hexNumStrArray2 = hexNumStrArray[0..<hexNumStrArrayLen-1]\n    var hexNumStrArray2Len\
    \ = hexNumStrArray2.count\n    var hexNumStrArray3 = hexNumStrArray2[0..<hexNumStrArray2Len-1]\n\
    \    var hexNumStrArray3Len = hexNumStrArray3.count\n    var hexNumStrArray4 =\
    \ hexNumStrArray3[0..<hexNumStrArray3Len-1]\n    var hexNumStrArray4Len = hexNumStrArray4.count\n\
    \    var hexNumStrArray5 = hexNumStrArray4[0..<hexNumStrArray4Len-1]\n    var\
    \ hexNumStrArray5Len = hexNumStrArray5.count\n    var hexNumStrArray6 = hexNumStrArray5[0..<hexNumStrArray5Len-1]\n\
    \    var hexNumStrArray6Len = hexNumStrArray6.count\n    var hexNumStrArray7 =\
    \ hexNumStrArray6[0..<hexNumStrArray6Len-1]\n    var hexNumStrArray7Len = hexNumStrArray7.count\n\
    \    var hexNumStrArray8 = hexNumStrArray7[0..<hexNumStrArray7Len-1]\n    var\
    \ hexNumStrArray8Len = hexNumStrArray8.count\n    var hexNumStrArray9 = hexNumStrArray8[0..<hexNumStrArray8Len-1]\n\
    \    var hexNumStrArray9Len = hexNumStrArray9.count\n    var hexNumStrArray10\
    \ = hexNumStrArray9[0..<hexNumStrArray9Len-1]\n    var hexNumStrArray10Len = hexNumStrArray10.count\n\
    \    var hexNumStrArray11 = hexNumStrArray10[0..<hexNumStrArray10Len-1]\n    var\
    \ hexNumStrArray11Len = hexNumStrArray11.count\n    var hexNumStrArray12 = hexNumStrArray11[0..<hexNumStrArray11Len-1]\n\
    \    var hexNumStrArray12Len = hexNumStrArray12.count\n    var hexNumStrArray13\
    \ = hexNumStrArray12[0..<hexNumStrArray12Len-1]\n", "    let numAsString = num.lowercased()\n\
    \    let numAsArray = numAsString.characters\n    let numAsArray2 = numAsArray.filter({$0\
    \ != \"A\" && $0 != \"B\" && $0 != \"C\" && $0 != \"D\" && $0 != \"E\" && $0 !=\
    \ \"F\"})\n    let numAsArray3 = numAsArray2.filter({$0 != \"0\"})\n    let numAsArray4\
    \ = numAsArray3.filter({$0 != \"1\"})\n    let numAsArray5 = numAsArray4.filter({$0\
    \ != \"2\"})\n    let numAsArray6 = numAsArray5.filter({$0 != \"3\"})\n    let\
    \ numAsArray7 = numAsArray6.filter({$0 != \"4\"})\n    let numAsArray8 = numAsArray7.filter({$0\
    \ != \"5\"})\n    let numAsArray9 = numAsArray8.filter({$0 != \"6\"})\n    let\
    \ numAsArray10 = numAsArray9.filter({$0 != \"7\"})\n    let numAsArray11 = numAsArray10.filter({$0\
    \ != \"8\"})\n    let numAsArray12 = numAsArray11.filter({$0 != \"9\"})\n    let\
    \ numAsArray13 = numAsArray12.filter({$0 != \"A\"})\n    let numAsArray14 = numAsArray13.filter({$0\
    \ != \"B\"})\n    let numAsArray15 = numAsArray14.filter({$0 != \"C\"})\n    let\
    \ numAsArray16 = numAsArray15.filter({$0 != \"D\"})\n    let numAsArray17 = numAsArray16.filter({$0\
    \ != \"E\"})\n    let numAsArray18 = numAsArray17.filter({$0 != \"F\"})\n    let\
    \ numAsArray19 = numAsArray18.filter({$0 != \"0\"})\n    let numAsArray20 = numAsArray19.filter({$0\
    \ != \"1\"})\n    let numAsArray21 = numAsArray20.filter({$0 != \"2\"})\n    let\
    \ numAsArray22 = numAsArray21.filter({$0 != \"3\"})\n    let numAsArray23 = numAsArray22.filter({$0\
    \ != \"4\"})\n    let numAsArray24 = numAsArray23.filter({$0 != \"5\"})\n    let\
    \ numAsArray25 = numAsArray24.filter({$0 != \"6\"})\n    let numAsArray26 = numAsArray25.filter({$0\
    \ != \"7\"})\n    let numAsArray27 = numAsArray26.filter({$0 != \"8\"})\n    let\
    \ numAsArray28 = numAsArray27.filter({", "    var hex = num.uppercased()\n   \
    \ var count = 0\n    for char in hex {\n        if char == \"A\" {\n         \
    \   count++\n        } else if char == \"B\" {\n            count++\n        }\
    \ else if char == \"C\" {\n            count++\n        } else if char == \"D\"\
    \ {\n            count++\n        } else if char == \"E\" {\n            count++\n\
    \        } else if char == \"F\" {\n            count++\n        } else {\n  \
    \          count = 0\n        }\n    }\n    return count", "    var hexDigits\
    \ = \"\"\n    var count = 0\n    for char in num {\n        hexDigits += char\n\
    \    }\n    for char in hexDigits {\n        if char == \"A\" {\n            count\
    \ += 1\n        } else if char == \"B\" {\n            count += 1\n        } else\
    \ if char == \"C\" {\n            count += 1\n        } else if char == \"D\"\
    \ {\n            count += 1\n        } else if char == \"E\" {\n            count\
    \ += 1\n        } else if char == \"F\" {\n            count += 1\n        } else\
    \ if char == \"0\" {\n            count += 1\n        } else if char == \"1\"\
    \ {\n            count += 1\n        } else if char == \"2\" {\n            count\
    \ += 1\n        } else if char == \"3\" {\n            count += 1\n        } else\
    \ if char == \"4\" {\n            count += 1\n        } else if char == \"5\"\
    \ {\n            count += 1\n        } else if char == \"6\" {\n            count\
    \ += 1\n        } else if char == \"7\" {\n            count += 1\n        } else\
    \ if char == \"8\" {\n            count += 1\n        } else if char == \"9\"\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var nums\
    \ = num.characters\n    var count = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n  \
    \  for char in nums {\n        if char.uppercased() == \"A\" {\n            primes[0]\
    \ = primes[1]\n            primes[1] = primes[2]\n            primes[2] = primes[3]\n\
    \            primes[3] = primes[4]\n            primes[4] = primes[5]\n      \
    \      primes[5] = primes[6]\n            primes[6] = primes[7]\n            primes[7]\
    \ = primes[8]\n            primes[8] = primes[9]\n            primes[9] = primes[10]\n\
    \            primes[10] = primes[11]\n            primes[11] = primes[12]\n  \
    \          primes[12] = primes[13]\n            primes[13] = primes[14]\n    \
    \        primes[14] = primes[15]\n            primes[15] = primes[16]\n      \
    \      primes[16] = primes[17]\n            primes[17] = primes[18]\n        \
    \    primes[18] = primes[19]\n            primes[19] = primes[20]\n          \
    \  primes[20] = primes[21]\n            primes[21] = primes[22]\n            primes[22]\
    \ = primes[23]\n            primes[23] = primes[24]\n            primes[24] =\
    \ primes[25]\n            primes[25] = primes[26]\n            primes[26] = primes[27]\n\
    \            primes[27] = primes[28]\n            primes[28] = primes[29]\n  \
    \          primes[29] = primes[30]\n            primes[30] = primes[31]\n    \
    \        primes[31] = primes[32]\n            primes[32] = primes[33]\n      \
    \      primes[33] = primes[34]\n            primes[34] = primes[35]\n        \
    \    primes[35] = primes[36]\n            primes[36] = primes[37]\n          \
    \  primes[37] = primes[38]\n            primes[38] = primes[39]\n            primes[39]\
    \ = primes[40]\n            primes[40] = primes[41]\n            primes[41] =\
    \ primes[42]\n            primes[42] = primes[43]\n            primes[43] = primes[44]\n\
    \            primes[44] = primes[45]\n            primes[45] = primes[46]\n  \
    \          primes[46] = primes[47]\n            prime", "    let digits = num.characters\n\
    \    var count = 0\n    for digit in digits {\n        switch digit {\n      \
    \  case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"3\":\n\
    \        case \"4\":\n        case \"5\":\n        case \"6\":\n        case \"\
    7\":\n        case \"8\":\n        case \"9\":\n            count += 1\n     \
    \   case \"A\":\n        case \"B\":\n        case \"C\":\n        case \"D\"\
    :\n        case \"E\":\n        case \"F\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    var nums = num.characters\n\
    \    var result = 0\n    for index in 0..<nums.count {\n        let hex = nums[index]\
    \ as String\n        let digit = Int(hex, radix: 16)\n        if digit > 0 &&\
    \ digit < 10 {\n            result += 1\n        }\n    }\n    return result",
  "    let digits = num.characters\n    let digitCount = digits.count\n    var hexDigitCount\
    \ = 0\n    var hexDigit = 0\n    var hexDigit2 = 0\n    var hexDigit3 = 0\n  \
    \  var hexDigit4 = 0\n    var hexDigit5 = 0\n    var hexDigit6 = 0\n    var hexDigit7\
    \ = 0\n    var hexDigit8 = 0\n    var hexDigit9 = 0\n    var hexDigit10 = 0\n\
    \    var hexDigit11 = 0\n    var hexDigit12 = 0\n    var hexDigit13 = 0\n    var\
    \ hexDigit14 = 0\n    var hexDigit15 = 0\n    var hexDigit16 = 0\n    var hexDigit17\
    \ = 0\n    var hexDigit18 = 0\n    var hexDigit19 = 0\n    var hexDigit20 = 0\n\
    \    var hexDigit21 = 0\n    var hexDigit22 = 0\n    var hexDigit23 = 0\n    var\
    \ hexDigit24 = 0\n    var hexDigit25 = 0\n    var hexDigit26 = 0\n    var hexDigit27\
    \ = 0\n    var hexDigit28 = 0\n    var hexDigit29 = 0\n    var hexDigit30 = 0\n\
    \    var hexDigit31 = 0\n    var hexDigit32 = 0\n    var hexDigit33 = 0\n    var\
    \ hexDigit34 = 0\n    var hexDigit35 = 0\n    var hexDigit36 = 0\n    var hexDigit37\
    \ = 0\n    var hexDigit38 = 0\n    var hexDigit39 = 0\n    var hexDigit40 = 0\n\
    \    var hexDigit41 = 0\n    var hexDigit42 = 0\n    var hexDigit43 = 0\n    var\
    \ hexDigit44 = 0\n    var hexDigit45 = 0\n    var hexDigit46 = 0\n    var hexDigit47\
    \ = 0\n    var hexDigit48 = 0\n    var hexDigit49 = 0\n    var hexDigit50 = 0\n\
    \    var hexDigit51 = 0\n    var hexDigit52 = 0\n    var hexDigit53 = 0\n    var\
    \ hexDigit54 = 0\n    var hexDigit55 = 0\n    var hexDigit56 = 0\n    var hexDigit57\
    \ = 0\n    var hexDigit58 = 0\n    var hexDigit59 = 0\n    var hexDigit60 = 0\n\
    \    var hexDigit61 = 0\n    var hexDigit62 = 0\n    var hexDigit63 = 0\n    var\
    \ hexDigit64 = 0\n    var hexDigit65 = 0\n    var hexDigit66 = 0\n    var hexDigit67\
    \ = 0\n    var hexDigit68 = 0\n    var hexDigit69 = 0\n    var hexDigit70 = 0\n\
    \    var hexDigit71 = 0\n    var hexDigit72 = 0\n    var hexDigit73 = 0\n    var\
    \ hexDigit74 = 0\n    var hexDigit75 = 0\n    var hexDigit76 = 0\n    var hexDigit77\
    \ = 0\n    var hexDigit78 = 0\n    var hexDigit79 = 0\n    var hexDigit80 = 0\n\
    \    var hexDigit81 = 0\n    var hexDigit82 = 0\n    var hex", "    let numAsString\
    \ = num.lowercased()\n    let numAsArray = numAsString.characters\n    let numAsArray2\
    \ = numAsArray.filter({$0 != \"A\" && $0 != \"B\" && $0 != \"C\" && $0 != \"D\"\
    \ && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray3 = numAsArray2.filter({$0\
    \ != \"0\"})\n    let numAsArray4 = numAsArray3.filter({$0 != \"1\"})\n    let\
    \ numAsArray5 = numAsArray4.filter({$0 != \"2\"})\n    let numAsArray6 = numAsArray5.filter({$0\
    \ != \"3\"})\n    let numAsArray7 = numAsArray6.filter({$0 != \"4\"})\n    let\
    \ numAsArray8 = numAsArray7.filter({$0 != \"5\"})\n    let numAsArray9 = numAsArray8.filter({$0\
    \ != \"6\"})\n    let numAsArray10 = numAsArray9.filter({$0 != \"7\"})\n    let\
    \ numAsArray11 = numAsArray10.filter({$0 != \"8\"})\n    let numAsArray12 = numAsArray11.filter({$0\
    \ != \"9\"})\n    let numAsArray13 = numAsArray12.filter({$0 != \"A\"})\n    let\
    \ numAsArray14 = numAsArray13.filter({$0 != \"B\"})\n    let numAsArray15 = numAsArray14.filter({$0\
    \ != \"C\"})\n    let numAsArray16 = numAsArray15.filter({$0 != \"D\"})\n    let\
    \ numAsArray17 = numAsArray16.filter({$0 != \"E\"})\n    let numAsArray18 = numAsArray17.filter({$0\
    \ != \"F\"})\n    let numAsArray19 = numAsArray18.filter({$0 != \"0\"})\n    let\
    \ numAsArray20 = numAsArray19.filter({$0 != \"1\"})\n    let numAsArray21 = numAsArray20.filter({$0\
    \ != \"2\"})\n    let numAsArray22 = numAsArray21.filter({$0 != \"3\"})\n    let\
    \ numAsArray23 = numAsArray22.filter({$0 != \"4\"})\n    let numAsArray24 = numAsArray23.filter({$0\
    \ != \"5\"})\n    let numAsArray25 = numAsArray24.filter({$0 != \"6\"})\n    let\
    \ numAsArray26 = numAsArray25.filter({$0 != \"7\"})\n    let numAsArray27 = numAsArray26.filter({$0\
    \ != \"8\"})\n    let numAsArray28 = numAsArray27.filter({", "    var count =\
    \ 0\n    for c in num {\n        switch c {\n        case \"0\": count++\n   \
    \     case \"1\": count++\n        case \"2\": count++\n        case \"3\": count++\n\
    \        case \"4\": count++\n        case \"5\": count++\n        case \"6\"\
    : count++\n        case \"7\": count++\n        case \"8\": count++\n        case\
    \ \"9\": count++\n        case \"A\": count++\n        case \"B\": count++\n \
    \       case \"C\": count++\n        case \"D\": count++\n        case \"E\":\
    \ count++\n        case \"F\": count++\n        default: break\n        }\n  \
    \  }\n    return count", "    let digits = num.characters\n    let len = digits.count\n\
    \    let primes = primes_from(digits)\n    let primesLen = primes.count\n    let\
    \ primesSum = primes.reduce(0,+)\n    let primesSumLen = primesSum.count\n   \
    \ let primesSumDiv = primesSum.map { $0 / primesLen }\n    let primesSumDivLen\
    \ = primesSumDiv.count\n    let primesSumDiv2 = primesSumDiv.map { $0 * $0 }\n\
    \    let primesSumDiv2Len = primesSumDiv2.count\n    let primesSumDiv2Sum = primesSumDiv2.reduce(0,+)\n\
    \    let primesSumDiv2SumLen = primesSumDiv2Sum.count\n    let primesSumDiv2SumDiv\
    \ = primesSumDiv2Sum.map { $0 / primesLen * $0 }\n    let primesSumDiv2SumDivLen\
    \ = primesSumDiv2SumDiv.count\n    let primesSumDiv2SumDiv2 = primesSumDiv2SumDiv.map\
    \ { $0 * $0 }\n    let primesSumDiv2SumDiv2Len = primesSumDiv2SumDiv2.count\n\
    \    let primesSumDiv2SumDiv2Sum = primesSumDiv2SumDiv2.reduce(0,+)\n    let primesSumDiv2SumDiv2SumLen\
    \ = primesSumDiv2SumDiv2Sum.count\n    let primesSumDiv2SumDiv2SumDiv = primesSumDiv2SumDiv2Sum.map\
    \ { $0 / primesLen * $0 }\n    let primesSumDiv2SumDiv2SumDivLen = primesSumDiv2SumDiv2SumDiv.count\n\
    \    let primesSumDiv2SumDiv2SumDiv2 = primesSumDiv2SumDiv2SumDiv.map { $0 * $0\
    \ }\n    let primesSumDiv2SumDiv2SumDiv2Len = primesSumDiv2SumDiv2SumDiv2.count\n\
    \    let primesSumDiv2SumDiv2SumDiv2Sum = primesSumDiv2SumDiv2SumDiv2Sum.map {\
    \ $0 / primesLen * $0 }\n    let primesSumDiv2SumDiv2SumDiv2SumLen = primesSumDiv2SumDiv2SumDiv2Sum.count\n\
    \    let primesSumDiv2SumDiv2SumDiv2SumDiv = primesSumDiv2SumDiv2SumDiv2", " \
    \   var count = 0\n    for c in num {\n        switch c {\n        case \"0\"\
    , \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\":\n           \
    \ count += 1\n        case \"A\", \"B\", \"C\", \"D\", \"E\", \"F\":\n       \
    \     count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var nums = num.characters\n    var numsCount = nums.count\n   \
    \ var numsSum = 0\n    var numsSum2 = 0\n    var numsSum3 = 0\n    var numsSum4\
    \ = 0\n    var numsSum5 = 0\n    var numsSum6 = 0\n    var numsSum7 = 0\n    var\
    \ numsSum8 = 0\n    var numsSum9 = 0\n    var numsSum10 = 0\n    var numsSum11\
    \ = 0\n    var numsSum12 = 0\n    var numsSum13 = 0\n    var numsSum14 = 0\n \
    \   var numsSum15 = 0\n    var numsSum16 = 0\n    var numsSum17 = 0\n    var numsSum18\
    \ = 0\n    var numsSum19 = 0\n    var numsSum20 = 0\n    var numsSum21 = 0\n \
    \   var numsSum22 = 0\n    var numsSum23 = 0\n    var numsSum24 = 0\n    var numsSum25\
    \ = 0\n    var numsSum26 = 0\n    var numsSum27 = 0\n    var numsSum28 = 0\n \
    \   var numsSum29 = 0\n    var numsSum30 = 0\n    var numsSum31 = 0\n    var numsSum32\
    \ = 0\n    var numsSum33 = 0\n    var numsSum34 = 0\n    var numsSum35 = 0\n \
    \   var numsSum36 = 0\n    var numsSum37 = 0\n    var numsSum38 = 0\n    var numsSum39\
    \ = 0\n    var numsSum40 = 0\n    var numsSum41 = 0\n    var numsSum42 = 0\n \
    \   var numsSum43 = 0\n    var numsSum44 = 0\n    var numsSum45 = 0\n    var numsSum46\
    \ = 0\n    var numsSum47 = 0\n    var numsSum48 = 0\n    var numsSum49 = 0\n \
    \   var numsSum50 = 0\n    var numsSum51 = 0\n    var numsSum52 = 0\n    var numsSum53\
    \ = 0\n    var numsSum54 = 0\n    var numsSum55 = 0\n    var numsSum56 = 0\n \
    \   var numsSum57 = 0\n    var numsSum58 = 0\n    var numsSum59 = 0\n    var numsSum60\
    \ = 0\n    var numsSum61 = 0\n    var numsSum62 = 0\n    var numsSum63 = 0\n \
    \   var numsSum64 = 0\n    var numsSum65 = 0\n    var numsSum66 = 0\n    var numsSum67\
    \ = 0\n    var numsSum68 = 0\n    var numsSum69 = 0\n    var numsSum70 = 0\n \
    \   var numsSum71 = 0\n    var ", "    var hexDigits = [String]()\n    var count\
    \ = 0\n    for c in num {\n        hexDigits.append(String(format: \"%c\", c))\n\
    \    }\n    for hexDigit in hexDigits {\n        if hexDigit == \"A\" || hexDigit\
    \ == \"B\" || hexDigit == \"C\" || hexDigit == \"D\" || hexDigit == \"E\" || hexDigit\
    \ == \"F\" {\n            count += 1\n        }\n    }\n    return count", " \
    \   var count = 0\n    var digits = \"\"\n    for char in num {\n        switch\
    \ char {\n        case \"0\":\n            digits = \"0\"\n        case \"1\"\
    :\n            digits = \"1\"\n        case \"2\":\n            digits = \"2\"\
    \n        case \"3\":\n            digits = \"3\"\n        case \"4\":\n     \
    \       digits = \"4\"\n        case \"5\":\n            digits = \"5\"\n    \
    \    case \"6\":\n            digits = \"6\"\n        case \"7\":\n          \
    \  digits = \"7\"\n        case \"8\":\n            digits = \"8\"\n        case\
    \ \"9\":\n            digits = \"9\"\n        case \"A\":\n            digits\
    \ = \"A\"\n        case \"B\":\n            digits = \"B\"\n        case \"C\"\
    :\n            digits = \"C\"\n        case \"D\":\n            digits = \"D\"\
    \n        case \"E\":\n            digits = \"E\"\n        case \"F\":\n     \
    \       digits = \"F\"\n        default:\n            break\n        }\n    }\n\
    \    if digits == \"0\" || digits == \"1\" {\n        return Int(digits)\n   \
    \ }\n    var hexDigits = \"\"\n    var hexDigit = 0\n    for char in digits {\n\
    \        hexDigit = Int(String(char).unicodeScalars.first!)\n        hexDigits\
    \ += String(hexDigit)\n    }\n    for char in hexDigits {\n        if Int(char)\
    \ == 2 {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ hex = num.unicodeScalars\n    var hexString = \"\"\n    for hex in hex {\n \
    \       hexString += String(hex)\n    }\n    var hexStringArray = hexString.characters\n\
    \    var hexStringArrayLength = hexStringArray.count\n    var hexStringArrayLength2\
    \ = hexStringArrayLength / 2\n    var hexStringArrayLength3 = hexStringArrayLength\
    \ / 3\n    var hexStringArrayLength4 = hexStringArrayLength / 4\n    var hexStringArrayLength5\
    \ = hexStringArrayLength / 5\n    var hexStringArrayLength6 = hexStringArrayLength\
    \ / 6\n    var hexStringArrayLength7 = hexStringArrayLength / 7\n    var hexStringArrayLength8\
    \ = hexStringArrayLength / 8\n    var hexStringArrayLength9 = hexStringArrayLength\
    \ / 9\n    var hexStringArrayLength10 = hexStringArrayLength / 10\n    var hexStringArrayLength11\
    \ = hexStringArrayLength / 11\n    var hexStringArrayLength12 = hexStringArrayLength\
    \ / 12\n    var hexStringArrayLength13 = hexStringArrayLength / 13\n    var hexStringArrayLength14\
    \ = hexStringArrayLength / 14\n    var hexStringArrayLength15 = hexStringArrayLength\
    \ / 15\n    var hexStringArrayLength16 = hexStringArrayLength / 16\n    var hexStringArrayLength17\
    \ = hexStringArrayLength / 17\n    var hexStringArrayLength18 = hexStringArrayLength\
    \ / 18\n    var hexStringArrayLength19 = hexStringArrayLength / 19\n    var hexStringArrayLength20\
    \ = hexStringArrayLength / 20\n    var hexStringArrayLength21 = hexStringArrayLength\
    \ / 21\n    var hexStringArrayLength22 = hexStringArrayLength / 22\n    var hexStringArrayLength23\
    \ = hexStringArrayLength / 23\n    var hexStringArrayLength24 = hexStringArrayLength\
    \ / 24\n    var hexStringArrayLength25 = hexStringArrayLength / 25\n    var hexStringArrayLength26\
    \ = hexStringArrayLength / 26\n    var hexStringArrayLength27 = hexStringArrayLength\
    \ / 27\n    var hexStringArrayLength28 = hexStringArrayLength / 28\n    var hexStringArrayLength29\
    \ = hexStringArrayLength / 29\n    var hexStringArrayLength30 = hexStringArrayLength\
    \ / 30\n    var hexStringArrayLength31 = hexStringArrayLength / 31\n    var hexStringArrayLength32\
    \ = hexStringArrayLength / 32\n    var hexStringArrayLength33 = hexStringArrayLength\
    \ / 33\n    var hexStringArrayLength34 = hexStringArrayLength / 34\n    var hexStringArrayLength35\
    \ = hexStringArrayLength / ", "    var nums = num.characters\n    var count =\
    \ 0\n    for _ in 0..<nums.count {\n        let hex = nums[_]\n        if hex\
    \ >= '0' && hex <= '9' {\n            count += 1\n        }\n    }\n    return\
    \ count", "    let digits = num.unicodeScalars\n        .filter { $0.isHexadecimal\
    \ }\n        .map { $0.value }\n        .sorted()\n        .map { Int($0) }\n\
    \    return digits.count { digit in\n        let prime = Int(pow(digit, 2))\n\
    \        return prime > 1 && prime % 2 == 0\n    }", "    // Your code here\n\
    \    \n    return 0", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime(hexDigit:\
    \ $0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount\
    \ < hexDigitPrimeCount {\n        return hexDigitCount\n    }\n    return hexDigitPrimeCount",
  "    var nums = num.characters\n    var hexNum = num.characters.map { Int($0) }\n\
    \    var hexNums = hexNum.map { Int($0) }\n    var hexNumsCount = hexNums.count\n\
    \    var hexNumsSum = hexNums.reduce(0, +)\n    var hexNumsSum2 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum3 = hexNums.reduce(0, +)\n    var hexNumsSum4 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum5 = hexNums.reduce(0, +)\n    var hexNumsSum6 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum7 = hexNums.reduce(0, +)\n    var hexNumsSum8 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum9 = hexNums.reduce(0, +)\n    var hexNumsSum10 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum11 = hexNums.reduce(0, +)\n    var hexNumsSum12 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum13 = hexNums.reduce(0, +)\n    var hexNumsSum14 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum15 = hexNums.reduce(0, +)\n    var hexNumsSum16 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum17 = hexNums.reduce(0, +)\n    var hexNumsSum18 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum19 = hexNums.reduce(0, +)\n    var hexNumsSum20 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum21 = hexNums.reduce(0, +)\n    var hexNumsSum22 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum23 = hexNums.reduce(0, +)\n    var hexNumsSum24 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum25 = hexNums.reduce(0, +)\n    var hexNumsSum26 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum27 = hexNums.reduce(0, +)\n    var hexNumsSum28 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum29 = hexNums.reduce(0, +)\n    var hexNumsSum30 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum31 = hexNums.reduce(0, +)\n    var hexNumsSum32 = hexNums.reduce(0,\
    \ +)\n    var hexNumsSum33 = hexNums.reduce(0, +)\n    var hexNumsSum34 = hexNums.reduce(0,\
    \ +)\n    var hexNum", "    var nums = num.characters\n    var numsCount = nums.count\n\
    \    var hexNum = 0\n    var hexNumCount = 0\n    var hexNumString = \"\"\n  \
    \  var hexNumStringCount = 0\n    var hexNumStringArray = [String]()\n    var\
    \ hexNumStringArrayCount = 0\n    var hexNumStringArrayCount2 = 0\n    var hexNumStringArrayCount3\
    \ = 0\n    var hexNumStringArrayCount4 = 0\n    var hexNumStringArrayCount5 =\
    \ 0\n    var hexNumStringArrayCount6 = 0\n    var hexNumStringArrayCount7 = 0\n\
    \    var hexNumStringArrayCount8 = 0\n    var hexNumStringArrayCount9 = 0\n  \
    \  var hexNumStringArrayCount10 = 0\n    var hexNumStringArrayCount11 = 0\n  \
    \  var hexNumStringArrayCount12 = 0\n    var hexNumStringArrayCount13 = 0\n  \
    \  var hexNumStringArrayCount14 = 0\n    var hexNumStringArrayCount15 = 0\n  \
    \  var hexNumStringArrayCount16 = 0\n    var hexNumStringArrayCount17 = 0\n  \
    \  var hexNumStringArrayCount18 = 0\n    var hexNumStringArrayCount19 = 0\n  \
    \  var hexNumStringArrayCount20 = 0\n    var hexNumStringArrayCount21 = 0\n  \
    \  var hexNumStringArrayCount22 = 0\n    var hexNumStringArrayCount23 = 0\n  \
    \  var hexNumStringArrayCount24 = 0\n    var hexNumStringArrayCount25 = 0\n  \
    \  var hexNumStringArrayCount26 = 0\n    var hexNumStringArrayCount27 = 0\n  \
    \  var hexNumStringArrayCount28 = 0\n    var hexNumStringArrayCount29 = 0\n  \
    \  var hexNumStringArrayCount30 = 0\n    var hexNumStringArrayCount31 = 0\n  \
    \  var hexNumStringArrayCount32 = 0\n    var hexNumStringArrayCount33 = 0\n  \
    \  var hexNumStringArrayCount34 = 0\n    var hexNumStringArrayCount35 = 0\n  \
    \  var hexNumStringArrayCount36 = 0\n    var hexNumStringArrayCount37 = 0\n  \
    \  var hexNumStringArrayCount38 = 0\n    var hexNumStringArrayCount39 = 0\n  \
    \  var hexNumStringArrayCount40 = 0\n    var hexNumStringArrayCount41 = 0\n  \
    \  var hexNumStringArrayCount42 = 0\n    var hexNumStringArrayCount43 = 0\n  \
    \  var hexNumStringArrayCount44 = 0\n    var hexNumStringArrayCount45 = 0\n  \
    \  var hexNumStringArrayCount46 = 0\n    var hexNumStringArrayCount47 = 0\n  \
    \  var hexNumStringArrayCount48 = 0\n    var hexNumStringArrayCount49 = 0\n  \
    \  var hexNumStringArrayCount50 = 0\n    var hexNumStringArrayCount51 = 0\n  \
    \  var hexNumStringArray", "    var nums = num.characters\n    var result = 0\n\
    \    for _ in 0..<nums.count {\n        let num = nums[_]\n        if num == \"\
    A\" || num == \"B\" || num == \"C\" || num == \"D\" || num == \"E\" || num ==\
    \ \"F\" {\n            continue\n        }\n        if num == \"0\" || num ==\
    \ \"1\" {\n            continue\n        }\n        if num == \"2\" {\n      \
    \      result += 1\n            continue\n        }\n        if num == \"3\" {\n\
    \            result += 2\n            continue\n        }\n        if num == \"\
    5\" {\n            result += 3\n            continue\n        }\n        if num\
    \ == \"7\" {\n            result += 4\n            continue\n        }\n     \
    \   if num == \"B\" {\n            result += 11\n            continue\n      \
    \  }\n        if num == \"D\" {\n            result += 13\n            continue\n\
    \        }\n        break\n    }\n    return result", "    // Your code here\n\
    \    \n    return 0", "    var hex = num.unicodeScalars\n    var hexDigits = hex.count\n\
    \    var hexDigit = 0\n    var hexDigitCount = 0\n    var hexDigitCount2 = 0\n\
    \    var hexDigitCount3 = 0\n    var hexDigitCount4 = 0\n    var hexDigitCount5\
    \ = 0\n    var hexDigitCount6 = 0\n    var hexDigitCount7 = 0\n    var hexDigitCount8\
    \ = 0\n    var hexDigitCount9 = 0\n    var hexDigitCount10 = 0\n    var hexDigitCount11\
    \ = 0\n    var hexDigitCount12 = 0\n    var hexDigitCount13 = 0\n    var hexDigitCount14\
    \ = 0\n    var hexDigitCount15 = 0\n    var hexDigitCount16 = 0\n    var hexDigitCount17\
    \ = 0\n    var hexDigitCount18 = 0\n    var hexDigitCount19 = 0\n    var hexDigitCount20\
    \ = 0\n    var hexDigitCount21 = 0\n    var hexDigitCount22 = 0\n    var hexDigitCount23\
    \ = 0\n    var hexDigitCount24 = 0\n    var hexDigitCount25 = 0\n    var hexDigitCount26\
    \ = 0\n    var hexDigitCount27 = 0\n    var hexDigitCount28 = 0\n    var hexDigitCount29\
    \ = 0\n    var hexDigitCount30 = 0\n    var hexDigitCount31 = 0\n    var hexDigitCount32\
    \ = 0\n    var hexDigitCount33 = 0\n    var hexDigitCount34 = 0\n    var hexDigitCount35\
    \ = 0\n    var hexDigitCount36 = 0\n    var hexDigitCount37 = 0\n    var hexDigitCount38\
    \ = 0\n    var hexDigitCount39 = 0\n    var hexDigitCount40 = 0\n    var hexDigitCount41\
    \ = 0\n    var hexDigitCount42 = 0\n    var hexDigitCount43 = 0\n    var hexDigitCount44\
    \ = 0\n    var hexDigitCount45 = 0\n    var hexDigitCount46 = 0\n    var hexDigitCount47\
    \ = 0\n    var hexDigitCount48 = 0\n    var hexDigitCount49 = 0\n    var hexDigitCount50\
    \ = 0\n    var hexDigitCount51 = 0\n    var hexDigitCount52 = 0\n    var hexDigitCount53\
    \ = 0\n    var hexDigitCount54 = 0\n    var hexDigitCount55 = 0\n    var hexDigitCount56\
    \ = 0\n    var hexDigitCount57 = 0\n    var hexDigitCount58 = 0\n    var hexDigitCount59\
    \ = 0\n    var hexDigitCount60 = 0\n    var hexDigitCount61 = 0\n    var hexDigitCount62\
    \ = 0\n    var hexDigitCount63 = 0\n    var hexDigitCount64 = 0\n    var hexDigitCount65\
    \ = 0\n    var hexDigitCount66 = 0\n    var hexDigitCount67 = 0\n    var hexDigitCount68\
    \ = 0\n    var hexDigitCount69 = 0\n    var hexDigitCount70 = 0\n    var ", " \
    \   let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { Int($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter { $0 % 3 == 0 }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter { $0 % 5 == 0 }\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n    let\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter { $0 % 7 ==\
    \ 0 }\n    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter\
    \ { $0 % 11 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter\
    \ { $0 % 13 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0 % 17 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter { $0 %\
    \ 19 == 0 }\n    let hexDigitPrimePrimePrimePrimePrime", "    var hex = num.unicodeScalars\n\
    \    var count = 0\n    for _ in 0..<hex.count {\n        if hex[hex.startIndex\
    \ + _].isPrime {\n            count += 1\n        }\n    }\n    return count",
  "    // Your code here\n    let digits = num.unicodeScalars.map { $0.value }\n \
    \   var count = 0\n    for digit in digits {\n        if digit == 0xB {\n    \
    \        count += 1\n        } else if digit == 0xD {\n            count += 1\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in num {\n\
    \        switch c {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"\
    6\", \"7\", \"8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\":\n        \
    \    count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    var nums: [Int] = []\n    for c in num {\n        if c >= '0' &&\
    \ c <= '9' {\n            nums.append(c - '0')\n        } else if c >= 'A' &&\
    \ c <= 'F' {\n            nums.append(c - 'A' + 10)\n        } else if c >= 'a'\
    \ && c <= 'f' {\n            nums.append(c - 'a' + 10)\n        } else {\n   \
    \         return -1\n        }\n    }\n    return nums.count", "    let hex =\
    \ num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n    let hexDigits\
    \ = hex.unicodeScalars.map { Int($0) }\n    let hexDigitCount = hexDigits.count\n\
    \    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    let hexDigitPrimePrimes = hexDigitPrimes.filter\
    \ { $0 % 3 == 0 }\n    let hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimes = hexDigitPrimePrimes.filter { $0 % 5 == 0 }\n\
    \    let hexDigitPrimePrimePrimeCount = hexDigitPrimePrimePrimes.count\n    let\
    \ hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter { $0 % 7 ==\
    \ 0 }\n    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter\
    \ { $0 % 11 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter\
    \ { $0 % 13 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0 % 17 == 0 }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter { $0 %\
    \ 19 == 0 }\n    let hexDigitPrimePrimePrimePrimePrime", "    var nums = num.characters\n\
    \    var count = 0\n    for index in 0..<nums.count {\n        let c = nums[index]\n\
    \        if c >= '0' && c <= '9' {\n            count += 1\n        }\n    }\n\
    \    return count", "    var nums = num.characters\n    var count = 0\n    var\
    \ primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61,\
    \ 67, 71, 73, 79, 83, 89, 97]\n    for num in nums {\n        if nums.contains(String(num).uppercased)\
    \ {\n            count += 1\n        }\n    }\n    return count", "    var nums\
    \ = num.characters\n    var result = 0\n    for index in 0..<nums.count {\n  \
    \      let char = nums[index]\n        let digit = Int(char) ?? 0\n        switch\
    \ digit {\n        case 0:\n            result += 1\n        case 1:\n       \
    \     result += 1\n        case 2:\n            result += 1\n        case 3:\n\
    \            result += 1\n        case 4:\n            result += 1\n        case\
    \ 5:\n            result += 1\n        case 6:\n            result += 1\n    \
    \    case 7:\n            result += 1\n        case 8:\n            result +=\
    \ 1\n        case 9:\n            result += 1\n        case 10:\n            result\
    \ += 1\n        case 11:\n            result += 1\n        case 12:\n        \
    \    result += 1\n        case 13:\n            result += 1\n        case 14:\n\
    \            result += 1\n        case 15:\n            result += 1\n        case\
    \ 16:\n            result += 1\n        case 17:\n            result += 1\n  \
    \      case 18:\n            result += 1\n        case 19:\n            result\
    \ += 1\n        case 20:\n            result += 1\n        case 21:\n        \
    \    result += 1\n        case 22:\n            result += 1\n        case 23:\n\
    \            result += 1\n        case 24:\n            result += 1\n        case\
    \ 25:\n            result += 1\n        case 26:\n            result += 1\n  \
    \      case 27:\n            result += 1\n        case 28:\n            result\
    \ += 1\n        case 29:\n            result += 1\n        case 30:\n        \
    \    result += 1\n        case 31:\n            result += 1\n        case 32:\n\
    \            result += 1\n        case 33:\n            result += 1\n        case\
    \ 34:\n            result += 1\n        case 35:\n            result += 1\n  \
    \      case 36:\n            result += 1\n        case 37:\n            result\
    \ += 1\n        case 38:\n            result += 1\n        case 39:\n        \
    \    result += 1\n        case 40:\n            result += 1\n        case 41:\n\
    \            result += 1\n        case 42:\n            result += 1\n        case\
    \ 43:\n            result += 1\n        case 44:\n            result += 1\n  \
    \      case 45:\n            result += 1\n        case 46:\n            result\
    \ += 1\n        case 47:\n            result += 1\n        case 48:\n        \
    \    result += 1\n        case 49:\n            result += 1\n        case 50:\n\
    \            result += 1\n        case 51:\n            result += 1\n        case\
    \ 52:\n            result += 1\n        case 53:\n            result += 1\n  \
    \      case 54:\n            result += 1\n        case 55:\n            result\
    \ += 1\n        case 56:\n            result += 1\n        case 57:\n        \
    \    result += 1\n        case 58:\n            result += 1\n        case 59:\n\
    \            result += 1\n        case 60:\n            result += 1\n        case\
    \ 61:\n            result += 1\n        case 62", "    var nums = num.characters\n\
    \    var numsCount = nums.count\n    var hexDigits = [UInt8](repeating: 0, count:\
    \ numsCount)\n    var hexDigitsCount = numsCount\n    var hexDigitsCount2 = numsCount\n\
    \    var hexDigitsCount3 = numsCount\n    var hexDigitsCount4 = numsCount\n  \
    \  var hexDigitsCount5 = numsCount\n    var hexDigitsCount6 = numsCount\n    var\
    \ hexDigitsCount7 = numsCount\n    var hexDigitsCount8 = numsCount\n    var hexDigitsCount9\
    \ = numsCount\n    var hexDigitsCount10 = numsCount\n    var hexDigitsCount11\
    \ = numsCount\n    var hexDigitsCount12 = numsCount\n    var hexDigitsCount13\
    \ = numsCount\n    var hexDigitsCount14 = numsCount\n    var hexDigitsCount15\
    \ = numsCount\n    var hexDigitsCount16 = numsCount\n    var hexDigitsCount17\
    \ = numsCount\n    var hexDigitsCount18 = numsCount\n    var hexDigitsCount19\
    \ = numsCount\n    var hexDigitsCount20 = numsCount\n    var hexDigitsCount21\
    \ = numsCount\n    var hexDigitsCount22 = numsCount\n    var hexDigitsCount23\
    \ = numsCount\n    var hexDigitsCount24 = numsCount\n    var hexDigitsCount25\
    \ = numsCount\n    var hexDigitsCount26 = numsCount\n    var hexDigitsCount27\
    \ = numsCount\n    var hexDigitsCount28 = numsCount\n    var hexDigitsCount29\
    \ = numsCount\n    var hexDigitsCount30 = numsCount\n    var hexDigitsCount31\
    \ = numsCount\n    var hexDigitsCount32 = numsCount\n    var hexDigitsCount33\
    \ = numsCount\n    var hexDigitsCount34 = numsCount\n    var hexDigitsCount35\
    \ = numsCount\n    var hexDigitsCount36 = numsCount\n    var hexDigitsCount37\
    \ = numsCount\n    var hexDigitsCount38 = numsCount\n    var hexDigitsCount39\
    \ = numsCount\n    var hexDigitsCount40 = numsCount\n    var hexDigitsCount41\
    \ = numsCount\n    var hexDigitsCount42 = numsCount\n    var hexDigitsCount43\
    \ = numsCount\n    var hexDigitsCount44 = numsCount\n    var hexDigitsCount45\
    \ = numsCount", "    guard let num = num.lowercased() else {\n        return 0\n\
    \    }\n    \n    var count = 0\n    \n    for char in num {\n        switch char\
    \ {\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case\
    \ \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n    \
    \    case \"7\":\n        case \"8\":\n        case \"9\":\n        case \"a\"\
    :\n        case \"b\":\n        case \"c\":\n        case \"d\":\n        case\
    \ \"e\":\n        case \"f\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    \n    return count", "    var nums = num.characters\n\
    \    var nums_len = nums.count\n    var nums_copy = nums\n    var nums_copy_len\
    \ = nums_copy.count\n    var nums_copy_copy = nums_copy\n    var nums_copy_copy_len\
    \ = nums_copy_copy.count\n    var nums_copy_copy_copy_len = nums_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_len = nums_copy_copy_copy_copy.count\n    var\
    \ nums_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy.count\n  \
    \  var nums_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n\
    \    var nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_len\
    \ = nums_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy.count\n",
  "    var nums = num.characters\n    var count = 0\n    var primes = Array<Int>()\n\
    \    var prime: Int?\n    var prime_found = false\n    var prime_found2 = false\n\
    \    var prime_found3 = false\n    var prime_found4 = false\n    var prime_found5\
    \ = false\n    var prime_found6 = false\n    var prime_found7 = false\n    var\
    \ prime_found8 = false\n    var prime_found9 = false\n    var prime_found10 =\
    \ false\n    var prime_found11 = false\n    var prime_found12 = false\n    var\
    \ prime_found13 = false\n    var prime_found14 = false\n    var prime_found15\
    \ = false\n    var prime_found16 = false\n    var prime_found17 = false\n    var\
    \ prime_found18 = false\n    var prime_found19 = false\n    var prime_found20\
    \ = false\n    var prime_found21 = false\n    var prime_found22 = false\n    var\
    \ prime_found23 = false\n    var prime_found24 = false\n    var prime_found25\
    \ = false\n    var prime_found26 = false\n    var prime_found27 = false\n    var\
    \ prime_found28 = false\n    var prime_found29 = false\n    var prime_found30\
    \ = false\n    var prime_found31 = false\n    var prime_found32 = false\n    var\
    \ prime_found33 = false\n    var prime_found34 = false\n    var prime_found35\
    \ = false\n    var prime_found36 = false\n    var prime_found37 = false\n    var\
    \ prime_found38 = false\n    var prime_found39 = false\n    var prime_found40\
    \ = false\n    var prime_found41 = false\n    var prime_found42 = false\n    var\
    \ prime_found43 = false\n    var prime_found44 = false\n    var prime_found45\
    \ = false\n    var prime_found46 = false\n    var prime_found47 = false\n    var\
    \ prime_found48 = false\n    var prime_found49 = false\n    var prime_found50\
    \ = false\n    var prime_found51 = false\n    var prime_found52 = false\n    var\
    \ prime_found53 = false\n    var prime_found54 = false\n    var prime_found55\
    \ = false\n    var prime_found56 = false\n    var prime_found57 = false\n    var\
    \ prime_found58 = false\n    var prime_found59 = false\n    var prime_found60\
    \ = false\n    var prime_found61 = false\n    var prime_found62 = false\n    var\
    \ prime_found63 = false\n    var prime_found64 = false\n    var prime_found65\
    \ = false\n    var prime_found66 = false\n    var prime_found67 = false\n    var\
    \ prime_found68 = false\n", "    var count = 0\n    for char in num {\n      \
    \  switch char {\n        case \"A\":\n        case \"B\":\n        case \"C\"\
    :\n        case \"D\":\n        case \"E\":\n        case \"F\":\n           \
    \ count += 1\n        default:\n            break\n        }\n    }\n    return\
    \ count", "    let digits = num.characters\n    var count = 0\n    for digit in\
    \ digits {\n        if digit == \"A\" || digit == \"B\" || digit == \"C\" || digit\
    \ == \"D\" || digit == \"E\" || digit == \"F\" {\n            count += 1\n   \
    \     }\n    }\n    return count", "    var hex = num.stringByReplacingOccurrencesOfString(\"\
    0x\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range:\
    \ nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"0\", withString:\
    \ \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n    var hexDigits:\
    \ [String] = []\n    var hexDigit: Int = 0\n    for hexDigit in 0..<hex.characters.count\
    \ {\n        let hexChar = hex.substringWithRange(NSMakeRange(0, hexDigit))\n\
    \        let hexCharUpper = hexChar.uppercaseString\n        if hexCharUpper ==\
    \ \"A\" || hexCharUpper == \"B\" || hexCharUpper == \"C\" || hexCharUpper == \"\
    D\" || hexCharUpper == \"E\" || hexCharUpper == \"F\" {\n            hexDigits.append(hexCharUpper)\n\
    \        }\n    }\n    var primeDigits: [String] = []\n    var primeDigit: Int\
    \ = 0\n    for primeDigit in 0..<hexDigits.count {\n        let primeChar = hexDigits[primeDigit]\n\
    \        if primeChar == \"2\" || primeChar == \"3\" || primeChar == \"5\" ||\
    \ primeChar == \"7\" || primeChar == \"B\" || primeChar == \"D\" {\n         \
    \   primeDigits.append(primeChar)\n        }\n    }\n    return primeDigits.count",
  "    var nums = num.characters\n    var count = 0\n    for char in nums {\n    \
    \    if char == \"A\" || char == \"B\" || char == \"C\" || char == \"D\" || char\
    \ == \"E\" || char == \"F\" {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var hexDigits: [String] = []\n    var hexDigitCount = 0\n    var\
    \ hexDigitIndex = 0\n    var hexDigitCount2 = 0\n    var hexDigitIndex2 = 0\n\
    \    var hexDigitCount3 = 0\n    var hexDigitIndex3 = 0\n    var hexDigitCount4\
    \ = 0\n    var hexDigitIndex4 = 0\n    var hexDigitCount5 = 0\n    var hexDigitIndex5\
    \ = 0\n    var hexDigitCount6 = 0\n    var hexDigitIndex6 = 0\n    var hexDigitCount7\
    \ = 0\n    var hexDigitIndex7 = 0\n    var hexDigitCount8 = 0\n    var hexDigitIndex8\
    \ = 0\n    var hexDigitCount9 = 0\n    var hexDigitIndex9 = 0\n    var hexDigitCount10\
    \ = 0\n    var hexDigitIndex10 = 0\n    var hexDigitCount11 = 0\n    var hexDigitIndex11\
    \ = 0\n    var hexDigitCount12 = 0\n    var hexDigitIndex12 = 0\n    var hexDigitCount13\
    \ = 0\n    var hexDigitIndex13 = 0\n    var hexDigitCount14 = 0\n    var hexDigitIndex14\
    \ = 0\n    var hexDigitCount15 = 0\n    var hexDigitIndex15 = 0\n    var hexDigitCount16\
    \ = 0\n    var hexDigitIndex16 = 0\n    var hexDigitCount17 = 0\n    var hexDigitIndex17\
    \ = 0\n    var hexDigitCount18 = 0\n    var hexDigitIndex18 = 0\n    var hexDigitCount19\
    \ = 0\n    var hexDigitIndex19 = 0\n    var hexDigitCount20 = 0\n    var hexDigitIndex20\
    \ = 0\n    var hexDigitCount21 = 0\n    var hexDigitIndex21 = 0\n    var hexDigitCount22\
    \ = 0\n    var hexDigitIndex22 = 0\n    var hexDigitCount23 = 0\n    var hexDigitIndex23\
    \ = 0\n    var hexDigitCount24 = 0\n    var hexDigitIndex24 = 0\n    var hexDigitCount25\
    \ = 0\n    var hexDigitIndex25 = 0\n    var hexDigitCount26 = 0\n    var hexDigitIndex26\
    \ = 0\n    var hexDigitCount27 = 0\n    var hexDigitIndex27 = 0\n    var hexDigitCount28\
    \ = 0\n    var hexDigitIndex28 = 0\n    var hexDigitCount29 = 0\n    var hexDigitIndex29\
    \ = 0\n    var hexDigitCount30 = 0\n    var hexDigitIndex30 = 0\n    var hexDigitCount31\
    \ = 0\n    var hexDigitIndex31 = 0\n    var hexDigitCount32 = 0\n    var hexDigitIndex32\
    \ = 0\n    var hexDigitCount33 = 0\n    var hexDigitIndex33 = 0\n    var hexDigitCount34\
    \ = 0\n    var hexDigitIndex34 = 0\n    var hexDigitCount35 = 0\n    var hexDigitIndex35\
    \ = 0\n    var hexDigitCount36 = 0\n    var hexDigitIndex36 = 0\n    var hexDigit",
  "    var result = 0\n    for char in num.characters {\n        let digit = Int(char)\
    \ ?? 0\n        if digit == 0 || digit == 1 {\n            continue\n        }\n\
    \        result += (digit - 1) * pow(16, digit)\n    }\n    return result", " \
    \   let digits = num.characters\n    var hexDigits = [UInt8](repeating: 0, count:\
    \ digits.count)\n    for digit in digits {\n        hexDigits[Int(digit) - 0x40]\
    \ = UInt8(digit)\n    }\n    let hexString = String(hexDigits)\n    let hexCount\
    \ = hexString.count\n    let hexDigitCount = hexString.characters.count\n    var\
    \ primeCount = 0\n    var primeDigits = [UInt8](repeating: 0, count: hexDigitCount)\n\
    \    for digit in hexDigits {\n        if digit == 0xB {\n            primeDigits[Int(digit)\
    \ - 0x40] = UInt8(digit)\n        }\n    }\n    for digit in primeDigits {\n \
    \       if digit == 0xB {\n            primeCount += 1\n        }\n    }\n   \
    \ return primeCount", "    var hexDigits = [String]()\n    var count = 0\n   \
    \ for char in num {\n        hexDigits.append(String(char).uppercase)\n    }\n\
    \    for digit in hexDigits {\n        if digit == \"A\" {\n            count\
    \ += 1\n        } else if digit == \"B\" {\n            count += 1\n        }\
    \ else if digit == \"C\" {\n            count += 1\n        } else if digit ==\
    \ \"D\" {\n            count += 1\n        } else if digit == \"E\" {\n      \
    \      count += 1\n        } else if digit == \"F\" {\n            count += 1\n\
    \        } else {\n            count += 1\n        }\n    }\n    return count",
  "    guard let num = num.lowercased() else {\n        return 0\n    }\n    var count\
    \ = 0\n    var prime = 0\n    var prime2 = 2\n    var prime3 = 3\n    var prime5\
    \ = 5\n    var prime7 = 7\n    var prime11 = 1\n    var prime13 = 3\n    var prime17\
    \ = 7\n    var prime19 = 7\n    var prime23 = 3\n    var prime29 = 7\n    var\
    \ prime31 = 7\n    var prime37 = 7\n    var prime41 = 7\n    var prime43 = 7\n\
    \    var prime47 = 7\n    var prime51 = 7\n    var prime59 = 7\n    var prime63\
    \ = 7\n    var prime67 = 7\n    var prime71 = 7\n    var prime73 = 7\n    var\
    \ prime79 = 7\n    var prime83 = 7\n    var prime89 = 7\n    var prime93 = 7\n\
    \    var prime97 = 7\n    var prime101 = 7\n    var prime103 = 7\n    var prime107\
    \ = 7\n    var prime109 = 7\n    var prime113 = 7\n    var prime117 = 7\n    var\
    \ prime121 = 7\n    var prime123 = 7\n    var prime127 = 7\n    var prime129 =\
    \ 7\n    var prime131 = 7\n    var prime133 = 7\n    var prime137 = 7\n    var\
    \ prime139 =  7\n    var prime143 = 7\n    var prime147 =  7\n    var prime151\
    \ =  7\n    var prime153 =  7\n    var prime157 =  7\n    var prime159 =  7\n\
    \    var prime163 =  7\n    var prime167 =  7\n    var prime169 =  7\n    var\
    \ prime173 =  7\n    var prime177 =  7\n    var prime179 =  7\n    var prime181\
    \ =  7\n    var prime183 =  7\n    var prime187 =  7\n    var prime191 =  7\n\
    \    var prime193 =  7\n    var prime197 =  7\n    var prime199 =  7\n    var\
    \ prime201 =  7\n    var prime203 =  7\n    var prime207 =  7\n    var prime209\
    \ =  7\n    var prime211 =  7\n    var prime213 =  7\n    var prime217 =  7\n\
    \    var prime219 =  7\n    var prime221 =  7\n    var prime223 =  7\n    var\
    \ prime227 =  7\n    var prime229 =  7\n    var prime231 =  7\n    var prime233\
    \ =  7\n    var prime237 =  7\n    var prime239 =  7\n    var prime241 =  7\n\
    \    var prime243 =  7\n    var prime247 =  7\n    var prime249 =  7\n", "   \
    \ let digits = num.characters\n    let len = digits.count\n    var count = 0\n\
    \    var prime: Int = 0\n    var prime2: Int = 0\n    var prime3: Int = 0\n  \
    \  var prime4: Int = 0\n    var prime5: Int = 0\n    var prime6: Int = 0\n   \
    \ var prime7: Int = 0\n    var prime8: Int = 0\n    var prime9: Int = 0\n    var\
    \ prime10: Int = 0\n    var prime11: Int = 0\n    var prime12: Int = 0\n    var\
    \ prime13: Int = 0\n    var prime14: Int = 0\n    var prime15: Int = 0\n    var\
    \ prime16: Int = 0\n    var prime17: Int = 0\n    var prime18: Int = 0\n    var\
    \ prime19: Int = 0\n    var prime20: Int = 0\n    var prime21: Int = 0\n    var\
    \ prime22: Int = 0\n    var prime23: Int = 0\n    var prime24: Int = 0\n    var\
    \ prime25: Int = 0\n    var prime26: Int = 0\n    var prime27: Int = 0\n    var\
    \ prime28: Int = 0\n    var prime29: Int = 0\n    var prime30: Int = 0\n    var\
    \ prime31: Int = 0\n    var prime32: Int = 0\n    var prime33: Int = 0\n    var\
    \ prime34: Int = 0\n    var prime35: Int = 0\n    var prime36: Int = 0\n    var\
    \ prime37: Int = 0\n    var prime38: Int = 0\n    var prime39: Int = 0\n    var\
    \ prime40: Int = 0\n    var prime41: Int = 0\n    var prime42: Int = 0\n    var\
    \ prime43: Int = 0\n    var prime44: Int = 0\n    var prime45: Int = 0\n    var\
    \ prime46: Int = 0\n    var prime47: Int = 0\n    var prime48: Int = 0\n    var\
    \ prime49: Int = 0\n    var prime50: Int = 0\n    var prime51: Int = 0\n    var\
    \ prime52: Int = 0\n    var prime53: Int = 0\n    var prime54: Int = 0\n    var\
    \ prime55: Int = 0\n    var prime56: Int = 0\n    var prime57: Int = 0\n    var\
    \ prime58: Int = 0\n    var prime59: Int = 0\n    var prime60: Int = 0\n    var\
    \ prime61: Int = 0\n    var prime62: Int = 0\n    var prime63: Int = 0\n    var\
    \ prime64: Int = 0\n    var prime65: Int = 0\n    var prime66: Int = 0\n    var\
    \ prime67: Int = 0\n    var prime68: Int = 0\n    var prime69: Int = 0\n    var\
    \ prime70: Int = 0\n    var prime71: Int = 0\n    var prime72: Int", "    let\
    \ digits = num.characters\n    var count = 0\n    for digit in digits {\n    \
    \    let hex = Int(digit, radix: 16)\n        if hex > 9 {\n            hex -=\
    \ 10\n        }\n        if hex == 0 {\n            count += 1\n        }\n  \
    \  }\n    return count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { isPrime($0) }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount < 2 {\n\
    \        return -1\n    }\n    if hexDigitPrimeCount < 2 {\n        return -1\n\
    \    }\n    if hexDigitPrimeCount == hexDigitCount {\n        return hexDigitPrimes.count\n\
    \    }\n    return -1", "    let numAsString = num.lowercased()\n    let numAsArray\
    \ = numAsString.characters\n    let numAsArray2 = numAsArray.filter({$0 != \"\
    A\" && $0 != \"B\" && $0 != \"C\" && $0 != \"D\" && $0 != \"E\" && $0 != \"F\"\
    })\n    let numAsArray3 = numAsArray2.filter({$0 != \"0\"})\n    let numAsArray4\
    \ = numAsArray3.filter({$0 != \"1\"})\n    let numAsArray5 = numAsArray4.filter({$0\
    \ != \"2\"})\n    let numAsArray6 = numAsArray5.filter({$0 != \"3\"})\n    let\
    \ numAsArray7 = numAsArray6.filter({$0 != \"4\"})\n    let numAsArray8 = numAsArray7.filter({$0\
    \ != \"5\"})\n    let numAsArray9 = numAsArray8.filter({$0 != \"6\"})\n    let\
    \ numAsArray10 = numAsArray9.filter({$0 != \"7\"})\n    let numAsArray11 = numAsArray10.filter({$0\
    \ != \"8\"})\n    let numAsArray12 = numAsArray11.filter({$0 != \"9\"})\n    let\
    \ numAsArray13 = numAsArray12.filter({$0 != \"A\"})\n    let numAsArray14 = numAsArray13.filter({$0\
    \ != \"B\"})\n    let numAsArray15 = numAsArray14.filter({$0 != \"C\"})\n    let\
    \ numAsArray16 = numAsArray15.filter({$0 != \"D\"})\n    let numAsArray17 = numAsArray16.filter({$0\
    \ != \"E\"})\n    let numAsArray18 = numAsArray17.filter({$0 != \"F\"})\n    let\
    \ numAsArray19 = numAsArray18.filter({$0 != \"0\"})\n    let numAsArray20 = numAsArray19.filter({$0\
    \ != \"1\"})\n    let numAsArray21 = numAsArray20.filter({$0 != \"2\"})\n    let\
    \ numAsArray22 = numAsArray21.filter({$0 != \"3\"})\n    let numAsArray23 = numAsArray22.filter({$0\
    \ != \"4\"})\n    let numAsArray24 = numAsArray23.filter({$0 != \"5\"})\n    let\
    \ numAsArray25 = numAsArray24.filter({$0 != \"6\"})\n    let numAsArray26 = numAsArray25.filter({$0\
    \ != \"7\"})\n    let numAsArray27 = numAsArray26.filter({$0 != \"8\"})\n    let\
    \ numAsArray28 = numAsArray27.filter({", "    // Your code here\n    var hex_num:\
    \ Int = 0\n    for char in num {\n        let hex_digit = Int(String(char).uppercased(),\
    \ radix: 16)\n        hex_num = hex_num * 16 + hex_digit\n    }\n    return hex_num",
  "    var nums = num.characters\n    var count = 0\n    for index in 0..<nums.count\
    \ {\n        let char = nums[index]\n        if char == \"A\" || char == \"B\"\
    \ || char == \"C\" || char == \"D\" || char == \"E\" || char == \"F\" {\n    \
    \        count += 1\n        }\n    }\n    return count", "    // Your code here\n\
    \    var result = 0\n    var digits = num.characters\n    for digit in digits\
    \ {\n        switch digit {\n        case \"A\":\n        case \"B\":\n      \
    \  case \"C\":\n        case \"D\":\n        case \"E\":\n        case \"F\":\n\
    \            result += 1\n        default:\n            break\n        }\n   \
    \ }\n    return result", "    var nums = num.characters\n    var numsCount = nums.count\n\
    \    var numsIndex = 0\n    var hexDigits = [UInt8]()\n    var hexDigitCount =\
    \ 0\n    var hexDigitIndex = 0\n    var hexDigitCount2 = 0\n    var hexDigitIndex2\
    \ = 0\n    var hexDigitCount3 = 0\n    var hexDigitIndex3 = 0\n    var hexDigitCount4\
    \ = 0\n    var hexDigitIndex4 = 0\n    var hexDigitCount5 = 0\n    var hexDigitIndex5\
    \ = 0\n    var hexDigitCount6 = 0\n    var hexDigitIndex6 = 0\n    var hexDigitCount7\
    \ = 0\n    var hexDigitIndex7 = 0\n    var hexDigitCount8 = 0\n    var hexDigitIndex8\
    \ = 0\n    var hexDigitCount9 = 0\n    var hexDigitIndex9 = 0\n    var hexDigitCount10\
    \ = 0\n    var hexDigitIndex10 = 0\n    var hexDigitCount11 = 0\n    var hexDigitIndex11\
    \ = 0\n    var hexDigitCount12 = 0\n    var hexDigitIndex12 = 0\n    var hexDigitCount13\
    \ = 0\n    var hexDigitIndex13 = 0\n    var hexDigitCount14 = 0\n    var hexDigitIndex14\
    \ = 0\n    var hexDigitCount15 = 0\n    var hexDigitIndex15 = 0\n    var hexDigitCount16\
    \ = 0\n    var hexDigitIndex16 = 0\n    var hexDigitCount17 = 0\n    var hexDigitIndex17\
    \ = 0\n    var hexDigitCount18 = 0\n    var hexDigitIndex18 = 0\n    var hexDigitCount19\
    \ = 0\n    var hexDigitIndex19 = 0\n    var hexDigitCount20 = 0\n    var hexDigitIndex20\
    \ = 0\n    var hexDigitCount21 = 0\n    var hexDigitIndex21 = 0\n    var hexDigitCount22\
    \ = 0\n    var hexDigitIndex22 = 0\n    var hexDigitCount23 = 0\n    var hexDigitIndex23\
    \ = 0\n    var hexDigitCount24 = 0\n    var hexDigitIndex24 = 0\n    var hexDigitCount25\
    \ = 0\n    var hexDigitIndex25 = 0\n    var hexDigitCount26 = 0\n    var hexDigitIndex26\
    \ = 0\n    var hexDigitCount27 = 0\n    var hexDigitIndex27 = 0\n    var hexDigitCount28\
    \ = 0\n    var hexDigitIndex28 = 0\n    var hexDigitCount29 = 0\n    var hexDigitIndex29\
    \ = 0\n    var hexDigitCount30 = 0\n    var hexDigitIndex30 = 0\n    var hexDigitCount31\
    \ = 0\n    var hexDigitIndex31 = 0\n    var hexDigitCount32 = 0\n    var hexDigitIndex32\
    \ = 0\n    var hexDigitCount33 = 0\n    var hexDigitIndex33 = 0\n    var hexDigitCount34\
    \ = 0\n    var hexDigitIndex34 = 0\n    var hexDigitCount35 = 0\n    var hex",
  "    var sum = 0\n    for char in num {\n        let digit = Int(char) - 48\n  \
    \      sum += digit * digit\n    }\n    return sum", "    var nums = num.characters\n\
    \    var hexNums = \"\"\n    var primeNums = \"\"\n    var primeNumsCount = 0\n\
    \    var primeNumsCount2 = 0\n    var primeNumsCount3 = 0\n    var primeNumsCount4\
    \ = 0\n    var primeNumsCount5 = 0\n    var primeNumsCount6 = 0\n    var primeNumsCount7\
    \ = 0\n    var primeNumsCount8 = 0\n    var primeNumsCount9 = 0\n    var primeNumsCount10\
    \ = 0\n    var primeNumsCount11 = 0\n    var primeNumsCount12 = 0\n    var primeNumsCount13\
    \ = 0\n    var primeNumsCount14 = 0\n    var primeNumsCount15 = 0\n    var primeNumsCount16\
    \ = 0\n    var primeNumsCount17 = 0\n    var primeNumsCount18 = 0\n    var primeNumsCount19\
    \ = 0\n    var primeNumsCount20 = 0\n    var primeNumsCount21 = 0\n    var primeNumsCount22\
    \ = 0\n    var primeNumsCount23 = 0\n    var primeNumsCount24 = 0\n    var primeNumsCount25\
    \ = 0\n    var primeNumsCount26 = 0\n    var primeNumsCount27 = 0\n    var primeNumsCount28\
    \ = 0\n    var primeNumsCount29 = 0\n    var primeNumsCount30 = 0\n    var primeNumsCount31\
    \ = 0\n    var primeNumsCount32 = 0\n    var primeNumsCount33 = 0\n    var primeNumsCount34\
    \ = 0\n    var primeNumsCount35 = 0\n    var primeNumsCount36 = 0\n    var primeNumsCount37\
    \ = 0\n    var primeNumsCount38 = 0\n    var primeNumsCount39 = 0\n    var primeNumsCount40\
    \ = 0\n    var primeNumsCount41 = 0\n    var primeNumsCount42 = 0\n    var primeNumsCount43\
    \ = 0\n    var primeNumsCount44 = 0\n    var primeNumsCount45 = 0\n    var primeNumsCount46\
    \ = 0\n    var primeNumsCount47 = 0\n    var primeNumsCount48 = 0\n    var primeNumsCount49\
    \ = 0\n    var primeNumsCount50 = 0\n    var primeNumsCount51 = 0\n    var primeNumsCount52\
    \ = 0\n    var primeNumsCount53 = 0\n    var primeNumsCount54 = 0\n    var primeNumsCount55\
    \ = 0\n    var primeNumsCount56 = 0\n    var primeNumsCount57 = 0\n    var primeNumsCount58\
    \ = 0\n    var primeNumsCount59 = 0\n    var primeNumsCount60 = 0\n    var primeNumsCount61\
    \ = 0\n    var primeNumsCount62", "    \n    // Your code here\n    \n    return\
    \ 0", "    var hex = num.uppercased()\n    var count = 0\n    for char in hex\
    \ {\n        switch char {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"\
    5\", \"6\", \"7\", \"8\", \"9\":\n            count += 1\n        case \"A\",\
    \ \"B\", \"C\", \"D\", \"E\", \"F\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    let digits = num.characters\n\
    \    var count = 0\n    var prime: Int = 0\n    var prime2: Int = 0\n    var prime3:\
    \ Int = 0\n    var prime4: Int = 0\n    var prime5: Int = 0\n    var prime6: Int\
    \ = 0\n    var prime7: Int = 0\n    var prime8: Int = 0\n    var prime9: Int =\
    \ 0\n    var prime10: Int = 0\n    var prime11: Int = 0\n    var prime12: Int\
    \ = 0\n    var prime13: Int = 0\n    var prime14: Int = 0\n    var prime15: Int\
    \ = 0\n    var prime16: Int = 0\n    var prime17: Int = 0\n    var prime18: Int\
    \ = 0\n    var prime19: Int = 0\n    var prime20: Int = 0\n    var prime21: Int\
    \ = 0\n    var prime22: Int = 0\n    var prime23: Int = 0\n    var prime24: Int\
    \ = 0\n    var prime25: Int = 0\n    var prime26: Int = 0\n    var prime27: Int\
    \ = 0\n    var prime28: Int = 0\n    var prime29: Int = 0\n    var prime30: Int\
    \ = 0\n    var prime31: Int = 0\n    var prime32: Int = 0\n    var prime33: Int\
    \ = 0\n    var prime34: Int = 0\n    var prime35: Int = 0\n    var prime36: Int\
    \ = 0\n    var prime37: Int = 0\n    var prime38: Int = 0\n    var prime39: Int\
    \ = 0\n    var prime40: Int = 0\n    var prime41: Int = 0\n    var prime42: Int\
    \ = 0\n    var prime43: Int = 0\n    var prime44: Int = 0\n    var prime45: Int\
    \ = 0\n    var prime46: Int = 0\n    var prime47: Int = 0\n    var prime48: Int\
    \ = 0\n    var prime49: Int = 0\n    var prime50: Int = 0\n    var prime51: Int\
    \ = 0\n    var prime52: Int = 0\n    var prime53: Int = 0\n    var prime54: Int\
    \ = 0\n    var prime55: Int = 0\n    var prime56: Int = 0\n    var prime57: Int\
    \ = 0\n    var prime58: Int = 0\n    var prime59: Int = 0\n    var prime60: Int\
    \ = 0\n    var prime61: Int = 0\n    var prime62: Int = 0\n    var prime63: Int\
    \ = 0\n    var prime64: Int = 0\n    var prime65: Int = 0\n    var prime66: Int\
    \ = 0\n    var prime67: Int = 0\n    var prime68: Int = 0\n    var prime69: Int\
    \ = 0\n    var prime70: Int = 0\n    var prime71: Int = 0\n    var prime72: Int\
    \ = 0\n    var prime73", "    // Your code here\n    let numAsString = num.lowercased()\n\
    \    var numAsInt = Int(numAsString)\n    var numAsStringArray = [String]()\n\
    \    var numAsStringArrayIndex = 0\n    var numAsStringArrayIndex2 = 0\n    var\
    \ numAsStringArrayIndex3 = 0\n    var numAsStringArrayIndex4 = 0\n    var numAsStringArrayIndex5\
    \ = 0\n    var numAsStringArrayIndex6 = 0\n    var numAsStringArrayIndex7 = 0\n\
    \    var numAsStringArrayIndex8 = 0\n    var numAsStringArrayIndex9 = 0\n    var\
    \ numAsStringArrayIndex10 = 0\n    var numAsStringArrayIndex11 = 0\n    var numAsStringArrayIndex12\
    \ = 0\n    var numAsStringArrayIndex13 = 0\n    var numAsStringArrayIndex14 =\
    \ 0\n    var numAsStringArrayIndex15 = 0\n    var numAsStringArrayIndex16 = 0\n\
    \    var numAsStringArrayIndex17 = 0\n    var numAsStringArrayIndex18 = 0\n  \
    \  var numAsStringArrayIndex19 = 0\n    var numAsStringArrayIndex20 = 0\n    var\
    \ numAsStringArrayIndex21 = 0\n    var numAsStringArrayIndex22 = 0\n    var numAsStringArrayIndex23\
    \ = 0\n    var numAsStringArrayIndex24 = 0\n    var numAsStringArrayIndex25 =\
    \ 0\n    var numAsStringArrayIndex26 = 0\n    var numAsStringArrayIndex27 = 0\n\
    \    var numAsStringArrayIndex28 = 0\n    var numAsStringArrayIndex29 = 0\n  \
    \  var numAsStringArrayIndex30 = 0\n    var numAsStringArrayIndex31 = 0\n    var\
    \ numAsStringArrayIndex32 = 0\n    var numAsStringArrayIndex33 = 0\n    var numAsStringArrayIndex34\
    \ = 0\n    var numAsStringArrayIndex35 = 0\n    var numAsStringArrayIndex36 =\
    \ 0\n    var numAsStringArrayIndex37 = 0\n    var numAsStringArrayIndex38 = 0\n\
    \    var numAsStringArrayIndex39 = 0\n    var numAsStringArrayIndex40 = 0\n  \
    \  var numAsStringArrayIndex41 = 0\n    var numAsStringArrayIndex42 = 0\n    var\
    \ numAsStringArrayIndex43 = 0\n    var numAsStringArrayIndex44 = 0\n    var numAsStringArrayIndex45\
    \ = 0\n    var numAsStringArrayIndex46 = 0\n    var numAsStringArrayIndex47 =\
    \ 0\n    var numAsStringArrayIndex48 = 0\n    var numAsStringArrayIndex49 = 0\n\
    \    var numAsStringArrayIndex50 = 0\n    var numAsStringArrayIndex51 = 0\n  \
    \  var numAsStringArrayIndex52 = 0\n    var numAsStringArrayIndex53 = 0\n    var\
    \ num", "    var nums = num.characters\n    var result = 0\n    var i = 0\n  \
    \  for char in nums {\n        switch char {\n        case \"A\":\n        case\
    \ \"B\":\n        case \"C\":\n        case \"D\":\n        case \"E\":\n    \
    \    case \"F\":\n            result += 2\n        default:\n            result\
    \ += 3\n        }\n        i += 1\n    }\n    return result", "    let numAsString\
    \ = num.lowercased()\n    let numAsArray = numAsString.characters\n    let numAsArray2\
    \ = numAsArray.filter({$0 != \"A\" && $0 != \"B\" && $0 != \"C\" && $0 != \"D\"\
    \ && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray3 = numAsArray2.filter({$0\
    \ != \"0\"})\n    let numAsArray4 = numAsArray3.filter({$0 != \"1\"})\n    let\
    \ numAsArray5 = numAsArray4.filter({$0 != \"2\"})\n    let numAsArray6 = numAsArray5.filter({$0\
    \ != \"3\"})\n    let numAsArray7 = numAsArray6.filter({$0 != \"4\"})\n    let\
    \ numAsArray8 = numAsArray7.filter({$0 != \"5\"})\n    let numAsArray9 = numAsArray8.filter({$0\
    \ != \"6\"})\n    let numAsArray10 = numAsArray9.filter({$0 != \"7\"})\n    let\
    \ numAsArray11 = numAsArray10.filter({$0 != \"8\"})\n    let numAsArray12 = numAsArray11.filter({$0\
    \ != \"9\"})\n    let numAsArray13 = numAsArray12.filter({$0 != \"A\"})\n    let\
    \ numAsArray14 = numAsArray13.filter({$0 != \"B\"})\n    let numAsArray15 = numAsArray14.filter({$0\
    \ != \"C\"})\n    let numAsArray16 = numAsArray15.filter({$0 != \"D\"})\n    let\
    \ numAsArray17 = numAsArray16.filter({$0 != \"E\"})\n    let numAsArray18 = numAsArray17.filter({$0\
    \ != \"F\"})\n    let numAsArray19 = numAsArray18.filter({$0 != \"A\"})\n    let\
    \ numAsArray20 = numAsArray19.filter({$0 != \"B\"})\n    let numAsArray21 = numAsArray20.filter({$0\
    \ != \"C\"})\n    let numAsArray22 = numAsArray21.filter({$0 != \"D\"})\n    let\
    \ numAsArray23 = numAsArray22.filter({$0 != \"E\"})\n    let numAsArray24 = numAsArray23.filter({$0\
    \ != \"F\"})\n    let numAsArray25 = numAsArray24.filter({$0 != \"0\"})\n    let\
    \ numAsArray26 = numAsArray25.filter({$0 != \"1\"})\n    let numAsArray27 = numAsArray26.filter({$0\
    \ != \"2\"})\n    let numAsArray28 = numAsArray27.filter({", "    var count =\
    \ 0\n    var digits = num.characters\n    for digit in digits {\n        if digit\
    \ == \"A\" {\n            count += 2\n        } else if digit == \"B\" {\n   \
    \         count += 1\n        } else if digit == \"C\" {\n            count +=\
    \ 3\n        } else if digit == \"D\" {\n            count += 5\n        } else\
    \ if digit == \"E\" {\n            count += 7\n        } else if digit == \"F\"\
    \ {\n            count += 11\n        } else {\n            count += 1\n     \
    \   }\n    }\n    return count", "    var result = 0\n    for char in num {\n\
    \        switch char {\n        case \"A\": result += 1\n        case \"B\": result\
    \ += 1\n        case \"C\": result += 1\n        case \"D\": result += 1\n   \
    \     case \"E\": result += 1\n        case \"F\": result += 1\n        default:\n\
    \            break\n        }\n    }\n    return result", "    var sum = 0\n \
    \   var digits = num.characters\n    for digit in digits {\n        sum += Int(digit)\n\
    \    }\n    if sum % 2 == 0 {\n        return sum / 2\n    }\n    return sum",
  "    var result = 0\n    var digits = num.characters\n    for digit in digits {\n\
    \        switch digit {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\"\
    , \"6\", \"7\", \"8\", \"9\":\n            result += 1\n        case \"A\", \"\
    B\", \"C\", \"D\", \"E\", \"F\":\n            result += 1\n        default:\n\
    \            break\n        }\n    }\n    return result", "    var nums = num.characters\n\
    \    var result = 0\n    var primes = Set<Int>()\n    var primesCount = 2\n  \
    \  var primesCountMax = primes.count\n    for _ in 0..<primesCountMax {\n    \
    \    primes.insert(0)\n    }\n    for numIndex in 0..<nums.count {\n        let\
    \ num = nums[numIndex]\n        if num == hexDigits.first {\n            primes[hexDigits.count]\
    \ = hexDigits.count\n            primesCount += 1\n        }\n        else {\n\
    \            let prime = primes[hexDigits.count]\n            if num == hexDigits.last!\
    \ {\n                primes[prime] = hexDigits.count\n                primesCount\
    \ += 1\n            }\n            else {\n                let prime2 = primes[prime]\n\
    \                if num == hexDigits.last! {\n                    primes[prime2]\
    \ = hexDigits.count\n                    primesCount += 1\n                }\n\
    \                else {\n                    let prime3 = primes[prime2]\n   \
    \                 if num == hexDigits.last! {\n                        primes[prime3]\
    \ = hexDigits.count\n                        primesCount += 1\n              \
    \      }\n                    else {\n                        let prime4 = primes[prime3]\n\
    \                        if num == hexDigits.last! {\n                       \
    \     primes[prime4] = hexDigits.count\n                            primesCount\
    \ += 1\n                        }\n                        else {\n          \
    \                  let prime5 = primes[prime4]\n                            if\
    \ num == hexDigits.last! {\n                                primes[prime5] = hexDigits.count\n\
    \                                primesCount += 1\n                          \
    \  }\n                            else {\n                                let\
    \ prime6 = primes[prime5]\n                                if num == hexDigits.last!\
    \ {\n                                    primes[prime6] = hexDigits.count\n  \
    \                                  primesCount += 1\n                        \
    \        }\n                                else {\n                         \
    \           let prime7 = primes[prime6]\n                                    if\
    \ num == hexDigits.last! {\n                                        primes[prime7]\
    \ = hexDigits.count\n                                        primesCount += 1\n\
    \                                    }\n                                    else\
    \ {\n                                        let prime8 = primes[prime7]\n   \
    \                                     if num == hexDigits.last! {\n          \
    \                                  primes[prime8] = hexDigits.count\n        \
    \                                    primesCount += 1\n                      \
    \                  }\n                                        else {\n       \
    \                                     let prime9 = primes[prime8]\n          \
    \                                  if num == hexDigits.last! {\n             \
    \                                   primes[prime9] = hexDigits.count\n       \
    \                                         primesCount += 1\n                 \
    \                           }\n                                            else\
    \ {\n                                                let prime10 = primes[prime9]\n\
    \                                                if num == hexDigits.last! {\n\
    \                                                    primes[prime10] = hexDigits.count\n\
    \                                                    ", "    var sum = 0\n   \
    \ for char in num {\n        sum += Int(char) - 48\n    }\n    if sum % 2 == 0\
    \ {\n        return sum\n    }\n    return sum + 1", "    var count = 0\n    var\
    \ digit = 0\n    var hex = num.stringByTrimmingCharactersInSet(NSCharacterSet.whitespaceAndNewlineCharacterSet())\n\
    \    var hexDigits = [UInt8]()\n    var hexDigit = UInt8(0)\n    var hexDigitString\
    \ = String()\n    var hexDigitStringLength = hexDigitString.length\n    var hexDigitStringArray\
    \ = [String]()\n    var hexDigitStringArrayLength = hexDigitStringArray.length\n\
    \    var hexDigitStringArrayIndex = 0\n    var hexDigitStringArrayIndexLength\
    \ = 0\n    var hexDigitStringArrayIndexValue = 0\n    var hexDigitStringArrayIndexValueLength\
    \ = 0\n    var hexDigitStringArrayIndexValueLength2 = 0\n    var hexDigitStringArrayIndexValueLength3\
    \ = 0\n    var hexDigitStringArrayIndexValueLength4 = 0\n    var hexDigitStringArrayIndexValueLength5\
    \ = 0\n    var hexDigitStringArrayIndexValueLength6 = 0\n    var hexDigitStringArrayIndexValueLength7\
    \ = 0\n    var hexDigitStringArrayIndexValueLength8 = 0\n    var hexDigitStringArrayIndexValueLength9\
    \ = 0\n    var hexDigitStringArrayIndexValueLength10 = 0\n    var hexDigitStringArrayIndexValueLength11\
    \ = 0\n    var hexDigitStringArrayIndexValueLength12 = 0\n    var hexDigitStringArrayIndexValueLength13\
    \ = 0\n    var hexDigitStringArrayIndexValueLength14 = 0\n    var hexDigitStringArrayIndexValueLength15\
    \ = 0\n    var hexDigitStringArrayIndexValueLength16 = 0\n    var hexDigitStringArrayIndexValueLength17\
    \ = 0\n    var hexDigitStringArrayIndexValueLength18 = 0\n    var hexDigitStringArrayIndexValueLength19\
    \ = 0\n    var hexDigitStringArrayIndexValueLength20 = 0\n    var hexDigitStringArrayIndexValueLength21\
    \ = 0\n    var hexDigitStringArrayIndexValueLength22 = 0\n    var hexDigitStringArrayIndexValueLength23\
    \ = 0\n    var hexDigitStringArrayIndexValueLength24 = 0\n    var hexDigitStringArrayIndexValueLength25\
    \ = 0\n    var hexDigitStringArrayIndexValueLength26 = 0\n    var hexDigitStringArrayIndexValueLength27\
    \ = 0\n    var hexDigitStringArrayIndexValueLength28 = 0\n    var hexDigitStringArrayIndexValueLength29\
    \ = 0\n    var hexDigitStringArrayIndexValueLength30 = 0\n    var hexDigitStringArrayIndexValueLength31\
    \ = 0\n    var hexDigitStringArrayIndexValueLength32 = 0\n    var hexDigitStringArrayIndexValueLength33\
    \ = 0\n    var hexDigitStringArrayIndexValueLength34 = 0\n    var hexDigitStringArrayIndexValueLength35\
    \ = 0\n    var hexDigitStringArrayIndexValueLength36 = 0\n    var hexDigitString",
  "    var result = 0\n    var digits = num.characters\n    for digit in digits {\n\
    \        switch digit {\n        case \"0\": result += 1\n        case \"1\":\
    \ result += 1\n        case \"2\": result += 1\n        case \"3\": result +=\
    \ 1\n        case \"4\": result += 1\n        case \"5\": result += 1\n      \
    \  case \"6\": result += 1\n        case \"7\": result += 1\n        case \"8\"\
    : result += 1\n        case \"9\": result += 1\n        case \"A\": result +=\
    \ 1\n        case \"B\": result += 1\n        case \"C\": result += 1\n      \
    \  case \"D\": result += 1\n        case \"E\": result += 1\n        case \"F\"\
    : result += 1\n        default: break\n        }\n    }\n    return result", " \
    \   var hex = num.stringByReplacingOccurrencesOfString(\" \", withString: \"\"\
    , options: NSStringCompareOptions.LiteralSearch, range: nil)\n    hex = hex.stringByReplacingOccurrencesOfString(\"\
    #\", withString: \"\", options: NSStringCompareOptions.LiteralSearch, range: nil)\n\
    \    var hexDigits: [String] = []\n    for char in hex {\n        hexDigits.append(String(char))\n\
    \    }\n    var hexDigitCount = hexDigits.count\n    var hexDigitPrimes: [String]\
    \ = []\n    for index in 0..<hexDigitCount {\n        var hexDigit = hexDigits[index]\n\
    \        var hexDigitPrime = true\n        for index2 in 0..<hexDigitCount {\n\
    \            if index2 != index {\n                var hexDigit2 = hexDigits[index2]\n\
    \                if hexDigit == hexDigit2 {\n                    hexDigitPrime\
    \ = false\n                    break\n                }\n            }\n     \
    \   }\n        if hexDigitPrime {\n            hexDigitPrimes.append(hexDigit)\n\
    \        }\n    }\n    var hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitPrimeCount\
    \ == hexDigitCount {\n        return hexDigitPrimeCount\n    }\n    return 0",
  "    var hexDigits: [Int] = []\n    var digit: Int = 0\n    var isPrime: Bool =\
    \ false\n    var isHexDigit: Bool = false\n    var isHexDigitUppercase: Bool =\
    \ false\n    var isHexDigitLowercase: Bool = false\n    var isHexDigitDigit: Bool\
    \ = false\n    var isHexDigitDigitUppercase: Bool = false\n    var isHexDigitDigitLowercase:\
    \ Bool = false\n    var isHexDigitDigitDigit: Bool = false\n    var isHexDigitDigitDigitUppercase:\
    \ Bool = false\n    var isHexDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigitUppercase: Bool = false\n   \
    \ var isHexDigitDigitDigitDigitLowercase: Bool = false\n    var isHexDigitDigitDigitDigitDigit:\
    \ Bool = false\n    var isHexDigitDigitDigitDigit", "    var nums = num.characters\n\
    \    var count = 0\n    for _ in 0..<nums.count {\n        let hex = nums[_]\n\
    \        switch hex {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\",\
    \ \"6\", \"7\", \"8\", \"9\":\n            count += 1\n        case \"A\", \"\
    B\", \"C\", \"D\", \"E\", \"F\":\n            count += 1\n        default:\n \
    \           break\n        }\n    }\n    return count", "    var result = 0\n\
    \    var digits = num.characters\n    for digit in digits {\n        if digit\
    \ == \"A\" || digit == \"B\" || digit == \"C\" || digit == \"D\" || digit == \"\
    E\" || digit == \"F\" {\n            result += 2\n        }\n        result +=\
    \ Int(digit) - 48\n    }\n    return result", "    // Your code here\n    \n \
    \   return 0", "    var nums = num.characters\n    var result = 0\n    for index\
    \ in 0..<nums.count {\n        let char = nums[index]\n        switch char {\n\
    \        case \"0\":\n        case \"1\":\n        case \"2\":\n        case \"\
    3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n        case\
    \ \"7\":\n        case \"8\":\n        case \"9\":\n        case \"A\":\n    \
    \    case \"B\":\n        case \"C\":\n        case \"D\":\n        case \"E\"\
    :\n        case \"F\":\n            result += 1\n        default:\n          \
    \  break\n        }\n    }\n    return result", "    let numAsStr = num.lowercased()\n\
    \    let numAsInt = Int(numAsStr)\n    let numAsHex = numAsInt.hexDigit\n    let\
    \ numAsHexAsInt = Int(numAsHex)\n    let numAsHexAsString = String(numAsHexAsInt)\n\
    \    let numAsHexAsStringAsInt = Int(numAsHexAsString)\n    let numAsHexAsStringAsString\
    \ = String(numAsHexAsStringAsInt)\n    let numAsHexAsStringAsStringAsInt = Int(numAsHexAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsString = String(numAsHexAsStringAsStringAsInt)\n\
    \    let numAsHexAsStringAsStringAsStringAsInt = Int(numAsHexAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsString = String(numAsHexAsStringAsStringAsStringAsInt)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsInt = Int(numAsHexAsStringAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsString = String(numAsHexAsStringAsStringAsStringAsStringAsInt)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsInt = Int(numAsHexAsStringAsStringAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsString = String(numAsHexAsStringAsStringAsStringAsStringAsStringAsInt)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsInt = Int(numAsHexAsStringAsStringAsStringAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsString = String(numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsInt)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsInt\
    \ = Int(numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsInt\
    \ = Int(numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsString)\n\
    \    let numAsHexAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsStringAsInt\
    \ = Int(numAsHexAsStringAsStringAsStringAsStringAsString", "    let digits = num.characters\n\
    \    var count = 0\n    for digit in digits {\n        let hex = Int(digit, radix:\
    \ 16)\n        if hex == 0 || hex == 1 {\n            continue\n        }\n  \
    \      let prime = hex_key(hex)\n        if prime > 1 {\n            count +=\
    \ 1\n        }\n    }\n    return count", "    var sum = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        sum += Int(digit)\n    }\n    if sum % 2 ==\
    \ 0 {\n        return sum / 2\n    }\n    return sum", "    var count = 0\n  \
    \  for c in num {\n        if c >= '0' && c <= '9' {\n            count += c -\
    \ '0'\n        } else if c >= 'A' && c <= 'F' {\n            count += 10 + c -\
    \ 'A'\n        } else if c >= 'a' && c <= 'f' {\n            count += 10 + c -\
    \ 'a'\n        }\n    }\n    return count", "    var nums = num.characters\n \
    \   var result = 0\n    var primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31,\
    \ 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n    var primesSet =\
    \ Set(primes)\n    var primesSetCount = primesSet.count\n    var primesSetSum\
    \ = primesSet.sum\n    var primesSetSumCount = primesSetSum.count\n    var primesSetSumSum\
    \ = primesSetSum.sum\n    var primesSetSumSumCount = primesSetSumSum.count\n \
    \   var primesSetSumSumSum = primesSetSumSum.sum\n    var primesSetSumSumSumCount\
    \ = primesSetSumSumSum.count\n    var primesSetSumSumSumSum = primesSetSumSumSum.sum\n\
    \    var primesSetSumSumSumSumCount = primesSetSumSumSumSum.count\n    var primesSetSumSumSumSumSum\
    \ = primesSetSumSumSumSum.sum\n    var primesSetSumSumSumSumSumCount = primesSetSumSumSumSumSum.count\n\
    \    var primesSetSumSumSumSumSum = primesSetSumSumSumSumSum.sum\n    var primesSetSumSumSumSumSumCount\
    \ = primesSetSumSumSumSumSum.count\n    var primesSetSumSumSumSumSumSum = primesSetSumSumSumSumSumSum.sum\n\
    \    var primesSetSumSumSumSumSumCount = primesSetSumSumSumSumSumSum.count\n \
    \   var primesSetSumSumSumSumSumSumSum = primesSetSumSumSumSumSumSum.sum\n   \
    \ var primesSetSumSumSumSumSumSumCount = primesSetSumSumSumSumSumSum.count\n \
    \   var primesSetSumSumSumSumSumSumSum = primesSetSumSumSumSumSumSumSum.sum\n\
    \    var primesSetSumSumSumSumSumSumSumCount = primesSetSumSumSumSumSumSumSum.count\n\
    \    var primesSetSumSumSumSumSumSumSum = primesSetSumSumSumSumSumSumSum.sum\n\
    \    var primesSetSumSumSumSumSumSumSumCount = primesSetSumSumSumSumSumSumSum.count\n\
    \    var primesSetSumSumSumSumSumSumSumSum = primesSetSumSumSumSumSumSumSumSum.sum\n\
    \    var primesSetSumSumSumSumSumSumSumCount = primesSetSumSumSumSumSumSum", " \
    \   var hex = num.unicodeScalars\n    var hexString = \"\"\n    for _ in 0..<hex.count\
    \ {\n        hexString += String(hex[hex.startIndex])\n    }\n    \n    var primes\
    \ = Set<Int>()\n    var primesCount = 0\n    \n    for _ in 0..<hexString.count\
    \ {\n        let hexDigit = hexString[hexString.startIndex]\n        \n      \
    \  if hexDigit == \"A\" {\n            primes.insert(2)\n            primesCount\
    \ += 1\n        } else if hexDigit == \"B\" {\n            primes.insert(3)\n\
    \            primesCount += 1\n        } else if hexDigit == \"C\" {\n       \
    \     primes.insert(5)\n            primesCount += 1\n        } else if hexDigit\
    \ == \"D\" {\n            primes.insert(7)\n            primesCount += 1\n   \
    \     } else if hexDigit == \"E\" {\n            primes.insert(11)\n         \
    \   primesCount += 1\n        } else if hexDigit == \"F\" {\n            primes.insert(13)\n\
    \            primesCount += 1\n        } else {\n            primes.insert(Int(hexDigit)!)\n\
    \            primesCount += 1\n        }\n    }\n    \n    return primesCount",
  "    let numAsString = num.lowercased()\n    var numAsInt: Int = 0\n    for i in\
    \ 0..<numAsString.characters.count {\n        let c = numAsString.character(at:\
    \ i)\n        if c >= '0' && c <= '9' {\n            numAsInt = numAsInt * 16\
    \ + Int(c - UInt('0'))\n        } else if c == 'A' || c == 'B' || c == 'C' ||\
    \ c == 'D' || c == 'E' || c == 'F' {\n            numAsInt = numAsInt * 16 + Int(c\
    \ - UInt('A') + 10)\n        }\n    }\n    return numAsInt", "    var hexDigits\
    \ = [String]()\n    var count = 0\n    for c in num {\n        hexDigits.append(String(format:\
    \ \"%c\", c))\n    }\n    for h in hexDigits {\n        if h == \"A\" {\n    \
    \        count += 1\n        } else if h == \"B\" {\n            count += 1\n\
    \        } else if h == \"C\" {\n            count += 1\n        } else if h ==\
    \ \"D\" {\n            count += 1\n        } else if h == \"E\" {\n          \
    \  count += 1\n        } else if h == \"F\" {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var hex = num.unicodeScalars\n    var hexString\
    \ = \"\"\n    for char in hex {\n        hexString += String(char)\n    }\n  \
    \  var hexStringArray = hexString.characters\n    var hexStringArrayCount = hexStringArray.count\n\
    \    var hexStringArrayCount2 = hexStringArrayCount / 2\n    var hexStringArrayCount3\
    \ = hexStringArrayCount2 / 2\n    var hexStringArrayCount4 = hexStringArrayCount3\
    \ / 2\n    var hexStringArrayCount5 = hexStringArrayCount4 / 2\n    var hexStringArrayCount6\
    \ = hexStringArrayCount5 / 2\n    var hexStringArrayCount7 = hexStringArrayCount6\
    \ / 2\n    var hexStringArrayCount8 = hexStringArrayCount7 / 2\n    var hexStringArrayCount9\
    \ = hexStringArrayCount8 / 2\n    var hexStringArrayCount10 = hexStringArrayCount9\
    \ / 2\n    var hexStringArrayCount11 = hexStringArrayCount10 / 2\n    var hexStringArrayCount12\
    \ = hexStringArrayCount11 / 2\n    var hexStringArrayCount13 = hexStringArrayCount12\
    \ / 2\n    var hexStringArrayCount14 = hexStringArrayCount13 / 2\n    var hexStringArrayCount15\
    \ = hexStringArrayCount14 / 2\n    var hexStringArrayCount16 = hexStringArrayCount15\
    \ / 2\n    var hexStringArrayCount17 = hexStringArrayCount16 / 2\n    var hexStringArrayCount18\
    \ = hexStringArrayCount17 / 2\n    var hexStringArrayCount19 = hexStringArrayCount18\
    \ / 2\n    var hexStringArrayCount20 = hexStringArrayCount19 / 2\n    var hexStringArrayCount21\
    \ = hexStringArrayCount20 / 2\n    var hexStringArrayCount22 = hexStringArrayCount21\
    \ / 2\n    var hexStringArrayCount23 = hexStringArrayCount22 / 2\n    var hexStringArrayCount24\
    \ = hexStringArrayCount23 / 2\n    var hexStringArrayCount25 = hexStringArrayCount24\
    \ / 2\n    var hexStringArrayCount26 = hexStringArrayCount25 / 2\n    var hexStringArrayCount27\
    \ = hexStringArrayCount26 / 2\n    var hexStringArrayCount28 = hexStringArrayCount27\
    \ / 2\n    var hexStringArrayCount29 = hexStringArrayCount28 / 2\n    var hexStringArrayCount30\
    \ = hexStringArrayCount29 / 2\n    var hexStringArrayCount31 = hexStringArrayCount30\
    \ / 2\n    var hexStringArrayCount32 = hexStringArrayCount31 / 2\n    var hexStringArrayCount33\
    \ = hexStringArrayCount32 / ", "    var nums = num.characters\n    var count =\
    \ 0\n    for _ in 0..<nums.count {\n        let hex = nums[_]\n        switch\
    \ hex {\n        case \"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\",\
    \ \"8\", \"9\":\n            count += 1\n        case \"A\", \"B\", \"C\", \"\
    D\", \"E\", \"F\":\n            count += 1\n        default:\n            break\n\
    \        }\n    }\n    return count", "    var count = 0\n    for c in num {\n\
    \        switch c {\n        case \"0\":\n        case \"1\":\n        case \"\
    2\":\n        case \"3\":\n        case \"4\":\n        case \"5\":\n        case\
    \ \"6\":\n        case \"7\":\n        case \"8\":\n        case \"9\":\n    \
    \    case \"A\":\n        case \"B\":\n        case \"C\":\n        case \"D\"\
    :\n        case \"E\":\n        case \"F\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    let hex = num.trimmingCharacters(in:\
    \ CharacterSet.alphanumerics.inverted)\n    let hexDigits = hex.unicodeScalars.map\
    \ { String($0) }\n    let hexDigitCount = hexDigits.count\n    let hexDigitPrimes\
    \ = hexDigits.filter { isPrime($0) }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    let hexDigitPrimePrimes = hexDigitPrimes.filter { isPrime($0) }\n    let\
    \ hexDigitPrimePrimeCount = hexDigitPrimePrimes.count\n    let hexDigitPrimePrimePrimes\
    \ = hexDigitPrimePrimes.filter { isPrime($0) }\n    let hexDigitPrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimePrimes.filter\
    \ { isPrime($0) }\n    let hexDigitPrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimes.filter\
    \ { isPrime($0) }\n    let hexDigitPrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimes.filter\
    \ { isPrime($0) }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { isPrime($0) }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimeCount =\
    \ hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter { isPrime($0)\
    \ }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePri",
  "    var count = 0\n    var digits = num.characters\n    for i in 0..<digits.count\
    \ {\n        let digit = digits[i]\n        if digit == \"A\" || digit == \"B\"\
    \ || digit == \"C\" || digit == \"D\" || digit == \"E\" || digit == \"F\" {\n\
    \            count += 1\n        }\n    }\n    return count", "    let digits\
    \ = num.characters\n    let hexDigits = digits.map { String($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { $0.isPrime }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    let hexDigitPrimePrimes\
    \ = hexDigitPrimes.filter { $0.isPrime && $0.isPrime }\n    let hexDigitPrimePrimeCount\
    \ = hexDigitPrimePrimes.count\n    let hexDigitPrimePrimePrimePrimes = hexDigitPrimePrimes.filter\
    \ { $0.isPrime && $0.isPrime && $0.isPrime }\n    let hexDigitPrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimes.count\n    let hexDigitPrimePrimePrimePrimePrimePrimes\
    \ = hexDigitPrimePrimePrimePrimes.filter { $0.isPrime && $0.isPrime && $0.isPrime\
    \ && $0.isPrime }\n    let hexDigitPrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0.isPrime && $0.isPrime && $0.isPrime && $0.isPrime && $0.isPrime }\n   \
    \ let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimeCount = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimes.count\n\
    \    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.filter\
    \ { $0.isPrime && $0.isPrime && $0.isPrime && $0.isPrime && $0.isPrime && $0.isPrime\
    \ }\n    let hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = hexDigitPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimes.count\n",
  "    var nums = num.characters\n    var count = 0\n    for num in nums {\n     \
    \   if nums.contains(where: { $0 == num }) {\n            count += 1\n       \
    \ }\n    }\n    return count", "    var result = 0\n    var digits = num.characters\n\
    \    for digit in digits {\n        switch digit {\n        case \"0\": result\
    \ = result + 0\n        case \"1\": result = result + 1\n        case \"2\": result\
    \ = result + 2\n        case \"3\": result = result + 3\n        case \"4\": result\
    \ = result + 4\n        case \"5\": result = result + 5\n        case \"6\": result\
    \ = result + 6\n        case \"7\": result = result + 7\n        case \"8\": result\
    \ = result + 8\n        case \"9\": result = result + 9\n        case \"A\": result\
    \ = result + 10\n        case \"B\": result = result + 11\n        case \"C\"\
    : result = result + 12\n        case \"D\": result = result + 13\n        case\
    \ \"E\": result = result + 14\n        case \"F\": result = result + 15\n    \
    \    default: break\n        }\n    }\n    return result", "    var nums = [Int]()\n\
    \    var i = 0\n    for c in num {\n        switch c {\n        case \"A\": nums.append(0)\n\
    \        case \"B\": nums.append(1)\n        case \"C\": nums.append(2)\n    \
    \    case \"D\": nums.append(3)\n        case \"E\": nums.append(4)\n        case\
    \ \"F\": nums.append(5)\n        default:\n            if c >= \"0\" && c <= \"\
    9\" {\n                nums.append(c - \"0\")\n            } else {\n        \
    \        nums.append(0)\n            }\n        }\n        i += 1\n    }\n   \
    \ return nums.count", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hex = hex.lowercased()\n    let hex = hex.unicodeScalars.filter { $0.value\
    \ > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n  \
    \  let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex = hex.unicodeScalars.filter { $0.value > 0 }\n    let hex = hex.map\
    \ { String($0) }\n    let hex = hex.joined()\n    let hex = hex.unicodeScalars.filter\
    \ { $0.value > 0 }\n    let hex = hex.map { String($0) }\n    let hex = hex.joined()\n\
    \    let hex", "    var nums = num.characters\n    var count = 0\n    var prime\
    \ = 0\n    var prime_digit = 0\n    var prime_digit_count = 0\n    var prime_digit_sum\
    \ = 0\n    var prime_digit_sum2 = 0\n    var prime_digit_sum3 = 0\n    var prime_digit_sum4\
    \ = 0\n    var prime_digit_sum5 = 0\n    var prime_digit_sum6 = 0\n    var prime_digit_sum7\
    \ = 0\n    var prime_digit_sum8 = 0\n    var prime_digit_sum9 = 0\n    var prime_digit_sum10\
    \ = 0\n    var prime_digit_sum11 = 0\n    var prime_digit_sum12 = 0\n    var prime_digit_sum13\
    \ = 0\n    var prime_digit_sum14 = 0\n    var prime_digit_sum15 = 0\n    var prime_digit_sum16\
    \ = 0\n    var prime_digit_sum17 = 0\n    var prime_digit_sum18 = 0\n    var prime_digit_sum19\
    \ = 0\n    var prime_digit_sum20 = 0\n    var prime_digit_sum21 = 0\n    var prime_digit_sum22\
    \ = 0\n    var prime_digit_sum23 = 0\n    var prime_digit_sum24 = 0\n    var prime_digit_sum25\
    \ = 0\n    var prime_digit_sum26 = 0\n    var prime_digit_sum27 = 0\n    var prime_digit_sum28\
    \ = 0\n    var prime_digit_sum29 = 0\n    var prime_digit_sum30 = 0\n    var prime_digit_sum31\
    \ = 0\n    var prime_digit_sum32 = 0\n    var prime_digit_sum33 = 0\n    var prime_digit_sum34\
    \ = 0\n    var prime_digit_sum35 = 0\n    var prime_digit_sum36 = 0\n    var prime_digit_sum37\
    \ = 0\n    var prime_digit_sum38 = 0\n    var prime_digit_sum39 = 0\n    var prime_digit_sum40\
    \ = 0\n    var prime_digit_sum41 = 0\n    var prime_digit_sum42 = 0\n    var prime_digit_sum43\
    \ = 0\n    var prime_digit_sum44 = 0\n    var prime_digit_sum45 = 0\n    var prime_digit_sum46\
    \ = 0\n    var prime_digit_sum47 = 0\n    var prime_digit_sum48 = 0\n    var prime_digit_sum49\
    \ = 0\n    var prime_digit_sum50 = 0\n    var prime_digit_sum51 = 0\n    var prime_digit_sum52\
    \ = 0\n    var prime_digit_sum53 = 0\n    var prime_digit_sum54 = 0\n    var prime_digit_sum55\
    \ = 0\n    var prime_digit_sum56 = 0\n    var prime_digit_sum57 = 0\n    var prime_digit_sum58\
    \ = 0\n    var prime_digit_sum59 = 0\n    var prime_digit_sum60 = 0\n    var prime_digit_sum61\
    \ = 0", "    var sum = 0\n    var digits = num.characters\n    for digit in digits\
    \ {\n        sum += Int(digit) - 48\n    }\n    return sum", "    let digits =\
    \ num.characters\n    var count = 0\n    for digit in digits {\n        switch\
    \ digit {\n        case \"0\":\n        case \"1\":\n        case \"2\":\n   \
    \     case \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\"\
    :\n        case \"7\":\n        case \"8\":\n        case \"9\":\n        case\
    \ \"A\":\n        case \"B\":\n        case \"C\":\n        case \"D\":\n    \
    \    case \"E\":\n        case \"F\":\n            count += 1\n        default:\n\
    \            break\n        }\n    }\n    return count", "    guard let num =\
    \ num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted) else {\n   \
    \     return 0\n    }\n    var count = 0\n    var prime = 0\n    var prime2 =\
    \ 0\n    var prime3 = 0\n    var prime4 = 0\n    var prime5 = 0\n    var prime6\
    \ = 0\n    var prime7 = 0\n    var prime8 = 0\n    var prime9 = 0\n    var prime10\
    \ = 0\n    var prime11 = 0\n    var prime12 = 0\n    var prime13 = 0\n    var\
    \ prime14 = 0\n    var prime15 = 0\n    var prime16 = 0\n    var prime17 = 0\n\
    \    var prime18 = 0\n    var prime19 = 0\n    var prime20 = 0\n    var prime21\
    \ = 0\n    var prime22 = 0\n    var prime23 = 0\n    var prime24 = 0\n    var\
    \ prime25 = 0\n    var prime26 = 0\n    var prime27 = 0\n    var prime28 = 0\n\
    \    var prime29 = 0\n    var prime30 = 0\n    var prime31 = 0\n    var prime32\
    \ = 0\n    var prime33 = 0\n    var prime34 = 0\n    var prime35 = 0\n    var\
    \ prime36 = 0\n    var prime37 = 0\n    var prime38 = 0\n    var prime39 = 0\n\
    \    var prime40 = 0\n    var prime41 = 0\n    var prime42 = 0\n    var prime43\
    \ = 0\n    var prime44 = 0\n    var prime45 = 0\n    var prime46 = 0\n    var\
    \ prime47 = 0\n    var prime48 = 0\n    var prime49 = 0\n    var prime50 = 0\n\
    \    var prime51 = 0\n    var prime52 = 0\n    var prime53 = 0\n    var prime54\
    \ = 0\n    var prime55 = 0\n    var prime56 = 0\n    var prime57 = 0\n    var\
    \ prime58 = 0\n    var prime59 = 0\n    var prime60 = 0\n    var prime61 = 0\n\
    \    var prime62 = 0\n    var prime63 = 0\n    var prime64 = 0\n    var prime65\
    \ = 0\n    var prime66 = 0\n    var prime67 = 0\n    var prime68 = 0\n    var\
    \ prime69 = 0\n    var prime70 = 0\n    var prime71 = 0\n    var prime72 = 0\n\
    \    var prime73 = 0\n    var prime74 = 0\n    var prime75 = 0\n    var prime76\
    \ = 0\n    var prime77 = 0\n    var prime78 = 0\n    var prime79 = 0\n    var\
    \ prime80 = 0\n    var prime81 = 0\n    var prime82 = 0\n    var prime83 = 0\n\
    \    var prime84 = 0\n    var prime85 = 0\n    var prime86 = 0\n    var prime87\
    \ = 0\n    var prime88 = 0\n    var prime89 = 0\n    var prime90 = 0\n    var\
    \ prime91 = 0\n    var prime92 = 0\n    var prime93 = 0\n    var prime94 = 0\n\
    \    var prime95 = 0\n    var prime96 = 0\n    var prime", "    var nums = [Int]()\n\
    \    var i = 0\n    for c in num {\n        if c >= '0' && c <= '9' {\n      \
    \      nums.append(c - '0')\n        }\n    }\n    for num in nums {\n       \
    \ if num % 2 == 0 {\n            return num\n        }\n    }\n    return 0",
  "    var count = 0\n    var digits = \"\"\n    for char in num {\n        switch\
    \ char {\n        case \"A\":\n            digits = \"ABCDEF\"\n        case \"\
    B\":\n            digits = \"ABCDEF\"\n        case \"C\":\n            digits\
    \ = \"ABCDEF\"\n        case \"D\":\n            digits = \"ABCDEF\"\n       \
    \ case \"E\":\n            digits = \"ABCDEF\"\n        case \"F\":\n        \
    \    digits = \"ABCDEF\"\n        default:\n            digits = \"\"\n      \
    \  }\n        if digits.contains(char) {\n            count += 1\n        }\n\
    \    }\n    return count", "    // Your code here\n    \n    return 0", "    var\
    \ result = 0\n    var digits = num.characters\n    for digit in digits {\n   \
    \     if digit == \"A\" {\n            result += 1\n        } else if digit ==\
    \ \"B\" {\n            result += 2\n        } else if digit == \"C\" {\n     \
    \       result += 3\n        } else if digit == \"D\" {\n            result +=\
    \ 5\n        } else if digit == \"E\" {\n            result += 7\n        } else\
    \ if digit == \"F\" {\n            result += 11\n        } else {\n          \
    \  result += digit.unicodeScalars.count\n        }\n    }\n    return result",
  "    var hex = num.characters\n    var hexDigits = [Int]()\n    var count = 0\n\
    \    for char in hex {\n        hexDigits.append(Int(char))\n    }\n    for digit\
    \ in hexDigits {\n        if digit % 2 == 0 {\n            count += 1\n      \
    \  }\n    }\n    return count", "    var count = 0\n    for char in num {\n  \
    \      if char >= '0' && char <= '9' {\n            count += Int(char) - Int(Int(char))\
    \ * Int(Int(char)) - Int(Int(char)) * Int(Int(char)) * Int(Int(char)) * Int(Int(char))\n\
    \        } else {\n            count += Int(char) - Int(Int(char)) * Int(Int(char))\
    \ * Int(Int(char)) * Int(Int(char)) * Int(Int(char))\n        }\n    }\n    return\
    \ count", "    var result = 0\n    var digits = num.characters\n    for index\
    \ in 0..<digits.count {\n        let digit = digits[index]\n        switch digit\
    \ {\n        case \"0\":\n        case \"1\":\n        case \"2\":\n        case\
    \ \"3\":\n        case \"4\":\n        case \"5\":\n        case \"6\":\n    \
    \    case \"7\":\n        case \"8\":\n        case \"9\":\n        case \"A\"\
    :\n        case \"B\":\n        case \"C\":\n        case \"D\":\n        case\
    \ \"E\":\n        case \"F\":\n        default:\n            result += 1\n   \
    \     }\n    }\n    return result", "    let numAsString = num.lowercased()\n\
    \    let numAsArray = numAsString.characters\n    let numAsArrayLength = numAsArray.count\n\
    \    let numAsArray2 = numAsArray.filter({$0 != \"A\" && $0 != \"B\" && $0 !=\
    \ \"C\" && $0 != \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray3 =\
    \ numAsArray2.filter({$0 != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\"\
    \ && $0 != \"B\" && $0 != \"D\" && $0 != \"E\"})\n    let numAsArray4 = numAsArray3.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray5 = numAsArray4.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray6 = numAsArray5.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray7 = numAsArray6.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray8 = numAsArray7.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray9 = numAsArray8.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray10 = numAsArray9.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && $0 != \"B\" && $0 !=\
    \ \"D\" && $0 != \"E\" && $0 != \"F\"})\n    let numAsArray11 = numAsArray10.filter({$0\
    \ != \"2\" && $0 != \"3\" && $0 != \"5\" && $0 != \"7\" && ", "    let numAsString\
    \ = num.lowercased()\n    var hexDigits: [Int] = []\n    var hexDigitCount = 0\n\
    \    var hexDigitIndex = 0\n    var hexDigit = Int(0)\n    var hexDigitString\
    \ = \"\"\n    var hexDigitStringIndex = 0\n    var hexDigitStringIndex2 = 0\n\
    \    var hexDigitStringIndex3 = 0\n    var hexDigitStringIndex4 = 0\n    var hexDigitStringIndex5\
    \ = 0\n    var hexDigitStringIndex6 = 0\n    var hexDigitStringIndex7 = 0\n  \
    \  var hexDigitStringIndex8 = 0\n    var hexDigitStringIndex9 = 0\n    var hexDigitStringIndex10\
    \ = 0\n    var hexDigitStringIndex11 = 0\n    var hexDigitStringIndex12 = 0\n\
    \    var hexDigitStringIndex13 = 0\n    var hexDigitStringIndex14 = 0\n    var\
    \ hexDigitStringIndex15 = 0\n    var hexDigitStringIndex16 = 0\n    var hexDigitStringIndex17\
    \ = 0\n    var hexDigitStringIndex18 = 0\n    var hexDigitStringIndex19 = 0\n\
    \    var hexDigitStringIndex20 = 0\n    var hexDigitStringIndex21 = 0\n    var\
    \ hexDigitStringIndex22 = 0\n    var hexDigitStringIndex23 = 0\n    var hexDigitStringIndex24\
    \ = 0\n    var hexDigitStringIndex25 = 0\n    var hexDigitStringIndex26 = 0\n\
    \    var hexDigitStringIndex27 = 0\n    var hexDigitStringIndex28 = 0\n    var\
    \ hexDigitStringIndex29 = 0\n    var hexDigitStringIndex30 = 0\n    var hexDigitStringIndex31\
    \ = 0\n    var hexDigitStringIndex32 = 0\n    var hexDigitStringIndex33 = 0\n\
    \    var hexDigitStringIndex34 = 0\n    var hexDigitStringIndex35 = 0\n    var\
    \ hexDigitStringIndex36 = 0\n    var hexDigitStringIndex37 = 0\n    var hexDigitStringIndex38\
    \ = 0\n    var hexDigitStringIndex39 = 0\n    var hexDigitStringIndex40 = 0\n\
    \    var hexDigitStringIndex41 = 0\n    var hexDigitStringIndex42 = 0\n    var\
    \ hexDigitStringIndex43 = 0\n    var hexDigitStringIndex44 = 0\n    var hexDigitStringIndex45\
    \ = 0\n    var hexDigitStringIndex46 = 0\n    var hexDigitStringIndex47 = 0\n\
    \    var hexDigitStringIndex48 = 0\n    var hexDigitStringIndex49 = 0\n    var\
    \ hexDigitStringIndex50 = 0\n    var hexDigitStringIndex51 = 0\n    var hexDigitStringIndex52\
    \ = 0\n    var hexDigitStringIndex53 = 0\n    var hexDigitStringIndex54 = 0\n\
    \    var hexDigitStringIndex55 = 0\n    var hexDigitStringIndex56 = 0\n    var\
    \ hexDigitStringIndex57 = 0\n    var hexDigitStringIndex58 = 0\n    var hexDigitStringIndex59\
    \ = 0\n", "    var nums = num.characters\n    var count = 0\n    for index in\
    \ 0..<nums.count {\n        let char = nums[index] as Character\n        if char.uppercased()\
    \ == \"A\" {\n            count += 1\n        } else if char.uppercased() == \"\
    B\" {\n            count += 1\n        } else if char.uppercased() == \"C\" {\n\
    \            count += 1\n        } else if char.uppercased() == \"D\" {\n    \
    \        count += 1\n        } else if char.uppercased() == \"E\" {\n        \
    \    count += 1\n        } else if char.uppercased() == \"F\" {\n            count\
    \ += 1\n        } else {\n            count += 1\n        }\n    }\n    return\
    \ count", "    var sum = 0\n    for char in num {\n        sum += Int(String(char).unicodeScalars.first!.value)\
    \ * 16\n    }\n    return sum % 10", "    // Your code here\n    let digits =\
    \ num.characters\n    let digitCount = digits.count\n    var hexDigitCount = 0\n\
    \    var hexDigits = \"\"\n    for i in 0..<digitCount {\n        let digit =\
    \ digits[i]\n        if digit == \"A\" {\n            hexDigitCount++\n      \
    \  }\n        else if digit == \"B\" {\n            hexDigitCount++\n        }\n\
    \        else if digit == \"C\" {\n            hexDigitCount++\n        }\n  \
    \      else if digit == \"D\" {\n            hexDigitCount++\n        }\n    \
    \    else if digit == \"E\" {\n            hexDigitCount++\n        }\n      \
    \  else if digit == \"F\" {\n            hexDigitCount++\n        }\n        else\
    \ if digit == \"0\" {\n            hexDigitCount++\n        }\n        else if\
    \ digit == \"1\" {\n            hexDigitCount++\n        }\n        else if digit\
    \ == \"2\" {\n            hexDigitCount++\n        }\n        else if digit ==\
    \ \"3\" {\n            hexDigitCount++\n        }\n        else if digit == \"\
    4\" {\n            hexDigitCount++\n        }\n        else if digit == \"5\"\
    \ {\n            hexDigitCount++\n        }\n        else if digit == \"6\" {\n\
    \            hexDigitCount++\n        }\n        else if digit == \"7\" {\n  \
    \          hexDigitCount++\n        }\n        else if digit == \"8\" {\n    \
    \        hexDigitCount++\n        }\n        else if digit == \"9\" {\n      \
    \      hexDigitCount++\n        }\n    }\n    if hexDigitCount % 2 == 0 {\n  \
    \      return hexDigitCount\n    }\n    else {\n        return hexDigitCount -\
    \ 1\n    }", "    let hex = num.trimmingCharacters(in: CharacterSet.alphanumerics.inverted)\n\
    \    let hexDigits = hex.unicodeScalars.map { Int($0) }\n    let hexDigitCount\
    \ = hexDigits.count\n    let hexDigitPrimes = hexDigits.filter { $0 % 2 == 0 }\n\
    \    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitCount < 2 ||\
    \ hexDigitPrimeCount < 2 {\n        return 0\n    }\n    let hexDigitPrimes =\
    \ hexDigitPrimes.map { $0 / 2 }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    if hexDigitPrimeCount > hexDigitCount {\n        return 0\n    }\n    let\
    \ hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    if hexDigitPrimeCount != hexDigitCount {\n     \
    \   return 0\n    }\n    let hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount\
    \ }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitPrimeCount\
    \ != hexDigitCount {\n        return 0\n    }\n    let hexDigitPrimes = hexDigitPrimes.map\
    \ { $0 % hexDigitCount }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    if hexDigitPrimeCount != hexDigitCount {\n        return 0\n    }\n    let\
    \ hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    if hexDigitPrimeCount != hexDigitCount {\n     \
    \   return 0\n    }\n    let hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount\
    \ }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n    if hexDigitPrimeCount\
    \ != hexDigitCount {\n        return 0\n    }\n    let hexDigitPrimes = hexDigitPrimes.map\
    \ { $0 % hexDigitCount }\n    let hexDigitPrimeCount = hexDigitPrimes.count\n\
    \    if hexDigitPrimeCount != hexDigitCount {\n        return 0\n    }\n    let\
    \ hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount }\n    let hexDigitPrimeCount\
    \ = hexDigitPrimes.count\n    if hexDigitPrimeCount != hexDigitCount {\n     \
    \   return 0\n    }\n    let hexDigitPrimes = hexDigitPrimes.map { $0 % hexDigitCount ",
  "    let nums = num.characters\n    var count = 0\n    for n in nums {\n       \
    \ if n % 16 == 0 {\n            count += 1\n        }\n    }\n    return count",
  "    var sum = 0\n    for char in num {\n        sum += Int(char) - 48\n    }\n\
    \    return sum % 10", "    let digits = num.characters\n    var count = 0\n \
    \   for digit in digits {\n        if digit == \"A\" {\n            count += 2\n\
    \        } else if digit == \"B\" {\n            count += 1\n        } else if\
    \ digit == \"C\" {\n            count += 3\n        } else if digit == \"D\" {\n\
    \            count += 5\n        } else if digit == \"E\" {\n            count\
    \ += 7\n        } else if digit == \"F\" {\n            count += 11\n        }\
    \ else {\n            count += 1\n        }\n    }\n    return count", "    var\
    \ nums = num.characters\n    var hexNums = [Int]()\n    var primes = [Int]()\n\
    \    var primeCount = 0\n    var primeCount2 = 0\n    var primeCount3 = 0\n  \
    \  var primeCount4 = 0\n    var primeCount5 = 0\n    var primeCount6 = 0\n   \
    \ var primeCount7 = 0\n    var primeCount8 = 0\n    var primeCount9 = 0\n    var\
    \ primeCount10 = 0\n    var primeCount11 = 0\n    var primeCount12 = 0\n    var\
    \ primeCount13 = 0\n    var primeCount14 = 0\n    var primeCount15 = 0\n    var\
    \ primeCount16 = 0\n    var primeCount17 = 0\n    var primeCount18 = 0\n    var\
    \ primeCount19 = 0\n    var primeCount20 = 0\n    var primeCount21 = 0\n    var\
    \ primeCount22 = 0\n    var primeCount23 = 0\n    var primeCount24 = 0\n    var\
    \ primeCount25 = 0\n    var primeCount26 = 0\n    var primeCount27 = 0\n    var\
    \ primeCount28 = 0\n    var primeCount29 = 0\n    var primeCount30 = 0\n    var\
    \ primeCount31 = 0\n    var primeCount32 = 0\n    var primeCount33 = 0\n    var\
    \ primeCount34 = 0\n    var primeCount35 = 0\n    var primeCount36 = 0\n    var\
    \ primeCount37 = 0\n    var primeCount38 = 0\n    var primeCount39 = 0\n    var\
    \ primeCount40 = 0\n    var primeCount41 = 0\n    var primeCount42 = 0\n    var\
    \ primeCount43 = 0\n    var primeCount44 = 0\n    var primeCount45 = 0\n    var\
    \ primeCount46 = 0\n    var primeCount47 = 0\n    var primeCount48 = 0\n    var\
    \ primeCount49 = 0\n    var primeCount50 = 0\n    var primeCount51 = 0\n    var\
    \ primeCount52 = 0\n    var primeCount53 = 0\n    var primeCount54 = 0\n    var\
    \ primeCount55 = 0\n    var primeCount56 = 0\n    var primeCount57 = 0\n    var\
    \ primeCount58 = 0\n    var primeCount59 = 0\n    var primeCount60 = 0\n    var\
    \ primeCount61 = 0\n    var primeCount62 = 0\n    var primeCount63 = 0\n    var\
    \ primeCount64 = 0\n    var primeCount65 = 0\n    var primeCount66 = 0\n    var\
    \ primeCount67 = 0\n    var primeCount68 = 0\n    var primeCount69 = 0\n    var\
    \ primeCount70 = 0\n    var primeCount71 = 0\n    var primeCount72 = 0\n    var\
    \ primeCount73 = 0\n    var primeCount74 = 0\n    var primeCount75 = 0\n    var\
    \ primeCount76 = 0\n    var primeCount77 = 0\n    var primeCount78 = 0\n    var\
    \ primeCount79 = 0\n    var primeCount80 = 0\n    var primeCount81 = 0\n    var\
    \ primeCount82 = 0"]
stop_tokens:
- "\n}"

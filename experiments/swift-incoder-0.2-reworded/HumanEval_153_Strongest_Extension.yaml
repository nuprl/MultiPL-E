name: HumanEval_153_Strongest_Extension
language: swift
prompt: "\n/// You will be given the name of a class (a string) and an array of extensions.\n\
  /// The extensions are to be used to load additional classes to the class. The\n\
  /// strength of the extension is as follows: Let CAP be the number of the uppercase\n\
  /// letters in the extension's name, and let SM be the number of lowercase letters\
  \ \n/// in the extension's name, the strength is given by the fraction CAP - SM.\
  \ \n/// You should find the strongest extension and return a string in this \n///\
  \ format: ClassName.StrongestExtensionName.\n/// If there are two or more extensions\
  \ with the same strength, you should\n/// choose the one that comes first in the\
  \ array.\n/// For example, if you are given \"Slices\" as the class and an array\
  \ of the\n/// extensions: ['SErviNGSliCes', 'Cheese', 'StuFfed'] then you should\n\
  /// return 'Slices.SErviNGSliCes' since 'SErviNGSliCes' is the strongest extension\
  \ \n/// (its strength is -1).\n/// Example:\n/// >>> Strongest_Extension(class_name:\
  \ \"my_class\", extensions: [\"AA\", \"Be\", \"CC\"])\n/// \"my_class.AA\"\nfunc\
  \ Strongest_Extension(class_name: String, extensions: [String]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(Strongest_Extension(class_name: \"Watashi\"\
  , extensions: [\"tEN\", \"niNE\", \"eIGHt8OKe\"]) == \"Watashi.eIGHt8OKe\")\nassert(Strongest_Extension(class_name:\
  \ \"Boku123\", extensions: [\"nani\", \"NazeDa\", \"YEs.WeCaNe\", \"32145tggg\"\
  ]) == \"Boku123.YEs.WeCaNe\")\nassert(Strongest_Extension(class_name: \"__YESIMHERE\"\
  , extensions: [\"t\", \"eMptY\", \"nothing\", \"zeR00\", \"NuLl__\", \"123NoooneB321\"\
  ]) == \"__YESIMHERE.NuLl__\")\nassert(Strongest_Extension(class_name: \"K\", extensions:\
  \ [\"Ta\", \"TAR\", \"t234An\", \"cosSo\"]) == \"K.TAR\")\nassert(Strongest_Extension(class_name:\
  \ \"__HAHA\", extensions: [\"Tab\", \"123\", \"781345\", \"-_-\"]) == \"__HAHA.123\"\
  )\nassert(Strongest_Extension(class_name: \"YameRore\", extensions: [\"HhAas\",\
  \ \"okIWILL123\", \"WorkOut\", \"Fails\", \"-_-\"]) == \"YameRore.okIWILL123\")\n\
  assert(Strongest_Extension(class_name: \"finNNalLLly\", extensions: [\"Die\", \"\
  NowW\", \"Wow\", \"WoW\"]) == \"finNNalLLly.WoW\")\nassert(Strongest_Extension(class_name:\
  \ \"_\", extensions: [\"Bb\", \"91245\"]) == \"_.Bb\")\nassert(Strongest_Extension(class_name:\
  \ \"Sp\", extensions: [\"671235\", \"Bb\"]) == \"Sp.671235\")"
completions: ['    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))!]', "    var strongest_extension = \"\"\n    for extension\
    \ in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components.filter { $0.isUppercase\
    \ }.count\n        let extension_components_count_lower = extension_components.filter\
    \ { $0.isLowercase }.count\n        let class_name_components_count_upper_small\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_lower_small = extension_components_count_lower\
    \ - extension_components_count_upper\n        let class_name_components_count_lower_large\
    \ = class_name_components_count_lower - class_name_components_count_upper_small\n\
    \        let extension_components_count_upper_large = extension_components_count_upper\
    \ - extension_components_count_lower_small\n        let class_name_components_count_upper_large_small\
    \ = class_name_components_count_upper_large - class_name_components_count_upper_small\n\
    \        let extension_components_count_upper_large_small_small = extension_components_count_upper_large_small\
    \ - extension_components_count_lower_small\n        let extension_components_count_upper_large_small_large\
    \ = extension_components_count_upper_large_small_small - extension_components_count_lower_large\n\
    \        let extension_components_count_upper_large_small_large_small = extension_components_count_upper_large_small_large\
    \ - extension_components_count_upper_large_small\n        let extension_components_count_upper_large_small_large_small_small\
    \ = extension_components_count_upper_large_small_large_small - extension_components_count_upper_large_small_small\n\
    \        let extension_components_count_upper_large_small_large_small_large =\
    \ extension_components_count_upper_large_small_large_small_small - extension_components_count_upper_large_small_large\n\
    \        let extension_components_count_upper_large_small_large_small_large_small\
    \ = extension_components_count_upper_large_small_large_small_large - extension_components_count_upper_large_small_large_small_small\n\
    \        let extension_components_count_upper_large_small_large_small_large_small_large\
    \ = extension_components_count_upper_large_small_large_small_large_small - extension_components_count_upper_large_small_large_small_large\n\
    \        let extension_components_count_upper_large_small_large_small_large_small_large",
  "    var strongest_extension = \"\"\n    var class_name_uppercase = class_name.uppercased()\n\
    \    var class_name_lowercase = class_name.lowercased()\n    var class_name_length\
    \ = class_name_uppercase.count\n    var extension_length = extensions.count\n\
    \    var extension_strength = extension_length / class_name_length\n    var extension_strength_rounded\
    \ = round(extension_strength)\n    var extension_strength_rounded_int = Int(extension_strength_rounded)\n\
    \    var extension_strength_rounded_int_minus_1 = extension_strength_rounded -\
    \ 1\n    var extension_strength_rounded_int_minus_2 = extension_strength_rounded\
    \ - 2\n    var extension_strength_rounded_int_minus_3 = extension_strength_rounded\
    \ - 3\n    var extension_strength_rounded_int_minus_4 = extension_strength_rounded\
    \ - 4\n    var extension_strength_rounded_int_minus_5 = extension_strength_rounded\
    \ - 5\n    var extension_strength_rounded_int_minus_6 = extension_strength_rounded\
    \ - 6\n    var extension_strength_rounded_int_minus_7 = extension_strength_rounded\
    \ - 7\n    var extension_strength_rounded_int_minus_8 = extension_strength_rounded\
    \ - 8\n    var extension_strength_rounded_int_minus_9 = extension_strength_rounded\
    \ - 9\n    var extension_strength_rounded_int_minus_10 = extension_strength_rounded\
    \ - 10\n    var extension_strength_rounded_int_minus_11 = extension_strength_rounded\
    \ - 11\n    var extension_strength_rounded_int_minus_12 = extension_strength_rounded\
    \ - 12\n    var extension_strength_rounded_int_minus_13 = extension_strength_rounded\
    \ - 13\n    var extension_strength_rounded_int_minus_14 = extension_strength_rounded\
    \ - 14\n    var extension_strength_rounded_int_minus_15 = extension_strength_rounded\
    \ - 15\n    var extension_strength_rounded_int_minus_16 = extension_strength_rounded\
    \ - 16\n    var extension_strength_rounded_int_minus_17 = extension_strength_rounded\
    \ - 17\n    var extension_strength_rounded_int_minus_18 = extension_strength_rounded\
    \ - 18\n    var extension_strength_rounded_int_minus_19 = extension_strength_rounded\
    \ - 19\n    var extension_strength_rounded_int_minus_20 = extension_strength_rounded\
    \ - 20\n    var extension_strength_rounded_int_minus_21 = extension_strength_rounded\
    \ - 21\n    var extension_strength_rounded_int_minus_22 = extension_strength_rounded\
    \ - ", "    var strongest_extension = \"\"\n    var class_name_length = class_name.count\n\
    \    var extension_length = extensions.count\n    var strongest_extension_strength\
    \ = -1\n    var extension_strength = -1\n    var extension_counter = 0\n    var\
    \ class_name_counter = 0\n    var extension_counter = 0\n    var class_name_length\
    \ = class_name.count\n    var extension_length = extensions.count\n    for extension\
    \ in extensions {\n        class_name_counter = class_name_length\n        extension_counter\
    \ = extension_length\n        for class_name in class_name {\n            if class_name_counter\
    \ > extension_counter {\n                class_name_counter = class_name_length\
    \ - extension_counter\n            }\n            if class_name_counter == extension_counter\
    \ {\n                extension_strength = class_name_counter - extension_counter\n\
    \                if extension_strength > strongest_extension_strength {\n    \
    \                strongest_extension_strength = extension_strength\n         \
    \           strongest_extension = class_name\n                }\n            }\n\
    \        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let class_name_extension = class_name + extension\n        let strength =\
    \ class_name_extension.countUppercaseLetters() - class_name_extension.countLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = class_name_extension\n        }\n    }\n   \
    \ return strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var class_name_with_extension = class_name\
    \ + extensions.joined(separator: \".\")\n    \n    for extension in extensions\
    \ {\n        let class_name_with_extension_lowercase = class_name_with_extension.lowercased()\n\
    \        let class_name_with_extension_uppercase = class_name_with_extension.uppercased()\n\
    \        let class_name_with_extension_lowercase_index = class_name_with_extension_lowercase.index(class_name_with_extension_lowercase)\n\
    \        let class_name_with_extension_uppercase_index = class_name_with_extension_uppercase.index(class_name_with_extension_uppercase)\n\
    \        let class_name_with_extension_strength = class_name_with_extension_lowercase_index\
    \ - class_name_with_extension_uppercase_index\n        \n        if class_name_with_extension_strength\
    \ > 0 {\n            strongest_extension = class_name + extension\n          \
    \  break\n        }\n    }\n    \n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        var strength =\
    \ count_capital_letters(extension) - count_capital_letters(extension.lowercased())\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    // Your code here\n    var strongest_extension\
    \ = \"\"\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            strongest_extension = class_name + extension\n \
    \       }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    var class_name_upper\
    \ = class_name.uppercased()\n    var class_name_lower = class_name.lowercased()\n\
    \    for extension in extensions {\n        var extension_upper = extension.uppercased()\n\
    \        var extension_lower = extension.lowercased()\n        var extension_strength\
    \ = class_name_upper.distance(class_name_lower)\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.reduce(0, combine: max)]', "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    for\
    \ extension in extensions {\n        let extension_length = extension.count\n\
    \        let class_name_length = class_name.count\n        let extension_strength\
    \ = class_name_length / extension_length\n        if extension_strength > strongest_extension.count\
    \ {\n            strongest_extension = extension\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", '    return class_name + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    var strongest_extension = \"\"\n    var strength = -1\n\
    \    for extension in extensions {\n        let cap = extension.count\n      \
    \  let sm = class_name.count\n        let strength = cap - sm\n        if strength\
    \ > 0 {\n            strongest_extension = class_name + \".\" + extension\n  \
    \          break\n        }\n    }\n    return strongest_extension", "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest = \"\"\n    for extension in extensions {\n        var\
    \ count = 0\n        for letter in extension {\n            if letter.isUpper()\
    \ {\n                count += 1\n            }\n        }\n        var strength\
    \ = count - extension.count\n        if strength > 0 {\n            strongest\
    \ = class_name + \".\" + extension\n        }\n    }\n    return strongest", " \
    \   var strongest_extension = \"\"\n    var strength = -1 // default value\n \
    \   for extension in extensions {\n        let cap = extension.count\n       \
    \ let sm = class_name.count\n        let strength_fraction = cap - sm\n      \
    \  if strength_fraction > strength {\n            strongest_extension = extension\n\
    \            strength = strength_fraction\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.reduce(0, combine: max)].lowercased()', "    var\
    \ strongest_extension = \"\"\n    var strongest_extension_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ // Your code here\n    let className = class_name.lowercased()\n    var strongest\
    \ = \"\"\n    for extension in extensions {\n        let capitals = extension.lowercased().count\n\
    \        let lowercases = extension.lowercased().count\n        let strength =\
    \ capitals - lowercases\n        if strength > 0 {\n            strongest = String(format:\
    \ \"%@.%@\", className, extension)\n        }\n    }\n    return strongest", " \
    \   var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    for extension\
    \ in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_name_components[class_name_components.count\
    \ - 1]\n        let extension = extension_components[extension_components.count\
    \ - 1]\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_index = class_name_components.count - 1\n  \
    \      let extension_components_count_index = extension_components.count - 1\n\
    \        let class_name_components_count_index_minus_1 = class_name_components_count_index\
    \ - 1\n        let extension_components_count_index_minus_1 = extension_components_count_index\
    \ - 1\n        let class_name_components_count_minus_1 = class_name_components_count_index\
    \ - 1\n        let extension_components_count_minus_1 = extension_components_count_index\
    \ - 1\n        let class_name_components_count_minus_2 = class_name_components_count_index\
    \ - 2\n        let extension_components_count_minus_2 = extension_components_count_index\
    \ - 2\n        let class_name_components_count_minus_3 = class_name_components_count_index\
    \ - 3\n        let extension_components_count_minus_3 = extension_components_count_index\
    \ - 3\n        let class_name_components_count_minus_4 = class_name_components_count_index\
    \ - 4\n        let extension_components_count_minus_4 = extension_components_count_index\
    \ - 4\n        let class_name_components_count_minus_5 = class_name_components_count_index\
    \ - 5\n        let extension_components_count_minus_5 = extension_components_count_index\
    \ - 5\n        let class_name_components_count_minus_6 = class_name_components_count_index\
    \ - 6\n        let extension_components_count_minus_6 = extension_components_count_index\
    \ - 6\n        let class_name_components_count_minus_7 = class_name_components_count_index\
    \ - 7\n        let extension_components_count_minus_7 = extension_components_count_index\
    \ - 7\n        let class_name_components_count_minus_8 = class_name_components_count_index\
    \ - 8\n        let extension_components_count_minus_8 = extension_components_count_index\
    \ - 8\n        let class_name_components_count_minus_9 = class_name_components_count_index\
    \ - 9\n        let extension_components_count_minus_9 = extension_components_count_index\
    \ - 9\n        let class_name_components_count_minus_10 = class_name_components_count_index\
    \ - 10\n        let extension_components_count_minus_10 = extension_components_count_index\
    \ - 10", "    var strongest_extension = \"\"\n    var max_strength = -1\n    for\
    \ extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    for\
    \ extension in extensions {\n        let extension_length = extension.count\n\
    \        let class_name_length = class_name.count\n        let extension_strength\
    \ = extension_length - class_name_length\n        let strength = extension_strength\
    \ / class_name_length\n        if strength > strongest_extension.count {\n   \
    \         strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + Strongest_Extension_Name(extensions)',
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ class_name_components = class_name.components(separatedBy: \".\")\n    var class_name_components_count\
    \ = class_name_components.count\n    var extensions_count = extensions.count\n\
    \    var extensions_components = extensions.components(separatedBy: \".\")\n \
    \   var extensions_components_count = extensions_components.count\n    var extensions_components_array\
    \ = [String]()\n    var extensions_components_array_count = extensions_components.count\n\
    \    var extensions_components_array_index = -1\n    var extensions_components_array_index_count\
    \ = 0\n    var extensions_components_array_index_count_minus_one = 0\n    var\
    \ extensions_components_array_index_count_minus_two = 0\n    var extensions_components_array_index_count_minus_three\
    \ = 0\n    var extensions_components_array_index_count_minus_four = 0\n    var\
    \ extensions_components_array_index_count_minus_five = 0\n    var extensions_components_array_index_count_minus_six\
    \ = 0\n    var extensions_components_array_index_count_minus_seven = 0\n    var\
    \ extensions_components_array_index_count_minus_eight = 0\n    var extensions_components_array_index_count_minus_nine\
    \ = 0\n    var extensions_components_array_index_count_minus_ten = 0\n    var\
    \ extensions_components_array_index_count_minus_eleven = 0\n    var extensions_components_array_index_count_minus_twelve\
    \ = 0\n    var extensions_components_array_index_count_minus_thirteen = 0\n  \
    \  var extensions_components_array_index_count_minus_fourteen = 0\n    var extensions_components_array_index_count_minus_fifteen\
    \ = 0\n    var extensions_components_array_index_count_minus_sixteen = 0\n   \
    \ var extensions_components_array_index_count_minus_seventeen = 0\n    var extensions_components_array_index_count_minus_eighteen\
    \ = 0\n    var extensions_components_array_index_count_minus_nineteen = 0\n  \
    \  var extensions_components_array_index_count_minus_twenty = 0\n    var extensions_components_array_index_count_minus_thirty\
    \ = 0\n    var extensions_components_array_index_count_minus_forty = 0\n    var\
    \ extensions_components_array_index_count_minus_fifty = 0\n    var extensions_components_array_index_count_minus_sixty\
    \ = 0\n    var extensions_components_array_index_count_minus_seventy = 0\n   \
    \ var extensions_components_array_index_count_minus_eighty = 0\n    var extensions_components_array_index_count_minus_ninety\
    \ = 0\n    var extensions_components_array_index_count_minus_hundred = 0\n   \
    \ var extensions_components_array_index_count_minus_thousand", '    return class_name
    + "." + extensions[extensions.reduce(0, {$0 + $1.count})]', "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = Int()\n    for extension in extensions {\n      \
    \  let extension_upper = extension.uppercased()\n        let extension_lower =\
    \ extension.lowercased()\n        let cap = extension_upper.count\n        let\
    \ sm = extension_lower.count\n        let strength_fraction = cap - sm\n     \
    \   strength = strength * strength_fraction\n        if strength > 0 {\n     \
    \       strongest_extension = class_name + \".\" + extension\n        }\n    }\n\
    \    return strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        var strength =\
    \ count_capital_letters(extension) - count_capital_letters(class_name)\n     \
    \   if strength > max_strength {\n            max_strength = strength\n      \
    \      strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ class_name_components = class_name.components(separatedBy: \".\")\n        let\
    \ extension_components = extension.components(separatedBy: \".\")\n        let\
    \ class_name = class_name_components[0]\n        let extension = extension_components[0]\n\
    \        let class_name_components_count = class_name_components.count\n     \
    \   let extension_components_count = extension_components.count\n        let class_name_components_count_upper\
    \ = class_name_components_count.filter { $0.isUppercase }.count\n        let extension_components_count_upper\
    \ = extension_components_count.filter { $0.isUppercase }.count\n        let class_name_components_count_lower\
    \ = class_name_components_count.filter { $0.isLowercase }.count\n        let extension_components_count_lower\
    \ = extension_components_count.filter { $0.isLowercase }.count\n        let class_name_components_count_diff\
    \ = class_name_components_count_upper - class_name_components_count_lower\n  \
    \      let extension_components_count_diff = extension_components_count_upper\
    \ - extension_components_count_lower\n        let class_name_components_count_same_length\
    \ = class_name_components_count_diff == 0\n        let extension_components_count_same_length\
    \ = extension_components_count_diff == 0\n        let class_name_components_count_diff_length\
    \ = class_name_components_count_diff > 0\n        let extension_components_count_diff_length\
    \ = extension_components_count_diff > 0\n        let class_name_components_count_diff_length_upper\
    \ = class_name_components_count_diff_length && class_name_components_count_upper\
    \ == class_name_components_count_lower\n        let extension_components_count_diff_length_upper\
    \ = extension_components_count_diff_length && extension_components_count_upper\
    \ == extension_components_count_lower\n        let class_name_components_count_diff_length_lower\
    \ = class_name_components_count_diff_length && class_name_components_count_lower\
    \ == class_name_components_count_upper\n        let extension_components_count_diff_length_lower\
    \ = extension_components_count_diff_length && extension_components_count_lower\
    \ == extension_components_count_upper\n        let class_name_components_count_diff_length_diff\
    \ = class_name_components_count_diff_length_upper || class_name_components_count_diff_length_lower\n\
    \        let extension_components_count_diff_length_diff = extension_components_count_diff_length_upper\
    \ || extension_components_count_diff_length_lower\n        let class_name_components_count_diff_length_diff_upper\
    \ = class_name_components_count_diff_length_diff && class_name_components_count_upper\
    \ == class_name_components_count_lower\n        let extension_components_count_diff_length_diff_upper\
    \ = ", "    var strongest_extension = \"\"\n    var strength = -1\n    for extension\
    \ in extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            if strength\
    \ > strength {\n                strongest_extension = extension\n            \
    \    strength = strength\n            }\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let extension_upper = extension.uppercased()\n\
    \        let extension_lower = extension.lowercased()\n        let cap = extension_upper.count\n\
    \        let sm = extension_lower.count\n        let strength_fraction = cap -\
    \ sm\n        if strength_fraction > strength {\n            strongest_extension\
    \ = class_name\n            strength = strength_fraction\n        }\n    }\n \
    \   return strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strength = -1 // default value\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  '    return class_name + extensions[extensions.reduce(0, {$0 + $1.count})]', '    return
    class_name + "." + extensions[extensions.reduce(0, combine: +)].lowercased()',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.reduce(0, {$0 + $1.count})]', "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let extension_upper = extension.uppercased()\n       \
    \ let extension_lower = extension.lowercased()\n        let extension_length =\
    \ extension_upper.count - extension_lower.count\n        let extension_strength\
    \ = extension_upper.count - extension_lower.count\n        if strength < extension_strength\
    \ {\n            strongest_extension = extension\n            strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let strength = extension.countUpToLowercaseLetters()\n        if strength\
    \ > max_strength {\n            max_strength = strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    // Your code here\n    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ class_name_lowercase = class_name.lowercased()\n    var extensions_lowercase\
    \ = extensions.lowercased()\n    var class_name_length = class_name_lowercase.length\n\
    \    var extensions_length = extensions_lowercase.length\n    var strongest_extension_length\
    \ = class_name_length - extensions_length\n    var strength = -1\n    var extension_index\
    \ = 0\n    var extension_strength = -1\n    var extension_found = false\n    for\
    \ extension in extensions {\n        extension_found = false\n        for index\
    \ in 0..<extensions_length {\n            if extensions_lowercase[index] == extension\
    \ {\n                extension_strength = extension.lowercased().count - extension.lowercased().lowercased().count\n\
    \                if strength < extension_strength {\n                    strength\
    \ = extension_strength\n                    extension_index = index\n        \
    \            extension_found = true\n                }\n            }\n      \
    \  }\n        if !extension_found {\n            extension_strength = extension.lowercased().count\n\
    \            if strength < extension_strength {\n                strength = extension_strength\n\
    \                extension_index = extensions_length\n                extension_found\
    \ = true\n            }\n        }\n    }\n    if strength == -1 {\n        return\
    \ class_name\n    }\n    if extension_index == 0 {\n        return class_name\
    \ + \".\" + extensions[extension_index]\n    }\n    if extension_index == extensions_length\
    \ {\n        return class_name + \".\" + extensions[extension_index - 1]\n   \
    \ }\n    return class_name + \".\" + extensions[extension_index] + \".\" + extensions[extension_index\
    \ - 1]", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    if extensions.isEmpty {\n        return class_name\n\
    \    }\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > strongest_extension.count {\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ if extensions.isEmpty {\n        return class_name\n    }\n    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let strength = extension.countUpToLowercaseLetters()\n        if strength\
    \ > max_strength {\n            max_strength = strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let strength = extension.countUpToLowercaseLetters()\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    if extensions.isEmpty\
    \ {\n        return class_name\n    }\n    var strongest_extension = \"\"\n  \
    \  var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToLowercaseLetters()\n    \
    \    if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strength = -1\n    for extension in extensions {\n        let extension_upper\
    \ = extension.uppercased()\n        let extension_lower = extension.lowercased()\n\
    \        let extension_length = extension_upper.count - extension_lower.count\n\
    \        let extension_strength = extension_upper.count - extension_lower.count\n\
    \        if strength == -1 || strength > extension_strength {\n            strongest_extension\
    \ = class_name\n            strength = extension_strength\n        } else if strength\
    \ == extension_strength {\n            if extension_length < strongest_extension.count\
    \ {\n                strongest_extension = class_name\n                strength\
    \ = extension_strength\n            }\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + Strongest_Extension_Name(extensions)', "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToLowercaseLetters()\n    \
    \    if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0)
    { $0 + $1.count }].sorted().first!', "    var strongest_extension = \"\"\n   \
    \ var strongest_extension_strength = -1\n    for extension in extensions {\n \
    \       var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strength = -1\n    for extension\
    \ in extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > strongest_extension.count\
    \ {\n            strongest_extension = extension\n        }\n    }\n    return\
    \ class_name + \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0,
    {$0 + $1.count})]', '    return class_name + extensions[extensions.reduce(0, {$0
    + $1.count})]', "    var strongest_extension = \"\"\n    var max_strength = -1\n\
    \    for extension in extensions {\n        let strength = class_name.characters.filter({\
    \ $0.isUppercase }).count - class_name.characters.filter({ $0.isLowercase }).count\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.index(extensions.firstIndex(of:
    class_name.lowercased()))]', "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    // Your code here\n    var strongest_extension = \"\"\
    \n    for extension in extensions {\n        var class_name_extension = class_name\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                class_name_extension = class_name_extension.lowercased()\n\
    \            }\n        }\n        if class_name_extension.hasPrefix(class_name.lowercased())\
    \ {\n            var class_name_extension_split = class_name_extension.components(separatedBy:\
    \ \".\")\n            var class_name_extension_split_count = class_name_extension_split.count\n\
    \            var class_name_extension_split_index = class_name_extension_split_count\
    \ - 1\n            var class_name_extension_split_last_index = class_name_extension_split_count\
    \ - 1\n            var class_name_extension_split_last_index_value = class_name_extension_split[class_name_extension_split_last_index].lowercased()\n\
    \            var class_name_extension_split_last_index_value_count = class_name_extension_split_last_index_value.count\n\
    \            var class_name_extension_split_last_index_value_index = class_name_extension_split_last_index_value_count\
    \ - 1\n            var class_name_extension_split_last_index_value_index_value\
    \ = class_name_extension_split_last_index_value[class_name_extension_split_last_index_value_index].lowercased()\n\
    \            var class_name_extension_split_last_index_value_index_value_count\
    \ = class_name_extension_split_last_index_value_index_value.count\n          \
    \  var class_name_extension_split_last_index_value_index_value_index = class_name_extension_split_last_index_value_index_value_count\
    \ - 1\n            var class_name_extension_split_last_index_value_index_value_index_value\
    \ = class_name_extension_split_last_index_value_index_value[class_name_extension_split_last_index_value_index_value_index].lowercased()\n\
    \            var class_name_extension_split_last_index_value_index_value_index_value_count\
    \ = class_name_extension_split_last_index_value_index_value_index_value.count\n\
    \            var class_name_extension_split_last_index_value_index_value_index_value_index\
    \ = class_name_extension_split_last_index_value_index_value_index_value_count\
    \ - 1\n            var class_name_extension_split_last_index_value_index_value_index_value_index_value\
    \ = class_name_extension_split_last_index_value_index_value_index_value[class_name_extension_split_last_index_value_index_value_index_value_index].lowercased()\n\
    \            var class_name_extension_split_last_index_value_index_value_index_value_index_value_count\
    \ = class_name_extension_split_last_index_value_index_value_index_value_index_value.count\n\
    \            var class_name_extension_split_last_index_value_index_value_index_value_index_value_index\
    \ = class_name_extension_split_last_index_value_index_value_index_value_index_value_count\
    \ - 1\n            var class_name_extension_split_last_index_value_index_value_index_value_index_value_index_value\
    \ = class_name_extension_split_last_index_value", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        var extension_strength = extension.count\n        for character in\
    \ extension {\n            if character == character.lowercased() {\n        \
    \        extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > 0 {\n            strongest_extension = class_name\
    \ + \".\" + extension\n        }\n    }\n    return strongest_extension", "  \
    \  var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let strength = class_name.components(separatedBy: extension.lowercased()).count\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", '    return
    class_name + Strongest_Extension(extensions)', "    var strongest_extension =\
    \ \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > 0 {\n            strongest_extension = class_name\
    \ + \".\" + extension\n            break\n        }\n    }\n    return strongest_extension",
  '    return class_name + "." + extensions[extensions.reduce(0, combine: +)].lowercased()',
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = class_name\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return strongest_extension", "    if extensions.isEmpty\
    \ {\n        return class_name\n    }\n    var max_strength = -1\n    var max_extension\
    \ = \"\"\n    for extension in extensions {\n        let strength = class_name.characters.filter({\
    \ $0.isUppercase }).count - class_name.characters.filter({ $0.isLowercase }).count\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           max_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + max_extension", "    var strongest_extension = \"\"\n    var strength\
    \ = -1\n    for extension in extensions {\n        let cap = extension.count\n\
    \        let sm = class_name.count\n        let strength = cap - sm\n        if\
    \ strength > 0 {\n            strongest_extension = class_name + extension\n \
    \           break\n        }\n    }\n    return strongest_extension", '    return
    class_name + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    // Your code here\n    \n    return \"\"", '    return class_name + "." + extensions[extensions.reduce(0)
    { $0 + $1.countByLetter().max() }]', "    var strongest_extension = \"\"\n   \
    \ var max_strength = -1\n    for extension in extensions {\n        var extension_strength\
    \ = extension.count\n        for c in extension {\n            if c >= 'A' &&\
    \ c <= 'Z' {\n                extension_strength -= 1 \n            }\n      \
    \      if c >= 'a' && c <= 'z' {\n                extension_strength -= 1\n  \
    \          }\n        }\n        if extension_strength > max_strength {\n    \
    \        max_strength = extension_strength\n            strongest_extension =\
    \ extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    // Your code here\n    \n    return \"\"", "    var strongest_extension = \"\
    \"\n    for extension in extensions {\n        let cap = extension.count\n   \
    \     let sm = class_name.count\n        let strength = cap - sm\n        if strength\
    \ > 0 {\n            if strongest_extension == \"\" {\n                strongest_extension\
    \ = class_name + extension\n            } else {\n                if strength\
    \ < strongest_extension.count {\n                    strongest_extension = class_name\
    \ + extension\n                }\n            }\n        }\n    }\n    return\
    \ strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = -1\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > 0 {\n            if strength > strongest_extension.count\
    \ {\n                strongest_extension = extension\n            }\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    for extension in extensions {\n\
    \        var extension_strength = extension.count\n        for character in extension\
    \ {\n            if character == character.lowercased() {\n                extension_strength\
    \ -= 1\n            }\n        }\n        if extension_strength > 0 {\n      \
    \      strongest_extension += extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    for extension in extensions {\n        var strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          strength -= 1\n            }\n        }\n        if strength > 0 {\n\
    \            strongest_extension += class_name + \".\" + extension\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var class_name_lowercase = class_name.lowercased()\n    var extension_lowercase\
    \ = extensions[0].lowercased()\n    var strength = extension_lowercase.count-class_name_lowercase.count\n\
    \    for extension in extensions {\n        var extension_lowercase = extension.lowercased()\n\
    \        var strength = extension_lowercase.count-class_name_lowercase.count\n\
    \        if strength > 0 {\n            strongest_extension = class_name + \"\
    .\" + extension\n            break\n        }\n    }\n    return strongest_extension",
  "    var strongest_extension = \"\"\n    var class_name_length = class_name.count\n\
    \    var extension_length = extensions.count\n    var strength = class_name_length\
    \ - extension_length\n    if strength == 0 {\n        return class_name\n    }\n\
    \    if strength < 0 {\n        strength *= -1\n    }\n    for extension in extensions\
    \ {\n        var extension_length = extension.count\n        var strength = class_name_length\
    \ - extension_length\n        if strength == 0 {\n            continue\n     \
    \   }\n        if strength < 0 {\n            strength *= -1\n        }\n    \
    \    if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    // Your code here\n    var strongest_extension = \"\"\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            strongest_extension\
    \ = class_name + \".\" + extension\n        }\n    }\n    return strongest_extension",
  "    // Your code here\n    let class_name = class_name.lowercased()\n    let extensions\
    \ = extensions.sorted()\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercase().countUpToUppercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters() -\
    \ extension.countLowercaseLetters()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\
    \ - extension.lowercased().characters.count\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    for extension\
    \ in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_name_components.last!\n        let extension\
    \ = extension_components.last!\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components_count - class_name_components_count.lowercased()\n\
    \        let extension_components_count_cap = extension_components_count - extension_components_count.lowercased()\n\
    \        let class_name_components_count_sm = class_name_components_count.lowercased()\n\
    \        let extension_components_count_sm = extension_components_count.lowercased()\n\
    \        let class_name_components_count_cap_extension = class_name_components_count_cap\
    \ - extension_components_count_cap\n        let extension_components_count_cap_extension\
    \ = extension_components_count_cap - class_name_components_count_cap\n       \
    \ let class_name_components_count_sm_extension = class_name_components_count_sm\
    \ - extension_components_count_sm\n        let extension_components_count_sm_extension\
    \ = extension_components_count_sm - class_name_components_count_sm\n        let\
    \ strength = class_name_components_count_cap_extension * extension_components_count_cap_extension\
    \ + class_name_components_count_sm_extension * extension_components_count_sm_extension\n\
    \        if strength > strongest_extension.characters.count {\n            strongest_extension\
    \ = class_name\n        }\n    }\n    return strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ class_name_uppercase = class_name.uppercased()\n    var class_name_lowercase\
    \ = class_name_uppercase.lowercased()\n    var class_name_length = class_name_uppercase.count\n\
    \    var extension_length = extensions.count\n    var extension_strength = extension_length\
    \ / class_name_length\n    var extension_strength_rounded = round(extension_strength\
    \ * 100) / 100\n    var extension_strength_rounded_rounded = round(extension_strength_rounded\
    \ * 100) / 100\n    var extension_strength_rounded_rounded_rounded = round(extension_strength_rounded_rounded\
    \ * 100) / 100\n    var extension_strength_rounded_rounded_rounded_rounded = round(extension_strength_rounded_rounded_rounded\
    \ * 100) / 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded * 100) / 100\n  \
    \  var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded = round(extension_strength_rounded_rounded_rounded_rounded_rounded\
    \ * 100) / 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded_rounded * 100) /\
    \ 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded_rounded * 100) /\
    \ 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded_rounded * 100) /\
    \ 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded_rounded * 100) /\
    \ 100\n    var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded * 100) / 100\n  \
    \  var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength_rounded_rounded_rounded_rounded * 100) / 100\n  \
    \  var extension_strength_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded_rounded\
    \ = round(extension_strength", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))!]',
  "    // Your code here\n    var strongest_extension = \"\"\n    for extension in\
    \ extensions {\n        var count = 0\n        for letter in extension {\n   \
    \         if letter.isUpper() {\n                count += 1\n            }\n \
    \       }\n        let strength = count / extension.count\n        if strength\
    \ > strongest_extension.count {\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name = class_name_components.last!\n        let extension\
    \ = extension_components.last!\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components_count - class_name_components_count.map\
    \ { $0.isUppercase }\n        let extension_components_count_upper = extension_components_count\
    \ - extension_components_count.map { $0.isUppercase }\n        let class_name_components_count_lower\
    \ = class_name_components_count - class_name_components_count.map { $0.isLowercase\
    \ }\n        let extension_components_count_lower = extension_components_count\
    \ - extension_components_count.map { $0.isLowercase }\n        let class_name_components_count_cap\
    \ = class_name_components_count - class_name_components_count.map { $0.isUppercase\
    \ - $0.isLowercase }\n        let extension_components_count_cap = extension_components_count\
    \ - extension_components_count.map { $0.isUppercase - $0.isLowercase }\n     \
    \   let class_name_components_count_sm = class_name_components_count - class_name_components_count.map\
    \ { $0.isLowercase - $0.isUppercase }\n        let extension_components_count_sm\
    \ = extension_components_count - extension_components_count.map { $0.isLowercase\
    \ - $0.isUppercase }\n        let class_name_components_count_cap_sm = (class_name_components_count_cap\
    \ + class_name_components_count_sm) / 2\n        let extension_components_count_cap_sm\
    \ = (extension_components_count_cap + extension_components_count_sm) / 2\n   \
    \     let class_name_components_count_cap_sm_lower = (class_name_components_count_cap_sm\
    \ + class_name_components_count_lower) / 2\n        let extension_components_count_cap_sm_lower\
    \ = (extension_components_count_cap_sm + extension_components_count_lower) / 2\n\
    \        let class_name_components_count_cap_sm_upper = (class_name_components_count_cap_sm\
    \ + class_name_components_count_upper) / 2\n        let extension_components_count_cap_sm_upper\
    \ = (extension_components_count_cap_sm + extension_components_count_upper) / 2\n\
    \        let class_name_components_count_cap_sm_cap = (class_name_components_count_cap_sm\
    \ + ", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.characters.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToUppercase() - extension.countUpToLowercase()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let strength = extension.countUpToCapitalLetters - extension.countLowercaseLetters\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n  \
    \      if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.countUppercaseLetters() - extension.countLowercaseLetters()\n  \
    \      if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToLowercaseLetters()\n        if\
    \ extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var class_name_length = class_name.characters.count\n    var extension_length\
    \ = extensions.count\n    var strongest_extension_length = class_name_length\n\
    \    var max_extension_strength = -1\n    for extension in extensions {\n    \
    \    var extension_strength = extension.characters.count\n        if extension_strength\
    \ > max_extension_strength {\n            max_extension_strength = extension_strength\n\
    \        }\n    }\n    for extension in extensions {\n        var extension_strength\
    \ = extension.characters.count\n        if extension_strength == max_extension_strength\
    \ {\n            strongest_extension += extension\n        }\n    }\n    if strongest_extension_length\
    \ < extension_length {\n        for _ in 0..<extension_length - strongest_extension_length\
    \ {\n            strongest_extension += \"A\"\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", '    return class_name + extensions[extensions.reduce(0,
    combine: +)].prefix(1)', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.characters.count\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strongest_extension_strength = -1\n    for extension in extensions\
    \ {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", '    return class_name
    + Strongest_Extension_Name(extensions)', "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension = extension\n            strongest_extension_strength\
    \ = extension_strength\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for letter in extension {\n            if letter.isUpper() {\n      \
    \          extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var max_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.characters.count\n        if extension_strength\
    \ > max_strength {\n            max_strength = extension_strength\n          \
    \  strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for c in extension {\n            if c >= 'A' && c <= 'Z' {\n       \
    \         extension_strength -= 1\n            }\n        }\n        if extension_strength\
    \ > strongest_extension_strength {\n            strongest_extension_strength =\
    \ extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var class_name_components = class_name.components(separatedBy: \"\
    .\")\n    var extensions_components = extensions.components(separatedBy: \".\"\
    )\n    var class_name_components_count = class_name_components.count\n    var\
    \ extensions_components_count = extensions_components.count\n    var strongest_extension_strength\
    \ = -1\n    var strongest_extension_strength_components = \"\"\n    var strongest_extension_strength_components_count\
    \ = 0\n    var strongest_extension_strength_components_count_max = 0\n    var\
    \ strongest_extension_strength_components_count_min = 0\n    var strongest_extension_strength_components_count_max_index\
    \ = 0\n    var strongest_extension_strength_components_count_min_index = 0\n \
    \   var strongest_extension_strength_components_count_max_count = 0\n    var strongest_extension_strength_components_count_min_count\
    \ = 0\n    var strongest_extension_strength_components_count_max_index = 0\n \
    \   var strongest_extension_strength_components_count_min_index = 0\n    var strongest_extension_strength_components_count_max_count\
    \ = 0\n    var strongest_extension_strength_components_count_min_count = 0\n \
    \   var strongest_extension_strength_components_count_max_index = 0\n    var strongest_extension_strength_components_count_min_index\
    \ = 0\n    var strongest_extension_strength_components_count_max_count = 0\n \
    \   var strongest_extension_strength_components_count_min_count = 0\n    var strongest_extension_strength_components_count_max_index\
    \ = 0\n    var strongest_extension_strength_components_count_min_index = 0\n \
    \   var strongest_extension_strength_components_count_max_count = 0\n    var strongest_extension_strength_components_count_min_count\
    \ = 0\n    var strongest_extension_strength_components_count_max_index = 0\n \
    \   var strongest_extension_strength_components_count_min_index = 0\n    var strongest_extension_strength_components_count_max_count\
    \ = 0\n    var strongest_extension_strength_components_count_min_count = 0\n \
    \   var strongest_extension_strength_components_count_max_index = 0\n    var strongest_extension_strength_components_count_min_index\
    \ = 0\n    var strongest_extension_strength_components_count_max_count = 0\n \
    \   var strongest_extension_strength_components_count_min_count = 0\n    var strongest_extension_strength_components_count_max_index\
    \ = 0\n    var strongest_extension_strength_components_count_min_index = 0\n \
    \   var strongest_extension_strength_components_count_max_count = 0\n    var ",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToUppercase()\
    \ - extension.countUpToLowercase()\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUppercaseLetters()\
    \ - extension.countLowercaseLetters()\n        if extension_strength > max_strength\
    \ {\n            max_strength = extension_strength\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            if strength\
    \ > strength {\n                strongest_extension = extension\n            \
    \    strength = strength\n            }\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   var extension_strength = extension.count\n        for letter in extension\
    \ {\n            if letter.isUpper() {\n                extension_strength -=\
    \ 1\n            }\n        }\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", '    return class_name + "." + extensions[extensions.reduce(0,
    {$0 + $1.count})]', "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.countUpToUppercaseLetters\
    \ - extension.countUpToLowercaseLetters\n        if extension_strength > strongest_extension_strength\
    \ {\n            strongest_extension_strength = extension_strength\n         \
    \   strongest_extension = extension\n        }\n    }\n    return class_name +\
    \ \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        var extension_strength = extension.count\n\
    \        for character in extension {\n            if character == character.lowercased()\
    \ {\n                extension_strength -= 1\n            }\n        }\n     \
    \   if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var class_name_lowercase = class_name.lowercased()\n    var class_name_uppercase\
    \ = class_name.uppercased()\n    var class_name_length = class_name.characters.count\n\
    \    var extension_length = extensions.characters.count\n    var strongest_extension_length\
    \ = class_name_length - extension_length\n    var strongest_extension_strength\
    \ = -1\n    var strongest_extension_strength_index = 0\n    for extension in extensions\
    \ {\n        var extension_lowercase = extension.lowercased()\n        var extension_uppercase\
    \ = extension.uppercased()\n        var extension_length = extension.characters.count\n\
    \        var extension_strength = extension_length - strongest_extension_length\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension_strength_index = extension_length\
    \ - strongest_extension_length\n        }\n        if extension_strength == strongest_extension_strength\
    \ {\n            if extension_lowercase == class_name_lowercase {\n          \
    \      strongest_extension = class_name + extension\n            }\n        }\n\
    \    }\n    if strongest_extension_strength == -1 {\n        return class_name\n\
    \    }\n    return class_name + extensions[strongest_extension_strength_index]",
  "    var strongest_extension = \"\"\n    for extension in extensions {\n       \
    \ var extension_strength = extension.count\n        for letter in extension {\n\
    \            if letter.isUpper() {\n                extension_strength -= 1\n\
    \            }\n        }\n        if extension_strength == 0 {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + \".\" + strongest_extension",
  "    // Your code here\n    var strongest_extension = \"\"\n    var max_strength\
    \ = -1\n    for extension in extensions {\n        var strength = count_capital_letters(extension)\
    \ - count_capital_letters(extension.lowercaseString)\n        if strength > max_strength\
    \ {\n            max_strength = strength\n            strongest_extension = extension\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ var strongest_extension = \"\"\n    var strength = -1 // default value\n   \
    \ for extension in extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_cap = class_name_components_count.map { $0.capitalized\
    \ }.count\n        let extension_components_count_cap = extension_components_count.map\
    \ { $0.capitalized }.count\n        let class_name_components_count_sm = class_name_components_count.map\
    \ { $0.lowercased() }.count\n        let extension_components_count_sm = extension_components_count.map\
    \ { $0.lowercased() }.count\n        let cap_diff = class_name_components_count_cap\
    \ - extension_components_count_cap\n        let sm_diff = class_name_components_count_sm\
    \ - extension_components_count_sm\n        if cap_diff > sm_diff {\n         \
    \   strongest_extension = class_name + \".\" + extension\n            strength\
    \ = cap_diff\n        } else if sm_diff > cap_diff {\n            strongest_extension\
    \ = class_name + \".\" + extension\n            strength = sm_diff\n        }\n\
    \    }\n    return strongest_extension", "    var strongest_extension = \"\"\n\
    \    var strongest_extension_strength = -1\n    for extension in extensions {\n\
    \        let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension\
    \ = extension\n            strongest_extension_strength = extension_strength\n\
    \        }\n    }\n    return class_name + \".\" + strongest_extension", "   \
    \ // Your code here\n    var strongest_extension = \"\"\n    for extension in\
    \ extensions {\n        let cap = extension.count\n        let sm = class_name.count\n\
    \        let strength = cap - sm\n        if strength > 0 {\n            strongest_extension\
    \ += class_name + extension\n        }\n    }\n    return strongest_extension",
  '    return class_name + "." + extensions[extensions.reduce(0, combine: max)]',
  "    var strongest_extension = \"\"\n    var strength = -1\n    for extension in\
    \ extensions {\n        let class_name_components = class_name.components(separatedBy:\
    \ \".\")\n        let extension_components = extension.components(separatedBy:\
    \ \".\")\n        let class_name_components_count = class_name_components.count\n\
    \        let extension_components_count = extension_components.count\n       \
    \ let class_name_components_count_upper = class_name_components_count - class_name_components.count\n\
    \        let extension_components_count_upper = extension_components_count - extension_components.count\n\
    \        let class_name_components_count_lower = class_name_components_count -\
    \ class_name_components.count * 2\n        let extension_components_count_lower\
    \ = extension_components_count - extension_components.count * 2\n        let class_name_components_count_cap\
    \ = class_name_components_count - class_name_components.count * 3\n        let\
    \ extension_components_count_cap = extension_components_count - extension_components.count\
    \ * 3\n        let class_name_components_count_sm = class_name_components_count\
    \ - class_name_components.count * 4\n        let extension_components_count_sm\
    \ = extension_components_count - extension_components.count * 4\n        let class_name_components_count_cap_small\
    \ = class_name_components_count - class_name_components.count * 5\n        let\
    \ extension_components_count_cap_small = extension_components_count - extension_components.count\
    \ * 5\n        let class_name_components_count_cap_lower = class_name_components_count\
    \ - class_name_components.count * 6\n        let extension_components_count_cap_lower\
    \ = extension_components_count - extension_components.count * 6\n        let class_name_components_count_cap_upper\
    \ = class_name_components_count - class_name_components.count * 7\n        let\
    \ extension_components_count_cap_upper = extension_components_count - extension_components.count\
    \ * 7\n        let class_name_components_count_cap_small_upper = class_name_components_count\
    \ - class_name_components.count * 8\n        let extension_components_count_cap_small_upper\
    \ = extension_components_count - extension_components.count * 8\n        let class_name_components_count_cap_small_lower\
    \ = class_name_components_count - class_name_components.count * 9\n        let\
    \ extension_components_count_cap_small_lower = extension_components_count - extension_components.count\
    \ * 9\n        let class_name_components_count_cap_lower_upper = class_name_components_count\
    \ - class_name_components.count * 10\n        let extension_components_count_cap_lower_upper\
    \ = extension_components_count - extension_components.count * 10", '    return
    class_name + "." + extensions[extensions.index(extensions.firstIndex(of: class_name.lowercased()))]',
  "    var strongest_extension = \"\"\n    var max_strength = -1\n    for extension\
    \ in extensions {\n        var strength = count_capital_letters(extension) - count_capital_letters(class_name)\n\
    \        if strength > max_strength {\n            max_strength = strength\n \
    \           strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ max_strength = -1\n    for extension in extensions {\n        let extension_strength\
    \ = extension.characters.count - extension.lowercased().characters.count\n   \
    \     if extension_strength > max_strength {\n            max_strength = extension_strength\n\
    \            strongest_extension = extension\n        }\n    }\n    return class_name\
    \ + \".\" + strongest_extension", "    var strongest_extension = \"\"\n    var\
    \ strongest_extension_strength = -1\n    for extension in extensions {\n     \
    \   let extension_strength = extension.countUpToUppercaseLetters - extension.countUpToLowercaseLetters\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    var strongest_extension\
    \ = \"\"\n    var strength = 0\n    for extension in extensions {\n        let\
    \ cap = extension.count\n        let sm = class_name.count\n        let strength\
    \ = cap - sm\n        if strength > strongest_extension.count {\n            strongest_extension\
    \ = extension\n        }\n    }\n    return class_name + strongest_extension",
  "    var strongest_extension = \"\"\n    var strongest_extension_strength = -1\n\
    \    for extension in extensions {\n        let extension_strength = extension.countUpToLowercaseLetters()\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension", "    // Your code\
    \ here\n    var strongest_extension = \"\"\n    var strongest_extension_strength\
    \ = -1\n    for extension in extensions {\n        let extension_strength = extension.count\n\
    \        if extension_strength > strongest_extension_strength {\n            strongest_extension_strength\
    \ = extension_strength\n            strongest_extension = extension\n        }\n\
    \    }\n    return class_name + \".\" + strongest_extension"]
stop_tokens:
- "\n}"

language: swift
name: HumanEval_62_derivative
results:
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n    }\n\
    \    for i in xs.indices {\n        result[i] *= xs[i]\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpzpo07k9v/tmpzpo07k9v.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b592728cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5926f83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5926f83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5926f827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzpo07k9v                        0x0000563e4af5182c <unavailable> + 6188

    5    libc.so.6                          0x00002b5927478460 __libc_start_main +
    245

    6    tmpzpo07k9v                        0x0000563e4af51419 <unavailable> + 5145

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ == 0 {\n            result.append(x)\n        } else {\n            result.append(x\
    \ * result[power])\n        }\n        power += 1\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b43a7aedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b43a77e4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b43a77e4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b43a77e413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b43a77e3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b43a75e5e83 <unavailable> + 188035

    6    tmpb7a98o1y                        0x00005642091f3c7c <unavailable> + 7292

    7    tmpb7a98o1y                        0x00005642091f3564 <unavailable> + 5476

    8    libc.so.6                          0x00002b43a7cd9460 __libc_start_main +
    245

    9    tmpb7a98o1y                        0x00005642091f3239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002af97d5b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af97d2af561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af97d2af286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af97d2af13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af97d2aebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002af97d0aee83 <unavailable> + 188035

    6    tmpqu86eagv                        0x000055ec5be77c9d <unavailable> + 7325

    7    tmpqu86eagv                        0x000055ec5be77584 <unavailable> + 5508

    8    libc.so.6                          0x00002af97d7a4460 __libc_start_main +
    245

    9    tmpqu86eagv                        0x000055ec5be77259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0f712dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0f6e24561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ae0f6e24286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ae0f6e2413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ae0f6e23bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002ae0f6c23e83 <unavailable> + 188035

    6    tmpnocejwyp                        0x000055cd4bb98ad7 <unavailable> + 6871

    7    tmpnocejwyp                        0x000055cd4bb98454 <unavailable> + 5204

    8    libc.so.6                          0x00002ae0f7319460 __libc_start_main +
    245

    9    tmpnocejwyp                        0x000055cd4bb98129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d8da2ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d8d725561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b5d8d725286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b5d8d72513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b5d8d724bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b5d8d524e83 <unavailable> + 188035

    6    tmp9gf855us                        0x0000559205420c9d <unavailable> + 7325

    7    tmp9gf855us                        0x0000559205420584 <unavailable> + 5508

    8    libc.so.6                          0x00002b5d8dc1a460 __libc_start_main +
    245

    9    tmp9gf855us                        0x0000559205420259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a79dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a79ad4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9a79ad4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9a79ad413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9a79ad3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9a798d3e83 <unavailable> + 188035

    6    tmpgsesqw7d                        0x000055a512146c71 <unavailable> + 7281

    7    tmpgsesqw7d                        0x000055a512146564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9a79fc9460 __libc_start_main +
    245

    9    tmpgsesqw7d                        0x000055a512146239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ == 0 {\n            result.append(1)\n        } else {\n            result.append(x\
    \ * result[power])\n        }\n        power += 1\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c12b3ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c12835561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b1c12835286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b1c1283513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1c12834bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b1c12634e83 <unavailable> + 188035

    6    tmp9y1fw8m5                        0x000055effa6d2c79 <unavailable> + 7289

    7    tmp9y1fw8m5                        0x000055effa6d2564 <unavailable> + 5476

    8    libc.so.6                          0x00002b1c12d2a460 __libc_start_main +
    245

    9    tmp9y1fw8m5                        0x000055effa6d2239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b5d8da2ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5d8d725561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b5d8d725286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b5d8d72513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b5d8d724bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b5d8d524e83 <unavailable> + 188035

    6    tmp9gf855us                        0x0000559205420c9d <unavailable> + 7325

    7    tmp9gf855us                        0x0000559205420584 <unavailable> + 5508

    8    libc.so.6                          0x00002b5d8dc1a460 __libc_start_main +
    245

    9    tmp9gf855us                        0x0000559205420259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        result[power]\
    \ = x\n        power += 1\n    }\n    while power < result.count {\n        result[power]\
    \ = 0\n        power += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:613: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e3bec4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e3bbbb561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9e3bbbb286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9e3bbbb13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9e3bbbabb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9e3b9ba7ec <unavailable> + 186348

    6    tmpisfhh9dp                        0x0000556928251c7d <unavailable> + 7293

    7    tmpisfhh9dp                        0x0000556928251564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9e3c0b0460 __libc_start_main +
    245

    9    tmpisfhh9dp                        0x0000556928251239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(x * power)\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6y50cnal/tmp6y50cnal.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1a7783c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1a747ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1a747a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1a74797b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6y50cnal                        0x00005608ada705fc <unavailable> + 5628

    5    libc.so.6                          0x00002af1a796f460 __libc_start_main +
    245

    6    tmp6y50cnal                        0x00005608ada701e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i])\n\
    \        i += 1\n    }\n    result.append(1)\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpievloqcn/tmpievloqcn.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae76d456c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae76d14db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae76d14d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae76d14c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpievloqcn                        0x000055a5c788953c <unavailable> + 5436

    5    libc.so.6                          0x00002ae76d642460 __libc_start_main +
    245

    6    tmpievloqcn                        0x000055a5c7889129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[xs.count - 1])\n        x *= xs[xs.count - 1]\n    }\n   \
    \ return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3,\
    \ 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpvs6_u7ds/tmpvs6_u7ds.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b115d6c2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b115d3b9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b115d3b9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b115d3b87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvs6_u7ds                        0x0000559402a296cc <unavailable> + 5836

    5    libc.so.6                          0x00002b115d8ae460 __libc_start_main +
    245

    6    tmpvs6_u7ds                        0x0000559402a292b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n\
    \        x = x * x\n    }\n    result.append(x)\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplntinnl7/tmplntinnl7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd7696c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd738db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd738d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd738c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplntinnl7                        0x00005636bbc0e5fc <unavailable> + 5628

    5    libc.so.6                          0x00002afbd7882460 __libc_start_main +
    245

    6    tmplntinnl7                        0x00005636bbc0e1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ == 0 {\n            result.append(x)\n        } else {\n            result.append(x\
    \ * result[power])\n        }\n        power += 1\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b43a7aedc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b43a77e4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b43a77e4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b43a77e413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b43a77e3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b43a75e5e83 <unavailable> + 188035

    6    tmpb7a98o1y                        0x00005642091f3c7c <unavailable> + 7292

    7    tmpb7a98o1y                        0x00005642091f3564 <unavailable> + 5476

    8    libc.so.6                          0x00002b43a7cd9460 __libc_start_main +
    245

    9    tmpb7a98o1y                        0x00005642091f3239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i] / xs[i-1])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b18461e8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1845edf561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b1845edf286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b1845edf13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1845edebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b1845cdee83 <unavailable> + 188035

    6    tmpib8wi9l5                        0x000055bf0aa23d2d <unavailable> + 7469

    7    tmpib8wi9l5                        0x000055bf0aa23614 <unavailable> + 5652

    8    libc.so.6                          0x00002b18463d4460 __libc_start_main +
    245

    9    tmpib8wi9l5                        0x000055bf0aa232e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a79dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a79ad4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9a79ad4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9a79ad413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9a79ad3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9a798d3e83 <unavailable> + 188035

    6    tmpgsesqw7d                        0x000055a512146c71 <unavailable> + 7281

    7    tmpgsesqw7d                        0x000055a512146564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9a79fc9460 __libc_start_main +
    245

    9    tmpgsesqw7d                        0x000055a512146239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return Array(0..<xs.count).map { i in\n        let x = xs[i]\n        let\
    \ xp = xs[i + 1]\n        return x * xp\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b04afe1cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b04afb13561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b04afb13286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b04afb1313c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b04afb12bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b04af912e83 <unavailable> + 188035

    6    tmpy3u8zsvr                        0x000055f5e6087de6 <unavailable> + 7654

    7    tmpy3u8zsvr                        0x000055f5e60883cf <unavailable> + 9167

    8    libswiftCore.so                    0x00002b04afafb820 Collection.map<A>(_:)
    + 426

    9    tmpy3u8zsvr                        0x000055f5e6087cad <unavailable> + 7341

    10   tmpy3u8zsvr                        0x000055f5e6087614 <unavailable> + 5652

    11   libc.so.6                          0x00002b04b0008460 __libc_start_main +
    245

    12   tmpy3u8zsvr                        0x000055f5e60872e9 <unavailable> + 4841

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n      \
    \  result.append(x * xs[Int(x)])\n        x += 1\n    }\n    return result\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b6e1d2e2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6e1cfd9561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6e1cfd9286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6e1cfd913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6e1cfd8bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b6e1cddae83 <unavailable> + 188035

    6    tmp7_y37t2h                        0x000055b5e67abea3 <unavailable> + 7843

    7    tmp7_y37t2h                        0x000055b5e67ab714 <unavailable> + 5908

    8    libc.so.6                          0x00002b6e1d4ce460 __libc_start_main +
    245

    9    tmp7_y37t2h                        0x000055b5e67ab3e9 <unavailable> + 5097

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n\
    \        x = x * x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpu29ko6_l/tmpu29ko6_l.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab63fa40c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab63f737b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab63f737988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab63f7367b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu29ko6_l                        0x000055e8e32185fc <unavailable> + 5628

    5    libc.so.6                          0x00002ab63fc2c460 __libc_start_main +
    245

    6    tmpu29ko6_l                        0x000055e8e32181e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(x * power)\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdcrtfyue/tmpdcrtfyue.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac305957c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac30564eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac30564e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac30564d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdcrtfyue                        0x00005583be1025fc <unavailable> + 5628

    5    libc.so.6                          0x00002ac305b43460 __libc_start_main +
    245

    6    tmpdcrtfyue                        0x00005583be1021e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ > 0 {\n            result.append(power)\n        }\n        result.append(x)\n\
    \        power += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmppugsz79x/tmppugsz79x.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc03c74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc0396bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc0396b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc0396a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppugsz79x                        0x0000560de38675fc <unavailable> + 5628

    5    libc.so.6                          0x00002afc03e60460 __libc_start_main +
    245

    6    tmppugsz79x                        0x0000560de38671e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i] - xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b27062ffc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2705ff6561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b2705ff6286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b2705ff613c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b2705ff5bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b2705df5e83 <unavailable> + 188035

    6    tmpoezeldd7                        0x000056209b310ca9 <unavailable> + 7337

    7    tmpoezeldd7                        0x000056209b310564 <unavailable> + 5476

    8    libc.so.6                          0x00002b27064eb460 __libc_start_main +
    245

    9    tmpoezeldd7                        0x000056209b310239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        result.append(1)\n\
    \        power += 1\n        while power < x.count {\n            result.append(result[power]\
    \ * x)\n            power += 1\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp474z42px.swift:15:25: error: value of type 'Int' has no member\
    \ 'count'\n        while power < x.count {\n                      ~ ^~~~~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs.last! * x)\n        x *= xs.last!\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpr89j4g6t/tmpr89j4g6t.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8b82e27c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8b82b1eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8b82b1e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8b82b1d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr89j4g6t                        0x000055ecacb0a70c <unavailable> + 5900

    5    libc.so.6                          0x00002b8b83013460 __libc_start_main +
    245

    6    tmpr89j4g6t                        0x000055ecacb0a2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp3iyu052_/tmp3iyu052_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac76975ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac769451b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac769451988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac7694507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3iyu052_                        0x0000557f25f466cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac769946460 __libc_start_main +
    245

    6    tmp3iyu052_                        0x0000557f25f462b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i-1] * xs[i] / Double(xs[i-1]))\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpr8z1weeu.swift:12:9: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n        result.append(xs[i] - xs[i-1] * xs[i] / Double(xs[i-1]))\n\
    \        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824863
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpfno4i959.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 0)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    result.append(1)\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp990g1jhj/tmp990g1jhj.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b191a674c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b191a36bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b191a36b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b191a36a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp990g1jhj                        0x0000563fbc50f6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b191a860460 __libc_start_main +
    245

    6    tmp990g1jhj                        0x0000563fbc50f2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i] / xs.count)\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpv390woai/tmpv390woai.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af1915acc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af1912a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af1912a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1912a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpv390woai                        0x000055fbd8d8973c <unavailable> + 5948

    5    libc.so.6                          0x00002af191798460 __libc_start_main +
    245

    6    tmpv390woai                        0x000055fbd8d89329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a79dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a79ad4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9a79ad4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9a79ad413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9a79ad3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9a798d3e83 <unavailable> + 188035

    6    tmpgsesqw7d                        0x000055a512146c71 <unavailable> + 7281

    7    tmpgsesqw7d                        0x000055a512146564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9a79fc9460 __libc_start_main +
    245

    9    tmpgsesqw7d                        0x000055a512146239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(pow(x, power))\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpw2c6y9la.swift:14:23: error: cannot find 'pow' in scope\n     \
    \   result.append(pow(x, power))\n                      ^~~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpia9z0k9w.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in xs {\n        result.append(1)\n\
    \        x = x * x\n    }\n    result.append(x)\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmplntinnl7/tmplntinnl7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afbd7696c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afbd738db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afbd738d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afbd738c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplntinnl7                        0x00005636bbc0e5fc <unavailable> + 5628

    5    libc.so.6                          0x00002afbd7882460 __libc_start_main +
    245

    6    tmplntinnl7                        0x00005636bbc0e1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    result.reverse()\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(derivative(xs: [3, 1,\
    \ 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\n\
    assert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0,\
    \ 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp1z8m7tnl/tmp1z8m7tnl.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b11c1271c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b11c0f68b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b11c0f68988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b11c0f677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1z8m7tnl                        0x000055cc1239779c <unavailable> + 6044

    5    libc.so.6                          0x00002b11c145d460 __libc_start_main +
    245

    6    tmp1z8m7tnl                        0x000055cc12397389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(1)\n\
    \        result[j] += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpkxoillx4.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpia9z0k9w.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs.indices {\n        result.append(xs[i]\
    \ - xs[i - 1] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002af97d5b8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af97d2af561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002af97d2af286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002af97d2af13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002af97d2aebb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002af97d0aee83 <unavailable> + 188035

    6    tmpqu86eagv                        0x000055ec5be77c9d <unavailable> + 7325

    7    tmpqu86eagv                        0x000055ec5be77584 <unavailable> + 5508

    8    libc.so.6                          0x00002af97d7a4460 __libc_start_main +
    245

    9    tmpqu86eagv                        0x000055ec5be77259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a79dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a79ad4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9a79ad4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9a79ad413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9a79ad3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9a798d3e83 <unavailable> + 188035

    6    tmpgsesqw7d                        0x000055a512146c71 <unavailable> + 7281

    7    tmpgsesqw7d                        0x000055a512146564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9a79fc9460 __libc_start_main +
    245

    9    tmpgsesqw7d                        0x000055a512146239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x += xs[x]\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002acb04699c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb04390561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002acb04390286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002acb0439013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002acb0438fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002acb0418fe83 <unavailable> + 188035

    6    tmpe_058plx                        0x000055e16e5e3cec <unavailable> + 7404

    7    tmpe_058plx                        0x000055e16e5e35e4 <unavailable> + 5604

    8    libc.so.6                          0x00002acb04885460 __libc_start_main +
    245

    9    tmpe_058plx                        0x000055e16e5e32b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in xs {\n        result.append(1)\n     \
    \   result.append(i)\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxf2lhana/tmpxf2lhana.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b23e54a7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b23e519eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b23e519e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b23e519d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxf2lhana                        0x0000564faf1105fc <unavailable> + 5628

    5    libc.so.6                          0x00002b23e5693460 __libc_start_main +
    245

    6    tmpxf2lhana                        0x0000564faf1101e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x += xs[x]\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002acb04699c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acb04390561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002acb04390286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002acb0439013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002acb0438fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002acb0418fe83 <unavailable> + 188035

    6    tmpe_058plx                        0x000055e16e5e3cec <unavailable> + 7404

    7    tmpe_058plx                        0x000055e16e5e35e4 <unavailable> + 5604

    8    libc.so.6                          0x00002acb04885460 __libc_start_main +
    245

    9    tmpe_058plx                        0x000055e16e5e32b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(1)\n\
    \        result[j] += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpkxoillx4.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result.append(i)\n\
    \        result[j] += i\n        j++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpzuir_pw7.swift:15:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i - 1])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b9a79dddc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9a79ad4561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b9a79ad4286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b9a79ad413c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b9a79ad3bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b9a798d3e83 <unavailable> + 188035

    6    tmpgsesqw7d                        0x000055a512146c71 <unavailable> + 7281

    7    tmpgsesqw7d                        0x000055a512146564 <unavailable> + 5476

    8    libc.so.6                          0x00002b9a79fc9460 __libc_start_main +
    245

    9    tmpgsesqw7d                        0x000055a512146239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ > 0 {\n            result.append(x * result[power])\n        } else {\n    \
    \        result.append(x)\n        }\n        power++\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp48hh06n0.swift:18:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        power++\n             ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(x * power)\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdcrtfyue/tmpdcrtfyue.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac305957c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac30564eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac30564e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac30564d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdcrtfyue                        0x00005583be1025fc <unavailable> + 5628

    5    libc.so.6                          0x00002ac305b43460 __libc_start_main +
    245

    6    tmpdcrtfyue                        0x00005583be1021e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpfno4i959.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 0)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[(i + 1) % xs.count])\n        i += 1\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpd9ng6nrc/tmpd9ng6nrc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace3d101c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace3cdf8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace3cdf8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace3cdf77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd9ng6nrc                        0x00005601bdd6473c <unavailable> + 5948

    5    libc.so.6                          0x00002ace3d2ed460 __libc_start_main +
    245

    6    tmpd9ng6nrc                        0x00005601bdd64329 <unavailable> + 4905

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, xs.count)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpkam4rvrx.swift:10:30: error: extra argument in call\n    return\
    \ derivative(xs, xs.count)\n                     ~~~~~~~~^~~~~~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    return derivative(xs, 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpg0jtlgyx.swift:10:27: error: extra argument in call\n    return\
    \ derivative(xs, 1)\n                     ~~~~~^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(power)\n    }\n    return derivative(result)\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmppc0h5ott.swift:16:23: error: missing argument label 'xs:' in call\n\
    \    return derivative(result)\n                      ^\n                    \
    \  xs: \n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 1\n    for _ in 0..<xs.count {\n      \
    \  result.append(x * xs[_x])\n        x += 1\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp2gn4nicg.swift:13:30: error: cannot find '_x' in scope\n      \
    \  result.append(x * xs[_x])\n                             ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ += 1\n        result.append(x * power)\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpdcrtfyue/tmpdcrtfyue.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac305957c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac30564eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac30564e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac30564d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdcrtfyue                        0x00005583be1025fc <unavailable> + 5628

    5    libc.so.6                          0x00002ac305b43460 __libc_start_main +
    245

    6    tmpdcrtfyue                        0x00005583be1021e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0 ..< xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmptyh7ya33/tmptyh7ya33.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac458199c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac457e90b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac457e90988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac457e8f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptyh7ya33                        0x0000555a1f60a6cc <unavailable> + 5836

    5    libc.so.6                          0x00002ac458385460 __libc_start_main +
    245

    6    tmptyh7ya33                        0x0000555a1f60a2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var x = 0\n    for _ in 0..<xs.count {\n      \
    \  result.append(xs[x])\n        x++\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmp5dg16ekf.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        x++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    for x in xs {\n        result.append(x\
    \ * xs[i])\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp2ka9e7_o/tmp2ka9e7_o.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9bbf615c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9bbf30cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9bbf30c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9bbf30b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2ka9e7_o                        0x000055bbace6664c <unavailable> + 5708

    5    libc.so.6                          0x00002b9bbf801460 __libc_start_main +
    245

    6    tmp2ka9e7_o                        0x000055bbace66239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        power\
    \ = power + 1\n        result.append(power)\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxqg9kwzd/tmpxqg9kwzd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7eb9c72c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7eb9969b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7eb9969988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7eb99687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxqg9kwzd                        0x00005620ec7b05fc <unavailable> + 5628

    5    libc.so.6                          0x00002b7eb9e5e460 __libc_start_main +
    245

    6    tmpxqg9kwzd                        0x00005620ec7b01e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 1\n    for x in xs {\n        result.append(power\
    \ * x)\n        power *= x\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpl0azum_7/tmpl0azum_7.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b29fc119c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b29fbe10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b29fbe10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b29fbe0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl0azum_7                        0x0000557d37eaf5fc <unavailable> + 5628

    5    libc.so.6                          0x00002b29fc305460 __libc_start_main +
    245

    6    tmpl0azum_7                        0x0000557d37eaf1e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var i = 0\n    while i < xs.count {\n        result.append(xs[i])\n\
    \        i += 1\n    }\n    for _ in 0..<xs.count {\n        result.append(0)\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpg1mvnh5r/tmpg1mvnh5r.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b59f24e7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b59f21deb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b59f21de988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b59f21dd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg1mvnh5r                        0x000055d16b1fd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b59f26d3460 __libc_start_main +
    245

    6    tmpg1mvnh5r                        0x000055d16b1fd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ = i\n        j++\n    }\n    result.reverse()\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpgcq_tn4c.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: 1
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var j = 0\n    for i in xs {\n        result[j]\
    \ = i\n        j++\n    }\n    result.reverse()\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12,\
    \ 20])\nassert(derivative(xs: [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3,\
    \ 2, 1]) == [2, 2])\nassert(derivative(xs: [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\n\
    assert(derivative(xs: [1]) == [] as [Int])"
  status: SyntaxError
  stderr: "/tmp/tmpgcq_tn4c.swift:14:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        j++\n         ^~\n"
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i]\
    \ * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpeo8c6mfd/tmpeo8c6mfd.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3f86efec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3f86bf5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3f86bf5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3f86bf47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeo8c6mfd                        0x00005650afbcd6cc <unavailable> + 5836

    5    libc.so.6                          0x00002b3f870ea460 __libc_start_main +
    245

    6    tmpeo8c6mfd                        0x00005650afbcd2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for i in 0..<xs.count {\n        result.append(xs[i])\n\
    \        result.append(xs[i] * xs[i])\n    }\n    return result\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmp6e74lxt7/tmp6e74lxt7.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aedefbd8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aedef8cfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aedef8cf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aedef8ce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6e74lxt7                        0x000055d1ef0f16cc <unavailable> + 5836

    5    libc.so.6                          0x00002aedefdc4460 __libc_start_main +
    245

    6    tmp6e74lxt7                        0x000055d1ef0f12b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    for x in xs {\n        result.append(x * x)\n \
    \   }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(derivative(xs:\
    \ [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs: [1, 2, 3]) == [2,\
    \ 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs: [3,\
    \ 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmpxxjn1p5v/tmpxxjn1p5v.swift:30: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b12fb447c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b12fb13eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b12fb13e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b12fb13d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxxjn1p5v                        0x000056326d5055fc <unavailable> + 5628

    5    libc.so.6                          0x00002b12fb633460 __libc_start_main +
    245

    6    tmpxxjn1p5v                        0x000056326d5051e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844
- exit_code: -4
  program: "\n/// xs represent coefficients of a polynomial.\n/// xs[0] + xs[1] *\
    \ x + xs[2] * x^2 + ....\n/// Return derivative of this polynomial in the same\
    \ form.\n/// >>> derivative(xs: [3, 1, 2, 4, 5])\n/// [1, 4, 12, 20]\n/// >>>\
    \ derivative(xs: [1, 2, 3])\n/// [2, 6]\nfunc derivative(xs: [Int]) -> [Int] {\n\
    \    var result = [Int]()\n    var power = 0\n    for x in xs {\n        if power\
    \ > 0 {\n            result.append(power)\n        }\n        result.append(x)\n\
    \        power += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(derivative(xs: [3, 1, 2, 4, 5]) == [1, 4, 12, 20])\nassert(derivative(xs:\
    \ [1, 2, 3]) == [2, 6])\nassert(derivative(xs: [3, 2, 1]) == [2, 2])\nassert(derivative(xs:\
    \ [3, 2, 1, 0, 4]) == [2, 2, 0, 16])\nassert(derivative(xs: [1]) == [] as [Int])"
  status: Exception
  stderr: 'tmppugsz79x/tmppugsz79x.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc03c74c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc0396bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc0396b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc0396a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppugsz79x                        0x0000560de38675fc <unavailable> + 5628

    5    libc.so.6                          0x00002afc03e60460 __libc_start_main +
    245

    6    tmppugsz79x                        0x0000560de38671e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824844

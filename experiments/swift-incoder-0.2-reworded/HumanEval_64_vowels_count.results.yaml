language: swift
name: HumanEval_64_vowels_count
results:
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var vowels_count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            vowels_count += 1\n        }\n    }\n    return vowels_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4l93meqz/tmp4l93meqz.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b85ef128c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b85eee1fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b85eee1f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b85eee1e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4l93meqz                        0x000055c92a8ba64b <unavailable> + 5707

    5    libc.so.6                          0x00002b85ef314460 __libc_start_main +
    245

    6    tmp4l93meqz                        0x000055c92a8ba229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.endIndex < s.startIndex {\n              \
    \  count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9hbsthwr.swift:14:9: error: switch must be exhaustive\n       \
    \ switch c {\n        ^\n/tmp/tmp9hbsthwr.swift:14:9: note: do you want to add\
    \ a default clause?\n        switch c {\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"aeiou\"\n    var vowel_count = 0\n    for\
    \ letter in s {\n        if letter == \"a\" || letter == \"e\" || letter == \"\
    i\" || letter == \"o\" || letter == \"u\" {\n            vowel_count++\n     \
    \   }\n    }\n    return vowel_count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpxs9g0bdh.swift:16:24: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            vowel_count++\n                       ^~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var vowels_count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            vowels_count += 1\n        }\n    }\n    return vowels_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3opieyso/tmp3opieyso.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b35dd592c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b35dd289b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b35dd289988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b35dd2887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3opieyso                        0x0000560c3fe7364b <unavailable> + 5707

    5    libc.so.6                          0x00002b35dd77e460 __libc_start_main +
    245

    6    tmp3opieyso                        0x0000560c3fe73229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        if\
    \ letter == \"a\" || letter == \"e\" || letter == \"i\" || letter == \"o\" ||\
    \ letter == \"u\" {\n            vowelCount += 1\n        }\n    }\n    return\
    \ vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp7il1al35/tmp7il1al35.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b671a722c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b671a419b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b671a419988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b671a4187b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7il1al35                        0x000055749f81a4bb <unavailable> + 5307

    5    libc.so.6                          0x00002b671a90e460 __libc_start_main +
    245

    6    tmp7il1al35                        0x000055749f81a099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: 1)] {\n                count += 1\n \
    \           }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9fg5h7r2.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp9fg5h7r2.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: 1)] {\n                      ~~~~~~~~~~~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.endIndex < s.startIndex {\n              \
    \  count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9hbsthwr.swift:14:9: error: switch must be exhaustive\n       \
    \ switch c {\n        ^\n/tmp/tmp9hbsthwr.swift:14:9: note: do you want to add\
    \ a default clause?\n        switch c {\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ letter in s {\n        if letter == vowels.firstIndex(of: letter) {\n      \
    \      count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpvc8f71h1.swift:15:29: error: cannot convert value of type 'String.Index?'\
    \ to expected argument type 'Character'\n        if letter == vowels.firstIndex(of:\
    \ letter) {\n                            ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        if c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            vowelCount\
    \ += 1\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpnhifyljy.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpnhifyljy.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpnhifyljy.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpnhifyljy.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpnhifyljy.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdv9ejiig/tmpdv9ejiig.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b612b9abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b612b6a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b612b6a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b612b6a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdv9ejiig                        0x00005640895db4db <unavailable> + 5339

    5    libc.so.6                          0x00002b612bb97460 __libc_start_main +
    245

    6    tmpdv9ejiig                        0x00005640895db0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: 1)] {\n                count += 1\n \
    \           }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9fg5h7r2.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp9fg5h7r2.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp9fg5h7r2.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: 1)] {\n                      ~~~~~~~~~~~~ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.endIndex] {\n                count += 1\n            }\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp3ifc6iqz.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp3ifc6iqz.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp3ifc6iqz.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp3ifc6iqz.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels: [Character] = [\"a\",\"e\",\"i\",\"o\",\"\
    u\"]\n    var vowel_count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            vowel_count += 1\n        }\n    }\n    return vowel_count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp5ijqsc_w/tmp5ijqsc_w.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6af0ca5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6af099cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6af099c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6af099b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5ijqsc_w                        0x000055ff8512464b <unavailable> + 5707

    5    libc.so.6                          0x00002b6af0e91460 __libc_start_main +
    245

    6    tmp5ijqsc_w                        0x000055ff85124229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ letter in s {\n        if vowels.contains(letter) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpt4lltmzl/tmpt4lltmzl.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae218361c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae218058b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae218058988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2180577b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt4lltmzl                        0x0000558c6b8cd582 <unavailable> + 5506

    5    libc.so.6                          0x00002ae21854d460 __libc_start_main +
    245

    6    tmpt4lltmzl                        0x0000558c6b8cd0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ letter in s {\n        if letter in vowels {\n            count += 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgm351f9q.swift:15:19: error: expected '{' after 'if' condition\n\
    \        if letter in vowels {\n                  ^\n/tmp/tmpgm351f9q.swift:15:12:\
    \ error: cannot convert value of type 'Character' to expected condition type 'Bool'\n\
    \        if letter in vowels {\n           ^~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ letter in s {\n        if letter == vowels.first {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp6djg1c5d/tmp6djg1c5d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3b3473c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3b316ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3b316a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3b31697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6djg1c5d                        0x0000559454d79444 <unavailable> + 5188

    5    libc.so.6                          0x00002ab3b365f460 __libc_start_main +
    245

    6    tmp6djg1c5d                        0x0000559454d790c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpbd8qf61d.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.endIndex < s.startIndex {\n              \
    \  count += 1\n            }\n        }\n    }\n    return count\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9hbsthwr.swift:14:9: error: switch must be exhaustive\n       \
    \ switch c {\n        ^\n/tmp/tmp9hbsthwr.swift:14:9: note: do you want to add\
    \ a default clause?\n        switch c {\n        ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        switch c\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            vowelCount += 1\n        default:\n\
    \            break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp00qmlcdn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp00qmlcdn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for letter in s {\n        switch letter\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            count += 1\n        default:\n    \
    \        break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpz602pvgc.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpz602pvgc.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpz602pvgc.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ c in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxkb63_v1/tmpxkb63_v1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7df7e88c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7df7b7fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7df7b7f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7df7b7e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxkb63_v1                        0x000055bb508a3582 <unavailable> + 5506

    5    libc.so.6                          0x00002b7df8074460 __libc_start_main +
    245

    6    tmpxkb63_v1                        0x000055bb508a30b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for letter\
    \ in s {\n        if letter == vowels.last {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp_cqcppeh/tmp_cqcppeh.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae5eb6cec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae5eb3c5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae5eb3c5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae5eb3c47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_cqcppeh                        0x000055b98d76a444 <unavailable> + 5188

    5    libc.so.6                          0x00002ae5eb8ba460 __libc_start_main +
    245

    6    tmp_cqcppeh                        0x000055b98d76a0c9 <unavailable> + 4297

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            count += 2\n        default:\n            break\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpb6nztbno/tmpb6nztbno.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9081082c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9080d79b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9080d79988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9080d787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb6nztbno                        0x000055cba9ba04bb <unavailable> + 5307

    5    libc.so.6                          0x00002b908126e460 __libc_start_main +
    245

    6    tmpb6nztbno                        0x000055cba9ba0099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowelsCount = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowelsCount\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpv6ymh3xx.swift:13:25: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowelsCount = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                        ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"\"\n    for char in s {\n        switch\
    \ char {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n    \
    \    case \"o\":\n        case \"u\":\n            vowels += char\n        default:\n\
    \            break\n        }\n    }\n    return vowels.characters.count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpx557hkfa.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpx557hkfa.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpx557hkfa.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpx557hkfa.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpx557hkfa.swift:20:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            vowels += char\n                      ^\n/tmp/tmpx557hkfa.swift:25:19:\
    \ error: 'characters' is unavailable: Please use String directly\n    return vowels.characters.count\n\
    \                  ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted\
    \ in Swift 5.0\n    public var characters: String { get set }\n              \
    \ ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s.characters {\n        if vowels.contains(String(char)) {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp03kq8ieg.swift:14:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ letter in s {\n        if letter in vowels {\n            count += 1\n     \
    \   }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgm351f9q.swift:15:19: error: expected '{' after 'if' condition\n\
    \        if letter in vowels {\n                  ^\n/tmp/tmpgm351f9q.swift:15:12:\
    \ error: cannot convert value of type 'Character' to expected condition type 'Bool'\n\
    \        if letter in vowels {\n           ^~~~~~\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = \"\"\n    for char in s {\n        switch\
    \ char {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n    \
    \    case \"o\":\n        case \"u\":\n            vowels += char\n        default:\n\
    \            if vowels.isEmpty {\n                vowels += char\n           \
    \ } else {\n                return vowels.count\n            }\n        }\n  \
    \  }\n    return vowels.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp4id08waf.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp4id08waf.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp4id08waf.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp4id08waf.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp4id08waf.swift:20:23:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \            vowels += char\n                      ^\n/tmp/tmp4id08waf.swift:23:27:\
    \ error: cannot convert value of type 'Character' to expected argument type 'String'\n\
    \                vowels += char\n                          ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    if c == s[s.startIndex.advanced(by: -1)] {\n                count += 1\n\
    \            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmppns5vjsn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmppns5vjsn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n/tmp/tmppns5vjsn.swift:22:36:\
    \ error: value of type 'String.Index' has no member 'advanced'\n            if\
    \ c == s[s.startIndex.advanced(by: -1)] {\n                      ~~~~~~~~~~~~\
    \ ^~~~~~~~\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    var count = 0\n    for\
    \ char in s.characters {\n        if vowels.contains(String(char)) {\n       \
    \     count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp03kq8ieg.swift:14:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for c in s {\n        switch c\
    \ {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n        case\
    \ \"o\":\n        case \"u\":\n            vowelCount += 1\n        default:\n\
    \            break\n        }\n    }\n    return vowelCount\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp00qmlcdn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp00qmlcdn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp00qmlcdn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiou\"\n    var count = 0\n    for char\
    \ in s.characters {\n        if vowels.contains(String(char)) {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpuikkgxv6.swift:14:19: error: 'characters' is unavailable: Please\
    \ use String directly\n    for char in s.characters {\n                  ^~~~~~~~~~\n\
    Swift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var\
    \ characters: String { get set }\n               ^\n"
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowelCount = 0\n    for letter in s {\n        switch\
    \ letter {\n        case \"a\":\n        case \"e\":\n        case \"i\":\n  \
    \      case \"o\":\n        case \"u\":\n            vowelCount += 1\n       \
    \ default:\n            break\n        }\n    }\n    return vowelCount\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpq93anf3t.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmpq93anf3t.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmpq93anf3t.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            count += 1\n   \
    \     }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpkxknhcig.swift:14:17: error: single-quoted string literal found,\
    \ use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u'\
    \ {\n                ^~~\n                \"a\"\n/tmp/tmpkxknhcig.swift:14:29:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \ ^~~\n                            \"e\"\n/tmp/tmpkxknhcig.swift:14:41: error:\
    \ single-quoted string literal found, use '\"'\n        if c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u' {\n                                    \
    \    ^~~\n                                        \"i\"\n/tmp/tmpkxknhcig.swift:14:53:\
    \ error: single-quoted string literal found, use '\"'\n        if c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n                           \
    \                         ^~~\n                                              \
    \      \"o\"\n/tmp/tmpkxknhcig.swift:14:65: error: single-quoted string literal\
    \ found, use '\"'\n        if c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n                                                               \
    \ ^~~\n                                                                \"u\"\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouAEIOU\"\n    let vowels_count = s.characters.filter({\
    \ vowels.contains($0) }).count\n    return vowels_count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpe655p6tn.swift:13:26: error: 'characters' is unavailable: Please\
    \ use String directly\n    let vowels_count = s.characters.filter({ vowels.contains($0)\
    \ }).count\n                         ^~~~~~~~~~\nSwift.String:5:16: note: 'characters'\
    \ was obsoleted in Swift 5.0\n    public var characters: String { get set }\n\
    \               ^\n"
  stdout: ''
  timestamp: 1659824480
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     default:\n            break\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpg8oscs3j/tmpg8oscs3j.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5696fe2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5696cd9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5696cd9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5696cd87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpg8oscs3j                        0x000055f0d66514bb <unavailable> + 5307

    5    libc.so.6                          0x00002b56971ce460 __libc_start_main +
    245

    6    tmpg8oscs3j                        0x000055f0d6651099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824481
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\":\n        case \"e\":\n        case \"i\":\n        case \"\
    o\":\n        case \"u\":\n            count += 1\n        default:\n        \
    \    break\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp5qwydzbn.swift:15:9: error: 'case' label in a 'switch' must have\
    \ at least one executable statement\n        case \"a\":\n        ^~~~~~~~~\n\
    \                  break\n/tmp/tmp5qwydzbn.swift:16:9: error: 'case' label in\
    \ a 'switch' must have at least one executable statement\n        case \"e\":\n\
    \        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:17:9: error:\
    \ 'case' label in a 'switch' must have at least one executable statement\n   \
    \     case \"i\":\n        ^~~~~~~~~\n                  break\n/tmp/tmp5qwydzbn.swift:18:9:\
    \ error: 'case' label in a 'switch' must have at least one executable statement\n\
    \        case \"o\":\n        ^~~~~~~~~\n                  break\n"
  stdout: ''
  timestamp: 1659824480

name: HumanEval_56_correct_bracketing
language: swift
prompt: "\n/// brackets is a string of \"<\" and \">\".\n/// return true if every\
  \ opening bracket has a corresponding closing bracket.\n/// >>> correct_bracketing(brackets:\
  \ \"<\")\n/// false\n/// >>> correct_bracketing(brackets: \"<>\")\n/// true\n///\
  \ >>> correct_bracketing(brackets: \"<<><>>\")\n/// true\n/// >>> correct_bracketing(brackets:\
  \ \"><<>\")\n/// false\nfunc correct_bracketing(brackets: String) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(correct_bracketing(brackets: \"<>\") ==\
  \ true)\nassert(correct_bracketing(brackets: \"<<><>>\") == true)\nassert(correct_bracketing(brackets:\
  \ \"<><><<><>><>\") == true)\nassert(correct_bracketing(brackets: \"<><><<<><><>><>><<><><<>>>\"\
  ) == true)\nassert(correct_bracketing(brackets: \"<<<><>>>>\") == false)\nassert(correct_bracketing(brackets:\
  \ \"><<>\") == false)\nassert(correct_bracketing(brackets: \"<\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<<<\") == false)\nassert(correct_bracketing(brackets: \">\") == false)\nassert(correct_bracketing(brackets:\
  \ \"<<>\") == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>><<>\")\
  \ == false)\nassert(correct_bracketing(brackets: \"<><><<><>><>>><>\") == false)"
completions: ["    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n\
    \    for openingBracket in openingBrackets {\n        if closingBrackets.contains(openingBracket)\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = brackets.characters.count\n\n    while openingBracketIndex\
    \ < openingBracketCount {\n        let openingBracket = brackets.characters[openingBracketIndex]\n\
    \        let closingBracket = brackets.characters[closingBracketIndex]\n\n   \
    \     if openingBracket == \"<\" {\n            openingBracketIndex += 1\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketIndex +=\
    \ 1\n            closingBracketIndex += 1\n        } else {\n            return\
    \ false\n        }\n    }\n\n    return openingBracketIndex == openingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n            if openingBracketIndex < brackets.endIndex\
    \ {\n                openingBracket = brackets[openingBracketIndex]\n        \
    \    }\n        }\n\n        if closingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n            if closingBracketIndex < brackets.endIndex {\n           \
    \     closingBracket = brackets[closingBracketIndex]\n            }\n        }\n\
    \n        if openingBracket != closingBracket {\n            return false\n  \
    \      }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            if closingBracket != \">\"\
    \ {\n                openingBracketIndex += 1\n            } else {\n        \
    \        closingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket != \"<\" {\n                openingBracketIndex\
    \ += 1\n            } else {\n                closingBracketIndex += 1\n     \
    \       }\n        } else {\n            openingBracketIndex += 1\n          \
    \  closingBracketIndex += 1\n        }\n    }\n\n    return openingBracketIndex\
    \ == brackets.endIndex && closingBracketIndex == brackets.endIndex", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n\n    while openingBracketsCount > 0 && closingBracketsCount\
    \ > 0 {\n        if openingBrackets[openingBracketsCount - 1] == \">\" {\n   \
    \         openingBracketsCount -= 1\n            closingBracketsCount -= 1\n \
    \       } else if openingBrackets[openingBracketsCount - 1] == \"<\" {\n     \
    \       openingBracketsCount -= 1\n            closingBracketsCount -= 1\n   \
    \     } else if openingBrackets[openingBracketsCount - 1] == \"{\" {\n       \
    \     openingBracketsCount -= 1\n            closingBracketsCount -= 1\n     \
    \   } else if openingBrackets[openingBracketsCount - 1] == \"}\" {\n         \
    \   openingBracketsCount -= 1\n            closingBracketsCount -= 1\n       \
    \ } else if openingBrackets[openingBracketsCount - 1] == \">>\" {\n          \
    \  openingBracketsCount -= 1\n            closingBracketsCount -= 1\n        }\
    \ else if openingBrackets[openingBracketsCount - 1] == \"<<\" {\n            openingBracketsCount\
    \ -= 1\n            closingBracketsCount -= 1\n        } else if openingBrackets[openingBracketsCount\
    \ - 1] == \"<{\" {\n            openingBracketsCount -= 1\n            closingBracketsCount\
    \ -= 1\n        } else if openingBrackets[openingBracketsCount - 1] == \"<}\"\
    \ {\n            openingBracketsCount -= 1\n            closingBracketsCount -=\
    \ 1\n        } else if openingBrackets[openingBracketsCount - 1] == \"<>>\" {\n\
    \            openingBracketsCount -= 1\n            closingBracketsCount -= 1\n\
    \        } else if openingBrackets[openingBracketsCount - 1] == \"<<<\" {\n  \
    \          openingBracketsCount -= 1\n            closingBracketsCount -= 1\n\
    \        } else {\n            return false\n        }\n    }\n\n    return openingBracketsCount\
    \ == 0 && closingBracketsCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    let openingBrackets = brackets.components(separatedBy: \"\
    <\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n    guard\
    \ openingBrackets.count == closingBrackets.count else {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        guard let closingBracket\
    \ = closingBrackets.first else {\n            return false\n        }\n      \
    \  if openingBracket != closingBracket {\n            return false\n        }\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = brackets.characters.count\n    var closingBracketCount = brackets.characters.count\n\
    \n    while openingBracketIndex < openingBracketCount {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketIndex += 1\n            if openingBracketIndex < openingBracketCount\
    \ {\n                openingBracket = brackets[openingBracketIndex]\n        \
    \    }\n        }\n        if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            if openingBracketIndex < openingBracketCount {\n         \
    \       openingBracket = brackets[openingBracketIndex]\n            }\n      \
    \  }\n        if openingBracket == \"<\" {\n            openingBracketIndex +=\
    \ 1\n            if openingBracketIndex < openingBracketCount {\n            \
    \    openingBracket = brackets[openingBracketIndex]\n            }\n        }\n\
    \        if openingBracket == \">\" {\n            openingBracketIndex += 1\n\
    \            if openingBracketIndex < openingBracketCount {\n                openingBracket\
    \ = brackets[openingBracketIndex]\n            }\n        }\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ < openingBracketCount {\n                openingBracket = brackets[openingBracketIndex]\n\
    \            }\n        }\n        if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            if openingBracketIndex < openingBracketCount {\n         \
    \       openingBracket = brackets[openingBracketIndex]\n            }\n      \
    \  }\n        if openingBracket == \"<\" {\n            openingBracketIndex +=\
    \ 1\n            if openingBracketIndex < openingBracketCount {\n            \
    \    openingBracket = brackets[openingBracketIndex]\n            }\n        }\n\
    \        if openingBracket == \">\" {\n            openingBracketIndex += 1\n\
    \            if openingBracketIndex < openingBracketCount {\n                openingBracket\
    \ = brackets[openingBracketIndex]\n            }\n        }\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            if openingBracket",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        guard openingBrackets[openingBracketIndex] == \">\" else {\n        \
    \    return false\n        }\n        openingBracketIndex += 1\n        guard\
    \ openingBracketIndex < brackets.endIndex else {\n            return false\n \
    \       }\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \"<\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \"<\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \"<\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n        guard openingBrackets[openingBracketIndex] == \"<\" else {\n\
    \            return false\n        }\n        openingBracketIndex += 1\n     \
    \   guard openingBracketIndex < brackets.endIndex else {\n            return false\n\
    \        }\n", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    var openingBracketsCountIndex = 0\n\
    \    var closingBracketsCountIndex = 0\n\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketsIndex] == \">\" {\n           \
    \ openingBracketsCountIndex++\n            if openingBracketsCountIndex == openingBracketsCount\
    \ {\n                return false\n            }\n        } else {\n         \
    \   openingBracketsCountIndex = 0\n        }\n        openingBracketsIndex++\n\
    \    }\n\n    while closingBracketsIndex < closingBracketsCount {\n        if\
    \ closingBrackets[closingBracketsIndex] == \">\" {\n            closingBracketsCountIndex++\n\
    \            if closingBracketsCountIndex == closingBracketsCount {\n        \
    \        return false\n            }\n        } else {\n            closingBracketsCountIndex\
    \ = 0\n        }\n        closingBracketsIndex++\n    }\n\n    if openingBracketsIndex\
    \ == openingBracketsCount {\n        return true\n    }\n\n    if closingBracketsIndex\
    \ == closingBracketsCount {\n        return true\n    }\n\n    return false",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for i in 0..<openingBrackets.count {\n \
    \       if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    guard openingBrackets.count == closingBrackets.count else {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        guard let\
    \ closingBracket = closingBrackets.first(where: { $0 == openingBracket }) else\
    \ {\n            return false\n        }\n        guard let openingBracketIndex\
    \ = openingBrackets.index(of: openingBracket) else {\n            return false\n\
    \        }\n        guard let closingBracketIndex = closingBrackets.index(of:\
    \ closingBracket) else {\n            return false\n        }\n        guard openingBracketIndex\
    \ != closingBracketIndex else {\n            return false\n        }\n    }\n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for openingBracket in openingBrackets {\n        let\
    \ closingBracket = closingBrackets.first(where: { $0 == openingBracket })\n  \
    \      \n        if closingBracket == nil {\n            return false\n      \
    \  }\n    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \    var openingBracketsIndex = 0\n    var closingBracketsIndex = 0\n    var openingBracketsFound\
    \ = false\n    var closingBracketsFound = false\n    var openingBracketsCountAfter\
    \ = 0\n    var closingBracketsCountAfter = 0\n    while openingBracketsIndex <\
    \ openingBracketsCount {\n        openingBracketsCountAfter = openingBracketsCount\n\
    \        openingBracketsFound = false\n        while openingBracketsIndex < openingBracketsCount\
    \ && !openingBracketsFound {\n            if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n                openingBracketsFound = true\n                openingBracketsCountAfter\
    \ = openingBracketsCount\n            }\n            openingBracketsIndex += 1\n\
    \        }\n        if openingBracketsFound {\n            openingBracketsCount\
    \ -= openingBracketsCountAfter\n        }\n    }\n    while closingBracketsIndex\
    \ < closingBracketsCount {\n        closingBracketsCountAfter = closingBracketsCount\n\
    \        closingBracketsFound = false\n        while closingBracketsIndex < closingBracketsCount\
    \ && !closingBracketsFound {\n            if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n                closingBracketsFound = true\n                closingBracketsCountAfter\
    \ = closingBracketsCount\n            }\n            closingBracketsIndex += 1\n\
    \        }\n        if closingBracketsFound {\n            closingBracketsCount\
    \ -= closingBracketsCountAfter\n        }\n    }\n    return openingBracketsCount\
    \ == closingBracketsCount", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n    while openingBracketIndex < openingBrackets.count {\n        let openingBracket\
    \ = openingBrackets[openingBracketIndex]\n        let closingBracket = closingBrackets[closingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            if closingBracket == \">\"\
    \ {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \           closingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            }\n        } else {\n            openingBracketIndex += 1\n     \
    \       closingBracketIndex += 1\n        }\n    }\n    return openingBracketIndex\
    \ == closingBracketIndex", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = 0\n\
    \    var closingBracketIndex = 0\n    while openingBracketIndex < openingBrackets.count\
    \ {\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n    \
    \        return false\n        }\n        openingBracketIndex += 1\n        while\
    \ closingBracketIndex < closingBrackets.count {\n            guard closingBrackets[closingBracketIndex]\
    \ != \"<\" else {\n                return false\n            }\n            closingBracketIndex\
    \ += 1\n        }\n        openingBracketIndex += 1\n    }\n    return true",
  "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    opening.removeFirst()\n    closing.removeLast()\n    opening.removeLast()\n\
    \    closing.removeFirst()\n    if opening.isEmpty {\n        return closing.isEmpty\
    \ && closing.count == 0\n    }\n    if closing.isEmpty {\n        return opening.count\
    \ == 0\n    }\n    return opening.count == closing.count", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets.characters[openingBracketIndex]\n        if openingBracket == \"\
    <\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ < brackets.endIndex {\n                openingBracket = brackets.characters[openingBracketIndex]\n\
    \            }\n            if openingBracket != \">\" {\n                return\
    \ false\n            }\n        } else {\n            openingBracketIndex += 1\n\
    \        }\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n   \
    \     let closingBracket = brackets.characters[closingBracketIndex]\n        if\
    \ closingBracket == \">\" {\n            closingBracketIndex += 1\n          \
    \  if closingBracketIndex < brackets.endIndex {\n                closingBracket\
    \ = brackets.characters[closingBracketIndex]\n            }\n            if closingBracket\
    \ != \"<\" {\n                return false\n            }\n        } else {\n\
    \            closingBracketIndex += 1\n        }\n    }\n\n    return true", " \
    \   let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for openingBracket in openingBrackets {\n\
    \        if let closingBracket = closingBrackets.firstIndex(of: openingBracket)\
    \ {\n            closingBrackets.remove(at: closingBracket)\n        }\n    }\n\
    \    return openingBrackets.count == 0", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        if openingBracketIndex == brackets.endIndex\
    \ {\n            openingBracketIndex = 0\n        }\n        if openingBrackets[openingBracketIndex]\
    \ == '<' {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ == brackets.endIndex {\n                openingBracketIndex = 0\n          \
    \  }\n            if openingBrackets[openingBracketIndex] == '>' {\n         \
    \       openingBracketIndex += 1\n                if openingBracketIndex == brackets.endIndex\
    \ {\n                    openingBracketIndex = 0\n                }\n        \
    \        closingBracketIndex = openingBracketIndex\n            } else {\n   \
    \             closingBracketIndex = openingBracketIndex\n            }\n     \
    \   } else {\n            closingBracketIndex = openingBracketIndex\n        }\n\
    \    }\n    return openingBracketIndex == closingBracketIndex", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        open", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ < brackets.endIndex {\n                openingBrackets[openingBracketIndex]\
    \ = \"<\"\n                closingBrackets[closingBracketIndex] = \">\"\n    \
    \            closingBracketIndex += 1\n            }\n        } else {\n     \
    \       openingBracketIndex += 1\n        }\n    }\n    return openingBracketIndex\
    \ == brackets.endIndex && closingBracketIndex == brackets.endIndex", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n    return openingBracketCount == 0 && closingBracketCount == 0", "  \
    \  let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n\n    if openingBracketCount != closingBracketCount {\n        return\
    \ false\n    }\n\n    while openingBracketIndex < brackets.endIndex {\n      \
    \  let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex++\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex++\n        }\n    }\n\n    while\
    \ closingBracketIndex < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketIndex++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketIndex++\n\
    \        }\n    }\n\n    if openingBracketIndex != brackets.endIndex {\n     \
    \   return false\n    }\n\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n    var openingBracketCount = 0\n    var closingBracketCount = 0\n\n  \
    \  while openingBracketIndex < openingBrackets.count {\n        openingBracketCount\
    \ = 0\n        while openingBracketIndex < openingBrackets.count && openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            openingBracketCount += 1\n            openingBracketIndex\
    \ += 1\n        }\n        if openingBracketCount > 1 {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        openingBracketIndex += 1\n\
    \        openingBracketCount = 0\n        while openingBracketIndex < openingBrackets.count\
    \ && openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketCount\
    \ += 1\n            openingBracketIndex += 1\n        }\n        if openingBracketCount\
    \ > 1 {\n            openingBracketIndex += 1\n            continue\n        }\n\
    \n        openingBracketIndex += 1\n        openingBracketCount = 0\n        while\
    \ openingBracketIndex < openingBrackets.count && openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            openingBracketCount += 1\n            openingBracketIndex\
    \ += 1\n        }\n        if openingBracketCount > 1 {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        openingBracketIndex += 1\n\
    \        openingBracketCount = 0\n        while openingBracketIndex < openingBrackets.count\
    \ && openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketCount\
    \ += 1\n            openingBracketIndex += 1\n        }\n        if openingBracketCount\
    \ > 1 {\n            openingBracketIndex += 1\n            continue\n        }\n\
    \n        openingBracketIndex += 1\n        openingBracketCount = 0\n        while\
    \ openingBracketIndex < openingBrackets.count && openingBrackets[openingBracketIndex]\
    \ != \"<\" {\n            openingBracketCount += 1\n            openingBracketIndex\
    \ += 1\n        }\n        if openingBracketCount > 1 {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        openingBracketIndex += 1\n\
    \        openingBracketCount = 0\n        while openingBracketIndex < openingBrackets.count\
    \ && openingBra", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n\n    while openingBracketsCount\
    \ > 0 && closingBracketsCount > 0 {\n        let openingBracket = openingBrackets.first!\n\
    \        let closingBracket = closingBrackets.first!\n        openingBrackets.removeFirst()\n\
    \        closingBrackets.removeFirst()\n        if openingBracket == closingBracket\
    \ {\n            openingBracketsCount -= 1\n            closingBracketsCount -=\
    \ 1\n        } else {\n            return false\n        }\n    }\n    return\
    \ openingBracketsCount == 0 && closingBracketsCount == 0", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    var openingBracketsString = \"\"\n    var closingBracketsString = \"\
    \"\n    var openingBracketsStringIndex = 0\n    var closingBracketsStringIndex\
    \ = 0\n    var openingBracketsStringIndex2 = 0\n    var closingBracketsStringIndex2\
    \ = 0\n    var openingBracketsStringIndex3 = 0\n    var closingBracketsStringIndex3\
    \ = 0\n    var openingBracketsStringIndex4 = 0\n    var closingBracketsStringIndex4\
    \ = 0\n    var openingBracketsStringIndex5 = 0\n    var closingBracketsStringIndex5\
    \ = 0\n    var openingBracketsStringIndex6 = 0\n    var closingBracketsStringIndex6\
    \ = 0\n    var openingBracketsStringIndex7 = 0\n    var closingBracketsStringIndex7\
    \ = 0\n    var openingBracketsStringIndex8 = 0\n    var closingBracketsStringIndex8\
    \ = 0\n    var openingBracketsStringIndex9 = 0\n    var closingBracketsStringIndex9\
    \ = 0\n    var openingBracketsStringIndex10 = 0\n    var closingBracketsStringIndex10\
    \ = 0\n    var openingBracketsStringIndex11 = 0\n    var closingBracketsStringIndex11\
    \ = 0\n    var openingBracketsStringIndex12 = 0\n    var closingBracketsStringIndex12\
    \ = 0\n    var openingBracketsStringIndex13 = 0\n    var closingBracketsStringIndex13\
    \ = 0\n    var openingBracketsStringIndex14 = 0\n    var closingBracketsStringIndex14\
    \ = 0\n    var openingBracketsStringIndex15 = 0\n    var closingBracketsStringIndex15\
    \ = 0\n    var openingBracketsStringIndex16 = 0\n    var closingBracketsStringIndex16\
    \ = 0\n    var openingBracketsStringIndex17 = 0\n    var closingBracketsStringIndex17\
    \ = 0\n    var openingBracketsStringIndex18 = 0\n    var closingBracketsStringIndex18\
    \ = 0\n    var openingBracketsStringIndex19 = 0\n    var closingBracketsStringIndex19\
    \ = 0\n    var openingBracketsStringIndex20 = 0\n    var closingBracketsStringIndex20\
    \ = 0\n    var openingBracketsStringIndex21 = 0\n    var closingBracketsStringIndex",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketCount += 1\n        openingBracketIndex\
    \ = advance(openingBracketIndex: openingBracketIndex,\n                      \
    \               amount: 1)\n        if openingBracket == \"<\" {\n           \
    \ if closingBracketIndex < brackets.endIndex {\n                let closingBracket\
    \ = brackets[closingBracketIndex]\n                closingBracketCount += 1\n\
    \                closingBracketIndex = advance(openingBracketIndex: closingBracketIndex,\n\
    \                                             amount: 1)\n                if closingBracket\
    \ == \">\" {\n                    if openingBracketCount == closingBracketCount\
    \ {\n                        return true\n                    }\n            \
    \    }\n            }\n        }\n    }\n    return false", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = brackets.characters.count\n\n    while openingBracketIndex\
    \ < openingBracketCount {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n        if openingBracket\
    \ != closingBracket {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        closingBracketIndex += 1\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            return\
    \ false\n        }\n\n        if closingBracket == \"<\" {\n            closingBracketIndex\
    \ += 1\n        } else if closingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n            openingBracketIndex += 1\n        } else {\n            return\
    \ false\n        }\n    }\n\n    return openingBracketIndex == closingBracketIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsIndex\
    \ += 1\n        if openingBrackets[openingBracketsIndex] != '<' {\n          \
    \  continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ == '>' {\n            openingBracketsIndex += 1\n            if openingBracketsIndex\
    \ == openingBracketsCount {\n                return false\n            }\n   \
    \     }\n    }\n\n    while closingBracketsIndex < closingBracketsCount {\n  \
    \      closingBracketsIndex += 1\n        if closingBrackets[closingBracketsIndex]\
    \ != '<' {\n            continue\n        }\n        closingBracketsIndex += 1\n\
    \        if closingBrackets[closingBracketsIndex] == '>' {\n            closingBracketsIndex\
    \ += 1\n            if closingBracketsIndex == closingBracketsCount {\n      \
    \          return false\n            }\n        }\n    }\n\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex += 1\n    }\n\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = 0\n    var closingBracketIndex = 0\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        let openingBracket = openingBrackets[openingBracketIndex]\n\
    \        let closingBracket = closingBrackets[closingBracketIndex]\n        if\
    \ openingBracket == \"<\" {\n            if closingBracket == \">\" {\n      \
    \          openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            } else {\n                openingBracketIndex += 1\n            }\n\
    \        } else if openingBracket == \">\" {\n            if closingBracket ==\
    \ \"<\" {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \       }\n        } else {\n            openingBracketIndex += 1\n          \
    \  closingBracketIndex += 1\n        }\n    }\n    return openingBracketIndex\
    \ == closingBracketIndex", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        openingBracketIndex += 1\n        if openingBracket == \"<\" {\n    \
    \        if closingBracketIndex < brackets.endIndex && brackets[closingBracketIndex]\
    \ == \">\" {\n                closingBracketIndex += 1\n            } else {\n\
    \                return false\n            }\n        }\n    }\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        guard openingBrackets[openingBracketIndex] != \"<\" else {\n        \
    \    return false\n        }\n\n        guard closingBracketIndex < brackets.endIndex\
    \ else {\n            return false\n        }\n\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else {\n            openingBracketIndex += 1\n        }\n  \
    \  }\n\n    return openingBracketIndex == closingBracketIndex", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsIndex\
    \ += 1\n        if openingBrackets[openingBracketsIndex] == '<' {\n          \
    \  openingBracketsIndex += 1\n            while openingBracketsIndex < openingBracketsCount\
    \ {\n                openingBracketsIndex += 1\n                if openingBrackets[openingBracketsIndex]\
    \ == '>' {\n                    openingBracketsIndex += 1\n                  \
    \  closingBracketsIndex += 1\n                    closingBracketsCount -= 1\n\
    \                } else {\n                    break\n                }\n    \
    \        }\n            if openingBracketsIndex == openingBracketsCount {\n  \
    \              return false\n            }\n        } else {\n            closingBracketsIndex\
    \ += 1\n            closingBracketsCount -= 1\n        }\n    }\n    return openingBracketsCount\
    \ == closingBracketsCount", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \n    while openingBracketsCount > 0 && closingBracketsCount > 0 {\n        openingBracketsCount\
    \ = openingBrackets.count - 1\n        closingBracketsCount = closingBrackets.count\
    \ - 1\n\n        if openingBracketsCount < closingBracketsCount {\n          \
    \  openingBrackets.removeLast()\n        } else {\n            closingBrackets.removeLast()\n\
    \        }\n    }\n\n    return openingBrackets.count == 0 && closingBrackets.count\
    \ == 0", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n            if closingBracketsIndex < closingBracketsCount {\n   \
    \             closingBracketsIndex += 1\n                if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n                    openingBracketsIndex += 1\n                  \
    \  closingBracketsIndex += 1\n                } else {\n                    return\
    \ false\n                }\n            } else {\n                return false\n\
    \            }\n        } else {\n            if closingBracketsIndex < closingBracketsCount\
    \ {\n                closingBracketsIndex += 1\n            } else {\n       \
    \         return false\n            }\n        }\n    }\n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n\n    if openingBracketCount != closingBracketCount {\n        return\
    \ false\n    }\n\n    while openingBracketIndex < brackets.endIndex {\n      \
    \  let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex++\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex++\n        }\n    }\n\n    return\
    \ openingBracketIndex == brackets.endIndex", "    var opening = brackets.characters\n\
    \    var closing = brackets.characters\n    opening.removeLast()\n    closing.removeFirst()\n\
    \    if opening.isEmpty {\n        return closing.isEmpty && closing.count ==\
    \ 0\n    }\n    if closing.isEmpty {\n        return opening.count == 0\n    }\n\
    \    if opening.count != closing.count {\n        return false\n    }\n    if\
    \ opening.first != closing.last {\n        return false\n    }\n    if opening.count\
    \ == 1 {\n        return true\n    }\n    if opening.count == 2 {\n        return\
    \ opening.first == closing.last\n    }\n    if opening.count > 2 {\n        return\
    \ false\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty {\n       \
    \ return true\n    }\n    if closingBrackets.isEmpty {\n        return false\n\
    \    }\n    if openingBrackets.first == closingBrackets.last {\n        return\
    \ true\n    }\n    if openingBrackets.first == \">\" && closingBrackets.first\
    \ == \"<\" {\n        return true\n    }\n    if openingBrackets.first == \"<\"\
    \ && closingBrackets.first == \">\" {\n        return true\n    }\n    return\
    \ false", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n\
    \    if openingBrackets.isEmpty {\n        return true\n    }\n    if closingBrackets.isEmpty\
    \ {\n        return false\n    }\n    if openingBrackets.first != closingBrackets.first\
    \ {\n        return false\n    }\n    if openingBrackets.last != closingBrackets.last\
    \ {\n        return false\n    }\n    return correct_bracketing(openingBrackets,\
    \ closingBrackets)", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n\
    \    if openingBrackets.isEmpty {\n        return false\n    }\n    if closingBrackets.isEmpty\
    \ {\n        return true\n    }\n    if openingBrackets.first != closingBrackets.first\
    \ {\n        return true\n    }\n    return correct_bracketing(openingBrackets:\
    \ openingBrackets, closingBrackets: closingBrackets)", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != \">\" {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n    }\n\n    while closingBracketIndex\
    \ < closingBrackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ != \"<\" {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketIndex == closingBracketIndex", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    for i in 0..<openingBrackets.count\
    \ {\n        if openingBrackets[i] != closingBrackets[i] {\n            return\
    \ false\n        }\n    }\n    return true", "    brackets = brackets.replacingOccurrences(of:\
    \ \"<\", with: \"<\")\n    brackets = brackets.replacingOccurrences(of: \">\"\
    , with: \">\")\n    brackets = brackets.replacingOccurrences(of: \"<>\", with:\
    \ \"<>\")\n    brackets = brackets.replacingOccurrences(of: \"<<><>>\", with:\
    \ \"<<><>>\")\n    brackets = brackets.replacingOccurrences(of: \"><<>\", with:\
    \ \"><<>\")\n    return brackets.contains(\"<\")", "    let openingBrackets =\
    \ brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for i in 0..<openingBrackets.count {\n   \
    \     if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    \n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    return openingBrackets.count == 0", " \
    \   let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != \">\" {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n    }\n\n    while closingBracketIndex\
    \ < closingBrackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ != \"<\" {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    if openingBracketIndex == openingBrackets.endIndex {\n  \
    \      return true\n    }\n\n    if closingBracketIndex == closingBrackets.endIndex\
    \ {\n        return true\n    }\n\n    return openingBracketIndex < closingBracketIndex",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n    while openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount += 1\n        case \"\
    <=\":\n            openingBracketCount += 1\n        case \"=\":\n           \
    \ openingBracketCount += 1\n        case \"==\":\n            openingBracketCount\
    \ += 1\n        case \"!\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"<\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    var isCorrect = false\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] ==\
    \ '<' else {\n            openingBracketCount++\n            openingBracketIndex++\n\
    \            continue\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            openingBracketCount++\n            openingBracketIndex++\n\
    \            continue\n        }\n        guard openingBracketCount >= closingBracketCount\
    \ else {\n            isCorrect = false\n            break\n        }\n      \
    \  guard openingBrackets[openingBracketIndex] == '>' else {\n            openingBracketCount++\n\
    \            openingBracketIndex++\n            continue\n        }\n        guard\
    \ openingBracketCount > closingBracketCount else {\n            isCorrect = false\n\
    \            break\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            openingBracketCount++\n            openingBracketIndex++\n\
    \            continue\n        }\n        guard openingBracketCount < closingBracketCount\
    \ else {\n            isCorrect = false\n            break\n        }\n      \
    \  guard openingBracketCount > 0 else {\n            isCorrect = false\n     \
    \       break\n        }\n        guard openingBrackets[openingBracketIndex] ==\
    \ '<' else {\n            openingBracketCount++\n            openingBracketIndex++\n\
    \            continue\n        }\n        guard openingBracketCount < 0 else {\n\
    \            isCorrect = false\n            break\n        }\n        guard openingBracketCount\
    \ > 0 else {\n            isCorrect = false\n            break\n        }\n  \
    \      guard openingBrackets[openingBracketIndex] == '>' else {\n            openingBracketCount++\n\
    \            openingBracketIndex++\n            continue\n        }\n        guard\
    \ openingBracketCount < 0 else {\n            isCorrect = false\n            break\n\
    \        }\n        guard openingBracketCount > 0 else {\n            isCorrect\
    \ = false\n            break\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            openingBracketCount++\n            openingBracketIndex++\n",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount++\n        case \"<=\"\
    :\n            openingBracketCount++\n        case \"=\":\n            openingBracketCount++\n\
    \        case \"==\":\n            openingBracketCount++\n        case \"!\":\n\
    \            openingBracketCount++\n        case \"<=\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"<\":\n            openingBracketCount++\n        case \"<\":\n\
    \            openingBracketCount++\n        case \"<\":\n            openingBracketCount++\n\
    \        case \"", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeFirst()\n    closingBrackets.removeLast()\n\
    \    if openingBrackets.isEmpty {\n        return true\n    }\n    if closingBrackets.isEmpty\
    \ {\n        return false\n    }\n    if openingBrackets.first != closingBrackets.first\
    \ {\n        return false\n    }\n    if openingBrackets.last != closingBrackets.last\
    \ {\n        return false\n    }\n    return correct_bracketing(openingBrackets.dropFirst(),\
    \ closingBrackets.dropLast())", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n        \n        if openingBracket == \"<\" {\n            if closingBracketIndex\
    \ < brackets.endIndex && brackets[closingBracketIndex] == \">\" {\n          \
    \      closingBracketIndex = closingBracketIndex + 1\n            } else {\n \
    \               return false\n            }\n        }\n    }\n\n    return openingBracketIndex\
    \ == brackets.endIndex && closingBracketIndex == brackets.endIndex", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketCount++\n\
    \        openingBracketIndex++\n    }\n\n    while closingBracketIndex < brackets.endIndex\
    \ {\n        guard closingBrackets[closingBracketIndex] == '>' else {\n      \
    \      return false\n        }\n        closingBracketCount++\n        closingBracketIndex++\n\
    \    }\n\n    if openingBracketCount != closingBracketCount {\n        return\
    \ false\n    }\n\n    while openingBracketIndex < brackets.endIndex {\n      \
    \  guard openingBrackets[openingBracketIndex] == '<' else {\n            return\
    \ false\n        }\n        openingBracketIndex++\n    }\n\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        guard closingBrackets[closingBracketIndex] ==\
    \ '>' else {\n            return false\n        }\n        closingBracketIndex++\n\
    \    }\n\n    return true", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n\n    var openingBracketsCount\
    \ = 1\n    var closingBracketsCount = 1\n\n    for openingBracket in openingBrackets\
    \ {\n        if openingBracket == \"<\" {\n            openingBracketsCount++\n\
    \        } else if openingBracket == \">\" {\n            openingBracketsCount--\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \"<\" {\n            closingBracketsCount++\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketsCount--\n        }\n    }\n\n    return\
    \ openingBracketsCount == 0 && closingBracketsCount == 0", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        openingBracketCount += 1\n        if openingBrackets[openingBracketIndex]\
    \ == '<' {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ < brackets.endIndex && openingBrackets[openingBracketIndex] == '>' {\n     \
    \           openingBracketIndex += 1\n            }\n        }\n    }\n    while\
    \ closingBracketIndex < brackets.endIndex {\n        closingBracketCount += 1\n\
    \        if closingBrackets[closingBracketIndex] == '>' {\n            closingBracketIndex\
    \ += 1\n            if closingBracketIndex < brackets.endIndex && closingBrackets[closingBracketIndex]\
    \ == '<' {\n                closingBracketIndex += 1\n            }\n        }\n\
    \    }\n    return openingBracketCount == closingBracketCount", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBracketIndex == closingBracketIndex {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        }\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketCount--\n\
    \        }\n        openingBracketIndex++\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        closingBracketIndex++\n    }\n    return openingBracketCount\
    \ == 0 && closingBracketCount == 0", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketIndex\
    \ = 0\n    var closingBracketIndex = 0\n\n    while openingBracketIndex < openingBrackets.count\
    \ {\n        let openingBracket = openingBrackets[openingBracketIndex]\n\n   \
    \     if openingBracket == \"<\" {\n            openingBracketIndex += 1\n   \
    \         continue\n        }\n\n        if openingBracket == \">\" {\n      \
    \      openingBracketIndex += 1\n            closingBracketIndex += 1\n      \
    \      continue\n        }\n\n        if openingBracket == \"<\" {\n         \
    \   openingBracketIndex += 1\n            closingBracketIndex += 1\n         \
    \   continue\n        }\n\n        if openingBracket == \">\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            continue\n        }\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \            closingBracketIndex += 1\n            continue\n        }\n\n   \
    \     if openingBracket == \">\" {\n            openingBracketIndex += 1\n   \
    \         closingBracketIndex += 1\n            continue\n        }\n\n      \
    \  if openingBracket == \"<\" {\n            openingBracketIndex += 1\n      \
    \      closingBracketIndex += 1\n            continue\n        }\n\n        if\
    \ openingBracket == \">\" {\n            openingBracketIndex += 1\n          \
    \  closingBracketIndex += 1\n            continue\n        }\n\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n            continue\n        }\n\n        if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n            continue\n        }\n\n        if openingBracket == \"<\" {\n\
    \            openingBracketIndex += 1\n            closingBracketIndex += 1\n\
    \            continue\n        }\n\n        if openingBracket == \">\" {\n   \
    \         openingBracketIndex += 1\n            closingBracketIndex += 1\n   \
    \         continue\n        }\n\n        if openingBracket == \"<\" {\n      \
    \      openingBracketIndex += 1\n            closingBracketIndex += 1\n      \
    \      continue\n        }\n\n        if openingBracket == \">\" {\n         \
    \   openingBracketIndex += 1\n            closingBracketIndex += 1\n         \
    \   continue\n        }\n\n        if openingBracket == \"<\" {\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n            continue\n        }\n\
    \n        if openingBracket == \">\" {\n            openingBracketIndex += 1\n",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount++\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        } else if closingBracket == \">\" {\n\
    \            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n\n    return openingBracketCount == 0 && closingBracketCount == 0", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketCount = brackets.characters.count\n    var closingBracketCount\
    \ = brackets.characters.count\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n    var openingBracketChar = String()\n    var closingBracketChar = String()\n\
    \    while openingBracketIndex < openingBracketCount {\n        openingBracketChar\
    \ = String(openingBrackets[openingBracketIndex])\n        openingBracketIndex\
    \ += 1\n        if openingBracketIndex < openingBracketCount {\n            closingBracketChar\
    \ = String(openingBrackets[openingBracketIndex])\n            openingBracketIndex\
    \ += 1\n        }\n        if openingBracketChar == \"<\" {\n            if closingBracketIndex\
    \ < closingBracketCount {\n                closingBracketChar = String(closingBrackets[closingBracketIndex])\n\
    \                closingBracketIndex += 1\n            }\n            if closingBracketChar\
    \ == \">\" {\n                if openingBracketIndex < openingBracketCount {\n\
    \                    openingBracketChar = String(openingBrackets[openingBracketIndex])\n\
    \                    openingBracketIndex += 1\n                }\n           \
    \     if openingBracketChar == \">\" {\n                    openingBracketCount\
    \ -= 1\n                    closingBracketCount -= 1\n                }\n    \
    \        }\n        }\n    }\n    return openingBracketCount == closingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = 0\n    var closingBracketIndex = 0\n\n    while\
    \ openingBracketIndex < openingBrackets.count {\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n\n        if openingBracketIndex >= openingBrackets.count {\n        \
    \    return true\n        }\n\n        guard open", "    let openingBrackets =\
    \ brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    let openingBrackets = brackets.components(separatedBy: \"<\")\n\
    \    let closingBrackets = brackets.components(separatedBy: \">\")\n    \n   \
    \ if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            if closingBracket == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            }\n        } else {\n            openingBracketIndex += 1\n     \
    \       closingBracketIndex += 1\n        }\n    }\n\n    return openingBracketIndex\
    \ == brackets.endIndex", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount++\n\
    \        if openingBracket == \"<\" {\n            openingBracketIndex++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketIndex++\n\
    \            closingBracketCount--\n            if closingBracketCount == 0 {\n\
    \                closingBracketIndex--\n            }\n        } else {\n    \
    \        return false\n        }\n    }\n    return openingBracketCount == closingBracketCount",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty\
    \ {\n        return true\n    }\n    if closingBrackets.isEmpty {\n        return\
    \ false\n    }\n    if openingBrackets.first != closingBrackets.first {\n    \
    \    return false\n    }\n    if openingBrackets.last != closingBrackets.last\
    \ {\n        return false\n    }\n    return correct_bracketing(openingBrackets,\
    \ closingBrackets)", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        if openingBrackets[openingBracketIndex] != \"\
    >\" {\n            openingBracketIndex += 1\n            continue\n        }\n\
    \n        openingBracketIndex += 1\n        closingBracketIndex += 1\n\n     \
    \   if openingBracketIndex < brackets.endIndex && closingBracketIndex < brackets.endIndex\
    \ {\n            if openingBrackets[openingBracketIndex] == closingBrackets[closingBracketIndex]\
    \ {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ >= brackets.endIndex {\n                return false\n            }\n      \
    \  }\n\n        if openingBrackets[openingBracketIndex] != \"<\" {\n         \
    \   return false\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ >= brackets.endIndex {\n            return false\n        }\n\n        if openingBrackets[openingBracketIndex]\
    \ == \">\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ >= brackets.endIndex {\n                return false\n            }\n      \
    \  }\n\n        if openingBrackets[openingBracketIndex] != \"<\" {\n         \
    \   return false\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ >= brackets.endIndex {\n            return false\n        }\n\n        closingBrackets[closingBracketIndex]\
    \ = openingBrackets[openingBracketIndex]\n        closingBracketIndex += 1\n \
    \   }\n\n    return closingBracketIndex == brackets.endIndex", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            if closingBracket == \">\"\
    \ {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \           closingBracketIndex += 1\n                openingBracketIndex += 1\n\
    \                closingBracketIndex += 1\n            }\n        } else {\n \
    \           if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            }\n        }\n    }\n\n    return openingBracketIndex == brackets.endIndex",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    while openingBracketIndex < brackets.endIndex {\n\
    \        openingBracketIndex = openingBracketIndex.successor()\n        closingBracketIndex\
    \ = closingBracketIndex.successor()\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        }\n    }\n    \n    return !openingBrackets.isEmpty",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for i in 0..<openingBrackets.count {\n \
    \       if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    var openingBracketsCount = openingBrackets.count\n\
    \    var closingBracketsCount = closingBrackets.count\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n    if openingBrackets.count\
    \ > 0 {\n        var lastOpeningBracket = openingBrackets.last\n        var lastClosingBracket\
    \ = closingBrackets.first\n        if lastOpeningBracket != lastClosingBracket\
    \ {\n            return false\n        }\n        if lastOpeningBracket == lastClosingBracket\
    \ {\n            openingBrackets.removeLast()\n            closingBrackets.removeFirst()\n\
    \        }\n    }\n    return true", "    var opening = brackets.characters.split{$0\
    \ == \">\"}.count\n    var closing = brackets.characters.split{$0 == \"<\"}.count\n\
    \    if opening != closing {\n        return false\n    }\n    var opening2 =\
    \ brackets.characters.split{$0 == \"<\"}.count\n    var closing2 = brackets.characters.split{$0\
    \ == \">\"}.count\n    if opening != opening || closing != closing2 {\n      \
    \  return false\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        let openingBracket =\
    \ openingBrackets[i]\n        let closingBracket = closingBrackets[i]\n      \
    \  if openingBracket != closingBracket {\n            return false\n        }\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n\n    var openingBracketsCount =\
    \ 1\n    var closingBracketsCount = 1\n\n    for openingBracket in openingBrackets\
    \ {\n        if openingBracket == \"<\" {\n            openingBracketsCount +=\
    \ 1\n        } else {\n            openingBracketsCount = 0\n        }\n\n   \
    \     if openingBracketsCount == closingBracketsCount {\n            return false\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \">\" {\n            closingBracketsCount += 1\n        } else {\n      \
    \      closingBracketsCount = 0\n        }\n\n        if openingBracketsCount\
    \ == closingBracketsCount {\n            return true\n        }\n    }\n\n   \
    \ return false", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n\
    \    if openingBrackets.isEmpty() {\n        return false\n    }\n    if closingBrackets.isEmpty()\
    \ {\n        return true\n    }\n    if openingBrackets.first != closingBrackets.first\
    \ {\n        return true\n    }\n    if openingBrackets.last != closingBrackets.last\
    \ {\n        return true\n    }\n    return correct_bracketing(openingBrackets:\
    \ openingBrackets, closingBrackets: closingBrackets)", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \    var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while\
    \ openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        openingBracketCount++\n\
    \        openingBracketIndex += 1\n\n        if openingBracketIndex == brackets.endIndex\
    \ {\n            return true\n        }\n\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketCount++\n\
    \        openingBracketIndex += 1\n\n        if openingBracketCount != closingBracketCount\
    \ {\n            return false\n        }\n    }\n\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        guard closingBrackets[closingBracketIndex] !=\
    \ \">\" else {\n            return false\n        }\n        closingBracketCount++\n\
    \        closingBracketIndex += 1\n\n        if closingBracketIndex == brackets.endIndex\
    \ {\n            return true\n        }\n\n        guard closingBrackets[closingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        closingBracketCount++\n\
    \        closingBracketIndex += 1\n\n        if closingBracketCount != openingBracketCount\
    \ {\n            return false\n        }\n    }\n\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeLast()\n    if openingBrackets.isEmpty\
    \ {\n        return false\n    }\n    if closingBrackets.isEmpty {\n        return\
    \ true\n    }\n    if openingBrackets.first == closingBrackets.first {\n     \
    \   return false\n    }\n    if openingBrackets.first == \">\" {\n        openingBrackets.removeFirst()\n\
    \        return true\n    }\n    if openingBrackets.first == \"<\" {\n       \
    \ openingBrackets.removeFirst()\n        return false\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = 0\n    var closingBracketIndex = 0\n    while openingBracketIndex\
    \ < openingBrackets.count {\n        if openingBrackets[openingBracketIndex] ==\
    \ '<' {\n            if closingBracketIndex < closingBrackets.count && closingBrackets[closingBracketIndex]\
    \ == '>' {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      } else {\n            if closingBracketIndex < closingBrackets.count &&\
    \ closingBrackets[closingBracketIndex] == '>' {\n                openingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ 0\n    var closingBracketIndex = 0\n    while openingBracketIndex < openingBrackets.count\
    \ {\n        if openingBrackets[openingBracketIndex] == '<' {\n            if\
    \ closingBracketIndex < closingBrackets.count && closingBrackets[closingBracketIndex]\
    \ == '>' {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      } else {\n            if closingBracketIndex < closingBrackets.count &&\
    \ closingBrackets[closingBracketIndex] == '>' {\n                openingBracketIndex\
    \ += 1\n            } else {\n                return false\n            }\n  \
    \      }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            closingBracketIndex += 1\n        } else {\n       \
    \     return false\n        }\n    }\n    return openingBracketIndex == closingBracketIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        if !closingBrackets.contains(where: { $0 == openingBracket\
    \ }) {\n            return false\n        }\n    }\n    \n    return true", " \
    \   var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketsCount = openingBrackets.count\n    var closingBracketsCount\
    \ = closingBrackets.count\n\n    if openingBracketsCount == 0 {\n        return\
    \ true\n    }\n\n    if openingBracketsCount != closingBracketsCount {\n     \
    \   return false\n    }\n\n    var openingBracketIndex = 0\n    var closingBracketIndex\
    \ = 0\n\n    while openingBracketIndex < openingBracketsCount {\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n\n        openingBracketIndex += 1\n        closingBracketIndex += 1\n \
    \   }\n\n    return true", "    var opening = brackets.characters\n    var closing\
    \ = brackets.characters\n    opening.removeFirst()\n    opening.removeLast()\n\
    \    closing.removeFirst()\n    closing.removeLast()\n    if opening.isEmpty {\n\
    \        return closing.isEmpty\n    }\n    if closing.isEmpty {\n        return\
    \ opening.isEmpty\n    }\n    if opening.first != closing.first {\n        return\
    \ false\n    }\n    if opening.last != closing.last {\n        return false\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            if closingBracket == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n            }\n        } else {\n      \
    \      openingBracketIndex += 1\n            closingBracketIndex += 1\n      \
    \  }\n    }\n\n    return openingBracketIndex == brackets.endIndex", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    var\
    \ openingBracketsCount = openingBrackets.count\n    var closingBracketsCount =\
    \ closingBrackets.count\n    if openingBracketsCount != closingBracketsCount {\n\
    \        return false\n    }\n    if openingBracketsCount == 0 {\n        return\
    \ true\n    }\n    if openingBrackets.first != closingBrackets.last {\n      \
    \  return false\n    }\n    var firstOpeningBracket = openingBrackets.first\n\
    \    var lastClosingBracket = closingBrackets.last\n    var firstClosingBracketIndex\
    \ = openingBrackets.firstIndex\n    var lastOpeningBracketIndex = openingBrackets.lastIndex\n\
    \    var lastClosingBracketIndex = closingBrackets.lastIndex\n    if firstOpeningBracket\
    \ < firstClosingBracket {\n        return false\n    }\n    if lastOpeningBracketIndex\
    \ < lastClosingBracketIndex {\n        return false\n    }\n    if lastOpeningBracketIndex\
    \ == lastClosingBracketIndex {\n        return true\n    }\n    var firstOpeningBracketIndex\
    \ = openingBrackets.firstIndex\n    var lastOpeningBracketIndex = openingBrackets.lastIndex\n\
    \    var firstClosingBracketIndex = closingBrackets.firstIndex\n    var lastClosingBracketIndex\
    \ = closingBrackets.lastIndex\n    if firstOpeningBracketIndex < firstClosingBracketIndex\
    \ {\n        return false\n    }\n    if lastOpeningBracketIndex < lastClosingBracketIndex\
    \ {\n        return false\n    }\n    var firstOpeningBracket = openingBrackets.first\n\
    \    var lastOpeningBracket = openingBrackets.last\n    var firstClosingBracket\
    \ = closingBrackets.first\n    var lastClosingBracket = closingBrackets.last\n\
    \    if firstOpeningBracket < firstClosingBracket {\n        return false\n  \
    \  }\n    if lastOpeningBracket < lastClosingBracket {\n        return false\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    var openingBracket: Character?\n \
    \   var closingBracket: Character?\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        openingBracket = openingBrackets[openingBracketIndex]\n        closingBracket\
    \ = closingBrackets[closingBracketIndex]\n        if openingBracket == \"<\" {\n\
    \            if closingBracket == \">\" {\n                openingBracketCount++\n\
    \                closingBracketCount = 0\n            } else {\n             \
    \   openingBracketCount++\n                closingBracketCount++\n           \
    \ }\n        } else if openingBracket == \">\" {\n            if closingBracket\
    \ == \"<\" {\n                openingBracketCount++\n                closingBracketCount\
    \ = 0\n            } else {\n                openingBracketCount++\n         \
    \       closingBracketCount--\n            }\n        } else {\n            if\
    \ openingBracketCount > closingBracketCount {\n                return false\n\
    \            }\n        }\n        openingBracketIndex++\n        closingBracketIndex++\n\
    \    }\n    return openingBracketCount == closingBracketCount", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != \">\" {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n    }\n\n    while closingBracketIndex\
    \ < closingBrackets.endIndex {\n        if closingBrackets[closingBracketIndex]\
    \ != \"<\" {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketIndex == closingBracketIndex", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        openingBracketIndex = openingBracketIndex.successor()\n        closingBracketIndex\
    \ = closingBracketIndex.successor()\n        if openingBracketIndex == brackets.endIndex\
    \ {\n            openingBracketIndex = brackets.startIndex\n        }\n      \
    \  if closingBracketIndex == brackets.endIndex {\n            closingBracketIndex\
    \ = brackets.startIndex\n        }\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n    }\n    while closingBracketIndex < brackets.endIndex {\n        guard\
    \ closingBrackets[closingBracketIndex] != \">\" else {\n            return false\n\
    \        }\n        closingBracketIndex += 1\n    }\n    return openingBracketIndex\
    \ == closingBracketIndex", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = 0\n\
    \    var closingBracketIndex = 0\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < openingBrackets.count {\n        let\
    \ openingBracket = openingBrackets[openingBracketIndex]\n        let closingBracket\
    \ = closingBrackets[closingBracketIndex]\n\n        if openingBracket == \"<\"\
    \ {\n            openingBracketCount += 1\n        } else if openingBracket ==\
    \ \">\" {\n            openingBracketCount -= 1\n        }\n\n        if closingBracket\
    \ == \"<\" {\n            closingBracketCount += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketCount -= 1\n        }\n\n        if openingBracketCount\
    \ < 0 || closingBracketCount < 0 {\n            return false\n        }\n\n  \
    \      openingBracketIndex += 1\n        closingBracketIndex += 1\n    }\n\n \
    \   return openingBracketIndex == openingBrackets.count", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n\n    var openingBracketsCount = 1\n    var closingBracketsCount\
    \ = 1\n\n    for openingBracket in openingBrackets {\n        if openingBracket\
    \ == \"<\" {\n            openingBracketsCount++\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketsCount--\n        }\n    }\n\n    for\
    \ closingBracket in closingBrackets {\n        if closingBracket == \"<\" {\n\
    \            closingBracketsCount++\n        } else if closingBracket == \">\"\
    \ {\n            closingBracketsCount--\n        }\n    }\n\n    return openingBracketsCount\
    \ == 0 && closingBracketsCount == 0", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        openingBracketIndex = openingBracketIndex\
    \ + 1\n\n        if openingBracket == \"<\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            if openingBracketIndex < brackets.endIndex\
    \ && brackets[openingBracketIndex] == \">\" {\n                openingBracketIndex\
    \ = openingBracketIndex + 1\n            }\n        }\n\n        if openingBracket\
    \ == \">\" {\n            closingBracketIndex = closingBracketIndex - 1\n    \
    \        if closingBracketIndex >= 0 && brackets[closingBracketIndex] != \"<\"\
    \ {\n                closingBracketIndex = closingBracketIndex - 1\n         \
    \   }\n        }\n\n        if openingBracketIndex < brackets.endIndex && closingBracketIndex\
    \ < brackets.endIndex {\n            openingBracketIndex = openingBracketIndex\
    \ + 1\n            closingBracketIndex = closingBracketIndex - 1\n        }\n\n\
    \        if openingBracketIndex < brackets.endIndex && closingBracketIndex < brackets.endIndex\
    \ {\n            openingBracketIndex = openingBracketIndex + 1\n            closingBracketIndex\
    \ = closingBracketIndex - 1\n        }\n\n        if openingBracketIndex < brackets.endIndex\
    \ && closingBracketIndex < brackets.endIndex {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            closingBracketIndex = closingBracketIndex\
    \ - 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && closingBracketIndex\
    \ < brackets.endIndex {\n            openingBracketIndex = openingBracketIndex\
    \ + 1\n            closingBracketIndex = closingBracketIndex - 1\n        }\n\n\
    \        if openingBracketIndex < brackets.endIndex && closingBracketIndex < brackets.endIndex\
    \ {\n            openingBracketIndex = openingBracketIndex + 1\n            closingBracketIndex\
    \ = closingBracketIndex - 1\n        }\n\n        if openingBracketIndex < brackets.endIndex\
    \ && closingBracketIndex < brackets.endIndex {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            closingBracketIndex = closingBracketIndex\
    \ - 1\n        }\n\n        if openingBracketIndex < brackets.endIndex && closingBracketIndex\
    \ < brackets.", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] !=\
    \ \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ guard closingBrackets[closingBracketIndex] != \">\" else {\n            return\
    \ false\n        }\n        closingBracketIndex += 1\n    }\n\n    return openingBracketIndex\
    \ == closingBracketIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        openingBracketIndex = openingBracketIndex + 1\n\
    \        if openingBrackets[openingBracketIndex] != \">\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            continue\n        }\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n            openingBracketIndex = openingBracketIndex + 1\n       \
    \     continue\n        }\n        openingBracketIndex = openingBracketIndex +\
    \ 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            continue\n        }\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n            openingBracketIndex = openingBracketIndex + 1\n       \
    \     continue\n        }\n        openingBracketIndex = openingBracketIndex +\
    \ 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            continue\n        }\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n            openingBracketIndex = openingBracketIndex + 1\n       \
    \     continue\n        }\n        openingBracketIndex = openingBracketIndex +\
    \ 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            continue\n        }\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n            openingBracketIndex = openingBracketIndex + 1\n       \
    \     continue\n        }\n        openingBracketIndex = openingBracketIndex +\
    \ 1\n        if openingBrackets[openingBracketIndex] != \"<\" {\n            openingBracketIndex\
    \ = openingBracketIndex + 1\n            continue\n        }\n        openingBracketIndex\
    \ = openingBracketIndex + 1\n        if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n            openingBracketIndex = open", "    var openingBrackets =\
    \ brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            if closingBracket == \">\"\
    \ {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \           closingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            }\n        } else {\n            if openingBracket != closingBracket\
    \ {\n                return false\n            }\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        }\n    }\n\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for openingBracket in openingBrackets {\n\
    \        if !closingBrackets.contains(where: { $0 == openingBracket }) {\n   \
    \         return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ guard closingBrackets[closingBracketIndex] != \"<\" else {\n            return\
    \ false\n        }\n        closingBracketIndex += 1\n    }\n\n    return openingBracketIndex\
    \ == closingBracketIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        openingBracketIndex += 1\n        if openingBracket == \"<\" {\n    \
    \        let closingBracket = brackets[openingBracketIndex]\n            openingBracketIndex\
    \ += 1\n            if closingBracket == \">\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \                closingBrackets.append(\">\")\n            }\n        } else\
    \ {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n            closingBrackets.append(openingBracket)\n        }\n    }\n  \
    \  return openingBracketIndex == brackets.endIndex && closingBracketIndex == brackets.endIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        if openingBrackets[i] != closingBrackets[i]\
    \ {\n            return false\n        }\n    }\n    \n    return true", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n\n        if openingBracket == \"<\" {\n  \
    \          openingBracketIndex += 1\n        } else if openingBracket == \">\"\
    \ {\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n        } else {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        }\n\n        if openingBracketIndex >= brackets.endIndex {\n \
    \           return false\n        }\n\n        if closingBracketIndex >= brackets.endIndex\
    \ {\n            return true\n        }\n\n        if openingBracket != closingBracket\
    \ {\n            return false\n        }\n    }\n\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        switch brackets[openingBracketIndex]\
    \ {\n        case \"<\":\n            openingBracketCount += 1\n        case \"\
    <=\":\n            openingBracketCount += 1\n        case \"=\":\n           \
    \ openingBracketCount += 1\n        case \"==\":\n            openingBracketCount\
    \ += 1\n        case \"!\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"<\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketCount++\n        }\n        else if openingBracket\
    \ == \">\" {\n            openingBracketCount--\n        }\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n        if closingBracket == \"<\" {\n    \
    \        closingBracketCount++\n        }\n        else if closingBracket == \"\
    >\" {\n            closingBracketCount--\n        }\n        closingBracketIndex++\n\
    \    }\n\n    if openingBracketCount != closingBracketCount {\n        return\
    \ false\n    }\n\n    if openingBracketCount == 0 {\n        return true\n   \
    \ }\n\n    if openingBracketIndex < closingBracketIndex {\n        return false\n\
    \    }\n\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    brackets = brackets.lowercased()\n    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        let openingBracket = openingBrackets[openingBracketIndex]\n     \
    \   openingBracketIndex += 1\n\n        if openingBracket == \"<\" {\n       \
    \     if closingBracketIndex < closingBrackets.endIndex {\n                let\
    \ closingBracket = closingBrackets[closingBracketIndex]\n                closingBracketIndex\
    \ += 1\n                if closingBracket == \">\" {\n                    openingBracketIndex\
    \ += 1\n                    closingBracketIndex += 1\n                } else {\n\
    \                    return false\n                }\n            } else {\n \
    \               return false\n            }\n        } else {\n            if\
    \ closingBracketIndex < closingBrackets.endIndex {\n                let closingBracket\
    \ = closingBrackets[closingBracketIndex]\n                closingBracketIndex\
    \ += 1\n                if closingBracket == \"<\" {\n                    openingBracketIndex\
    \ += 1\n                    closingBracketIndex += 1\n                } else {\n\
    \                    return false\n                }\n            } else {\n \
    \               return false\n            }\n        }\n    }\n\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for openingBracket in openingBrackets {\n\
    \        if !closingBrackets.contains(where: { $0 == openingBracket }) {\n   \
    \         return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    var openingBracketsCount = openingBrackets.count\n\
    \    var closingBracketsCount = closingBrackets.count\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n    var openingBracketIndex\
    \ = 0\n    var closingBracketIndex = 0\n    while openingBracketIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex += 1\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    var openingBracketsCountIndex = 0\n    var closingBracketsCountIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsCountIndex\
    \ += 1\n        if openingBracketsCountIndex == openingBracketsCount {\n     \
    \       openingBracketsCountIndex = 0\n            openingBracketsIndex += 1\n\
    \        }\n        if openingBrackets[openingBracketsIndex] == '<' {\n      \
    \      openingBracketsCountIndex += 1\n            if openingBracketsCountIndex\
    \ == openingBracketsCount {\n                openingBracketsCountIndex = 0\n \
    \               openingBracketsIndex += 1\n            }\n            if openingBrackets[openingBracketsIndex]\
    \ == '>' {\n                openingBracketsCountIndex += 1\n                if\
    \ openingBracketsCountIndex == openingBracketsCount {\n                    openingBracketsCountIndex\
    \ = 0\n                    openingBracketsIndex += 1\n                }\n    \
    \            if openingBrackets[openingBracketsIndex] == '>' {\n             \
    \       openingBracketsCountIndex += 1\n                    if openingBracketsCountIndex\
    \ == openingBracketsCount {\n                        openingBracketsCountIndex\
    \ = 0\n                        openingBracketsIndex += 1\n                   \
    \ }\n                }\n            }\n        }\n    }\n\n    while closingBracketsIndex\
    \ < closingBracketsCount {\n        closingBracketsCountIndex += 1\n        if\
    \ closingBracketsCountIndex == closingBracketsCount {\n            closingBracketsCountIndex\
    \ = 0\n            closingBracketsIndex += 1\n        }\n        if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n            closingBracketsCountIndex += 1\n            if closingBracketsCountIndex\
    \ == closingBracketsCount {\n                closingBracketsCountIndex = 0\n \
    \               closingBracketsIndex += 1\n            }\n            if closingBrackets[closingBracketsIndex]\
    \ == '>' {\n                closingBracketsCountIndex += 1\n                if\
    \ closingBracketsCountIndex == closingBracketsCount {\n                    closingBracketsCountIndex\
    \ = 0\n                    closingBracket", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            if closingBracket != \">\"\
    \ {\n                return false\n            }\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket != \"<\" {\n                return\
    \ false\n            }\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else {\n            if openingBracket != closingBracket {\n\
    \                return false\n            }\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        }\n    }\n\n    return true",
  "    let openings = brackets.components(separatedBy: \"<\")\n    let closings =\
    \ brackets.components(separatedBy: \">\")\n    if openings.count != closings.count\
    \ {\n        return false\n    }\n    for opening in openings {\n        if !opening.hasPrefix(closings[0])\
    \ {\n            return false\n        }\n    }\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    let openingBrackets = brackets.components(separatedBy: \"<\")\n\
    \    let closingBrackets = brackets.components(separatedBy: \">\")\n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    for openingBracket\
    \ in openingBrackets {\n        let closingBracket = closingBrackets.first(where:\
    \ { $0 == openingBracket })\n        if closingBracket == nil {\n            return\
    \ false\n        }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n            openingBracketsIndex += 1\n            if openingBracketsIndex\
    \ < openingBracketsCount {\n                openingBracketsIndex += 1\n      \
    \          if openingBrackets[openingBracketsIndex] == '>' {\n               \
    \     openingBracketsIndex += 1\n                    if openingBracketsIndex <\
    \ openingBracketsCount {\n                        openingBracketsIndex += 1\n\
    \                        if openingBrackets[openingBracketsIndex] == '>' {\n \
    \                           openingBracketsIndex += 1\n                      \
    \      if openingBracketsIndex < openingBracketsCount {\n                    \
    \            openingBracketsIndex += 1\n                                if openingBrackets[openingBracketsIndex]\
    \ == '>' {\n                                    openingBracketsIndex += 1\n  \
    \                                  if openingBracketsIndex < openingBracketsCount\
    \ {\n                                        openingBracketsIndex += 1\n     \
    \                                   if openingBrackets[openingBracketsIndex] ==\
    \ '>' {\n                                            openingBracketsIndex += 1\n\
    \                                            if openingBracketsIndex < openingBracketsCount\
    \ {\n                                                openingBracketsIndex += 1\n\
    \                                                if openingBrackets[openingBracketsIndex]\
    \ == '>' {\n                                                    openingBracketsIndex\
    \ += 1\n                                                    if openingBracketsIndex\
    \ < openingBracketsCount {\n                                                 \
    \       openingBracketsIndex += 1\n                                          \
    \              if openingBrackets[openingBracketsIndex] == '>' {\n           \
    \                                                 openingBracketsIndex += 1\n\
    \                                                            if openingBracketsIndex\
    \ < openingBracketsCount {\n                                                 \
    \               openingBracketsIndex += 1\n                                  \
    \                              if openingBrackets[openingBracketsIndex] == '>'\
    \ {\n                                                                    openingBracketsIndex\
    \ += 1\n                                                                    if\
    \ openingBracketsIndex < openingBracketsCount {\n                            \
    \                                            openingBracketsIndex += 1\n     \
    \                                                               }\n          \
    \                                                      }\n                   \
    \             ", "    let openingBrackets = brackets.components(separatedBy: \"\
    <\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n    return\
    \ openingBrackets.count == closingBrackets.count", "    let openingBrackets =\
    \ brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    \n    if openingBrackets.count != closingBrackets.count {\n    \
    \    return false\n    }\n    \n    for i in 0..<openingBrackets.count {\n   \
    \     if openingBrackets[i] != closingBrackets[i] {\n            return false\n\
    \        }\n    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n\n    for i in 0..<openingBrackets.count\
    \ {\n        if openingBrackets[i] != closingBrackets[i] {\n            return\
    \ false\n        }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        switch brackets[openingBracketIndex] {\n    \
    \    case \"<\":\n            openingBracketCount += 1\n        case \"<=\":\n\
    \            openingBracketCount += 1\n        case \"=\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"=\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<=\":\n            openingBracketCount += 1\n        case\
    \ \"=\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<=\":\n            openingBracketCount\
    \ += 1\n        case \"=\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<=\":\n       \
    \     openingBracketCount += 1\n        case \"=\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"=\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<=\":\n            openingBracketCount += 1\n        case\
    \ \"=\":\n            openingBracketCount += 1\n        case \"<\":\n        \
    \    openingBracketCount += 1\n        case \"<=\":\n            openingBracketCount\
    \ += 1\n        case \"=\":\n            openingBracketCount += 1\n        case\
    \ \"<\":\n            openingBracketCount += 1\n        case \"<=\":\n       \
    \     openingBracketCount += 1\n        case \"=\":\n            openingBracketCount\
    \ += 1\n        case \"<\":\n            openingBracketCount += 1\n        case\
    \ \"<=\":\n            openingBracketCount += 1\n        case \"=\":\n       \
    \     openingBracketCount += 1\n        case \"<\":\n            openingBracketCount\
    \ += 1\n        case \"<=\":\n            openingBracketCount += 1\n        case\
    \ \"=\":\n            ", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        if openingBrackets[openingBracketIndex] != \"\
    >\" {\n            openingBracketIndex += 1\n            continue\n        }\n\
    \n        openingBracketIndex += 1\n        if openingBracketIndex < brackets.endIndex\
    \ {\n            if openingBrackets[openingBracketIndex] == \">\" {\n        \
    \        openingBracketIndex += 1\n                continue\n            }\n \
    \       }\n\n        if openingBracketIndex < brackets.endIndex {\n          \
    \  if openingBrackets[openingBracketIndex] != \"<\" {\n                openingBracketIndex\
    \ += 1\n                continue\n            }\n        }\n\n        openingBracketIndex\
    \ += 1\n        if openingBracketIndex < brackets.endIndex {\n            if openingBrackets[openingBracketIndex]\
    \ != \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if openingBrackets[openingBracketIndex] !=\
    \ \"<\" {\n                openingBracketIndex += 1\n                continue\n\
    \            }\n        }\n\n        openingBracketIndex += 1\n        if openingBracketIndex\
    \ < brackets.endIndex {\n            if opening", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] ==\
    \ '<' else {\n            return false\n        }\n        openingBracketCount++\n\
    \        openingBracketIndex++\n    }\n\n    while closingBracketIndex < brackets.endIndex\
    \ {\n        guard closingBrackets[closingBracketIndex] == '>' else {\n      \
    \      return false\n        }\n        closingBracketCount++\n        closingBracketIndex++\n\
    \    }\n\n    return openingBracketCount == closingBracketCount", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    var openingBracketsCount = openingBrackets.count\n\
    \    var closingBracketsCount = closingBrackets.count\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n    if openingBrackets.first\
    \ != closingBrackets.last {\n        return false\n    }\n    if openingBrackets.first\
    \ == closingBrackets.first {\n        return true\n    }\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketsIndex] != closingBrackets[closingBracketsIndex]\
    \ {\n            return false\n        }\n        openingBracketsIndex += 1\n\
    \        closingBracketsIndex += 1\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n\n   \
    \ var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n        openingBracketIndex += 1\n \
    \       closingBracketIndex += 1\n    }\n\n    return true", "    var opening\
    \ = brackets.characters\n    var closing = brackets.characters\n    var openingCount\
    \ = brackets.characters.count\n    var closingCount = brackets.characters.count\n\
    \    var openingIndex = 0\n    var closingIndex = 0\n    while openingIndex <\
    \ openingCount {\n        opening = brackets.substringWithRange(NSMakeRange(openingIndex,\
    \ 1))\n        closing = brackets.substringWithRange(NSMakeRange(closingIndex,\
    \ 1))\n        if opening == \"<\" {\n            if closing != \">\" {\n    \
    \            openingIndex++\n                closingIndex++\n            } else\
    \ {\n                openingIndex++\n                closingIndex++\n        \
    \        openingCount--\n                closingCount--\n            }\n     \
    \   } else if opening == \">\" {\n            if closing != \"<\" {\n        \
    \        openingIndex++\n                closingIndex++\n            } else {\n\
    \                openingIndex++\n                closingIndex++\n            \
    \    openingCount--\n                closingCount--\n            }\n        }\
    \ else {\n            openingIndex++\n            closingIndex++\n           \
    \ openingCount--\n            closingCount--\n        }\n    }\n    return openingCount\
    \ == 0 && closingCount == 0", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeFirst()\n\
    \    closingBrackets.removeLast()\n    openingBrackets.reverse()\n    closingBrackets.reverse()\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    var opening = brackets.characters\n    var closing = brackets.characters\n\
    \    var openingCount = brackets.characters.count\n    var closingCount = brackets.characters.count\n\
    \    var openingIndex = 0\n    var closingIndex = 0\n    while openingIndex <\
    \ openingCount {\n        opening = brackets.substringWithRange(NSMakeRange(openingIndex,\
    \ 1))\n        closing = brackets.substringWithRange(NSMakeRange(closingIndex,\
    \ 1))\n        if opening == \"<\" {\n            if closing == \">\" {\n    \
    \            openingIndex++\n                closingIndex++\n            } else\
    \ {\n                openingIndex++\n                closingIndex++\n        \
    \        openingCount--\n                closingCount--\n            }\n     \
    \   } else if opening == \">\" {\n            if closing == \"<\" {\n        \
    \        openingIndex++\n                closingIndex++\n            } else {\n\
    \                openingIndex++\n                closingIndex++\n            \
    \    openingCount--\n                closingCount--\n            }\n        }\
    \ else {\n            openingIndex++\n            closingIndex++\n           \
    \ openingCount--\n            closingCount--\n        }\n    }\n    return openingCount\
    \ == 0 && closingCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true", "    guard let openingBrackets = brackets.components(separatedBy: \"\
    <\") else {\n        return false\n    }\n    guard let closingBrackets = brackets.components(separatedBy:\
    \ \">\") else {\n        return false\n    }\n    for openingBracket in openingBrackets\
    \ {\n        for closingBracket in closingBrackets {\n            if openingBracket\
    \ != closingBracket {\n                return false\n            }\n        }\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketsCount = brackets.characters.count\n\
    \    var closingBracketsCount = brackets.characters.count\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \">\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ != \"<\" {\n            continue\n        }\n        openingBracketsIndex +=\
    \ 1\n        if openingBrackets[openingBracketsIndex] != \"<\" {\n           \
    \ continue\n        }\n        openingBra", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty {\n       \
    \ return true\n    }\n    if closingBrackets.isEmpty {\n        return false\n\
    \    }\n    if openingBrackets.first != closingBrackets.first {\n        return\
    \ false\n    }\n    if openingBrackets.last != closingBrackets.last {\n      \
    \  return false\n    }\n    return correct_bracketing(openingBrackets.dropFirst(),\
    \ closingBrackets.dropLast())", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketsCount\
    \ = 1\n    var closingBracketsCount = 1\n\n    for openingBracket in openingBrackets\
    \ {\n        if openingBracket == \"<\" {\n            openingBracketsCount++\n\
    \        } else if openingBracket == \">\" {\n            openingBracketsCount--\n\
    \        }\n    }\n\n    for closingBracket in closingBrackets {\n        if closingBracket\
    \ == \"<\" {\n            closingBracketsCount++\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketsCount--\n        }\n    }\n\n    return\
    \ openingBracketsCount == 0 && closingBracketsCount == 0", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    var openingBracketsString = \"\"\n    var closingBracketsString = \"\
    \"\n    var openingBracketsStringIndex = 0\n    var closingBracketsStringIndex\
    \ = 0\n\n    while openingBracketsIndex < openingBracketsCount {\n        openingBracketsString\
    \ += String(openingBrackets[openingBracketsIndex])\n        openingBracketsIndex\
    \ += 1\n    }\n\n    while closingBracketsIndex < closingBracketsCount {\n   \
    \     closingBracketsString += String(closingBrackets[closingBracketsIndex])\n\
    \        closingBracketsIndex += 1\n    }\n\n    while openingBracketsStringIndex\
    \ < openingBracketsString.count {\n        openingBracketsString += String(openingBrackets[openingBracketsStringIndex])\n\
    \        openingBracketsStringIndex += 1\n    }\n\n    while closingBracketsStringIndex\
    \ < closingBracketsString.count {\n        closingBracketsString += String(closingBrackets[closingBracketsStringIndex])\n\
    \        closingBracketsStringIndex += 1\n    }\n\n    if openingBracketsString\
    \ == closingBracketsString {\n        return true\n    }\n\n    return false",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n    var openingBracketCount = 0\n    var closingBracketCount\
    \ = 0\n\n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        if openingBracket == \"<\" {\n    \
    \        openingBracketCount += 1\n        } else if openingBracket == \">\" {\n\
    \            openingBracketCount -= 1\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ let closingBracket = brackets[closingBracketIndex]\n        if closingBracket\
    \ == \"<\" {\n            closingBracketCount += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketCount -= 1\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketCount == 0 && closingBracketCount ==\
    \ 0", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = brackets.characters.count\n    var closingBracketCount = brackets.characters.count\n\
    \    var openingBracketChar = String()\n    var closingBracketChar = String()\n\
    \n    while openingBracketIndex < openingBracketCount {\n        openingBracketChar\
    \ = brackets.characters[openingBracketIndex]\n        openingBracketIndex += 1\n\
    \n        while closingBracketIndex < closingBracketCount {\n            closingBracketChar\
    \ = brackets.characters[closingBracketIndex]\n            closingBracketIndex\
    \ += 1\n\n            if openingBracketChar == closingBracketChar {\n        \
    \        openingBracketIndex += 1\n                closingBracketIndex += 1\n\
    \            } else {\n                break\n            }\n        }\n\n   \
    \     if openingBracketIndex == openingBracketCount {\n            return false\n\
    \        }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex += 1\n\
    \        } else if openingBracket == \">\" {\n            closingBracketIndex\
    \ += 1\n        } else {\n            return false\n        }\n\n        if openingBracketIndex\
    \ == closingBracketIndex {\n            return false\n        }\n    }\n\n   \
    \ return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n        } else if openingBracket\
    \ == \">\" {\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else {\n            return false\n        }\n\n        if closingBracket\
    \ == \"<\" {\n            closingBracketIndex += 1\n        } else if closingBracket\
    \ == \">\" {\n            closingBracketIndex += 1\n            openingBracketIndex\
    \ += 1\n        } else {\n            return false\n        }\n    }\n\n    return\
    \ openingBracketIndex == closingBracketIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket)\n        if closingBracket\
    \ == nil {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket! {\n            return false\n        }\n    }\n    return true",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        if let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket) {\n            closingBrackets.remove(at: closingBracket)\n\
    \        }\n    }\n    \n    return openingBrackets.count == 0", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    guard openingBrackets.count == closingBrackets.count else {\n  \
    \      return false\n    }\n    for openingBracket in openingBrackets {\n    \
    \    guard let closingBracket = closingBrackets.first(where: { $0 == openingBracket\
    \ }) else {\n            return false\n        }\n        if openingBracket !=\
    \ closingBracket {\n            return false\n        }\n    }\n    return true",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketIndex = openingBrackets.startIndex\n    var closingBracketIndex\
    \ = closingBrackets.startIndex\n\n    while openingBracketIndex < openingBrackets.endIndex\
    \ {\n        if openingBrackets[openingBracketIndex] != \">\" {\n            openingBracketIndex\
    \ += 1\n            continue\n        }\n\n        if closingBracketIndex == closingBrackets.endIndex\
    \ {\n            return false\n        }\n\n        if openingBrackets[openingBracketIndex+1]\
    \ != \"<\" {\n            return false\n        }\n\n        openingBracketIndex\
    \ += 1\n        closingBracketIndex += 1\n    }\n\n    return true", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        let openingBracket = brackets[openingBracketIndex]\n        let closingBracket\
    \ = brackets[closingBracketIndex]\n\n        if openingBracket == \"<\" {\n  \
    \          if closingBracket == \">\" {\n                openingBracketIndex +=\
    \ 1\n                closingBracketIndex += 1\n            } else {\n        \
    \        openingBracketIndex += 1\n            }\n        } else if openingBracket\
    \ == \">\" {\n            if closingBracket == \"<\" {\n                openingBracketIndex\
    \ += 1\n                closingBracketIndex += 1\n            } else {\n     \
    \           openingBracketIndex += 1\n            }\n        } else {\n      \
    \      openingBracketIndex += 1\n            closingBracketIndex += 1\n      \
    \  }\n    }\n\n    return openingBracketIndex == brackets.endIndex", "    var\
    \ openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    var openingBracketIndex = brackets.startIndex\n    var closingBracketIndex\
    \ = brackets.startIndex\n\n    while openingBracketIndex < brackets.endIndex {\n\
    \        if openingBrackets[openingBracketIndex] == \">\" {\n            openingBracketIndex\
    \ += 1\n            if openingBracketIndex < brackets.endIndex {\n           \
    \     openingBrackets[openingBracketIndex] = \"<\"\n            }\n        } else\
    \ {\n            openingBracketIndex += 1\n        }\n    }\n\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        if closingBrackets[closingBracketIndex] == \"\
    >\" {\n            closingBracketIndex += 1\n            if closingBracketIndex\
    \ < brackets.endIndex {\n                closingBrackets[closingBracketIndex]\
    \ = \"<\"\n            }\n        } else {\n            closingBracketIndex +=\
    \ 1\n        }\n    }\n\n    return openingBracketIndex == closingBracketIndex",
  "    let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for i in\
    \ 0..<openingBrackets.count {\n        let openingBracket = openingBrackets[i]\n\
    \        let closingBracket = closingBrackets[i]\n        \n        if openingBracket\
    \ != closingBracket {\n            return false\n        }\n    }\n    \n    return\
    \ true", "    let openings = brackets.components(separatedBy: \"<\")\n    let\
    \ closings = brackets.components(separatedBy: \">\")\n    if openings.count !=\
    \ closings.count {\n        return false\n    }\n    for opening in openings {\n\
    \        if !opening.isEmpty && !closings.contains(opening) {\n            return\
    \ false\n        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        if openingBracket == \"<\" {\n            openingBracketCount++\n   \
    \     } else if openingBracket == \">\" {\n            openingBracketCount--\n\
    \        }\n        openingBracketIndex++\n    }\n\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     } else if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        closingBracketIndex++\n    }\n\n    return openingBracketCount\
    \ == 0 && closingBracketCount == 0", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ while openingBracketIndex < brackets.endIndex {\n        openingBracketIndex\
    \ = openingBracketIndex.successor()\n        closingBracketIndex = closingBracketIndex.successor()\n\
    \        if openingBrackets[openingBracketIndex] != closingBrackets[closingBracketIndex]\
    \ {\n            return false\n        }\n    }\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n    }\n\n    while closingBracketIndex < brackets.endIndex {\n       \
    \ guard closingBrackets[closingBracketIndex] != \">\" else {\n            return\
    \ false\n        }\n        closingBracketIndex += 1\n    }\n\n    return openingBracketIndex\
    \ == closingBracketIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    guard openingBrackets.count == closingBrackets.count else {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        guard let\
    \ closingBracket = closingBrackets.first else {\n            return false\n  \
    \      }\n        if openingBracket != closingBracket {\n            return false\n\
    \        }\n    }\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketsCount\
    \ = openingBrackets.count\n    var closingBracketsCount = closingBrackets.count\n\
    \n    if openingBracketsCount == 0 {\n        return true\n    }\n\n    if openingBracketsCount\
    \ != closingBracketsCount {\n        return false\n    }\n\n    var openingBracketsIndex\
    \ = 0\n    var closingBracketsIndex = 0\n\n    while openingBracketsIndex < openingBracketsCount\
    \ {\n        if openingBrackets[openingBracketsIndex] != closingBrackets[closingBracketsIndex]\
    \ {\n            return false\n        }\n\n        openingBracketsIndex += 1\n\
    \        closingBracketsIndex += 1\n    }\n\n    return true", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    guard openingBrackets.count == closingBrackets.count else {\n  \
    \      return false\n    }\n    for openingBracket in openingBrackets {\n    \
    \    for closingBracket in closingBrackets {\n            if openingBracket !=\
    \ closingBracket {\n                return false\n            }\n        }\n \
    \   }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    return openingBrackets.count == closingBrackets.count", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketsCount = brackets.characters.count\n    var closingBracketsCount\
    \ = brackets.characters.count\n\n    while openingBracketsCount > 0 && closingBracketsCount\
    \ > 0 {\n        if openingBrackets[openingBracketsCount - 1] == closingBrackets[closingBracketsCount\
    \ - 1] {\n            openingBracketsCount -= 1\n            closingBracketsCount\
    \ -= 1\n        } else {\n            return false\n        }\n    }\n\n    return\
    \ openingBracketsCount == 0", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex] ==\
    \ \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        openingBracketIndex += 1\n        guard openingBrackets[openingBracketIndex]\
    \ == \">\" else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n \
    \           return false\n        }\n        openingBracketIndex += 1\n      \
    \  guard openingBrackets[openingBracketIndex] == \">\" else {\n            return\
    \ false\n        }\n        open", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n   \
    \ var openingBracketCount = brackets.characters.count\n    var closingBracketCount\
    \ = brackets.characters.count\n\n    while openingBracketIndex < openingBracketCount\
    \ {\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n    \
    \        return false\n        }\n        openingBracketIndex += 1\n    }\n\n\
    \    while closingBracketIndex < closingBracketCount {\n        guard closingBrackets[closingBracketIndex]\
    \ == \"<\" else {\n            return false\n        }\n        closingBracketIndex\
    \ += 1\n    }\n\n    return openingBracketIndex == closingBracketIndex", "   \
    \ var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \    openingBrackets.removeLast()\n    closingBrackets.removeFirst()\n    var\
    \ openingBracketsCount = openingBrackets.count\n    var closingBracketsCount =\
    \ closingBrackets.count\n    if openingBracketsCount != closingBracketsCount {\n\
    \        return false\n    }\n    var openingBracketsIndex = 0\n    var closingBracketsIndex\
    \ = 0\n    while openingBracketsIndex < openingBracketsCount {\n        if openingBrackets[openingBracketsIndex]\
    \ != closingBrackets[closingBracketsIndex] {\n            return false\n     \
    \   }\n        openingBracketsIndex += 1\n        closingBracketsIndex += 1\n\
    \    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for openingBracket in openingBrackets {\n        let\
    \ closingBracket = closingBrackets.firstIndex(of: openingBracket)\n        \n\
    \        if closingBracket == nil {\n            return false\n        }\n   \
    \     \n        if openingBracket != closingBracket! {\n            return false\n\
    \        }\n    }\n    \n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketIndex =\
    \ brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\n \
    \   while openingBracketIndex < brackets.endIndex {\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '<' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n        guard openingBrackets[openingBracketIndex]\
    \ == '>' else {\n            return false\n        }\n        openingBracketIndex\
    \ += 1\n        guard openingBracketIndex < brackets.endIndex else {\n       \
    \     return false\n        }\n", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    \n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    \n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i]\
    \ != closingBrackets[i] {\n            return false\n        }\n    }\n    \n\
    \    return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        guard openingBrackets[openingBracketIndex] != \"<\" else {\n    \
    \        return false\n        }\n        openingBracketCount++\n        openingBracketIndex++\n\
    \    }\n\n    while closingBracketIndex < brackets.endIndex {\n        guard closingBrackets[closingBracketIndex]\
    \ != \">\" else {\n            return false\n        }\n        closingBracketCount++\n\
    \        closingBracketIndex++\n    }\n\n    if openingBracketCount != closingBracketCount\
    \ {\n        return false\n    }\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        guard openingBrackets[openingBracketIndex] == \">\" else {\n    \
    \        return false\n        }\n        openingBracketIndex++\n    }\n\n   \
    \ while closingBracketIndex < brackets.endIndex {\n        guard closingBrackets[closingBracketIndex]\
    \ != \"<\" else {\n            return false\n        }\n        closingBracketIndex++\n\
    \    }\n\n    return true", "    var openingBrackets = brackets.characters\n \
    \   var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = brackets.characters.count\n    var closingBracketCount = brackets.characters.count\n\
    \    var openingBracketFound = false\n    var closingBracketFound = false\n  \
    \  var openingBracketCount = 0\n    var closingBracketCount = 0\n    while openingBracketIndex\
    \ < openingBracketCount {\n        let openingBracket = openingBrackets[openingBracketIndex]\n\
    \        openingBracketIndex += 1\n        if openingBracket == \"<\" {\n    \
    \        openingBracketFound = true\n            openingBracketCount += 1\n  \
    \      }\n        if openingBracket == \">\" {\n            openingBracketFound\
    \ = true\n            openingBracketCount += 1\n        }\n    }\n    while closingBracketIndex\
    \ < closingBracketCount {\n        let closingBracket = closingBrackets[closingBracketIndex]\n\
    \        closingBracketIndex += 1\n        if closingBracket == \"<\" {\n    \
    \        closingBracketFound = true\n            closingBracketCount += 1\n  \
    \      }\n        if closingBracket == \">\" {\n            closingBracketFound\
    \ = true\n            closingBracketCount += 1\n        }\n    }\n    if openingBracketFound\
    \ && closingBracketFound {\n        return true\n    }\n    return false", " \
    \   let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    if openingBrackets.count != closingBrackets.count\
    \ {\n        return false\n    }\n    for openingBracket in openingBrackets {\n\
    \        let closingBracket = closingBrackets.firstIndex(of: openingBracket)\n\
    \        if closingBracket == nil {\n            return false\n        }\n   \
    \     if openingBracket != closingBracket! {\n            return false\n     \
    \   }\n    }\n    return true", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n \
    \   var closingBracketIndex = brackets.startIndex\n\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n\n        if openingBracket\
    \ == \"<\" {\n            if closingBracket != \">\" {\n                return\
    \ false\n            }\n            openingBracketIndex += 1\n            closingBracketIndex\
    \ += 1\n        } else if openingBracket == \">\" {\n            if closingBracket\
    \ != \"<\" {\n                return false\n            }\n            openingBracketIndex\
    \ += 1\n            closingBracketIndex += 1\n        } else {\n            if\
    \ openingBracket != closingBracket {\n                return false\n         \
    \   }\n            openingBracketIndex += 1\n            closingBracketIndex +=\
    \ 1\n        }\n    }\n\n    return true", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n\n    var openingBracketIndex\
    \ = openingBrackets.startIndex\n    var closingBracketIndex = closingBrackets.startIndex\n\
    \n    while openingBracketIndex < openingBrackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ != \">\" {\n            openingBracketIndex += 1\n            continue\n   \
    \     }\n\n        openingBracketIndex += 1\n        closingBracketIndex += 1\n\
    \n        if closingBracketIndex < closingBrackets.endIndex {\n            if\
    \ closingBrackets[closingBracketIndex] != \"<\" {\n                return false\n\
    \            }\n            closingBracketIndex += 1\n        }\n    }\n\n   \
    \ return true", "    var openingBrackets = brackets.characters\n    var closingBrackets\
    \ = brackets.characters\n\n    var openingBracketsCount = openingBrackets.count\n\
    \    var closingBracketsCount = closingBrackets.count\n\n    if openingBracketsCount\
    \ == 0 {\n        return true\n    }\n\n    if openingBracketsCount == closingBracketsCount\
    \ {\n        return true\n    }\n\n    if openingBracketsCount > closingBracketsCount\
    \ {\n        var temp = openingBrackets\n        openingBrackets = closingBrackets\n\
    \        closingBrackets = temp\n    }\n\n    var openingBracketIndex = openingBrackets.startIndex\n\
    \    var closingBracketIndex = closingBrackets.startIndex\n\n    while openingBracketIndex\
    \ < openingBrackets.endIndex {\n        if openingBrackets[openingBracketIndex]\
    \ != closingBrackets[closingBracketIndex] {\n            return false\n      \
    \  }\n\n        openingBracketIndex += 1\n        closingBracketIndex += 1\n \
    \   }\n\n    return true", "    var openingBrackets = brackets.characters\n  \
    \  var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        openingBracketCount++\n\
    \n        if openingBracket == \"<\" {\n            openingBracketIndex++\n  \
    \      } else if openingBracket == \">\" {\n            openingBracketIndex++\n\
    \            closingBracketIndex++\n        } else {\n            openingBracketIndex++\n\
    \        }\n\n        if openingBracketIndex >= brackets.endIndex {\n        \
    \    return false\n        }\n    }\n\n    while closingBracketIndex < brackets.endIndex\
    \ {\n        let closingBracket = brackets[closingBracketIndex]\n        closingBracketCount++\n\
    \n        if closingBracket == \"<\" {\n            closingBracketIndex++\n  \
    \      } else if closingBracket == \">\" {\n            closingBracketIndex++\n\
    \            openingBracketIndex++\n        } else {\n            closingBracketIndex++\n\
    \        }\n\n        if closingBracketIndex >= brackets.endIndex {\n        \
    \    return false\n        }\n    }\n\n    if openingBracketCount != closingBracketCount\
    \ {\n        return false\n    }\n\n    return true", "    var openingBrackets\
    \ = brackets.characters\n    var closingBrackets = brackets.characters\n    openingBrackets.removeLast()\n\
    \    closingBrackets.removeFirst()\n    if openingBrackets.isEmpty {\n       \
    \ return true\n    }\n    if closingBrackets.isEmpty {\n        return false\n\
    \    }\n    if openingBrackets.first != closingBrackets.first {\n        return\
    \ false\n    }\n    return correct_bracketing(openingBrackets, closingBrackets)",
  "    var openingBrackets = brackets.characters\n    var closingBrackets = brackets.characters\n\
    \n    var openingBracketsIndex = 0\n    var closingBracketsIndex = 0\n\n    while\
    \ openingBracketsIndex < openingBrackets.count {\n        if openingBrackets[openingBracketsIndex]\
    \ == \">\" {\n            openingBracketsIndex += 1\n            if openingBracketsIndex\
    \ < openingBrackets.count {\n                openingBrackets[openingBracketsIndex]\
    \ = \"<\"\n            }\n        } else {\n            openingBracketsIndex +=\
    \ 1\n        }\n    }\n\n    while closingBracketsIndex < closingBrackets.count\
    \ {\n        if closingBrackets[closingBracketsIndex] == \">\" {\n           \
    \ closingBracketsIndex += 1\n            if closingBracketsIndex < closingBrackets.count\
    \ {\n                closingBrackets[closingBracketsIndex] = \"<\"\n         \
    \   }\n        } else {\n            closingBracketsIndex += 1\n        }\n  \
    \  }\n\n    return openingBracketsIndex == closingBracketsIndex", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    if openingBrackets.count != closingBrackets.count {\n        return\
    \ false\n    }\n    for openingBracket in openingBrackets {\n        if let closingBracket\
    \ = closingBrackets.firstIndex(of: openingBracket) {\n            closingBrackets.remove(at:\
    \ closingBracket)\n        } else {\n            return false\n        }\n   \
    \ }\n    return true", "    var openingBrackets = brackets.characters\n    var\
    \ closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    var openingBracketCount\
    \ = 0\n    var closingBracketCount = 0\n    while openingBracketIndex < brackets.endIndex\
    \ {\n        let openingBracket = brackets[openingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketCount++\n        }\n        if openingBracket\
    \ == \">\" {\n            openingBracketCount--\n        }\n        if openingBracketCount\
    \ == 0 {\n            openingBracketIndex++\n        }\n        if openingBracketCount\
    \ < 0 {\n            openingBracketIndex--\n        }\n    }\n    while closingBracketIndex\
    \ < brackets.endIndex {\n        let closingBracket = brackets[closingBracketIndex]\n\
    \        if closingBracket == \"<\" {\n            closingBracketCount++\n   \
    \     }\n        if closingBracket == \">\" {\n            closingBracketCount--\n\
    \        }\n        if closingBracketCount == 0 {\n            closingBracketIndex++\n\
    \        }\n        if closingBracketCount < 0 {\n            closingBracketIndex--\n\
    \        }\n    }\n    return openingBracketCount == closingBracketCount", " \
    \   let openingBrackets = brackets.components(separatedBy: \"<\")\n    let closingBrackets\
    \ = brackets.components(separatedBy: \">\")\n    \n    if openingBrackets.count\
    \ != closingBrackets.count {\n        return false\n    }\n    \n    for openingBracket\
    \ in openingBrackets {\n        if let closingBracket = closingBrackets.firstIndex(of:\
    \ openingBracket) {\n            closingBrackets.remove(at: closingBracket)\n\
    \        }\n    }\n    \n    return openingBrackets.count == 0", "    let openingBrackets\
    \ = brackets.components(separatedBy: \"<\")\n    let closingBrackets = brackets.components(separatedBy:\
    \ \">\")\n    guard openingBrackets.count == closingBrackets.count else {\n  \
    \      return false\n    }\n    for openingBracket in openingBrackets {\n    \
    \    let closingBracket = closingBrackets.firstIndex(of: openingBracket)\n   \
    \     if closingBracket == nil {\n            return false\n        }\n      \
    \  if openingBracket != closingBracket! {\n            return false\n        }\n\
    \    }\n    return true", "    var openingBrackets = brackets.characters\n   \
    \ var closingBrackets = brackets.characters\n    var openingBracketIndex = brackets.startIndex\n\
    \    var closingBracketIndex = brackets.startIndex\n    while openingBracketIndex\
    \ < brackets.endIndex {\n        let openingBracket = brackets[openingBracketIndex]\n\
    \        let closingBracket = brackets[closingBracketIndex]\n        if openingBracket\
    \ == \"<\" {\n            openingBracketIndex += 1\n            if openingBracketIndex\
    \ >= brackets.endIndex {\n                return false\n            }\n      \
    \      openingBracket = brackets[openingBracketIndex]\n        }\n        if closingBracket\
    \ == \">\" {\n            closingBracketIndex += 1\n            if closingBracketIndex\
    \ >= brackets.endIndex {\n                return false\n            }\n      \
    \      closingBracket = brackets[closingBracketIndex]\n        }\n        if openingBracket\
    \ != closingBracket {\n            return false\n        }\n    }\n    return\
    \ true", "    brackets = brackets.replacingOccurrences(of: \"<\", with: \">\"\
    )\n    brackets = brackets.replacingOccurrences(of: \">>\", with: \"<\")\n   \
    \ brackets = brackets.replacingOccurrences(of: \"<<\", with: \">>\")\n    return\
    \ brackets.contains(\"<\")", "    var openingBrackets = brackets.characters\n\
    \    var closingBrackets = brackets.characters\n    var openingBracketsCount =\
    \ brackets.characters.count\n    var closingBracketsCount = brackets.characters.count\n\
    \    var openingBracketsIndex = 0\n    var closingBracketsIndex = 0\n    var openingBracketsFound\
    \ = false\n    var closingBracketsFound = false\n\n    while openingBracketsIndex\
    \ < openingBracketsCount {\n        openingBracketsIndex += 1\n        if openingBrackets[openingBracketsIndex]\
    \ == '<' {\n            openingBracketsFound = true\n        }\n    }\n\n    while\
    \ closingBracketsIndex < closingBracketsCount {\n        closingBracketsIndex\
    \ += 1\n        if closingBrackets[closingBracketsIndex] == '>' {\n          \
    \  closingBracketsFound = true\n        }\n    }\n\n    if openingBracketsFound\
    \ == false {\n        return false\n    }\n\n    if closingBracketsFound == false\
    \ {\n        return true\n    }\n\n    if openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsIndex += 1\n    }\n\n    if closingBracketsIndex <\
    \ closingBracketsCount {\n        closingBracketsIndex += 1\n    }\n\n    if openingBracketsIndex\
    \ < openingBracketsCount {\n        openingBracketsIndex += 1\n    }\n\n    if\
    \ closingBracketsIndex < closingBracketsCount {\n        closingBracketsIndex\
    \ += 1\n    }\n\n    if openingBracketsIndex < openingBracketsCount {\n      \
    \  openingBracketsIndex += 1\n    }\n\n    if closingBracketsIndex < closingBracketsCount\
    \ {\n        closingBracketsIndex += 1\n    }\n\n    if openingBracketsIndex <\
    \ openingBracketsCount {\n        openingBracketsIndex += 1\n    }\n\n    if closingBracketsIndex\
    \ < closingBracketsCount {\n        closingBracketsIndex += 1\n    }\n\n    if\
    \ openingBracketsIndex < openingBracketsCount {\n        openingBracketsIndex\
    \ += 1\n    }\n\n    if closingBracketsIndex < closingBracketsCount {\n      \
    \  closingBracketsIndex += 1\n    }\n\n    if openingBracketsIndex < openingBracketsCount\
    \ {\n        openingBracketsIndex += 1\n    }\n\n    if closingBracketsIndex <\
    \ closingBracketsCount {\n        closingBrackets", "    var openingBrackets =\
    \ brackets.characters\n    var closingBrackets = brackets.characters\n    var\
    \ openingBracketIndex = brackets.startIndex\n    var closingBracketIndex = brackets.startIndex\n\
    \n    while openingBracketIndex < brackets.endIndex {\n        let openingBracket\
    \ = brackets[openingBracketIndex]\n        let closingBracket = brackets[closingBracketIndex]\n\
    \n        if openingBracket == \"<\" {\n            if closingBracket == \">\"\
    \ {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \       }\n        } else if openingBracket == \">\" {\n            if closingBracket\
    \ == \"<\" {\n                openingBracketIndex += 1\n                closingBracketIndex\
    \ += 1\n            } else {\n                openingBracketIndex += 1\n     \
    \       }\n        } else {\n            openingBracketIndex += 1\n          \
    \  closingBracketIndex += 1\n        }\n    }\n\n    return openingBracketIndex\
    \ == brackets.endIndex", "    let openingBrackets = brackets.components(separatedBy:\
    \ \"<\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n\
    \    if openingBrackets.count != closingBrackets.count {\n        return false\n\
    \    }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    let openingBrackets = brackets.components(separatedBy: \"\
    <\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n    if\
    \ openingBrackets.count != closingBrackets.count {\n        return false\n   \
    \ }\n    for openingBracket in openingBrackets {\n        if !closingBrackets.contains(where:\
    \ { $0 == openingBracket }) {\n            return false\n        }\n    }\n  \
    \  return true", "    let openingBrackets = brackets.components(separatedBy: \"\
    <\")\n    let closingBrackets = brackets.components(separatedBy: \">\")\n    if\
    \ openingBrackets.count != closingBrackets.count {\n        return false\n   \
    \ }\n    for i in 0..<openingBrackets.count {\n        if openingBrackets[i] !=\
    \ closingBrackets[i] {\n            return false\n        }\n    }\n    return\
    \ true"]
stop_tokens:
- "\n}"

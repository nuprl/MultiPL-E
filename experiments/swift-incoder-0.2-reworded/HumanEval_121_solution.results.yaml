language: swift
name: HumanEval_121_solution
results:
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9y1vzrt7.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp9y1vzrt7.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for val in lst {\n        if val % 2 == 0 {\n          \
    \  sum += val\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpl8604e_s/tmpl8604e_s.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f4ea47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f4e73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f4e73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f4e73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl8604e_s                        0x0000555be9ae050a <unavailable> + 5386

    5    libc.so.6                          0x00002b0f4ec33460 __libc_start_main +
    245

    6    tmpl8604e_s                        0x0000555be9ae0169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum() % 1000000007\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpa9tuourp.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum() % 1000000007\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for val in lst {\n        if val % 2 == 0 {\n          \
    \  sum += val\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpl8604e_s/tmpl8604e_s.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0f4ea47c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0f4e73eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0f4e73e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0f4e73d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl8604e_s                        0x0000555be9ae050a <unavailable> + 5386

    5    libc.so.6                          0x00002b0f4ec33460 __libc_start_main +
    245

    6    tmpl8604e_s                        0x0000555be9ae0169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter{ $0 % 2 == 1 }.sum() % 1000000007\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpa9tuourp.swift:11:38: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter{ $0 % 2 == 1 }.sum() % 1000000007\n           ~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: 1
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    return lst.filter { $0 % 2 == 1 }.sum()\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3,\
    \ 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: SyntaxError
  stderr: "/tmp/tmpgibx1xh4.swift:11:39: error: value of type '[Int]' has no member\
    \ 'sum'\n    return lst.filter { $0 % 2 == 1 }.sum()\n           ~~~~~~~~~~~~~~~~~~~~~~~~~~\
    \ ^~~\n"
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 1 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmplbv30cai/tmplbv30cai.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1c3cabfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1c3c7b6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1c3c7b6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1c3c7b57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplbv30cai                        0x0000562aeff9050a <unavailable> + 5386

    5    libc.so.6                          0x00002b1c3ccab460 __libc_start_main +
    245

    6    tmplbv30cai                        0x0000562aeff90169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for element in lst {\n        if element % 2 == 0 {\n  \
    \          sum += element\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp3dz9ooyd/tmp3dz9ooyd.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0260ccdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02609c4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02609c4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02609c37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3dz9ooyd                        0x0000557e19aa150a <unavailable> + 5386

    5    libc.so.6                          0x00002b0260eb9460 __libc_start_main +
    245

    6    tmp3dz9ooyd                        0x0000557e19aa1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for i in lst {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmptl1wk120/tmptl1wk120.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba15037ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba150075b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba150075988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1500747b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptl1wk120                        0x000056234a1e450a <unavailable> + 5386

    5    libc.so.6                          0x00002ba15056a460 __libc_start_main +
    245

    6    tmptl1wk120                        0x000056234a1e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for index in 0..<lst.count {\n        if index % 2 == 0\
    \ {\n            sum += lst[index]\n        }\n    }\n    return sum\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst:\
    \ [3, 3, 3, 3, 3]) == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst:\
    \ [5, 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmpvfi5ta1c/tmpvfi5ta1c.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0223704c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02233fbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02233fb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02233fa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvfi5ta1c                        0x00005565756cc6ec <unavailable> + 5868

    5    libc.so.6                          0x00002b02238f0460 __libc_start_main +
    245

    6    tmpvfi5ta1c                        0x00005565756cc1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452
- exit_code: -4
  program: "\n/// Given a non-empty array of integers, return the sum of all of the\
    \ odd elements that are in even positions.\n/// Examples\n/// >>> solution(lst:\
    \ [5, 8, 7, 1])\n/// 12\n/// >>> solution(lst: [3, 3, 3, 3, 3])\n/// 9\n/// >>>\
    \ solution(lst: [30, 13, 24, 321])\n/// 0\nfunc solution(lst: [Int]) -> Int {\n\
    \    var sum = 0\n    for x in lst {\n        if x % 2 == 0 {\n            sum\
    \ += x\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solution(lst: [5, 8, 7, 1]) == 12)\nassert(solution(lst: [3, 3, 3, 3, 3])\
    \ == 9)\nassert(solution(lst: [30, 13, 24, 321]) == 0)\nassert(solution(lst: [5,\
    \ 9]) == 5)\nassert(solution(lst: [2, 4, 8]) == 0)\nassert(solution(lst: [30,\
    \ 13, 23, 32]) == 23)\nassert(solution(lst: [3, 13, 2, 9]) == 3)"
  status: Exception
  stderr: 'tmp5n4gweaj/tmp5n4gweaj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3ea30a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3ea2d97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3ea2d97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3ea2d967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5n4gweaj                        0x000056375d71650a <unavailable> + 5386

    5    libc.so.6                          0x00002b3ea328c460 __libc_start_main +
    245

    6    tmp5n4gweaj                        0x000056375d716169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1660013452

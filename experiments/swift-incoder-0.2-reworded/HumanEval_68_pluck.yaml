name: HumanEval_68_pluck
language: swift
prompt: "\n/// \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n/// your task is to pluck one of the nodes and return it.\n///\
  \ The plucked node should be the node with the smallest even value.\n/// If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n/// The plucked node should be returned in an array, [ smalest_value,\
  \ its index ],\n/// If there are no even values or the given array is empty, return\
  \ [].\n/// Example 1:\n/// >>> pluck(arr: [4, 2, 3])\n/// [2, 1]\n/// Explanation:\
  \ 2 has the smallest even value, and 2 has the smallest index.\n/// Example 2:\n\
  /// >>> pluck(arr: [1, 2, 3])\n/// [2, 1]\n/// Explanation: 2 has the smallest even\
  \ value, and 2 has the smallest index.\n/// Example 3:\n/// >>> pluck(arr: [] as\
  \ [Int])\n/// [] as [Int]\n/// Example 4:\n/// >>> pluck(arr: [5, 0, 3, 0, 4, 2])\n\
  /// [0, 1]\n/// Explanation: 0 is the smallest value, but  there are two zeros,\n\
  /// so we will choose the first zero, which has the smallest index.\n/// Constraints:\n\
  /// * 1 <= nodes.length <= 10000\n/// * 0 <= node.value\nfunc pluck(arr: [Int])\
  \ -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(pluck(arr: [4, 2, 3]) == [2, 1])\nassert(pluck(arr:\
  \ [1, 2, 3]) == [2, 1])\nassert(pluck(arr: [] as [Int]) == [] as [Int])\nassert(pluck(arr:\
  \ [5, 0, 3, 0, 4, 2]) == [0, 1])\nassert(pluck(arr: [1, 2, 3, 0, 5, 3]) == [0, 3])\n\
  assert(pluck(arr: [5, 4, 8, 4, 8]) == [4, 1])\nassert(pluck(arr: [7, 6, 7, 1]) ==\
  \ [6, 1])\nassert(pluck(arr: [7, 9, 7, 1]) == [] as [Int])"
completions: ["    var result = [Int]()\n    var minIndex = -1\n    var minValue =\
    \ arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    \n    var result = [Int]()\n\
    \    var minIndex = 0\n    \n    for node in arr {\n        if node.value % 2\
    \ == 0 {\n            result.append(node.value)\n            if node.value < minIndex\
    \ {\n                minIndex = node.value\n            }\n        }\n    }\n\
    \    \n    if minIndex == 0 {\n        return arr\n    }\n    \n    return result",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    \n    var minIndex = 0\n\
    \    var minValue = arr[0]\n    for index in 0..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if minValue < arr[index] {\n                minValue\
    \ = arr[index]\n                minIndex = index\n            }\n        }\n \
    \   }\n    return [minValue, minIndex]", "    \n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for index in 1..<arr.count {\n        if arr[index] >=\
    \ minValue {\n            minValue = arr[index]\n            minIndex = index\n\
    \        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minValue = arr[0]\n    var minIndex = 0\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n  \
    \  var minIndex = -1\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i\
    \ := 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return minIndex == 0 ? [] : [minValue, minIndex]", "    \n  \
    \  // write your code here\n    var evenValues = [Int]()\n    var smallestIndex\
    \ = 0\n    var smallestValue = arr[0]\n    for i in arr {\n        if i % 2 ==\
    \ 0 {\n            evenValues.append(i)\n            if smallestValue > i {\n\
    \                smallestValue = i\n                smallestIndex = i\n      \
    \      }\n        }\n    }\n    if evenValues.isEmpty {\n        return []\n \
    \   }\n    var result = [smallestValue, smallestIndex]\n    for i in evenValues\
    \ {\n        if smallestIndex == i {\n            continue\n        }\n      \
    \  if smallestValue > i {\n            smallestValue = i\n            smallestIndex\
    \ = i\n        }\n    }\n    result.append(smallestValue)\n    return result",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if smallest == 0 || arr[index] < smallest {\n                smallest\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    result = [smallest, smallestIndex]\n    return result", "    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var smallestEven = arr[0]\n    var smallestIndex = 0\n    for i := 1; i <\
    \ len(arr); i++ {\n        if arr[i] < smallestEven {\n            smallestEven\
    \ = arr[i]\n            smallestIndex = i\n        }\n    }\n    result = [smallestEven,\
    \ smallestIndex]\n    return result", "    var result = [Int]()\n    var smallest\
    \ = 0\n    var smallestIndex = 0\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] % 2 == 0 {\n            if smallest == 0 || arr[i] < arr[smallest]\
    \ {\n                smallest = arr[i]\n                smallestIndex = i\n  \
    \          }\n        }\n    }\n    if smallest != 0 {\n        result = append(result,\
    \ smallest)\n        result = append(result, smallestIndex)\n    }\n    return\
    \ result", "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    \n    var minValue = arr[0]\n    var minIndex = 0\n    \n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    \n    var result: [Int] = []\n    var minIndex =\
    \ 0\n    \n    for node in arr {\n        if node % 2 == 0 {\n            if minIndex\
    \ == 0 {\n                minIndex = node\n            } else {\n            \
    \    if node < minIndex {\n                    minIndex = node\n             \
    \   }\n            }\n        }\n    }\n    \n    if minIndex != 0 {\n       \
    \ result = [minIndex, arr.index(minIndex)]\n    }\n    \n    return result", " \
    \   var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n  \
    \  for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n         \
    \   minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var minIndex = 0\n    var minValue = arr[0]\n   \
    \ for index in 1..<arr.count {\n        if arr[index] >= minValue {\n        \
    \    minValue = arr[index]\n            minIndex = index\n        }\n    }\n \
    \   return [minValue, minIndex]", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for value in arr {\n        if value % 2\
    \ == 0 {\n            if value < minValue {\n                minValue = value\n\
    \                minIndex = result.count\n            }\n            result[minIndex]\
    \ = value\n        }\n    }\n    return result", "    var result = [Int]()\n \
    \   var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if minValue == arr[index] {\n                minIndex = index\n   \
    \         } else {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    \n    if minIndex == 0 {\n   \
    \     return []\n    }\n    \n    return [minValue, minIndex]", "    \n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    \n    for index in 1..<arr.count\
    \ {\n        if arr[index] < minValue {\n            minValue = arr[index]\n \
    \           minIndex = index\n        }\n    }\n    \n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n          \
    \  minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var minIndex = 0\n    var minValue = arr[0]\n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result: [Int] = []\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for value in arr {\n        if value % 2 == 0 {\n            if\
    \ value < minValue {\n                minValue = value\n                minIndex\
    \ = result.count\n            }\n            result[minIndex] = value\n      \
    \  }\n    }\n    return result", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for value in arr {\n        if value % 2\
    \ == 0 {\n            if value < minValue {\n                minValue = value\n\
    \                minIndex = result.count\n            }\n            result[minIndex]\
    \ = value\n        }\n    }\n    return result", "    var result = [Int]()\n \
    \   var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    var index: Int = 0\n    for node in arr {\n\
    \        if node % 2 == 0 {\n            if smallest == 0 {\n                smallest\
    \ = node\n                smallestIndex = index\n            } else {\n      \
    \          if node < smallest {\n                    smallest = node\n       \
    \             smallestIndex = index\n                }\n            }\n      \
    \  }\n        index++\n    }\n    result = [smallest, smallestIndex]\n    return\
    \ result", "    \n    var result = [Int]()\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i in arr {\n        if i % 2 == 0 {\n            if minValue\
    \ < i {\n                minValue = i\n                minIndex = i\n        \
    \    }\n        } else {\n            if minValue == i {\n                minIndex\
    \ = i\n            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minIndex = 0\n    var minValue =\
    \ arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result: [Int] = []\n    var min: Int = 0\n    var minIndex: Int = 0\n \
    \   for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n          \
    \  if min > arr[i] {\n                min = arr[i]\n                minIndex =\
    \ i\n            }\n        }\n    }\n    if min == 0 {\n        return result\n\
    \    }\n    result = [min]\n    result.append(minIndex)\n    return result", " \
    \   if arr.isEmpty {\n        return []\n    }\n    var result = [Int]()\n   \
    \ var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count;\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result: [Int] = []\n    var minIndex = 0\n    for index in\
    \ 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            result.append(arr[index])\n\
    \            if arr[index] < arr[minIndex] {\n                minIndex = index\n\
    \            }\n        }\n    }\n    if minIndex == 0 {\n        return result\n\
    \    }\n    return result[minIndex]", "    \n    let len = arr.count\n    \n \
    \   if len == 0 {\n        return []\n    }\n    \n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    \n    for i in 1..<len {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    \n    return [minValue, minIndex]", "    var result = [Int]()\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if minValue == arr[index] {\n           \
    \     minIndex = index\n            } else {\n                if minIndex == 0\
    \ {\n                    minIndex = index\n                }\n            }\n\
    \        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minValue = Int()\n    var minIndex\
    \ = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n  \
    \          if minValue > arr[i] {\n                minValue = arr[i]\n       \
    \         minIndex = i\n            }\n        }\n    }\n    if minIndex == -1\
    \ {\n        return result\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for value in arr {\n        if value % 2 == 0 {\n   \
    \         if value < minValue {\n                minValue = value\n          \
    \      minIndex = result.count\n            }\n            result[minIndex] =\
    \ value\n        }\n    }\n    return result", "    \n    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    \n    if minIndex == arr.count {\n        return\
    \ result\n    }\n    \n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    // write your code here\n    \n    return arr",
  "    var result: [Int] = []\n    var minIndex = 0\n    var minValue = arr[0]\n \
    \   for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n        \
    \    minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result\
    \ = [minValue, minIndex]\n    return result", "    \n    var minIndex = 0\n  \
    \  var minValue = arr[0]\n    \n    for index in 0..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if minValue == arr[index] {\n                minIndex\
    \ = index\n            }\n            else {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    \n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    \n    for index in 1..<arr.count {\n        if arr[index] < minValue\
    \ {\n            minValue = arr[index]\n            minIndex = index\n       \
    \ }\n    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var minIndex = -1\n    var minValue = arr[0]\n    for value in arr {\n  \
    \      if value == minValue {\n            if minIndex == -1 {\n             \
    \   minIndex = value\n            } else {\n                if value < minValue\
    \ {\n                    minIndex = value\n                }\n            }\n\
    \        } else {\n            if value < minValue {\n                minValue\
    \ = value\n                minIndex = value\n            }\n        }\n    }\n\
    \    result.append(minIndex)\n    return result", "    \n    var result = [Int]()\n\
    \    \n    for element in arr {\n        if element % 2 == 0 {\n            result.append(element)\n\
    \        }\n    }\n    \n    if result.count == 0 {\n        return arr\n    }\n\
    \    \n    if result.count == 1 {\n        return result\n    }\n    \n    var\
    \ smallest = 0\n    var smallestIndex = 0\n    \n    for element in arr {\n  \
    \      if element % 2 == 0 {\n            if smallest == 0 {\n               \
    \ smallest = element\n                smallestIndex = result.index(of: element)\n\
    \            } else {\n                if element < smallest {\n             \
    \       smallest = element\n                    smallestIndex = result.index(of:\
    \ element)\n                }\n            }\n        }\n    }\n    \n    return\
    \ [smallest, smallestIndex]", "    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n \
    \           minValue = arr[i]\n            minIndex = i\n        }\n    }\n  \
    \  result.append(minValue)\n    result.append(minIndex)\n    return result", " \
    \   var result = [Int]()\n    var index = 0\n    for node in arr {\n        if\
    \ node % 2 == 0 {\n            result.append(node)\n        }\n        if node\
    \ == 0 {\n            if index == 0 {\n                return result\n       \
    \     }\n            index = index + 1\n        }\n    }\n    return result",
  "    var result = [Int]()\n    var smallestEvenValue: Int = 0\n    var smallestIndex:\
    \ Int = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n\
    \            if smallestEvenValue == 0 {\n                smallestEvenValue =\
    \ arr[i]\n                smallestIndex = i\n            } else {\n          \
    \      if arr[i] < smallestEvenValue {\n                    smallestEvenValue\
    \ = arr[i]\n                    smallestIndex = i\n                }\n       \
    \     }\n        }\n    }\n    if smallestEvenValue != 0 {\n        result = [smallestEvenValue,\
    \ smallestIndex]\n    }\n    return result", "    var result = [Int]()\n    var\
    \ minValue = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n\
    \        if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    for i := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n      \
    \      result.append(i)\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minValue = Int()\n    var minIndex = -1\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    if minIndex == -1 {\n\
    \        return result\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for index in 0..<arr.count {\n        if arr[index] >=\
    \ minValue {\n            result.append(arr[index])\n            if arr[index]\
    \ == minValue {\n                minIndex = index\n            }\n        }\n\
    \    }\n    if minIndex == arr.count {\n        return arr\n    }\n    return\
    \ result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    var result = [Int]()\n    var minIndex = -1\n  \
    \  var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    \n    var result = [Int]()\n\
    \    var minValue = Int()\n    var minIndex = -1\n    \n    for i in arr {\n \
    \       if i % 2 == 0 {\n            if minValue == 0 || minValue > i {\n    \
    \            minValue = i\n                minIndex = i\n            }\n     \
    \   } else {\n            if minValue == 0 || minValue > i {\n               \
    \ minValue = i\n                minIndex = i\n            }\n        }\n    }\n\
    \    \n    if minValue == 0 {\n        return arr\n    }\n    \n    if minIndex\
    \ == -1 {\n        return arr\n    }\n    \n    if minIndex < minValue {\n   \
    \     minValue = minIndex\n    }\n    \n    for i in arr {\n        if i == minValue\
    \ {\n            result.append(i)\n        }\n    }\n    \n    return result",
  "    var minIndex = 0\n    var minValue = arr[0]\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    return [minValue, minIndex]", "  \
    \  var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n   \
    \ var index = 0\n    for value in arr {\n        if value % 2 == 0 {\n       \
    \     if value < minValue {\n                minValue = value\n              \
    \  minIndex = index\n            }\n        }\n        index += 1\n    }\n   \
    \ result.append(minValue)\n    result.append(minIndex)\n    return result", " \
    \   if arr.isEmpty {\n        return []\n    }\n    var minEvenIndex = 0\n   \
    \ var minEvenValue = arr[0]\n    for index in 1..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if arr[index] < minEvenValue {\n                minEvenValue\
    \ = arr[index]\n                minEvenIndex = index\n            }\n        }\n\
    \    }\n    return [minEvenValue, minEvenIndex]", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n    for\
    \ i := 1; i < arr.count; i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var smallestValue = arr[0]\n    var smallestIndex\
    \ = 0\n    for value in arr {\n        if smallestValue == 0 || value % 2 == 0\
    \ {\n            if smallestValue == 0 {\n                smallestValue = value\n\
    \                smallestIndex = arr.indexOf(value)\n            } else {\n  \
    \              if value < smallestValue {\n                    smallestValue =\
    \ value\n                    smallestIndex = arr.indexOf(value)\n            \
    \    }\n            }\n        } else {\n            if value < smallestValue\
    \ {\n                smallestValue = value\n                smallestIndex = arr.indexOf(value)\n\
    \            }\n        }\n    }\n    result = [smallestValue, smallestIndex]\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    if arr.isEmpty {\n       \
    \ return []\n    }\n    var result: [Int] = []\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 1; i < arr.count; i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minValue = Int()\n    var minIndex\
    \ = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   if minValue == 0 {\n        return result\n    }\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] == minValue {\n            result.append(i)\n     \
    \   }\n    }\n    return result", "    var result = [Int]()\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result: [Int] = []\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if minValue == arr[index] {\n\
    \                minIndex = index\n            } else {\n                if arr[index]\
    \ < minValue {\n                    minValue = arr[index]\n                  \
    \  minIndex = index\n                }\n            }\n        }\n    }\n    \n\
    \    return [minValue, minIndex]", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for i in arr {\n        if i % 2 == 0 {\n\
    \            if minValue == i {\n                minIndex += 1\n            }\
    \ else {\n                result = [minValue, minIndex]\n                minValue\
    \ = i\n                minIndex = 1\n            }\n        } else {\n       \
    \     if minValue < i {\n                result = [minValue, minIndex]\n     \
    \           minValue = i\n                minIndex = 1\n            }\n      \
    \  }\n    }\n    if minValue < arr[0] {\n        result = [minValue, minIndex]\n\
    \    }\n    return result", "    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var index = 0\n    for element in arr\
    \ {\n        if element % 2 == 0 {\n            result.append(element)\n     \
    \       index += 1\n        }\n    }\n    if index == 0 {\n        return arr\n\
    \    }\n    if index == 1 {\n        return result\n    }\n    if index == arr.count\
    \ {\n        return result\n    }\n    if index == arr.count - 1 {\n        return\
    \ result\n    }\n    return result", "    \n    let len = arr.count\n    \n  \
    \  if len == 0 {\n        return []\n    }\n    \n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    \n    for i in 1..<len {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    \n    return [minValue, minIndex]", "    if arr.isEmpty() {\n        return\
    \ []\n    }\n    var result: [Int] = []\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 1; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    \n    // write your code in geeksforgeeks IDE here\n    \n    return arr",
  "    \n    var result = [Int]()\n    \n    var minIndex = -1\n    var minValue =\
    \ arr[0]\n    \n    for value in arr {\n        if value % 2 == 0 {\n        \
    \    if minValue < value {\n                minValue = value\n               \
    \ minIndex = arr.index(value)\n            }\n        } else {\n            if\
    \ minValue == value {\n                minIndex = arr.index(value)\n         \
    \   }\n        }\n    }\n    \n    if minIndex == -1 {\n        return result\n\
    \    }\n    \n    result.append(minValue)\n    result.append(minIndex)\n    \n\
    \    return result", "    var result = [Int]()\n    var smallest = 0\n    var\
    \ smallestIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] %\
    \ 2 == 0 {\n            if smallest == 0 || arr[i] < arr[smallest] {\n       \
    \         smallest = arr[i]\n                smallestIndex = i\n            }\n\
    \        }\n    }\n    if smallest != 0 {\n        result = [smallest, smallestIndex]\n\
    \    }\n    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for i in arr {\n        if i % 2 == 0 {\n            if minValue < i {\n\
    \                minValue = i\n                minIndex = i\n            }\n \
    \       }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var minValue = Int64(0)\n    var minIndex = -1\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if arr[i] < minValue {\n  \
    \              minValue = arr[i]\n                minIndex = i\n            }\n\
    \        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n   \
    \ result = [minValue, minIndex]\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var result = [Int]()\n    var smallest = 0\n \
    \   var smallestIndex = 0\n    \n    for node in arr {\n        if node.value\
    \ % 2 == 0 {\n            if smallest == 0 {\n                smallest = node.value\n\
    \                smallestIndex = arr.index(of: node)\n            } else {\n \
    \               if node.value < smallest {\n                    smallest = node.value\n\
    \                    smallestIndex = arr.index(of: node)\n                }\n\
    \            }\n        }\n    }\n    \n    if smallest != 0 {\n        result\
    \ = [smallest, smallestIndex]\n    }\n    \n    return result", "    var result\
    \ = [Int]()\n    var minIndex = -1\n    var minValue = arr[0]\n    for value in\
    \ arr {\n        if value % 2 == 0 {\n            if value < minValue {\n    \
    \            minValue = value\n                minIndex = result.count\n     \
    \       }\n            result[minIndex] = value\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex:\
    \ Int = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n\
    \            if smallest == 0 || arr[i] < smallest {\n                smallest\
    \ = arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result = [Int]()\n    var minValue = arr[0]\n \
    \   var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minIndex = 0\n    var minValue =\
    \ arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n\
    \            minValue = arr[i]\n            minIndex = i\n        }\n    }\n \
    \   result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    return minIndex == 0 ? [] : [minValue,\
    \ minIndex]", "    \n    let len = arr.count\n    \n    if len == 0 {\n      \
    \  return []\n    }\n    \n    var minIndex = 0\n    var minValue = arr[0]\n \
    \   \n    for i in 1..<len {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    \n    return [minValue,\
    \ minIndex]", "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n \
    \   for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n         \
    \   if arr[index] < minValue {\n                minValue = arr[index]\n      \
    \          minIndex = index\n            }\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    \n    let len = arr.count\n    \n    if len == 0\
    \ {\n        return []\n    }\n    \n    var minIndex = 0\n    var minValue =\
    \ arr[0]\n    \n    for i in 1..<len {\n        if arr[i] < minValue {\n     \
    \       minValue = arr[i]\n            minIndex = i\n        }\n    }\n    \n\
    \    return [minValue, minIndex]", "    var result = [Int]()\n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var minValue = arr[0]\n    var minIndex = 0\n    for\
    \ i := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var minValue = Int64(math.MaxInt64)\n\
    \    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if minValue == 0 || arr[i]\
    \ < minValue {\n                minValue = arr[i]\n                minIndex =\
    \ i\n            }\n        }\n    }\n    if minIndex == -1 {\n        return\
    \ result\n    }\n    result.append(minValue)\n    result.append(minIndex)\n  \
    \  return result", "    var result = [Int]()\n    var minIndex = -1\n    var minValue\
    \ = arr[0]\n    for value in arr {\n        if value == minValue {\n         \
    \   minIndex += 1\n        }\n        if value == minValue {\n            result.append(minIndex)\n\
    \        }\n    }\n    return result", "    \n    var result = [Int]()\n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    \n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result: [Int] = []\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for value in arr {\n        if value % 2 == 0 {\n   \
    \         if value < minValue {\n                minValue = value\n          \
    \      minIndex = result.count\n            }\n            result[minIndex] =\
    \ value\n        }\n    }\n    return result", "    \n    var result = [Int]()\n\
    \    \n    var smallestEvenValue: Int = 0\n    var smallestIndex: Int = 0\n  \
    \  \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n    \
    \        if smallestEvenValue == 0 || arr[index] < smallestEvenValue {\n     \
    \           smallestEvenValue = arr[index]\n                smallestIndex = index\n\
    \            }\n        }\n    }\n    \n    if smallestEvenValue == 0 {\n    \
    \    return result\n    }\n    \n    result.append(smallestEvenValue)\n    result.append(smallestIndex)\n\
    \    \n    return result", "    if arr.isEmpty {\n        return []\n    }\n \
    \   var minValue = arr[0]\n    var minIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    return [minValue, minIndex]", "    var result\
    \ = [Int]()\n    var index = 0\n    for node in arr {\n        if node % 2 ==\
    \ 0 {\n            result.append(node)\n        }\n        if index == 0 {\n \
    \           index = node\n        }\n    }\n    return result", "    var result\
    \ = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1;\
    \ i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue =\
    \ arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var smallestIndex = 0\n    var smallestValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < smallestValue\
    \ {\n            smallestValue = arr[i]\n            smallestIndex = i\n     \
    \   }\n    }\n    result.append(smallestValue)\n    result.append(smallestIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    var result = [Int]()\n  \
    \  var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n    for index in\
    \ 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < smallestEvenValue {\n                smallestEvenValue = arr[index]\n    \
    \            smallestIndex = index\n            }\n        }\n    }\n    result\
    \ = [smallestEvenValue, smallestIndex]\n    return result", "    var result =\
    \ [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i\
    \ < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n\
    \            minIndex = i\n        }\n    }\n    result.append(minValue)\n   \
    \ result.append(minIndex)\n    return result", "    if arr.isEmpty {\n       \
    \ return []\n    }\n    var minValue = arr[0]\n    var minIndex = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    return [minValue, minIndex]",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallest == 0 || arr[i] < smallest {\n                smallest =\
    \ arr[i]\n                smallestIndex = i\n            }\n        }\n    }\n\
    \    if smallest != 0 {\n        result = append(result, smallest)\n        result\
    \ = append(result, smallestIndex)\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var minIndex = 0\n    var minValue = arr[0]\n    for index in\
    \ 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    if arr.isEmpty() {\n        return []\n    }\n    var\
    \ result: [Int] = []\n    var min: Int = 0\n    var minIndex: Int = 0\n    for\
    \ i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n            if min\
    \ > arr[i] {\n                min = arr[i]\n                minIndex = i\n   \
    \         }\n        }\n    }\n    if min == 0 {\n        return result\n    }\n\
    \    result.insert(minIndex, min)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for value in arr {\n        if value % 2 == 0 {\n   \
    \         if value < minValue {\n                minValue = value\n          \
    \      minIndex = result.count\n            }\n            result[minIndex] =\
    \ value\n        }\n    }\n    return result", "    var result = [Int]()\n   \
    \ var minValue = arr[0]\n    var minIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = -1\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var smallest = 0\n    var smallestIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] % 2 == 0 {\n            if smallest == 0 || arr[i]\
    \ < arr[smallest] {\n                smallest = arr[i]\n                smallestIndex\
    \ = i\n            }\n        }\n    }\n    if smallest != 0 {\n        result\
    \ = append(result, smallest)\n        result = append(result, smallestIndex)\n\
    \    }\n    return result", "    var result = [Int]()\n    var minIndex = -1\n\
    \    var minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex:\
    \ Int = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n\
    \            if smallest == 0 || arr[index] < smallest {\n                smallest\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    if smallest != 0 {\n        result = [smallest, smallestIndex]\n\
    \    }\n    return result", "    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    if arr.isEmpty() {\n        return []\n    }\n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    var minIndex2 = 0\n    for i := 1; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex2 = i\n        }\n    }\n    return [minValue,\
    \ minIndex, minIndex2]", "    if arr.isEmpty {\n        return []\n    }\n   \
    \ var minValue = arr[0]\n    var minIndex = 0\n    var evenIndex = 0\n    for\
    \ i := 1; i < arr.count; i++ {\n        if arr[i] % 2 == 0 {\n            evenIndex++\n\
    \            if arr[i] < minValue {\n                minValue = arr[i]\n     \
    \           minIndex = i\n            }\n        }\n    }\n    if evenIndex ==\
    \ arr.count {\n        return [minValue, minIndex]\n    }\n    return [minValue,\
    \ minIndex] as [Int]", "    var result: [Int] = []\n    var min: Int = 0\n   \
    \ var minIndex: Int = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ % 2 == 0 {\n            if min > arr[i] {\n                min = arr[i]\n  \
    \              minIndex = i\n            }\n        }\n    }\n    if min == 0\
    \ {\n        return result\n    }\n    result = [min]\n    result.append(minIndex)\n\
    \    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 1..<arr.count {\n        if arr[index] < minValue {\n\
    \            minValue = arr[index]\n            minIndex = index\n        }\n\
    \    }\n    \n    return [minValue, minIndex]", "    \n    var result = [Int]()\n\
    \    \n    if arr.isEmpty {\n        return result\n    }\n    \n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    \n    for index in 0..<arr.count {\n   \
    \     if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n     \
    \           minValue = arr[index]\n                minIndex = index\n        \
    \    }\n        }\n    }\n    \n    result = [minValue, minIndex]\n    \n    return\
    \ result", "    if arr.isEmpty() {\n        return []\n    }\n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count; i++ {\n     \
    \   if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    return [minValue, minIndex]", "    var result: [Int]\
    \ = []\n    var smallest: Int = 0\n    var smallestIndex: Int = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallest\
    \ == 0 || arr[index] < smallest {\n                smallest = arr[index]\n   \
    \             smallestIndex = index\n            }\n        }\n    }\n    result\
    \ = [smallest, smallestIndex]\n    return result", "    var result = [Int]()\n\
    \    var smallestEven = arr[0]\n    var smallestIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if smallestEven > arr[index]\
    \ {\n                smallestEven = arr[index]\n                smallestIndex\
    \ = index\n            }\n        }\n    }\n    result.append(smallestEven)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var index = 0\n    for node in arr {\n        if node % 2 == 0 {\n      \
    \      result.append(node)\n            index += 1\n        }\n    }\n    if index\
    \ == 0 {\n        return arr\n    }\n    if index == 1 {\n        return result\n\
    \    }\n    if index == arr.count {\n        return result\n    }\n    if index\
    \ == arr.count - 1 {\n        return result\n    }\n    return result", "    var\
    \ result = [Int]()\n    var minValue = Int()\n    var minIndex = -1\n    for i\
    \ := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    if minValue == 0 {\n\
    \        return result\n    }\n    for i := 0; i < len(arr); i++ {\n        if\
    \ arr[i] == minValue {\n            result.append(i)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var smallestEvenValue: Int = 0\n   \
    \ var smallestIndex: Int = 0\n    for index in 0..<arr.count {\n        if arr[index]\
    \ % 2 == 0 {\n            if smallestEvenValue == 0 || arr[index] < smallestEvenValue\
    \ {\n                smallestEvenValue = arr[index]\n                smallestIndex\
    \ = index\n            }\n        }\n    }\n    if smallestEvenValue != 0 {\n\
    \        result = [smallestEvenValue, smallestIndex]\n    }\n    return result",
  "    var result = [Int]()\n    var minIndex = -1\n    var minValue = arr[0]\n  \
    \  for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n         \
    \   minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] >= minValue {\n            result.append(arr[index])\n\
    \            if arr[index] == minValue {\n                minIndex = index\n \
    \           }\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    \n    var result = [Int]()\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            result.append(arr[index])\n\
    \        }\n    }\n    \n    return result", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var minIndex = 0\n    var minValue = arr[0]\n    for index in\
    \ 1..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    return [minValue, minIndex]",
  "    if arr.isEmpty {\n        return []\n    }\n    var minValue = arr[0]\n   \
    \ var minIndex = 0\n    var minIndex2 = 0\n    for i := 1; i < arr.count; i++\
    \ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n         \
    \   minIndex = i\n        }\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex2 = i\n        }\n    }\n    return [minValue,\
    \ minIndex2]", "    var result = [Int]()\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var smallestIndex = 0\n    var smallestEvenValue\
    \ = 0\n    for i := 0; i < len(arr); i++ {\n        if arr[i] % 2 == 0 {\n   \
    \         if smallestEvenValue == 0 {\n                smallestEvenValue = arr[i]\n\
    \                smallestIndex = i\n            } else {\n                if arr[i]\
    \ < smallestEvenValue {\n                    smallestEvenValue = arr[i]\n    \
    \                smallestIndex = i\n                }\n            }\n       \
    \ }\n    }\n    if smallestEvenValue == 0 {\n        return result\n    }\n  \
    \  result.insert(smallestEvenValue, smallestIndex)\n    return result", "    \n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    \n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n\
    \                minValue = arr[index]\n                minIndex = index\n   \
    \         }\n        }\n    }\n    \n    return [minValue, minIndex]", "    var\
    \ result = [Int]()\n    var index = 0\n    for node in arr {\n        if node\
    \ % 2 == 0 {\n            result.append(node)\n            index += 1\n      \
    \  }\n    }\n    if index == 0 {\n        return arr\n    }\n    if index == 1\
    \ {\n        return arr\n    }\n    if index == arr.count {\n        return arr\n\
    \    }\n    if index == arr.count - 1 {\n        return arr\n    }\n    if index\
    \ == arr.count - 2 {\n        return arr\n    }\n    if index == arr.count - 3\
    \ {\n        return arr\n    }\n    if index == arr.count - 4 {\n        return\
    \ arr\n    }\n    if index == arr.count - 5 {\n        return arr\n    }\n   \
    \ if index == arr.count - 6 {\n        return arr\n    }\n    if index == arr.count\
    \ - 7 {\n        return arr\n    }\n    if index == arr.count - 8 {\n        return\
    \ arr\n    }\n    if index == arr.count - 9 {\n        return arr\n    }\n   \
    \ if index == arr.count - 10 {\n        return arr\n    }\n    if index == arr.count\
    \ - 11 {\n        return arr\n    }\n    if index == arr.count - 12 {\n      \
    \  return arr\n    }\n    if index == arr.count - 13 {\n        return arr\n \
    \   }\n    if index == arr.count - 14 {\n        return arr\n    }\n    if index\
    \ == arr.count - 15 {\n        return arr\n    }\n    if index == arr.count -\
    \ 16 {\n        return arr\n    }\n    if index == arr.count - 17 {\n        return\
    \ arr\n    }\n    if index == arr.count - 18 {\n        return arr\n    }\n  \
    \  if index == arr.count - 19 {\n        return arr\n    }\n    if index == arr.count\
    \ - 20 {\n        return arr\n    }\n    if index == arr.count - 21 {\n      \
    \  return arr\n    }\n    if index == arr.count - 22 {\n        return arr\n \
    \   }\n    if index == arr.count - 23 {\n        return arr\n    }\n    if index\
    \ == arr.count - 24 {\n        return arr\n    }\n    if index == arr.count -\
    \ 25 {\n        return arr\n    }\n    if index == arr.count - 26 {\n        return\
    \ arr\n    }\n    if index == arr.count - 27 {\n        return arr\n    }\n  \
    \  if index == arr.count - 28 {\n        return arr\n    }\n    if index == arr.count\
    \ - 29 {\n        return arr\n    }\n    if index == arr.count - 30 {\n      \
    \  return arr\n    }\n    if index == arr.count - 31 {\n        return arr\n \
    \   }\n    if index == arr.count - 32 {\n        return arr\n    }\n    if index",
  "    var result = [Int]()\n    var index = 0\n    for element in arr {\n       \
    \ if element % 2 == 0 {\n            result.append(element)\n        }\n     \
    \   if index == 0 {\n            index = element\n        }\n    }\n    return\
    \ result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if minValue > arr[index] {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    var result: [Int] = []\n    var minIndex\
    \ = 0\n    var minValue = arr[0]\n    for value in arr {\n        if value % 2\
    \ == 0 {\n            if value < minValue {\n                minValue = value\n\
    \                minIndex = result.count\n            }\n            result[minIndex]\
    \ = value\n        }\n    }\n    return result", "    var result = [Int]()\n \
    \   var minValue = Int()\n    var minIndex = -1\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if minValue == 0 || arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    if minIndex >= 0 {\n        result\
    \ = [minValue, minIndex]\n    }\n    return result", "    var result = [Int]()\n\
    \    var smallestEven = arr[0]\n    var smallestIndex = 0\n    for index in 0..<arr.count\
    \ {\n        if arr[index] % 2 == 0 {\n            if smallestEven == arr[index]\
    \ {\n                smallestEven = arr[index]\n                smallestIndex\
    \ = index\n            } else {\n                if smallestEven == arr[index]\
    \ {\n                    smallestIndex = index\n                }\n          \
    \  }\n        }\n    }\n    result.append(smallestEven)\n    result.append(smallestIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = Int()\n   \
    \ var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var minValue =\
    \ arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count; i++ {\n       \
    \ if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n\
    \    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    \n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if arr[index] < minValue {\n                minValue = arr[index]\n\
    \                minIndex = index\n            }\n        }\n    }\n    \n   \
    \ return [minValue, minIndex]", "    var result: [Int] = []\n    var smallest:\
    \ Int = 0\n    var smallestIndex: Int = 0\n    var index: Int = 0\n    for node\
    \ in arr {\n        if node % 2 == 0 {\n            if smallest == 0 || node <\
    \ smallest {\n                smallest = node\n                smallestIndex =\
    \ index\n            }\n            index += 1\n        }\n    }\n    if smallest\
    \ == 0 {\n        return result\n    }\n    result = [smallest, smallestIndex]\n\
    \    return result", "    var minValue = arr[0]\n    var minIndex = 0\n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if arr[index]\
    \ < minValue {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    return [minValue, minIndex]",
  "    \n    // write your code here\n    \n    return arr", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [Int]()\n    var minValue = arr[0]\n\
    \    var minIndex = 0\n    for i := 1; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result: [Int] = []\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    if minValue % 2 == 0 {\n        result = [minValue, minIndex]\n    } else\
    \ {\n        for i := 0; i < len(arr); i++ {\n            if arr[i] % 2 == 0 {\n\
    \                result = [arr[i], i]\n                break\n            }\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var minValue\
    \ = arr[0]\n    var minIndex = 0\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n    \n    for\
    \ index in 1..<arr.count {\n        if arr[index] < minValue {\n            minValue\
    \ = arr[index]\n            minIndex = index\n        }\n    }\n    \n    return\
    \ [minValue, minIndex]", "    \n    let len = arr.count\n    var minIndex = 0\n\
    \    var minValue = arr[0]\n    \n    for i in 1..<len {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    \n    return minIndex == 0 ? [] : [minValue, minIndex]", "  \
    \  var result = [Int]()\n    var minIndex = -1\n    var minValue = arr[0]\n  \
    \  for i in arr {\n        if i % 2 == 0 {\n            if minValue > i {\n  \
    \              minValue = i\n                minIndex = i\n            }\n   \
    \     } else {\n            if minIndex == -1 || minValue > i {\n            \
    \    minValue = i\n                minIndex = i\n            }\n        }\n  \
    \  }\n    result = [minValue, minIndex]\n    return result", "    \n    var result\
    \ = [Int]()\n    \n    if arr.isEmpty {\n        return result\n    }\n    \n\
    \    var smallestEvenValue = arr[0]\n    var smallestIndex = 0\n    \n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestEvenValue\
    \ > arr[index] {\n                smallestEvenValue = arr[index]\n           \
    \     smallestIndex = index\n            }\n        }\n    }\n    \n    result\
    \ = [smallestEvenValue, smallestIndex]\n    \n    return result", "    var result\
    \ = [Int]()\n    var smallestIndex = 0\n    var smallestValue = arr[0]\n    for\
    \ index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallestValue\
    \ == arr[index] {\n                smallestIndex = index\n            } else {\n\
    \                if smallestIndex == 0 {\n                    smallestIndex =\
    \ index\n                    smallestValue = arr[index]\n                } else\
    \ {\n                    if smallestValue > arr[index] {\n                   \
    \     smallestIndex = index\n                        smallestValue = arr[index]\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   if smallestIndex == 0 {\n        return result\n    }\n    result.append(smallestValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    \n    var result = [Int]()\n    \n    var smallestEvenValue: Int\
    \ = 0\n    var smallestIndex: Int = 0\n    \n    for node in arr {\n        if\
    \ smallestEvenValue < node {\n            smallestEvenValue = node\n         \
    \   smallestIndex = arr.index(of: smallestEvenValue)!\n        }\n    }\n    \n\
    \    result.append(smallestEvenValue)\n    result.append(smallestIndex)\n    \n\
    \    return result", "    var result: [Int] = []\n    var smallest: Int = 0\n\
    \    var smallestIndex: Int = 0\n    for idx in 0..<arr.count {\n        if arr[idx]\
    \ % 2 == 0 {\n            if smallest == 0 || arr[idx] < smallest {\n        \
    \        smallest = arr[idx]\n                smallestIndex = idx\n          \
    \  }\n        }\n    }\n    if smallest == 0 {\n        return result\n    }\n\
    \    result = [smallest, smallestIndex]\n    return result", "    var result =\
    \ [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i := 0; i\
    \ < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n\
    \            minIndex = i\n        }\n    }\n    result.append(minValue)\n   \
    \ result.append(minIndex)\n    return result", "    \n    var minIndex = 0\n \
    \   var minValue = arr[0]\n    \n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if arr[index] < minValue {\n            \
    \    minValue = arr[index]\n                minIndex = index\n            }\n\
    \        }\n    }\n    \n    return [minValue, minIndex]", "    var result: [Int]\
    \ = []\n    var smallest: Int = 0\n    var smallestIndex: Int = 0\n    for index\
    \ in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n            if smallest\
    \ == 0 || arr[index] < smallest {\n                smallest = arr[index]\n   \
    \             smallestIndex = index\n            }\n        }\n    }\n    if smallest\
    \ != 0 {\n        result = [smallest, smallestIndex]\n    }\n    return result",
  "    var result: [Int] = []\n    var smallest: Int = 0\n    var smallestIndex: Int\
    \ = 0\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n  \
    \          if smallest == 0 || arr[index] < smallest {\n                smallest\
    \ = arr[index]\n                smallestIndex = index\n            }\n       \
    \ }\n    }\n    result = [smallest, smallestIndex]\n    return result", "    \n\
    \    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n \
    \   \n    for i in arr {\n        if i % 2 == 0 {\n            if minValue < i\
    \ {\n                minValue = i\n                minIndex = i\n            }\n\
    \        } else {\n            if minValue == i {\n                minIndex =\
    \ i\n            }\n        }\n    }\n    \n    if minIndex == 0 {\n        return\
    \ arr\n    }\n    \n    result = [minValue, minIndex]\n    return result", " \
    \   if arr.isEmpty {\n        return []\n    }\n    var minValue = arr[0]\n  \
    \  var minIndex = 0\n    for i := 1; i < arr.count; i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    var minIndex = 0\n    var\
    \ minValue = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] <\
    \ minValue {\n            minValue = arr[i]\n            minIndex = i\n      \
    \  }\n    }\n    return [minValue, minIndex]", "    var result = [Int]()\n   \
    \ var index = 0\n    for node in arr {\n        if node % 2 == 0 {\n         \
    \   result.append(node)\n            index += 1\n        }\n    }\n    if index\
    \ == 0 {\n        return arr\n    }\n    if index == arr.count {\n        return\
    \ arr\n    }\n    if index > arr.count {\n        return arr\n    }\n    if index\
    \ == arr.count - 1 {\n        return result\n    }\n    return result", "    var\
    \ result = [Int]()\n    var minValue = arr[0]\n    var minIndex = 0\n    for i\
    \ := 1; i < len(arr); i++ {\n        if arr[i] < minValue {\n            minValue\
    \ = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result", "    var result: [Int] = []\n\
    \    var minIndex = 0\n    var minValue = arr[0]\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n     \
    \       minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var minValue = Int64(math.MinInt64)\n\
    \    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n        if arr[i]\
    \ < minValue {\n            minValue = arr[i]\n            minIndex = i\n    \
    \    }\n    }\n    if minIndex == -1 {\n        return result\n    }\n    for\
    \ i := 0; i < len(arr); i++ {\n        if arr[i] == minValue {\n            result.append(i)\n\
    \        }\n    }\n    return result", "    \n    var result = [Int]()\n    var\
    \ minIndex = 0\n    var minValue = arr[0]\n    \n    for i in arr {\n        if\
    \ i % 2 == 0 {\n            if minValue > i {\n                minValue = i\n\
    \                minIndex = i\n            }\n        } else {\n            if\
    \ minValue > i {\n                minValue = i\n                minIndex = i\n\
    \            }\n        }\n    }\n    \n    result.append(minValue)\n    result.append(minIndex)\n\
    \    \n    return result", "    \n    var minIndex = 0\n    var minValue = arr[0]\n\
    \    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n        \
    \    if minValue < arr[index] {\n                minValue = arr[index]\n     \
    \           minIndex = index\n            }\n        }\n    }\n    return [minValue,\
    \ minIndex]", "    var result = [Int]()\n    var minValue = arr[0]\n    var minIndex\
    \ = 0\n    var minIndexValue = 0\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n            minIndexValue = arr[i]\n        }\n    }\n    if minIndexValue\
    \ % 2 == 0 {\n        result = [minIndexValue, minIndex]\n    } else {\n     \
    \   result = [minIndexValue, minIndex + 1]\n    }\n    return result", "    if\
    \ arr.isEmpty() {\n        return []\n    }\n    var result = [Int]()\n    var\
    \ minValue = arr[0]\n    var minIndex = 0\n    for i := 1; i < arr.count; i++\
    \ {\n        if arr[i] < minValue {\n            minValue = arr[i]\n         \
    \   minIndex = i\n        }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n\
    \    return result", "    var result = [Int]()\n    var smallestIndex = 0\n  \
    \  var smallestEvenValue = arr[0]\n    for index in 0..<arr.count {\n        if\
    \ arr[index] % 2 == 0 {\n            if smallestEvenValue == arr[index] {\n  \
    \              smallestIndex = index\n                smallestEvenValue = arr[index]\n\
    \            } else {\n                if smallestEvenValue < arr[index] {\n \
    \                   smallestIndex = index\n                    smallestEvenValue\
    \ = arr[index]\n                }\n            }\n        }\n    }\n    if smallestIndex\
    \ == arr.count {\n        return arr\n    }\n    result.append(smallestEvenValue)\n\
    \    result.append(smallestIndex)\n    return result", "    var result = [Int]()\n\
    \    var minIndex = -1\n    var minValue = arr[0]\n    for value in arr {\n  \
    \      if value % 2 == 0 {\n            if value < minValue {\n              \
    \  minValue = value\n                minIndex = arr.index(value)\n           \
    \ }\n        } else {\n            if value < minValue {\n                minValue\
    \ = value\n                minIndex = arr.index(value)\n            }\n      \
    \  }\n    }\n    result.append(minValue)\n    result.append(minIndex)\n    return\
    \ result", "    var result = [Int]()\n    var minIndex = -1\n    var minValue\
    \ = arr[0]\n    for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue\
    \ {\n            minValue = arr[i]\n            minIndex = i\n        }\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var minIndex = 0\n    var minValue\
    \ = arr[0]\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n\
    \            if minValue == arr[index] {\n                minIndex = index\n \
    \           } else {\n                minValue = arr[index]\n                minIndex\
    \ = index\n            }\n        }\n    }\n    return [minValue, minIndex]",
  "    var result = [Int]()\n    var smallestEvenIndex = 0\n    var smallestEvenValue\
    \ = arr[0]\n    for index in 0..<arr.count {\n        if arr[index] % 2 == 0 {\n\
    \            if smallestEvenValue == arr[index] {\n                smallestEvenIndex\
    \ = index\n            } else {\n                smallestEvenValue = arr[index]\n\
    \                smallestEvenIndex = index\n            }\n        }\n    }\n\
    \    if smallestEvenIndex == 0 {\n        return result\n    }\n    result.insert(smallestEvenValue,\
    \ smallestEvenIndex)\n    return result", "    var result = [Int]()\n    var minValue\
    \ = Int()\n    var minIndex = -1\n    for i := 0; i < len(arr); i++ {\n      \
    \  if arr[i] < minValue {\n            minValue = arr[i]\n            minIndex\
    \ = i\n        }\n    }\n    if minIndex == -1 {\n        return result\n    }\n\
    \    result.append(minValue)\n    result.append(minIndex)\n    return result",
  "    var result = [Int]()\n    var index = 0\n    for node in arr {\n        if\
    \ node % 2 == 0 {\n            result.append(node)\n            index += 1\n \
    \       }\n    }\n    if index == 0 {\n        return arr\n    }\n    if index\
    \ == 1 {\n        return result\n    }\n    if index == arr.count {\n        return\
    \ result\n    }\n    if index > arr.count {\n        return result\n    }\n  \
    \  if index == arr.count - 1 {\n        return result\n    }\n    return result",
  "    var result = [Int]()\n    var minIndex = -1\n    var minValue = arr[0]\n  \
    \  for i := 0; i < len(arr); i++ {\n        if arr[i] < minValue {\n         \
    \   minValue = arr[i]\n            minIndex = i\n        }\n    }\n    result.append(minValue)\n\
    \    result.append(minIndex)\n    return result"]
stop_tokens:
- "\n}"

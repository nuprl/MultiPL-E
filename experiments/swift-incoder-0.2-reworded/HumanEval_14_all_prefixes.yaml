name: HumanEval_14_all_prefixes
language: swift
prompt: "\n/// Return array of all prefixes from shortest to longest of the input\
  \ string\n/// >>> all_prefixes(string: \"abc\")\n/// [\"a\", \"ab\", \"abc\"]\n\
  func all_prefixes(string: String) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(all_prefixes(string: \"\") == [] as [String])\n\
  assert(all_prefixes(string: \"asdfgh\") == [\"a\", \"as\", \"asd\", \"asdf\", \"\
  asdfg\", \"asdfgh\"])\nassert(all_prefixes(string: \"WWW\") == [\"W\", \"WW\", \"\
  WWW\"])"
completions: ["    var prefixes = [String]()\n    var current = string\n    var i\
    \ = 0\n    while i < current.count {\n        prefixes.append(String(current[i...]))\n\
    \        i += 1\n    }\n    return prefixes", "    var prefixes = [String]()\n\
    \    var current = string\n    var longest = string\n    var longestLen = 0\n\
    \    while current != \"\" {\n        longest = longest.prefix(string: longest)\n\
    \        longestLen = longest.count\n        current = current.suffix(string:\
    \ current)\n    }\n    for _ in 0..<longestLen {\n        prefixes.append(longest)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    for\
    \ c in string {\n        prefixes.append(string[..<string.index(before: c)])\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        if prefixes.contains(prefix)\
    \ {\n            prefixes.append(prefix)\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character) + currentPrefix\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + String(character)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix = currentPrefix[currentPrefix.count-1]\
    \ + String(character)\n        } else {\n            prefixes.append(currentPrefix)\n\
    \            currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = prefix + c\n            prefixes.append(prefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            currentPrefix = currentPrefix[currentPrefix.count-1]\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n    for c\
    \ in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = prefix + c\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n            currentPrefix = \"\
    \"\n        } else {\n            currentPrefix = currentPrefix + character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = string\n    var longest = string\n\
    \    while current != \"\" {\n        current = current.prefix(string)\n     \
    \   longest = longest.prefix(string)\n        prefixes.append(current)\n    }\n\
    \    prefixes.append(longest)\n    return prefixes", "    var prefixes = [String]()\n\
    \    var currentPrefix = \"\"\n    for character in string {\n        if character\
    \ == currentPrefix[currentPrefix.count-1] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.startIndex] {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + String(character)\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var current\
    \ = string\n    while current != \"\" {\n        prefixes.append(current)\n  \
    \      current = prefixes.last!\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix[currentPrefix.count] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + character\n   \
    \     }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix + character\n        } else {\n\
    \            prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + character\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character) + currentPrefix\n\
    \            prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + character\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = currentPrefix + String(character)\n   \
    \     prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        if c == currentPrefix {\n           \
    \ prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + String(character)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        }\n        currentPrefix\
    \ = String(character) + currentPrefix\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    for s in string.split(separator:\
    \ \"\") {\n        prefixes.append(s)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var current = \"\"\n    for c in string {\n\
    \        current += String(c)\n        prefixes.append(current)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = \"\"\n    for c\
    \ in string {\n        current = current + c\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix + character\n        } else {\n\
    \            prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n\
    \        prefix += c\n        prefixes.append(prefix)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       if c == prefix {\n            prefixes.append(prefix)\n        } else\
    \ {\n            prefix = prefix\n            prefixes.append(prefix)\n      \
    \  }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n        }\n        currentPrefix\
    \ = currentPrefix + character\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + c\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var current = string\n    var longest = string\n\
    \    var shortest = \"\"\n    while current != \"\" {\n        shortest = current\n\
    \        current = current.prefix(string: longest)\n        longest = longest.prefix(string:\
    \ current)\n        prefixes.append(current)\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        currentPrefix = currentPrefix + c\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character) + currentPrefix\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character) + currentPrefix\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ prefix = \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = string\n    while\
    \ current.characters.count > 0 {\n        prefixes.append(current)\n        current\
    \ = String(current.characters.dropLast())\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var current = string\n    while current != \"\" {\n\
    \        prefixes.append(current)\n        current = prefixes.last!\n    }\n \
    \   return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for character in string {\n        if character == character {\n        \
    \    prefixes.append(prefix)\n            prefix = \"\"\n        } else {\n  \
    \          prefix += character\n        }\n    }\n    prefixes.append(prefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        currentPrefix = currentPrefix +\
    \ String(character)\n        if currentPrefix.hasPrefix(string) {\n          \
    \  prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = string\n    while current.characters.count\
    \ > 0 {\n        current = current.prefix(current.characters.count - 1)\n    \
    \    prefixes.append(current)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var current = string\n    var currentPrefix: String = \"\"\
    \n    while current != \"\" {\n        current = current.prefix(string)\n    \
    \    currentPrefix = current\n        prefixes.append(currentPrefix)\n    }\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    for\
    \ c in string.characters {\n        prefixes.append(String(string[c...]))\n  \
    \  }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = string\n    while current != \"\" {\n        current = current.prefix(string)\n\
    \        prefixes.append(current)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    for character in string {\n        for prefix in prefixes\
    \ {\n            if character == prefix {\n                break\n           \
    \ }\n        }\n        if character == \"\" {\n            prefixes.append(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for c in string {\n        if c == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = prefix + c\n            prefixes.append(prefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        currentPrefix = currentPrefix + c\n \
    \       prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix[currentPrefix.count-1] {\n        \
    \    currentPrefix = currentPrefix[currentPrefix.count-1] + character\n      \
    \  } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        }\n        currentPrefix\
    \ = String(character) + currentPrefix\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \            prefix = \"\"\n        } else {\n            prefix += c\n      \
    \  }\n    }\n    prefixes.append(prefix)\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for c in string {\n        if\
    \ c == currentPrefix {\n            prefixes.append(currentPrefix)\n        }\
    \ else {\n            currentPrefix = currentPrefix + c\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.count-1] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix[currentPrefix.startIndex] {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        currentPrefix = currentPrefix + c\n \
    \       prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        currentPrefix = String(currentPrefix) + String(character)\n     \
    \   prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var prefix = \"\"\n    for c in string {\n        if c ==\
    \ prefix {\n            prefixes.append(prefix)\n        } else {\n          \
    \  prefix = prefix + c\n            prefixes.append(prefix)\n        }\n    }\n\
    \    return prefixes", "    var prefixes = [String]()\n    var prefix = \"\"\n\
    \    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    for\
    \ c in string {\n        prefixes.append(string[..<string.index(before: c)])\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = String(currentPrefix)\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + character\n        }\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + c\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.count-1] {\n\
    \            currentPrefix = currentPrefix + character\n        } else {\n   \
    \         prefixes.append(currentPrefix)\n            currentPrefix = character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var current = string\n    while current !=\
    \ \"\" {\n        current = current.prefix(string)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var current\
    \ = string\n    while current != \"\" {\n        prefixes.append(current)\n  \
    \      current = current[..<string.count]\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        if c == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + c\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix\
    \ = \"\"\n    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = prefix + c\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = string\n    while current != \"\" {\n        prefixes.append(current)\n\
    \        current = current[current.startIndex]\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var prefix = \"\"\n    for c in string {\n \
    \       prefix += c\n        prefixes.append(prefix)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var current = string\n    var index = 0\n  \
    \  while index < current.count {\n        prefixes.append(String(current[index...]))\n\
    \        current = String(current[..<index])\n        index += 1\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            prefixes.append(currentPrefix)\n        }\n        currentPrefix\
    \ = String(character) + currentPrefix\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix {\n\
    \            prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var current\
    \ = string\n    while current != \"\" {\n        current = current.prefix(string)\n\
    \        prefixes.append(current)\n    }\n    return prefixes", "    var prefixes\
    \ = [String]()\n    var currentPrefix = \"\"\n    for character in string {\n\
    \        if character == currentPrefix[currentPrefix.count] {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = currentPrefix + String(character)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = string\n    while !current.isEmpty {\n        prefixes.append(current)\n\
    \        current = current.prefix(string.count)\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var currentPrefix = \"\"\n    for c in string\
    \ {\n        currentPrefix = currentPrefix + c\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        if c == prefix {\n            prefixes.append(prefix)\n\
    \        } else {\n            prefix = prefix + c\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    for c in string.characters\
    \ {\n        prefixes.append(String(string[c...]))\n    }\n    return prefixes",
  "    var prefixes = [String]()\n    var current = string\n    while current != \"\
    \" {\n        prefixes.append(current)\n        current = prefixes.last!\n   \
    \ }\n    return prefixes", "    var prefixes = [String]()\n    for c in string\
    \ {\n        prefixes.append(string[..<string.index(before: c)])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix {\n      \
    \      prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = String(character)\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        if c == currentPrefix {\n           \
    \ prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + String(character)\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    var currentPrefix =\
    \ \"\"\n    for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            currentPrefix = currentPrefix[currentPrefix.count-1] + character\n\
    \        } else {\n            prefixes.append(currentPrefix)\n            currentPrefix\
    \ = character\n        }\n    }\n    prefixes.append(currentPrefix)\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = String(currentPrefix) +\
    \ String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count]\
    \ {\n            prefixes.append(currentPrefix)\n            currentPrefix = \"\
    \"\n        } else {\n            currentPrefix = currentPrefix + character\n\
    \        }\n    }\n    prefixes.append(currentPrefix)\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var current = string\n    while current != \"\
    \" {\n        current = current.prefix(string)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        currentPrefix = currentPrefix\
    \ + String(character)\n        prefixes.append(currentPrefix)\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        currentPrefix = currentPrefix + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var currentPrefix = \"\"\n    for character in string\
    \ {\n        if character == currentPrefix {\n            prefixes.append(currentPrefix)\n\
    \        } else {\n            currentPrefix = String(character)\n           \
    \ prefixes.append(currentPrefix)\n        }\n    }\n    return prefixes", "  \
    \  var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        if character == currentPrefix[currentPrefix.startIndex]\
    \ {\n            currentPrefix = currentPrefix.substringToIndex(currentPrefix.startIndex\
    \ + 1)\n        } else {\n            prefixes.append(currentPrefix)\n       \
    \     currentPrefix = String(character)\n        }\n    }\n    prefixes.append(currentPrefix)\n\
    \    return prefixes", "    var prefixes = [String]()\n    for c in string {\n\
    \        prefixes.append(string[..<string.index(before: c)])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var currentPrefix = \"\"\n  \
    \  for character in string {\n        if character == currentPrefix[currentPrefix.count-1]\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = currentPrefix + String(character)\n        }\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = string\n    while\
    \ current != \"\" {\n        prefixes.append(current)\n        current = prefixes.last!\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    for c in string\
    \ {\n        prefixes.append(string[..<string.index(before: c)])\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    for c in string {\n        prefixes.append(string[..<string.index(before:\
    \ c)])\n    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = string\n    while current != \"\" {\n        prefixes.append(current)\n\
    \        current = string[string.index(current, offsetBy: 1)]\n    }\n    return\
    \ prefixes", "    var prefixes = [String]()\n    var current = string\n    while\
    \ current != \"\" {\n        current = current.prefix(string)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ current = string\n    while current != \"\" {\n        current = current.prefix(from:\
    \ current)\n        prefixes.append(current)\n    }\n    return prefixes", " \
    \   var prefixes = [String]()\n    var currentPrefix = \"\"\n    for character\
    \ in string {\n        currentPrefix = String(currentPrefix) + String(character)\n\
    \        prefixes.append(currentPrefix)\n    }\n    return prefixes", "    var\
    \ prefixes = [String]()\n    var current = \"\"\n    for character in string {\n\
    \        current = current + String(character)\n        prefixes.append(current)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var prefix =\
    \ \"\"\n    for c in string {\n        prefix += c\n        prefixes.append(prefix)\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for c in string {\n        if c == currentPrefix {\n           \
    \ prefixes.append(currentPrefix)\n        } else {\n            currentPrefix\
    \ = currentPrefix + c\n            prefixes.append(currentPrefix)\n        }\n\
    \    }\n    return prefixes", "    var prefixes = [String]()\n    var currentPrefix\
    \ = \"\"\n    for character in string {\n        if character == currentPrefix\
    \ {\n            prefixes.append(currentPrefix)\n        } else {\n          \
    \  currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        if character ==\
    \ currentPrefix {\n            prefixes.append(currentPrefix)\n        } else\
    \ {\n            currentPrefix = String(character)\n            prefixes.append(currentPrefix)\n\
    \        }\n    }\n    return prefixes", "    var prefixes = [String]()\n    var\
    \ currentPrefix = \"\"\n    for character in string {\n        currentPrefix =\
    \ String(currentPrefix) + String(character)\n        prefixes.append(currentPrefix)\n\
    \    }\n    return prefixes"]
stop_tokens:
- "\n}"

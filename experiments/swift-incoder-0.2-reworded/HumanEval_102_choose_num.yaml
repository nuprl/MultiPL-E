name: HumanEval_102_choose_num
language: swift
prompt: "\n/// This function takes two positive numbers x and y and returns the\n\
  /// biggest even integer number that is in the range [x, y] inclusive. If \n///\
  \ there's no such number, then the function should return -1.\n/// For example:\n\
  /// >>> choose_num(x: 12, y: 15)\n/// 14\n/// >>> choose_num(x: 13, y: 12)\n///\
  \ -1\nfunc choose_num(x: Int, y: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(choose_num(x: 12, y: 15) == 14)\nassert(choose_num(x:\
  \ 13, y: 12) == -1)\nassert(choose_num(x: 33, y: 12354) == 12354)\nassert(choose_num(x:\
  \ 5234, y: 5233) == -1)\nassert(choose_num(x: 6, y: 29) == 28)\nassert(choose_num(x:\
  \ 27, y: 10) == -1)\nassert(choose_num(x: 7, y: 7) == -1)\nassert(choose_num(x:\
  \ 546, y: 546) == 546)"
completions: ["    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var max_even\
    \ = y\n    \n    for num in stride(from: x, through: y, by: 2) {\n        if num\
    \ % 2 == 0 {\n            max_even = num\n        }\n    }\n    \n    return max_even",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    var even = Int()\n    var odd = Int()\n    var biggest = Int()\n \
    \   var biggestEven = Int()\n    var biggestOdd = Int()\n    for _ in 0..<y {\n\
    \        biggestEven = Int()\n        biggestOdd = Int()\n        for _ in 0..<x\
    \ {\n            if even % 2 == 0 {\n                biggestEven = biggestEven\
    \ + 1\n            } else {\n                biggestOdd = biggestOdd + 1\n   \
    \         }\n            even = even + 1\n        }\n        if biggestEven >\
    \ biggestOdd {\n            biggestEven = biggestOdd\n        }\n        if biggestEven\
    \ > biggest {\n            biggest = biggestEven\n        }\n        if biggestOdd\
    \ > biggest {\n            biggest = biggestOdd\n        }\n    }\n    return\
    \ biggest", "    var result = -1\n    if x > y {\n        swap(x, y)\n    }\n\
    \    for number in stride(from: x, to: y, by: 2) {\n        if number % 2 == 0\
    \ {\n            if number > result {\n                result = number\n     \
    \       }\n        }\n    }\n    return result", "    var result = -1\n    var\
    \ x = abs(x)\n    var y = abs(y)\n    var x_even = x % 2 == 0\n    var y_even\
    \ = y % 2 == 0\n    if x_even && y_even {\n        if x < y {\n            result\
    \ = x\n        } else {\n            result = y\n        }\n    } else if x_even\
    \ {\n        result = x\n    } else if y_even {\n        result = y\n    } else\
    \ {\n        if x < y {\n            result = x\n        } else {\n          \
    \  result = y\n        }\n    }\n    return result", "    if x < y {\n       \
    \ return -1\n    }\n    if x == y {\n        return x\n    }\n    var even = Int()\n\
    \    var odd = Int()\n    var biggest = Int()\n    for n in 0..<x {\n        if\
    \ n % 2 == 0 {\n            even = even + n\n        } else {\n            odd\
    \ = odd + n\n        }\n    }\n    for n in 0..<y {\n        if n % 2 == 0 {\n\
    \            even = even + n\n        } else {\n            odd = odd + n\n  \
    \      }\n    }\n    if even > biggest {\n        biggest = even\n    }\n    if\
    \ odd > biggest {\n        biggest = odd\n    }\n    return biggest", "    if\
    \ x <= y {\n        return -1\n    }\n    if x > y {\n        return -1\n    }\n\
    \    var even: Int = 0\n    var odd: Int = 0\n    for i in 0..<y {\n        if\
    \ i % 2 == 0 {\n            even += i\n        } else {\n            odd += i\n\
    \        }\n    }\n    if even > x {\n        return even\n    }\n    return odd",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    if\
    \ x > y {\n        return -1\n    }\n    return choose_num(x / 2, y / 2)", " \
    \   if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    \n    return choose_num(x / 2 + 1, y)", "    if x <= y {\n\
    \        return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    \n    for _ in 0..<(x-y) {\n        x =\
    \ rand.randomInt(y)\n        y = rand.randomInt(x)\n        if x % 2 == 0 {\n\
    \            even += x\n        } else {\n            odd += x\n        }\n  \
    \  }\n    if even > odd {\n        return even\n    } else {\n        return odd\n\
    \    }", "    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n  \
    \  var y: Int = 0\n    var z: Int = 0\n    \n    if x < y {\n        (x, y) =\
    \ (y, x)\n    }\n    \n    for z in x ..< y {\n        if z % 2 == 0 {\n     \
    \       even = z\n        } else {\n            odd = z\n        }\n    }\n  \
    \  \n    if even > 0 {\n        return even\n    } else {\n        return odd\n\
    \    }", "    if x <= y {\n        return -1\n    }\n    var result = x\n    var\
    \ remainder = y\n    while remainder > 0 {\n        remainder /= 2\n        if\
    \ remainder > result {\n            result = remainder\n        }\n    }\n   \
    \ return result", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    var\
    \ result: Int = 0\n    \n    for _ in 0..<(x-y) {\n        result += 1\n    }\n\
    \    \n    if result > y {\n        result = -1\n    }\n    \n    return result",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ (x * y) / 2\n    }\n    \n    if x % 2 == 0 {\n        return x / 2\n    }\n\
    \    \n    if y % 2 == 0 {\n        return y / 2\n    }\n    \n    return -1",
  "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if\
    \ y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    if x > y {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y > x {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return -1", "    var result = -1\n    var x = abs(x)\n  \
    \  var y = abs(y)\n    while x <= y {\n        if x % 2 == 0 && y % 2 == 0 {\n\
    \            if x > y {\n                result = x\n            } else {\n  \
    \              result = y\n            }\n            break\n        }\n     \
    \   x += 1\n        y -= 1\n    }\n    return result", "    if x <= y {\n    \
    \    return -1\n    }\n    var result = x\n    for _ in 0..<y {\n        if result\
    \ % 2 == 0 {\n            result = result / 2\n        } else {\n            return\
    \ -1\n        }\n    }\n    return result", "    if x <= y {\n        return -1\n\
    \    }\n    var result = x\n    var remainder = y\n    while remainder > 0 {\n\
    \        if remainder % 2 == 0 {\n            result = result * 10 + remainder\
    \ / 2\n        }\n        remainder = remainder / 2\n    }\n    return result",
  "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var x_even = x\
    \ % 2 == 0\n    var y_even = y % 2 == 0\n    if x_even && y_even {\n        if\
    \ x < y {\n            result = x\n        } else {\n            result = y\n\
    \        }\n    } else if x_even {\n        result = x\n    } else if y_even {\n\
    \        result = y\n    } else {\n        if x < y {\n            result = x\n\
    \        } else {\n            result = y\n        }\n    }\n    return result",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ x + y\n    }\n    \n    if x % 2 == 0 && y % 2 != 0 {\n        return y\n  \
    \  }\n    \n    if x % 2 != 0 && y % 2 == 0 {\n        return x\n    }\n    \n\
    \    if x % 2 != 0 && y % 2 != 0 {\n        return y\n    }\n    \n    return\
    \ -1", "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n\
    \    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x > y {\n        let tmp = x\n        x = y\n        y\
    \ = tmp\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n\
    \    }\n    if x % 2 == 0 {\n        return x + (y / 2)\n    }\n    if y % 2 ==\
    \ 0 {\n        return x + (y / 2)\n    }\n    return -1", "    if x < y {\n  \
    \      return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y /\
    \ 2)", "    if x > y {\n        (x, y) = (y, x)\n    }\n    var even: Int = 0\n\
    \    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var evenMax:\
    \ Int = 0\n    var oddMax: Int = 0\n    var evenMin: Int = 0\n    var oddMin:\
    \ Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount: Int = 0\n    var\
    \ evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var evenMaxCount2:\
    \ Int = 0\n    var oddMaxCount2: Int = 0\n    var evenMinCount2: Int = 0\n   \
    \ var oddMinCount2: Int = 0\n    var evenMaxCount3: Int = 0\n    var oddMaxCount3:\
    \ Int = 0\n    var evenMinCount3: Int = 0\n    var oddMinCount3: Int = 0\n   \
    \ var evenMaxCount4: Int = 0\n    var oddMaxCount4: Int = 0\n    var evenMinCount4:\
    \ Int = 0\n    var oddMinCount4: Int = 0\n    var evenMaxCount5: Int = 0\n   \
    \ var oddMaxCount5: Int = 0\n    var evenMinCount5: Int = 0\n    var oddMinCount5:\
    \ Int = 0\n    var evenMaxCount6: Int = 0\n    var oddMaxCount6: Int = 0\n   \
    \ var evenMinCount6: Int = 0\n    var oddMinCount6: Int = 0\n    var evenMaxCount7:\
    \ Int = 0\n    var oddMaxCount7: Int = 0\n    var evenMinCount7: Int = 0\n   \
    \ var oddMinCount7: Int = 0\n    var evenMaxCount8: Int = 0\n    var oddMaxCount8:\
    \ Int = 0\n    var evenMinCount8: Int = 0\n    var oddMinCount8: Int = 0\n   \
    \ var evenMaxCount9: Int = 0\n    var oddMaxCount9: Int = 0\n    var evenMinCount9:\
    \ Int = 0\n    var oddMinCount9: Int = 0\n    var evenMaxCount10: Int = 0\n  \
    \  var oddMaxCount10: Int = 0\n    var evenMinCount10: Int = 0\n    var oddMinCount10:\
    \ Int = 0\n    var evenMaxCount11: Int = 0\n    var oddMaxCount11: Int = 0\n \
    \   var evenMinCount11: Int = 0\n    var oddMinCount11: Int = 0\n    var evenMaxCount12:\
    \ Int = 0\n    var oddMaxCount12: Int = 0\n    var evenMinCount12: Int = 0\n \
    \   var oddMinCount12: Int = 0\n    var evenMaxCount13: Int = 0\n    var oddMaxCount13:\
    \ Int = 0\n    var evenMinCount13: Int = 0\n    var oddMinCount13: Int = 0\n \
    \   var ", "    if x < y {\n        return -1\n    }\n    var biggest = y\n  \
    \  for num in stride(from: x, through: y, by: 2) {\n        if num % 2 == 0 {\n\
    \            biggest = num\n        }\n    }\n    return biggest", "    if x <=\
    \ y {\n        return -1\n    }\n    var result = x\n    for _ in 0..<y {\n  \
    \      if result % 2 == 0 {\n            result = result / 2\n        } else {\n\
    \            break\n        }\n    }\n    return result", "    if x < y {\n  \
    \      return choose_num(y, x)\n    }\n    if x == y {\n        return x\n   \
    \ }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n    }\n\
    \    return -1", "    if x <= y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2\
    \ == 0 {\n            even = even + i\n        } else {\n            odd = odd\
    \ + i\n        }\n    }\n    \n    if even > y {\n        return even\n    }\n\
    \    \n    return odd", "    if x <= y {\n        return -1\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ + 1, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y + 1)\n \
    \   }\n    return choose_num(x + 1, y + 1)", "    if x <= y {\n        return\
    \ -1\n    }\n    var even = 0\n    var odd = 0\n    var x = x - 1\n    var y =\
    \ y - 1\n    while x >= y {\n        if x % 2 == 0 {\n            even = even\
    \ + 1\n        }\n        else {\n            odd = odd + 1\n        }\n     \
    \   x = x - 1\n        y = y - 1\n    }\n    if even > odd {\n        return even\n\
    \    }\n    return odd", "    if x <= y {\n        return -1\n    }\n    var max_num\
    \ = x\n    for num in stride(from: x, to: y, by: 2) {\n        if num % 2 == 0\
    \ {\n            if num > max_num {\n                max_num = num\n         \
    \   }\n        }\n    }\n    return max_num", "    if x <= y {\n        return\
    \ -1\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for\
    \ i in 0..<y {\n        if i % 2 == 0 {\n            even += i\n        } else\
    \ {\n            odd += i\n        }\n    }\n    \n    if even > x {\n       \
    \ return even\n    }\n    \n    return odd", "    if x > y {\n        (x, y) =\
    \ (y, x)\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n   \
    \ for i in 0..<y {\n        if x % 2 == 0 {\n            even += 2\n        }\
    \ else {\n            odd += 2\n        }\n        x /= 2\n    }\n    \n    if\
    \ even > odd {\n        return even\n    } else {\n        return odd\n    }",
  "    var result = -1\n    var even = 1\n    var odd = 0\n    var xEven = x % 2 ==\
    \ 0\n    var yEven = y % 2 == 0\n    if xEven && yEven {\n        result = x\n\
    \    } else if yEven {\n        result = y\n    } else {\n        if xEven {\n\
    \            result = x\n        } else {\n            result = y\n        }\n\
    \    }\n    while even < result {\n        even += 2\n        if even > result\
    \ {\n            even = 1\n            odd += 2\n            if odd > result {\n\
    \                even = 1\n                odd += 2\n                if odd >\
    \ result {\n                    even = 1\n                    odd += 2\n     \
    \               if odd > result {\n                        even = 1\n        \
    \                odd += 2\n                        if odd > result {\n       \
    \                     even = 1\n                            odd += 2\n       \
    \                     if odd > result {\n                                even\
    \ = 1\n                                odd += 2\n                            \
    \    if odd > result {\n                                    even = 1\n       \
    \                             odd += 2\n                                    if\
    \ odd > result {\n                                        even = 1\n         \
    \                               odd += 2\n                                   \
    \     if odd > result {\n                                            even = 1\n\
    \                                            odd += 2\n                      \
    \                      if odd > result {\n                                   \
    \             even = 1\n                                                odd +=\
    \ 2\n                                                if odd > result {\n     \
    \                                               even = 1\n                   \
    \                                 odd += 2\n                                 \
    \                   if odd > result {\n                                      \
    \                  even = 1\n                                                \
    \        odd += 2\n                                                        if\
    \ odd > result {\n                                                           \
    \ even = 1\n                                                            odd +=\
    \ 2\n                                                            if odd > result\
    \ {\n                                                                even = 1\n\
    \                                                                odd += 2\n  \
    \                                                              if odd > result\
    \ {\n                                                                    even\
    \ = 1\n                                                                    odd\
    \ += 2\n                                                                    if\
    \ odd > result {\n                                                           \
    \             even = 1\n                                                     \
    \                   odd += 2\n                                               \
    \                         if odd > result {\n                                \
    \                                            even = 1\n                      \
    \                                                      odd += 2\n            \
    \                                                                if odd > result\
    \ {\n                                                                        \
    \        even = 1\n                                                          \
    \                      odd += 2\n                                            \
    \                                    if odd > result {\n                     \
    \                                                               even = 1\n   \
    \                                                                            \
    \     odd += 2\n                                                             \
    \                       if odd > result {\n                                  \
    \                                                      even = 1\n            \
    \                                                                            odd\
    \ += 2\n                                                                     \
    \                   if odd > result {\n                                      \
    \                                                      even = 1\n            \
    \                                                                            \
    \    odd += 2\n                                                              \
    \                              if odd > result {\n                           \
    \                                                                     even = 1\n\
    \                                                                            \
    \                    odd += 2\n                                              \
    \                                                  if odd > result {\n       \
    \                                                                            \
    \                 even = 1\n                                                 \
    \                                                   odd += 2\n               \
    \                                                                            \
    \         if odd > result {\n                                                \
    \                                                        even = 1\n          \
    \                                                                            \
    \                  odd += 2\n                                                \
    \                                                        if odd > result {\n \
    \                                                                            \
    \                               even = 1\n                                   \
    \                                                                         odd\
    \ += 2\n                                                                     \
    \                                       if odd > result {\n                  \
    \                                                                            \
    \                  even = 1", "    if x < y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in 0..<(x-y)\
    \ {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n    if even\
    \ > y {\n        return -1\n    }\n    \n    return even % y", "    var result\
    \ = -1\n    if x < y {\n        result = x\n    } else {\n        result = y\n\
    \    }\n    while result % 2 == 0 {\n        result /= 2\n    }\n    return result",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var result: Int = 0\n\
    \    var remainder: Int = 0\n    \n    while x >= y {\n        remainder = x %\
    \ y\n        x = y\n        y = remainder\n        result += 1\n    }\n    \n\
    \    return result", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n\
    \    var z = x\n    var w = y\n    while z < w {\n        if z % 2 == 0 {\n  \
    \          if z > result {\n                result = z\n            }\n      \
    \      z /= 2\n        } else {\n            if w > result {\n               \
    \ result = w\n            }\n            w /= 2\n        }\n    }\n    return\
    \ result", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x ==\
    \ y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    return choose_num(x / 2, y)", "    if x <= y {\n       \
    \ return -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 ==\
    \ 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n     \
    \   return choose_num(x, y / 2)\n    }\n    if x > y {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y > x {\n        return choose_num(x, y / 2)\n    }\n\
    \    return -1", "    if x <= y {\n        return -1\n    }\n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    while\
    \ x <= y {\n        if x % 2 == 0 {\n            even = even * 2 + x\n       \
    \ } else {\n            odd = odd * 2 + x\n        }\n        x += 1\n       \
    \ y += 1\n    }\n    if even > odd {\n        return even\n    } else {\n    \
    \    return odd\n    }", "    if x < y {\n        return choose_num(y, x)\n  \
    \  }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n        return\
    \ x - 1\n    }\n    if y % 2 == 0 {\n        return y + 1\n    }\n    return -1",
  "    var biggest = y\n    if x > y {\n        biggest = x\n    }\n    for number\
    \ in stride(from: x, through: y, by: 2) {\n        if number % 2 == 0 {\n    \
    \        biggest = number\n            break\n        }\n    }\n    return biggest",
  "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    \n    if y % 2 == 0 {\n        return choose_num(x, y /\
    \ 2)\n    }\n    \n    if x > y {\n        return -1\n    }\n    \n    return\
    \ -1", "    if x <= 0 || y <= 0 {\n        return -1\n    }\n    if x > y {\n\
    \        (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax:\
    \ Int = 0\n    for x in stride(from: x, to: y, by: 1) {\n        if x % 2 == 0\
    \ {\n            evenMax = even\n            even = x\n        } else {\n    \
    \        oddMax = odd\n            odd = x\n        }\n    }\n    if even > oddMax\
    \ {\n        return evenMax\n    } else {\n        return oddMax\n    }", "  \
    \  if x <= y {\n        return -1\n    }\n    \n    var biggest = y\n    \n  \
    \  for number in stride(from: x, through: y, by: 2) {\n        if number % 2 ==\
    \ 0 {\n            biggest = number\n        }\n    }\n    \n    return biggest",
  "    if x > y {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int\
    \ = 0\n    var x: Int = 0\n    var y: Int = 0\n    for _ in 0..<(x-y) {\n    \
    \    x = random(y)\n        y = random(y)\n        if x % 2 == 0 {\n         \
    \   even++\n        } else {\n            odd++\n        }\n    }\n    if even\
    \ > odd {\n        return even\n    } else {\n        return odd\n    }", "  \
    \  var result = -1\n    \n    if x < y {\n        result = x\n    }\n    else\
    \ {\n        result = y\n    }\n    \n    while result > 0 && result % 2 == 0\
    \ {\n        result /= 2\n    }\n    \n    return result", "    var result = -1\n\
    \    if x > y {\n        result = x\n    } else {\n        result = y\n    }\n\
    \    \n    if result % 2 == 0 {\n        return result\n    }\n    \n    var remainder\
    \ = result % 2\n    while remainder == 0 {\n        remainder = result % 2\n \
    \       result = result / 2\n    }\n    \n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y /\
    \ 2)", "    if x < y {\n        return choose_num(y, x)\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ x + (y - x) / 2\n    }\n    if x % 2 == 0 {\n        return y\n    }\n    if\
    \ y % 2 == 0 {\n        return x\n    }\n    return -1", "    if x < y {\n   \
    \     return choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n     \
    \   return y / 2\n    }\n    if x > y {\n        return choose_num(y - 1, x)\n\
    \    }\n    if x == y {\n        return -1\n    }\n    if x % 2 == 0 {\n     \
    \   return x / 2\n    }\n    if y % 2 == 0 {\n        return y / 2\n    }\n  \
    \  if x > y {\n        return choose_num(y - 1, x)\n    }\n    return -1", " \
    \   var biggest = y\n    if x > y {\n        biggest = x\n    }\n    for num in\
    \ stride(from: x, through: y, by: 2) {\n        if num % 2 == 0 {\n          \
    \  biggest = num\n            break\n        }\n    }\n    return biggest", " \
    \   if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    \n    return choose_num(x / 2, y)", "    if x > y {\n  \
    \      return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    for\
    \ _ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    }\n  \
    \  if even > odd {\n        return even\n    } else {\n        return odd\n  \
    \  }", "    if x <= y {\n        return -1\n    }\n    var even: Int = 0\n   \
    \ var odd: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    while x < y {\n\
    \        if x % 2 == 0 {\n            even += x\n        } else {\n          \
    \  odd += x\n        }\n        x += 1\n        y += 1\n    }\n    if even > odd\
    \ {\n        return even\n    } else {\n        return odd\n    }", "    if x\
    \ < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n  \
    \  }\n    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n    if x %\
    \ 2 != 0 && y % 2 == 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2\
    \ != 0 {\n        return choose_num(x - y, y)\n    }\n    return -1", "    if\
    \ x > y {\n        swap(x, y)\n    }\n    \n    var even: Int = 0\n    var odd:\
    \ Int = 0\n    \n    for i in 0..<y {\n        if i % 2 == 0 {\n            even\
    \ += i\n        } else {\n            odd += i\n        }\n    }\n    \n    if\
    \ even > y {\n        return -1\n    }\n    \n    if even < x {\n        return\
    \ even\n    }\n    \n    return odd", "    if x <= y {\n        return -1\n  \
    \  }\n    var biggest = y\n    for num in stride(from: x, through: y, by: 2) {\n\
    \        if num % 2 == 0 {\n            biggest = num\n        }\n    }\n    return\
    \ biggest", "    if x > y {\n        swap(x, y)\n    }\n    var result: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var even: Bool = false\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var even2: Bool = false\n    var even3:\
    \ Bool = false\n    var even4: Bool = false\n    var even5: Bool = false\n   \
    \ var even6: Bool = false\n    var even7: Bool = false\n    var even8: Bool =\
    \ false\n    var even9: Bool = false\n    var even10: Bool = false\n    var even11:\
    \ Bool = false\n    var even12: Bool = false\n    var even13: Bool = false\n \
    \   var even14: Bool = false\n    var even15: Bool = false\n    var even16: Bool\
    \ = false\n    var even17: Bool = false\n    var even18: Bool = false\n    var\
    \ even19: Bool = false\n    var even20: Bool = false\n    var even21: Bool = false\n\
    \    var even22: Bool = false\n    var even23: Bool = false\n    var even24: Bool\
    \ = false\n    var even25: Bool = false\n    var even26: Bool = false\n    var\
    \ even27: Bool = false\n    var even28: Bool = false\n    var even29: Bool = false\n\
    \    var even30: Bool = false\n    var even31: Bool = false\n    var even32: Bool\
    \ = false\n    var even33: Bool = false\n    var even34: Bool = false\n    var\
    \ even35: Bool = false\n    var even36: Bool = false\n    var even37: Bool = false\n\
    \    var even38: Bool = false\n    var even39: Bool = false\n    var even40: Bool\
    \ = false\n    var even41: Bool = false\n    var even42: Bool = false\n    var\
    \ even43: Bool = false\n    var even44: Bool = false\n    var even45: Bool = false\n\
    \    var even46: Bool = false\n    var even47: Bool = false\n    var even48: Bool\
    \ = false\n    var even49: Bool = false\n    var even50: Bool = false\n    var\
    \ even51: Bool = false\n    var even52: Bool = false\n    var even53: Bool = false\n\
    \    var even54: Bool = false\n    var even55: Bool = false\n    var even56: Bool\
    \ = false\n    var even57: Bool = false\n    var even58: Bool = false\n    var\
    \ even59: Bool = false\n    var even60: Bool = false\n    var even61: Bool = false\n\
    \    var even62: Bool = false\n    var even63: Bool = false\n    var even64: Bool\
    \ = false\n    var even65: Bool = false\n    var even66: Bool = false\n    var\
    \ even67: Bool = false\n    var even68: Bool = false\n    var even69", "    var\
    \ result = -1\n    if x > y {\n        var temp = x\n        x = y\n        y\
    \ = temp\n    }\n    for _ in 0..<(x-y) {\n        if x % 2 == 0 && y % 2 == 0\
    \ {\n            if x != y {\n                result = x\n                break\n\
    \            }\n        }\n        x /= 2\n        y /= 2\n    }\n    return result",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n    }\n\
    \    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 !=\
    \ 0 && y % 2 == 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0\
    \ {\n        return x + (y / 2)\n    }\n    return -1", "    if x <= y {\n   \
    \     return -1\n    }\n    var biggest = y\n    for num in stride(from: x, through:\
    \ y, by: 2) {\n        if num % 2 == 0 {\n            biggest = num\n        }\n\
    \    }\n    return biggest", "    if x < y {\n        return -1\n    }\n    var\
    \ result = x\n    var remainder = y\n    while remainder > 0 {\n        if remainder\
    \ & 1 == 0 {\n            result = result + 1\n        }\n        remainder =\
    \ remainder >> 1\n    }\n    return result", "    if x < y {\n        return -1\n\
    \    }\n    var result = x\n    for _ in 0..<y {\n        if result % 2 == 0 {\n\
    \            return result\n        }\n        result /= 2\n    }\n    return\
    \ -1", "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int\
    \ = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2 == 0\
    \ {\n            even += i\n        } else {\n            odd += i\n        }\n\
    \    }\n    \n    if even > y {\n        return -1\n    }\n    \n    if even <\
    \ y {\n        return even\n    }\n    \n    if odd > y {\n        return -1\n\
    \    }\n    \n    return odd", "    if x <= y {\n        return -1\n    }\n  \
    \  var result = x\n    for _ in 0..<y {\n        if result % 2 == 0 {\n      \
    \      result = result / 2\n        } else {\n            return -1\n        }\n\
    \    }\n    return result", "    if x <= y {\n        return -1\n    }\n    var\
    \ even = Int()\n    var odd = Int()\n    var result = Int()\n    for number in\
    \ 1...y {\n        if number % 2 == 0 {\n            even = number\n        }\
    \ else {\n            odd = number\n        }\n        if even < x && odd > x\
    \ {\n            result = even\n            break\n        }\n    }\n    return\
    \ result", "    if x > y {\n        swap(x, y)\n    }\n    var result: Int = 0\n\
    \    var even: Bool = false\n    for n in 1...y {\n        if even {\n       \
    \     if x % n == 0 {\n                result = n\n                even = false\n\
    \                break\n            }\n        } else {\n            if x % n\
    \ == 0 {\n                result = n\n                even = true\n          \
    \      break\n            }\n        }\n    }\n    if even {\n        result =\
    \ -1\n    }\n    return result", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return -1", "    if x <= y {\n        return\
    \ -1\n    }\n    var biggest = y\n    for num in stride(from: x, through: y, by:\
    \ 2) {\n        if num % 2 == 0 {\n            biggest = num\n        }\n    }\n\
    \    return biggest", "    if x < y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    return choose_num(x + 1, y)", "    if x > y {\n        return -1\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    for _ in 0..<(x-y) {\n\
    \        if x % 2 == 0 {\n            even += 2\n        }\n        else {\n \
    \           odd += 1\n        }\n        x /= 2\n    }\n    if even > 0 {\n  \
    \      return even\n    }\n    return odd", "    if x < y {\n        return -1\n\
    \    }\n    \n    if x == y {\n        return x\n    }\n    \n    if x % 2 ==\
    \ 0 && y % 2 == 0 {\n        return x + (y / 2)\n    }\n    \n    if x % 2 ==\
    \ 0 {\n        return x + (y / 2)\n    }\n    \n    if y % 2 == 0 {\n        return\
    \ x + (y / 2)\n    }\n    \n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    var biggest = Int()\n    var biggest2 = Int()\n    for num in 1...y\
    \ {\n        if num % 2 == 0 {\n            if biggest < num {\n             \
    \   biggest = num\n            }\n        } else {\n            if biggest2 <\
    \ num {\n                biggest2 = num\n            }\n        }\n    }\n   \
    \ if biggest < biggest2 {\n        return biggest\n    } else {\n        return\
    \ biggest2\n    }", "    if x <= y {\n        return -1\n    }\n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    var x: Int\n    var y: Int\n    for (x =\
    \ y; x > 0; x /= 2) {\n        even = even * 2 + x\n    }\n    for (x = y; x >\
    \ 0; x /= 2) {\n        odd = odd * 2 + x\n    }\n    if even > odd {\n      \
    \  return even\n    } else {\n        return odd\n    }", "    if x < y {\n  \
    \      return -1\n    }\n    if x == y {\n        return x\n    }\n    if x %\
    \ 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y /\
    \ 2)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n\
    \    return choose_num(x, y / 2)", "    var result = -1\n    if x > y {\n    \
    \    result = x\n    } else {\n        result = y\n    }\n    \n    for _ in 0..<(x\
    \ - result) {\n        if ((result % 2) == 0) {\n            result = result /\
    \ 2\n        } else {\n            result = result * 3 + 1\n        }\n    }\n\
    \    \n    return result", "    if x > y {\n        (x, y) = (y, x)\n    }\n \
    \   var even: Int = 0\n    var odd: Int = 0\n    for _ in 0..<(x-y) {\n      \
    \  even += 2\n        odd += 1\n    }\n    if even > y {\n        return even\n\
    \    }\n    return odd", "    if x < y {\n        return choose_num(y, x)\n  \
    \  }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + y\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n      \
    \  return y\n    }\n    if x % 2 != 0 && y % 2 == 0 {\n        return x\n    }\n\
    \    if x % 2 != 0 && y % 2 != 0 {\n        return y\n    }\n    return -1", " \
    \   if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n\
    \        return y / 2\n    }\n    var even = choose_num(x / 2, y)\n    if even\
    \ != -1 {\n        return even\n    }\n    even = choose_num(x, y / 2)\n    if\
    \ even != -1 {\n        return even\n    }\n    return -1", "    var result =\
    \ -1\n    var x = x - 1\n    var y = y - 1\n    while x >= y {\n        if x %\
    \ 2 == 0 {\n            if y % 2 == 0 {\n                result = x\n        \
    \    } else {\n                result = y\n            }\n        } else {\n \
    \           if y % 2 == 0 {\n                result = y\n            } else {\n\
    \                result = x\n            }\n        }\n        x = x - 1\n   \
    \     y = y - 1\n    }\n    return result", "    if x <= y {\n        return -1\n\
    \    }\n    var even = Int()\n    var odd = Int()\n    for num in 1...y {\n  \
    \      if num % 2 == 0 {\n            even = num\n        } else {\n         \
    \   odd = num\n        }\n    }\n    if even > x {\n        return even\n    }\
    \ else {\n        return odd\n    }", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    var result = -1\n    var low = y\n    var high = x\n    var mid =\
    \ x + (y - x) / 2\n    while low < high {\n        if isEven(mid) {\n        \
    \    result = mid\n            low = mid\n        } else {\n            high =\
    \ mid\n        }\n        mid = x + (y - x) / 2\n    }\n    return result", " \
    \   if x <= y {\n        return -1\n    }\n    \n    var result: Int = 0\n   \
    \ var x: Int\n    var y: Int\n    \n    for x in stride(from: x, to: y, by: 2)\
    \ {\n        for y in stride(from: y, to: x, by: 2) {\n            if x % 2 ==\
    \ 0 && y % 2 == 0 {\n                result = max(result, x)\n            }\n\
    \        }\n    }\n    \n    return result", "    if x <= y {\n        return\
    \ -1\n    }\n    \n    var result = x\n    \n    while result < y {\n        if\
    \ result % 2 == 0 {\n            return result\n        }\n        \n        result\
    \ *= 2\n    }\n    \n    return result", "    var result = -1\n    if x > y {\n\
    \        result = x\n    } else {\n        result = y\n    }\n    while result\
    \ > 0 && result % 2 == 0 {\n        result = result / 2\n    }\n    return result",
  "    var result = -1\n    \n    if x > y {\n        result = x\n    } else {\n \
    \       result = y\n    }\n    \n    if result % 2 == 0 {\n        return result\n\
    \    } else {\n        return -1\n    }", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    \n    if x == y {\n        return x\n    }\n    \n    if x %\
    \ 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n    }\n    \n    if x %\
    \ 2 == 0 && y % 2 != 0 {\n        return y\n    }\n    \n    if x % 2 != 0 &&\
    \ y % 2 == 0 {\n        return x\n    }\n    \n    if x % 2 != 0 && y % 2 != 0\
    \ {\n        return y\n    }\n    \n    return -1", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n    }\n    if x % 2 ==\
    \ 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 == 0\
    \ {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0 {\n        return\
    \ x + (y / 2)\n    }\n    return -1", "    if x < y {\n        return -1\n   \
    \ }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x: x, y: y - 1)\n    }\n    return choose_num(x: x - 2, y: y)", " \
    \   if x <= y {\n        return -1\n    }\n    \n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    \n    for i in 0..<y {\n        if x % 2 == 0 {\n        \
    \    even = even + x\n        } else {\n            odd = odd + x\n        }\n\
    \        \n        x = x + 1\n    }\n    \n    if even > odd {\n        return\
    \ even\n    } else {\n        return odd\n    }", "    var even: Int = 0\n   \
    \ var odd: Int = 0\n    var x: Int = x\n    var y: Int = y\n    var evenMax: Int\
    \ = -1\n    var oddMax: Int = -1\n    while x >= y {\n        if x % 2 == 0 {\n\
    \            even = even * 2 + x\n            if even > evenMax {\n          \
    \      evenMax = even\n            }\n        } else {\n            odd = odd\
    \ * 2 + x\n            if odd > oddMax {\n                oddMax = odd\n     \
    \       }\n        }\n        x = x / 2\n        y = y / 2\n    }\n    if evenMax\
    \ < 0 {\n        return -1\n    }\n    if oddMax < 0 {\n        return -1\n  \
    \  }\n    return evenMax", "    if x < y {\n        return choose_num(y, x)\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n      \
    \  return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    if x > y {\n        return -1\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x < y {\n        (x, y) = (y, x)\n    }\n    var result:\
    \ Int = 0\n    var even: Bool = false\n    for _ in 0..<(x-y) {\n        result\
    \ += 2\n        if result > y {\n            break\n        }\n        if result\
    \ % 2 == 0 {\n            even = true\n        }\n    }\n    if even {\n     \
    \   return result\n    }\n    return -1", "    if x < y {\n        return -1\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    for _ in 0..<(x-y) {\n\
    \        even = even + 2\n        odd = odd + 1\n    }\n    if even > odd {\n\
    \        return even\n    } else {\n        return odd\n    }", "    if x <= y\
    \ {\n        return -1\n    }\n    var even: Int = 0\n    var odd: Int = 0\n \
    \   var x: Int = 0\n    var y: Int = 0\n    var evenMax: Int = 0\n    var oddMax:\
    \ Int = 0\n    var evenMin: Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount:\
    \ Int = 0\n    var oddMaxCount: Int = 0\n    var evenMinCount: Int = 0\n    var\
    \ oddMinCount: Int = 0\n    var evenMaxSum: Int = 0\n    var oddMaxSum: Int =\
    \ 0\n    var evenMinSum: Int = 0\n    var oddMinSum: Int = 0\n    var evenMaxMin:\
    \ Int = 0\n    var oddMaxMin: Int = 0\n    var evenMaxMax: Int = 0\n    var oddMaxMax:\
    \ Int = 0\n    var evenMinMax: Int = 0\n    var oddMinMax: Int = 0\n    var evenMaxSumCount:\
    \ Int = 0\n    var oddMaxSumCount: Int = 0\n    var evenMinSumCount: Int = 0\n\
    \    var oddMinSumCount: Int = 0\n    var evenMaxMinCount: Int = 0\n    var oddMaxMinCount:\
    \ Int = 0\n    var evenMaxMaxCount: Int = 0\n    var oddMaxMaxCount: Int = 0\n\
    \    var evenMinMaxCount: Int = 0\n    var oddMinMaxCount: Int = 0\n    var evenMaxSumSum:\
    \ Int = 0\n    var oddMaxSumSum: Int = 0\n    var evenMinSumSum: Int = 0\n   \
    \ var oddMinSumSum: Int = 0\n    var evenMaxMinSum: Int = 0\n    var oddMaxMinSum:\
    \ Int = 0\n    var evenMaxMaxSum: Int = 0\n    var oddMaxMaxSum: Int = 0\n   \
    \ var evenMinMaxSum: Int = 0\n    var oddMinMaxSum: Int = 0\n    var evenMaxMinSum:\
    \ Int = 0\n    var oddMaxMinSum: Int = 0\n    var evenMaxMaxSum: Int = 0\n   \
    \ var oddMaxMaxSum: Int = 0\n    var evenMinMaxSum: Int = 0\n    var oddMinMaxSum:\
    \ Int = 0\n    var evenMaxMinSum: Int = 0\n    var oddMaxMinSum: Int = 0\n   \
    \ var evenMaxMaxSum: Int = 0\n    var oddMaxMaxSum: Int = 0\n    var evenMinMaxSum:\
    \ Int = 0\n    var oddMinMaxSum: Int = 0\n    var evenMaxMinSum: Int = 0\n   \
    \ var oddMaxMinSum: Int = 0\n    var evenMaxMaxSum: Int = 0\n    var oddMaxMaxSum:\
    \ Int = 0\n    var evenMinMaxSum: Int = 0\n    var oddMinMaxSum: Int", "    if\
    \ x <= y {\n        return -1\n    }\n    if x > y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x - 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y - 2)\n    }\n    return choose_num(x + 1, y + 1)", "    if x < y {\n     \
    \   return choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n    if\
    \ x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n        return\
    \ y / 2\n    }\n    return -1", "    if x < y {\n        return choose_num(y,\
    \ x)\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0 {\n       \
    \ return y\n    }\n    if y % 2 == 0 {\n        return x\n    }\n    return -1",
  "    if x <= y {\n        return -1\n    }\n    var result = x\n    var remainder\
    \ = y\n    while remainder > 0 {\n        if remainder & 1 == 0 {\n          \
    \  result = result + 1\n        }\n        remainder = remainder >> 1\n    }\n\
    \    return result", "    if x < y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ (x * y) / 2\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n \
    \   }\n    if x % 2 != 0 && y % 2 == 0 {\n        return -1\n    }\n    if x %\
    \ 2 != 0 && y % 2 != 0 {\n        return (x * y) / 2\n    }\n    return -1", " \
    \   if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x == y {\n\
    \        return x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return\
    \ x + (y / 2)\n    }\n    \n    if x % 2 == 0 && y % 2 != 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    \n    if x % 2 != 0 && y % 2 == 0 {\n     \
    \   return choose_num(x, y / 2)\n    }\n    \n    if x % 2 != 0 && y % 2 != 0\
    \ {\n        return choose_num(x / 2, y / 2)\n    }\n    \n    return -1", " \
    \   var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var minX = x\n\
    \    var minY = y\n    var maxX = x\n    var maxY = y\n    while minX < maxX {\n\
    \        while minY < maxY {\n            if minX == minY {\n                if\
    \ minX < x {\n                    minX = x\n                }\n              \
    \  if minY < y {\n                    minY = y\n                }\n          \
    \  }\n            else {\n                if minX < x {\n                    minX\
    \ = x\n                }\n                if minY < y {\n                    minY\
    \ = y\n                }\n            }\n            minY++\n        }\n     \
    \   maxY--\n    }\n    if minX == x {\n        if minY < y {\n            result\
    \ = minY\n        }\n    }\n    else {\n        if minY < y {\n            result\
    \ = minY\n        }\n    }\n    return result", "    if x > y {\n        (x, y)\
    \ = (y, x)\n    }\n    var result = -1\n    var even = 1\n    var odd = 1\n  \
    \  for _ in 0..<(x-y) {\n        even *= 2\n        odd *= 2\n        if even\
    \ > x {\n            even = x - even\n        }\n        if odd > y {\n      \
    \      odd = y - odd\n        }\n        if even > y {\n            even = y -\
    \ even\n        }\n        if odd > x {\n            odd = x - odd\n        }\n\
    \        if even > x {\n            even = x - even\n        }\n        if odd\
    \ > y {\n            odd = y - odd\n        }\n        if even > x {\n       \
    \     even = x - even\n        }\n        if odd > y {\n            odd = y -\
    \ odd\n        }\n        if even > x {\n            even = x - even\n       \
    \ }\n        if odd > y {\n            odd = y - odd\n        }\n        if even\
    \ > x {\n            even = x - even\n        }\n        if odd > y {\n      \
    \      odd = y - odd\n        }\n        if even > x {\n            even = x -\
    \ even\n        }\n        if odd > y {\n            odd = y - odd\n        }\n\
    \        if even > x {\n            even = x - even\n        }\n        if odd\
    \ > y {\n            odd = y - odd\n        }\n        if even > x {\n       \
    \     even = x - even\n        }\n        if odd > y {\n            odd = y -\
    \ odd\n        }\n        if even > x {\n            even = x - even\n       \
    \ }\n        if odd > y {\n            odd = y - odd\n        }\n        if even\
    \ > x {\n            even = x - even\n        }\n        if odd > y {\n      \
    \      odd = y - odd\n        }\n        if even > x {\n            even = x -\
    \ even\n        }\n        if odd > y {\n            odd = y - odd\n        }\n\
    \        if even > x {\n            even = x - even\n        }\n        if odd\
    \ > y {\n            odd = y - odd\n        }\n        if even > x {\n       \
    \     even = x - even\n        }\n        if odd > y {\n            odd = y -\
    \ odd\n        }\n        if even > x {\n            even = x - even\n       \
    \ }\n        if odd > y {\n            odd = y - odd\n        }\n        if even\
    \ > x {\n            even = x - even\n        }\n        if odd > y {\n      \
    \      odd = y - odd\n        }\n        if even > x {\n            even = x -\
    \ even\n        }\n        if odd > y {", "    if x < y {\n        return -1\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    for _ in 0..<(x-y) {\n        x = random()\n        y = random()\n\
    \        if x % 2 == 0 {\n            even += x\n        } else {\n          \
    \  odd += y\n        }\n    }\n    if even > y {\n        return even\n    } else\
    \ {\n        return odd\n    }", "    var result = -1\n    var x = abs(x)\n  \
    \  var y = abs(y)\n    var xMinusY = x - y\n    var xMinusYMinusOne = x - y -\
    \ 1\n    var xMinusYMinusOneMinusOne = x - y - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOne = x - y\
    \ - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\n  \
    \  var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\
    \ - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\
    \ - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\
    \ - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOneMinusOne\
    \ = x - y - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\
    \ - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1 - 1\n    var xMinusYMinusOneMinusOneMinusOneMinusOne",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n \
    \   var odd: Int = 0\n    \n    for i in 0..<y {\n        if x % 2 == 0 {\n  \
    \          even += i\n        } else {\n            odd += i\n        }\n    \
    \    x /= 2\n    }\n    \n    if even > odd {\n        return even\n    } else\
    \ {\n        return odd\n    }", "    var result = -1\n    var x = abs(x)\n  \
    \  var y = abs(y)\n    while x <= y {\n        if x % 2 == 0 && y % 2 == 0 {\n\
    \            if x > y {\n                result = x\n            } else {\n  \
    \              result = y\n            }\n            break\n        }\n     \
    \   x += 1\n        y -= 1\n    }\n    return result", "    if x <= y {\n    \
    \    return -1\n    }\n    var even = 0\n    var odd = 0\n    for n in 1...y {\n\
    \        if n % 2 == 0 {\n            even += n\n        } else {\n          \
    \  odd += n\n        }\n    }\n    if even > x {\n        return even\n    }\n\
    \    return odd", "    if x <= y {\n        return -1\n    }\n    \n    var even:\
    \ Int = 0\n    var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2\
    \ == 0 {\n            even += i\n        } else {\n            odd += i\n    \
    \    }\n    }\n    \n    if even > y {\n        return even\n    }\n    \n   \
    \ return odd", "    if x <= y {\n        return -1\n    }\n    var result: Int\
    \ = 0\n    var remainder: Int = 0\n    while remainder < y {\n        remainder\
    \ = x % 2\n        x = x / 2\n        result = remainder + result\n    }\n   \
    \ return result", "    if x <= y {\n        return -1\n    }\n    var result =\
    \ x\n    var remainder = y\n    while remainder > 0 {\n        if remainder %\
    \ 2 == 0 {\n            result = result + 1\n        }\n        remainder = remainder\
    \ / 2\n    }\n    return result", "    if x > y {\n        (x, y) = (y, x)\n \
    \   }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for _ in 0..<(x-y)\
    \ {\n        even = even + 2\n        odd = odd + 1\n    }\n    \n    if even\
    \ > odd {\n        return even\n    } else {\n        return -1\n    }", "   \
    \ var result = -1\n    if x >= y {\n        result = x\n    } else {\n       \
    \ result = y\n    }\n    \n    while result >= 2 {\n        if result % 2 == 0\
    \ {\n            result = result / 2\n        } else {\n            result = result\
    \ * 3 + 1\n        }\n    }\n    \n    return result", "    if x <= 0 || y <=\
    \ 0 {\n        return -1\n    }\n    var result: Int = 0\n    var x: Int\n   \
    \ var y: Int\n    var even: Bool = false\n    for x = 1; x <= y; x++ {\n     \
    \   if even {\n            if x % 2 == 0 {\n                result = x\n     \
    \           even = false\n                break\n            }\n        } else\
    \ {\n            if x % 2 != 0 {\n                result = x\n               \
    \ even = true\n                break\n            }\n        }\n    }\n    return\
    \ result", "    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n\
    \    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n    return\
    \ choose_num(x / 2, y / 2)", "    var result = -1\n    var x = abs(x)\n    var\
    \ y = abs(y)\n    var xEven = x % 2 == 0\n    var yEven = y % 2 == 0\n    if xEven\
    \ && yEven {\n        if x < y {\n            result = x\n        } else {\n \
    \           result = y\n        }\n    } else if xEven {\n        result = x\n\
    \    } else if yEven {\n        result = y\n    } else {\n        if x < y {\n\
    \            result = x\n        } else {\n            result = y\n        }\n\
    \    }\n    return result", "    var result = -1\n    var xMin = Int(x)\n    var\
    \ xMax = Int(y)\n    var yMin = Int(y)\n    var yMax = Int(x)\n    var xDiff =\
    \ xMax - xMin\n    var yDiff = yMax - yMin\n    var xDivisor = xDiff / 2\n   \
    \ var yDivisor = yDiff / 2\n    while (xDiff != 0 || yDiff != 0) {\n        if\
    \ (xDivisor % 2 == 0 && yDivisor % 2 == 0) {\n            if xDivisor > yDivisor\
    \ {\n                result = xDivisor\n            } else {\n               \
    \ result = yDivisor\n            }\n        }\n        xDivisor = xDivisor / 2\n\
    \        yDivisor = yDivisor / 2\n    }\n    return result", "    if x < y {\n\
    \        return choose_num(y, x)\n    }\n    \n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    \n    for i in 0..<y {\n        if i % 2 == 0 {\n        \
    \    even += i\n        } else {\n            odd += i\n        }\n    }\n   \
    \ \n    if even > x {\n        return even\n    }\n    \n    return odd", "  \
    \  if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var result: Int = 0\n\
    \    \n    for _ in 0..<(x-y) {\n        result += 2\n    }\n    \n    if result\
    \ > y {\n        return -1\n    }\n    \n    return result", "    if x <= y {\n\
    \        return -1\n    }\n    var result = x\n    for _ in 0..<y {\n        if\
    \ result % 2 == 0 {\n            return result\n        }\n        result /= 2\n\
    \    }\n    return -1", "    if x <= y {\n        return -1\n    }\n    \n   \
    \ var result = x\n    \n    while result < y {\n        if result % 2 == 0 {\n\
    \            return result\n        }\n        result += 1\n    }\n    \n    return\
    \ result", "    if x < y {\n        return -1\n    }\n    \n    var even = Int()\n\
    \    var odd = Int()\n    \n    for _ in 0..<(x-y) {\n        even = even + 2\n\
    \        odd = odd + 2\n    }\n    \n    if even > y {\n        return even\n\
    \    }\n    \n    if odd > y {\n        return odd\n    }\n    \n    return -1",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y - x) / 2\n   \
    \ }\n    if x % 2 == 0 {\n        return x - 1\n    }\n    if y % 2 == 0 {\n \
    \       return y + 1\n    }\n    return -1", "    if x <= y {\n        return\
    \ -1\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for\
    \ _ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 2\n    }\n  \
    \  \n    if even > y {\n        return even\n    }\n    \n    return odd", " \
    \   var result = -1\n    if x > y {\n        result = x\n    } else {\n      \
    \  result = y\n    }\n    while result > 0 && result % 2 == 0 {\n        result\
    \ /= 2\n    }\n    return result", "    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return choose_num(x / 2, y / 2)", "    if x <= y {\n    \
    \    return -1\n    }\n    var result = x\n    var remainder = y\n    while remainder\
    \ > 0 {\n        if remainder % 2 == 0 {\n            result = result + 1\n  \
    \      }\n        remainder = remainder / 2\n    }\n    return result", "    if\
    \ x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n    var\
    \ odd: Int = 0\n    \n    for _ in 0..<(x-y) {\n        even = even + 2\n    \
    \    odd = odd + 1\n    }\n    \n    if even > y {\n        return -1\n    }\n\
    \    \n    return even", "    if x < y {\n        return -1\n    }\n    var result\
    \ = x\n    for _ in 0..<y {\n        if result % 2 == 0 {\n            result\
    \ = result / 2\n        } else {\n            break\n        }\n    }\n    return\
    \ result", "    var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var\
    \ xx = x * x\n    var yy = y * y\n    var xy = x * y\n    while (xx < yy) {\n\
    \        if (xy > result) {\n            result = xy\n        }\n        xy +=\
    \ x\n    }\n    return result", "    if x > y {\n        (x, y) = (y, x)\n   \
    \ }\n    \n    var result: Int = 0\n    \n    for _ in 0..<(x-y) {\n        result\
    \ += 2\n    }\n    \n    if result > x {\n        result = x\n    }\n    \n  \
    \  return result", "    if x <= y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2,\
    \ y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n\
    \    return choose_num(x / 2, y / 2)", "    if x < y {\n        swap(x, y)\n \
    \   }\n    var result = -1\n    var even = 1\n    var odd = 1\n    for _ in 0..<(x-y)\
    \ {\n        if even % 2 == 0 {\n            even = even + 2\n        } else {\n\
    \            odd = odd + 1\n        }\n    }\n    if even > odd {\n        result\
    \ = even\n    } else {\n        result = odd\n    }\n    return result", "   \
    \ if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    if x % 2 == 0 && y % 2 == 0 {\n        return (x * y) / 2\n    }\n\
    \    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n     \
    \   return y / 2\n    }\n    return -1", "    var result = -1\n    var x = abs(x)\n\
    \    var y = abs(y)\n    var xMinusY = x - y\n    var yMinusX = y - x\n    \n\
    \    if xMinusY < 0 {\n        result = x\n    } else {\n        result = y\n\
    \    }\n    \n    if yMinusX < 0 {\n        result = y\n    } else {\n       \
    \ result = x\n    }\n    \n    return result", "    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    return choose_num(x, y / 2)",
  "    if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n \
    \   }\n    var even = Int()\n    var odd = Int()\n    var biggest = Int()\n  \
    \  for _ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n    \
    \    if even > biggest {\n            biggest = even\n        }\n        if odd\
    \ > biggest {\n            biggest = odd\n        }\n    }\n    return biggest",
  "    if x < y {\n        (x, y) = (y, x)\n    }\n    \n    var even: Int = 0\n \
    \   var odd: Int = 0\n    \n    for i in 0..<x {\n        if i % 2 == 0 {\n  \
    \          even += i\n        } else {\n            odd += i\n        }\n    }\n\
    \    \n    if even > y {\n        return even\n    } else {\n        return odd\n\
    \    }", "    if x < y {\n        (x, y) = (y, x)\n    }\n    var result = -1\n\
    \    var remainder = x - y\n    while remainder > 0 {\n        remainder /= 2\n\
    \        result++\n    }\n    return result", "    if x > y {\n        (x, y)\
    \ = (y, x)\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n \
    \   for i in 0..<y {\n        if x % 2 == 0 {\n            even = even + i\n \
    \       } else {\n            odd = odd + i\n        }\n    }\n    \n    if even\
    \ > odd {\n        return even\n    } else {\n        return odd\n    }", "  \
    \  if x < y {\n        return -1\n    }\n    var even = Int()\n    var odd = Int()\n\
    \    var result = Int()\n    \n    for _ in 0..<(x-y) {\n        even = even +\
    \ 2\n        odd = odd + 1\n    }\n    \n    if even > y {\n        result = y\n\
    \    } else {\n        result = even\n    }\n    \n    return result", "    if\
    \ x < y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2\
    \ == 0 {\n        return choose_num(x, y / 2)\n    }\n    return choose_num(x\
    \ / 2, y / 2)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n\
    \        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x\
    \ + y\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n        return x + 1\n    }\n\
    \    if x % 2 != 0 && y % 2 == 0 {\n        return x + 1\n    }\n    if x % 2\
    \ != 0 && y % 2 != 0 {\n        return x + y\n    }\n    return -1", "    var\
    \ result = -1\n    if x > y {\n        swap(x, y)\n    }\n    for var i = x; i\
    \ <= y; i++ {\n        if i % 2 == 0 {\n            result = i\n            break\n\
    \        }\n    }\n    return result", "    var result = -1\n    var xMin = x\n\
    \    var yMin = y\n    var xMax = y\n    var yMax = x\n    while xMin <= xMax\
    \ && yMin <= yMax {\n        if xMin % 2 == 0 && yMin % 2 == 0 {\n           \
    \ result = xMin\n            break\n        }\n        if xMin % 2 != 0 && yMin\
    \ % 2 != 0 {\n            result = xMin\n            break\n        }\n      \
    \  if xMin % 2 != 0 && yMin % 2 == 0 {\n            result = xMax\n          \
    \  break\n        }\n        if xMin % 2 == 0 && yMin % 2 != 0 {\n           \
    \ result = yMax\n            break\n        }\n        xMin++\n        yMin++\n\
    \        xMax--\n        yMax--\n    }\n    return result", "    if x < y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 && y % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 ==\
    \ 0 {\n        return y\n    }\n    return x", "    if x <= y {\n        return\
    \ -1\n    }\n    var result = x\n    for _ in 0..<y {\n        if result % 2 ==\
    \ 0 {\n            result = result / 2\n        } else {\n            return -1\n\
    \        }\n    }\n    return result", "    if x <= y {\n        return -1\n \
    \   }\n    \n    var result = x\n    \n    for _ in 0..<y {\n        if result\
    \ % 2 == 0 {\n            result = result / 2\n        } else {\n            break\n\
    \        }\n    }\n    \n    return result", "    var result = -1\n    var x =\
    \ abs(x)\n    var y = abs(y)\n    var xx = x * x\n    var yy = y * y\n    var\
    \ xy = x * y\n    while xx <= yy {\n        if xx <= xy {\n            result\
    \ = x\n            break\n        } else {\n            result = y\n         \
    \   break\n        }\n        xx = xx * x\n        yy = yy * y\n        xy = xy\
    \ * x\n    }\n    return result", "    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return\
    \ choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return choose_num(x + 1, y)", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y\
    \ % 2 == 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0 {\n       \
    \ return x + y\n    }\n    return x - y", "    if x < y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n      \
    \  return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    return choose_num(x + 1, y)", "    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n        return\
    \ choose_num(x, y / 2)\n    }\n    return choose_num(x / 2, y / 2)", "    if x\
    \ < y {\n        return choose_num(y, x)\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 ==\
    \ 0 {\n        return y / 2\n    }\n    if x > y {\n        return choose_num(y,\
    \ x)\n    }\n    return -1", "    if x <= y {\n        return -1\n    }\n    \n\
    \    var biggest = y\n    \n    for number in stride(from: x, through: y, by:\
    \ 2) {\n        if number % 2 == 0 {\n            biggest = number\n        }\n\
    \    }\n    \n    return biggest", "    if x <= y {\n        return -1\n    }\n\
    \    var even = Int()\n    var odd = Int()\n    var result = Int()\n    var x\
    \ = Int()\n    var y = Int()\n    \n    for x in stride(from: x, through: y, by:\
    \ 2) {\n        if x % 2 == 0 {\n            even = x\n        } else {\n    \
    \        odd = x\n        }\n        if even > y {\n            break\n      \
    \  }\n        if odd > y {\n            break\n        }\n    }\n    if even >\
    \ y {\n        return -1\n    }\n    if odd > y {\n        return -1\n    }\n\
    \    result = even\n    return result", "    if x > y {\n        (x, y) = (y,\
    \ x)\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n    \n    for\
    \ i in 0..<y {\n        if x % 2 == 0 {\n            even = even * 2 + 1\n   \
    \     } else {\n            odd = odd * 2 + 1\n        }\n        \n        x\
    \ /= 2\n    }\n    \n    if even > odd {\n        return even\n    } else {\n\
    \        return odd\n    }", "    if x < y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n     \
    \   return x + (y - x)\n    }\n    if x % 2 == 0 {\n        return x + y\n   \
    \ }\n    if y % 2 == 0 {\n        return x - y\n    }\n    return -1", "    if\
    \ x < y {\n        return -1\n    }\n    \n    var result = x\n    \n    for _\
    \ in 0..<y {\n        if result % 2 == 0 {\n            return result\n      \
    \  }\n        result *= 2\n    }\n    \n    return -1", "    if x <= y {\n   \
    \     return -1\n    }\n    \n    var even: Int = 0\n    var odd: Int = 0\n  \
    \  \n    for i in 0..<y {\n        if i % 2 == 0 {\n            even += i\n  \
    \      } else {\n            odd += i\n        }\n    }\n    \n    if even > x\
    \ {\n        return even\n    }\n    \n    return odd", "    var result = -1\n\
    \    \n    if x > y {\n        result = x\n    } else {\n        result = y\n\
    \    }\n    \n    if result % 2 == 0 {\n        return result\n    } else {\n\
    \        return -1\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    var result = -1\n    \n    for _ in 0..<y {\n        if x % 2 == 0\
    \ {\n            result = x\n            break\n        }\n        x /= 2\n  \
    \  }\n    \n    return result", "    if x < y {\n        return -1\n    }\n  \
    \  if x == y {\n        return x\n    }\n    var biggest = y\n    for _ in 0..<(x-y)\
    \ {\n        biggest = biggest * 2\n    }\n    return biggest", "    var result\
    \ = -1\n    var x = abs(x)\n    var y = abs(y)\n    var xMin = min(x, y)\n   \
    \ var yMin = min(x, y)\n    var xMax = max(x, y)\n    var yMax = max(x, y)\n \
    \   if xMin == yMin {\n        if xMax == yMax {\n            if xMax == x {\n\
    \                result = x\n            } else {\n                result = y\n\
    \            }\n        } else {\n            if yMax == y {\n               \
    \ result = x\n            } else {\n                result = y\n            }\n\
    \        }\n    } else {\n        if xMax == x {\n            result = x\n   \
    \     } else {\n            result = y\n        }\n    }\n    return result",
  "    if x <= y {\n        return -1\n    }\n    var result = x\n    var remainder\
    \ = y\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n          \
    \  result = result * 10 + remainder / 2\n        }\n        remainder = remainder\
    \ / 2\n    }\n    return result", "    var result = -1\n    if x > y {\n     \
    \   result = x\n    } else {\n        result = y\n    }\n    while result > 0\
    \ && result % 2 == 0 {\n        result /= 2\n    }\n    return result", "    var\
    \ result = -1\n    var x = abs(x)\n    var y = abs(y)\n    var xx = x * x\n  \
    \  var yy = y * y\n    var xy = x * y\n    var xx = xx\n    var yy = yy\n    var\
    \ xy = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n\
    \    var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n    var xx = xx\n \
    \   var yy = yy\n    var xy = xy\n    var xx = xx\n    var yy = yy\n    var xy\
    \ = xy\n    var xx = xx\n    var yy = yy\n    var xy = xy\n", "    if x < y {\n\
    \        (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    for _ in 0..<(x-y) {\n        even = even + 2\n        odd = odd + 1\n  \
    \  }\n    if even > y {\n        return -1\n    }\n    return even % y", "   \
    \ if x < y {\n        return -1\n    }\n    \n    var result = x\n    \n    for\
    \ _ in 0..<y {\n        if result % 2 == 0 {\n            return result\n    \
    \    }\n        result += 1\n    }\n    \n    return -1", "    if x <= y {\n \
    \       return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <=\
    \ y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n  \
    \  if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y\
    \ {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n    }\n\
    \    if x == y {\n        return x\n    }\n    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y {\n     \
    \   return -1\n    }\n    if x == y {\n        return x\n    }\n    if x <= y\
    \ {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n    if\
    \ x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n    }\n\
    \    if x <= y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    if x <= y {\n        return -1\n    }\n    if x == y {\n     \
    \   return x\n    }", "    if x < y {\n        return choose_num(y, x)\n    }\n\
    \    \n    if x == y {\n        return x\n    }\n    \n    if x % 2 == 0 {\n \
    \       return choose_num(x / 2, y)\n    }\n    \n    return choose_num(x / 2,\
    \ y)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n        return\
    \ x\n    }\n    var even: Int = 0\n    var odd: Int = 0\n    for _ in 0..<(x-y)\
    \ {\n        even = even + 2\n        odd = odd + 1\n    }\n    if even > odd\
    \ {\n        return even\n    }\n    return odd", "    if x <= y {\n        return\
    \ -1\n    }\n    \n    var result = x\n    \n    for _ in 0..<y {\n        if\
    \ result % 2 == 0 {\n            return result\n        }\n        result *= 2\n\
    \    }\n    \n    return -1", "    var result = -1\n    var x = abs(x)\n    var\
    \ y = abs(y)\n    while x <= y {\n        if x % 2 == 0 && y % 2 == 0 {\n    \
    \        if x > y {\n                result = x\n            } else {\n      \
    \          result = y\n            }\n            break\n        }\n        x\
    \ += 1\n        y -= 1\n    }\n    return result", "    if x <= y {\n        return\
    \ -1\n    }\n    var result = x\n    var remainder = y\n    while remainder >\
    \ 0 {\n        if remainder % 2 == 0 {\n            result = remainder\n     \
    \       break\n        }\n        remainder /= 2\n    }\n    return result", " \
    \   if x < y {\n        return -1\n    }\n    if x == y {\n        return x\n\
    \    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n    }\n\
    \    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n    if x % 2 !=\
    \ 0 && y % 2 == 0 {\n        return -1\n    }\n    if x % 2 != 0 && y % 2 != 0\
    \ {\n        return x + (y / 2)\n    }\n    return -1", "    if x <= y {\n   \
    \     return -1\n    }\n    var biggest = y\n    for number in stride(from: x,\
    \ through: y, by: 2) {\n        if number % 2 == 0 {\n            biggest = number\n\
    \        }\n    }\n    return biggest", "    if x <= y {\n        return -1\n\
    \    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 && y % 2 ==\
    \ 0 {\n        return x + (y - x)\n    }\n    if x % 2 == 0 {\n        return\
    \ y\n    }\n    return x", "    var even: Int = 0\n    var odd: Int = 0\n    var\
    \ biggest: Int = 0\n    \n    if x > y {\n        biggest = y\n        odd = x\n\
    \        even = y\n    } else {\n        biggest = x\n        even = x\n     \
    \   odd = y\n    }\n    \n    while even > 0 {\n        if even % 2 == 0 {\n \
    \           biggest = even\n            even /= 2\n        } else {\n        \
    \    odd *= 2\n        }\n    }\n    \n    return biggest", "    if x < y {\n\
    \        return choose_num(y, x)\n    }\n    \n    if x == y {\n        return\
    \ x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y / 2)\n\
    \    }\n    \n    if x % 2 == 0 && y % 2 != 0 {\n        return choose_num(x /\
    \ 2, y)\n    }\n    \n    if x % 2 != 0 && y % 2 == 0 {\n        return choose_num(x,\
    \ y / 2)\n    }\n    \n    if x % 2 != 0 && y % 2 != 0 {\n        return choose_num(x\
    \ / 2, y / 2)\n    }\n    \n    return -1", "    var result = -1\n    var x =\
    \ abs(x)\n    var y = abs(y)\n    var xx = x * x\n    var yy = y * y\n    var\
    \ xy = x * y\n    while (xx < yy) {\n        if (xy > result) {\n            result\
    \ = xy\n        }\n        xy += x\n    }\n    return result", "    if x < y {\n\
    \        (x, y) = (y, x)\n    }\n    var even: Int = 0\n    var odd: Int = 0\n\
    \    var x: Int = 0\n    var y: Int = 0\n    for _ in 0..<(x-y) {\n        x +=\
    \ 2\n        y += 2\n        if x % 2 == 0 {\n            even += x\n        }\
    \ else {\n            odd += x\n        }\n    }\n    if even > y {\n        return\
    \ even\n    } else {\n        return odd\n    }", "    if x < y {\n        return\
    \ choose_num(y, x)\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 {\n        return x / 2\n    }\n    if y % 2 == 0 {\n        return\
    \ y / 2\n    }\n    if x > y {\n        return choose_num(y, x)\n    }\n    return\
    \ -1", "    if x < y {\n        return choose_num(y, x)\n    }\n    \n    if x\
    \ == y {\n        return x\n    }\n    \n    if x % 2 == 0 && y % 2 == 0 {\n \
    \       return x + (y / 2)\n    }\n    \n    if x % 2 == 0 && y % 2 != 0 {\n \
    \       return -1\n    }\n    \n    if x % 2 != 0 && y % 2 == 0 {\n        return\
    \ -1\n    }\n    \n    if x % 2 != 0 && y % 2 != 0 {\n        return choose_num(x\
    \ - 1, y - 1)\n    }\n    \n    return -1", "    if x <= y {\n        return -1\n\
    \    }\n    var even: Int = 0\n    var odd: Int = 0\n    var x: Int = 0\n    var\
    \ y: Int = 0\n    var evenMax: Int = 0\n    var oddMax: Int = 0\n    var evenMin:\
    \ Int = 0\n    var oddMin: Int = 0\n    var evenMaxCount: Int = 0\n    var oddMaxCount:\
    \ Int = 0\n    var evenMinCount: Int = 0\n    var oddMinCount: Int = 0\n    var\
    \ evenMaxSum: Int = 0\n    var oddMaxSum: Int = 0\n    var evenMinSum: Int = 0\n\
    \    var oddMinSum: Int = 0\n    var evenMaxMin: Int = 0\n    var oddMaxMin: Int\
    \ = 0\n    var evenMinMin: Int = 0\n    var oddMinMin: Int = 0\n    var evenMaxMax:\
    \ Int = 0\n    var oddMaxMax: Int = 0\n    var evenMinMax: Int = 0\n    var oddMinMax:\
    \ Int = 0\n    var evenMaxAvg: Int = 0\n    var oddMaxAvg: Int = 0\n    var evenMinAvg:\
    \ Int = 0\n    var oddMinAvg: Int = 0\n    var evenMaxMinAvg: Int = 0\n    var\
    \ oddMaxMinAvg: Int = 0\n    var evenMinMinAvg: Int = 0\n    var oddMinMinAvg:\
    \ Int = 0\n    var evenMaxMaxAvg: Int = 0\n    var oddMaxMaxAvg: Int = 0\n   \
    \ var evenMinMaxAvg: Int = 0\n    var oddMinMaxAvg: Int = 0\n    var evenMaxMinAvg:\
    \ Int = 0\n    var oddMaxMinAvg: Int = 0\n    var evenMinMinAvg: Int = 0\n   \
    \ var oddMinMinAvg: Int = 0\n    var evenMaxMaxSum: Int = 0\n    var oddMaxMaxSum:\
    \ Int = 0\n    var evenMinMaxSum: Int = 0\n    var oddMinMaxSum: Int = 0\n   \
    \ var evenMaxMinSum: Int = 0\n    var oddMaxMinSum: Int = 0\n    var evenMinMinSum:\
    \ Int = 0\n    var oddMinMinSum: Int = 0\n    var evenMaxMaxMin: Int = 0\n   \
    \ var oddMaxMaxMin: Int = 0\n    var evenMinMaxMin: Int = 0\n    var oddMinMaxMin:\
    \ Int = 0\n    var evenMaxMinMin: Int = 0\n    var oddMaxMinMin: Int = 0\n   \
    \ var evenMaxMaxMax: Int = 0\n    var oddMaxMaxMax: Int = 0\n    var evenMinMaxMax:\
    \ Int = 0\n    var oddMinMaxMax: Int = 0\n    var evenMinMinMax: Int = 0\n   \
    \ var oddMinMinMax: Int = 0\n    var evenMaxMin", "    if x < y {\n        return\
    \ -1\n    }\n    if x == y {\n        return x\n    }\n    if x % 2 == 0 {\n \
    \       return choose_num(x: x, y: y - 1)\n    }\n    return choose_num(x: x -\
    \ 1, y: y)", "    if x <= y {\n        return -1\n    }\n    if x == y {\n   \
    \     return x\n    }\n    if x % 2 == 0 && y % 2 == 0 {\n        return x + (y\
    \ / 2)\n    }\n    if x % 2 == 0 && y % 2 != 0 {\n        return -1\n    }\n \
    \   if x % 2 != 0 && y % 2 == 0 {\n        return -1\n    }\n    if x % 2 != 0\
    \ && y % 2 != 0 {\n        return x + (y / 2)\n    }\n    return -1", "    var\
    \ result = -1\n    var x = abs(x)\n    var y = abs(y)\n    if x > y {\n      \
    \  result = x\n    } else {\n        result = y\n    }\n    if result > 0 {\n\
    \        if result % 2 == 0 {\n            return result\n        } else {\n \
    \           return -1\n        }\n    } else {\n        if result % 2 == 1 {\n\
    \            return result\n        } else {\n            return -1\n        }\n\
    \    }", "    var result = -1\n    if x > y {\n        result = x\n    } else\
    \ {\n        result = y\n    }\n    if result % 2 == 0 {\n        return result\n\
    \    }\n    var remainder = result % 2\n    while remainder == 0 {\n        remainder\
    \ = result % 2\n        result = result / 2\n    }\n    return result", "    if\
    \ x <= y {\n        return -1\n    }\n    var result = x\n    var remainder =\
    \ y\n    while remainder > 0 {\n        if remainder % 2 == 0 {\n            result\
    \ = result * 10 + remainder / 2\n        }\n        remainder = remainder / 2\n\
    \    }\n    return result", "    if x < y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ + 1, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y + 1)\n \
    \   }\n    return choose_num(x + 1, y + 1)", "    if x < y {\n        return -1\n\
    \    }\n    var result = x\n    var remainder = y\n    while remainder > 0 {\n\
    \        if remainder % 2 == 0 {\n            result = result * 10 + remainder\
    \ / 2\n        }\n        remainder = remainder / 2\n    }\n    return result",
  "    var result = -1\n    if x > y {\n        result = x\n    } else {\n       \
    \ result = y\n    }\n    while result > 0 && result % 2 == 0 {\n        result\
    \ = result / 2\n    }\n    return result", "    var result = -1\n    if x > y\
    \ {\n        result = x\n    } else {\n        result = y\n    }\n    while result\
    \ > 0 && result % 2 == 0 {\n        result /= 2\n    }\n    return result", " \
    \   var result = -1\n    var x = abs(x)\n    var y = abs(y)\n    while x <= y\
    \ {\n        if x % 2 == 0 && y % 2 == 0 {\n            if x > y {\n         \
    \       result = x\n            } else {\n                result = y\n       \
    \     }\n            break\n        }\n        x += 1\n        y -= 1\n    }\n\
    \    return result", "    var even: Int = 0\n    var odd: Int = 0\n    var x:\
    \ Int\n    var y: Int\n    var evenMax: Int\n    var oddMax: Int\n    \n    if\
    \ x < y {\n        x = y\n        y = x\n    }\n    \n    for x in stride(from:\
    \ x, to: y, by: 2) {\n        if x % 2 == 0 {\n            even = even + x\n \
    \           if even > evenMax {\n                evenMax = even\n            }\n\
    \        } else {\n            odd = odd + x\n            if odd > oddMax {\n\
    \                oddMax = odd\n            }\n        }\n    }\n    \n    if evenMax\
    \ == evenMax {\n        return evenMax\n    }\n    \n    return -1", "    var\
    \ result = -1\n    if x > y {\n        result = x\n    } else {\n        result\
    \ = y\n    }\n    while result > 0 && result % 2 == 0 {\n        result /= 2\n\
    \    }\n    return result", "    var result = -1\n    if x > y {\n        result\
    \ = x\n    } else {\n        result = y\n    }\n    if result % 2 == 0 {\n   \
    \     return result\n    }\n    return -1"]
stop_tokens:
- "\n}"

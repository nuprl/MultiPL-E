language: swift
name: HumanEval_157_right_angle_triangle
results:
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bca\n    let abbc = ab + bc\n    let abbb = abbc + ab\n\
    \    let abbba = abbb + ab\n    let abbbc = abbbc + ab\n    let abbbca = abbbc\
    \ + ab\n    let abbbbc = abbbc + ab\n    let abbbbca = abbbbc + ab\n    let abbbbcbc\
    \ = abbbbc + ab\n    let abbbbcbca = abbbbcbc + ab\n    let abbbbcbcab = abbbbcbca\
    \ + ab\n    let abbbbcbcaba = abbbbcbcab + ab\n    let abbbbcbcabab = abbbbcbcaba\
    \ + ab\n    let abbbbcbcababc = abbbbcbcabab + ab\n    let abbbbcbcababca = abbbbcbcababca\
    \ + ab\n    let abbbbcbcababcab = abbbbcbcababca + ab\n    let abbbbcbcababcabc\
    \ = abbbbcbcababcab + ab\n    let abbbbcbcababcabca = abbbbcbcababcabca + ab\n\
    \    let abbbbcbcababcabcab = abbbbcbcababcabca + ab\n    let abbbbcbcababcabcabc\
    \ = abbbbcbcababcabcab + ab\n    let abbbbcbcababcabcabca = abbbbcbcababcabcabca\
    \ + ab\n    let abbbbcbcababcabcabcab = abbbbcbcababcabcabca + ab\n    let abbbbcbcababcabcabcabc\
    \ = abbbbcbcababcabcabcab + ab\n    let abbbbcbcababcabcabcabca = abbbbcbcababcabcabcabca\
    \ + ab\n    let abbbbcbcababcabcabcabcab = abbbbcbcababcabcabcabca + ab\n    let\
    \ abbbbcbcababcabcabcabcabc = abbbbcbcababcabcabcabcab + ab\n    let abbbbcbcababcabcabcabcabca\
    \ = abbbbcbcababcabcabcabcabca + ab\n    let abbbbcbcababcabcabcabcabcab = abbbbcbcabab\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpfegfm6yd.swift:21:17: error: use of local variable 'abbbc' before\
    \ its declaration\n    let abbbc = abbbc + ab\n                ^\n/tmp/tmpfegfm6yd.swift:21:9:\
    \ note: 'abbbc' declared here\n    let abbbc = abbbc + ab\n        ^\n/tmp/tmpfegfm6yd.swift:31:26:\
    \ error: use of local variable 'abbbbcbcababca' before its declaration\n    let\
    \ abbbbcbcababca = abbbbcbcababca + ab\n                         ^\n/tmp/tmpfegfm6yd.swift:31:9:\
    \ note: 'abbbbcbcababca' declared here\n    let abbbbcbcababca = abbbbcbcababca\
    \ + ab\n        ^\n/tmp/tmpfegfm6yd.swift:34:29: error: use of local variable\
    \ 'abbbbcbcababcabca' before its declaration\n    let abbbbcbcababcabca = abbbbcbcababcabca\
    \ + ab\n                            ^\n/tmp/tmpfegfm6yd.swift:34:9: note: 'abbbbcbcababcabca'\
    \ declared here\n    let abbbbcbcababcabca = abbbbcbcababcabca + ab\n        ^\n\
    /tmp/tmpfegfm6yd.swift:37:32: error: use of local variable 'abbbbcbcababcabcabca'\
    \ before its declaration\n    let abbbbcbcababcabcabca = abbbbcbcababcabcabca\
    \ + ab\n                               ^\n/tmp/tmpfegfm6yd.swift:37:9: note: 'abbbbcbcababcabcabca'\
    \ declared here\n    let abbbbcbcababcabcabca = abbbbcbcababcabcabca + ab\n  \
    \      ^\n/tmp/tmpfegfm6yd.swift:40:35: error: use of local variable 'abbbbcbcababcabcabcabca'\
    \ before its declaration\n    let abbbbcbcababcabcabcabca = abbbbcbcababcabcabcabca\
    \ + ab\n                                  ^\n/tmp/tmpfegfm6yd.swift:40:9: note:\
    \ 'abbbbcbcababcabcabcabca' declared here\n    let abbbbcbcababcabcabcabca = abbbbcbcababcabcabcabca\
    \ + ab\n        ^\n/tmp/tmpfegfm6yd.swift:43:38: error: use of local variable\
    \ 'abbbbcbcababcabcabcabcabca' before its declaration\n    let abbbbcbcababcabcabcabcabca\
    \ = abbbbcbcababcabcabcabcabca + ab\n                                     ^\n\
    /tmp/tmpfegfm6yd.swift:43:9: note: 'abbbbcbcababcabcabcabcabca' declared here\n\
    \    let abbbbcbcababcabcabcabcabca = abbbbcbcababcabcabcabcabca + ab\n      \
    \  ^\n"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        swap(&a, &b)\n    }\n\
    \    if a > c {\n        swap(&a, &c)\n    }\n    if b > c {\n        swap(&b,\
    \ &c)\n    }\n    return a == b == c\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp79jwfr53.swift:13:14: error: cannot pass immutable value as inout\
    \ argument: 'a' is a 'let' constant\n        swap(&a, &b)\n             ^~\n/tmp/tmp79jwfr53.swift:13:18:\
    \ error: cannot pass immutable value as inout argument: 'b' is a 'let' constant\n\
    \        swap(&a, &b)\n                 ^~\n/tmp/tmp79jwfr53.swift:16:14: error:\
    \ cannot pass immutable value as inout argument: 'a' is a 'let' constant\n   \
    \     swap(&a, &c)\n             ^~\n/tmp/tmp79jwfr53.swift:16:18: error: cannot\
    \ pass immutable value as inout argument: 'c' is a 'let' constant\n        swap(&a,\
    \ &c)\n                 ^~\n/tmp/tmp79jwfr53.swift:19:14: error: cannot pass immutable\
    \ value as inout argument: 'b' is a 'let' constant\n        swap(&b, &c)\n   \
    \          ^~\n/tmp/tmp79jwfr53.swift:19:18: error: cannot pass immutable value\
    \ as inout argument: 'c' is a 'let' constant\n        swap(&b, &c)\n         \
    \        ^~\n/tmp/tmp79jwfr53.swift:21:14: error: adjacent operators are in non-associative\
    \ precedence group 'ComparisonPrecedence'\n    return a == b == c\n          \
    \   ^    ~~\n/tmp/tmp79jwfr53.swift:21:19: error: binary operator '==' cannot\
    \ be applied to operands of type 'Bool' and 'Int'\n    return a == b == c\n  \
    \         ~~~~~~ ^  ~\n/tmp/tmp79jwfr53.swift:21:19: note: overloads for '=='\
    \ exist with these partially matching parameter lists: (Bool, Bool), (Int, Int)\n\
    \    return a == b == c\n                  ^\n"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac + bc\n    return abc >\
    \ ab\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(right_angle_triangle(a: 3, b:\
    \ 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpx2ds4ygf/tmpx2ds4ygf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae320ecfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae320bc6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae320bc6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae320bc57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx2ds4ygf                        0x000055c38afc932b <unavailable> + 4907

    5    libc.so.6                          0x00002ae3210bb460 __libc_start_main +
    245

    6    tmpx2ds4ygf                        0x000055c38afc8f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a == 0 || b == 0 || c == 0 {\n      \
    \  return false\n    }\n    let ab = abs(b - a)\n    let ac = abs(c - a)\n   \
    \ let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n    let abca\
    \ = abc + bc\n    let acab = ac + ab\n    let acbc = ac + bc\n    let abcab =\
    \ abc + ab\n    let abcbc = abc + bc\n    let acbca = ac + bc\n    let accab =\
    \ ac + ab\n    let accabc = ac + abc\n    let abcabc = abc + abc\n    let abcbca\
    \ = abc + bca\n    let abcabca = abc + cab\n    let abcabcab = abc + cab\n   \
    \ let abcabcabc = abc + cabc\n    let abcabcabca = abc + cabca\n    let abcabcabcab\
    \ = abc + cabcab\n    let abcabcabcabc = abc + cabcabc\n    let abcabcabcabca\
    \ = abc + cabcabca\n    let abcabcabcabcab = abc + cabcabcab\n    let abcabcabcabcabc\
    \ = abc + cabcabcabc\n    let abcabcabcabcabca = abc + cabcabcabca\n    let abcabcabcabcabcab\
    \ = abc + cabcabcabcab\n    let abcabcabcabcabcabc = abc + cabcabcabcabc\n   \
    \ let abcabcabcabcabcabca = abc + cabcabcabcabcab\n    let abcabcabcabcabcabcab\
    \ = abc + cabcabcabcabcab\n    let abcabcabcabcabcabcabc = abc + cabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabca = abc + cabcabcabcabcabcab\n    let abcabcabcabcabcabcabcab\
    \ = abc + cabcabcabcabcabcabcab\n    let abcabcabcabcabcabcabcabc = abc + cabcabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabcabca = abc + cabcabcabcabcabcabcabcab\n    let abcabcabcabcabcabcabcabcab\
    \ = abc + cabcabcabcabcabcabcabcab\n    let abcabcabcabcabcabcabcabcabc = abc\
    \ + cabcabcabcabcabcabcabcabc\n    let abcabcabcabcabcabcabcabcabca = abc + cabcabcabcabcabcabcabcabcab\n\
    \    let abcabcabcabcabcabcabcabcabcab = abc + cabcabcabcabcabcabcabcabcabcab\n\
    \    let abcab\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpg05tpalp.swift:30:25: error: cannot find 'cab' in scope\n    let\
    \ abcabca = abc + cab\n                        ^~~\n/tmp/tmpg05tpalp.swift:31:26:\
    \ error: cannot find 'cab' in scope\n    let abcabcab = abc + cab\n          \
    \               ^~~\n/tmp/tmpg05tpalp.swift:32:27: error: cannot find 'cabc' in\
    \ scope\n    let abcabcabc = abc + cabc\n                          ^~~~\n/tmp/tmpg05tpalp.swift:33:28:\
    \ error: cannot find 'cabca' in scope\n    let abcabcabca = abc + cabca\n    \
    \                       ^~~~~\n/tmp/tmpg05tpalp.swift:34:29: error: cannot find\
    \ 'cabcab' in scope\n    let abcabcabcab = abc + cabcab\n                    \
    \        ^~~~~~\n/tmp/tmpg05tpalp.swift:35:30: error: cannot find 'cabcabc' in\
    \ scope\n    let abcabcabcabc = abc + cabcabc\n                             ^~~~~~~\n\
    /tmp/tmpg05tpalp.swift:36:31: error: cannot find 'cabcabca' in scope\n    let\
    \ abcabcabcabca = abc + cabcabca\n                              ^~~~~~~~\n/tmp/tmpg05tpalp.swift:37:32:\
    \ error: cannot find 'cabcabcab' in scope\n    let abcabcabcabcab = abc + cabcabcab\n\
    \                               ^~~~~~~~~\n/tmp/tmpg05tpalp.swift:38:33: error:\
    \ cannot find 'cabcabcabc' in scope\n    let abcabcabcabcabc = abc + cabcabcabc\n\
    \                                ^~~~~~~~~~\n/tmp/tmpg05tpalp.swift:39:34: error:\
    \ cannot find 'cabcabcabca' in scope\n    let abcabcabcabcabca = abc + cabcabcabca\n\
    \                                 ^~~~~~~~~~~\n/tmp/tmpg05tpalp.swift:40:35: error:\
    \ cannot find 'cabcabcabcab' in scope\n    let abcabcabcabcabcab = abc + cabcabcabcab\n\
    \                                  ^~~~~~~~~~~~\n/tmp/tmpg05tpalp.swift:41:36:\
    \ error: cannot find 'cabcabcabcabc' in scope\n    let abcabcabcabcabcabc = abc\
    \ + cabcabcabcabc\n                                   ^~~~~~~~~~~~~\n/tmp/tmpg05tpalp.swift:42:37:\
    \ error: cannot find 'cabcabcabcabcab' in scope\n    let abcabcabcabcabcabca =\
    \ abc + cabcabcabcabcab\n                                    ^~~~~~~~~~~~~~~\n\
    /tmp/tmpg05tpalp.swift:43:38: error: cannot find 'cabcabcabcabcab' in scope\n\
    \    let abcabcabcabcabcabcab = abc + cabcabcabcabcab\n  "
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        return false\n    }\n\
    \    if a > c {\n        return false\n    }\n    if b > c {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpt5qvo_3a/tmpt5qvo_3a.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b54188a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b541859cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b541859c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b541859b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt5qvo_3a                        0x000055f8a353523b <unavailable> + 4667

    5    libc.so.6                          0x00002b5418a91460 __libc_start_main +
    245

    6    tmpt5qvo_3a                        0x000055f8a3534e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abbc = abc + bc\n    let abcab = abbc + abc\n    let bcabc = bcac + bca\n\
    \    let abcabc = abcabc + abcab\n    let bcabcab = bcabc + bcab\n    let abcabcabc\
    \ = abcabcabc + abcabcab\n    let bcabcabcabc = bcabcabc + bcabcab\n    let abcabcabcabc\
    \ = abcabcabc + abcabcabcab\n    let bcabcabcabcabc = bcabcabc + bcabcabcabc\n\
    \    let abcabcabcabcabc = abcabcabcabc + abcabcabcabcabc\n    let bcabcabcabcabcabc\
    \ = bcabcabcabc + bcabcabcabcabc\n    let abcabcabcabcabcabc = abcabcabcabcabc\
    \ + abcabcabcabcabcabc\n    let bcabcabcabcabcabcabc = bcabcabcabcabc + bcabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabc = abcabcabcabcabcabc + abcabcabcabcabcabcabc\n\
    \    let bcabcabcabcabcabcabcabc = bcabcabcabcabcabc + bcabcabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabcabc = abcabcabcabcabcabcabcabc + abcabcabcabcabcabcabcabc\n\
    \    let bcabcabcabcabcabcabcabcabc = bcabcabcabcabcabcabcabc + bcabcabcabcabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabcabcabc = abcabcabcabcabcabcabcabcabc + abcabcabcabcabcabcabcabcabc\n\
    \    let bcabcabcabcabcabcabcabcabcabc = bcabcabcabcabcabcabcabcabcabc + bcabcabcabcabcabcabcabcabc\n\
    \    let abcabcabcabcabcabcabcabcabcabc = abcabcabcabcabcabcabcabcabcabc + abcabcabcabcabcabcabcabcabcabc\n\
    \    let bcabcabcabcabcabcabcabcabcabcabc = bcabcabcabcabcabcabcabcabcabcabc +\
    \ bcabcabcabcabcabcabcabcabcabc\n    let abcabcabcabcabcabcabcabcabcabcabc = abcabcabcabcabcabcabcabcabcabcabc\
    \ + abcabcabcabcabcabcabcabcabcabcab\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp771q_o0d.swift:19:17: error: cannot find 'bcac' in scope\n    let\
    \ bcabc = bcac + bca\n                ^~~~\n/tmp/tmp771q_o0d.swift:20:18: error:\
    \ use of local variable 'abcabc' before its declaration\n    let abcabc = abcabc\
    \ + abcab\n                 ^\n/tmp/tmp771q_o0d.swift:20:9: note: 'abcabc' declared\
    \ here\n    let abcabc = abcabc + abcab\n        ^\n/tmp/tmp771q_o0d.swift:21:27:\
    \ error: cannot find 'bcab' in scope\n    let bcabcab = bcabc + bcab\n       \
    \                   ^~~~\n/tmp/tmp771q_o0d.swift:22:21: error: use of local variable\
    \ 'abcabcabc' before its declaration\n    let abcabcabc = abcabcabc + abcabcab\n\
    \                    ^\n/tmp/tmp771q_o0d.swift:22:9: note: 'abcabcabc' declared\
    \ here\n    let abcabcabc = abcabcabc + abcabcab\n        ^\n/tmp/tmp771q_o0d.swift:22:33:\
    \ error: cannot find 'abcabcab' in scope\n    let abcabcabc = abcabcabc + abcabcab\n\
    \                                ^~~~~~~~\n/tmp/tmp771q_o0d.swift:23:23: error:\
    \ cannot find 'bcabcabc' in scope\n    let bcabcabcabc = bcabcabc + bcabcab\n\
    \                      ^~~~~~~~\n/tmp/tmp771q_o0d.swift:24:36: error: cannot find\
    \ 'abcabcabcab' in scope\n    let abcabcabcabc = abcabcabc + abcabcabcab\n   \
    \                                ^~~~~~~~~~~\n/tmp/tmp771q_o0d.swift:25:26: error:\
    \ cannot find 'bcabcabc' in scope\n    let bcabcabcabcabc = bcabcabc + bcabcabcabc\n\
    \                         ^~~~~~~~\n/tmp/tmp771q_o0d.swift:26:42: error: use of\
    \ local variable 'abcabcabcabcabc' before its declaration\n    let abcabcabcabcabc\
    \ = abcabcabcabc + abcabcabcabcabc\n                                         ^\n\
    /tmp/tmp771q_o0d.swift:26:9: note: 'abcabcabcabcabc' declared here\n    let abcabcabcabcabc\
    \ = abcabcabcabc + abcabcabcabcabc\n        ^\n/tmp/tmp771q_o0d.swift:28:48: error:\
    \ use of local variable 'abcabcabcabcabcabc' before its declaration\n    let abcabcabcabcabcabc\
    \ = abcabcabcabcabc + abcabcabcabcabcabc\n                                   \
    \            ^\n/tmp/tmp771q_o0d.swift:28:9: note: 'abcabcabcabcabcabc' declared\
    \ here\n    let abcabcabcabcabcabc = abcabcabcabcabc + abcabcabcabcabcabc\n"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = b - a\n    let b1 = c - b\n   \
    \ let c1 = a - c\n    return a1 * b1 + b1 * c1 == c1 * a1\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp9611mk5e/tmp9611mk5e.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b24cfc69c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b24cf960b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b24cf960988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24cf95f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9611mk5e                        0x000055ba0619b1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b24cfe55460 __libc_start_main +
    245

    6    tmp9611mk5e                        0x000055ba0619ae69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        return right_angle_triangle(b,\
    \ a, c)\n    }\n    if a > c {\n        return right_angle_triangle(c, a, b)\n\
    \    }\n    if b > c {\n        return right_angle_triangle(a, b, c) \n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp3ut23jba.swift:13:36: error: missing argument labels 'a:b:c:' in\
    \ call\n        return right_angle_triangle(b, a, c)\n                       \
    \            ^\n                                    a: b: c: \n/tmp/tmp3ut23jba.swift:16:36:\
    \ error: missing argument labels 'a:b:c:' in call\n        return right_angle_triangle(c,\
    \ a, b)\n                                   ^\n                              \
    \      a: b: c: \n/tmp/tmp3ut23jba.swift:19:36: error: missing argument labels\
    \ 'a:b:c:' in call\n        return right_angle_triangle(a, b, c) \n          \
    \                         ^\n                                    a: b: c: \n"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab == bc && ab == ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp0dcuyhke/tmp0dcuyhke.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0dcuyhke                        0x0000564af4a912ab <unavailable> + 4779

    5    libc.so.6                          0x00002b7ac4653460 __libc_start_main +
    245

    6    tmp0dcuyhke                        0x0000564af4a90f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = (a + b + c) / 2\n    let b1 = (a\
    \ + b - c) / 2\n    let c1 = (a - b - c) / 2\n    return a1 == b1 && b1 == c1\
    \ && c1 == a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpan3d7acp/tmpan3d7acp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b09a9ed2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b09a9bc9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b09a9bc9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b09a9bc87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpan3d7acp                        0x0000555f788b024b <unavailable> + 4683

    5    libc.so.6                          0x00002b09aa0be460 __libc_start_main +
    245

    6    tmpan3d7acp                        0x0000555f788afef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = a - b\n    let bc = b - c\n   \
    \ let cb = c - b\n    let abbc = ab * bc\n    let acbc = ac * bc\n    let abbcac\
    \ = abbc + acbc\n    let abbcacab = abbcac + abbc\n    let abbcacabc = abbcacab\
    \ + abbcac\n    let abbcacabcb = abbcacabc * abbc\n    let abbcacabcbb = abbcacabc\
    \ * abbcac\n    let abbcacabcbbc = abbcacabc * abbcac + abbcac\n    let abbcacabcbbcd\
    \ = abbcacabc * abbcac + abbcac + acbc\n    let abbcacabcbbcdc = abbcacabc * abbcac\
    \ + abbcac + acbc + bc\n    let abbcacabcbbcdcd = abbcacabc * abbcac + abbcac\
    \ + acbc + bc + cd\n    let abbcacabcbbcdcde = abbcacabc * abbcac + abbcac + acbc\
    \ + bc + cd + de\n    let abbcacabcbbcdcdef = abbcacabc * abbcac + abbcac + acbc\
    \ + bc + cd + de + f\n    let abbcacabcbbcdcdefg = abbcacabc * abbcac + abbcac\
    \ + acbc + bc + cd + de + f + g\n    let abbcacabcbbcdcdefgh = abbcacabc * abbcac\
    \ + abbcac + acbc + bc + cd + de + f + g + h\n    let abbcacabcbbcdcdefghi = abbcacabc\
    \ * abbcac + abbcac + acbc + bc + cd + de + f + g + h + i\n    let abbcacabcbbcdcdefghij\
    \ = abbcacabc * abbcac + abbcac + acbc + bc + cd + de + f + g + h + i + j\n  \
    \  let abbcacabcbbcdcdefghijk = abbcacabc * abbcac + abbcac + acbc + bc + cd +\
    \ de + f + g + h + i + j + k\n    let abbcacabcbbcdcdefghijkl = abbcacabc * abbcac\
    \ + abbcac + acbc + bc + cd + de + f + g + \n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpjhgdu2ky.swift:34:1: error: expected expression after operator\n\
    }\n^\n/tmp/tmpjhgdu2ky.swift:16:16: error: cannot find 'ac' in scope\n    let\
    \ acbc = ac * bc\n               ^~\n/tmp/tmpjhgdu2ky.swift:25:69: error: cannot\
    \ find 'cd' in scope\n    let abbcacabcbbcdcd = abbcacabc * abbcac + abbcac +\
    \ acbc + bc + cd\n                                                           \
    \         ^~\n/tmp/tmpjhgdu2ky.swift:26:70: error: cannot find 'cd' in scope\n\
    \    let abbcacabcbbcdcde = abbcacabc * abbcac + abbcac + acbc + bc + cd + de\n\
    \                                                                     ^~\n/tmp/tmpjhgdu2ky.swift:26:75:\
    \ error: cannot find 'de' in scope\n    let abbcacabcbbcdcde = abbcacabc * abbcac\
    \ + abbcac + acbc + bc + cd + de\n                                           \
    \                               ^~\n/tmp/tmpjhgdu2ky.swift:27:71: error: cannot\
    \ find 'cd' in scope\n    let abbcacabcbbcdcdef = abbcacabc * abbcac + abbcac\
    \ + acbc + bc + cd + de + f\n                                                \
    \                      ^~\n/tmp/tmpjhgdu2ky.swift:27:76: error: cannot find 'de'\
    \ in scope\n    let abbcacabcbbcdcdef = abbcacabc * abbcac + abbcac + acbc + bc\
    \ + cd + de + f\n                                                            \
    \               ^~\n/tmp/tmpjhgdu2ky.swift:27:81: error: cannot find 'f' in scope\n\
    \    let abbcacabcbbcdcdef = abbcacabc * abbcac + abbcac + acbc + bc + cd + de\
    \ + f\n                                                                      \
    \          ^\n/tmp/tmpjhgdu2ky.swift:28:72: error: cannot find 'cd' in scope\n\
    \    let abbcacabcbbcdcdefg = abbcacabc * abbcac + abbcac + acbc + bc + cd + de\
    \ + f + g\n                                                                  \
    \     ^~\n/tmp/tmpjhgdu2ky.swift:28:77: error: cannot find 'de' in scope\n   \
    \ let abbcacabcbbcdcdefg = abbcacabc * abbcac + abbcac + acbc + bc + cd + de +\
    \ f + g\n                                                                    \
    \        ^~\n/tmp/tmpjhgdu2ky.swift:28:82: error: cannot find 'f' in scope\n \
    \   let abbcacabcbbcdcdefg = abbcacabc * abbcac + abb"
  stdout: ''
  timestamp: 1659824647
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp334wenna/tmp334wenna.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b607a808c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b607a4ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b607a4ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b607a4fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp334wenna                        0x000055feae4b42ab <unavailable> + 4779

    5    libc.so.6                          0x00002b607a9f4460 __libc_start_main +
    245

    6    tmp334wenna                        0x000055feae4b3f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bcd = bc + ab\n\
    \    let abdc = ab + bc\n    let acdb = ac + bc\n    let abdab = ab + abc + abdc\
    \ + abdc\n    let acdbc = ac + acdb + abdc\n    let abdac = ab + abdc + abdbc\n\
    \    let acdab = ac + acdb + abdac\n    let abdabc = ab + abdac + abdabc\n   \
    \ let acdabd = ac + acdab + abdabc\n    let abdacd = ab + abdabc + abdacd\n  \
    \  let acdabdc = ac + acdab + abdacd\n    let abdacdc = ab + abdac + abdacdc\n\
    \    let acdabdab = ac + acdab + abdacdc\n    let abdacdabc = ab + abdac + abdacdabc\n\
    \    let acdabdac = ac + acdab + abdacdabc\n    let abdacdacb = ab + abdac + abdacdac\n\
    \    let acdabdacd = ac + acdab + abdacdac\n    let abdacdabdc = ab + abdac +\
    \ abdacdabc\n    let acdabdacdc = ac + acdab + abdacdabc\n    let abdacdabdab\
    \ = ab + abdac + abdacdac\n    let acdabdacdabc = ac + acdab + abdacdabc\n   \
    \ let abdacdabdac = ab + abdac + abdacdac\n    let acdabdacdacb = ac + acdab +\
    \ abdacdac\n    let abdacdabdacd = ab + abdac + abdacdabc\n    let acdabdacdabdc\
    \ = ac + acdab + abdacdabc\n    let abdacdabdacdc = ab + abdac + abdacdacb\n \
    \   let acdabdacdabdab = ac + acdab + abdacdacb\n    let abdacdabdacdabc = ab\
    \ + abdac + \n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp6eo9snnm.swift:44:1: error: expected expression after operator\n\
    }\n^\n/tmp/tmp6eo9snnm.swift:21:29: error: cannot find 'abdbc' in scope\n    let\
    \ abdac = ab + abdc + abdbc\n                            ^~~~~\n/tmp/tmp6eo9snnm.swift:23:31:\
    \ error: use of local variable 'abdabc' before its declaration\n    let abdabc\
    \ = ab + abdac + abdabc\n                              ^\n/tmp/tmp6eo9snnm.swift:23:9:\
    \ note: 'abdabc' declared here\n    let abdabc = ab + abdac + abdabc\n       \
    \ ^\n/tmp/tmp6eo9snnm.swift:25:32: error: use of local variable 'abdacd' before\
    \ its declaration\n    let abdacd = ab + abdabc + abdacd\n                   \
    \            ^\n/tmp/tmp6eo9snnm.swift:25:9: note: 'abdacd' declared here\n  \
    \  let abdacd = ab + abdabc + abdacd\n        ^\n/tmp/tmp6eo9snnm.swift:27:32:\
    \ error: use of local variable 'abdacdc' before its declaration\n    let abdacdc\
    \ = ab + abdac + abdacdc\n                               ^\n/tmp/tmp6eo9snnm.swift:27:9:\
    \ note: 'abdacdc' declared here\n    let abdacdc = ab + abdac + abdacdc\n    \
    \    ^\n/tmp/tmp6eo9snnm.swift:29:34: error: use of local variable 'abdacdabc'\
    \ before its declaration\n    let abdacdabc = ab + abdac + abdacdabc\n       \
    \                          ^\n/tmp/tmp6eo9snnm.swift:29:9: note: 'abdacdabc' declared\
    \ here\n    let abdacdabc = ab + abdac + abdacdabc\n        ^\n/tmp/tmp6eo9snnm.swift:31:34:\
    \ error: cannot find 'abdacdac' in scope\n    let abdacdacb = ab + abdac + abdacdac\n\
    \                                 ^~~~~~~~\n/tmp/tmp6eo9snnm.swift:32:34: error:\
    \ cannot find 'abdacdac' in scope\n    let acdabdacd = ac + acdab + abdacdac\n\
    \                                 ^~~~~~~~\n/tmp/tmp6eo9snnm.swift:35:36: error:\
    \ cannot find 'abdacdac' in scope\n    let abdacdabdab = ab + abdac + abdacdac\n\
    \                                   ^~~~~~~~\n/tmp/tmp6eo9snnm.swift:37:36: error:\
    \ cannot find 'abdacdac' in scope\n    let abdacdabdac = ab + abdac + abdacdac\n\
    \                                   ^~~~~~~~\n/tmp/tmp6eo9snnm.swift:38:37: error:\
    \ cannot find 'abdacdac' in scope\n    let acdabdacdacb = ac + acdab + abdacdac\n\
    \              "
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab == bc\
    \ && ac == cb) || (ab == cb && ac == ab)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpgaavynt5/tmpgaavynt5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b78202c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b77ef9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b77ef9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b77ef87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgaavynt5                        0x0000559c0ab082ab <unavailable> + 4779

    5    libc.so.6                          0x00002b2b783ee460 __libc_start_main +
    245

    6    tmpgaavynt5                        0x0000559c0ab07f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab == bc\
    \ && ac == cb) || (ab == cb && ac == ab)\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpgaavynt5/tmpgaavynt5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2b78202c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2b77ef9b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2b77ef9988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2b77ef87b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgaavynt5                        0x0000559c0ab082ab <unavailable> + 4779

    5    libc.so.6                          0x00002b2b783ee460 __libc_start_main +
    245

    6    tmpgaavynt5                        0x0000559c0ab07f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc * b\n\
    \    let acb = ac * c\n    let abcb = abc * bc\n    let abca = abc * ac\n    let\
    \ acab = ac * ab\n    let bcac = bc * ac\n    let abcab = abcab * abcab\n    let\
    \ abcabc = abcab * abcabc\n    let abcabcb = abcabc * abcabc\n    let abcabcbc\
    \ = abcabcb * abcabcb\n    let abcabcbcd = abcabcbc * abcabcbc\n    let abcabcbcde\
    \ = abcabcbc * abcabcbcde\n    let abcabcbcdef = abcabcbcd * abcabcbcdef\n   \
    \ let abcabcbcdefg = abcabcbcd * abcabcbcdefg\n    let abcabcbcdefgh = abcabcbcd\
    \ * abcabcbcdefgh\n    let abcabcbcdefghi = abcabcbcd * abcabcbcdefghi\n    let\
    \ abcabcbcdefghij = abcabcbcd * abcabcbcdefghij\n    let abcabcbcdefghijk = abcabcbcd\
    \ * abcabcbcdefghijk\n    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n\
    \    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl\
    \ = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n\
    \    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl\
    \ = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n\
    \    let abcabcbcdefghijkl = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl\
    \ = abcabcbcd * abcabcbcdefghijkl\n    let abcabcbcdefghijkl = abcabcbcd * abcab\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp9x10ud5i.swift:22:17: error: use of local variable 'abcab' before\
    \ its declaration\n    let abcab = abcab * abcab\n                ^\n/tmp/tmp9x10ud5i.swift:22:9:\
    \ note: 'abcab' declared here\n    let abcab = abcab * abcab\n        ^\n/tmp/tmp9x10ud5i.swift:22:25:\
    \ error: use of local variable 'abcab' before its declaration\n    let abcab =\
    \ abcab * abcab\n                        ^\n/tmp/tmp9x10ud5i.swift:22:9: note:\
    \ 'abcab' declared here\n    let abcab = abcab * abcab\n        ^\n/tmp/tmp9x10ud5i.swift:23:26:\
    \ error: use of local variable 'abcabc' before its declaration\n    let abcabc\
    \ = abcab * abcabc\n                         ^\n/tmp/tmp9x10ud5i.swift:23:9: note:\
    \ 'abcabc' declared here\n    let abcabc = abcab * abcabc\n        ^\n/tmp/tmp9x10ud5i.swift:27:33:\
    \ error: use of local variable 'abcabcbcde' before its declaration\n    let abcabcbcde\
    \ = abcabcbc * abcabcbcde\n                                ^\n/tmp/tmp9x10ud5i.swift:27:9:\
    \ note: 'abcabcbcde' declared here\n    let abcabcbcde = abcabcbc * abcabcbcde\n\
    \        ^\n/tmp/tmp9x10ud5i.swift:28:35: error: use of local variable 'abcabcbcdef'\
    \ before its declaration\n    let abcabcbcdef = abcabcbcd * abcabcbcdef\n    \
    \                              ^\n/tmp/tmp9x10ud5i.swift:28:9: note: 'abcabcbcdef'\
    \ declared here\n    let abcabcbcdef = abcabcbcd * abcabcbcdef\n        ^\n/tmp/tmp9x10ud5i.swift:29:36:\
    \ error: use of local variable 'abcabcbcdefg' before its declaration\n    let\
    \ abcabcbcdefg = abcabcbcd * abcabcbcdefg\n                                  \
    \ ^\n/tmp/tmp9x10ud5i.swift:29:9: note: 'abcabcbcdefg' declared here\n    let\
    \ abcabcbcdefg = abcabcbcd * abcabcbcdefg\n        ^\n/tmp/tmp9x10ud5i.swift:30:37:\
    \ error: use of local variable 'abcabcbcdefgh' before its declaration\n    let\
    \ abcabcbcdefgh = abcabcbcd * abcabcbcdefgh\n                                \
    \    ^\n/tmp/tmp9x10ud5i.swift:30:9: note: 'abcabcbcdefgh' declared here\n   \
    \ let abcabcbcdefgh = abcabcbcd * abcabcbcdefgh\n        ^\n/tmp/tmp9x10ud5i.swift:31:38:\
    \ error: use of local variable 'abcabcbcdefghi' before its declaration\n    let\
    \ abcabcbcdefghi"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab > ac)\
    \ && (ab > bc) && (ab > cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp3d_xhu3n/tmp3d_xhu3n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e0cbcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e0c8c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e0c8c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e0c8c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3d_xhu3n                        0x00005564717242ab <unavailable> + 4779

    5    libc.so.6                          0x00002b8e0cdbb460 __libc_start_main +
    245

    6    tmp3d_xhu3n                        0x0000556471723f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bc\n    return abca >= bca\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpjv7xzpzg/tmpjv7xzpzg.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b615c872c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b615c569b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b615c569988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b615c5687b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjv7xzpzg                        0x000055c70786032b <unavailable> + 4907

    5    libc.so.6                          0x00002b615ca5e460 __libc_start_main +
    245

    6    tmpjv7xzpzg                        0x000055c70785ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    return ((b * b) - (4 * a * c)) >= 0\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpuc218h4q/tmpuc218h4q.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1b64797c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1b6448eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1b6448e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1b6448d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpuc218h4q                        0x000055ec842152ab <unavailable> + 4779

    5    libc.so.6                          0x00002b1b64983460 __libc_start_main +
    245

    6    tmpuc218h4q                        0x000055ec84214f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a < 0 || b < 0 || c < 0 {\n        return\
    \ false\n    }\n    if a + b > c || a + c > b || b + c > a {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpkzt82aa1/tmpkzt82aa1.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae7923fac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae7920f1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae7920f1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae7920f07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkzt82aa1                        0x0000556b0ad321bb <unavailable> + 4539

    5    libc.so.6                          0x00002ae7925e6460 __libc_start_main +
    245

    6    tmpkzt82aa1                        0x0000556b0ad31e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab >= bc && ab >= cb) || (ab >= bc\
    \ && bc >= cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpfdrjqra4/tmpfdrjqra4.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b90a6c30c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b90a6927b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b90a6927988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b90a69267b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfdrjqra4                        0x0000555aeca9932b <unavailable> + 4907

    5    libc.so.6                          0x00002b90a6e1c460 __libc_start_main +
    245

    6    tmpfdrjqra4                        0x0000555aeca98f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    let ac = abs(a - c)\n    let bc = abs(b - c)\n    let abc\
    \ = abs(a + b + c)\n    return ac > bc && abc > ac\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpumgao8h_/tmpumgao8h_.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0fe97ecc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0fe94e3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0fe94e3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0fe94e27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpumgao8h_                        0x000055cf8e79732b <unavailable> + 4907

    5    libc.so.6                          0x00002b0fe99d8460 __libc_start_main +
    245

    6    tmpumgao8h_                        0x000055cf8e796f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bc\n    let abbc = abb + abc\n    let abcab = abcab + abbc\n\
    \    let abcabc = abcabc + abcab\n    let abcabcb = abcabcb + abcabc\n    let\
    \ abcabcbc = abcabcbc + abcabcb\n    let abcabcbcb = abcabcbcb + abcabcbc\n  \
    \  let abcabcbcbc = abcabcbcbc + abcabcbcb\n    let abcabcbcbcb = abcabcbcbcb\
    \ + abcabcbcbc\n    let abcabcbcbcbc = abcabcbcbcbc + abcabcbcbcb\n    let abcabcbcbcbcb\
    \ = abcabcbcbcbcb + abcabcbcbcbc\n    let abcabcbcbcbcbc = abcabcbcbcbcbc + abcabcbcbcbcb\n\
    \    let abcabcbcbcbcbcb = abcabcbcbcbcbcb + abcabcbcbcbcbc\n    let abcabcbcbcbcbcbc\
    \ = abcabcbcbcbcbcbc + abcabcbcbcbcbcbc\n    let abcabcbcbcbcbcbcb = abcabcbcbcbcbcbcb\
    \ + abcabcbcbcbcbcbc\n    let abcabcbcbcbcbcbcbc = abcabcbcbcbcbcbcbc + abcabcbcbcbcbcbcbc\n\
    \    let abcabcbcbcbcbcbcbc = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n  \
    \  let abcabcbcbcbcbcbcbcb = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n   \
    \ let abcabcbcbcbcbcbcbcbc = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n   \
    \ let abcabcbcbcbcbcbcbcbc = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n   \
    \ let abcabcbcbcbcbcbcbcbc = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n   \
    \ let abcabcbcbcbcbcbcbcbc = abcabcbcbcbcbcbcbcbc + abcabcbcbcbcbcbcbcbc\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpy5pypltn.swift:18:16: error: cannot find 'abb' in scope\n    let\
    \ abbc = abb + abc\n               ^~~\n/tmp/tmpy5pypltn.swift:19:17: error: use\
    \ of local variable 'abcab' before its declaration\n    let abcab = abcab + abbc\n\
    \                ^\n/tmp/tmpy5pypltn.swift:19:9: note: 'abcab' declared here\n\
    \    let abcab = abcab + abbc\n        ^\n/tmp/tmpy5pypltn.swift:20:18: error:\
    \ use of local variable 'abcabc' before its declaration\n    let abcabc = abcabc\
    \ + abcab\n                 ^\n/tmp/tmpy5pypltn.swift:20:9: note: 'abcabc' declared\
    \ here\n    let abcabc = abcabc + abcab\n        ^\n/tmp/tmpy5pypltn.swift:21:19:\
    \ error: use of local variable 'abcabcb' before its declaration\n    let abcabcb\
    \ = abcabcb + abcabc\n                  ^\n/tmp/tmpy5pypltn.swift:21:9: note:\
    \ 'abcabcb' declared here\n    let abcabcb = abcabcb + abcabc\n        ^\n/tmp/tmpy5pypltn.swift:22:20:\
    \ error: use of local variable 'abcabcbc' before its declaration\n    let abcabcbc\
    \ = abcabcbc + abcabcb\n                   ^\n/tmp/tmpy5pypltn.swift:22:9: note:\
    \ 'abcabcbc' declared here\n    let abcabcbc = abcabcbc + abcabcb\n        ^\n\
    /tmp/tmpy5pypltn.swift:23:21: error: use of local variable 'abcabcbcb' before\
    \ its declaration\n    let abcabcbcb = abcabcbcb + abcabcbc\n                \
    \    ^\n/tmp/tmpy5pypltn.swift:23:9: note: 'abcabcbcb' declared here\n    let\
    \ abcabcbcb = abcabcbcb + abcabcbc\n        ^\n/tmp/tmpy5pypltn.swift:24:22: error:\
    \ use of local variable 'abcabcbcbc' before its declaration\n    let abcabcbcbc\
    \ = abcabcbcbc + abcabcbcb\n                     ^\n/tmp/tmpy5pypltn.swift:24:9:\
    \ note: 'abcabcbcbc' declared here\n    let abcabcbcbc = abcabcbcbc + abcabcbcb\n\
    \        ^\n/tmp/tmpy5pypltn.swift:25:23: error: use of local variable 'abcabcbcbcb'\
    \ before its declaration\n    let abcabcbcbcb = abcabcbcbcb + abcabcbcbc\n   \
    \                   ^\n/tmp/tmpy5pypltn.swift:25:9: note: 'abcabcbcbcb' declared\
    \ here\n    let abcabcbcbcb = abcabcbcbcb + abcabcbcbc\n        ^\n/tmp/tmpy5pypltn.swift:26:24:\
    \ error: use of local variable 'abcabcbcbcbc' before its declaration\n    let\
    \ abcabcbcbcbc = "
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n    let ab = a + b\n\
    \    return (ac > bc && ac > ab) || (bc > ab && bc > ac)\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp8a2wp51o/tmp8a2wp51o.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae5045efc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae5042e6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae5042e6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae5042e57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8a2wp51o                        0x000055cfd665d32b <unavailable> + 4907

    5    libc.so.6                          0x00002ae5047db460 __libc_start_main +
    245

    6    tmp8a2wp51o                        0x000055cfd665cf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab > ac)\
    \ && (ab > bc) && (ab > cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp3d_xhu3n/tmp3d_xhu3n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e0cbcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e0c8c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e0c8c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e0c8c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3d_xhu3n                        0x00005564717242ab <unavailable> + 4779

    5    libc.so.6                          0x00002b8e0cdbb460 __libc_start_main +
    245

    6    tmp3d_xhu3n                        0x0000556471723f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    return (ab > ac)\
    \ && (ab > bc) && (ab > cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp3d_xhu3n/tmp3d_xhu3n.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8e0cbcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8e0c8c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8e0c8c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8e0c8c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3d_xhu3n                        0x00005564717242ab <unavailable> + 4779

    5    libc.so.6                          0x00002b8e0cdbb460 __libc_start_main +
    245

    6    tmp3d_xhu3n                        0x0000556471723f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb) || (ab < bc &&\
    \ ab < cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpiwvn7833/tmpiwvn7833.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7dc53abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7dc50a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7dc50a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7dc50a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiwvn7833                        0x000055a2af9482ab <unavailable> + 4779

    5    libc.so.6                          0x00002b7dc5597460 __libc_start_main +
    245

    6    tmpiwvn7833                        0x000055a2af947f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        return false\n    }\n\
    \    if b > c {\n        return false\n    }\n    if c > a {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmputpbva_1/tmputpbva_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3f9ce7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3f99deb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3f99de988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3f99dd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmputpbva_1                        0x000056096d6601bb <unavailable> + 4539

    5    libc.so.6                          0x00002ab3f9ed3460 __libc_start_main +
    245

    6    tmputpbva_1                        0x000056096d65fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let ac = abs(a\
    \ - c)\n    let bc = abs(b - c)\n    return (ab == ac) && (bc >= ab)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpdmgma1hn/tmpdmgma1hn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae6aaffdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae6aacf4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae6aacf4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae6aacf37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdmgma1hn                        0x00005582944bc2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ae6ab1e9460 __libc_start_main +
    245

    6    tmpdmgma1hn                        0x00005582944bbf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    let abc = ab + ac\
    \ + bc\n    let ab2 = ab * ab\n    let ac2 = ac * ac\n    let bc2 = bc * bc \n\
    \    let abc2 = abc * abc\n    let abbc = ab2 + ac2 + bc2\n    let ab2cb = ab2\
    \ * cb\n    let ac2ab = ac2 * ab\n    let ab2cac = ab2ca + bc2ac\n    let ab2cac2\
    \ = ab2cac * ab2cac\n    let ab2cac2b = ab2cac2 * ab2cac\n    let ab2cac2c = ab2cac2\
    \ * cb\n    let ab2cac2ab = ab2cac2b + ab2cac2c\n    let ab2cac2ab2 = ab2cac2ab\
    \ * ab2cac2\n    let ab2cac2ab2b = ab2cac2ab2 * ab2cac2\n    let ab2cac2ab2c =\
    \ ab2cac2ab2 * cb\n    let ab2cac2ab2cb = ab2cac2ab2c * ab2cac2\n    let ab2cac2ab2cac\
    \ = ab2cac2ab2c * cb * cb\n    let ab2cac2ab2cac2 = ab2cac2ab2cac * ab2cac2\n\
    \    let ab2cac2ab2cac2b = ab2cac2ab2cac2 * ab2cac2\n    let ab2cac2ab2cac2c =\
    \ ab2cac2ab2cac2 * cb * cb\n    let ab2cac2ab2cac2ab = ab2cac2ab2cac2b + ab2cac2ab2cac2c\n\
    \    let ab2cac2ab2cac2ab2 = ab2cac2ab2cac2ab * ab2cac2\n    let ab2cac2ab2cac2ab2b\
    \ = ab2cac2ab2cac2ab2 * ab2cac2\n    let ab2cac2ab2cac2ab2c = ab2cac2ab2cac2ab2\
    \ * cb * cb\n    let ab2cac2ab2cac2ab2cb = ab2cac2ab2cac2ab2c * ab2cac2\n    let\
    \ ab2cac2ab2cac2ab2cac = ab2cac2ab2cac2ab2c * cb * cb * cb\n    let ab2cac2ab2cac2ab2cac2\
    \ = ab2cac2ab2cac2ab2c\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpepb3_c_x.swift:24:18: error: cannot find 'ab2ca' in scope\n   \
    \ let ab2cac = ab2ca + bc2ac\n                 ^~~~~\n/tmp/tmpepb3_c_x.swift:24:26:\
    \ error: cannot find 'bc2ac' in scope\n    let ab2cac = ab2ca + bc2ac\n      \
    \                   ^~~~~\n"
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bc\n    let acab = ac + ab\n    let acbc = ac + bc\n   \
    \ let abcb = abc + bc\n    let abcaa = abc + aca\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acaba = aca + aba\n    let acbab = aca + bab\n    let acbba = aca + bba\n\
    \    let abcba = abc + bca\n    let abcaa = abc + caa\n    let abcab = abc + cab\n\
    \    let acab\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpnrr8wqy5.swift:21:23: error: cannot find 'aca' in scope\n    let\
    \ abcaa = abc + aca\n                      ^~~\n/tmp/tmpnrr8wqy5.swift:22:23:\
    \ error: cannot find 'cab' in scope\n    let abcab = abc + cab\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:23:17: error: cannot find 'aca' in scope\n\
    \    let acaba = aca + aba\n                ^~~\n/tmp/tmpnrr8wqy5.swift:23:23:\
    \ error: cannot find 'aba' in scope\n    let acaba = aca + aba\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:24:17: error: cannot find 'aca' in scope\n\
    \    let acbab = aca + bab\n                ^~~\n/tmp/tmpnrr8wqy5.swift:24:23:\
    \ error: cannot find 'bab' in scope\n    let acbab = aca + bab\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:25:17: error: cannot find 'aca' in scope\n\
    \    let acbba = aca + bba\n                ^~~\n/tmp/tmpnrr8wqy5.swift:25:23:\
    \ error: cannot find 'bba' in scope\n    let acbba = aca + bba\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:27:23: error: cannot find 'caa' in scope\n\
    \    let abcaa = abc + caa\n                      ^~~\n/tmp/tmpnrr8wqy5.swift:28:23:\
    \ error: cannot find 'cab' in scope\n    let abcab = abc + cab\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:29:17: error: cannot find 'aca' in scope\n\
    \    let acaba = aca + aba\n                ^~~\n/tmp/tmpnrr8wqy5.swift:29:23:\
    \ error: cannot find 'aba' in scope\n    let acaba = aca + aba\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:30:17: error: cannot find 'aca' in scope\n\
    \    let acbab = aca + bab\n                ^~~\n/tmp/tmpnrr8wqy5.swift:30:23:\
    \ error: cannot find 'bab' in scope\n    let acbab = aca + bab\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:31:17: error: cannot find 'aca' in scope\n\
    \    let acbba = aca + bba\n                ^~~\n/tmp/tmpnrr8wqy5.swift:31:23:\
    \ error: cannot find 'bba' in scope\n    let acbba = aca + bba\n             \
    \         ^~~\n/tmp/tmpnrr8wqy5.swift:32:9: error: invalid redeclaration of 'abcba'\n\
    \    let abcba = abc + bca\n        ^\n/tmp/tmpnrr8wqy5.swift:26:9: note: 'abcba'\
    \ previously declared here\n    let abcba = abc + bca\n        ^\n/tmp/tmpnrr8wqy5.sw"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a == 0 || b == 0 || c == 0 {\n      \
    \  return false\n    }\n    if a + b > c {\n        return false\n    }\n    if\
    \ a + c > b {\n        return false\n    }\n    if b + c > a {\n        return\
    \ false\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpbvlt0fr8/tmpbvlt0fr8.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b268f5d6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b268f2cdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b268f2cd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b268f2cc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbvlt0fr8                        0x0000563b16a9d1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b268f7c2460 __libc_start_main +
    245

    6    tmpbvlt0fr8                        0x0000563b16a9ce69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - a) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmph2ire_6u/tmph2ire_6u.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b5ba82c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b5b779b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b5b779988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b5b7787b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmph2ire_6u                        0x0000560fe7ade1bb <unavailable> + 4539

    5    libc.so.6                          0x00002b7b5bc6e460 __libc_start_main +
    245

    6    tmph2ire_6u                        0x0000560fe7adde69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let ac = abs(a\
    \ - c)\n    let bc = abs(b - c)\n    return (ab > ac) && (ab > bc)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp43tkepc8/tmp43tkepc8.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b930c65ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b930c351b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b930c351988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b930c3507b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp43tkepc8                        0x000055d3707532ab <unavailable> + 4779

    5    libc.so.6                          0x00002b930c846460 __libc_start_main +
    245

    6    tmp43tkepc8                        0x000055d370752f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a == 0 || b == 0 || c == 0 {\n      \
    \  return false\n    }\n    let ab = abs(b - a)\n    let ac = abs(c - a)\n   \
    \ let bc = abs(b - c)\n    let cb = abs(c - b)\n    let det = ab * bc + ac * cb\n\
    \    return det < 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpcorsl6jx/tmpcorsl6jx.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b450696bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4506662b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4506662988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b45066617b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcorsl6jx                        0x000055e0672682ab <unavailable> + 4779

    5    libc.so.6                          0x00002b4506b57460 __libc_start_main +
    245

    6    tmpcorsl6jx                        0x000055e067267f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a > b {\n        return false\n    }\n\
    \    if b > c {\n        return false\n    }\n    if c > a {\n        return false\n\
    \    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmputpbva_1/tmputpbva_1.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab3f9ce7c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab3f99deb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab3f99de988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab3f99dd7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmputpbva_1                        0x000056096d6601bb <unavailable> + 4539

    5    libc.so.6                          0x00002ab3f9ed3460 __libc_start_main +
    245

    6    tmputpbva_1                        0x000056096d65fe69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb) || (ab < bc &&\
    \ ab < cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpiwvn7833/tmpiwvn7833.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7dc53abc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7dc50a2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7dc50a2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7dc50a17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiwvn7833                        0x000055a2af9482ab <unavailable> + 4779

    5    libc.so.6                          0x00002b7dc5597460 __libc_start_main +
    245

    6    tmpiwvn7833                        0x000055a2af947f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return (ab >= bc) && (ab >= ac)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpnqyxf_ls/tmpnqyxf_ls.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0b09c3ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0b09935b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0b09935988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0b099347b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnqyxf_ls                        0x000055e2069e12ab <unavailable> + 4779

    5    libc.so.6                          0x00002b0b09e2a460 __libc_start_main +
    245

    6    tmpnqyxf_ls                        0x000055e2069e0f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    let absa = abs(a - b)\n    let absc = abs(c - b)\n    let\
    \ absac = abs(a - c)\n    return (absc == absac) && (absc == absa)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmppeyiizys/tmppeyiizys.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad061729c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad061420b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad061420988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad06141f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppeyiizys                        0x0000560223c5c2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ad061915460 __libc_start_main +
    245

    6    tmppeyiizys                        0x0000560223c5bf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab == bc && ab == cb) || (ab == bc\
    \ || ab == cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpgknckgt5/tmpgknckgt5.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7f6c471c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7f6c168b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7f6c168988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7f6c1677b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgknckgt5                        0x0000558d1533532b <unavailable> + 4907

    5    libc.so.6                          0x00002b7f6c65d460 __libc_start_main +
    245

    6    tmpgknckgt5                        0x0000558d15334f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    if a > b {\n        if b > c {\n            return true\n\
    \        } else {\n            return false\n        }\n    } else {\n       \
    \ if c > b {\n            return true\n        } else {\n            return false\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpalqkczuo/tmpalqkczuo.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4971ac6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b49717bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b49717bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b49717bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpalqkczuo                        0x0000557c12c3832b <unavailable> + 4907

    5    libc.so.6                          0x00002b4971cb2460 __libc_start_main +
    245

    6    tmpalqkczuo                        0x0000557c12c37f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab > bc && ab > ac\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7jnpdq4l/tmp7jnpdq4l.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ddba43c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ddb73ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ddb73a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ddb7397b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7jnpdq4l                        0x000055ef43abb2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b2ddbc2f460 __libc_start_main +
    245

    6    tmp7jnpdq4l                        0x000055ef43abaf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = (a + b + c) / 2\n    let b1 = (a\
    \ + b - c) / 2\n    let c1 = (a - b - c) / 2\n    return a1 * b1 * c1 < 0\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp1wfggwwc/tmp1wfggwwc.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0a63c79c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0a63970b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0a63970988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0a6396f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1wfggwwc                        0x000055a8dd7473c5 <unavailable> + 5061

    5    libc.so.6                          0x00002b0a63e65460 __libc_start_main +
    245

    6    tmp1wfggwwc                        0x000055a8dd746ef9 <unavailable> + 3833

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let ac = abs(a - c)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpfktmzz8_/tmpfktmzz8_.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2761627c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b276131eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b276131e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b276131d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfktmzz8_                        0x000055bffad652ab <unavailable> + 4779

    5    libc.so.6                          0x00002b2761813460 __libc_start_main +
    245

    6    tmpfktmzz8_                        0x000055bffad64f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    if a == 0 || b == 0 || c == 0 {\n      \
    \  return false\n    }\n    let ab = abs(b - a)\n    let ac = abs(c - a)\n   \
    \ let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n    let abca\
    \ = abc + bc\n    return abca >= bca && abca >= abca\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpkxo6bxrc/tmpkxo6bxrc.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad65db38c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad65d82fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad65d82f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad65d82e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkxo6bxrc                        0x0000560a1555a32b <unavailable> + 4907

    5    libc.so.6                          0x00002ad65dd24460 __libc_start_main +
    245

    6    tmpkxo6bxrc                        0x0000560a15559f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    \n    return (ab\
    \ > ac) && (ab > bc) && (ab > cb)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpzo3u5g3c/tmpzo3u5g3c.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af4da78ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af4da481b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af4da481988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af4da4807b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzo3u5g3c                        0x000056157b9e52ab <unavailable> + 4779

    5    libc.so.6                          0x00002af4da976460 __libc_start_main +
    245

    6    tmpzo3u5g3c                        0x000056157b9e4f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    let abc = ab + bc + cb\n    return abc <=\
    \ 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(right_angle_triangle(a: 3, b:\
    \ 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpveo4z375/tmpveo4z375.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ee6a63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ee675ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ee675a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ee67597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpveo4z375                        0x000055dd15d602ab <unavailable> + 4779

    5    libc.so.6                          0x00002b6ee6c4f460 __libc_start_main +
    245

    6    tmpveo4z375                        0x000055dd15d5ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bca = bc + ab\n\
    \    let abca = abc + bca\n    let acab = ac + ab\n    let acbc = ac + bc\n  \
    \  let abcb = abc + bca\n    let acbca = acbc + abc\n    let abcca = abcc + acab\n\
    \    let acbcab = acbc + abca\n    let acbcabc = acbcab + abcca\n    let acbcabcb\
    \ = acbcabc + acbca\n    let acbcabcbc = acbcabcb + acbcab\n    let acbcabcbcb\
    \ = acbcabcbc + acbcabc\n    let acbcabcbcbc = acbcabcbcb + acbcabcb\n    let\
    \ acbcabcbcbcb = acbcabcbcbc + acbcabcbcb\n    let acbcabcbcbcbc = acbcabcbcbcb\
    \ + acbcabcbcbcb\n    let acbcabcbcbcbcb = acbcabcbcbcbc + acbcabcbcbcbcb\n  \
    \  let acbcabcbcbcbcbc = acbcabcbcbcbcbc + acbcabcbcbcbcbcb\n    let acbcabcbcbcbcbcbc\
    \ = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbc\
    \ + acbcabcbcbcbcbcbcb\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb + acbcabcbcbcbcbcbcb\n\
    \    let acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc + acbcabcbcbcbcbcbcbcb\n  \
    \  let acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbc + acbcabcbcbcbcbcbcbcb\n   \
    \ let acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbc + acbcabcbcbcbcbcbcbcb\n    let\
    \ acbcabcbcbcbcbcbcbcb = acbcabcbcbcbcbcbcbc + acbcabcbcbcbcbcbcbcb\n    let acbcabcbcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcbcb + ac\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmp5ujewlw8.swift:22:17: error: cannot find 'abcc' in scope\n    let\
    \ abcca = abcc + acab\n                ^~~~\n/tmp/tmp5ujewlw8.swift:31:42: error:\
    \ use of local variable 'acbcabcbcbcbcb' before its declaration\n    let acbcabcbcbcbcb\
    \ = acbcabcbcbcbc + acbcabcbcbcbcb\n                                         ^\n\
    /tmp/tmp5ujewlw8.swift:31:9: note: 'acbcabcbcbcbcb' declared here\n    let acbcabcbcbcbcb\
    \ = acbcabcbcbcbc + acbcabcbcbcbcb\n        ^\n/tmp/tmp5ujewlw8.swift:32:27: error:\
    \ use of local variable 'acbcabcbcbcbcbc' before its declaration\n    let acbcabcbcbcbcbc\
    \ = acbcabcbcbcbcbc + acbcabcbcbcbcbcb\n                          ^\n/tmp/tmp5ujewlw8.swift:32:9:\
    \ note: 'acbcabcbcbcbcbc' declared here\n    let acbcabcbcbcbcbc = acbcabcbcbcbcbc\
    \ + acbcabcbcbcbcbcb\n        ^\n/tmp/tmp5ujewlw8.swift:32:45: error: cannot find\
    \ 'acbcabcbcbcbcbcb' in scope\n    let acbcabcbcbcbcbc = acbcabcbcbcbcbc + acbcabcbcbcbcbcb\n\
    \                                            ^~~~~~~~~~~~~~~~\n/tmp/tmp5ujewlw8.swift:33:29:\
    \ error: use of local variable 'acbcabcbcbcbcbcbc' before its declaration\n  \
    \  let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n          \
    \                  ^\n/tmp/tmp5ujewlw8.swift:33:9: note: 'acbcabcbcbcbcbcbc' declared\
    \ here\n    let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n \
    \       ^\n/tmp/tmp5ujewlw8.swift:33:49: error: use of local variable 'acbcabcbcbcbcbcbcb'\
    \ before its declaration\n    let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n\
    \                                                ^\n/tmp/tmp5ujewlw8.swift:34:9:\
    \ note: 'acbcabcbcbcbcbcbcb' declared here\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbc\
    \ + acbcabcbcbcbcbcbcb\n        ^\n/tmp/tmp5ujewlw8.swift:34:50: error: use of\
    \ local variable 'acbcabcbcbcbcbcbcb' before its declaration\n    let acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n                                 \
    \                ^\n/tmp/tmp5ujewlw8.swift:34:9: note: 'acbcabcbcbcbcbcbcb' declared\
    \ here\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbc + acbcabcbcbcbcbcbcb\n\
    \     "
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return ab >= bc && ab >= cb\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmptxw3_69z/tmptxw3_69z.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba64cb6dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba64c864b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba64c864988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba64c8637b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptxw3_69z                        0x000055f1c119c32b <unavailable> + 4907

    5    libc.so.6                          0x00002ba64cd59460 __libc_start_main +
    245

    6    tmptxw3_69z                        0x000055f1c119bf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = b - a\n    let b1 = c - b\n   \
    \ let c1 = a - c\n    return a1 * b1 - b1 * a1 + c1 * b1 - c1 * a1 == 0\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpnxb4u6y_/tmpnxb4u6y_.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b03715ebc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b03712e2b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b03712e2988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b03712e17b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnxb4u6y_                        0x00005627c744e23b <unavailable> + 4667

    5    libc.so.6                          0x00002b03717d7460 __libc_start_main +
    245

    6    tmpnxb4u6y_                        0x00005627c744de69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab >= bc && ab >= ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpt84oy5do/tmpt84oy5do.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab15e34fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab15e046b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab15e046988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab15e0457b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt84oy5do                        0x000056552d6ba2ab <unavailable> + 4779

    5    libc.so.6                          0x00002ab15e53b460 __libc_start_main +
    245

    6    tmpt84oy5do                        0x000056552d6b9f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    \n    if a > b {\n        if b > c {\n            return\
    \ true\n        } else {\n            return false\n        }\n    } else {\n\
    \        if c > b {\n            return true\n        } else {\n            return\
    \ false\n        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp3jk0nofy/tmp3jk0nofy.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fe57bac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fe54b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fe54b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fe54b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3jk0nofy                        0x000055736bcd532b <unavailable> + 4907

    5    libc.so.6                          0x00002b4fe59a6460 __libc_start_main +
    245

    6    tmp3jk0nofy                        0x000055736bcd4f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = (b * b) - (4 * a * c)\n    let\
    \ a2 = (b * b) - (4 * a * b)\n    let a3 = (b * b) - (4 * a * a)\n    let a4 =\
    \ b * b - (4 * a * a)\n    let a5 = b * b - (4 * a * c)\n    let a6 = b * b -\
    \ (4 * a * b)\n    let a7 = b * b - (4 * a * a)\n    let a8 = b * b - (4 * a *\
    \ c)\n    let a9 = b * b - (4 * a * a)\n    let a10 = b * b - (4 * a * c)\n  \
    \  let a11 = b * b - (4 * a * a)\n    let a12 = b * b - (4 * a * c)\n    let a13\
    \ = b * b - (4 * a * a)\n    let a14 = b * b - (4 * a * c)\n    let a15 = b *\
    \ b - (4 * a * a)\n    let a16 = b * b - (4 * a * c)\n    let a17 = b * b - (4\
    \ * a * a)\n    let a18 = b * b - (4 * a * c)\n    let a19 = b * b - (4 * a *\
    \ a)\n    let a20 = b * b - (4 * a * c)\n    let a21 = b * b - (4 * a * a)\n \
    \   let a22 = b * b - (4 * a * c)\n    let a23 = b * b - (4 * a * a)\n    let\
    \ a24 = b * b - (4 * a * c)\n    let a25 = b * b - (4 * a * a)\n    let a26 =\
    \ b * b - (4 * a * c)\n    let a27 = b * b - (4 * a * a)\n    let a28 = b * b\
    \ - (4 * a * c)\n    let a29 = b * b - (4 * a * a)\n    let a30 = b * b - (4 *\
    \ a * c)\n    let a31 = b * b - (4 * a * a)\n    let a32 = b * b - (4 * a * c)\n\
    \    let a33 = b * b - (4 * a * a)\n    let a34 = b * b - (4 * a * c)\n    let\
    \ a35 = b * b - (4 * a * a)\n    let a36 = b * b - (4 * a * c)\n    let a37 =\
    \ b * b - (4 * a * a)\n    let a38 = b * b - (4 * a * c)\n    let a39 = b * b\
    \ - (4 * a * a)\n    let a40 = b * b - (4 * a * c)\n    let a41 = b * b - (4 *\
    \ a * a)\n    let a42 = b * b - (4 * a * c)\n    let a43 = b * b - (4 * a * a)\n\
    \    let a44 = b * b - (4 * a * c)\n    let a45 = b * b - (4 * a * a)\n    let\
    \ a46 = b * b - (4 * a * c)\n    let a47 = b * b - (4 * a\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpkguq94yh.swift:59:1: error: expected ')' in expression list\n}\n\
    ^\n/tmp/tmpkguq94yh.swift:58:23: note: to match this opening '('\n    let a47\
    \ = b * b - (4 * a\n                      ^\n/tmp/tmpkguq94yh.swift:12:9: warning:\
    \ initialization of immutable value 'a1' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    let a1 = (b * b) - (4 * a * c)\n    ~~~~^~\n\
    \    _\n/tmp/tmpkguq94yh.swift:13:9: warning: initialization of immutable value\
    \ 'a2' was never used; consider replacing with assignment to '_' or removing it\n\
    \    let a2 = (b * b) - (4 * a * b)\n    ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:14:9:\
    \ warning: initialization of immutable value 'a3' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a3 = (b * b) - (4 * a * a)\n\
    \    ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:15:9: warning: initialization of immutable\
    \ value 'a4' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let a4 = b * b - (4 * a * a)\n    ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:16:9:\
    \ warning: initialization of immutable value 'a5' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a5 = b * b - (4 * a * c)\n  \
    \  ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:17:9: warning: initialization of immutable\
    \ value 'a6' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let a6 = b * b - (4 * a * b)\n    ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:18:9:\
    \ warning: initialization of immutable value 'a7' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a7 = b * b - (4 * a * a)\n  \
    \  ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:19:9: warning: initialization of immutable\
    \ value 'a8' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let a8 = b * b - (4 * a * c)\n    ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:20:9:\
    \ warning: initialization of immutable value 'a9' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let a9 = b * b - (4 * a * a)\n  \
    \  ~~~~^~\n    _\n/tmp/tmpkguq94yh.swift:21:9: warning: initialization of"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp334wenna/tmp334wenna.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b607a808c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b607a4ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b607a4ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b607a4fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp334wenna                        0x000055feae4b42ab <unavailable> + 4779

    5    libc.so.6                          0x00002b607a9f4460 __libc_start_main +
    245

    6    tmp334wenna                        0x000055feae4b3f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac\n    let bcd = bc + ab\n\
    \    return abc > bcd\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpffvsh2u2/tmpffvsh2u2.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7011bd5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b70118ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b70118cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b70118cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpffvsh2u2                        0x000055ee6846832b <unavailable> + 4907

    5    libc.so.6                          0x00002b7011dc1460 __libc_start_main +
    245

    6    tmpffvsh2u2                        0x000055ee68467f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    let ac = a + c\n    let bc = b + c\n    let ab = a + b\n\
    \    let acb = ac + b\n    let bca = b + c\n    let abc = ab + c\n    let acbc\
    \ = acb + c\n    let abcb = abc + b\n    let acbca = acbc + a\n    let abcca =\
    \ abcc + a\n    let acbcab = acbca * b\n    let abccab = abcca * b\n    let acbcabc\
    \ = acbcab * c\n    let abccabc = abccab * c\n    let acbcabcb = acbcabc * c\n\
    \    let abccabcb = abccabc * b\n    let acbcabcbc = acbcabcb * c\n    let abccabcbc\
    \ = abccabcb * c\n    let acbcabcbcb = acbcabcbc * b\n    let abccabcbcb = abccabcbc\
    \ * b\n    let acbcabcbcbc = acbcabcbcb * c\n    let abccabcbcbc = abccabcbcb\
    \ * c\n    let acbcabcbcbcb = acbcabcbcbc * b\n    let abccabcbcbcb = abccabcbcbc\
    \ * b\n    let acbcabcbcbcbc = acbcabcbcbcb * c\n    let abccabcbcbcbc = abccabcbcbcb\
    \ * c\n    let acbcabcbcbcbcb = acbcabcbcbcbc * b\n    let abccabcbcbcbcb = abccabcbcbcbc\
    \ * b\n    let acbcabcbcbcbcbc = acbcabcbcbcbcb * c\n    let abccabcbcbcbcbc =\
    \ abccabcbcbcbcb * c\n    let acbcabcbcbcbcbcb = acbcabcbcbcbcbcb * b\n    let\
    \ abccabcbcbcbcbcb = abccabcbcbcbcbcb * b\n    let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc\
    \ * c\n    let abccabcbcbcbcbcbc = abccabcbcbcbcbcbc * c\n    let acbcabcbcbcbcbcbcb\
    \ = acbcabcbcbcbcbcbcb * b\n    let abccabcbcbcbcbcbcb = abccabcbcbcbcbcbcb *\
    \ b\n    let acbcabcbcbcbcbcbcbc = acbcabcbcbcbcbcbcbcbc * c\n    let abccabcbcb\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqr17fjd2.swift:24:17: error: cannot find 'abcc' in scope\n    let\
    \ abcca = abcc + a\n                ^~~~\n/tmp/tmpqr17fjd2.swift:45:28: error:\
    \ use of local variable 'acbcabcbcbcbcbcb' before its declaration\n    let acbcabcbcbcbcbcb\
    \ = acbcabcbcbcbcbcb * b\n                           ^\n/tmp/tmpqr17fjd2.swift:45:9:\
    \ note: 'acbcabcbcbcbcbcb' declared here\n    let acbcabcbcbcbcbcb = acbcabcbcbcbcbcb\
    \ * b\n        ^\n/tmp/tmpqr17fjd2.swift:46:28: error: use of local variable 'abccabcbcbcbcbcb'\
    \ before its declaration\n    let abccabcbcbcbcbcb = abccabcbcbcbcbcb * b\n  \
    \                         ^\n/tmp/tmpqr17fjd2.swift:46:9: note: 'abccabcbcbcbcbcb'\
    \ declared here\n    let abccabcbcbcbcbcb = abccabcbcbcbcbcb * b\n        ^\n\
    /tmp/tmpqr17fjd2.swift:47:29: error: use of local variable 'acbcabcbcbcbcbcbc'\
    \ before its declaration\n    let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * c\n\
    \                            ^\n/tmp/tmpqr17fjd2.swift:47:9: note: 'acbcabcbcbcbcbcbc'\
    \ declared here\n    let acbcabcbcbcbcbcbc = acbcabcbcbcbcbcbc * c\n        ^\n\
    /tmp/tmpqr17fjd2.swift:48:29: error: use of local variable 'abccabcbcbcbcbcbc'\
    \ before its declaration\n    let abccabcbcbcbcbcbc = abccabcbcbcbcbcbc * c\n\
    \                            ^\n/tmp/tmpqr17fjd2.swift:48:9: note: 'abccabcbcbcbcbcbc'\
    \ declared here\n    let abccabcbcbcbcbcbc = abccabcbcbcbcbcbc * c\n        ^\n\
    /tmp/tmpqr17fjd2.swift:49:30: error: use of local variable 'acbcabcbcbcbcbcbcb'\
    \ before its declaration\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * b\n\
    \                             ^\n/tmp/tmpqr17fjd2.swift:49:9: note: 'acbcabcbcbcbcbcbcb'\
    \ declared here\n    let acbcabcbcbcbcbcbcb = acbcabcbcbcbcbcbcb * b\n       \
    \ ^\n/tmp/tmpqr17fjd2.swift:50:30: error: use of local variable 'abccabcbcbcbcbcbcb'\
    \ before its declaration\n    let abccabcbcbcbcbcbcb = abccabcbcbcbcbcbcb * b\n\
    \                             ^\n/tmp/tmpqr17fjd2.swift:50:9: note: 'abccabcbcbcbcbcbcb'\
    \ declared here\n    let abccabcbcbcbcbcbcb = abccabcbcbcbcbcbcb * b\n       \
    \ ^\n/tmp/tmpqr17fjd2.swift:51:31: error: cannot find 'acbcabcbcbcbcbcbcbcbc"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a1 = (a + b + c) / 2.0\n    let b1 =\
    \ (a + b - c) / 2.0\n    let c1 = (a - b + c) / 2.0\n    return a1 == b1 && b1\
    \ == c1 && c1 == a\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpk1hn5dm9.swift:12:26: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let a1 = (a + b + c) / 2.0\n   \
    \          ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpk1hn5dm9.swift:12:26: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let a1 = (a + b + c) / 2.0\n                      \
    \   ^\n/tmp/tmpk1hn5dm9.swift:13:26: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let b1 = (a + b - c) / 2.0\n   \
    \          ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpk1hn5dm9.swift:13:26: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let b1 = (a + b - c) / 2.0\n                      \
    \   ^\n/tmp/tmpk1hn5dm9.swift:14:26: error: binary operator '/' cannot be applied\
    \ to operands of type 'Int' and 'Double'\n    let c1 = (a - b + c) / 2.0\n   \
    \          ~~~~~~~~~~~ ^ ~~~\n/tmp/tmpk1hn5dm9.swift:14:26: note: overloads for\
    \ '/' exist with these partially matching parameter lists: (Double, Double), (Duration,\
    \ Double), (Int, Int)\n    let c1 = (a - b + c) / 2.0\n                      \
    \   ^\n"
  stdout: ''
  timestamp: 1659824645
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let cb = abs(c - b)\n    let abc = ab + ac\
    \ + bc\n    let bca = bc * ac\n    let cab = cb * ab\n    let acb = ac * bc\n\
    \    let abb = ab * bc\n    let aca = ac * ab\n    let aba = ab * ab\n    let\
    \ bcb = bc * b\n    let cbc = cb * c\n    let acb = ac * b\n    let cab = cab\
    \ * ab\n    let aca = aca * ab\n    let aba = aba * ab\n    let bcb = bcb * bc\n\
    \    let cbc = cbc * cb\n    let acb = acb * ac\n    let cab = cab * cab\n   \
    \ let aca = aca * ac\n    let aba = aba * aba\n    let bcb = bcb * bcb\n    let\
    \ cbc = cbc * cbc\n    let acb = acb * acb\n    let cab = cab * cab\n    let aca\
    \ = aca * aca\n    let aba = aba * aba\n    let bcb = bcb * bcb\n    let cbc =\
    \ cbc * cbc\n    let acb = acb * acb\n    let cab = cab * cab\n    let aca = aca\
    \ * aca\n    let aba = aba * aba\n    let bcb = bcb * bcb\n    let cbc = cbc *\
    \ cbc\n    let acb = acb * acb\n    let cab = cab * cab\n    let aca = aca * aca\n\
    \    let aba = aba * aba\n    let bcb = bcb * bcb\n    let cbc = cbc * cbc\n \
    \   let acb = acb * acb\n    let cab = cab * cab\n    let aca = aca * aca\n  \
    \  let aba = aba * aba\n    let bcb = bcb * bcb\n    let cbc = cbc * cbc\n   \
    \ let acb = acb * acb\n    let cab = cab * cab\n    let aca = aca * aca\n    let\
    \ aba = aba * aba\n    let bcb = bcb * bcb\n    let cbc = cbc * cbc\n    let acb\
    \ = acb * acb\n    let cab = cab * cab\n    let aca = aca * aca\n    let aba =\
    \ aba * aba\n    let bcb = bcb * bcb\n    let cbc = cbc * cbc\n    let acb = acb\
    \ * acb\n    let cab = cab * cab\n    let \n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzqesiox1.swift:75:8: error: expected pattern\n    let \n      \
    \ ^\n/tmp/tmpzqesiox1.swift:25:9: error: invalid redeclaration of 'acb'\n    let\
    \ acb = ac * b\n        ^\n/tmp/tmpzqesiox1.swift:19:9: note: 'acb' previously\
    \ declared here\n    let acb = ac * bc\n        ^\n/tmp/tmpzqesiox1.swift:26:9:\
    \ error: invalid redeclaration of 'cab'\n    let cab = cab * ab\n        ^\n/tmp/tmpzqesiox1.swift:18:9:\
    \ note: 'cab' previously declared here\n    let cab = cb * ab\n        ^\n/tmp/tmpzqesiox1.swift:27:9:\
    \ error: invalid redeclaration of 'aca'\n    let aca = aca * ab\n        ^\n/tmp/tmpzqesiox1.swift:21:9:\
    \ note: 'aca' previously declared here\n    let aca = ac * ab\n        ^\n/tmp/tmpzqesiox1.swift:28:9:\
    \ error: invalid redeclaration of 'aba'\n    let aba = aba * ab\n        ^\n/tmp/tmpzqesiox1.swift:22:9:\
    \ note: 'aba' previously declared here\n    let aba = ab * ab\n        ^\n/tmp/tmpzqesiox1.swift:29:9:\
    \ error: invalid redeclaration of 'bcb'\n    let bcb = bcb * bc\n        ^\n/tmp/tmpzqesiox1.swift:23:9:\
    \ note: 'bcb' previously declared here\n    let bcb = bc * b\n        ^\n/tmp/tmpzqesiox1.swift:30:9:\
    \ error: invalid redeclaration of 'cbc'\n    let cbc = cbc * cb\n        ^\n/tmp/tmpzqesiox1.swift:24:9:\
    \ note: 'cbc' previously declared here\n    let cbc = cb * c\n        ^\n"
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    \n    return ab >= bc && ab >= ac\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpjgo078k_/tmpjgo078k_.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aed2e7afc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aed2e4a6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aed2e4a6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aed2e4a57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjgo078k_                        0x000055b0c58252ab <unavailable> + 4779

    5    libc.so.6                          0x00002aed2e99b460 __libc_start_main +
    245

    6    tmpjgo078k_                        0x000055b0c5824f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    let abc = ab + bc + cb\n    return abc <=\
    \ 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(right_angle_triangle(a: 3, b:\
    \ 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpveo4z375/tmpveo4z375.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6ee6a63c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6ee675ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6ee675a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6ee67597b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpveo4z375                        0x000055dd15d602ab <unavailable> + 4779

    5    libc.so.6                          0x00002b6ee6c4f460 __libc_start_main +
    245

    6    tmpveo4z375                        0x000055dd15d5ff59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0) && ((a -\
    \ b) * (c - b) <= 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmp978f96bb/tmp978f96bb.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b60e9570c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b60e9267b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b60e9267988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b60e92667b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp978f96bb                        0x000055cee32681bb <unavailable> + 4539

    5    libc.so.6                          0x00002b60e975c460 __libc_start_main +
    245

    6    tmp978f96bb                        0x000055cee3267e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    \n    if a == 0 || b == 0 || c == 0 {\n        return false\n\
    \    }\n    \n    let delta = b * b - 4 * a * c\n    if delta < 0 {\n        return\
    \ false\n    }\n    \n    let theta = (b * b + 4 * a * c) / Double(delta)\n  \
    \  if theta < 0 {\n        return false\n    }\n    \n    let theta2 = theta *\
    \ theta\n    let theta3 = theta2 * theta\n    \n    let x = -c / Double(theta3)\n\
    \    let y = a / Double(theta3)\n    let z = -b / Double(theta3)\n    \n    return\
    \ (x * x + y * y + z * z == 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: SyntaxError
  stderr: "/tmp/tmpdo_u829b.swift:25:17: error: the compiler is unable to type-check\
    \ this expression in reasonable time; try breaking up the expression into distinct\
    \ sub-expressions\n    let theta = (b * b + 4 * a * c) / Double(delta)\n     \
    \           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n/tmp/tmpdo_u829b.swift:33:14:\
    \ error: cannot convert value of type 'Int' to expected argument type 'Double'\n\
    \    let x = -c / Double(theta3)\n             ^\n             Double( )\n/tmp/tmpdo_u829b.swift:33:16:\
    \ error: binary operator '/' cannot be applied to two 'Double' operands\n    let\
    \ x = -c / Double(theta3)\n            ~~ ^ ~~~~~~~~~~~~~~\n/tmp/tmpdo_u829b.swift:33:16:\
    \ note: overloads for '/' exist with these partially matching parameter lists:\
    \ (Double, Double), (Duration, Double), (Int, Int)\n    let x = -c / Double(theta3)\n\
    \               ^\n/tmp/tmpdo_u829b.swift:34:15: error: binary operator '/' cannot\
    \ be applied to operands of type 'Int' and 'Double'\n    let y = a / Double(theta3)\n\
    \            ~ ^ ~~~~~~~~~~~~~~\n/tmp/tmpdo_u829b.swift:34:15: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    let y = a / Double(theta3)\n           \
    \   ^\n/tmp/tmpdo_u829b.swift:35:14: error: cannot convert value of type 'Int'\
    \ to expected argument type 'Double'\n    let z = -b / Double(theta3)\n      \
    \       ^\n             Double( )\n/tmp/tmpdo_u829b.swift:35:16: error: binary\
    \ operator '/' cannot be applied to two 'Double' operands\n    let z = -b / Double(theta3)\n\
    \            ~~ ^ ~~~~~~~~~~~~~~\n/tmp/tmpdo_u829b.swift:35:16: note: overloads\
    \ for '/' exist with these partially matching parameter lists: (Double, Double),\
    \ (Duration, Double), (Int, Int)\n    let z = -b / Double(theta3)\n          \
    \     ^\n/tmp/tmpdo_u829b.swift:37:35: error: binary operator '==' cannot be applied\
    \ to operands of type 'Duration' and 'Int'\n    return (x * x + y * y + z * z\
    \ == 1)\n            ~~~~~~~~~~~~~~~~~~~~~ ^  ~\n/tmp/tmpdo_u829b.swift:37:35:\
    \ note: overloads for '==' exist with these partially matching parameter lists"
  stdout: ''
  timestamp: 1659824745
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab >= bc && ab >= cb)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmpzyxtihhc/tmpzyxtihhc.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae33ae3dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae33ab34b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae33ab34988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae33ab337b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzyxtihhc                        0x0000561aac0a332b <unavailable> + 4907

    5    libc.so.6                          0x00002ae33b029460 __libc_start_main +
    245

    6    tmpzyxtihhc                        0x0000561aac0a2f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(a - b)\n    let bc = abs(b\
    \ - c)\n    let cb = abs(c - b)\n    return (ab > bc && ab > cb)\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp334wenna/tmp334wenna.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b607a808c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b607a4ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b607a4ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b607a4fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp334wenna                        0x000055feae4b42ab <unavailable> + 4779

    5    libc.so.6                          0x00002b607a9f4460 __libc_start_main +
    245

    6    tmp334wenna                        0x000055feae4b3f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let a = abs(a)\n    let b = abs(b)\n   \
    \ let c = abs(c)\n    if a > b {\n        if b > c {\n            return false\n\
    \        } else {\n            return true\n        }\n    } else {\n        if\
    \ c > b {\n            return false\n        } else {\n            return true\n\
    \        }\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpke478wv6/tmpke478wv6.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b06419b0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b06416a7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b06416a7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b06416a67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpke478wv6                        0x0000564d5928c2ab <unavailable> + 4779

    5    libc.so.6                          0x00002b0641b9c460 __libc_start_main +
    245

    6    tmpke478wv6                        0x0000564d5928bf59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let bc = abs(c\
    \ - b)\n    let ac = abs(c - a)\n    return ab == bc && ab == ac\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp0dcuyhke/tmp0dcuyhke.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7ac4467c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7ac415eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7ac415e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7ac415d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp0dcuyhke                        0x0000564af4a912ab <unavailable> + 4779

    5    libc.so.6                          0x00002b7ac4653460 __libc_start_main +
    245

    6    tmp0dcuyhke                        0x0000564af4a90f59 <unavailable> + 3929

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: 1
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    let ab = abs(b - a)\n    let ac = abs(c\
    \ - a)\n    let bc = abs(b - c)\n    let abc = ab + ac + bc\n    let abc_ab =\
    \ ab * ab\n    let abc_ac = ab * ac\n    let abc_bc = ab * bc\n    let abc_abc\
    \ = abc_ab + abc_ac + abc_bc\n    let abc_abc_ab = abc_ab * ab\n    let abc_abc_ac\
    \ = abc_ab * ac\n    let abc_abc_bc = abc_ab * bc\n    let abc_abc_abc = abc_abc_ab\
    \ + abc_abc_ac + abc_abc_bc\n    let abc_abc_abc_ab = abc_abc_ab * ab\n    let\
    \ abc_abc_abc_ac = abc_abc_ab * ac\n    let abc_abc_abc_bc = abc_abc_ab * bc\n\
    \    let abc_abc_abc_abc = abc_abc_abc_ab + abc_abc_abc_ac + abc_abc_bc\n    let\
    \ abc_abc_abc_abc_ab = abc_abc_abc_ab * ab\n    let abc_abc_abc_abc_ac = abc_abc_abc_ab\
    \ * ac\n    let abc_abc_abc_abc_bc = abc_abc_abc_ab * bc\n    let abc_abc_abc_abc_abc\
    \ = abc_abc_abc_abc_ab + abc_abc_abc_ac + abc_abc_bc\n    let abc_abc_abc_abc_abc_ab\
    \ = abc_abc_abc_abc_ab * ab\n    let abc_abc_abc_abc_abc_ac = abc_abc_abc_abc_ab\
    \ * ac\n    let abc_abc_abc_abc_abc_bc = abc_abc_abc_abc_ab * bc\n    let abc_abc_abc_abc_abc_abc\
    \ = abc_abc_abc_abc_abc_ab + abc_abc_abc_ac + abc_abc_bc\n    let abc_abc_abc_abc_abc_abc_ab\
    \ = abc_abc_abc_abc_abc_ab * ab\n    let abc_abc_abc_abc_abc_abc_ac = abc_abc_abc_abc_abc_ab\
    \ * ac\n    let abc_abc_abc_abc_abc_abc_bc = abc_abc_ab\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a: 10, b: 6, c: 8) ==\
    \ true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a:\
    \ 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) ==\
    \ false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a:\
    \ 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73)\
    \ == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 10) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp5elky1kp.swift:15:9: warning: initialization of immutable value\
    \ 'abc' was never used; consider replacing with assignment to '_' or removing\
    \ it\n    let abc = ab + ac + bc\n    ~~~~^~~\n    _\n/tmp/tmp5elky1kp.swift:19:9:\
    \ warning: initialization of immutable value 'abc_abc' was never used; consider\
    \ replacing with assignment to '_' or removing it\n    let abc_abc = abc_ab +\
    \ abc_ac + abc_bc\n    ~~~~^~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:23:9: warning:\
    \ initialization of immutable value 'abc_abc_abc' was never used; consider replacing\
    \ with assignment to '_' or removing it\n    let abc_abc_abc = abc_abc_ab + abc_abc_ac\
    \ + abc_abc_bc\n    ~~~~^~~~~~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:26:9: warning:\
    \ initialization of immutable value 'abc_abc_abc_bc' was never used; consider\
    \ replacing with assignment to '_' or removing it\n    let abc_abc_abc_bc = abc_abc_ab\
    \ * bc\n    ~~~~^~~~~~~~~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:27:9: warning: initialization\
    \ of immutable value 'abc_abc_abc_abc' was never used; consider replacing with\
    \ assignment to '_' or removing it\n    let abc_abc_abc_abc = abc_abc_abc_ab +\
    \ abc_abc_abc_ac + abc_abc_bc\n    ~~~~^~~~~~~~~~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:29:9:\
    \ warning: initialization of immutable value 'abc_abc_abc_abc_ac' was never used;\
    \ consider replacing with assignment to '_' or removing it\n    let abc_abc_abc_abc_ac\
    \ = abc_abc_abc_ab * ac\n    ~~~~^~~~~~~~~~~~~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:30:9:\
    \ warning: initialization of immutable value 'abc_abc_abc_abc_bc' was never used;\
    \ consider replacing with assignment to '_' or removing it\n    let abc_abc_abc_abc_bc\
    \ = abc_abc_abc_ab * bc\n    ~~~~^~~~~~~~~~~~~~~~~~\n    _\n/tmp/tmp5elky1kp.swift:31:9:\
    \ warning: initialization of immutable value 'abc_abc_abc_abc_abc' was never used;\
    \ consider replacing with assignment to '_' or removing it\n    let abc_abc_abc_abc_abc\
    \ = abc_abc_abc_abc_ab + abc_abc_abc_ac + abc_abc_bc\n    ~~~~^~~~~~~~~~~~~~~~~~~\n\
    \    _\n/tmp/tmp5elky1kp.swift:33:9: warning: initialization of immutable value\
    \ 'abc_abc_abc_abc_abc_ac' was never used; con"
  stdout: ''
  timestamp: 1659824644
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((b - a) * (c - b) <= 0)\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(right_angle_triangle(a: 3, b: 4, c: 5) == true)\n\
    assert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\nassert(right_angle_triangle(a:\
    \ 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a: 2, b: 2, c: 2) == false)\n\
    assert(right_angle_triangle(a: 7, b: 24, c: 25) == true)\nassert(right_angle_triangle(a:\
    \ 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a: 5, b: 12, c: 13) ==\
    \ true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) == true)\nassert(right_angle_triangle(a:\
    \ 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a: 1, b: 1, c: 1) ==\
    \ false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) == false)"
  status: Exception
  stderr: 'tmp7g55uw9i/tmp7g55uw9i.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b801b73ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b801b431b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b801b431988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b801b4307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7g55uw9i                        0x000055a5dd3f61bb <unavailable> + 4539

    5    libc.so.6                          0x00002b801b926460 __libc_start_main +
    245

    6    tmp7g55uw9i                        0x000055a5dd3f5e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643
- exit_code: -4
  program: "\n/// Given the lengths of the three sides of a triangle. Return true\
    \ if the three\n/// sides form a right-angled triangle, false otherwise.\n///\
    \ A right-angled triangle is a triangle in which one angle is right angle or \n\
    /// 90 degree.\n/// Example:\n/// >>> right_angle_triangle(a: 3, b: 4, c: 5)\n\
    /// true\n/// >>> right_angle_triangle(a: 1, b: 2, c: 3)\n/// false\nfunc right_angle_triangle(a:\
    \ Int, b: Int, c: Int) -> Bool {\n    return ((a + b > c) && (a + c > b) && (b\
    \ + c > a))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(right_angle_triangle(a:\
    \ 3, b: 4, c: 5) == true)\nassert(right_angle_triangle(a: 1, b: 2, c: 3) == false)\n\
    assert(right_angle_triangle(a: 10, b: 6, c: 8) == true)\nassert(right_angle_triangle(a:\
    \ 2, b: 2, c: 2) == false)\nassert(right_angle_triangle(a: 7, b: 24, c: 25) ==\
    \ true)\nassert(right_angle_triangle(a: 10, b: 5, c: 7) == false)\nassert(right_angle_triangle(a:\
    \ 5, b: 12, c: 13) == true)\nassert(right_angle_triangle(a: 15, b: 8, c: 17) ==\
    \ true)\nassert(right_angle_triangle(a: 48, b: 55, c: 73) == true)\nassert(right_angle_triangle(a:\
    \ 1, b: 1, c: 1) == false)\nassert(right_angle_triangle(a: 2, b: 2, c: 10) ==\
    \ false)"
  status: Exception
  stderr: 'tmpeq3xjbsp/tmpeq3xjbsp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3bee410c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3bee107b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3bee107988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3bee1067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpeq3xjbsp                        0x000055828b7da335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3bee5fc460 __libc_start_main +
    245

    6    tmpeq3xjbsp                        0x000055828b7d9e69 <unavailable> + 3689

    '
  stdout: ''
  timestamp: 1659824643

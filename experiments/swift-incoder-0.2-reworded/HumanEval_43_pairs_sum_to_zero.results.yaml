language: swift
name: HumanEval_43_pairs_sum_to_zero
results:
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum =\
    \ 0\n        } else {\n            i += 1\n        }\n    }\n    for _ in 0..<l.count\
    \ {\n        sum += l[j]\n        if sum < 0 {\n            sum = 0\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return i != j\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmphp1ebnjq/tmphp1ebnjq.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac880dd4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac880acbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac880acb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac880aca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphp1ebnjq                        0x0000559a04dd87c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ac880fc0460 __libc_start_main +
    245

    6    tmphp1ebnjq                        0x0000559a04dd81a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum < 0 {\n            sum = 0\n        }\
    \ else {\n            i++\n        }\n    }\n    for k in l {\n        sum +=\
    \ k\n        if sum < 0 {\n            sum = 0\n        } else {\n           \
    \ j++\n        }\n    }\n    return i == j\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpoan19kkg.swift:24:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpoan19kkg.swift:32:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        i += 1\n        j +=\
    \ 1\n    }\n    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzz4newy0.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpzz4newy0.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpzz4newy0.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpzz4newy0.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum == 0 {\n     \
    \       return true\n        }\n        sum += l[j]\n        if sum == 0 {\n \
    \           return true\n        }\n        i++\n        j++\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l: [1,\
    \ 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp4fjqzttm.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmp4fjqzttm.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmp4fjqzttm.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmp4fjqzttm.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        } else {\n            j = i\n        }\n        if j == i {\n       \
    \     return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpi0z81zro.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpi0z81zro.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpi0z81zro.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        i += 1\n        if sum < 0 {\n \
    \           sum = 0\n            i += 1\n        }\n    }\n    for _ in 0..<l.count\
    \ {\n        sum += l[j]\n        j += 1\n        if sum < 0 {\n            sum\
    \ = 0\n            j += 1\n        }\n    }\n    return i == j\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: Exception
  stderr: 'tmpcwsgc59w/tmpcwsgc59w.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae38cb7bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae38c872b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae38c872988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae38c8717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcwsgc59w                        0x0000556453a99544 <unavailable> + 5444

    5    libc.so.6                          0x00002ae38cd67460 __libc_start_main +
    245

    6    tmpcwsgc59w                        0x0000556453a991a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum > 0 {\n            if i == j {\n     \
    \           return false\n            }\n            i++\n        } else {\n \
    \           j++\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpvr4wymzj.swift:25:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpvr4wymzj.swift:27:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum =\
    \ 0\n        } else {\n            i += 1\n        }\n    }\n    for _ in 0..<l.count\
    \ {\n        sum += l[j]\n        if sum < 0 {\n            sum = 0\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return i != j\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmphp1ebnjq/tmphp1ebnjq.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac880dd4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac880acbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac880acb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac880aca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphp1ebnjq                        0x0000559a04dd87c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ac880fc0460 __libc_start_main +
    245

    6    tmphp1ebnjq                        0x0000559a04dd81a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum < 0 {\n      \
    \      sum = 0\n        }\n        if sum == 0 {\n            return true\n  \
    \      }\n        if sum > 0 {\n            sum += l[j]\n            if sum <\
    \ 0 {\n                sum = 0\n            }\n            if sum == 0 {\n   \
    \             return true\n            }\n        }\n        i += 1\n        j\
    \ += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpj8ys51gr.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpj8ys51gr.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpj8ys51gr.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpj8ys51gr.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        }\n        if sum == 0 {\n            return true\n        }\n    }\n\
    \    for j < l.count {\n        sum += l[j]\n        if sum < 0 {\n          \
    \  sum = 0\n        }\n        if sum == 0 {\n            return true\n      \
    \  }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp6x8a1khp.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmp6x8a1khp.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmp6x8a1khp.swift:28:11: error: expected 'in' after\
    \ for-each pattern\n    for j < l.count {\n          ^\n/tmp/tmp6x8a1khp.swift:28:11:\
    \ error: unary operator cannot be separated from its operand\n    for j < l.count\
    \ {\n          ^~\n           \n/tmp/tmp6x8a1khp.swift:19:11: error: '<' is not\
    \ a prefix unary operator\n    for i < l.count {\n          ^\n/tmp/tmp6x8a1khp.swift:28:11:\
    \ error: '<' is not a prefix unary operator\n    for j < l.count {\n         \
    \ ^\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum =\
    \ 0\n        } else {\n            i += 1\n        }\n    }\n    for _ in 0..<l.count\
    \ {\n        sum += l[j]\n        if sum < 0 {\n            sum = 0\n        }\
    \ else {\n            j += 1\n        }\n    }\n    return i == j\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmphxmz5vfu/tmphxmz5vfu.swift:51: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b24cb57fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b24cb276b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b24cb276988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b24cb2757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphxmz5vfu                        0x000055e419605544 <unavailable> + 5444

    5    libc.so.6                          0x00002b24cb76b460 __libc_start_main +
    245

    6    tmphxmz5vfu                        0x000055e4196051a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        i += 1\n        sum +=\
    \ l[j]\n        j += 1\n    }\n    return sum == 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1yx_m2kj.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmp1yx_m2kj.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmp1yx_m2kj.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmp1yx_m2kj.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    var pairs\
    \ = 0\n    for i < l.count && j < l.count {\n        sum = l[i] + l[j]\n     \
    \   if sum == 0 {\n            pairs += 1\n        }\n        i += 1\n       \
    \ j += 1\n    }\n    return pairs == 2\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpwt_tp1df.swift:20:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpwt_tp1df.swift:20:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpwt_tp1df.swift:20:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpwt_tp1df.swift:20:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum == 0 {\n            j = i\n \
    \       }\n    }\n    return j == i\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmph7gkwypz.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmph7gkwypz.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmph7gkwypz.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        if i == j {\n            sum += l[i]\n            i +=\
    \ 1\n        } else {\n            if sum != 0 {\n                if sum == l[j]\
    \ {\n                    j += 1\n                } else {\n                  \
    \  return false\n                }\n            }\n            sum = 0\n     \
    \       i += 1\n            j += 1\n        }\n    }\n    return true\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpd57yu0oz/tmpd57yu0oz.swift:52: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b631ff41c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b631fc38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b631fc38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b631fc377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd57yu0oz                        0x0000557c15ece544 <unavailable> + 5444

    5    libc.so.6                          0x00002b632012d460 __libc_start_main +
    245

    6    tmpd57yu0oz                        0x0000557c15ece1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        i += 1\n        if sum < 0 {\n \
    \           sum = 0\n            j += 1\n        }\n    }\n    return j == l.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpgb5px9bn/tmpgb5px9bn.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad62baa9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad62b7a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad62b7a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad62b79f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb5px9bn                        0x000055be99f3e7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ad62bc95460 __libc_start_main +
    245

    6    tmpgb5px9bn                        0x000055be99f3e1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum < 0 {\n            sum = 0\n        }\n\
    \        if sum == 0 {\n            return true\n        }\n        if sum > 0\
    \ {\n            i++\n        }\n        if sum < 0 {\n            j++\n     \
    \   }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpsp02evl6.swift:28:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpsp02evl6.swift:31:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0 ..< l.count {\n        sum += l[i]\n        i += 1\n    }\n    for _ in 0\
    \ ..< l.count {\n        sum += l[j]\n        j += 1\n    }\n    return sum ==\
    \ 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5,\
    \ 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpdd_9zwih/tmpdd_9zwih.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4dc0ce9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4dc09e0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4dc09e0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4dc09df7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdd_9zwih                        0x0000563c7b78e7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002b4dc0ed5460 __libc_start_main +
    245

    6    tmpdd_9zwih                        0x0000563c7b78e1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0 ..< l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum\
    \ = 0\n            i += 1\n            continue\n        }\n        if sum > 0\
    \ {\n            sum = 0\n            j += 1\n            continue\n        }\n\
    \        if i == j {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp5k5tchzm/tmp5k5tchzm.swift:54: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac61014dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac60fe44b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac60fe44988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac60fe437b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5k5tchzm                        0x000056112d13d7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ac610339460 __libc_start_main +
    245

    6    tmp5k5tchzm                        0x000056112d13d1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum == 0 {\n            return false\n\
    \        }\n    }\n    for j < l.count {\n        sum += l[j]\n        if sum\
    \ == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp8h_8oprw.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmp8h_8oprw.swift:25:11: error: expected 'in' after\
    \ for-each pattern\n    for j < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:25:11:\
    \ error: unary operator cannot be separated from its operand\n    for j < l.count\
    \ {\n          ^~\n           \n/tmp/tmp8h_8oprw.swift:19:11: error: '<' is not\
    \ a prefix unary operator\n    for i < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:25:11:\
    \ error: '<' is not a prefix unary operator\n    for j < l.count {\n         \
    \ ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        i += 1\n        if sum < 0 {\n \
    \           sum = 0\n            j += 1\n        }\n    }\n    return j == l.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpgb5px9bn/tmpgb5px9bn.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad62baa9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad62b7a0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad62b7a0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad62b79f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgb5px9bn                        0x000055be99f3e7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ad62bc95460 __libc_start_main +
    245

    6    tmpgb5px9bn                        0x000055be99f3e1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if i == j {\n            if sum == 0 {\n    \
    \            return true\n            }\n        } else {\n            if sum\
    \ != 0 {\n                return false\n            }\n        }\n        i +=\
    \ 1\n        j += 1\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: Exception
  stderr: 'tmphjdcpott/tmphjdcpott.swift:52: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3c0dba1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3c0d898b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3c0d898988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3c0d8977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphjdcpott                        0x000055d9b45906f5 <unavailable> + 5877

    5    libc.so.6                          0x00002b3c0dd8d460 __libc_start_main +
    245

    6    tmphjdcpott                        0x000055d9b45900d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        } else {\n            j = i\n        }\n        if j == i {\n       \
    \     return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpi0z81zro.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpi0z81zro.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpi0z81zro.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum == 0 {\n            j = i\n \
    \       }\n    }\n    return j == i\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmph7gkwypz.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmph7gkwypz.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmph7gkwypz.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum < 0 {\n      \
    \      sum = 0\n        } else {\n            sum += l[j]\n            if sum\
    \ < 0 {\n                sum = 0\n            } else {\n                j++\n\
    \            }\n        }\n        i++\n    }\n    return i == l.count && j ==\
    \ l.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpwarbnuld.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpwarbnuld.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpwarbnuld.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpwarbnuld.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum = l[i] + l[j]\n        if sum == 0 {\n\
    \            return true\n        }\n        if sum < 0 {\n            j = j +\
    \ 1\n        } else {\n            i = i + 1\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpigyjk1gd.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpigyjk1gd.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpigyjk1gd.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpigyjk1gd.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum = l[i] + l[j]\n        if sum == 0 {\n\
    \            return true\n        }\n        if sum < 0 {\n            j = j +\
    \ 1\n        } else {\n            i = i + 1\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpigyjk1gd.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpigyjk1gd.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpigyjk1gd.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpigyjk1gd.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    var pairs\
    \ = 0\n    for i < l.count {\n        sum += l[i]\n        if sum < 0 {\n    \
    \        sum = 0\n        }\n        if sum == 0 {\n            pairs++\n    \
    \    }\n        if sum > 0 {\n            j = i\n            sum -= l[i]\n   \
    \     }\n        if pairs == 2 {\n            return true\n        }\n    }\n\
    \    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpikmjz1zx.swift:20:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpikmjz1zx.swift:20:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpikmjz1zx.swift:20:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum < 0 {\n            sum = 0\n        }\n\
    \        if sum == 0 {\n            return true\n        }\n        if sum > 0\
    \ {\n            i++\n        }\n    }\n    for k in l {\n        sum += k\n \
    \       if sum < 0 {\n            sum = 0\n        }\n        if sum == 0 {\n\
    \            return false\n        }\n        if sum > 0 {\n            j++\n\
    \        }\n    }\n    return i == j\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpv2v9kwsy.swift:28:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpv2v9kwsy.swift:40:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum < 0 {\n            sum = 0\n        }\n\
    \        if sum == 0 {\n            return true\n        }\n        if sum > 0\
    \ {\n            i++\n        }\n        if sum < 0 {\n            j++\n     \
    \   }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpsp02evl6.swift:28:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpsp02evl6.swift:31:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum == 0 {\n            return false\n\
    \        }\n    }\n    for j < l.count {\n        sum += l[j]\n        if sum\
    \ == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp8h_8oprw.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmp8h_8oprw.swift:25:11: error: expected 'in' after\
    \ for-each pattern\n    for j < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:25:11:\
    \ error: unary operator cannot be separated from its operand\n    for j < l.count\
    \ {\n          ^~\n           \n/tmp/tmp8h_8oprw.swift:19:11: error: '<' is not\
    \ a prefix unary operator\n    for i < l.count {\n          ^\n/tmp/tmp8h_8oprw.swift:25:11:\
    \ error: '<' is not a prefix unary operator\n    for j < l.count {\n         \
    \ ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        i += 1\n        sum +=\
    \ l[j]\n        j += 1\n    }\n    return sum == 0\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp1yx_m2kj.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmp1yx_m2kj.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmp1yx_m2kj.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmp1yx_m2kj.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820615
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0 ..< l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum\
    \ = 0\n        }\n        if sum == 0 {\n            return false\n        }\n\
    \        i += 1\n    }\n    for _ in 0 ..< l.count {\n        sum += l[j]\n  \
    \      if sum < 0 {\n            sum = 0\n        }\n        if sum == 0 {\n \
    \           return false\n        }\n        j += 1\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpm_knjx23/tmpm_knjx23.swift:55: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb70ca1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb70998b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb70998988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb709977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpm_knjx23                        0x0000562835f17544 <unavailable> + 5444

    5    libc.so.6                          0x00002aeb70e8d460 __libc_start_main +
    245

    6    tmpm_knjx23                        0x0000562835f171a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum = l[i] + l[j]\n        if sum == 0 {\n\
    \            return true\n        }\n        if sum < 0 {\n            j = j +\
    \ 1\n        } else {\n            i = i + 1\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpigyjk1gd.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpigyjk1gd.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpigyjk1gd.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpigyjk1gd.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum < 0 {\n      \
    \      sum = 0\n        } else {\n            sum += l[j]\n            if sum\
    \ < 0 {\n                sum = 0\n            } else {\n                j++\n\
    \            }\n        }\n        i++\n    }\n    return j == l.count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmptbmxny7y.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmptbmxny7y.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmptbmxny7y.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmptbmxny7y.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum == 0 {\n            return\
    \ false\n        }\n        i += 1\n    }\n    for _ in 0..<l.count {\n      \
    \  sum += l[j]\n        if sum == 0 {\n            return false\n        }\n \
    \       j += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: Exception
  stderr: 'tmp6aqnoeqr/tmp6aqnoeqr.swift:49: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba598789c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba598480b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba598480988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba59847f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6aqnoeqr                        0x0000557ea8d59544 <unavailable> + 5444

    5    libc.so.6                          0x00002ba598975460 __libc_start_main +
    245

    6    tmp6aqnoeqr                        0x0000557ea8d591a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if sum < 0 {\n            sum = 0\n        }\n\
    \        if sum > 0 {\n            i++\n        }\n        if sum == 0 {\n   \
    \         j++\n        }\n    }\n    return i == j\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbblnekez.swift:25:14: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n            i++\n             ^~\n/tmp/tmpbblnekez.swift:28:14:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n          \
    \  j++\n             ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        }\n        if sum == 0 {\n            return true\n        }\n    }\n\
    \    for j < l.count {\n        sum += l[j]\n        if sum < 0 {\n          \
    \  sum = 0\n        }\n        if sum == 0 {\n            return false\n     \
    \   }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpi7bdi3jm.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpi7bdi3jm.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpi7bdi3jm.swift:28:11: error: expected 'in' after\
    \ for-each pattern\n    for j < l.count {\n          ^\n/tmp/tmpi7bdi3jm.swift:28:11:\
    \ error: unary operator cannot be separated from its operand\n    for j < l.count\
    \ {\n          ^~\n           \n/tmp/tmpi7bdi3jm.swift:19:11: error: '<' is not\
    \ a prefix unary operator\n    for i < l.count {\n          ^\n/tmp/tmpi7bdi3jm.swift:28:11:\
    \ error: '<' is not a prefix unary operator\n    for j < l.count {\n         \
    \ ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        } else {\n            j = i\n        }\n        while j < l.count {\n\
    \            sum += l[j]\n            if sum < 0 {\n                sum = 0\n\
    \            } else {\n                j++\n            }\n        }\n       \
    \ if sum == 0 {\n            return true\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpbrakgtka.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpbrakgtka.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpbrakgtka.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum = l[i] + l[j]\n        if sum == 0 {\n\
    \            return true\n        }\n        if sum < 0 {\n            j = j +\
    \ 1\n        } else {\n            i = i + 1\n        }\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpigyjk1gd.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpigyjk1gd.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpigyjk1gd.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpigyjk1gd.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        i += 1\n    }\n    for _ in 0..<l.count\
    \ {\n        sum += l[j]\n        j += 1\n    }\n    return sum == 0\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp4y88zg4w/tmp4y88zg4w.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac42ebe4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac42e8dbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac42e8db988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac42e8da7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4y88zg4w                        0x000055667df137c5 <unavailable> + 6085

    5    libc.so.6                          0x00002ac42edd0460 __libc_start_main +
    245

    6    tmp4y88zg4w                        0x000055667df131a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum == 0 {\n            return\
    \ false\n        }\n        i += 1\n    }\n    for _ in 0..<l.count {\n      \
    \  sum += l[j]\n        if sum == 0 {\n            return false\n        }\n \
    \       j += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: Exception
  stderr: 'tmp6aqnoeqr/tmp6aqnoeqr.swift:49: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba598789c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba598480b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba598480988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba59847f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6aqnoeqr                        0x0000557ea8d59544 <unavailable> + 5444

    5    libc.so.6                          0x00002ba598975460 __libc_start_main +
    245

    6    tmp6aqnoeqr                        0x0000557ea8d591a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    var result\
    \ = true\n    for _ in 0..<l.count {\n        sum += l[i]\n        if sum < 0\
    \ {\n            sum = 0\n        }\n        if sum != 0 {\n            j = i\n\
    \            i = i + 1\n            sum = sum - l[i]\n            if sum != 0\
    \ {\n                result = false\n            }\n        }\n    }\n    return\
    \ result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'Swift/ContiguousArrayBuffer.swift:600: Fatal error: Index out of range

    Current stack trace:

    0    libswiftCore.so                    0x00002b6eb2a2ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6eb2721561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6eb2721286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6eb272113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6eb2720bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftSwiftOnoneSupport.so       0x00002b6eb2520e83 <unavailable> + 188035

    6    tmpgjntk12h                        0x0000560d90977e6d <unavailable> + 7789

    7    tmpgjntk12h                        0x0000560d909774cd <unavailable> + 5325

    8    libc.so.6                          0x00002b6eb2c16460 __libc_start_main +
    245

    9    tmpgjntk12h                        0x0000560d909771a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum == 0 {\n     \
    \       return false\n        }\n        i++\n        j++\n    }\n    return true\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpuwb1y980.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpuwb1y980.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpuwb1y980.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpuwb1y980.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum == 0 {\n            return\
    \ false\n        }\n        i += 1\n    }\n    for _ in 0..<l.count {\n      \
    \  sum += l[j]\n        if sum == 0 {\n            return false\n        }\n \
    \       j += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: Exception
  stderr: 'tmp6aqnoeqr/tmp6aqnoeqr.swift:49: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba598789c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba598480b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba598480988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba59847f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6aqnoeqr                        0x0000557ea8d59544 <unavailable> + 5444

    5    libc.so.6                          0x00002ba598975460 __libc_start_main +
    245

    6    tmp6aqnoeqr                        0x0000557ea8d591a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum == 0 {\n            j = i\n \
    \           sum = 1\n        }\n    }\n    return j == i\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpcquns_p1.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpcquns_p1.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpcquns_p1.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    var pairs\
    \ = 0\n    for i < l.count {\n        sum = l[i] + l[j]\n        if sum == 0 {\n\
    \            pairs += 1\n        }\n        if sum < 0 {\n            sum = 0\n\
    \        }\n        if sum > 0 {\n            j = i + 1\n        } else {\n  \
    \          i = i + 1\n        }\n    }\n    return pairs == 2\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpzgyzzjr0.swift:20:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmpzgyzzjr0.swift:20:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmpzgyzzjr0.swift:20:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0..<l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum =\
    \ 0\n        }\n        if sum == 0 {\n            return true\n        }\n  \
    \      i += 1\n    }\n    for _ in 0..<l.count {\n        sum += l[j]\n      \
    \  if sum < 0 {\n            sum = 0\n        }\n        if sum == 0 {\n     \
    \       return true\n        }\n        j += 1\n    }\n    return false\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpo15zvgjq/tmpo15zvgjq.swift:58: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5f256ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5f2265b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5f2265988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5f22647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo15zvgjq                        0x000055bef96cd7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002af5f275a460 __libc_start_main +
    245

    6    tmpo15zvgjq                        0x000055bef96cd1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for k in\
    \ l {\n        sum += k\n        if i == j {\n            if sum != 0 {\n    \
    \            return false\n            }\n        } else {\n            if sum\
    \ == 0 {\n                return false\n            }\n        }\n        i++\n\
    \        j++\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\n\
    assert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [1]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 4, 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpmbq3h9na.swift:30:10: error: cannot find operator '++' in scope;\
    \ did you mean '+= 1'?\n        i++\n         ^~\n/tmp/tmpmbq3h9na.swift:31:10:\
    \ error: cannot find operator '++' in scope; did you mean '+= 1'?\n        j++\n\
    \         ^~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum < 0 {\n      \
    \      sum = 0\n        } else {\n            sum += l[j]\n            if sum\
    \ < 0 {\n                sum = 0\n            } else {\n                j++\n\
    \            }\n        }\n        i++\n    }\n    return i == l.count && j ==\
    \ l.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpwarbnuld.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpwarbnuld.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpwarbnuld.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpwarbnuld.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for _ in\
    \ 0 ..< l.count {\n        sum += l[i]\n        i += 1\n        if sum < 0 {\n\
    \            sum = 0\n            j += 1\n        }\n    }\n    return j == l.count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(pairs_sum_to_zero(l: [1, 3, 5, 0]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7]) ==\
    \ true)\nassert(pairs_sum_to_zero(l: [1]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 3,\
    \ 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 30]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmpwqxk9xq0/tmpwqxk9xq0.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0227cacc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02279a3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02279a3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02279a27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwqxk9xq0                        0x000055ec1ce1f7c5 <unavailable> + 6085

    5    libc.so.6                          0x00002b0227e98460 __libc_start_main +
    245

    6    tmpwqxk9xq0                        0x000055ec1ce1f1a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count && j < l.count {\n        sum += l[i]\n        if sum < 0 {\n      \
    \      sum = 0\n        } else {\n            sum += l[j]\n            if sum\
    \ < 0 {\n                sum = 0\n            } else {\n                j++\n\
    \            }\n        }\n        i++\n    }\n    return i == l.count && j ==\
    \ l.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpwarbnuld.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count && j < l.count {\n          ^\n/tmp/tmpwarbnuld.swift:19:11:\
    \ error: unary operator cannot be separated from its operand\n    for i < l.count\
    \ && j < l.count {\n          ^~\n           \n/tmp/tmpwarbnuld.swift:19:11: error:\
    \ '<' is not a prefix unary operator\n    for i < l.count && j < l.count {\n \
    \         ^\n/tmp/tmpwarbnuld.swift:19:21: error: for-in loop requires 'Bool'\
    \ to conform to 'Sequence'\n    for i < l.count && j < l.count {\n          ~~~~~~~~~~^~~~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: 1
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var i = 0\n    var j = 0\n    var sum = 0\n    for i <\
    \ l.count {\n        sum += l[i]\n        if sum < 0 {\n            sum = 0\n\
    \        } else {\n            sum += l[j]\n            if sum < 0 {\n       \
    \         sum = 0\n            } else {\n                j++\n            }\n\
    \        }\n        if j == i {\n            return false\n        }\n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: SyntaxError
  stderr: "/tmp/tmp7ztjh3_f.swift:19:11: error: expected 'in' after for-each pattern\n\
    \    for i < l.count {\n          ^\n/tmp/tmp7ztjh3_f.swift:19:11: error: unary\
    \ operator cannot be separated from its operand\n    for i < l.count {\n     \
    \     ^~\n           \n/tmp/tmp7ztjh3_f.swift:19:11: error: '<' is not a prefix\
    \ unary operator\n    for i < l.count {\n          ^\n"
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616
- exit_code: -4
  program: "\n/// pairs_sum_to_zero takes an array of integers as an input.\n/// it\
    \ returns true if there are two distinct elements in the array that\n/// sum to\
    \ zero, and false otherwise.\n/// >>> pairs_sum_to_zero(l: [1, 3, 5, 0])\n///\
    \ false\n/// >>> pairs_sum_to_zero(l: [1, 3, -2, 1])\n/// false\n/// >>> pairs_sum_to_zero(l:\
    \ [1, 2, 3, 7])\n/// false\n/// >>> pairs_sum_to_zero(l: [2, 4, -5, 3, 5, 7])\n\
    /// true\n/// >>> pairs_sum_to_zero(l: [1])\n/// false\nfunc pairs_sum_to_zero(l:\
    \ [Int]) -> Bool {\n    var sum = 0\n    for x in l {\n        sum += x\n    }\n\
    \    return sum == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(pairs_sum_to_zero(l:\
    \ [1, 3, 5, 0]) == false)\nassert(pairs_sum_to_zero(l: [1, 3, -2, 1]) == false)\n\
    assert(pairs_sum_to_zero(l: [1, 2, 3, 7]) == false)\nassert(pairs_sum_to_zero(l:\
    \ [2, 4, -5, 3, 5, 7]) == true)\nassert(pairs_sum_to_zero(l: [1]) == false)\n\
    assert(pairs_sum_to_zero(l: [-3, 9, -1, 3, 2, 30]) == true)\nassert(pairs_sum_to_zero(l:\
    \ [-3, 9, -1, 3, 2, 31]) == true)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4,\
    \ 2, 30]) == false)\nassert(pairs_sum_to_zero(l: [-3, 9, -1, 4, 2, 31]) == false)"
  status: Exception
  stderr: 'tmp880flytc/tmp880flytc.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba7e95d9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba7e92d0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba7e92d0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba7e92cf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp880flytc                        0x000055ec572b36f5 <unavailable> + 5877

    5    libc.so.6                          0x00002ba7e97c5460 __libc_start_main +
    245

    6    tmp880flytc                        0x000055ec572b30d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659820616

name: HumanEval_137_compare_one
language: swift
prompt: "\nenum Value: Equatable, Hashable {\n    case intValue(Int)\n    case doubleValue(Double)\n\
  \    case stringValue(String)\n}\n\n            \n/// Create a function that takes\
  \ integers, floats, or strings representing\n/// real numbers, and returns the larger\
  \ variable in its given variable type.\n/// Return nil if the values are equal.\n\
  /// Note: If a real number is represented as a string, the floating point might\
  \ be . or ,\n/// >>> compare_one(a: .intValue(1), b: .doubleValue(2.5))\n/// .doubleValue(2.5)\n\
  /// >>> compare_one(a: .intValue(1), b: .stringValue(\"2,3\"))\n/// .stringValue(\"\
  2,3\")\n/// >>> compare_one(a: .stringValue(\"5,1\"), b: .stringValue(\"6\"))\n\
  /// .stringValue(\"6\")\n/// >>> compare_one(a: .stringValue(\"1\"), b: .intValue(1))\n\
  /// nil\nfunc compare_one(a: Value, b: Value) -> Value? {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(compare_one(a: .intValue(1), b: .intValue(2))\
  \ == .intValue(2))\nassert(compare_one(a: .intValue(1), b: .doubleValue(2.5)) ==\
  \ .doubleValue(2.5))\nassert(compare_one(a: .intValue(2), b: .intValue(3)) == .intValue(3))\n\
  assert(compare_one(a: .intValue(5), b: .intValue(6)) == .intValue(6))\nassert(compare_one(a:\
  \ .intValue(1), b: .stringValue(\"2,3\")) == .stringValue(\"2,3\"))\nassert(compare_one(a:\
  \ .stringValue(\"5,1\"), b: .stringValue(\"6\")) == .stringValue(\"6\"))\nassert(compare_one(a:\
  \ .stringValue(\"1\"), b: .stringValue(\"2\")) == .stringValue(\"2\"))\nassert(compare_one(a:\
  \ .stringValue(\"1\"), b: .intValue(1)) == nil)"
completions: ["    switch a { // Switch on a's type\n    case .intValue(_):\n    \
    \    switch b { // Switch on b's type\n        case .intValue(_):\n          \
    \  return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n     \
    \   case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .doubleValue(a.doubleValue > b.intValue\
    \ ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    return\
    \ nil", "    switch a { // Switch on type to determine which comparison to use\n\
    \    case .intValue(_):\n        switch b { // Switch on type to determine which\
    \ comparison to use\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        case\
    \ .doubleValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a.\n    case .intValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which function to call\n    case .intValue(_):\n      \
    \  return a.intValue() >= b.intValue()\n    case .doubleValue(_):\n        return\
    \ a.doubleValue() >= b.doubleValue()\n    case .stringValue(_):\n        return\
    \ a.stringValue() >= b.stringValue()\n    }\n    return nil", "    switch a {\
    \ // Switch on type to determine which comparison to use\n    case .intValue(_):\n\
    \        switch b { // Switch on type to determine which comparison to use\n \
    \       case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .stringValue(_):\n        switch b { // Switch on type to\
    \ determine which comparison to use\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue)\n        case .doubleValue(_):\n  \
    \          return .stringValue(a.stringValue > b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        }\n \
    \   }\n    return nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        default: return nil\n    }\n    switch b { case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n        default: return nil\n    }\n    if a.intValue() < b.intValue()\
    \ { return .intValue(a) }\n    if a.doubleValue() < b.doubleValue() { return .doubleValue(a)\
    \ }\n    if a.stringValue() < b.stringValue() { return .stringValue(a) }\n   \
    \ return nil", "    switch a { // Switch on the type of the first argument\n \
    \   case .intValue(_):\n        switch b { // Switch on the type of the second\
    \ argument\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on the type of the second argument\n        case .intValue(_):\n           \
    \ return .doubleValue(max(Double(a), Double(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on the type of the second argument\n\
    \        case .intValue(_):\n            return .stringValue(max(String(a), String(b)))\n\
    \        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n        if let bInt = b.intValue() {\n          \
    \  return aInt > bInt ? .intValue(aInt) : .intValue(bInt)\n        } else if let\
    \ bDouble = b.doubleValue() {\n            return aDouble > bDouble ? .doubleValue(aDouble)\
    \ : .doubleValue(bDouble)\n        } else if let bString = b.stringValue() {\n\
    \            return aString > bString ? .stringValue(aString) : .stringValue(bString)\n\
    \        } else {\n            return nil\n        }\n    }", "    switch a {\
    \ // Switch on the type of a\n    case .intValue(_):\n        switch b { // Switch\
    \ on the type of b\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on the type of the first argument\n    case .intValue(_):\n        switch b\
    \ { // Switch on the type of the second argument\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on the type of the second argument\n        case .intValue(_):\n    \
    \        return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on the type of the second argument\n        case .intValue(_):\n    \
    \        return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which comparison to use\n    case .intValue(_):\n     \
    \   switch b { // Switch on type to determine which comparison to use\n      \
    \  case .intValue(_):\n            return .intValue(IntMax)\n        case .doubleValue(_):\n\
    \            return .doubleValue(DoubleMax)\n        case .stringValue(_):\n \
    \           return .stringValue(StringMax)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type to determine which comparison to use\n \
    \       case .intValue(_):\n            return .doubleValue(DoubleMax)\n     \
    \   case .doubleValue(_):\n            return .intValue(IntMax)\n        case\
    \ .stringValue(_):\n            return .stringValue(StringMax)\n        }\n  \
    \  case .stringValue(_):\n        switch b { // Switch on type to determine which\
    \ comparison to use\n        case .intValue(_):\n            return .stringValue(StringMax)\n\
    \        case .doubleValue(_):\n            return .stringValue(StringMax)\n \
    \       case .stringValue(_):\n            return .intValue(IntMax)\n        }\n\
    \    }\n    return nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \    \n    default:\n        return nil\n    }\n    \n    switch b { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    \n    default:\n        return nil\n \
    \   }\n    \n    if a.intValue() > b.intValue() {\n        return a\n    }\n \
    \   \n    if a.intValue() < b.intValue() {\n        return b\n    }\n    \n  \
    \  if a.doubleValue() > b.doubleValue() {\n        return a\n    }\n    \n   \
    \ if a.doubleValue() < b.doubleValue() {\n        return b\n    }\n    \n    if\
    \ a.stringValue() > b.stringValue() {\n        return a\n    }\n    \n    if a.stringValue()\
    \ < b.stringValue() {\n        return b\n    }\n    \n    return nil", "    switch\
    \ a { // Switch on the type of the first value\n    case .intValue(_):\n     \
    \   switch b { // Switch on the type of the second value\n        case .intValue(_):\n\
    \            return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on the type of the second value\n\
    \        case .intValue(_):\n            return .doubleValue(max(Double(a), Double(b)))\n\
    \        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on the type of the second value\n        case .intValue(_):\n            return\
    \ .stringValue(max(String(a), String(b)))\n        case .doubleValue(_):\n   \
    \         return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on type\n    case .intValue(_):\n        switch\
    \ b { // Switch on type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type\n        case .intValue(_):\n          \
    \  return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type\n        case .intValue(_):\n          \
    \  return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    default: return nil\n    }\n    switch\
    \ b { case .intValue(_), .doubleValue(_), .stringValue(_)\n    default: return\
    \ nil\n    }\n    if a.intValue() > b.intValue() { return .intValue() }\n    if\
    \ a.doubleValue() > b.doubleValue() { return .doubleValue() }\n    if a.stringValue()\
    \ > b.stringValue() { return .stringValue() }\n    return nil", "    switch a\
    \ { // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on type to determine which case to return\n\
    \    case .intValue(_):\n        switch b { // Switch on type to determine which\
    \ case to return\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return .doubleValue(a.doubleValue > b.intValue\
    \ ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which comparison to use\n    case .intValue(_):\n     \
    \   switch b { // Switch on type to determine which comparison to use\n      \
    \  case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        case\
    \ .doubleValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on the type of a\n    case .intValue(_):\n        switch b { // Switch on the\
    \ type of b\n        case .intValue(_):\n            return .intValue(IntMax)\n\
    \        case .doubleValue(_):\n            return .intValue(IntMax)\n       \
    \ case .stringValue(_):\n            return .intValue(IntMax)\n        }\n   \
    \ case .doubleValue(_):\n        switch b { // Switch on the type of b\n     \
    \   case .intValue(_):\n            return .doubleValue(DoubleMax)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(DoubleMax)\n        case .stringValue(_):\n\
    \            return .doubleValue(DoubleMax)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .stringValue(StringMax)\n        case .doubleValue(_):\n  \
    \          return .stringValue(StringMax)\n        case .stringValue(_):\n   \
    \         return .stringValue(StringMax)\n        }\n    }\n    return nil", " \
    \   switch a { // Compare two values\n    case .intValue(_):\n        switch b\
    \ { // Compare two integers\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return nil\n        }\n    case .doubleValue(_):\n        switch\
    \ b { // Compare two doubles\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return nil\n        }\n    case .stringValue(_):\n        switch\
    \ b { // Compare two strings\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return nil\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on type to determine which value to return.\n    case .intValue(_):\n\
    \        switch b { // Switch on type to determine which value to return.\n  \
    \      case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Switch on type to\
    \ determine which value to return.\n        case .intValue(_):\n            return\
    \ b\n        case .doubleValue(_):\n            return a\n        case .stringValue(_):\n\
    \            return a\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on type to determine which value to return.\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return a\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on type\n    case .intValue(_):\n        switch\
    \ b { // Switch on type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on type\n        case .intValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on type\n        case .intValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ type to determine which function to call\n    case .intValue(_):\n        return\
    \ Int(b) > Int(a) // Compare integers\n    case .doubleValue(_):\n        return\
    \ Double(b) > Double(a) // Compare doubles\n    case .stringValue(_):\n      \
    \  return String(b) > String(a) // Compare strings\n    }\n    return nil // If\
    \ values are equal, return nil", "    switch a { // Switch on a's type\n    case\
    \ .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which type to return\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type to determine which type to return\n    \
    \    case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Compare two values\n    case .intValue(_):\n      \
    \  switch b { // Compare two integers\n        case .intValue(_):\n          \
    \  return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .intValue(a.doubleValue > b.doubleValue)\n        case .stringValue(_):\n\
    \            return .intValue(a.stringValue > b.stringValue)\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Compare two doubles\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .doubleValue(_):\n            return .intValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .intValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \    case let .intValue(aInt), .doubleValue(aDouble), .stringValue(aString)\n\
    \        if let bInt = b.intValue() {\n            return .intValue(aInt > bInt\
    \ ? aInt : bInt)\n        } else if let bDouble = b.doubleValue() {\n        \
    \    return .doubleValue(aDouble > bDouble ? aDouble : bDouble)\n        } else\
    \ if let bString = b.stringValue() {\n            return .stringValue(aString\
    \ > bString ? aString : bString)\n        }\n        return nil\n    }", "   \
    \ switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n        case\
    \ let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(bInt), let .doubleValue(bDouble), let .stringValue(bString)\n\
    \            where a == .intValue(bInt)\n            return .intValue(bInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(bInt), let .doubleValue(bDouble), let .stringValue(bString)\n\
    \            where a == .doubleValue(bDouble)\n            return .doubleValue(bDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case let .intValue(bInt), let .doubleValue(bDouble), let .stringValue(bString)\n\
    \            where a == .stringValue(bString)\n            return .stringValue(bString)\n\
    \    }\n    return nil", "    switch a { // Switch on a.\n    case .intValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .doubleValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt)\n        \
    \    return .intValue(aInt)\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .doubleValue(aDouble)\n  \
    \          return .doubleValue(aDouble)\n        case let .intValue(aInt), let\
    \ .doubleValue(aDouble), let .stringValue(aString)\n            where b == .stringValue(aString)\n\
    \            return .stringValue(aString)\n        default:\n            return\
    \ nil\n    }", "    switch a { // a is larger\n    case .intValue(_):\n      \
    \  return b\n    case .doubleValue(_):\n        return b\n    case .stringValue(_):\n\
    \        return b\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            switch b { case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n                case let .intValue(bInt), let .doubleValue(bDouble),\
    \ let .stringValue(bString)\n                    if aInt == bInt {\n         \
    \               return b\n                    }\n                    if aDouble\
    \ == bDouble {\n                        return b\n                    }\n    \
    \                if aString == bString {\n                        return b\n \
    \                   }\n                    return nil\n            }\n    }\n\
    \    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n        case let .intValue(a), let .doubleValue(b),\
    \ let .stringValue(aString), let .stringValue(bString)\n            if aString\
    \ == bString {\n                return a\n            }\n    }\n    return nil",
  "    switch a { // Switch on a's type\n    case .intValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? a : b\n        case .doubleValue(_):\n            return a > b ? b : a\n\
    \        case .stringValue(_):\n            return a > b ? b : a\n        }\n\
    \    case .doubleValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? b : a\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Compare two values\n    case .intValue(_):\n\
    \        switch b { // Compare two ints\n        case .intValue(_):\n        \
    \    return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Compare two doubles\n\
    \        case .intValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare two strings\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a // a is larger\n        case\
    \ .doubleValue(_):\n            return b // b is larger\n        case .stringValue(_):\n\
    \            return a // a is larger\n        }\n    case .doubleValue(_):\n \
    \       switch b { // Switch on b's type\n        case .intValue(_):\n       \
    \     return a // a is larger\n        case .doubleValue(_):\n            return\
    \ b // b is larger\n        case .stringValue(_):\n            return a // a is\
    \ larger\n        }\n    case .stringValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return a // a is larger\n\
    \        case .doubleValue(_):\n            return b // b is larger\n        case\
    \ .stringValue(_):\n            return a // a is larger\n        }\n    }\n  \
    \  return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(IntMax)\n        case .doubleValue(_):\n            return\
    \ .intValue(IntMax)\n        case .stringValue(_):\n            return .intValue(IntMax)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .doubleValue(DoubleMax)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(DoubleMax)\n     \
    \   case .stringValue(_):\n            return .doubleValue(DoubleMax)\n      \
    \  }\n    case .stringValue(_):\n        switch b { // Switch on b's type\n  \
    \      case .intValue(_):\n            return .stringValue(StringMax)\n      \
    \  case .doubleValue(_):\n            return .stringValue(StringMax)\n       \
    \ case .stringValue(_):\n            return .stringValue(StringMax)\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a > b ? a : b\n        case .doubleValue(_):\n            return\
    \ a > b ? b : a\n        case .stringValue(_):\n            return a > b ? b :\
    \ a\n        }\n    case .doubleValue(_):\n        switch b { // Switch on b's\
    \ type\n        case .intValue(_):\n            return a > b ? b : a\n       \
    \ case .doubleValue(_):\n            return a > b ? a : b\n        case .stringValue(_):\n\
    \            return a > b ? a : b\n        }\n    case .stringValue(_):\n    \
    \    switch b { // Switch on b's type\n        case .intValue(_):\n          \
    \  return a > b ? b : a\n        case .doubleValue(_):\n            return a >\
    \ b ? a : b\n        case .stringValue(_):\n            return a > b ? a : b\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(IntMax)\n        case .doubleValue(_):\n            return .doubleValue(DoubleMax)\n\
    \        case .stringValue(_):\n            return .stringValue(StringMax)\n \
    \       }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(IntMax)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(DoubleMax)\n        case .stringValue(_):\n\
    \            return .stringValue(StringMax)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(IntMax)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(DoubleMax)\n        case .stringValue(_):\n            return .stringValue(StringMax)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(IntMax)\n        case\
    \ .doubleValue(_):\n            return .intValue(IntMax)\n        case .stringValue(_):\n\
    \            return .intValue(IntMax)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(DoubleMax)\n        case .doubleValue(_):\n       \
    \     return .doubleValue(DoubleMax)\n        case .stringValue(_):\n        \
    \    return .doubleValue(DoubleMax)\n        }\n    case .stringValue(_):\n  \
    \      switch b { // Switch on b's type\n        case .intValue(_):\n        \
    \    return .stringValue(StringMax)\n        case .doubleValue(_):\n         \
    \   return .stringValue(StringMax)\n        case .stringValue(_):\n          \
    \  return .stringValue(StringMax)\n        }\n    }\n    return nil", "    switch\
    \ a { // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a.\n    case .intValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which type to return\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type to determine which type to return\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Switch on type to\
    \ determine which type to return\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on type\n    case .intValue(_):\n        switch\
    \ b { // Switch on type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type\n        case .intValue(_):\n          \
    \  return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type\n        case .intValue(_):\n          \
    \  return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is bigger\n    case .intValue(_):\n        return\
    \ b\n    case .doubleValue(_):\n        return b\n    case .stringValue(_):\n\
    \        return b\n    }\n    return nil", "    switch a { // Switch on a's type\n\
    \    case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? a : b\n        case .doubleValue(_):\n            return a > b ? b : a\n\
    \        case .stringValue(_):\n            return a > b ? b : a\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a's type\n    case .intValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on type to determine which function to call.\n\
    \    case .intValue(_):\n        return a.intValue(b) // Call intValue function\
    \ on both values.\n    case .doubleValue(_):\n        return a.doubleValue(b)\
    \ // Call doubleValue function on both values.\n    case .stringValue(_):\n  \
    \      return a.stringValue(b) // Call stringValue function on both values.\n\
    \    }\n    return nil // If values are equal, return nil.", "    switch a { //\
    \ Switch on a's type\n    case .intValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is larger\n    case .intValue(_):\n        switch\
    \ b { // b is larger\n        case .intValue(_):\n            return a\n     \
    \   case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which variable is larger.\n    case .intValue(_):\n   \
    \     switch b { // Switch on type to determine which variable is larger.\n  \
    \      case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which variable is larger.\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which variable is larger.\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        case\
    \ .doubleValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    default: return nil\n    }\n    switch\
    \ b { case .intValue(_), .doubleValue(_), .stringValue(_)\n    default: return\
    \ nil\n    }\n    if a.intValue() < b.intValue() { return .intValue(a) }\n   \
    \ if a.doubleValue() < b.doubleValue() { return .doubleValue(a) }\n    if a.stringValue()\
    \ < b.stringValue() { return .stringValue(a) }\n    return nil", "    switch a\
    \ { // Switch on a's type\n    case .intValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return a // a is larger\n        case .doubleValue(_):\n\
    \            return b // b is larger\n        case .stringValue(_):\n        \
    \    return a // a is larger\n        }\n    case .doubleValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return b // b is\
    \ larger\n        case .doubleValue(_):\n            return a // a is larger\n\
    \        case .stringValue(_):\n            return b // b is larger\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b.\n        case .intValue(_):\n\
    \            return a // a is larger\n        case .doubleValue(_):\n        \
    \    return b // b is larger\n        case .stringValue(_):\n            return\
    \ a // a is larger\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which case to return\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // Switch on type to\
    \ determine which case to return\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \    \n    case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \        if let bInt = b.intValue() {\n            return aInt > bInt ? .intValue(aInt)\
    \ : .intValue(bInt)\n        }\n        if let bDouble = b.doubleValue() {\n \
    \           return aDouble > bDouble ? .doubleValue(aDouble) : .doubleValue(bDouble)\n\
    \        }\n        if let bString = b.stringValue() {\n            return aString\
    \ > bString ? .stringValue(aString) : .stringValue(bString)\n        }\n     \
    \   return nil\n    }", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // a is larger\n    case .intValue(_):\n        return\
    \ b\n    case .doubleValue(_):\n        return b\n    case .stringValue(_):\n\
    \        return b\n    }\n    return nil", "    switch a { // a is larger\n  \
    \  case .intValue(_):\n        return b\n    case .doubleValue(_):\n        return\
    \ b\n    case .stringValue(_):\n        return b\n    }\n    return nil", "  \
    \  switch a { // a is larger\n    case .intValue(_):\n        switch b { // b\
    \ is larger\n        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is larger\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is larger\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n        if b == .intValue(aInt) {\n            return\
    \ b\n        } else if b == .doubleValue(aDouble) {\n            return b\n  \
    \      } else if b == .stringValue(aString) {\n            return b\n        }\n\
    \    }\n    return nil", "    switch a { // Switch on type to determine which\
    \ comparison to perform\n    case .intValue(_):\n        switch b { // Switch\
    \ on type to determine which comparison to perform\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on type to\
    \ determine which comparison to perform\n        case .intValue(_):\n        \
    \    return .doubleValue(a.doubleValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .stringValue(_):\n        switch b { // Switch on type to\
    \ determine which comparison to perform\n        case .intValue(_):\n        \
    \    return .stringValue(a.stringValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n            return\
    \ .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n   \
    \         return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .doubleValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on the type of a\n    case .intValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on the type of b\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n\
    \        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    \n    case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n    \n    case let .intValue(bInt), let .doubleValue(bDouble),\
    \ let .stringValue(bString)\n    \n    default:\n        return nil\n    }\n \
    \   \n    switch b { case .intValue(_), .doubleValue(_), .stringValue(_)\n   \
    \ \n    case let .intValue(bInt), let .doubleValue(bDouble), let .stringValue(bString)\n\
    \    \n    case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \    \n    default:\n        return nil\n    }\n    \n    if aInt > bInt { return\
    \ .intValue(aInt) }\n    \n    if aDouble > bDouble { return .doubleValue(aDouble)\
    \ }\n    \n    if aString > bString { return .stringValue(aString) }\n    \n \
    \   return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on the type of a\n    case .intValue(_):\n        switch b { // Switch on the\
    \ type of b\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on the type of b\n        case .intValue(_):\n \
    \           return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n     \
    \   case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n            return\
    \ .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n   \
    \         return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .doubleValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(IntMax)\n        case .doubleValue(_):\n            return\
    \ .intValue(IntMax)\n        case .stringValue(_):\n            return .intValue(IntMax)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .doubleValue(DoubleMax)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(DoubleMax)\n     \
    \   case .stringValue(_):\n            return .doubleValue(DoubleMax)\n      \
    \  }\n    case .stringValue(_):\n        switch b { // Switch on b's type\n  \
    \      case .intValue(_):\n            return .stringValue(StringMax)\n      \
    \  case .doubleValue(_):\n            return .stringValue(StringMax)\n       \
    \ case .stringValue(_):\n            return .stringValue(StringMax)\n        }\n\
    \    }\n    return nil", "    switch a { // a is larger\n    case .intValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // Switch on b.\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a.\n    case .intValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return a\n    \
    \    case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b.\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on b.\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // a\
    \ is larger\n    case .intValue(_):\n        switch b { // b is larger\n     \
    \   case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // b is larger\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // b is larger\n    \
    \    case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a.\n    case .intValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b.\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // Switch on b.\n        case .intValue(_):\n            return a\n      \
    \  case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { case\
    \ .intValue(_), .doubleValue(_), .stringValue(_)\n        \n    case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n        switch b { case\
    \ .intValue(bInt), .doubleValue(bDouble), .stringValue(bString)\n            \n\
    \            case let .intValue(bInt), let .doubleValue(bDouble), let .stringValue(bString)\n\
    \                \n                switch aInt, bInt {\n                    case\
    \ let .intValue(aInt), let .intValue(bInt)\n                        return .intValue(aInt\
    \ > bInt ? aInt : bInt)\n                    \n                    case let .doubleValue(aDouble),\
    \ let .doubleValue(bDouble)\n                        return .doubleValue(aDouble\
    \ > bDouble ? aDouble : bDouble)\n                    \n                    case\
    \ let .stringValue(aString), let .stringValue(bString)\n                     \
    \   return .stringValue(aString > bString ? aString : bString)\n             \
    \       \n                    default:\n                        return nil\n \
    \               }\n                \n            case let .intValue(bInt), let\
    \ .stringValue(bString)\n                switch aInt, bInt {\n               \
    \     case let .intValue(aInt), let .intValue(bInt)\n                        return\
    \ .intValue(aInt > bInt ? aInt : bInt)\n                    \n               \
    \     case let .doubleValue(aDouble), let .stringValue(bString)\n            \
    \            return .stringValue(aDouble > bString ? aDouble : bString)\n    \
    \                \n                    case let .stringValue(aString), let .intValue(bInt)\n\
    \                        return .intValue(aString > bInt ? aString : bString)\n\
    \                    \n                    default:\n                        return\
    \ nil\n                }\n                \n            case let .doubleValue(aDouble),\
    \ let .stringValue(bString)\n                switch aDouble, bDouble {\n     \
    \               case let .doubleValue(aDouble), let .doubleValue(bDouble)\n  \
    \                      return .doubleValue(aDouble > bDouble ? aDouble : bDouble)\n\
    \                    \n                    case let .stringValue(aString), let\
    \ .stringValue(bString)\n                        return .stringValue(aString >\
    \ bString ? aString : bString)\n                    \n                    default:\n\
    \                        return nil\n                }\n                \n   \
    \         case let .stringValue(aString), let .intValue(bInt)\n              \
    \  switch aString, bInt {\n                    case let .stringValue(aString),\
    \ let .intValue(bInt)\n                        return .stringValue(aString > bInt\
    \ ? ", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n \
    \       case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case .intValue(_), .doubleValue(_), .stringValue(_)\n        case let\
    \ .intValue(aInt), .doubleValue(_), .stringValue(_)\n            where b == .intValue(aInt)\n\
    \            return nil\n        case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        case let .intValue(aInt), .doubleValue(_), .stringValue(_)\n        \
    \    where b == .stringValue(aString)\n            return nil\n        case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt), .doubleValue(_),\
    \ .stringValue(_)\n            where b == .intValue(aDouble)\n            return\
    \ nil\n        case .intValue(_), .doubleValue(_), .stringValue(_)\n        case\
    \ let .intValue(aInt), .doubleValue(_), .stringValue(_)\n            where b ==\
    \ .doubleValue(aString)\n            return nil\n        case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n        case let .intValue(aInt), .doubleValue(_), .stringValue(_)\n\
    \            where b == .stringValue(aString)\n            return nil\n      \
    \  case .intValue(_), .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt),\
    \ .doubleValue(_), .stringValue(_)\n            where b == .intValue(aDouble)\n\
    \            return nil\n        case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        case let .intValue(aInt), .doubleValue(_), .stringValue(_)\n        \
    \    where b == .doubleValue(aString)\n            return nil\n        case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt", "    switch\
    \ a { // Compare all values first\n    case .intValue(_):\n        switch b {\
    \ // Compare all values next\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Compare all values next\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Compare all values next\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n\
    \        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // a is larger\n\
    \    case .intValue(_):\n        return b\n    case .doubleValue(_):\n       \
    \ return b\n    case .stringValue(_):\n        return b\n    }\n    return nil",
  "    switch a { // Switch on type to determine which case to return\n    case .intValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n \
    \       case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on type to determine which case to return\n        case .intValue(_):\n    \
    \        return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on type to determine which case\
    \ to return\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? a : b\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? a : b\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n \
    \       case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(IntMax)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(DoubleMax)\n        case .stringValue(_):\n\
    \            return .stringValue(StringMax)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(DoubleMax)\n        case .doubleValue(_):\n       \
    \     return .doubleValue(DoubleMax)\n        case .stringValue(_):\n        \
    \    return .stringValue(StringMax)\n        }\n    case .stringValue(_):\n  \
    \      switch b { // Switch on b's type\n        case .intValue(_):\n        \
    \    return .stringValue(StringMax)\n        case .doubleValue(_):\n         \
    \   return .stringValue(StringMax)\n        case .stringValue(_):\n          \
    \  return .stringValue(StringMax)\n        }\n    }\n    return nil", "    switch\
    \ a { // Switch on type to determine which case to execute\n    case .intValue(i):\n\
    \        switch b { // Switch on type to determine which case to execute\n   \
    \     case .intValue(i):\n            return i\n        case .doubleValue(let\
    \ d):\n            return d\n        case .stringValue(let s):\n            return\
    \ s\n        }\n    case .doubleValue(let d):\n        switch b { // Switch on\
    \ type to determine which case to execute\n        case .intValue(i):\n      \
    \      return d\n        case .doubleValue(let d):\n            return d\n   \
    \     case .stringValue(let s):\n            return s\n        }\n    case .stringValue(let\
    \ s):\n        switch b { // Switch on type to determine which case to execute\n\
    \        case .intValue(i):\n            return s\n        case .doubleValue(let\
    \ d):\n            return s\n        case .stringValue(let s):\n            return\
    \ s\n        }\n    }\n    return nil", "    switch a { // Switch on type to determine\
    \ which case to return\n    case .intValue(_):\n        switch b { // Switch on\
    \ type to determine which case to return\n        case .intValue(_):\n       \
    \     return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n  \
    \      case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which case to return\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type to determine which case to return\n    \
    \    case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        default: return nil\n    }\n    switch b { case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n        default: return nil\n    }\n    if a.intValue() > b.intValue()\
    \ { return .intValue() }\n    if a.doubleValue() > b.doubleValue() { return .doubleValue()\
    \ }\n    if a.stringValue() > b.stringValue() { return .stringValue() }\n    return\
    \ nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \        case let .intValue(aInt", "    switch a { // a is larger\n    case .intValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n     \
    \   case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on the type of the first argument\n    case .intValue(_):\n        switch b\
    \ { // Switch on the type of the second argument\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on the type of the second argument\n        case .intValue(_):\n    \
    \        return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on the type of the second argument\n        case .intValue(_):\n    \
    \        return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt) || b == .doubleValue(aDouble)\
    \ || b == .stringValue(aString)\n            return b\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            where b ==\
    \ .intValue(aInt) || b == .doubleValue(aDouble) || b == .stringValue(aString)\n\
    \            return b\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt) || b == .doubleValue(aDouble)\
    \ || b == .stringValue(aString)\n            return b\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            where b ==\
    \ .intValue(aInt) || b == .doubleValue(aDouble) || b == .stringValue(aString)\n\
    \            return b\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt) || b == .doubleValue(aDouble)\
    \ || b == .stringValue(aString)\n            return b\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            where b ==\
    \ .intValue(aInt) || b == .doubleValue(aDouble) || b == .stringValue(aString)\n\
    \            return b\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt) || b == .doubleValue(aDouble)\
    \ || b == .stringValue(aString)\n            return b\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            where b ==\
    \ .intValue(aInt) || b == .doubleValue(aDouble) || b == .stringValue(aString)\n\
    \            return b\n        case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n            where b == .intValue(aInt) || b == .doubleValue(aDouble)\
    \ || b == .stringValue(aString)\n            return b\n        case let .intValue(aInt),\
    \ let .doubleValue(aDouble), let .stringValue(aString)\n            where b ==\
    \ .intValue(aInt) || ", "    switch a { // Switch on a.\n    case .intValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .doubleValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n        case\
    \ .doubleValue(_):\n            return .doubleValue(max(Double(a), Double(b)))\n\
    \        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ type to determine which comparison to use\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on type to\
    \ determine which comparison to use\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue)\n        case .doubleValue(_):\n  \
    \          return .doubleValue(a.doubleValue > b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        }\n \
    \   case .stringValue(_):\n        switch b { // Switch on type to determine which\
    \ comparison to use\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n\
    \        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .intValue(aInt)\n            return .intValue(aInt)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .doubleValue(aDouble)\n            return .doubleValue(aDouble)\n\
    \        case let .intValue(aInt), let .doubleValue(aDouble), let .stringValue(aString)\n\
    \            where b == .stringValue(aString)\n            return .stringValue(aString)\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .doubleValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on type to determine which function\
    \ to call\n    case .intValue(_):\n        return b.intValue() >= a.intValue()\n\
    \    case .doubleValue(_):\n        return b.doubleValue() >= a.doubleValue()\n\
    \    case .stringValue(_):\n        return b.stringValue() >= a.stringValue()\n\
    \    }\n    return nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n \
    \       case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        return b\n    case .doubleValue(_):\n\
    \        return b\n    case .stringValue(_):\n        return b\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n            return\
    \ .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n   \
    \         return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .doubleValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .doubleValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    }\n\
    \    return nil", "    switch a { // Switch on type to determine which value to\
    \ return\n    case .intValue(_):\n        switch b { // Switch on type to determine\
    \ which value to return\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on type to determine which value to return\n        case .intValue(_):\n   \
    \         return .intValue(max(Int(a), Int(b)))\n        case .doubleValue(_):\n\
    \            return .doubleValue(max(Double(a), Double(b)))\n        case .stringValue(_):\n\
    \            return .stringValue(max(String(a), String(b)))\n        }\n    case\
    \ .stringValue(_):\n        switch b { // Switch on type to determine which value\
    \ to return\n        case .intValue(_):\n            return .intValue(max(Int(a),\
    \ Int(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(max(Int(a), Int(b)))\n\
    \        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .doubleValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .doubleValue(_):\n            return .doubleValue(max(Double(a),\
    \ Double(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    case .stringValue(_):\n        switch b { // Switch\
    \ on b's type\n        case .intValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .doubleValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        case .stringValue(_):\n            return .stringValue(max(String(a),\
    \ String(b)))\n        }\n    }\n    return nil", "    switch a { // Switch on\
    \ type to determine which type to use\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which type to use\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which type to use\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .doubleValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on type to determine which type to use\n       \
    \ case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a.\n    case .intValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    case .stringValue(_):\n        switch b { // Switch on b.\n  \
    \      case .intValue(_):\n            return .stringValue(a.stringValue > b.intValue\
    \ ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .stringValue(a.stringValue > b.doubleValue ? a.stringValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Compare two values\n    case .intValue(_):\n      \
    \  switch b { // Compare two integers\n        case .intValue(_):\n          \
    \  return a\n        case .doubleValue(_):\n            return b\n        case\
    \ .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Compare two doubles\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // Compare two strings\n        case .intValue(_):\n     \
    \       return a\n        case .doubleValue(_):\n            return b\n      \
    \  case .stringValue(_):\n            return b\n        }\n    }\n    return nil",
  "    switch a { // Switch on a's type\n    case .intValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a //\
    \ a is larger\n        case .doubleValue(_):\n            return b // b is larger\n\
    \        case .stringValue(_):\n            return a // a is larger\n        case\
    \ .nil:\n            return b // b is larger\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return a // a is larger\n        case .doubleValue(_):\n            return\
    \ b // b is larger\n        case .stringValue(_):\n            return a // a is\
    \ larger\n        case .nil:\n            return b // b is larger\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a // a is larger\n        case .doubleValue(_):\n\
    \            return b // b is larger\n        case .stringValue(_):\n        \
    \    return a // a is larger\n        case .nil:\n            return b // b is\
    \ larger\n        }\n    case .nil:\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a // a is larger\n        case\
    \ .doubleValue(_):\n            return b // b is larger\n        case .stringValue(_):\n\
    \            return a // a is larger\n        case .nil:\n            return b\
    \ // b is larger\n        }\n    }\n    return nil", "    switch a { // a is larger\n\
    \    case .intValue(_):\n        switch b { // b is larger\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .doubleValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // b is larger\n        case .intValue(_):\n            return a\n       \
    \ case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a // a is larger\n        case\
    \ .doubleValue(_):\n            return b // b is larger\n        case .stringValue(_):\n\
    \            return a // a is larger\n        }\n    case .doubleValue(_):\n \
    \       switch b { // Switch on b's type\n        case .intValue(_):\n       \
    \     return a // a is larger\n        case .doubleValue(_):\n            return\
    \ b // b is larger\n        case .stringValue(_):\n            return a // a is\
    \ larger\n        }\n    case .stringValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return a // a is larger\n\
    \        case .doubleValue(_):\n            return b // b is larger\n        case\
    \ .stringValue(_):\n            return a // a is larger\n        }\n    }\n  \
    \  return nil // a is equal to b", "    switch a { // Switch on a.\n    case .intValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { // Switch on a's type\n  \
    \  case .intValue(_):\n        switch b { // Switch on b's type\n        case\
    \ .intValue(_):\n            return .intValue(IntMax)\n        case .doubleValue(_):\n\
    \            return .doubleValue(DoubleMax)\n        case .stringValue(_):\n \
    \           return .stringValue(StringMax)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(DoubleMax)\n        case .doubleValue(_):\n       \
    \     return .doubleValue(DoubleMax)\n        case .stringValue(_):\n        \
    \    return .stringValue(StringMax)\n        }\n    case .stringValue(_):\n  \
    \      switch b { // Switch on b's type\n        case .intValue(_):\n        \
    \    return .stringValue(StringMax)\n        case .doubleValue(_):\n         \
    \   return .stringValue(StringMax)\n        case .stringValue(_):\n          \
    \  return .stringValue(StringMax)\n        }\n    }\n    return nil", "    switch\
    \ a { case .intValue(_), .doubleValue(_), .stringValue(_)\n    default: return\
    \ nil\n    }\n    switch b { case .intValue(_), .doubleValue(_), .stringValue(_)\n\
    \    default: return nil\n    }\n    if a.intValue() < b.intValue() { return .intValue(a)\
    \ }\n    if a.doubleValue() < b.doubleValue() { return .doubleValue(a) }\n   \
    \ if a.stringValue() < b.stringValue() { return .stringValue(a) }\n    return\
    \ nil", "    switch a { // Switch on a.\n    case .intValue(_):\n        switch\
    \ b { // Switch on b.\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue\
    \ ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .doubleValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        case .stringValue(_):\n            return .doubleValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b.\n        case .intValue(_):\n            return\
    \ .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n    \
    \    case .doubleValue(_):\n            return .stringValue(a.stringValue > b.doubleValue\
    \ ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n          \
    \  return .stringValue(a.stringValue > b.stringValue ? a.stringValue : b.stringValue)\n\
    \        }\n    }\n    return nil", "    switch a { case .intValue(_), .doubleValue(_),\
    \ .stringValue(_)\n    \n    default:\n        return nil\n    }\n    \n    switch\
    \ b { case .intValue(_), .doubleValue(_), .stringValue(_)\n    \n    default:\n\
    \        return nil\n    }", "    switch a { // Switch on type to determine which\
    \ comparison to use.\n    case .intValue(_):\n        switch b { // Switch on\
    \ type to determine which comparison to use.\n        case .intValue(_):\n   \
    \         return .intValue(a.intValue > b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        }\n    case .doubleValue(_):\n        switch b { // Switch on type to\
    \ determine which comparison to use.\n        case .intValue(_):\n           \
    \ return .doubleValue(a.doubleValue > b.doubleValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .stringValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use.\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        case\
    \ .doubleValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on the type of the first value\n    case .intValue(_):\n        switch b { //\
    \ Switch on the type of the second value\n        case .intValue(_):\n       \
    \     return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n  \
    \      case .doubleValue(_):\n            return .doubleValue(a.doubleValue >\
    \ b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on the type of the second value\n        case .intValue(_):\n       \
    \     return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on the type of the second value\n        case .intValue(_):\n       \
    \     return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // case .intValue:\n    case .intValue(_):\n        switch\
    \ b { // case .intValue:\n        case .intValue(_):\n            return a\n \
    \       case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // case .doubleValue:\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    case .stringValue(_):\n        switch b\
    \ { // case .stringValue:\n        case .intValue(_):\n            return a\n\
    \        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a.\n    case .intValue(_):\n        switch b { // Switch on b.\n        case\
    \ .intValue(_):\n            return .intValue(a.intValue > b.intValue ? a.intValue\
    \ : b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b.\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // a is\
    \ larger\n    case .intValue(_):\n        switch b { // b is larger\n        case\
    \ .intValue(_):\n            return a\n        case .doubleValue(_):\n       \
    \     return b\n        case .stringValue(_):\n            return b\n        }\n\
    \    case .doubleValue(_):\n        switch b { // b is larger\n        case .intValue(_):\n\
    \            return a\n        case .doubleValue(_):\n            return b\n \
    \       case .stringValue(_):\n            return b\n        }\n    case .stringValue(_):\n\
    \        switch b { // b is larger\n        case .intValue(_):\n            return\
    \ a\n        case .doubleValue(_):\n            return b\n        case .stringValue(_):\n\
    \            return b\n        }\n    }\n    return nil", "    switch a { // case\
    \ .intValue(_):\n    case .intValue(_):\n        switch b { // case .intValue(_):\n\
    \        case .intValue(_):\n            return a\n        case .doubleValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .doubleValue(_):\n        switch b { // case .doubleValue(_):\n\
    \        case .doubleValue(_):\n            return a\n        case .intValue(_):\n\
    \            return b\n        case .stringValue(_):\n            return b\n \
    \       }\n    case .stringValue(_):\n        switch b { // case .stringValue(_):\n\
    \        case .stringValue(_):\n            return a\n        case .intValue(_):\n\
    \            return b\n        case .doubleValue(_):\n            return b\n \
    \       }\n    }\n    return nil", "    switch a { // Switch on a's type\n   \
    \ case .intValue(_):\n        switch b { // Switch on b's type\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.intValue ? a.doubleValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which type to return\n    case .intValue(_):\n        switch\
    \ b { // Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return .intValue(a.intValue > b.intValue ? a.intValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which type to return\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.intValue ? a.stringValue :\
    \ b.intValue)\n        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on type to determine which comparison to use\n    case .intValue(_):\n     \
    \   switch b { // Switch on type to determine which comparison to use\n      \
    \  case .intValue(_):\n            return .intValue(a.intValue > b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .doubleValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .doubleValue(a.doubleValue > b.doubleValue)\n        case\
    \ .doubleValue(_):\n            return .doubleValue(a.doubleValue > b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on type to determine which comparison to use\n        case .intValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue)\n        case\
    \ .doubleValue(_):\n            return .stringValue(a.stringValue > b.stringValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return a > b ? a : b\n        case .doubleValue(_):\n\
    \            return a > b ? b : a\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    case .doubleValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return a >\
    \ b ? b : a\n        case .doubleValue(_):\n            return a > b ? a : b\n\
    \        case .stringValue(_):\n            return a > b ? a : b\n        }\n\
    \    case .stringValue(_):\n        switch b { // Switch on b's type\n       \
    \ case .intValue(_):\n            return a > b ? b : a\n        case .doubleValue(_):\n\
    \            return a > b ? a : b\n        case .stringValue(_):\n           \
    \ return a > b ? b : a\n        }\n    }\n    return nil", "    switch a { //\
    \ Switch on a's type\n    case .intValue(_):\n        switch b { // Switch on\
    \ b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { case .intValue(_),\
    \ .doubleValue(_), .stringValue(_)\n    case let .intValue(aInt), let .doubleValue(aDouble),\
    \ let .stringValue(aString)\n        if let bInt = b.intValue(), aInt == bInt\
    \ {\n            return a\n        } else if let bDouble = b.doubleValue(), aDouble\
    \ == bDouble {\n            return a\n        } else if let bString = b.stringValue(),\
    \ aString == bString {\n            return a\n        }\n    }\n    return nil",
  "    switch a { // Switch on a's type\n    case .intValue(_):\n        switch b\
    \ { // Switch on b's type\n        case .intValue(_):\n            return .intValue(a.intValue\
    \ > b.intValue ? a.intValue : b.intValue)\n        case .doubleValue(_):\n   \
    \         return .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue :\
    \ b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .stringValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .stringValue(a.stringValue > b.intValue ? a.stringValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .stringValue(a.stringValue\
    \ > b.doubleValue ? a.stringValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    }\n    return nil", "    switch a { // Switch\
    \ on a's type\n    case .intValue(_):\n        switch b { // Switch on b's type\n\
    \        case .intValue(_):\n            return .intValue(a.intValue > b.intValue\
    \ ? a.intValue : b.intValue)\n        case .doubleValue(_):\n            return\
    \ .doubleValue(a.doubleValue > b.doubleValue ? a.doubleValue : b.doubleValue)\n\
    \        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    case .doubleValue(_):\n\
    \        switch b { // Switch on b's type\n        case .intValue(_):\n      \
    \      return .doubleValue(a.doubleValue > b.intValue ? a.doubleValue : b.intValue)\n\
    \        case .doubleValue(_):\n            return .doubleValue(a.doubleValue\
    \ > b.doubleValue ? a.doubleValue : b.doubleValue)\n        case .stringValue(_):\n\
    \            return .stringValue(a.stringValue > b.stringValue ? a.stringValue\
    \ : b.stringValue)\n        }\n    case .stringValue(_):\n        switch b { //\
    \ Switch on b's type\n        case .intValue(_):\n            return .stringValue(a.stringValue\
    \ > b.intValue ? a.stringValue : b.intValue)\n        case .doubleValue(_):\n\
    \            return .stringValue(a.stringValue > b.doubleValue ? a.stringValue\
    \ : b.doubleValue)\n        case .stringValue(_):\n            return .stringValue(a.stringValue\
    \ > b.stringValue ? a.stringValue : b.stringValue)\n        }\n    }\n    return\
    \ nil", "    switch a { // Switch on a's type\n    case .intValue(_):\n      \
    \  switch b { // Switch on b's type\n        case .intValue(_):\n            return\
    \ a // a is larger\n        case .doubleValue(_):\n            return b // b is\
    \ larger\n        case .stringValue(_):\n            return a // a is larger\n\
    \        case .doubleValue(_):\n            return b // b is larger\n        case\
    \ .stringValue(_):\n            return a // a is larger\n        case .stringValue(_):\n\
    \            return b // b is larger\n        case .stringValue(_):\n        \
    \    return a // a is larger\n        case .stringValue(_):\n            return\
    \ b // b is larger\n        case .stringValue(_):\n            return a // a is\
    \ larger\n        case .stringValue(_):\n            return b // b is larger\n\
    \        case .stringValue(_):\n            return a // a is larger\n        case\
    \ .stringValue(_):\n            return b // b is larger\n        case .stringValue(_):\n\
    \            return a // a is larger\n        case .stringValue(_):\n        \
    \    return b // b is larger\n        case .stringValue(_):\n            return\
    \ a // a is larger\n        case .stringValue(_):\n            return b // b is\
    \ larger\n        case .stringValue(_):\n            return a // a is larger\n\
    \        case .stringValue(_):\n            return b // b is larger\n        case\
    \ .stringValue(_):\n            return a // a is larger\n        case .stringValue(_):\n\
    \            return b // b is larger\n        case .stringValue(_):\n        \
    \    return a // a is larger\n        case .stringValue(_):\n            return\
    \ b // b is larger\n        case .stringValue(_):\n            return a // a is\
    \ larger\n        case .stringValue(_):\n            return b // b is larger\n\
    \        case .stringValue(_):\n            return a // a is larger\n        case\
    \ .stringValue(_):\n            return b // b is larger\n        case .stringValue(_):\n\
    \            return a // a is larger\n        case .stringValue(_):\n        \
    \    return b // b is larger\n        case .stringValue(_):\n            return\
    \ a // a is larger\n        case .stringValue(_):\n            return b // b is\
    \ larger\n        case .stringValue(_):\n            return a // a is larger\n\
    \        case .stringValue(_):\n            return b // b is larger\n        case "]
stop_tokens:
- "\n}"

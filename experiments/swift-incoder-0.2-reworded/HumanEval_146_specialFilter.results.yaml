language: swift
name: HumanEval_146_specialFilter
results:
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpbvc5o97n/tmpbvc5o97n.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69aefb0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69aeca7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69aeca7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69aeca67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbvc5o97n                        0x0000564354e265d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b69af19c460 __libc_start_main +
    245

    6    tmpbvc5o97n                        0x0000564354e26169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                count += 1\n            }\n            if\
    \ num % 2 == 0 {\n                if num > 10 && num < 100 {\n               \
    \     if num % 2 == 1 {\n                        count += 1\n                \
    \    }\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9umtabkn/tmp9umtabkn.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a27990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a27687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8a27687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8a276867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9umtabkn                        0x000055d6c1de26b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8a27b7c460 __libc_start_main +
    245

    6    tmp9umtabkn                        0x000055d6c1de2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfeubskys/tmpfeubskys.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b047efb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b047ecb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b047ecb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b047ecaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfeubskys                        0x00005574663855d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b047f1a5460 __libc_start_main +
    245

    6    tmpfeubskys                        0x0000557466385169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 10 == 1 {\n                    count\
    \ += 1\n                } else {\n                    count += 1\n           \
    \     }\n            }\n            if num % 2 == 0 {\n                if num\
    \ / 10 == 1 {\n                    count += 1\n                } else {\n    \
    \                count += 1\n                }\n            }\n        }\n   \
    \ }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmps6iz604b/tmps6iz604b.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b17f6986c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b17f667db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b17f667d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b17f667c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmps6iz604b                        0x00005652767f65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b17f6b72460 __libc_start_main +
    245

    6    tmps6iz604b                        0x00005652767f6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfeubskys/tmpfeubskys.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b047efb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b047ecb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b047ecb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b047ecaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfeubskys                        0x00005574663855d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b047f1a5460 __libc_start_main +
    245

    6    tmpfeubskys                        0x0000557466385169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n        }\n        if num % 2 == 1 && num % 2 == 0 {\n         \
    \   count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6tionppd/tmp6tionppd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7e19e35c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7e19b2cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7e19b2c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7e19b2b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6tionppd                        0x000055cb8b6a05d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b7e1a021460 __libc_start_main +
    245

    6    tmp6tionppd                        0x000055cb8b6a0169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfeubskys/tmpfeubskys.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b047efb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b047ecb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b047ecb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b047ecaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfeubskys                        0x00005574663855d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b047f1a5460 __libc_start_main +
    245

    6    tmpfeubskys                        0x0000557466385169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && num % 2 == 1 {\n         \
    \           count += 1\n                }\n            }\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkm5bukm6/tmpkm5bukm6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba35c1a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba35be97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba35be97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba35be967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkm5bukm6                        0x000055c18bf476b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba35c38c460 __libc_start_main +
    245

    6    tmpkm5bukm6                        0x000055c18bf47169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && num % 2 == 1 {\n         \
    \           count += 1\n                }\n            }\n        }\n    }\n \
    \   return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpkm5bukm6/tmpkm5bukm6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba35c1a0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba35be97b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba35be97988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba35be967b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpkm5bukm6                        0x000055c18bf476b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ba35c38c460 __libc_start_main +
    245

    6    tmpkm5bukm6                        0x000055c18bf47169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 {\n                if num > 10 && num\
    \ < 100 {\n                    count += 1\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpihajx_4j/tmpihajx_4j.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afcb31e1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afcb2ed8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afcb2ed8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afcb2ed77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpihajx_4j                        0x000056097b0405d7 <unavailable> + 5591

    5    libc.so.6                          0x00002afcb33cd460 __libc_start_main +
    245

    6    tmpihajx_4j                        0x000056097b040169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && num < 100 {\n            \
    \        if num % 2 == 1 {\n                        count += 1\n             \
    \       }\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpck1autvt/tmpck1autvt.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4357f8cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4357c83b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4357c83988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4357c827b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpck1autvt                        0x000055e36c5066b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b4358178460 __libc_start_main +
    245

    6    tmpck1autvt                        0x000055e36c506169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 2 % 2 == 1 {\n                 \
    \   count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp9qfcz3mh/tmp9qfcz3mh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a9c30ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a9c005b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a9c005988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a9c0047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9qfcz3mh                        0x0000564bf53c66b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1a9c4fa460 __libc_start_main +
    245

    6    tmp9qfcz3mh                        0x0000564bf53c6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                count += 1\n            }\n            if\
    \ num % 2 == 0 {\n                if num > 10 && num < 100 {\n               \
    \     count += 1\n                }\n                if num > 100 && num < 1000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000 && num < 10000 {\n                    count += 1\n                }\n\
    \                if num > 10000 && num < 100000 {\n                    count +=\
    \ 1\n                }\n                if num > 100000 && num < 1000000 {\n \
    \                   count += 1\n                }\n                if num > 1000000\
    \ && num < 10000000 {\n                    count += 1\n                }\n   \
    \             if num > 10000000 && num < 100000000 {\n                    count\
    \ += 1\n                }\n                if num > 100000000 && num < 1000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 1000000000 && num < 10000000000 {\n                    count += 1\n      \
    \          }\n                if num > 10000000000 && num < 100000000000 {\n \
    \                   count += 1\n                }\n                if num > 100000000000\
    \ && num < 1000000000000 {\n                    count += 1\n                }\n\
    \                if num > 1000000000000 && num < 10000000000000 {\n          \
    \          count += 1\n                }\n                if num > 10000000000000\
    \ && num < 100000000000000 {\n                    count += 1\n               \
    \ }\n                if num > 100000000000000 && num < 1000000000000000 {\n  \
    \                  count += 1\n                }\n                if num > 1000000000000000\
    \ && num < 10000000000000000 {\n                    count += 1\n             \
    \   }\n                if num > 10000000000000000 && num < 100000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 100000000000000000 && num < 1000000000000000000 {\n                    count\
    \ += 1\n                }\n                if num > 1000000000000000000 && num\
    \ < 10000000000000000000 {\n                    count += 1\n                }\n\
    \                if num > 10000000000000000000 && num < 100000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 100000000000000000000 && num < 1000000000000000000000 {\n                \
    \    count += 1\n                }\n                if num > 1000000000000000000000\
    \ && num < 10000000000000000000000 {\n                    count += 1\n       \
    \         }\n                if num > 10000000000000000000000 && num < 100000000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 100000000000000000000000 && num < 1000000000000000000000000 {\n          \
    \          count += 1\n                }\n                if num > 1000000000000000000000000\
    \ && num < 10000000000000000000000000 {\n                    count += 1\n    \
    \            }\n                if num > 10000000000000000000000000 && num < 100000000000000000000000000\
    \ {\n                    count += 1\n                }\n                if num\
    \ > 100000000000000000000000000 && num < 1000000000000000000000000000 {\n    \
    \                count += 1\n                }\n                if num > 10000000000\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpln03s9ut.swift:96:37: error: expected '{' after 'if' condition\n\
    \                if num > 10000000000\n                                    ^\n\
    /tmp/tmpln03s9ut.swift:118:46: error: expected '}' at end of brace statement\n\
    assert(specialFilter(nums: [] as [Int]) == 0)\n                              \
    \               ^\n/tmp/tmpln03s9ut.swift:13:21: note: to match this opening '{'\n\
    \        if num > 10 {\n                    ^\n/tmp/tmpln03s9ut.swift:118:46:\
    \ error: expected '}' at end of brace statement\nassert(specialFilter(nums: []\
    \ as [Int]) == 0)\n                                             ^\n/tmp/tmpln03s9ut.swift:12:21:\
    \ note: to match this opening '{'\n    for num in nums {\n                   \
    \ ^\n/tmp/tmpln03s9ut.swift:118:46: error: expected '}' at end of brace statement\n\
    assert(specialFilter(nums: [] as [Int]) == 0)\n                              \
    \               ^\n/tmp/tmpln03s9ut.swift:10:40: note: to match this opening '{'\n\
    func specialFilter(nums: [Int]) -> Int {\n                                   \
    \    ^\n/tmp/tmpln03s9ut.swift:100:6: error: operator functions can only be declared\
    \ at global or in type scope\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n     ^\n"
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 1 {\n                        if num % 1000 == 1 {\n           \
    \                 count += 1\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9egqhbip/tmp9egqhbip.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31fd1f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31fceeab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31fceea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31fcee97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9egqhbip                        0x0000557d02cc15d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b31fd3df460 __libc_start_main +
    245

    6    tmp9egqhbip                        0x0000557d02cc1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpc6p9066t/tmpc6p9066t.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc21062c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc20d59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc20d59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc20d587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc6p9066t                        0x000055d8e75615d7 <unavailable> + 5591

    5    libc.so.6                          0x00002afc2124e460 __libc_start_main +
    245

    6    tmpc6p9066t                        0x000055d8e7561169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 1 {\n                        if num % 1000 == 1 {\n           \
    \                 count += 1\n                        }\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9egqhbip/tmp9egqhbip.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b31fd1f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b31fceeab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b31fceea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b31fcee97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9egqhbip                        0x0000557d02cc15d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b31fd3df460 __libc_start_main +
    245

    6    tmp9egqhbip                        0x0000557d02cc1169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 2 % 2 == 1 {\n                 \
    \   count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp9qfcz3mh/tmp9qfcz3mh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a9c30ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a9c005b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a9c005988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a9c0047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9qfcz3mh                        0x0000564bf53c66b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1a9c4fa460 __libc_start_main +
    245

    6    tmp9qfcz3mh                        0x0000564bf53c6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 && num % 7 == 1 && num % 9 == 1 {\n        \
    \    count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpc6p9066t/tmpc6p9066t.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc21062c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc20d59b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc20d59988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc20d587b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc6p9066t                        0x000055d8e75615d7 <unavailable> + 5591

    5    libc.so.6                          0x00002afc2124e460 __libc_start_main +
    245

    6    tmpc6p9066t                        0x000055d8e7561169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 5 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9cjhzlss/tmp9cjhzlss.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b509b541c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b509b238b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b509b238988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b509b2377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9cjhzlss                        0x000055c1c8d8e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b509b72d460 __libc_start_main +
    245

    6    tmp9cjhzlss                        0x000055c1c8d8e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfeubskys/tmpfeubskys.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b047efb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b047ecb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b047ecb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b047ecaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfeubskys                        0x00005574663855d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b047f1a5460 __libc_start_main +
    245

    6    tmpfeubskys                        0x0000557466385169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num > 10 && nums.last % 2 == 1 {\n   \
    \                 count += 1\n                }\n            }\n        }\n  \
    \  }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmpg_y34ekd.swift:15:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmpg_y34ekd.swift:15:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmpg_y34ekd.swift:15:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpbvc5o97n/tmpbvc5o97n.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b69aefb0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b69aeca7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b69aeca7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b69aeca67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbvc5o97n                        0x0000564354e265d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b69af19c460 __libc_start_main +
    245

    6    tmpbvc5o97n                        0x0000564354e26169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 2 % 2 == 1 {\n                 \
    \   count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp9qfcz3mh/tmp9qfcz3mh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1a9c30ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1a9c005b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1a9c005988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1a9c0047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9qfcz3mh                        0x0000564bf53c66b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1a9c4fa460 __libc_start_main +
    245

    6    tmp9qfcz3mh                        0x0000564bf53c6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 {\n                if num % 10 == 1\
    \ {\n                    count += 1\n                }\n            }\n      \
    \  }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpbc4o0j7b/tmpbc4o0j7b.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aaf10408c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aaf100ffb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aaf100ff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aaf100fe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbc4o0j7b                        0x000055a7f0a6a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002aaf105f4460 __libc_start_main +
    245

    6    tmpbc4o0j7b                        0x000055a7f0a6a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n            if num % 2 == 0 {\n    \
    \            if num % 10 == 3 {\n                    count += 1\n            \
    \    }\n            }\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpod3h5g9i/tmpod3h5g9i.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b512b5b5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b512b2acb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b512b2ac988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b512b2ab7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpod3h5g9i                        0x000055a54fb8a5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b512b7a1460 __libc_start_main +
    245

    6    tmpod3h5g9i                        0x000055a54fb8a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 != 0 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpau5vj4a4/tmpau5vj4a4.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad21a890c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad21a587b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad21a587988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad21a5867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpau5vj4a4                        0x00005641a78e46b4 <unavailable> + 5812

    5    libc.so.6                          0x00002ad21aa7c460 __libc_start_main +
    245

    6    tmpau5vj4a4                        0x00005641a78e4169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    if\
    \ num % 100 == 0 {\n                        count += 1\n                    }\n\
    \                }\n            }\n        }\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp6swdrqhe/tmp6swdrqhe.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f70b8dc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f70884b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f70884988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f708837b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6swdrqhe                        0x00005557f63565d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b6f70d79460 __libc_start_main +
    245

    6    tmp6swdrqhe                        0x00005557f6356169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 && num % 3 == 1 && num % 5 == 1 && num\
    \ % 7 == 1 && num % 9 == 1 {\n                count += 1\n            }\n    \
    \    }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp75obz3bp/tmp75obz3bp.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b756f210c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b756ef07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b756ef07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b756ef067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp75obz3bp                        0x000055f5cd5d35d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b756f3fc460 __libc_start_main +
    245

    6    tmp75obz3bp                        0x000055f5cd5d3169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmplgfi1c3v/tmplgfi1c3v.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af2c2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af2c2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af2c2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af2c28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplgfi1c3v                        0x000055f61613e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002af2c2d36460 __libc_start_main +
    245

    6    tmplgfi1c3v                        0x000055f61613e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num % 10 == 1 {\n                    count\
    \ += 1\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpfeubskys/tmpfeubskys.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b047efb9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b047ecb0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b047ecb0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b047ecaf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfeubskys                        0x00005574663855d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b047f1a5460 __libc_start_main +
    245

    6    tmpfeubskys                        0x0000557466385169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821033
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 3 == 1 && n % 5 == 1 {\n            count += 1\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmp_8o15o8t/tmp_8o15o8t.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad2ea137c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad2e9e2eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad2e9e2e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad2e9e2d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_8o15o8t                        0x00005643588f05d7 <unavailable> + 5591

    5    libc.so.6                          0x00002ad2ea323460 __libc_start_main +
    245

    6    tmp_8o15o8t                        0x00005643588f0169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 0 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpygd_xtgy/tmpygd_xtgy.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b552ed1ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b552ea11b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b552ea11988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b552ea107b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpygd_xtgy                        0x000055ae55f3e5d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b552ef06460 __libc_start_main +
    245

    6    tmpygd_xtgy                        0x000055ae55f3e169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                if num / 10 % 2 == 1 {\n                \
    \    count += 1\n                }\n            }\n        }\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(specialFilter(nums: [5,\
    \ -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums: [43, -12, 93, 125,\
    \ 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33, 75, 21, 19]) == 3)\n\
    assert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums: [] as [Int])\
    \ == 0)"
  status: Exception
  stderr: 'tmpqb0_9o6m/tmpqb0_9o6m.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1ae539cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1ae5093b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1ae5093988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1ae50927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqb0_9o6m                        0x0000555c8194a6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b1ae5588460 __libc_start_main +
    245

    6    tmpqb0_9o6m                        0x0000555c8194a169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for n in nums {\n        if n > 10 && n % 2 == 1 && n\
    \ % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpq7ii0tup/tmpq7ii0tup.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abe8761bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe87312b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abe87312988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abe873117b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpq7ii0tup                        0x00005627646676b4 <unavailable> + 5812

    5    libc.so.6                          0x00002abe87807460 __libc_start_main +
    245

    6    tmpq7ii0tup                        0x0000562764667169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 2 == 1 {\n            count += 1\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpog2gnizl/tmpog2gnizl.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aadb83cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aadb80c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aadb80c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aadb80c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpog2gnizl                        0x000055b749dca6b4 <unavailable> + 5812

    5    libc.so.6                          0x00002aadb85bb460 __libc_start_main +
    245

    6    tmpog2gnizl                        0x000055b749dca169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ if num % 2 == 1 {\n                count += 1\n            }\n            if\
    \ num % 2 == 0 {\n                if num > 10 && num < 100 {\n               \
    \     if num % 2 == 1 {\n                        count += 1\n                \
    \    }\n                }\n            }\n        }\n    }\n    return count\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums:\
    \ [15, -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmp9umtabkn/tmp9umtabkn.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a27990c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a27687b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8a27687988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8a276867b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9umtabkn                        0x000055d6c1de26b4 <unavailable> + 5812

    5    libc.so.6                          0x00002b8a27b7c460 __libc_start_main +
    245

    6    tmp9umtabkn                        0x000055d6c1de2169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034
- exit_code: 1
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 {\n           \
    \ count += 1\n            if num % 2 == 1 {\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                    count += 1\n                }\n            }\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(specialFilter(nums: [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15,\
    \ -73, 14, -15]) == 1)\nassert(specialFilter(nums: [33, -2, -3, 45, 21, 109])\
    \ == 2)\nassert(specialFilter(nums: [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums:\
    \ [71, -2, -33, 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: SyntaxError
  stderr: "/tmp/tmp265l1rdz.swift:16:37: error: value of optional type 'Int?' must\
    \ be unwrapped to a value of type 'Int'\n                if num > 10 && nums.last\
    \ % 2 == 1 {\n                                    ^\n/tmp/tmp265l1rdz.swift:16:37:\
    \ note: coalesce using '??' to provide a default when the optional value contains\
    \ 'nil'\n                if num > 10 && nums.last % 2 == 1 {\n               \
    \                     ^\n                               (         ?? <#default\
    \ value#>)\n/tmp/tmp265l1rdz.swift:16:37: note: force-unwrap using '!' to abort\
    \ execution if the optional value contains 'nil'\n                if num > 10\
    \ && nums.last % 2 == 1 {\n                                    ^\n           \
    \                             !\n"
  stdout: ''
  timestamp: 1659821034
- exit_code: -4
  program: "\n/// Write a function that takes an array of numbers as input and returns\
    \ \n/// the number of elements in the array that are greater than 10 and both\
    \ \n/// first and last digits of a number are odd (1, 3, 5, 7, 9).\n/// For example:\n\
    /// >>> specialFilter(nums: [15, -73, 14, -15])\n/// 1\n/// >>> specialFilter(nums:\
    \ [33, -2, -3, 45, 21, 109])\n/// 2\nfunc specialFilter(nums: [Int]) -> Int {\n\
    \    var count = 0\n    for num in nums {\n        if num > 10 && num % 2 == 1\
    \ && num % 3 == 1 && num % 5 == 1 {\n            count += 1\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(specialFilter(nums:\
    \ [5, -2, 1, -5]) == 0)\nassert(specialFilter(nums: [15, -73, 14, -15]) == 1)\n\
    assert(specialFilter(nums: [33, -2, -3, 45, 21, 109]) == 2)\nassert(specialFilter(nums:\
    \ [43, -12, 93, 125, 121, 109]) == 4)\nassert(specialFilter(nums: [71, -2, -33,\
    \ 75, 21, 19]) == 3)\nassert(specialFilter(nums: [1]) == 0)\nassert(specialFilter(nums:\
    \ [] as [Int]) == 0)"
  status: Exception
  stderr: 'tmpvb7qohqf/tmpvb7qohqf.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4fce00ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4fcdd05b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4fcdd05988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4fcdd047b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvb7qohqf                        0x000055b441bb65d7 <unavailable> + 5591

    5    libc.so.6                          0x00002b4fce1fa460 __libc_start_main +
    245

    6    tmpvb7qohqf                        0x000055b441bb6169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659821034

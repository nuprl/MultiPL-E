name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(arr:\
  \ [2, 1, 1, 4, 5, 8, 2, 3])\n/// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\"]\n/// If the array is empty, return an empty array:\n\
  /// >>> by_length(arr: [] as [Int])\n/// [] as [String]\n/// If the array has any\
  \ strange number ignore it:\n/// >>> by_length(arr: [1, -1, 55])\n/// [\"One\"]\n\
  func by_length(arr: [Int]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        i += 1\n        if i == 1 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(String(num))\n\
    \        }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var index = 0\n    while index < arr.count\
    \ {\n        if arr[index] >= 1 && arr[index] <= 9 {\n            result.append(name[arr[index]\
    \ - 1])\n        } else {\n            result.append(String(arr[index]))\n   \
    \     }\n        index++\n    }\n    return result.reverse()", "    guard arr.count\
    \ > 0 else { return [] }\n    var result = [String]()\n    var i = 0\n    for\
    \ n in arr {\n        if n < 10 {\n            result.append(String(format: \"\
    %d\\\"\", n))\n        } else {\n            result.append(String(format: \"%d\\\
    \"\", n - 10))\n            result.append(String(format: \"%d\\\"\", n - 9))\n\
    \        }\n        i += 1\n    }\n    return result", "    if arr.isEmpty() {\n\
    \        return []\n    }\n    var result = [String]()\n    var index = 0\n  \
    \  var digits = arr\n    var lastDigit = digits[index]\n    var lastDigitName\
    \ = One\n    for index = 0; index < digits.count; index++ {\n        if digits[index]\
    \ > 9 {\n            lastDigit = digits[index] - 10\n            lastDigitName\
    \ = Two\n        } else if digits[index] > 9 {\n            lastDigit = digits[index]\
    \ - 10\n            lastDigitName = Three\n        } else if digits[index] > 9\
    \ {\n            lastDigit = digits[index] - 10\n            lastDigitName = Four\n\
    \        } else if digits[index] > 9 {\n            lastDigit = digits[index]\
    \ - 10\n            lastDigitName = Five\n        } else if digits[index] > 9\
    \ {\n            lastDigit = digits[index] - 10\n            lastDigitName = Six\n\
    \        } else if digits[index] > 9 {\n            lastDigit = digits[index]\
    \ - 10\n            lastDigitName = Seven\n        } else if digits[index] > 9\
    \ {\n            lastDigit = digits[index] - 10\n            lastDigitName = Eight\n\
    \        } else if digits[index] > 9 {\n            lastDigit = digits[index]\
    \ - 10\n            lastDigitName = Nine\n        } else {\n            lastDigit\
    \ = digits[index]\n            lastDigitName = One\n        }\n        result.append(lastDigitName)\n\
    \    }\n    return result", "    guard arr.count > 0 else { return [] }\n    let\
    \ min = arr[0]\n    let max = arr[arr.count - 1]\n    var result = [String]()\n\
    \    for i in arr {\n        if i < min || i > max {\n            continue\n \
    \       }\n        let digit = String(i)\n        result.append(digits[digit])\n\
    \    }\n    return result.reversed()", "    guard arr.count > 0 else { return\
    \ [] }\n    \n    var result = [String]()\n    \n    var i = 0\n    var j = 0\n\
    \    var k = arr.count - 1\n    \n    while i < k {\n        if arr[i] < 10 {\n\
    \            result.append(String(arr[i]))\n            i += 1\n            continue\n\
    \        }\n        \n        if arr[i] > 9 {\n            result.append(String(arr[i]\
    \ - 10))\n            i += 1\n            continue\n        }\n        \n    \
    \    if arr[i] == 0 {\n            result.append(String(arr[i]))\n           \
    \ i += 1\n            continue\n        }\n        \n        if arr[i] < 0 {\n\
    \            result.append(String(arr[i]))\n            i += 1\n            continue\n\
    \        }\n        \n        if arr[i] > 9 {\n            result.append(String(arr[i]\
    \ - 10))\n            i += 1\n            continue\n        }\n        \n    \
    \    if arr[i] > 9 {\n            result.append(String(arr[i] - 10))\n       \
    \     i += 1\n            continue\n        }\n        \n        if arr[i] < 0\
    \ {\n            result.append(String(arr[i]))\n            i += 1\n         \
    \   continue\n        }\n        \n        if arr[i] < 10 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n        \n        if arr[i]\
    \ > 9 {\n            result.append(String(arr[i] - 10))\n            i += 1\n\
    \            continue\n        }\n        \n        if arr[i] > 9 {\n        \
    \    result.append(String(arr[i] - 10))\n            i += 1\n            continue\n\
    \        }\n        \n        if arr[i] < 0 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n        \n        if arr[i]\
    \ < 10 {\n            result.append(String(arr[i]))\n            i += 1\n    \
    \        continue\n        }\n        \n        if arr[i] > 9 {\n            result.append(String(arr[i]\
    \ - 10))\n            i += 1\n            continue\n        }\n        \n    \
    \    if arr[i] > 9 {\n            result.append(String(arr[i] - 10))\n       \
    \     i += 1\n            continue\n        }\n        \n        if arr[i] < 0\
    \ {\n            result.append(String(arr[i]))\n            i += 1\n         \
    \   continue\n        }\n        \n        if arr[i] < 10 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n        \n        if arr[i]\
    \ > 9 {\n            result.append(String(arr[i] - 10))\n            i += 1\n\
    \            continue\n        }\n        \n        if arr[i] > 9 {\n        \
    \    result.append(String(arr[i] - 10))\n            i += 1\n            continue\n\
    \        }\n        \n        if arr[i] < 0 {\n            result.append(String(arr[i]))\n\
    \            i += 1\n            continue\n        }\n        \n        if arr[i]\
    \ < 10 {\n            result.append(String(arr[i]))\n            i += 1\n    \
    \        continue\n        }\n        \n        if arr[i] > 9 {\n            result.append(String(arr[i]\
    \ - 10))\n            i += 1\n            continue", "    guard arr.count > 0\
    \ else { return [] }\n    let maxLength = arr.max()!\n    var result = [String]()\n\
    \    for i in 0..<maxLength {\n        let index = Int(i) - 1\n        let value\
    \ = arr[index]\n        switch value {\n        case 1:\n            result.append(String(format:\
    \ \"One\", arguments: nil))\n        case 2:\n            result.append(String(format:\
    \ \"Two\", arguments: nil))\n        case 3:\n            result.append(String(format:\
    \ \"Three\", arguments: nil))\n        case 4:\n            result.append(String(format:\
    \ \"Four\", arguments: nil))\n        case 5:\n            result.append(String(format:\
    \ \"Five\", arguments: nil))\n        case 6:\n            result.append(String(format:\
    \ \"Six\", arguments: nil))\n        case 7:\n            result.append(String(format:\
    \ \"Seven\", arguments: nil))\n        case 8:\n            result.append(String(format:\
    \ \"Eight\", arguments: nil))\n        case 9:\n            result.append(String(format:\
    \ \"Nine\", arguments: nil))\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    for number in arr {\n        let index = number - min\n        result.append(String(index))\n\
    \    }\n    for number in arr {\n        let index = number - min\n        result.append(String(index))\n\
    \    }\n    return result.reverse()", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result: [String] = []\n    var index = 0\n    var digit = arr[index]\n\
    \    var isNegative = false\n    if digit < 0 {\n        digit = -digit\n    \
    \    isNegative = true\n    }\n    switch digit {\n    case 0:\n        result.append(\"\
    \")\n    case 1:\n        result.append(One)\n    case 2:\n        result.append(Two)\n\
    \    case 3:\n        result.append(Three)\n    case 4:\n        result.append(Four)\n\
    \    case 5:\n        result.append(Five)\n    case 6:\n        result.append(Six)\n\
    \    case 7:\n        result.append(Seven)\n    case 8:\n        result.append(Eight)\n\
    \    case 9:\n        result.append(Nine)\n    default:\n        return result\n\
    \    }\n    index += 1\n    while index < arr.count {\n        digit = arr[index]\n\
    \        switch digit {\n        case 0:\n            result.append(\"\")\n  \
    \      case 1:\n            result.append(One)\n        case 2:\n            result.append(Two)\n\
    \        case 3:\n            result.append(Three)\n        case 4:\n        \
    \    result.append(Four)\n        case 5:\n            result.append(Five)\n \
    \       case 6:\n            result.append(Six)\n        case 7:\n           \
    \ result.append(Seven)\n        case 8:\n            result.append(Eight)\n  \
    \      case 9:\n            result.append(Nine)\n        default:\n          \
    \  return result\n        }\n        index += 1\n    }\n    if isNegative {\n\
    \        result.insert(0, \"-\")\n    }\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for num in arr {\n        if num < 1 || num > 9 {\n            continue\n \
    \       }\n        i += 1\n        result.append(String(num))\n    }\n    for\
    \ _ in 0..<i {\n        result.append(String(arr[arr.index(arr.startIndex, offsetBy:\
    \ -1)]))\n    }\n    return result", "    var result = [String]()\n    var i =\
    \ 0\n    var j = 0\n    var k = 0\n    for k in 0..<arr.count {\n        if arr[k]\
    \ == 1 {\n            result.append(One[k])\n        } else if arr[k] == 2 {\n\
    \            result.append(Two[k])\n        } else if arr[k] == 3 {\n        \
    \    result.append(Three[k])\n        } else if arr[k] == 4 {\n            result.append(Four[k])\n\
    \        } else if arr[k] == 5 {\n            result.append(Five[k])\n       \
    \ } else if arr[k] == 6 {\n            result.append(Six[k])\n        } else if\
    \ arr[k] == 7 {\n            result.append(Seven[k])\n        } else if arr[k]\
    \ == 8 {\n            result.append(Eight[k])\n        } else if arr[k] == 9 {\n\
    \            result.append(Nine[k])\n        }\n    }\n    for k in 0..<result.count\
    \ {\n        if i == 0 {\n            j = k\n        }\n        if j == 0 {\n\
    \            i = k\n        }\n        if arr[i] < arr[j] {\n            result[k]\
    \ = One[j]\n            j = j - 1\n        } else if arr[i] > arr[j] {\n     \
    \       result[k] = One[i]\n            i = i - 1\n        } else {\n        \
    \    result[k] = Two[j]\n            j = j - 1\n        }\n    }\n    return result",
  "    guard !arr.isEmpty else { return [] }\n    \n    var result: [String] = []\n\
    \    \n    for i in arr {\n        if i >= 1 && i <= 9 {\n            result.append(String(format:\
    \ \"%d\\\"\", i))\n        } else {\n            result.append(String(format:\
    \ \"%d\\\"\", i))\n        }\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in result {\n        result.remove(at:\
    \ result.index(of: i))\n    }\n    \n    for i in ", "    guard arr.count > 0\
    \ else { return [] }\n    let len = arr.count\n    var result = [String]()\n \
    \   for i in 0..<len {\n        let index = arr[i] % 10\n        result.append(names[index])\n\
    \        arr[i] /= 10\n    }\n    return result", "    if arr.isEmpty {\n    \
    \    return []\n    }\n    var result = [String]()\n    var i = 0\n    for n in\
    \ arr {\n        if n < 1 || n > 9 {\n            continue\n        }\n      \
    \  let digit = String(n)\n        if i == 0 {\n            result.append(digit)\n\
    \        } else {\n            result.append(digit.reversed())\n        }\n  \
    \      i += 1\n    }\n    return result", "    var result = [String]()\n    for\
    \ num in arr {\n        if num > 9 {\n            num = num - 10\n        }\n\
    \        result.append(name_to_num[num])\n    }\n    return result", "    guard\
    \ arr.count > 0 else { return [] }\n    let min = 1\n    let max = 9\n    var\
    \ result = [String]()\n    for num in arr {\n        let index = min + num % 10\n\
    \        result.append(names[index])\n    }\n    return result.reversed()", " \
    \   if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    var last = 0\n    for number in arr {\n        if number\
    \ == 1 {\n            result.append(One[index])\n            index++\n       \
    \     last = number\n        } else if number == 2 {\n            result.append(Two[index])\n\
    \            index++\n            last = number\n        } else if number == 3\
    \ {\n            result.append(Three[index])\n            index++\n          \
    \  last = number\n        } else if number == 4 {\n            result.append(Four[index])\n\
    \            index++\n            last = number\n        } else if number == 5\
    \ {\n            result.append(Five[index])\n            index++\n           \
    \ last = number\n        } else if number == 6 {\n            result.append(Six[index])\n\
    \            index++\n            last = number\n        } else if number == 7\
    \ {\n            result.append(Seven[index])\n            index++\n          \
    \  last = number\n        } else if number == 8 {\n            result.append(Eight[index])\n\
    \            index++\n            last = number\n        } else if number == 9\
    \ {\n            result.append(Nine[index])\n            index++\n           \
    \ last = number\n        } else {\n            result.append(String(number))\n\
    \        }\n    }\n    if last == 0 {\n        return arr\n    }\n    result.append(String(last))\n\
    \    return result", "    guard arr.count > 0 else { return [] }\n    let maxLength\
    \ = max(arr.map { $0.count })\n    var result = [String]()\n    for i in 0..<maxLength\
    \ {\n        let index = arr.index(where: { $0.count >= i })\n        if index\
    \ == nil { return result }\n        let value = arr[index!]\n        result.append(value)\n\
    \        arr.remove(at: index!)\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for num in arr {\n        if num >= 1 && num <= 9 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n        }\n    }\n\
    \    for num in arr {\n        if num >= 1 && num <= 9 {\n            result[i]\
    \ = \"One\"\n            i += 1\n        }\n        if num >= 10 && num <= 99\
    \ {\n            result[i] = \"Two\"\n            i += 1\n        }\n        if\
    \ num >= 100 && num <= 999 {\n            result[i] = \"Three\"\n            i\
    \ += 1\n        }\n        if num >= 1000 && num <= 9999 {\n            result[i]\
    \ = \"Four\"\n            i += 1\n        }\n        if num >= 10000 && num <=\
    \ 99999 {\n            result[i] = \"Five\"\n            i += 1\n        }\n \
    \       if num >= 100000 && num <= 999999 {\n            result[i] = \"Six\"\n\
    \            i += 1\n        }\n        if num >= 1000000 && num <= 9999999 {\n\
    \            result[i] = \"Seven\"\n            i += 1\n        }\n        if\
    \ num >= 10000000 && num <= 99999999 {\n            result[i] = \"Eight\"\n  \
    \          i += 1\n        }\n        if num >= 100000000 && num <= 999999999\
    \ {\n            result[i] = \"Nine\"\n            i += 1\n        }\n    }\n\
    \    return result", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result = [String]()\n    var last = 0\n    for num in arr {\n        if num\
    \ > 9 {\n            last = num\n        } else {\n            if last > 0 {\n\
    \                result.append(\"\\(last)\")\n            }\n            result.append(name[num])\n\
    \            last = 0\n        }\n    }\n    if last > 0 {\n        result.append(\"\
    \\(last)\")\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let maxValue = max(arr)\n    let minValue\
    \ = min(arr)\n    if maxValue == minValue {\n        return result\n    }\n  \
    \  let maxDigit = maxValue % 10\n    let minDigit = minValue % 10\n    if maxDigit\
    \ == minDigit {\n        return result\n    }\n    let maxDigitName = String(maxDigit)\n\
    \    let minDigitName = String(minDigit)\n    if maxDigitName == minDigitName\
    \ {\n        return result\n    }\n    let maxDigitIndex = arr.index(of: maxDigit)!\n\
    \    let minDigitIndex = arr.index(of: minDigit)!\n    let maxDigitName = arr[maxDigitIndex]\n\
    \    let minDigitName = arr[minDigitIndex]\n    if maxDigitName == minDigitName\
    \ {\n        return result\n    }\n    let maxDigitNameIndex = arr.index(of: maxDigitName)!\n\
    \    let minDigitNameIndex = arr.index(of: minDigitName)!\n    let maxDigitNameName\
    \ = arr[maxDigitNameIndex]\n    let minDigitNameName = arr[minDigitNameIndex]\n\
    \    if maxDigitNameName == minDigitNameName {\n        return result\n    }\n\
    \    let maxDigitNameNameIndex = arr.index(of: maxDigitNameName)!\n    let minDigitNameNameIndex\
    \ = arr.index(of: minDigitNameName)!\n    let maxDigitNameNameName = arr[maxDigitNameNameIndex]\n\
    \    let minDigitNameNameName = arr[minDigitNameNameIndex]\n    if maxDigitNameNameName\
    \ == minDigitNameNameName {\n        return result\n    }\n    let maxDigitNameNameNameIndex\
    \ = arr.index(of: maxDigitNameNameName)!\n    let minDigitNameNameNameIndex =\
    \ arr.index(of: minDigitNameNameName)!\n    let maxDigitNameNameNameName = arr[maxDigitNameNameNameIndex]\n\
    \    let minDigitNameNameNameName = arr[minDigitNameNameNameIndex]\n    if maxDigitNameNameNameName\
    \ == minDigitNameNameNameName {\n        return result\n    }\n    let maxDigitNameNameNameNameIndex\
    \ = arr.index(of: maxDigitNameNameNameName)!\n    let minDigitNameNameNameNameIndex\
    \ = arr.index(of: minDigitNameNameNameName)!\n    let maxDigitNameNameNameNameName\
    \ = arr[maxDigitNameNameNameNameIndex]\n    let minDigitNameNameNameNameName =\
    \ arr[minDigitNameNameNameNameIndex]\n    if maxDigitNameNameNameNameName == minDigitNameNameNameNameName\
    \ {\n        return result\n    }\n    let maxDigitNameNameNameNameNameIndex =\
    \ arr.index(of: maxDigitNameNameNameNameName)!\n    let minDigit", "    var result\
    \ = [String]()\n    var i = 0\n    for number in arr {\n        if number < 1\
    \ || number > 9 {\n            continue\n        }\n        result.append(String(number))\n\
    \    }\n    for number in arr {\n        if number < 1 || number > 9 {\n     \
    \       continue\n        }\n        result[i] = \"\\(number)\"\n        i +=\
    \ 1\n    }\n    return result", "    if arr.isEmpty {\n        return []\n   \
    \ }\n    var result = [String]()\n    var last = 0\n    for num in arr {\n   \
    \     if num > 9 {\n            last = num\n        } else {\n            if last\
    \ == 0 {\n                result.append(String(num))\n            } else {\n \
    \               result.append(String(last))\n                result.append(String(num))\n\
    \            }\n            last = 0\n        }\n    }\n    return result", " \
    \   guard arr.count > 0 else {\n        return []\n    }\n\n    var result: [String]\
    \ = []\n    var i = 0\n    var j = 0\n    var n = arr.count\n    var temp = 0\n\
    \n    while i < n {\n        temp = arr[i]\n        if temp < 10 {\n         \
    \   result.append(String(temp))\n            i += 1\n            continue\n  \
    \      }\n\n        if temp < 100 {\n            result.append(String(temp / 10))\n\
    \            result.append(String(temp % 10))\n            i += 1\n          \
    \  continue\n        }\n\n        if temp < 1000 {\n            result.append(String(temp\
    \ / 100))\n            result.append(String(temp % 100))\n            result.append(String(temp\
    \ / 10))\n            result.append(String(temp % 10))\n            i += 1\n \
    \           continue\n        }\n\n        if temp < 10000 {\n            result.append(String(temp\
    \ / 1000))\n            result.append(String(temp % 1000))\n            result.append(String(temp\
    \ / 100))\n            result.append(String(temp % 100))\n            result.append(String(temp\
    \ / 10))\n            result.append(String(temp % 10))\n            i += 1\n \
    \           continue\n        }\n\n        if temp < 100000 {\n            result.append(String(temp\
    \ / 10000))\n            result.append(String(temp % 10000))\n            result.append(String(temp\
    \ / 1000))\n            result.append(String(temp % 1000))\n            result.append(String(temp\
    \ / 100))\n            result.append(String(temp % 100))\n            result.append(String(temp\
    \ / 10))\n            result.append(String(temp % 10))\n            i += 1\n \
    \           continue\n        }\n\n        if temp < 1000000 {\n            result.append(String(temp\
    \ / 100000))\n            result.append(String(temp % 100000))\n            result.append(String(temp\
    \ / 10000))\n            result.append(String(temp % 10000))\n            result.append(String(temp\
    \ / 1000))\n            result.append(String(temp % 1000))\n            result.append(String(temp\
    \ / 100))\n            result.append(String(temp % 100))\n            result.append(String(temp\
    \ / 10))\n            result.append(String(temp % 10))\n            i += 1\n \
    \           continue\n        }\n\n        if temp < 10000000 {\n            result.append(String(temp\
    \ / 1000000))\n            result.append(String(temp % 1000000))\n           \
    \ result.append(String(temp / 100000))\n            result.append(String(temp\
    \ % 100000))\n            result.append(String(temp / 10000))\n            result.append(String(temp\
    \ % 10000))\n            result.append(String(temp / 1000))\n            result.append(String(temp\
    \ % 1000))\n            result.append(String(temp / 100))\n            result.append(String(temp\
    \ % 100))\n            result.append(String(temp / 10))\n            result.append(String(temp\
    \ % 10))\n            i += 1\n            continue\n        }\n\n        if temp\
    \ < 100000000 {\n            result.append(String(temp / 10000000))\n        \
    \    result.append(String(temp % 10000000))\n            result.append(String(temp\
    \ / 1000000))\n            result.append(String(temp % 1000000))\n           \
    \ result.append(String(temp / 100000))\n            result.append(String(temp\
    \ % 100000))\n            result", "    var result = [String]()\n    var i = 0\n\
    \    for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        i += 1\n        result.append(String(number))\n        if\
    \ i == 3 {\n            i = 1\n        }\n    }\n    if i == 1 {\n        result.removeLast()\n\
    \    }\n    return result", "    if arr.isEmpty() {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    for number in arr {\n       \
    \ if number > 9 {\n            number = number - 10\n        }\n        result.append(name[number])\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    for number\
    \ in arr {\n        if number >= 1 && number <= 9 {\n            result.append(name[number])\n\
    \        }\n    }\n    if result.isEmpty {\n        return result\n    }\n   \
    \ return reverse(result).map { name[$0] }", "    var result = [String]()\n   \
    \ if arr.isEmpty {\n        return result\n    }\n    let min = 1\n    let max\
    \ = 9\n    var i = 0\n    while i < arr.count {\n        if arr[i] >= min && arr[i]\
    \ <= max {\n            result.append(String(arr[i]))\n        }\n        i +=\
    \ 1\n    }\n    result.reverse()\n    for element in result {\n        if element\
    \ == \"One\" {\n            result.removeFirst()\n        }\n        if element\
    \ == \"Two\" {\n            result.removeLast()\n        }\n        if element\
    \ == \"Three\" {\n            result.removeLast()\n            result.removeLast()\n\
    \        }\n        if element == \"Four\" {\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n        }\n\
    \        if element == \"Five\" {\n            result.removeLast()\n         \
    \   result.removeLast()\n            result.removeLast()\n            result.removeLast()\n\
    \        }\n        if element == \"Six\" {\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n          \
    \  result.removeLast()\n            result.removeLast()\n        }\n        if\
    \ element == \"Seven\" {\n            result.removeLast()\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n          \
    \  result.removeLast()\n            result.removeLast()\n        }\n        if\
    \ element == \"Eight\" {\n            result.removeLast()\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n          \
    \  result.removeLast()\n            result.removeLast()\n            result.removeLast()\n\
    \        }\n        if element == \"Nine\" {\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n          \
    \  result.removeLast()\n            result.removeLast()\n            result.removeLast()\n\
    \            result.removeLast()\n            result.removeLast()\n        }\n\
    \    }\n    return result", "    var result = [String]()\n    var i = 0\n    for\
    \ n in arr {\n        if n < 1 || n > 9 {\n            continue\n        }\n \
    \       if i == 0 {\n            result.append(String(format: \"%d\\\"\", n))\n\
    \        } else {\n            result.append(String(format: \"%d\\\"\", n - 1))\n\
    \        }\n        i += 1\n    }\n    if i == 0 {\n        return arr\n    }\n\
    \    result.reverse()\n    for n in result {\n        if n != \"0\" && n != \"\
    1\" {\n            return arr\n        }\n    }\n    return arr", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var last = 0\n\
    \    for num in arr {\n        if num > 9 {\n            num %= 10\n         \
    \   if last < num {\n                last = num\n            }\n        } else\
    \ {\n            last = num\n        }\n        result.append(names[num])\n  \
    \  }\n    result.reverse()\n    return result", "    guard !arr.isEmpty else {\
    \ return [] }\n    let min = min(arr)\n    let max = max(arr)\n    var result\
    \ = [String]()\n    for n in arr {\n        if n < min || n > max {\n        \
    \    continue\n        }\n        let digit = n % 10\n        let name = digitName(digit)\n\
    \        result.append(name)\n    }\n    return result.reversed()", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for n in arr {\n        if n < 1 || n > 9 {\n            continue\n       \
    \ }\n        if i == 0 {\n            result.append(ones[n - 1])\n        } else\
    \ {\n            result.append(names[n - 1])\n        }\n        i += 1\n    }\n\
    \    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let ones = arr.filter{ $0 < 10 }\n    let\
    \ tens = arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n    let\
    \ tensReversedString = tensReversed.map{ String($0) }\n    let tensReversedStringString\
    \ = tensReversedString.joined(separator: \" \")\n    let tensReversedStringStringString\
    \ = tensReversedStringString.joined(separator: \" \")\n    let tensReversedStringStringString\
    \ = \"\\(tensReversedStringStringString)\"\n    let tensReversedStringStringStringString\
    \ = \"\\(tensReversedStringStringStringString)\"\n    let tensReversedStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringString)\"\n    let tensReversedStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringString)\"\n    let tensReversedStringStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringString = \"\\\
    (tensReversedStringStringStringStringStringStringStringStringStringString)\"\n\
    \    let tensReversedStringStringStringStringStringStringStringStringString =\
    \ \"\\(tensReversedStringStringStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringStringStringStringStringStringStringStringString\
    \ = \"\\(tensReversedStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString)\"\
    \n    let tensReversedStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringStringString",
  "    guard arr.count > 0 else { return [] }\n    let ones = arr.filter{ $0 < 10\
    \ }\n    let tens = arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n\
    \    let tensReversedString = tensReversed.map{ String($0) }\n    let onesReversed\
    \ = ones.reverse()\n    let onesReversedString = onesReversed.map{ String($0)\
    \ }\n    let onesReversedStringWithOne = onesReversedString.append(\"One\")\n\
    \    let onesReversedStringWithTen = onesReversedStringWithOne.append(\"Ten\"\
    )\n    let onesReversedStringWithTwelve = onesReversedStringWithTen.append(\"\
    Twelve\")\n    let onesReversedStringWithThirteen = onesReversedStringWithTwelve.append(\"\
    Thirteen\")\n    let onesReversedStringWithFourteen = onesReversedStringWithThirteen.append(\"\
    Fourteen\")\n    let onesReversedStringWithFifteen = onesReversedStringWithFourteen.append(\"\
    Fifteen\")\n    let onesReversedStringWithSixteen = onesReversedStringWithFifteen.append(\"\
    Sixteen\")\n    let onesReversedStringWithSeventeen = onesReversedStringWithSixteen.append(\"\
    Seventeen\")\n    let onesReversedStringWithEighteen = onesReversedStringWithSeventeen.append(\"\
    Eighteen\")\n    let onesReversedStringWithNineteen = onesReversedStringWithEighteen.append(\"\
    Nineteen\")\n    let onesReversedStringWithTwenty = onesReversedStringWithNineteen.append(\"\
    Twenty\")\n    let onesReversedStringWithTwentyOne = onesReversedStringWithTwenty.append(\"\
    TwentyOne\")\n    let onesReversedStringWithTwentyTwo = onesReversedStringWithTwentyOne.append(\"\
    TwentyTwo\")\n    let onesReversedStringWithTwentyThree = onesReversedStringWithTwentyTwo.append(\"\
    TwentyThree\")\n    let onesReversedStringWithTwentyFour = onesReversedStringWithTwentyThree.append(\"\
    TwentyFour\")\n    let onesReversedStringWithTwentyFive = onesReversedStringWithTwentyFour.append(\"\
    TwentyFive\")\n    let onesReversedStringWithTwent", "    guard !arr.isEmpty else\
    \ { return [] }\n    var result = [String]()\n    var last = 0\n    for num in\
    \ arr {\n        if num > 9 {\n            num = num - 10\n        }\n       \
    \ result.append(names[num])\n        last = num\n    }\n    result.reverse()\n\
    \    for num in result {\n        if num != names[last] {\n            result.remove(at:\
    \ result.index(before: result.index(before: last)))\n        }\n    }\n    return\
    \ result", "    guard arr.count > 0 else { return [] }\n    let min = 1\n    let\
    \ max = 9\n    var result = [String]()\n    for n in arr {\n        if n < min\
    \ || n > max {\n            continue\n        }\n        let digit = String(n\
    \ - min)\n        result.append(name[digit])\n    }\n    return result", "   \
    \ guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ index = 0\n    while index < arr.count {\n        let value = arr[index]\n \
    \       if value < 1 || value > 9 {\n            index += 1\n            continue\n\
    \        }\n        let digit = value - 10\n        let name = digitToName(digit)\n\
    \        result.append(name)\n        index += 1\n    }\n    return result", " \
    \   var result: [String] = []\n    for number in arr {\n        switch number\
    \ {\n        case 1:\n            result.append(\"One\")\n        case 2:\n  \
    \          result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result", "    var result = [String]()\n    for num in arr {\n        switch\
    \ num {\n        case 1:\n            result.append(\"One\")\n        case 2:\n\
    \            result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result", "    var result = [String]()\n    if arr.isEmpty {\n        return\
    \ result\n    }\n    let min = arr.min()\n    let max = arr.max()\n    if min\
    \ == max {\n        return arr\n    }\n    let digits = max - min + 1\n    let\
    \ ones = Array(1...digits)\n    let tens = Array(10...digits)\n    let hundreds\
    \ = Array(100...digits)\n    let thousands = Array(1000...digits)\n    let ten_digits\
    \ = Array(10...digits)\n    let hundred_digits = Array(100...digits)\n    let\
    \ thousand_digits = Array(1000...digits)\n    let ten_thousand_digits = Array(10000...digits)\n\
    \    let hundred_thousand_digits = Array(100000...digits)\n    let thousand_thousand_digits\
    \ = Array(1000000...digits)\n    let ten_thousand_thousand_digits = Array(10000000...digits)\n\
    \    let hundred_thousand_thousand_digits = Array(100000000...digits)\n    let\
    \ thousand_thousand_thousand_digits = Array(1000000000...digits)\n    let ten_thousand_thousand_thousand_digits\
    \ = Array(10000000000...digits)\n    let hundred_thousand_thousand_thousand_digits\
    \ = Array(100000000000...digits)\n    let thousand_thousand_thousand_thousand_digits\
    \ = Array(1000000000000...digits)\n    let ten_thousand_thousand_thousand_thousand_digits\
    \ = Array(10000000000000...digits)\n    let hundred_thousand_thousand_thousand_thousand_digits\
    \ = Array(100000000000000...digits)\n    let thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(1000000000000000...digits)\n    let ten_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(10000000000000000...digits)\n    let hundred_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(100000000000000000...digits)\n    let thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(1000000000000000000...digits)\n    let ten_thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(10000000000000000000...digits)\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(100000000000000000000...digits)\n    let thousand_thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(1000000000000000000000...digits)\n    let ten_thousand_thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(10000000000000000000000...digits)\n    let hundred_thousand_thousand_thousand_thousand_thousand_thousand_thousand_digits\
    \ = Array(", "    if arr.isEmpty {\n        return []\n    }\n    var result =\
    \ [String]()\n    var i = 0\n    for number in arr {\n        if number > 9 {\n\
    \            number = number - 10\n        }\n        if number < 1 {\n      \
    \      number = 10 + number\n        }\n        result.append(digits[number])\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    if min == max {\n        return arr\n    }\n    let digits = max - min +\
    \ 1\n    let ones = Array(1...digits)\n    let tens = Array(10...digits)\n   \
    \ let tensDigits = Array(10...digits)\n    let tensDigitNames = tens.map { String($0)\
    \ }\n    let tensDigitNamesReversed = tensDigitNames.reversed()\n    let tensDigitNamesReversedSorted\
    \ = tensDigitNamesReversed.sorted()\n    let tensDigitNamesReversedSortedIndex\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex2\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex3\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex4\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex5\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex6\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex7\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex8\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex9\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex10\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex11\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex12\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex13\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex14\
    \ = tensDigitNamesReversedSorted.index(of: max)\n    let tensDigitNamesReversedSortedIndex15\
    \ = tensDigitNamesReversedSorted.index(of: min)\n    let tensDigitNamesReversedSortedIndex16",
  "    guard arr.count > 0 else { return [] }\n    let min = 1\n    let max = 9\n\
    \    var result = [String]()\n    for n in arr {\n        if min <= n && n <=\
    \ max {\n            result.append(name[n - 1])\n        }\n    }\n    result.reverse()\n\
    \    return result", "    var result = [String]()\n    if arr.isEmpty {\n    \
    \    return result\n    }\n    var ones = arr.filter{ $0 < 10 }\n    var tens\
    \ = arr.filter{ $0 >= 10 }\n    var tensReversed = reverseArray(tens)\n    var\
    \ onesReversed = reverseArray(ones)\n    var onesReversedString = reverseString(onesReversed)\n\
    \    var tensReversedString = reverseString(tensReversed)\n    for number in onesReversedString\
    \ {\n        result.append(ones[onesReversed.index(of: number)])\n    }\n    for\
    \ number in tensReversedString {\n        result.append(tens[tensReversed.index(of:\
    \ number)])\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    var min = arr[0]\n    var max = arr[0]\n\
    \    for num in arr {\n        if num < min {\n            min = num\n       \
    \ }\n        if num > max {\n            max = num\n        }\n    }\n    var\
    \ one = One\n    var two = Two\n    var three = Three\n    var four = Four\n \
    \   var five = Five\n    var six = Six\n    var seven = Seven\n    var eight =\
    \ Eight\n    var nine = Nine\n    if min < 1 {\n        one = One\n    }\n   \
    \ if min < 2 {\n        two = Two\n    }\n    if min < 3 {\n        three = Three\n\
    \    }\n    if min < 4 {\n        four = Four\n    }\n    if min < 5 {\n     \
    \   five = Five\n    }\n    if min < 6 {\n        six = Six\n    }\n    if min\
    \ < 7 {\n        seven = Seven\n    }\n    if min < 8 {\n        eight = Eight\n\
    \    }\n    if min < 9 {\n        nine = Nine\n    }\n    if max > 9 {\n     \
    \   one = One\n        two = Two\n        three = Three\n        four = Four\n\
    \        five = Five\n        six = Six\n        seven = Seven\n        eight\
    \ = Eight\n        nine = Nine\n    }\n    if max > 8 {\n        one = One\n \
    \       two = Two\n        three = Three\n        four = Four\n        five =\
    \ Five\n        six = Six\n        seven = Seven\n        eight = Eight\n    \
    \    nine = Nine\n    }\n    if max > 7 {\n        one = One\n        two = Two\n\
    \        three = Three\n        four = Four\n        five = Five\n        six\
    \ = Six\n        seven = Seven\n        eight = Eight\n        nine = Nine\n \
    \   }\n    if max > 6 {\n        one = One\n        two = Two\n        three =\
    \ Three\n        four = Four\n        five = Five\n        six = Six\n       \
    \ seven = Seven\n        eight = Eight\n        nine = Nine\n    }\n    if max\
    \ > 5 {\n        one = One\n        two = Two\n        three = Three\n       \
    \ four = Four\n        five = Five\n        six = Six\n", "    guard !arr.isEmpty\
    \ else { return [] }\n    var result = [String]()\n    let maxLength = (arr.max()\
    \ ?? 9) + 1\n    for n in arr {\n        let index = n % 10\n        result.append(String(index))\n\
    \    }\n    result.reverse()\n    for n in result {\n        let index = n.index(of:\
    \ \"0\")\n        if index != nil {\n            let digit = Int(n[index!])\n\
    \            result[result.index(of: n[index!])] = String(digit)\n        }\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var last = 0\n    for i := 0; i < len(arr);\
    \ i++ {\n        if arr[i] > 9 {\n            last = i\n            break\n  \
    \      }\n    }\n    for i := 0; i < len(arr); i++ {\n        if i == last {\n\
    \            result.append(String(arr[i]))\n        } else {\n            result.append(String(arr[i]))\n\
    \            result.append(\" \u2192 \")\n            result.append(String(arr[i]))\n\
    \        }\n    }\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    let min = 1\n    let max = 9\n    var result = [String]()\n    for\
    \ n in arr {\n        if n < min || n > max {\n            continue\n        }\n\
    \        let digit = n - min\n        result.append(name[digit])\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    var j = 0\n    var k = 0\n    var last = 0\n    for k in 0..<arr.count\
    \ {\n        if arr[k] == 1 {\n            if last == 0 {\n                last\
    \ = k\n            }\n            i += 1\n        } else {\n            if last\
    \ != 0 {\n                let temp = arr[last]\n                arr.removeLast()\n\
    \                arr.append(temp)\n                last = k\n            }\n \
    \           if i == 1 {\n                result.append(\"One\")\n            \
    \    i = 0\n            }\n            if i == 2 {\n                result.append(\"\
    Two\")\n                i = 0\n            }\n            if i == 3 {\n      \
    \          result.append(\"Three\")\n                i = 0\n            }\n  \
    \          if i == 4 {\n                result.append(\"Four\")\n            \
    \    i = 0\n            }\n            if i == 5 {\n                result.append(\"\
    Five\")\n                i = 0\n            }\n            if i == 6 {\n     \
    \           result.append(\"Six\")\n                i = 0\n            }\n   \
    \         if i == 7 {\n                result.append(\"Seven\")\n            \
    \    i = 0\n            }\n            if i == 8 {\n                result.append(\"\
    Eight\")\n                i = 0\n            }\n            if i == 9 {\n    \
    \            result.append(\"Nine\")\n                i = 0\n            }\n \
    \       }\n    }\n    if last != 0 {\n        let temp = arr[last]\n        arr.removeLast()\n\
    \        arr.append(temp)\n    }\n    return result", "    if arr.isEmpty() {\n\
    \        return []\n    }\n    var result = [String]()\n    var i = 0\n    for\
    \ num in arr {\n        if num < 1 || num > 9 {\n            continue\n      \
    \  }\n        result.append(name[num])\n    }\n    return result.reverse()", " \
    \   guard arr.count > 0 else { return [] }\n    let ones = arr.filter{ $0 < 10\
    \ }\n    let tens = arr.filter{ $0 >= 10 }\n    let tensReversed = tens.reverse()\n\
    \    let onesReversed = ones.reverse()\n    let onesReversedString = onesReversed.map\
    \ { $0.description }\n    let tensReversedString = tensReversed.map { $0.description\
    \ }\n    let reversedString = onesReversedString.append(tensReversedString)\n\
    \    return reversedString", "    var result = [String]()\n    for num in arr\
    \ {\n        if num < 1 || num > 9 {\n            continue\n        }\n      \
    \  switch num {\n        case 1:\n            result.append(\"One\")\n       \
    \ case 2:\n            result.append(\"Two\")\n        case 3:\n            result.append(\"\
    Three\")\n        case 4:\n            result.append(\"Four\")\n        case 5:\n\
    \            result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        let digit = String(num)\n        if i == 0\
    \ {\n            result.append(digit)\n        } else {\n            result.append(digit.reversed())\n\
    \        }\n        i += 1\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return nil\n    }\n    let len = arr.count\n    var result = [String]()\n\
    \    var i = 0\n    while i < len {\n        let num = arr[i]\n        if num\
    \ < 1 || num > 9 {\n            i += 1\n            continue\n        }\n    \
    \    let digit = num % 10\n        let name = digitName[digit]\n        if name\
    \ == nil {\n            i += 1\n            continue\n        }\n        result.append(name)\n\
    \        i += 1\n    }\n    return result", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result: [String] = []\n    var index = 0\n    var last =\
    \ 0\n    for element in arr {\n        if element > 9 {\n            element =\
    \ element - 10\n        }\n        if element > last {\n            result.append(String(element))\n\
    \        } else {\n            result.append(String(last))\n        }\n      \
    \  last = element\n    }\n    return result", "    var result: [String] = []\n\
    \    if arr.isEmpty {\n        return result\n    }\n    var digits = arr.sorted()\n\
    \    var lastDigit = digits[0]\n    var lastDigitIndex = 0\n    var lastDigitName\
    \ = \"\"\n    for index in 0..<arr.count {\n        let digit = arr[index]\n \
    \       if digit == lastDigit {\n            result.append(arr[lastDigitIndex])\n\
    \            lastDigitIndex += 1\n        } else {\n            if lastDigitIndex\
    \ > 0 {\n                result.append(lastDigitName)\n            }\n       \
    \     lastDigit = digit\n            lastDigitIndex = index\n            lastDigitName\
    \ = digitName(digit)\n        }\n    }\n    if lastDigitIndex > 0 {\n        result.append(lastDigitName)\n\
    \    }\n    return result", "    if arr.isEmpty() {\n        return []\n    }\n\
    \    var result: [String] = []\n    var last = 0\n    for num in arr {\n     \
    \   if num < 1 || num > 9 {\n            continue\n        }\n        if num ==\
    \ last {\n            continue\n        }\n        result.append(String(num))\n\
    \        last = num\n    }\n    return result.reverse().map { name[Int($0)] }",
  "    guard !arr.isEmpty else { return [] }\n    let min = min(arr)\n    let max\
    \ = max(arr)\n    var result = [String]()\n    for n in arr {\n        if n >=\
    \ min && n <= max {\n            result.append(name(n))\n        }\n    }\n  \
    \  return result.reversed()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = 1\n    let max = 9\n    let len\
    \ = arr.count\n    if len == 1 {\n        return arr\n    }\n    if len == 2 {\n\
    \        if arr[0] < arr[1] {\n            result.append(String(arr[0]))\n   \
    \         result.append(String(arr[1]))\n        } else {\n            result.append(String(arr[1]))\n\
    \            result.append(String(arr[0]))\n        }\n        return result\n\
    \    }\n    if len == 3 {\n        if arr[0] < arr[1] && arr[0] < arr[2] {\n \
    \           result.append(String(arr[0]))\n            result.append(String(arr[1]))\n\
    \            result.append(String(arr[2]))\n        } else {\n            if arr[1]\
    \ < arr[2] {\n                result.append(String(arr[1]))\n                result.append(String(arr[2]))\n\
    \            } else {\n                result.append(String(arr[0]))\n       \
    \         result.append(String(arr[1]))\n                result.append(String(arr[2]))\n\
    \            }\n        }\n        return result\n    }\n    if len == 4 {\n \
    \       if arr[0] < arr[1] && arr[0] < arr[2] && arr[0] < arr[3] {\n         \
    \   result.append(String(arr[0]))\n            result.append(String(arr[1]))\n\
    \            result.append(String(arr[2]))\n            result.append(String(arr[3]))\n\
    \        } else {\n            if arr[1] < arr[2] && arr[1] < arr[3] {\n     \
    \           result.append(String(arr[1]))\n                result.append(String(arr[2]))\n\
    \                result.append(String(arr[3]))\n            } else {\n       \
    \         if arr[2] < arr[3] {\n                    result.append(String(arr[2]))\n\
    \                    result.append(String(arr[3]))\n                } else {\n\
    \                    result.append(String(arr[0]))\n                    result.append(String(arr[1]))\n\
    \                    result.append(String(arr[2]))\n                    result.append(String(arr[3]))\n\
    \                }\n            }\n        }\n        return result\n    }\n \
    \   if len == 5 {\n        if arr[0] < arr[1] && arr[0] < arr[2] && arr[0] < arr[3]\
    \ && arr[0] < arr[4] {\n            result.append(String(arr[0]))\n          \
    \  result.append(String(arr[1]))\n            result.append(String(arr[2]))\n\
    \            result.append(String(arr[3]))\n            result.append(String(arr[4]))\n\
    \        } else {\n            if arr[1] < arr[2] && arr[1] < arr[3] && arr[1]\
    \ < arr[4] {\n                result.append(String(arr[1]))\n                result.append(String(arr[2]))\n\
    \                result.append(String(arr[3]))\n                result.append(String(arr[4]))\n\
    \            } else {\n                if arr[2] < arr[3] && arr[2] < arr[4] {\n\
    \                    result.append(String(arr[2]))\n                    result.append(String(arr[3]))\n\
    \                    result.append(String(arr[4]))\n                } else {\n\
    \                    if arr[3] < arr[4] {\n                        result.append(String(arr[3]))\n\
    \                        result.append(String(arr[4]))\n                    }\
    \ else {\n                        result.append(String(arr[0]))\n            \
    \            ", "    guard !arr.isEmpty else { return [] }\n    let min = 1\n\
    \    let max = 9\n    var result = [String]()\n    for n in arr {\n        if\
    \ n < min || n > max {\n            continue\n        }\n        let digit = n\
    \ - min\n        let name = String(digit)\n        result.append(name)\n    }\n\
    \    return result.reversed()", "    var result = [String]()\n    for number in\
    \ arr {\n        if number >= 1 && number <= 9 {\n            result.append(name[number])\n\
    \        }\n    }\n    if result.isEmpty {\n        return result\n    }\n   \
    \ result.reverse()\n    for number in result {\n        if number == \"One\" {\n\
    \            result.removeFirst()\n        }\n    }\n    return result", "   \
    \ if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n  \
    \  var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n        \
    \    continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n        }\n       \
    \ i += 1\n    }\n    return result.reverse()", "    var result = [String]()\n\
    \    for n in arr {\n        if n >= 1 && n <= 9 {\n            result.append(nameOf(n))\n\
    \        }\n    }\n    if result.isEmpty {\n        return nil\n    }\n    return\
    \ result.reversed()", "    var result = [String]()\n    if arr.isEmpty {\n   \
    \     return result\n    }\n    var digits = arr\n    if digits.count > 0 {\n\
    \        digits = digits.sorted()\n    }\n    if digits.count > 0 {\n        digits\
    \ = digits.reversed()\n    }\n    if digits.count > 0 {\n        for index in\
    \ 0..<digits.count {\n            let digit = digits[index]\n            let name\
    \ = digitToName(digit)\n            result.append(name)\n        }\n    }\n  \
    \  return result", "    if arr.isEmpty {\n        return []\n    }\n    let arr\
    \ = arr.sorted()\n    let arr = arr.reverse()\n    let arr = arr.map { $0.description\
    \ }\n    return arr", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result = [String]()\n    var last = 0\n    for num in arr {\n        if num\
    \ > 9 {\n            last = num\n        } else {\n            result.append(\"\
    One\")\n            result.append(\"Two\")\n            result.append(\"Three\"\
    )\n            result.append(\"Four\")\n            result.append(\"Five\")\n\
    \            result.append(\"Six\")\n            result.append(\"Seven\")\n  \
    \          result.append(\"Eight\")\n            result.append(\"Nine\")\n   \
    \         result.append(\"Ten\")\n            result.append(\"Eleven\")\n    \
    \        result.append(\"Twelve\")\n            result.append(\"Thirteen\")\n\
    \            result.append(\"Fourteen\")\n            result.append(\"Fifteen\"\
    )\n            result.append(\"Sixteen\")\n            result.append(\"Seventeen\"\
    )\n            result.append(\"Eighteen\")\n            result.append(\"Nineteen\"\
    )\n            result.append(\"Twenty\")\n            result.append(\"Twenty one\"\
    )\n            result.append(\"Twenty two\")\n            result.append(\"Twenty\
    \ three\")\n            result.append(\"Twenty four\")\n            result.append(\"\
    Twenty five\")\n            result.append(\"Twenty six\")\n            result.append(\"\
    Twenty seven\")\n            result.append(\"Twenty eight\")\n            result.append(\"\
    Twenty nine\")\n            result.append(\"Twenty ten\")\n            result.append(\"\
    Twenty eleven\")\n            result.append(\"Twenty twelve\")\n            result.append(\"\
    Twenty thirteen\")\n            result.append(\"Twenty fourteen\")\n         \
    \   result.append(\"Twenty fifteen\")\n            result.append(\"Twenty sixteen\"\
    )\n            result.append(\"Twenty seventeen\")\n            result.append(\"\
    Twenty eighteen\")\n            result.append(\"Twenty nineteen\")\n         \
    \   result.append(\"Twenty twenty\")\n            result.append(\"Twenty twenty\
    \ one\")\n            result.append(\"Twenty twenty two\")\n            result.append(\"\
    Twenty twenty three\")\n            result.append(\"Twenty twenty four\")\n  \
    \          result.append(\"Twenty twenty five\")\n            result.append(\"\
    Twenty twenty six\")\n            result.append(\"Twenty twenty seven\")\n   \
    \         result.append(\"Twenty twenty eight\")\n            result.append(\"\
    Twenty twenty nine\")\n            result.append(\"Twenty twenty ten\")\n    \
    \        result.append(\"Twenty twenty eleven\")\n            result.append(\"\
    Twenty twenty twelve\")\n            result.append(\"Twenty twenty thirteen\"\
    )\n            result.append(\"Twenty twenty fourteen\")\n            result.append(\"\
    Twenty twenty fifteen\")", "    guard arr.count > 0 else { return [] }\n    var\
    \ result = [String]()\n    var i = 0\n    for n in arr {\n        if n < 1 ||\
    \ n > 9 {\n            continue\n        }\n        let digit = String(n - 1)\n\
    \        result.append(name[digit])\n    }\n    return result.reverse()", "  \
    \  if arr.isEmpty {\n        return []\n    }\n\n    var result = [String]()\n\
    \    var last = 0\n    for num in arr {\n        if num > 9 {\n            last\
    \ = num\n        } else {\n            result.append(names[num])\n        }\n\
    \    }\n    result.reverse()\n    for index in 0..<result.count {\n        result[index]\
    \ = result[index][last]\n    }\n    return result", "    if arr.isEmpty {\n  \
    \      return []\n    }\n    var result = [String]()\n    var i = 0\n    for num\
    \ in arr {\n        if num < 1 || num > 9 {\n            continue\n        }\n\
    \        let index = num - i\n        result.append(names[index])\n        i =\
    \ num\n    }\n    return result", "    if arr.isEmpty {\n        return []\n \
    \   }\n    var result = [String]()\n    var index = 0\n    var last = 0\n    var\
    \ lastDigit = 0\n    var lastDigitName = \"\"\n    for digit in arr {\n      \
    \  if digit < 1 || digit > 9 {\n            continue\n        }\n        if digit\
    \ == last {\n            continue\n        }\n        lastDigit = digit\n    \
    \    lastDigitName = digitName(digit)\n        if lastDigitName != \"\" {\n  \
    \          result[index] = lastDigitName\n        }\n        last = digit\n  \
    \      index++\n    }\n    if lastDigitName != \"\" {\n        result[index] =\
    \ lastDigitName\n    }\n    return result", "    guard arr.count > 0 else {\n\
    \        return []\n    }\n    var result = [String]()\n    var i = 0\n    var\
    \ j = 0\n    while i < arr.count {\n        if arr[i] < 1 || arr[i] > 9 {\n  \
    \          i += 1\n            continue\n        }\n        result[j] = names[arr[i]\
    \ - 1]\n        i += 1\n        j += 1\n    }\n    result.reverse()\n    return\
    \ result", "    if arr.isEmpty() {\n        return []\n    }\n    var result =\
    \ [String]()\n    var i = 0\n    var j = 0\n    for k in arr {\n        if i <\
    \ 9 {\n            result.append(String(k))\n            i += 1\n        } else\
    \ {\n            if j == 0 {\n                result.append(String(k))\n     \
    \       } else {\n                result.append(String(k) + \" \" + result[j])\n\
    \            }\n            j += 1\n        }\n    }\n    return result", "  \
    \  guard !arr.isEmpty else { return [] }\n    var result: [String] = []\n    var\
    \ last = 0\n    for num in arr {\n        if num > 9 {\n            last = num\n\
    \        } else {\n            result.append(String(last))\n            result.append(String(num))\n\
    \            last = 0\n        }\n    }\n    result.append(String(last))\n   \
    \ return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var i = 0\n    for num in arr {\n        if num < 1 || num\
    \ > 9 {\n            continue\n        }\n        let name = ones[num]\n     \
    \   result.append(name)\n        i += 1\n    }\n    for _ in 0..<i {\n       \
    \ result.append(\"\")\n    }\n    return result.reverse()", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var current =\
    \ 0\n    var last = 0\n    for current < arr.count {\n        if arr[current]\
    \ > 9 {\n            last = current\n        }\n        current = current + 1\n\
    \    }\n    for current < arr.count {\n        if arr[current] > 9 {\n       \
    \     arr[last] = arr[current]\n            arr[current] = 0\n            last\
    \ = current\n        }\n        current = current + 1\n    }\n    for current\
    \ < arr.count {\n        if arr[current] == 0 {\n            arr[last] = arr[current]\n\
    \            arr[current] = 0\n            last = current\n        }\n       \
    \ current = current + 1\n    }\n    for current < arr.count {\n        if arr[current]\
    \ == 0 {\n            arr[last] = arr[current]\n            arr[current] = 0\n\
    \            last = current\n        }\n        current = current + 1\n    }\n\
    \    for current < arr.count {\n        if arr[current] == 0 {\n            arr[last]\
    \ = arr[current]\n            arr[current] = 0\n            last = current\n \
    \       }\n        current = current + 1\n    }\n    for current < arr.count {\n\
    \        if arr[current] == 0 {\n            arr[last] = arr[current]\n      \
    \      arr[current] = 0\n            last = current\n        }\n        current\
    \ = current + 1\n    }\n    for current < arr.count {\n        if arr[current]\
    \ == 0 {\n            arr[last] = arr[current]\n            arr[current] = 0\n\
    \            last = current\n        }\n        current = current + 1\n    }\n\
    \    for current < arr.count {\n        if arr[current] == 0 {\n            arr[last]\
    \ = arr[current]\n            arr[current] = 0\n            last = current\n \
    \       }\n        current = current + 1\n    }\n    for current < arr.count {\n\
    \        if arr[current] == 0 {\n            arr[last] = arr[current]\n      \
    \      arr[current] = 0\n            last = current\n        }\n        current\
    \ = current + 1\n    }\n    for current < arr.count {\n        if arr[current]\
    \ == 0 {\n            arr[last] = arr[current]\n            arr[current] = 0\n\
    \            last = current\n        }\n        current = current + 1\n    }\n\
    \    for current < arr.count {\n        if arr[current] == 0 {\n            arr[last]\
    \ = arr[current]\n            arr[current] = 0\n            last = current\n \
    \       }\n        current = current + 1\n    }\n    for current < arr.count {\n\
    \        if arr[current] == 0 {\n            arr[last] = arr[current]\n      \
    \      arr[current] = 0\n            last = current\n        }\n        current\
    \ = current + 1\n    }\n    for current < arr.count {\n        if arr[current]\
    \ == 0 {\n            arr[last] = arr[current]\n            arr[current] = 0\n\
    \            last = current\n        }", "    if arr.isEmpty {\n        return\
    \ []\n    }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n\
    \        if num < 1 || num > 9 {\n            continue\n        }\n        result.append(name[num])\n\
    \    }\n    return result.reverse()", "    if arr.isEmpty() {\n        return\
    \ []\n    }\n    var result = [String]()\n    var index = 0\n    for number in\
    \ arr {\n        if number >= 1 && number <= 9 {\n            result[index] =\
    \ String(number)\n            index++\n        }\n    }\n    for number in arr\
    \ {\n        if number > 9 {\n            result[index] = String(number % 10)\n\
    \            index++\n        }\n    }\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{\
    \ $0 >= 10 }\n    let tensReversed = tens.reverse()\n    let tensReversedString\
    \ = tensReversed.map{ String($0) }\n    let onesReversed = ones.reverse()\n  \
    \  let onesReversedString = onesReversed.map{ String($0) }\n    let onesReversedString2\
    \ = onesReversedString.map{ $0 + \"One\" }\n    let tensReversedString2 = tensReversedString.map{\
    \ $0 + \"Ten\" }\n    let onesReversedString3 = onesReversedString2.map{ $0 +\
    \ \"Two\" }\n    let tensReversedString3 = tensReversedString2.map{ $0 + \"Eleven\"\
    \ }\n    let onesReversedString4 = onesReversedString3.map{ $0 + \"Thirteen\"\
    \ }\n    let tensReversedString4 = tensReversedString3.map{ $0 + \"Fourteen\"\
    \ }\n    let onesReversedString5 = onesReversedString4.map{ $0 + \"Fifteen\" }\n\
    \    let tensReversedString5 = tensReversedString4.map{ $0 + \"Seventeen\" }\n\
    \    let onesReversedString6 = onesReversedString5.map{ $0 + \"Eighteen\" }\n\
    \    let tensReversedString6 = tensReversedString5.map{ $0 + \"Nineteen\" }\n\
    \    let onesReversedString7 = onesReversedString6.map{ $0 + \"Twenty\" }\n  \
    \  let tensReversedString7 = tensReversedString6.map{ $0 + \"TwentyOne\" }\n \
    \   let onesReversedString8 = onesReversedString7.map{ $0 + \"Thirty\" }\n   \
    \ let tensReversedString8 = tensReversedString7.map{ $0 + \"ThirtyOne\" }\n  \
    \  let onesReversedString9 = onesReversedString8.map{ $0 + \"Forty\" }\n    let\
    \ tensReversedString9 = tensReversedString8.map{ $0 + \"FortyOne\" }\n    let\
    \ onesReversedString10 = onesReversedString9.map{ $0 + \"Fifty\" }\n    let tensReversedString10\
    \ = tensReversedString9.map{ $0 + \"FiftyOne\" }\n    let onesReversedString11\
    \ = onesReversedString10.map{ $0 + \"Sixty", "    guard !arr.isEmpty else { return\
    \ [] }\n    \n    var result = [String]()\n    \n    for number in arr {\n   \
    \     let digit = number % 10\n        \n        switch digit {\n        case\
    \ 1:\n            result.append(contentsOf: ones)\n        case 2:\n         \
    \   result.append(contentsOf: twos)\n        case 3:\n            result.append(contentsOf:\
    \ threes)\n        case 4:\n            result.append(contentsOf: fours)\n   \
    \     case 5:\n            result.append(contentsOf: fives)\n        case 6:\n\
    \            result.append(contentsOf: sixes)\n        case 7:\n            result.append(contentsOf:\
    \ sevens)\n        case 8:\n            result.append(contentsOf: eights)\n  \
    \      case 9:\n            result.append(contentsOf: nines)\n        default:\n\
    \            break\n        }\n    }\n    \n    return result.reversed()", " \
    \   guard arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max\
    \ = max(arr)\n    var result = [String]()\n    for i in 0..<arr.count {\n    \
    \    if arr[i] == min {\n            result.append(String(format: \"One\", arguments:\
    \ [arr[i]]))\n        } else if arr[i] == max {\n            result.append(String(format:\
    \ \"Nine\", arguments: [arr[i]]))\n        } else {\n            result.append(String(format:\
    \ \"%2d\", arguments: [arr[i]]))\n        }\n    }\n    return result", "    guard\
    \ !arr.isEmpty else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var result = [String]()\n    for i in arr {\n        if i <= min || i > max\
    \ {\n            continue\n        }\n        let index = i - min\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    for n in arr {\n        if n\
    \ >= 1 && n <= 9 {\n            result.append(name[n - 1])\n        } else {\n\
    \            result.append(\"\")\n        }\n        i += 1\n    }\n    return\
    \ result.reverse()", "    guard !arr.isEmpty else { return [] }\n    var result\
    \ = [String]()\n    var last = 0\n    for n in arr {\n        if n < 1 {\n   \
    \         continue\n        }\n        if n > 9 {\n            n = 9\n       \
    \ }\n        if n > last {\n            result.append(String(n - last))\n    \
    \    }\n        result.append(name_to_digit(n))\n        last = n\n    }\n   \
    \ return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var i = 0\n    for num in arr {\n        if num > 9 {\n  \
    \          i += 10\n        }\n        result.append(name[num])\n    }\n    result.reverse()\n\
    \    for num in result {\n        if num == \"One\" {\n            result.removeFirst()\n\
    \        }\n    }\n    return result", "    guard arr.count > 0 else { return\
    \ [] }\n    var result = [String]()\n    var last = 0\n    for n in arr {\n  \
    \      if n > 9 {\n            last = n - 9\n        } else {\n            last\
    \ = n - 1\n        }\n        result.append(names[last])\n    }\n    return result.reverse()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = min(arr)\n    let max = max(arr)\n    for i in arr {\n        if\
    \ i >= min && i <= max {\n            result.append(names[i])\n        }\n   \
    \ }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n   \
    \ var result = [String]()\n    var i = 0\n    for num in arr {\n        if num\
    \ < 1 || num > 9 {\n            continue\n        }\n        result.append(name[num])\n\
    \    }\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        result.append(name[num])\n    }\n    return result", "   \
    \ if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n  \
    \  var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n        \
    \    continue\n        }\n        let index = num - 10\n        result.append(names[index])\n\
    \    }\n    return result.reverse()", "    if arr.isEmpty {\n        return []\n\
    \    }\n    var result = [String]()\n    var last = 0\n    for num in arr {\n\
    \        if num > 9 {\n            last = num\n        } else {\n            if\
    \ last == 0 {\n                result.append(String(num))\n            } else\
    \ {\n                result.append(String(last))\n                result.append(String(num))\n\
    \            }\n            last = 0\n        }\n    }\n    if last != 0 {\n \
    \       result.append(String(last))\n    }\n    return result", "    var result\
    \ = [String]()\n    for number in arr {\n        if number >= 1 && number <= 9\
    \ {\n            result.append(String(number))\n        } else {\n           \
    \ break\n        }\n    }\n    if result.isEmpty {\n        return nil\n    }\n\
    \    var reversed = result.reverse()\n    for number in reversed {\n        if\
    \ number == \"1\" {\n            result.removeFirst()\n        }\n        if number\
    \ == \"2\" {\n            result.removeFirst()\n        }\n        if number ==\
    \ \"3\" {\n            result.removeFirst()\n        }\n        if number == \"\
    4\" {\n            result.removeFirst()\n        }\n        if number == \"5\"\
    \ {\n            result.removeFirst()\n        }\n        if number == \"6\" {\n\
    \            result.removeFirst()\n        }\n        if number == \"7\" {\n \
    \           result.removeFirst()\n        }\n        if number == \"8\" {\n  \
    \          result.removeFirst()\n        }\n        if number == \"9\" {\n   \
    \         result.removeFirst()\n        }\n    }\n    return result", "    guard\
    \ !arr.isEmpty else { return [] }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var result = [String]()\n    for i in arr {\n        if i >= min && i <=\
    \ max {\n            result.append(names[i])\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    let ones = arr.filter { $0\
    \ < 10 }\n    let tens = arr.filter { $0 >= 10 }\n    let tensReversed = reverse(tens)\n\
    \    let tensReversedString = reverse(tensReversed)\n    let tensReversedStringString\
    \ = reverse(tensReversedString)\n    let onesString = reverse(ones)\n    let onesStringString\
    \ = reverse(onesString)\n    let tensStringString = reverse(tensString).map {\
    \ $0.description }\n    let tensReversedStringStringString = reverse(tensReversedStringString).map\
    \ { $0.description }\n    let onesStringStringString = reverse(onesStringString).map\
    \ { $0.description }\n    let onesReversedStringStringString = reverse(onesReversedStringString).map\
    \ { $0.description }\n    let tensReversedStringStringStringString = reverse(tensReversedStringStringString).map\
    \ { $0.description }\n    let onesStringStringStringString = reverse(onesStringStringString).map\
    \ { $0.description }\n    let onesReversedStringStringStringString = reverse(onesReversedStringStringString).map\
    \ { $0.description }\n    let tensReversedStringStringStringStringString = reverse(tensReversedStringStringStringString).map\
    \ { $0.description }\n    let onesStringStringStringStringString = reverse(onesStringStringStringString).map\
    \ { $0.description }\n    let onesReversedStringStringStringStringString = reverse(onesReversedStringStringStringString).map\
    \ { $0.description }\n    let tensReversedStringStringStringStringStringString\
    \ = reverse(tensReversedStringStringStringStringString).map { $0.description }\n\
    \    let onesStringStringStringStringStringStringString = reverse(onesStringStringStringStringStringString).map\
    \ { $0.description }\n    let onesReversedStringStringStringStringStringStringString\
    \ = reverse(onesReversedStringStringStringStringStringString).map { $0.description\
    \ }\n    let tensReversedStringStringStringStringStringStringStringString = reverse(tensReversedStringStringStringStringStringStringStringString).map\
    \ { $0.description }\n    let onesStringStringStringStringStringStringStringStringString\
    \ = reverse(onesStringStringStringStringStringStringStringStringString).map {\
    \ $0.description }\n    let onesReversedStringStringStringStringStringStringStringStringString\
    \ = reverse(onesReversedStringStringStringStringStringStringStringStringString).map\
    \ { $0.description }\n    let tensReversedStringString", "    guard !arr.isEmpty\
    \ else { return [] }\n    var result = [String]()\n    var last = 0\n    for num\
    \ in arr {\n        if num < 1 || num > 9 {\n            continue\n        }\n\
    \        let digit = num % 10\n        if digit == 0 {\n            continue\n\
    \        }\n        if last < digit {\n            last = digit\n            continue\n\
    \        }\n        result.append(String(last))\n        result.append(String(digit))\n\
    \        last = 0\n    }\n    result.append(String(last))\n    return result",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        result.append(String(num))\n        i += 1\n\
    \        if i == 3 {\n            i = 0\n        }\n    }\n    return result.reversed()",
  "    guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    var j = 0\n    for _ in arr {\n        if i == 0 {\n            result.append(\"\
    \")\n        }\n        result[j] += \"One\"\n        if i == 1 {\n          \
    \  result[j] += \"Two\"\n        }\n        if i == 2 {\n            result[j]\
    \ += \"Three\"\n        }\n        if i == 3 {\n            result[j] += \"Four\"\
    \n        }\n        if i == 4 {\n            result[j] += \"Five\"\n        }\n\
    \        if i == 5 {\n            result[j] += \"Six\"\n        }\n        if\
    \ i == 6 {\n            result[j] += \"Seven\"\n        }\n        if i == 7 {\n\
    \            result[j] += \"Eight\"\n        }\n        if i == 8 {\n        \
    \    result[j] += \"Nine\"\n        }\n        if i == 9 {\n            result[j]\
    \ += \"Ten\"\n        }\n        i += 1\n    }\n    for _ in result {\n      \
    \  result.reverse()\n    }\n    return result", "    if arr.isEmpty() {\n    \
    \    return []\n    }\n    var result = [String]()\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            last = num\n        } else {\n\
    \            if last > 0 {\n                result.append(\"\\(last)\")\n    \
    \        }\n            result.append(\"\\(num)\")\n            last = num\n \
    \       }\n    }\n    if last > 0 {\n        result.append(\"\\(last)\")\n   \
    \ }\n    return result", "    var result = [String]()\n    for num in arr {\n\
    \        switch num {\n        case 1:\n            result.append(\"One\")\n \
    \       case 2:\n            result.append(\"Two\")\n        case 3:\n       \
    \     result.append(\"Three\")\n        case 4:\n            result.append(\"\
    Four\")\n        case 5:\n            result.append(\"Five\")\n        case 6:\n\
    \            result.append(\"Six\")\n        case 7:\n            result.append(\"\
    Seven\")\n        case 8:\n            result.append(\"Eight\")\n        case\
    \ 9:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n    }\n    return result.reverse()", "    if arr.isEmpty {\n     \
    \   return arr\n    }\n    var result = [String]()\n    var last = 0\n    for\
    \ num in arr {\n        if num > 9 {\n            last = num\n        } else {\n\
    \            if last != 0 {\n                result.append(\"\\(last)\")\n   \
    \         }\n            result.append(\"\\(num)\")\n            last = 0\n  \
    \      }\n    }\n    if last != 0 {\n        result.append(\"\\(last)\")\n   \
    \ }\n    return result", "    if arr.isEmpty {\n        return arr\n    }\n  \
    \  let ones = arr.filter{ $0 < 10 }\n    let tens = arr.filter{ $0 >= 10 }\n \
    \   let tensReversed = tens.reverse()\n    let onesReversed = ones.reverse()\n\
    \    let onesReversedString = onesReversed.map { String($0) }\n    let tensReversedString\
    \ = tensReversed.map { String($0) }\n    let result = onesReversedString.append(tensReversedString)\n\
    \    return result", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result: [String] = []\n    var last: Int = 0\n    for num in arr {\n       \
    \ if num > 9 {\n            last = num\n        } else {\n            if last\
    \ != 0 {\n                result.append(\"\\(last)\")\n            }\n       \
    \     result.append(\"\\(num)\")\n            last = num\n        }\n    }\n \
    \   if last != 0 {\n        result.append(\"\\(last)\")\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var last = 0\n    for num in arr {\n        if num > 9 {\n            last\
    \ = num\n        } else {\n            if last > 0 {\n                result.append(\"\
    \\(last)\")\n            }\n            result.append(\"\\(num)\")\n         \
    \   last = num\n        }\n    }\n    if last > 0 {\n        result.append(\"\\\
    (last)\")\n    }\n    return result", "    if arr.isEmpty() {\n        return\
    \ []\n    }\n    var result = [String]()\n    var i = 0\n    for number in arr\
    \ {\n        if number >= 1 && number <= 9 {\n            result.append(String(number))\n\
    \        } else {\n            result.append(String(number))\n        }\n    }\n\
    \    for number in arr {\n        if number >= 1 && number <= 9 {\n          \
    \  result[i] = \"One\"\n            i += 1\n        }\n        if number >= 10\
    \ && number <= 19 {\n            result[i] = \"Two\"\n            i += 1\n   \
    \     }\n        if number >= 20 && number <= 29 {\n            result[i] = \"\
    Three\"\n            i += 1\n        }\n        if number >= 30 && number <= 39\
    \ {\n            result[i] = \"Four\"\n            i += 1\n        }\n       \
    \ if number >= 40 && number <= 49 {\n            result[i] = \"Five\"\n      \
    \      i += 1\n        }\n        if number >= 50 && number <= 59 {\n        \
    \    result[i] = \"Six\"\n            i += 1\n        }\n        if number >=\
    \ 60 && number <= 69 {\n            result[i] = \"Seven\"\n            i += 1\n\
    \        }\n        if number >= 70 && number <= 79 {\n            result[i] =\
    \ \"Eight\"\n            i += 1\n        }\n        if number >= 80 && number\
    \ <= 89 {\n            result[i] = \"Nine\"\n            i += 1\n        }\n \
    \   }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n \
    \   let min = min(arr)\n    let max = max(arr)\n    var result = [String]()\n\
    \    for num in arr {\n        if num == min {\n            result.append(\"One\"\
    )\n        } else if num == max {\n            result.append(\"Nine\")\n     \
    \   } else {\n            result.append(\"One\")\n            result.append(\"\
    Two\")\n            result.append(\"Three\")\n            result.append(\"Four\"\
    )\n            result.append(\"Five\")\n            result.append(\"Six\")\n \
    \           result.append(\"Seven\")\n            result.append(\"Eight\")\n \
    \           result.append(\"Nine\")\n        }\n    }\n    return result.reverse()",
  "    guard arr.count > 0 else { return [] }\n    var result: [String] = []\n   \
    \ for i in arr {\n        if i >= 1 && i <= 9 {\n            result.append(names[i])\n\
    \        } else {\n            result.append(\"\")\n        }\n    }\n    result.reverse()\n\
    \    for i in result {\n        if i != \"\" {\n            arr.removeFirst()\n\
    \        }\n    }\n    return result", "    guard !arr.isEmpty else { return []\
    \ }\n    \n    var result = [String]()\n    var last = 0\n    \n    for n in arr\
    \ {\n        if n > 9 {\n            last = n - 9\n        } else {\n        \
    \    last = n - 1\n        }\n        \n        if last < 0 {\n            last\
    \ = last + 10\n        }\n        \n        result.append(names[last])\n    }\n\
    \    \n    return result", "    if arr.isEmpty {\n        return []\n    }\n \
    \   let len = arr.count\n    let arr = arr.sorted()\n    let arr = arr.reversed()\n\
    \    let arr = arr.map { $0.description.characters.first!.capitalized() }\n  \
    \  return arr", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var last = 0\n    for num in arr {\n        if num < 1 ||\
    \ num > 9 {\n            continue\n        }\n        switch num - last {\n  \
    \      case 0:\n            result += \"One\"\n        case 1:\n            result\
    \ += \"Two\"\n        case 2:\n            result += \"Three\"\n        case 3:\n\
    \            result += \"Four\"\n        case 4:\n            result += \"Five\"\
    \n        case 5:\n            result += \"Six\"\n        case 6:\n          \
    \  result += \"Seven\"\n        case 7:\n            result += \"Eight\"\n   \
    \     case 8:\n            result += \"Nine\"\n        default:\n            break\n\
    \        }\n        last = num\n    }\n    return result", "    guard arr.count\
    \ > 0 else { return [] }\n    var result = [String]()\n    var i = 0\n    while\
    \ i < arr.count {\n        let value = arr[i]\n        if value < 1 || value >\
    \ 9 {\n            i += 1\n            continue\n        }\n        let index\
    \ = value - 10\n        result.append(names[index])\n        i += 1\n    }\n \
    \   return result", "    guard arr.count > 0 else { return [] }\n    let min =\
    \ 1\n    let max = 9\n    var result = [String]()\n    for n in arr {\n      \
    \  if n < min || n > max {\n            continue\n        }\n        let index\
    \ = n - min\n        result.append(names[index])\n    }\n    return result", " \
    \   if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num > 9 {\n            i += 10\n\
    \        }\n        if num > 0 {\n            result.append(String(num))\n   \
    \     }\n    }\n    if i < 10 {\n        result.append(String(i))\n    }\n   \
    \ return result.reverse()", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var digits = arr.sorted()\n    var lastDigit\
    \ = digits[0]\n    var lastDigitName = One[lastDigit]\n    for digit in digits\
    \ {\n        if digit > 9 {\n            lastDigit = digit\n            lastDigitName\
    \ = One[lastDigit]\n        }\n        result.append(lastDigitName)\n    }\n \
    \   return result", "    guard !arr.isEmpty else { return [] }\n    let min =\
    \ 1\n    let max = 9\n    var result = [String]()\n    var i = 0\n    while i\
    \ < arr.count {\n        let value = arr[i]\n        if value < min || value >\
    \ max {\n            i += 1\n            continue\n        }\n        result.append(name(value))\n\
    \        i += 1\n    }\n    return result", "    guard arr.count > 0 else {\n\
    \        return []\n    }\n    let min = min(arr)\n    let max = max(arr)\n  \
    \  var result = [String]()\n    for n in arr {\n        if n >= min && n <= max\
    \ {\n            result.append(name(n))\n        }\n    }\n    return result.reversed()",
  "    guard arr.count > 0 else { return [] }\n    let min = 1\n    let max = 9\n\
    \    var result = [String]()\n    for n in arr {\n        if min <= n && n <=\
    \ max {\n            result.append(nameForNumber(n))\n        }\n    }\n    return\
    \ result.reversed()", "    if arr.isEmpty {\n        return []\n    }\n    var\
    \ result = [String]()\n    var i = 0\n    for num in arr {\n        if num < 1\
    \ || num > 9 {\n            continue\n        }\n        result.append(digits[num])\n\
    \        i += 1\n    }\n    for _ in 0..<i {\n        result.append(digits[9])\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var i = 0\n    while i < arr.count {\n        if arr[i] < min {\n       \
    \     i += 1\n            continue\n        }\n        if arr[i] > max {\n   \
    \         i += 1\n            continue\n        }\n        result.append(name[arr[i]\
    \ - 1])\n        i += 1\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    var i = 0\n    var j\
    \ = 0\n    for _ in arr {\n        if i == 0 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] < 1 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        if arr[j] > 9 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] == 1 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        if arr[j] == 2 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] == 3 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        if arr[j] == 4 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] == 5 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        if arr[j] == 6 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] == 7 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        if arr[j] == 8 {\n            result.append(String(arr[j]))\n\
    \            j += 1\n            continue\n        }\n        if arr[j] == 9 {\n\
    \            result.append(String(arr[j]))\n            j += 1\n            continue\n\
    \        }\n        result.append(String(arr[j]))\n        j += 1\n    }\n   \
    \ return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var i = 0\n    for n in arr {\n        if n < 1 || n > 9 {\n\
    \            continue\n        }\n        i += 1\n        if i == 1 {\n      \
    \      result.append(String(format: \"One\", arguments: [String(n)]))\n      \
    \  } else if i == 2 {\n            result.append(String(format: \"Two\", arguments:\
    \ [String(n)]))\n        } else if i == 3 {\n            result.append(String(format:\
    \ \"Three\", arguments: [String(n)]))\n        } else if i == 4 {\n          \
    \  result.append(String(format: \"Four\", arguments: [String(n)]))\n        }\
    \ else if i == 5 {\n            result.append(String(format: \"Five\", arguments:\
    \ [String(n)]))\n        } else if i == 6 {\n            result.append(String(format:\
    \ \"Six\", arguments: [String(n)]))\n        } else if i == 7 {\n            result.append(String(format:\
    \ \"Seven\", arguments: [String(n)]))\n        } else if i == 8 {\n          \
    \  result.append(String(format: \"Eight\", arguments: [String(n)]))\n        }\
    \ else if i == 9 {\n            result.append(String(format: \"Nine\", arguments:\
    \ [String(n)]))\n        }\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n    var result: [String] = []\n    var last = 0\n \
    \   for num in arr {\n        if num > 9 {\n            last = num\n        }\
    \ else {\n            if last > 0 {\n                result.append(\"\\(last)\"\
    )\n            }\n            result.append(\"\\(num)\")\n            last = num\n\
    \        }\n    }\n    if last > 0 {\n        result.append(\"\\(last)\")\n  \
    \  }\n    return result", "    if arr.isEmpty() {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    for n in arr {\n        if n\
    \ < 1 || n > 9 {\n            continue\n        }\n        if i == 0 {\n     \
    \       result.append(String(n - 1))\n        } else {\n            result.append(String(n\
    \ - 1))\n            result.append(String(arr[i] - 1))\n        }\n        i +=\
    \ 1\n    }\n    return result", "    if arr.isEmpty {\n        return []\n   \
    \ }\n    var result = [String]()\n    var i = 0\n    for n in arr {\n        if\
    \ n < 1 || n > 9 {\n            continue\n        }\n        result[i++] = \"\\\
    (Int(n))\"\n    }\n    result.reverse()\n    for n in result {\n        if let\
    \ n = Int(n) {\n            let name = ones[Int(n)]\n            if name != nil\
    \ {\n                result[result.index(of: n)!] = name\n            }\n    \
    \    }\n    }\n    return result", "    guard arr.count > 0 else { return [] }\n\
    \    var result = [String]()\n    var i = 0\n    var j = 0\n    var k = arr.count\n\
    \    while i < k {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n\
    \            continue\n        }\n        result[j] = name[arr[i] - 1]\n     \
    \   i += 1\n        j += 1\n    }\n    result.reverse()\n    return result", " \
    \   guard arr.count > 0 else { return [] }\n    var result: [String] = []\n  \
    \  var last: Int = 0\n    for num in arr {\n        if num > 9 {\n           \
    \ last = num\n        } else {\n            result.append(String(last))\n    \
    \        result.append(String(num))\n            last = num\n        }\n    }\n\
    \    result.append(String(last))\n    return result", "    guard arr.count > 0\
    \ else { return [] }\n    let min = 1\n    let max = 9\n    var result = [String]()\n\
    \    for n in arr {\n        let index = min + n - 1\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var i = 0\n    var j = 0\n    var k = arr.count\n\
    \    while i < k {\n        if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n\
    \            continue\n        }\n        result[j] = name[arr[i] - 1]\n     \
    \   i += 1\n        j += 1\n    }\n    result.reverse()\n    return result", " \
    \   guard arr.count > 0 else {\n        return []\n    }\n    \n    var result\
    \ = [String]()\n    \n    var min = 1\n    var max = 9\n    \n    for num in arr\
    \ {\n        if num < min {\n            min = num\n        } else if num > max\
    \ {\n            max = num\n        }\n    }\n    \n    for num in arr {\n   \
    \     if num < min {\n            num = min - num\n        } else if num > max\
    \ {\n            num = max - num\n        }\n        \n        result.append(String(num))\n\
    \    }\n    \n    return result", "    if arr.isEmpty {\n        return []\n \
    \   }\n    var result = [String]()\n    var i = 0\n    for num in arr {\n    \
    \    if num < 1 || num > 9 {\n            continue\n        }\n        if i ==\
    \ 0 {\n            result.append(String(num))\n        } else {\n            result.append(String(num))\n\
    \            result.append(\" as \\(name[num - 1])\")\n        }\n        i +=\
    \ 1\n    }\n    return result", "    if arr.isEmpty {\n        return []\n   \
    \ }\n    var result = [String]()\n    var index = 0\n    var last = 0\n    var\
    \ current = arr[0]\n    for number in arr {\n        if number == current {\n\
    \            index += 1\n        } else {\n            if index > 0 {\n      \
    \          result.append(\"\\(last)\")\n            }\n            current = number\n\
    \            index = 1\n        }\n        last = number\n    }\n    if index\
    \ > 0 {\n        result.append(\"\\(last)\")\n    }\n    return result", "   \
    \ if arr.isEmpty {\n        return []\n    }\n\n    let min = 1\n    let max =\
    \ 9\n    let digits = arr.map { $0 }\n    let reversed = digits.reverse()\n\n\
    \    let one = \"One\"\n    let two = \"Two\"\n    let three = \"Three\"\n   \
    \ let four = \"Four\"\n    let five = \"Five\"\n    let six = \"Six\"\n    let\
    \ seven = \"Seven\"\n    let eight = \"Eight\"\n    let nine = \"Nine\"\n\n  \
    \  var result = [String]()\n    for digit in reversed {\n        if digit < min\
    \ {\n            continue\n        }\n        if digit > max {\n            continue\n\
    \        }\n        result.append(one)\n        result.append(two)\n        result.append(three)\n\
    \        result.append(four)\n        result.append(five)\n        result.append(six)\n\
    \        result.append(seven)\n        result.append(eight)\n        result.append(nine)\n\
    \        result.append(digit)\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let one = arr[0]\n  \
    \  let two = arr[1]\n    let three = arr[2]\n    let four = arr[3]\n    let five\
    \ = arr[4]\n    let six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n\
    \    let nine = arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let\
    \ twelve = arr[11]\n    let thirteen = arr[12]\n    let fourteen = arr[13]\n \
    \   let fifteen = arr[14]\n    let sixteen = arr[15]\n    let seventeen = arr[16]\n\
    \    let eighteen = arr[17]\n    let nineteen = arr[18]\n    let twenty = arr[19]\n\
    \    let thirty = arr[20]\n    let forty = arr[21]\n    let fifty = arr[22]\n\
    \    let sixty = arr[23]\n    let seventy = arr[24]\n    let eighty = arr[25]\n\
    \    let ninety = arr[26]\n    let hundred = arr[27]\n    let thousand = arr[28]\n\
    \    let million = arr[29]\n    let billion = arr[30]\n    let trillion = arr[31]\n\
    \    let quadrillion = arr[32]\n    let quintillion = arr[33]\n    let sextillion\
    \ = arr[34]\n    let septillion = arr[35]\n    let octillion = arr[36]\n    let\
    \ nonillion = arr[37]\n    let decillion = arr[38]\n    let undecillion = arr[39]\n\
    \    let duodecillion = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion\
    \ = arr[42]\n    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n\
    \    let septendecillion = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion\
    \ = arr[47]\n    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n\
    \    let duovigintillion = arr[50]\n    let trevigintillion = arr[51]\n    let\
    \ quattuorvigintillion = arr[52]\n    let quinvigintillion = arr[53]\n    let\
    \ sexvigintillion = arr[54]\n    let septenvigintillion = arr[55]\n    let octovigin",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var i = 0\n    for number in arr {\n        if number > 9 {\n            number\
    \ = number - 10\n        }\n        result.append(name[number])\n    }\n    return\
    \ result.reverse()", "    var result = [String]()\n    var i = 0\n    for num\
    \ in arr {\n        if num > 9 {\n            i += 10\n        }\n        result.append(name[num])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var last = 0\n    for num in arr {\n       \
    \ if num < 1 || num > 9 {\n            continue\n        }\n        let index\
    \ = num - last\n        result[index] = names[index][index]\n        last = num\n\
    \    }\n    return result", "    guard arr.count > 0 else { return [] }\n    var\
    \ result = [String]()\n    var i = 0\n    while i < arr.count {\n        let value\
    \ = arr[i]\n        if value < 1 || value > 9 {\n            i += 1\n        \
    \    continue\n        }\n        let index = value - 10\n        result.append(names[index])\n\
    \        i += 1\n    }\n    return result", "    guard arr.count > 0 else {\n\
    \        return []\n    }\n    let ones = arr.filter {\n        guard $0 >= 1\
    \ && $0 <= 9 else {\n            return false\n        }\n        return true\n\
    \    }\n    let tens = arr.filter {\n        guard $0 >= 10 && $0 <= 19 else {\n\
    \            return false\n        }\n        return true\n    }\n    let hundreds\
    \ = arr.filter {\n        guard $0 >= 100 && $0 <= 999 else {\n            return\
    \ false\n        }\n        return true\n    }\n    let thousands = arr.filter\
    \ {\n        guard $0 >= 1000 && $0 <= 9999 else {\n            return false\n\
    \        }\n        return true\n    }\n    let ten_thousands = arr.filter {\n\
    \        guard $0 >= 10000 && $0 <= 99999 else {\n            return false\n \
    \       }\n        return true\n    }\n    let hundred_thousands = arr.filter\
    \ {\n        guard $0 >= 100000 && $0 <= 999999 else {\n            return false\n\
    \        }\n        return true\n    }\n    let millions = arr.filter {\n    \
    \    guard $0 >= 1000000 && $0 <= 9999999 else {\n            return false\n \
    \       }\n        return true\n    }\n    let billions = arr.filter {\n     \
    \   guard $0 >= 100000000 && $0 <= 999999999 else {\n            return false\n\
    \        }\n        return true\n    }\n    let trillions = arr.filter {\n   \
    \     guard $0 >= 1000000000000 && $0 <= 999999999999 else {\n            return\
    \ false\n        }\n        return true\n    }\n    let quadrillions = arr.filter\
    \ {\n        guard $0 >= 1000000000000000 && $0 <= 999999999999999 else {\n  \
    \          return false\n        }\n        return true\n    }\n    let quintillions\
    \ = arr.filter {\n        guard $0 >= 1000000000000000000 && $0 <= 999999999999999999\
    \ else {\n            return false\n        }\n        return true\n    }\n  \
    \  let thousand_ones = arr.filter {\n        guard $0 >= 1000 && $0 <= 999 else\
    \ {\n            return false\n        }\n        return true\n    }\n    let\
    \ thousand_tens = arr.filter {\n        guard $0 >= 10000 && $0 <= 9999 else {\n\
    \            return false\n        }\n        return true\n    }\n    let thousand_hundreds\
    \ = arr.filter {\n        guard $0 >= 100000 && $0 <= 999999 else {\n        \
    \    return false\n        }\n        return true\n    }\n    let thousand_thousands\
    \ = arr.filter {\n        guard $0 >= 1000000 && $0 <= 9999999 else {\n", "  \
    \  guard arr.count > 0 else {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num > 0 && num < 10 {\n     \
    \       result.append(String(num))\n        } else {\n            result.append(String(num))\n\
    \        }\n    }\n    for num in arr {\n        if num > 0 && num < 10 {\n  \
    \          result[i] = \"One\"\n        } else if num > 0 && num < 20 {\n    \
    \        result[i] = \"Two\"\n        } else if num > 0 && num < 30 {\n      \
    \      result[i] = \"Three\"\n        } else if num > 0 && num < 40 {\n      \
    \      result[i] = \"Four\"\n        } else if num > 0 && num < 50 {\n       \
    \     result[i] = \"Five\"\n        } else if num > 0 && num < 60 {\n        \
    \    result[i] = \"Six\"\n        } else if num > 0 && num < 70 {\n          \
    \  result[i] = \"Seven\"\n        } else if num > 0 && num < 80 {\n          \
    \  result[i] = \"Eight\"\n        } else if num > 0 && num < 90 {\n          \
    \  result[i] = \"Nine\"\n        } else {\n            result[i] = \"Zero\"\n\
    \        }\n        i += 1\n    }\n    return result", "    if arr.isEmpty {\n\
    \        return []\n    }\n    var result = [String]()\n    var i = 0\n    for\
    \ num in arr {\n        if num < 1 || num > 9 {\n            continue\n      \
    \  }\n        if i == 0 {\n            result.append(String(num))\n        } else\
    \ {\n            result.append(String(num))\n            result.append(\" as \\\
    (name[num - 1])\")\n        }\n        i += 1\n    }\n    return result", "  \
    \  var result = [String]()\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            result.append(numberToName(number))\n        }\n\
    \    }\n    if result.isEmpty {\n        return nil\n    }\n    return result.reverse()",
  "    var result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n\
    \    let min = arr.min()\n    let max = arr.max()\n    if min == max {\n     \
    \   return result\n    }\n    let digits = String(max - min).characters\n    let\
    \ reversed = Array(digits[0..<digits.count])\n    reversed.reverse()\n    for\
    \ i in 0..<digits.count {\n        let index = digits.index(after: i)\n      \
    \  result.append(reversed[index])\n    }\n    return result", "    var result\
    \ = [String]()\n    if arr.isEmpty {\n        return result\n    }\n    let maxLen\
    \ = arr.max()!\n    let minLen = arr.min()!\n    if maxLen < minLen {\n      \
    \  return result\n    }\n    let maxDigit = maxLen - minLen\n    let maxDigitDigit\
    \ = maxDigit % 10\n    let maxDigitName = [\"Zero\", \"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][maxDigitDigit]\n\
    \    for num in arr {\n        let digit = num - minLen\n        let digitDigit\
    \ = digit % 10\n        let digitName = [\"Zero\", \"One\", \"Two\", \"Three\"\
    , \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"][digitDigit]\n \
    \       if digit < 0 {\n            digitName = \"\\(digitName) \\(maxDigitName)\"\
    \n        }\n        result.append(digitName)\n    }\n    return result", "  \
    \  if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n      \
    \      continue\n        }\n        let name = digits[num]\n        result.append(name)\n\
    \    }\n    return result.reverse()", "    if arr.isEmpty() {\n        return\
    \ []\n    }\n    let min = arr[0]\n    let max = arr[arr.count - 1]\n    var result\
    \ = [String]()\n    for number in arr {\n        if number >= min && number <=\
    \ max {\n            result.append(String(number))\n        }\n    }\n    result.reverse()\n\
    \    for number in result {\n        let index = result.index(of: number)\n  \
    \      result[index] = names[index]\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for num in arr {\n        if num < 1 || num > 9 {\n            continue\n \
    \       }\n        result.append(name[num])\n    }\n    for num in arr.reverse()\
    \ {\n        if num < 1 || num > 9 {\n            continue\n        }\n      \
    \  result.append(name[num])\n    }\n    return result", "    var result = [String]()\n\
    \    if arr.isEmpty {\n        return result\n    }\n    let maxLen = arr.maxElement()\n\
    \    if maxLen < 1 || maxLen > 9 {\n        return result\n    }\n    var reversed\
    \ = [Int]()\n    for num in arr {\n        reversed.append(num % 10)\n    }\n\
    \    reversed.reverse()\n    for num in reversed {\n        let index = num %\
    \ 10\n        let name = ones[Int(index)]\n        result.append(name)\n    }\n\
    \    return result", "    guard arr.count > 0 else { return [] }\n    let min\
    \ = min(arr)\n    let max = max(arr)\n    var result = [String]()\n    for n in\
    \ arr {\n        if n >= min && n <= max {\n            result.append(name(n))\n\
    \        }\n    }\n    return result.reversed()", "    if arr.isEmpty() {\n  \
    \      return []\n    }\n    var result = [String]()\n    var index = 0\n    for\
    \ number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        switch number {\n        case 1:\n            result[index]\
    \ = \"One\"\n        case 2:\n            result[index] = \"Two\"\n        case\
    \ 3:\n            result[index] = \"Three\"\n        case 4:\n            result[index]\
    \ = \"Four\"\n        case 5:\n            result[index] = \"Five\"\n        case\
    \ 6:\n            result[index] = \"Six\"\n        case 7:\n            result[index]\
    \ = \"Seven\"\n        case 8:\n            result[index] = \"Eight\"\n      \
    \  case 9:\n            result[index] = \"Nine\"\n        default:\n         \
    \   break\n        }\n        index++\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for n in arr {\n        if n > 9 {\n            i += 9 - n\n        } else\
    \ {\n            i += n\n        }\n        result.append(names[i])\n    }\n \
    \   return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var i = 0\n    for num in arr {\n        if num < 1 || num\
    \ > 9 {\n            continue\n        }\n        result.append(names[num])\n\
    \    }\n    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        result.append(names[num])\n    }\n    return result.reverse()",
  "    guard !arr.isEmpty else { return [] }\n    \n    var result = [String]()\n\
    \    var last = 0\n    \n    for num in arr {\n        if num < 1 || num > 9 {\n\
    \            continue\n        }\n        \n        if num == last {\n       \
    \     continue\n        }\n        \n        result.append(String(num))\n    \
    \    last = num\n    }\n    \n    return result.reversed()", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result: [String] = []\n    var index =\
    \ 0\n    for number in arr {\n        if number > 9 {\n            number = number\
    \ - 10\n        }\n        result[index] = names[number]\n        index++\n  \
    \  }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n  \
    \  var result = [String]()\n    var digits = arr.sorted()\n    var lastDigit =\
    \ digits[0]\n    var lastDigitName = ones[lastDigit]\n    for digit in digits\
    \ {\n        if digit == lastDigit {\n            result.append(lastDigitName)\n\
    \        } else {\n            lastDigit = digit\n            lastDigitName =\
    \ ones[lastDigit]\n        }\n    }\n    return result", "    var result = [String]()\n\
    \    for num in arr {\n        if num < 1 || num > 9 {\n            continue\n\
    \        }\n        let index = num - 1 // zero indexed\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\n\
    \    var result = [String]()\n    var digits = arr.sorted()\n    var i = 0\n \
    \   var j = 0\n    var digit = digits[0]\n    var digitNames = [\n        \"One\"\
    , \"Two\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    \n    ]\n\n    while i < arr.count {\n        if digit == 1 {\n            result.append(digitNames[j])\n\
    \            j++\n            digit = digits[j]\n        } else if digit == 9\
    \ {\n            result.append(digitNames[arr.count - j - 1])\n            j =\
    \ 0\n            digit = digits[j]\n        } else {\n            digit = digits[j]\n\
    \        }\n        i += 1\n    }\n\n    return result", "    guard !arr.isEmpty\
    \ else { return [] }\n    let arr = arr.sorted()\n    var result = [String]()\n\
    \    for n in arr {\n        let index = n % 10\n        result.append(names[index])\n\
    \    }\n    return result", "    guard arr.count > 0 else { return [] }\n    let\
    \ min = 1\n    let max = 9\n    var result = [String]()\n    var i = 0\n    for\
    \ n in arr {\n        if n > max {\n            i = i + 1\n            result.append(String(i))\n\
    \            continue\n        }\n        if n < min {\n            result.append(String(i))\n\
    \            continue\n        }\n        result.append(String(n - min))\n   \
    \ }\n    return result", "    guard !arr.isEmpty else { return [] }\n    var result\
    \ = [String]()\n    var last = 0\n    for n in arr {\n        if n > 9 {\n   \
    \         last = last * 10 + n\n        } else {\n            result.append(String(last))\n\
    \            last = n\n        }\n    }\n    result.append(String(last))\n   \
    \ return result", "    guard arr.count > 0 else { return [] }\n    \n    var result:\
    \ [String] = []\n    \n    for number in arr {\n        let index = Int(number)\
    \ - 1\n        \n        if index >= 0 && index < 10 {\n            result.append(String(index))\n\
    \        } else {\n            result.append(String(number))\n        }\n    }\n\
    \    \n    return result.reversed()", "    if arr.isEmpty() {\n        return\
    \ arr\n    }\n    var result = [String]()\n    var index = 0\n    for number in\
    \ arr {\n        if number >= 1 && number <= 9 {\n            result[index] =\
    \ String(number)\n            index++\n        }\n    }\n    if index == 0 {\n\
    \        return arr\n    }\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            result[index] = String(number)\n            index++\n\
    \        }\n    }\n    return result", "    if arr.isEmpty {\n        return []\n\
    \    }\n    let len = arr.count\n    let reversed = arr.reverse()\n    var result\
    \ = [String]()\n    for i in 0..<len {\n        let digit = reversed[i]\n    \
    \    if digit < 10 {\n            result.append(String(digit))\n        } else\
    \ {\n            let index = digit - 10\n            let name = digitNames[index]\n\
    \            result.append(name)\n        }\n    }\n    return result", "    var\
    \ result = [String]()\n    if arr.isEmpty {\n        return result\n    }\n  \
    \  let maxLength = arr.max() % 10 + 1\n    for number in arr {\n        if number\
    \ < 1 || number > 9 {\n            continue\n        }\n        let index = number\
    \ % 10\n        let digit = String(index)\n        if digit == \"0\" {\n     \
    \       digit = \"One\"\n        } else if digit == \"1\" {\n            digit\
    \ = \"Two\"\n        } else if digit == \"2\" {\n            digit = \"Three\"\
    \n        } else if digit == \"3\" {\n            digit = \"Four\"\n        }\
    \ else if digit == \"4\" {\n            digit = \"Five\"\n        } else if digit\
    \ == \"5\" {\n            digit = \"Six\"\n        } else if digit == \"6\" {\n\
    \            digit = \"Seven\"\n        } else if digit == \"7\" {\n         \
    \   digit = \"Eight\"\n        } else if digit == \"8\" {\n            digit =\
    \ \"Nine\"\n        }\n        result.append(digit)\n    }\n    if maxLength ==\
    \ 1 {\n        return result\n    }\n    return result.prefix(maxLength).reversed()",
  "    var result = [String]()\n    for num in arr {\n        switch num {\n     \
    \   case 1:\n            result.append(\"One\")\n        case 2:\n           \
    \ result.append(\"Two\")\n        case 3:\n            result.append(\"Three\"\
    )\n        case 4:\n            result.append(\"Four\")\n        case 5:\n   \
    \         result.append(\"Five\")\n        case 6:\n            result.append(\"\
    Six\")\n        case 7:\n            result.append(\"Seven\")\n        case 8:\n\
    \            result.append(\"Eight\")\n        case 9:\n            result.append(\"\
    Nine\")\n        default:\n            continue\n        }\n    }\n    return\
    \ result.reverse()", "    if arr.isEmpty() {\n        return arr\n    }\n    var\
    \ result = [String]()\n    var i = 0\n    for v in arr {\n        if v < 1 ||\
    \ v > 9 {\n            continue\n        }\n        if i == 0 {\n            result.append(String(v))\n\
    \        } else {\n            result.append(String(v - 1))\n        }\n     \
    \   i += 1\n    }\n    return result.reverse()", "    if arr.isEmpty() {\n   \
    \     return nil\n    }\n    var result = [String]()\n    var i = 0\n    for n\
    \ in arr {\n        if n < 1 || n > 9 {\n            continue\n        }\n   \
    \     i += 1\n        if i == 1 {\n            result.append(String(n))\n    \
    \    } else {\n            result.append(String(n))\n            result.append(String(n))\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    for num\
    \ in arr {\n        if num < 1 || num > 9 {\n            continue\n        }\n\
    \        let name = numToName(num)\n        result.append(name)\n    }\n    return\
    \ result", "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n\
    \    var index = 0\n    var current = 0\n    var last = 0\n    for current in\
    \ arr {\n        if current > 9 {\n            last = current\n        } else\
    \ {\n            if current > last {\n                result.append(\"One\")\n\
    \                last = current\n            } else {\n                result.append(\"\
    Two\")\n                last = current\n            }\n        }\n    }\n    if\
    \ last > 0 {\n        result.append(\"One\")\n    }\n    return result", "   \
    \ var result = [String]()\n    for number in arr {\n        if number >= 1 &&\
    \ number <= 9 {\n            result.append(String(number))\n        } else {\n\
    \            break\n        }\n    }\n    if result.isEmpty {\n        return\
    \ nil\n    }\n    result.reverse()\n    for number in result {\n        result[result.index(number)]\
    \ = names[number]\n    }\n    return result", "    var result = [String]()\n \
    \   if arr.isEmpty {\n        return result\n    }\n    let min = arr[0]\n   \
    \ let max = arr[arr.count - 1]\n    for number in arr {\n        if number < min\
    \ {\n            continue\n        }\n        if number > max {\n            break\n\
    \        }\n        let index = number - min\n        result.append(names[index])\n\
    \    }\n    return result", "    if arr.isEmpty {\n        return []\n    }\n\
    \    var result = [String]()\n    var last = 0\n    for num in arr {\n       \
    \ if num > 9 {\n            last = num\n        } else {\n            if last\
    \ > 0 {\n                result.append(\"\\(last)\")\n            }\n        \
    \    result.append(\"\\(num)\")\n            last = num\n        }\n    }\n  \
    \  if last > 0 {\n        result.append(\"\\(last)\")\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    while i < arr.count {\n        let n = arr[i]\n        if n >= 1\
    \ && n <= 9 {\n            result.append(String(n))\n        } else {\n      \
    \      result.append(String(n))\n        }\n        i += 1\n    }\n    result.reverse()\n\
    \    for n in result {\n        if let index = one_to_nine.index(of: n) {\n  \
    \          result[index] = one_to_nine[index]\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var last = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n    \
    \        continue\n        }\n        if num == last {\n            continue\n\
    \        }\n        result.append(String(num))\n        last = num\n    }\n  \
    \  return result.reverse().map { $0.capitalized }", "    if arr.isEmpty() {\n\
    \        return []\n    }\n    var result = [String]()\n    var last = 0\n   \
    \ for num in arr {\n        if num < 1 || num > 9 {\n            continue\n  \
    \      }\n        switch num - last {\n        case 0:\n            result.append(\"\
    One\")\n        case 1:\n            result.append(\"Two\")\n        case 2:\n\
    \            result.append(\"Three\")\n        case 3:\n            result.append(\"\
    Four\")\n        case 4:\n            result.append(\"Five\")\n        case 5:\n\
    \            result.append(\"Six\")\n        case 6:\n            result.append(\"\
    Seven\")\n        case 7:\n            result.append(\"Eight\")\n        case\
    \ 8:\n            result.append(\"Nine\")\n        default:\n            break\n\
    \        }\n        last = num\n    }\n    return result", "    guard arr.count\
    \ > 0 else {\n        return []\n    }\n    var result = [String]()\n    var i\
    \ = 0\n    for n in arr {\n        if n > 0 && n < 10 {\n            result.append(String(format:\
    \ \"%d\\\"\", n))\n        } else {\n            result.append(String(format:\
    \ \"%d\\\"\", n - 10))\n        }\n        i += 1\n    }\n    result.reverse()\n\
    \    for n in result {\n        result[i] = \"One\"\n        i += 1\n    }\n \
    \   return result", "    guard arr.count > 0 else {\n        return []\n    }\n\
    \    \n    var result = [String]()\n    \n    var start = 0\n    var end = arr.count\
    \ - 1\n    \n    while start < end {\n        let mid = start + (end - start)\
    \ / 2\n        let value = arr[mid]\n        \n        if value < 1 || value >\
    \ 9 {\n            start = mid + 1\n            continue\n        }\n        \n\
    \        let index = value - 10\n        \n        if index < 0 {\n          \
    \  start = mid + 1\n            continue\n        }\n        \n        result.append(names[index])\n\
    \        start = mid + 1\n    }\n    \n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    var result = [String]()\n    for i in arr {\n        if min <= i && i <=\
    \ max {\n            result.append(names[i])\n        }\n    }\n    return result.reversed()",
  "    guard arr.count > 0 else { return [] }\n    let min = min(arr)\n    let max\
    \ = max(arr)\n    var result = [String]()\n    for n in arr {\n        if n >=\
    \ min && n <= max {\n            result.append(name(n))\n        }\n    }\n  \
    \  return result", "    if arr.isEmpty {\n        return []\n    }\n    var result\
    \ = [String]()\n    var i = 0\n    for num in arr {\n        if num < 1 || num\
    \ > 9 {\n            continue\n        }\n        if i == 0 {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(num))\n            result.append(\"\
    \ as \\(name[num - 1])\")\n        }\n        i += 1\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result = [String]()\n \
    \   var index = 0\n    while index < arr.count {\n        if arr[index] < 1 ||\
    \ arr[index] > 9 {\n            index += 1\n            continue\n        }\n\
    \        let digit = String(arr[index])\n        let name = digit.unicodeScalars.first!.rawValue\n\
    \        result.append(name)\n        index += 1\n    }\n    return result.reversed()",
  "    if arr.isEmpty() {\n        return []\n    }\n    var result = [String]()\n\
    \    var i = 0\n    var j = 0\n    var k = arr.count\n    while i < k {\n    \
    \    if arr[i] < 1 || arr[i] > 9 {\n            i += 1\n            continue\n\
    \        }\n        if i == k {\n            break\n        }\n        if arr[i]\
    \ == 1 {\n            result.append(One)\n            i += 1\n            continue\n\
    \        }\n        if arr[i] == 2 {\n            result.append(Two)\n       \
    \     i += 1\n            continue\n        }\n        if arr[i] == 3 {\n    \
    \        result.append(Three)\n            i += 1\n            continue\n    \
    \    }\n        if arr[i] == 4 {\n            result.append(Four)\n          \
    \  i += 1\n            continue\n        }\n        if arr[i] == 5 {\n       \
    \     result.append(Five)\n            i += 1\n            continue\n        }\n\
    \        if arr[i] == 6 {\n            result.append(Six)\n            i += 1\n\
    \            continue\n        }\n        if arr[i] == 7 {\n            result.append(Seven)\n\
    \            i += 1\n            continue\n        }\n        if arr[i] == 8 {\n\
    \            result.append(Eight)\n            i += 1\n            continue\n\
    \        }\n        if arr[i] == 9 {\n            result.append(Nine)\n      \
    \      i += 1\n            continue\n        }\n    }\n    for ; i < k; i++ {\n\
    \        result.append(arr[i])\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return arr\n    }\n    var result = [String]()\n    var i = 0\n \
    \   var j = 0\n    var n = arr.count\n    while i < n {\n        if arr[i] > 9\
    \ {\n            j = i\n            while j < n && arr[j] > 9 {\n            \
    \    j += 1\n            }\n            if j == n {\n                break\n \
    \           }\n            var tmp = arr[i]\n            arr[i] = arr[j]\n   \
    \         arr[j] = tmp\n        }\n        i += 1\n    }\n    for k in arr {\n\
    \        if k > 9 {\n            result.append(String(k - 10))\n        } else\
    \ {\n            result.append(String(k))\n        }\n    }\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n\n    var result = [String]()\n\
    \    var index = 0\n    var digit = arr[0]\n    var length = arr[0]\n    var isNegative\
    \ = false\n\n    for index in 1..<arr.count {\n        digit = arr[index]\n  \
    \      length = digit - length\n        if length == 0 {\n            result.append(\"\
    \")\n        } else {\n            isNegative = length < 0\n            if isNegative\
    \ {\n                length *= -1\n            }\n            if length < 10 {\n\
    \                result.append(String(digit))\n            } else {\n        \
    \        result.append(by_length(arr[index..<arr.count]))\n            }\n   \
    \     }\n    }\n\n    if isNegative {\n        result.reverse()\n    }\n\n   \
    \ return result", "    if arr.isEmpty() {\n        return []\n    }\n    var result\
    \ = [String]()\n    var digits = [0]\n    var index = 0\n    for num in arr {\n\
    \        if num < 1 || num > 9 {\n            continue\n        }\n        digits[index]\
    \ = num\n        index++\n    }\n    for index in 0..<index {\n        let digit\
    \ = digits[index]\n        let name = digitToName(digit)\n        result.append(name)\n\
    \    }\n    return result.reverse()", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let maxLen = arr.max() % 10\n    for num\
    \ in arr {\n        let digit = num % 10\n        let index = digit + maxLen\n\
    \        result[index] = names[index[digit]]\n    }\n    return result", "   \
    \ guard arr.count > 0 else { return [] }\n    var result = [String]()\n    var\
    \ i = 0\n    while i < arr.count {\n        if arr[i] < 1 || arr[i] > 9 {\n  \
    \          i += 1\n            continue\n        }\n        result.append(name[arr[i]\
    \ - 1])\n        i += 1\n    }\n    return result.reverse()", "    var result:\
    \ [String] = []\n    var i = 0\n    for n in arr {\n        if n < 1 || n > 9\
    \ {\n            continue\n        }\n        result.append(name(n))\n       \
    \ i += 1\n    }\n    if i == 0 {\n        return result\n    }\n    for n < 10\
    \ {\n        result.append(name(n))\n    }\n    return result", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    var result = [String]()\n    var i = 0\n  \
    \  for number in arr {\n        if number < 1 || number > 9 {\n            continue\n\
    \        }\n        if i == 0 {\n            result.append(String(number))\n \
    \       } else {\n            result.append(String(number))\n            result.append(\"\
    \ as \\(name[number])\")\n        }\n        i += 1\n    }\n    return result",
  "    guard !arr.isEmpty else { return [] }\n    let min = 1\n    let max = 9\n \
    \   var result = [String]()\n    for n in arr {\n        let digit = n % 10\n\
    \        if digit < min || digit > max {\n            continue\n        }\n  \
    \      result.append(name[digit])\n    }\n    return result.reversed()", "   \
    \ if arr.isEmpty {\n        return []\n    }\n    let digits = arr.map { String($0)\
    \ }\n    let reversed = digits.reverse()\n    let ones = reversed.map { $0 ==\
    \ \"1\" ? \"One\" : $0 }\n    let tens = reversed.map { $0 == \"10\" ? \"Ten\"\
    \ : $0 }\n    let hundreds = reversed.map { $0 == \"100\" ? \"Hundred\" : $0 }\n\
    \    let thousands = reversed.map { $0 == \"1000\" ? \"Thousand\" : $0 }\n   \
    \ let millions = reversed.map { $0 == \"1000000\" ? \"Million\" : $0 }\n    let\
    \ billions = reversed.map { $0 == \"1000000000\" ? \"Billion\" : $0 }\n    let\
    \ trillions = reversed.map { $0 == \"1000000000000\" ? \"Trillion\" : $0 }\n \
    \   let quadrillions = reversed.map { $0 == \"1000000000000000\" ? \"Quadrillion\"\
    \ : $0 }\n    let quintillions = reversed.map { $0 == \"1000000000000000000\"\
    \ ? \"Quintillion\" : $0 }\n    let sextillions = reversed.map { $0 == \"1000000000000000000000\"\
    \ ? \"Sextillion\" : $0 }\n    let septillions = reversed.map { $0 == \"1000000000000000000000000\"\
    \ ? \"Septillion\" : $0 }\n    let octillions = reversed.map { $0 == \"1000000000000000000000000000\"\
    \ ? \"Octillion\" : $0 }\n    let nonillions = reversed.map { $0 == \"1000000000000000000000000000000\"\
    \ ? \"Nonillion\" : $0 }\n    let decillions = reversed.map { $0 == \"1000000000000000000000000000000000\"\
    \ ? \"Decillion\" : $0 }\n    let undecillions = reversed.map { $0 == \"100000000000000000000000000000000000\"\
    \ ? \"Undecillion\" : $0 }\n    let duodecillions = reversed.map { $0 == \"100000000000000000000000000000000000000\"\
    \ ? \"Duodecillion\" : $0 }\n    let tredecillions = reversed.map { $0 == \"100000000000000000000000000000000000000000\"\
    \ ? \"Tredecillion\" : $0 }\n    let quattuordecillions = reversed.map { $0 ==\
    \ \"10000000000000000000000000000000000000000000\" ? \"Quattuordecillion\" : $0\
    \ }\n    let quindecillions = reversed.map { $0 == \"10000000000000000000000000000000000000000000000\"\
    \ ", "    var result = [String]()\n    var i = 0\n    for n in arr {\n       \
    \ if n < 1 || n > 9 {\n            continue\n        }\n        if i == 0 {\n\
    \            result.append(String(format: \"%d\\\"\", n))\n        } else {\n\
    \            result.append(String(format: \"%d\\\"\", n - 1))\n        }\n   \
    \     i += 1\n    }\n    if i == 0 {\n        return result\n    }\n    for n\
    \ in arr {\n        if n < 1 || n > 9 {\n            continue\n        }\n   \
    \     result.append(String(format: \"%d\\\"\", n - 1))\n    }\n    return result",
  "    guard arr.count > 0 else { return [] }\n    let min = arr[0]\n    let max =\
    \ arr[arr.count - 1]\n    var result = [String]()\n    for number in arr {\n \
    \       if number < min || number > max {\n            continue\n        }\n \
    \       result.append(numberToName(number))\n    }\n    return result", "    if\
    \ arr.isEmpty {\n        return []\n    }\n\n    var result = [String]()\n   \
    \ var last = 0\n    var lastDigit = 0\n    for num in arr {\n        if num >\
    \ 9 {\n            lastDigit = num % 10\n            num = num / 10\n        }\
    \ else {\n            lastDigit = 0\n        }\n\n        if num == 1 {\n    \
    \        result.append(names[lastDigit])\n        } else {\n            if last\
    \ == 0 {\n                result.append(names[num])\n            } else {\n  \
    \              result.append(names[lastDigit])\n                result.append(names[num])\n\
    \            }\n        }\n\n        last = num\n    }\n\n    return result",
  "    if arr.isEmpty {\n        return []\n    }\n    var result: [String] = []\n\
    \    var last: Int = 0\n    for num in arr {\n        if num < 1 || num > 9 {\n\
    \            continue\n        }\n        if last < num {\n            last =\
    \ num\n        }\n    }\n    for num in arr {\n        if num < 1 || num > 9 {\n\
    \            continue\n        }\n        if last < num {\n            last =\
    \ num\n        }\n        if last == num {\n            result.append(String(num))\n\
    \        } else {\n            result.append(String(last))\n            result.append(String(num))\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    if arr.isEmpty\
    \ {\n        return result\n    }\n    let one = arr[0]\n    let two = arr[1]\n\
    \    let three = arr[2]\n    let four = arr[3]\n    let five = arr[4]\n    let\
    \ six = arr[5]\n    let seven = arr[6]\n    let eight = arr[7]\n    let nine =\
    \ arr[8]\n    let ten = arr[9]\n    let eleven = arr[10]\n    let twelve = arr[11]\n\
    \    let thirteen = arr[12]\n    let fourteen = arr[13]\n    let fifteen = arr[14]\n\
    \    let sixteen = arr[15]\n    let seventeen = arr[16]\n    let eighteen = arr[17]\n\
    \    let nineteen = arr[18]\n    let twenty = arr[19]\n    let thirty = arr[20]\n\
    \    let forty = arr[21]\n    let fifty = arr[22]\n    let sixty = arr[23]\n \
    \   let seventy = arr[24]\n    let eighty = arr[25]\n    let ninety = arr[26]\n\
    \    let hundred = arr[27]\n    let thousand = arr[28]\n    let million = arr[29]\n\
    \    let billion = arr[30]\n    let trillion = arr[31]\n    let quadrillion =\
    \ arr[32]\n    let quintillion = arr[33]\n    let sextillion = arr[34]\n    let\
    \ septillion = arr[35]\n    let octillion = arr[36]\n    let nonillion = arr[37]\n\
    \    let decillion = arr[38]\n    let undecillion = arr[39]\n    let duodecillion\
    \ = arr[40]\n    let tredecillion = arr[41]\n    let quattuordecillion = arr[42]\n\
    \    let quindecillion = arr[43]\n    let sexdecillion = arr[44]\n    let septendecillion\
    \ = arr[45]\n    let octodecillion = arr[46]\n    let novemdecillion = arr[47]\n\
    \    let vigintillion = arr[48]\n    let unvigintillion = arr[49]\n    let duovigintillion\
    \ = arr[50]\n    let trevigintillion = arr[51]\n    let quattuorvigintillion =\
    \ arr[52]\n    let quinvigintillion = arr[53]\n    let sexvigintillion = arr[54]\n\
    \    let septenvigintillion = arr[55]\n    let octovigin", "    if arr.isEmpty\
    \ {\n        return []\n    }\n    let maxLen = arr.maxElement()\n    var result\
    \ = [String]()\n    for num in arr {\n        if num == 1 {\n            result.append(\"\
    One\")\n        } else if num == 2 {\n            result.append(\"Two\")\n   \
    \     } else if num == 3 {\n            result.append(\"Three\")\n        } else\
    \ if num == 4 {\n            result.append(\"Four\")\n        } else if num ==\
    \ 5 {\n            result.append(\"Five\")\n        } else if num == 6 {\n   \
    \         result.append(\"Six\")\n        } else if num == 7 {\n            result.append(\"\
    Seven\")\n        } else if num == 8 {\n            result.append(\"Eight\")\n\
    \        } else if num == 9 {\n            result.append(\"Nine\")\n        }\
    \ else {\n            result.append(String(num))\n        }\n    }\n    result.reverse()\n\
    \    for index in 0..<maxLen {\n        result[index] = result[index].reversed()\n\
    \    }\n    return result", "    guard arr.count > 0 else {\n        return []\n\
    \    }\n    var result = [String]()\n    var last = 0\n    for num in arr {\n\
    \        if num < 1 || num > 9 {\n            continue\n        }\n        let\
    \ index = num - last\n        result.append(String(index))\n        last = num\n\
    \    }\n    return result.reversed()", "    guard !arr.isEmpty else { return []\
    \ }\n    let min = min(arr)\n    let max = max(arr)\n    var result = [String]()\n\
    \    for n in arr {\n        if n < min || n > max {\n            continue\n \
    \       }\n        let digit = Int(log2(n))\n        result.append(digits[digit])\n\
    \    }\n    return result.reversed()", "    var result = [String]()\n    for number\
    \ in arr {\n        if number < 1 || number > 9 {\n            continue\n    \
    \    }\n        let index = number - 1\n        result.append(names[index])\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let min = min(arr)\n    let max = max(arr)\n\
    \    for num in arr {\n        if num < min || num > max {\n            continue\n\
    \        }\n        let index = num - min\n        result.append(names[index])\n\
    \    }\n    return result", "    var result = [String]()\n    if arr.isEmpty {\n\
    \        return result\n    }\n    let min = arr[0]\n    let max = arr[0]\n  \
    \  for i in arr {\n        if i > max {\n            max = i\n        }\n    \
    \    if i < min {\n            min = i\n        }\n    }\n    let one = String(format:\
    \ \"%@\", One)\n    let two = String(format: \"%@\", Two)\n    let three = String(format:\
    \ \"%@\", Three)\n    let four = String(format: \"%@\", Four)\n    let five =\
    \ String(format: \"%@\", Five)\n    let six = String(format: \"%@\", Six)\n  \
    \  let seven = String(format: \"%@\", Seven)\n    let eight = String(format: \"\
    %@\", Eight)\n    let nine = String(format: \"%@\", Nine)\n    if min == 1 {\n\
    \        result.append(one)\n    }\n    if min == 2 {\n        result.append(two)\n\
    \    }\n    if min == 3 {\n        result.append(three)\n    }\n    if min ==\
    \ 4 {\n        result.append(four)\n    }\n    if min == 5 {\n        result.append(five)\n\
    \    }\n    if min == 6 {\n        result.append(six)\n    }\n    if min == 7\
    \ {\n        result.append(seven)\n    }\n    if min == 8 {\n        result.append(eight)\n\
    \    }\n    if min == 9 {\n        result.append(nine)\n    }\n    if max == 9\
    \ {\n        result.append(nine)\n    }\n    if max > 9 {\n        for i in 1...9\
    \ {\n            if arr[i] == max {\n                result.append(String(format:\
    \ \"%@\", i))\n            }\n        }\n    }\n    return result", "    if arr.isEmpty()\
    \ {\n        return []\n    }\n    var result = [String]()\n    var index = 0\n\
    \    while index < arr.count {\n        let value = arr[index]\n        if value\
    \ < 1 || value > 9 {\n            index += 1\n            continue\n        }\n\
    \        let digit = value - 10\n        let name = digitToName(digit)\n     \
    \   result.append(name)\n        index += 1\n    }\n    return result", "    guard\
    \ arr.count > 0 else { return [] }\n    \n    var result = [String]()\n    \n\
    \    for number in arr {\n        switch number {\n        case 1:\n         \
    \   result.append(contentsOf: [\"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
    , \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n        case 2:\n            result.append(contentsOf:\
    \ [\"Two\", \"One\", \"Three\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\"\
    , \"Nine\"])\n        case 3:\n            result.append(contentsOf: [\"Three\"\
    , \"Two\", \"One\", \"Four\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"\
    ])\n        case 4:\n            result.append(contentsOf: [\"Four\", \"Three\"\
    , \"Two\", \"One\", \"Five\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n    \
    \    case 5:\n            result.append(contentsOf: [\"Five\", \"Four\", \"Three\"\
    , \"Two\", \"One\", \"Six\", \"Seven\", \"Eight\", \"Nine\"])\n        case 6:\n\
    \            result.append(contentsOf: [\"Six\", \"Five\", \"Four\", \"Three\"\
    , \"Two\", \"One\", \"Seven\", \"Eight\", \"Nine\"])\n        case 7:\n      \
    \      result.append(contentsOf: [\"Seven\", \"Six\", \"Five\", \"Four\", \"Three\"\
    , \"Two\", \"One\", \"Eight\", \"Nine\"])\n        case 8:\n            result.append(contentsOf:\
    \ [\"Eight\", \"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\"\
    , \"Nine\"])\n        case 9:\n            result.append(contentsOf: [\"Nine\"\
    , \"Eight\", \"Seven\", \"Six\", \"Five\", \"Four\", \"Three\", \"Two\", \"One\"\
    ])\n        default:\n            break\n        }\n    }\n    \n    return result.reversed()"]
stop_tokens:
- "\n}"

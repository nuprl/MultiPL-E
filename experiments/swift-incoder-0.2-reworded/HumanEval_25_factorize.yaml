name: HumanEval_25_factorize
language: swift
prompt: "\n/// Return array of prime factors of given integer in the order from smallest\
  \ to largest.\n/// Each of the factors should be arrayed number of times corresponding\
  \ to how many times it appeares in factorization.\n/// Input number should be equal\
  \ to the product of all factors\n/// >>> factorize(n: 8)\n/// [2, 2, 2]\n/// >>>\
  \ factorize(n: 25)\n/// [5, 5]\n/// >>> factorize(n: 70)\n/// [2, 5, 7]\nfunc factorize(n:\
  \ Int) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(factorize(n: 2) == [2])\nassert(factorize(n:\
  \ 4) == [2, 2])\nassert(factorize(n: 8) == [2, 2, 2])\nassert(factorize(n: 57) ==\
  \ [3, 19])\nassert(factorize(n: 3249) == [3, 3, 19, 19])\nassert(factorize(n: 185193)\
  \ == [3, 3, 3, 19, 19, 19])\nassert(factorize(n: 20577) == [3, 19, 19, 19])\nassert(factorize(n:\
  \ 18) == [2, 3, 3])"
completions: ["    var factorization = [Int]()\n    var primeFactorization = [Int]()\n\
    \    var primeFactorizationIndex = 0\n    var currentFactorizationIndex = 0\n\
    \    var currentFactorization = [1]\n    var currentPrimeFactorization = [Int]()\n\
    \    var currentPrimeFactorizationIndex = 0\n    var currentPrimeFactorizationIndex2\
    \ = 0\n    var currentPrimeFactorizationIndex3 = 0\n    var currentPrimeFactorizationIndex4\
    \ = 0\n    var currentPrimeFactorizationIndex5 = 0\n    var currentPrimeFactorizationIndex6\
    \ = 0\n    var currentPrimeFactorizationIndex7 = 0\n    var currentPrimeFactorizationIndex8\
    \ = 0\n    var currentPrimeFactorizationIndex9 = 0\n    var currentPrimeFactorizationIndex10\
    \ = 0\n    var currentPrimeFactorizationIndex11 = 0\n    var currentPrimeFactorizationIndex12\
    \ = 0\n    var currentPrimeFactorizationIndex13 = 0\n    var currentPrimeFactorizationIndex14\
    \ = 0\n    var currentPrimeFactorizationIndex15 = 0\n    var currentPrimeFactorizationIndex16\
    \ = 0\n    var currentPrimeFactorizationIndex17 = 0\n    var currentPrimeFactorizationIndex18\
    \ = 0\n    var currentPrimeFactorizationIndex19 = 0\n    var currentPrimeFactorizationIndex20\
    \ = 0\n    var currentPrimeFactorizationIndex21 = 0\n    var currentPrimeFactorizationIndex22\
    \ = 0\n    var currentPrimeFactorizationIndex23 = 0\n    var currentPrimeFactorizationIndex24\
    \ = 0\n    var currentPrimeFactorizationIndex25 = 0\n    var currentPrimeFactorizationIndex26\
    \ = 0\n    var currentPrimeFactorizationIndex27 = 0\n    var currentPrimeFactorizationIndex28\
    \ = 0\n    var currentPrimeFactorizationIndex29 = 0\n    var currentPrimeFactorizationIndex30\
    \ = 0\n    var currentPrimeFactorizationIndex31 = 0\n    var currentPrimeFactorizationIndex32\
    \ = 0\n    var currentPrimeFactorizationIndex33 = 0\n    var currentPrimeFactorizationIndex34\
    \ = 0\n    var currentPrimeFactorizationIndex35 = 0\n    var currentPrimeFactorizationIndex36\
    \ = 0\n    var currentPrimeFactorizationIndex37 = 0\n    var currentPrimeFactorizationIndex38\
    \ = 0\n    var currentPrimeFactorizationIndex39 = 0\n    var currentPrimeFactorizationIndex40\
    \ = 0\n    var currentPrimeFactorizationIndex41 = 0\n    var currentPrimeFactorizationIndex42\
    \ = 0\n    var currentPrimeFactorizationIndex43 = 0\n    var currentPrimeFactorizationIndex44\
    \ = 0\n    var currentPrimeFactorizationIndex45 = 0\n    var currentPrimeFactorizationIndex46\
    \ = 0\n    var currentPrime", "    var factors = [Int]()\n    var i = 2\n    var\
    \ factor = 1\n    while i < n {\n        if n % i == 0 {\n            factors.append(factor)\n\
    \            factor = 1\n        } else {\n            factor *= i\n        }\n\
    \        i += 1\n    }\n    factors.append(factor)\n    return factors", "   \
    \ var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationIndexCount = 0\n    var factorizationIndexCountMax\
    \ = Int(IntMax)\n    var factorizationIndexCountMin = Int(IntMin)\n    var factorizationIndexCountMaxMin\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMax = Int(IntMin)\n    var\
    \ factorizationIndexCountMinMaxMax = Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMin\
    \ = Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMin = Int(IntMax)\n \
    \   var factorizationIndexCountMinMaxMaxMinMax = Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMax\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMax = Int(IntMin)\n\
    \    var factorizationIndexCountMinMaxMaxMinMaxMaxMax = Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMax\
    \ = Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMax = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxMaxMinMaxMaxMax = Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMax\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMax = Int(IntMin)\n\
    \    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMax = Int(IntMax)\n  \
    \  var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMax = Int(IntMin)\n    var\
    \ factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMax = Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMax\
    \ = Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMax =\
    \ Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMax)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMin)\n    var factorizationIndexCountMinMaxMaxMinMaxMaxMaxMaxMaxMax =\
    \ Int(IntMax)\n    var factorizationIndexCountMin", "    var factorization = [Int]()\n\
    \    var i = 2\n    var j = 1\n    var factor = 2\n    var prime = true\n    var\
    \ factorizationCount = 0\n    while i < n {\n        while j < n {\n         \
    \   if n % i == 0 {\n                factorizationCount += 1\n               \
    \ factorization.append(factor)\n                factor *= i\n                factorization.append(factor)\n\
    \                factor *= j\n                factorizationCount += 1\n      \
    \          factorization.append(factor)\n                factor *= i\n       \
    \         factorizationCount += 1\n                factorizationCount += 1\n \
    \               factorizationCount += 1\n                factorizationCount +=\
    \ 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factorizationCount += 1\n                factorizationCount\
    \ += 1\n                factor", "    var factors = [Int]()\n    var primeFactors\
    \ = [1]\n    var isPrime = true\n    var isFactor = false\n    var isPrimeFactor\
    \ = false\n    var isPrimeFactor2 = false\n    var isPrimeFactor3 = false\n  \
    \  var isPrimeFactor4 = false\n    var isPrimeFactor5 = false\n    var isPrimeFactor6\
    \ = false\n    var isPrimeFactor7 = false\n    var isPrimeFactor8 = false\n  \
    \  var isPrimeFactor9 = false\n    var isPrimeFactor10 = false\n    var isPrimeFactor11\
    \ = false\n    var isPrimeFactor12 = false\n    var isPrimeFactor13 = false\n\
    \    var isPrimeFactor14 = false\n    var isPrimeFactor15 = false\n    var isPrimeFactor16\
    \ = false\n    var isPrimeFactor17 = false\n    var isPrimeFactor18 = false\n\
    \    var isPrimeFactor19 = false\n    var isPrimeFactor20 = false\n    var isPrimeFactor21\
    \ = false\n    var isPrimeFactor22 = false\n    var isPrimeFactor23 = false\n\
    \    var isPrimeFactor24 = false\n    var isPrimeFactor25 = false\n    var isPrimeFactor26\
    \ = false\n    var isPrimeFactor27 = false\n    var isPrimeFactor28 = false\n\
    \    var isPrimeFactor29 = false\n    var isPrimeFactor30 = false\n    var isPrimeFactor31\
    \ = false\n    var isPrimeFactor32 = false\n    var isPrimeFactor33 = false\n\
    \    var isPrimeFactor34 = false\n    var isPrimeFactor35 = false\n    var isPrimeFactor36\
    \ = false\n    var isPrimeFactor37 = false\n    var isPrimeFactor38 = false\n\
    \    var isPrimeFactor39 = false\n    var isPrimeFactor40 = false\n    var isPrimeFactor41\
    \ = false\n    var isPrimeFactor42 = false\n    var isPrimeFactor43 = false\n\
    \    var isPrimeFactor44 = false\n    var isPrimeFactor45 = false\n    var isPrimeFactor46\
    \ = false\n    var isPrimeFactor47 = false\n    var isPrimeFactor48 = false\n\
    \    var isPrimeFactor49 = false\n    var isPrimeFactor50 = false\n    var isPrimeFactor51\
    \ = false\n    var isPrimeFactor52 = false\n    var isPrimeFactor53 = false\n\
    \    var isPrimeFactor54 = false\n    var isPrimeFactor55 = false\n    var isPrimeFactor56\
    \ = false\n    var isPrimeFactor57 = false\n    var isPrimeFactor58 = false\n\
    \    var isPrimeFactor59 = false\n    var isPrimeFactor60 = false", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    var factorizationIndex = 0\n    var factorizationValue = 1\n    var\
    \ factorizationValueIndex = 0\n    var factorizationValueIndexMax = factorization.count\
    \ - 1\n    for _ in 0..<factorizationCount {\n        if factorizationIndex ==\
    \ factorizationValueIndexMax {\n            factors.append(factorizationValue)\n\
    \            factorizationIndex = 0\n            factorizationValueIndex++\n \
    \           factorizationValue = 1\n        } else {\n            factorizationValue\
    \ *= factorization[factorizationIndex]\n            factorizationIndex++\n   \
    \     }\n    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeSet = [Bool]()\n    var isPrimeSetIndex\
    \ = 0\n    var isPrimeSetIndexMax = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax2\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax3 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax4 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax5\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax6 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax7 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax8\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax9 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax10 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax11\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax12 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax13 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax14\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax15 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax16 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax17\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax18 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax19 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax20\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax21 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax22 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax23\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax24 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax25 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax26\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax27 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax28 = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax29\
    \ = Int(sqrt(Double(n)))\n    var isPrimeSetIndexMax30 = Int(sqrt(Double(n)))\n\
    \    var isPrimeSetIndexMax31 = Int(sqrt(Double(n)))\n", "    var factorization\
    \ = [Int]()\n    var factorizationIndex = 0\n    var currentFactor = 1\n    var\
    \ currentFactorIndex = 0\n    var currentFactorValue = 1\n    var isPrime = true\n\
    \    var isPrimeIndex = 0\n    var isPrimeValue = 1\n    var isPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationValue\
    \ = 1\n    var isPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeValue = 1\n    var isPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrimeFactorizationValue\
    \ = 1\n    var isPrimeFactorizationPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeValue = 1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationValue =\
    \ 1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = false\n\
    \    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex = 0\n \
    \   var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeValue = 1\n\
    \    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationValue\
    \ = 1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeValue\
    \ = 1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationValue\
    \ = 1\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPri", " \
    \   var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    for factor in factorization {\n        factors.append(factor)\n    }\n  \
    \  return factors", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    var primeFactorization = factorizationOfPrimes(n)\n    var factorizationIndex\
    \ = 0\n    var primeFactorizationIndex = 0\n    var factorizationCount = 1\n \
    \   var primeFactorizationCount = 1\n    var factorizationPrimeCount = 1\n   \
    \ var primeFactorizationPrimeCount = 1\n    var factorizationPrimeIndex = 0\n\
    \    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1\n    var primeFactorizationPrimeIndex = 0\n    var primeFactorizationPrimeCount\
    \ = 1", "    var factorization: [Int] = []\n    var factorizationCount = 0\n \
    \   var factorizationIndex = 0\n    var factorizationIndex2 = 0\n    var factorizationIndex3\
    \ = 0\n    var factorizationIndex4 = 0\n    var factorizationIndex5 = 0\n    var\
    \ factorizationIndex6 = 0\n    var factorizationIndex7 = 0\n    var factorizationIndex8\
    \ = 0\n    var factorizationIndex9 = 0\n    var factorizationIndex10 = 0\n   \
    \ var factorizationIndex11 = 0\n    var factorizationIndex12 = 0\n    var factorizationIndex13\
    \ = 0\n    var factorizationIndex14 = 0\n    var factorizationIndex15 = 0\n  \
    \  var factorizationIndex16 = 0\n    var factorizationIndex17 = 0\n    var factorizationIndex18\
    \ = 0\n    var factorizationIndex19 = 0\n    var factorizationIndex20 = 0\n  \
    \  var factorizationIndex21 = 0\n    var factorizationIndex22 = 0\n    var factorizationIndex23\
    \ = 0\n    var factorizationIndex24 = 0\n    var factorizationIndex25 = 0\n  \
    \  var factorizationIndex26 = 0\n    var factorizationIndex27 = 0\n    var factorizationIndex28\
    \ = 0\n    var factorizationIndex29 = 0\n    var factorizationIndex30 = 0\n  \
    \  var factorizationIndex31 = 0\n    var factorizationIndex32 = 0\n    var factorizationIndex33\
    \ = 0\n    var factorizationIndex34 = 0\n    var factorizationIndex35 = 0\n  \
    \  var factorizationIndex36 = 0\n    var factorizationIndex37 = 0\n    var factorizationIndex38\
    \ = 0\n    var factorizationIndex39 = 0\n    var factorizationIndex40 = 0\n  \
    \  var factorizationIndex41 = 0\n    var factorizationIndex42 = 0\n    var factorizationIndex43\
    \ = 0\n    var factorizationIndex44 = 0\n    var factorizationIndex45 = 0\n  \
    \  var factorizationIndex46 = 0\n    var factorizationIndex47 = 0\n    var factorizationIndex48\
    \ = 0\n    var factorizationIndex49 = 0\n    var factorizationIndex50 = 0\n  \
    \  var factorizationIndex51 = 0\n    var factorizationIndex52 = 0\n    var factorizationIndex53\
    \ = 0\n    var factorizationIndex54 = 0\n    var factorizationIndex55 = 0\n  \
    \  var factorizationIndex56 = 0\n    var factorizationIndex57 = 0\n    var factorizationIndex58\
    \ = 0\n    var factorizationIndex59 = 0\n    var factorizationIndex60 = 0\n  \
    \  var factorizationIndex61 = 0\n    var factorizationIndex62 = 0\n    var factorizationIndex63\
    \ = 0\n    var factorizationIndex64 = 0\n    var factorizationIndex65 = 0\n  \
    \  var factorizationIndex66 = 0\n    var factorizationIndex67 = 0\n    var factorizationIndex68\
    \ = 0\n    var factorizationIndex69 = 0\n    var factorizationIndex70 = 0\n  \
    \  var factorizationIndex71 = 0\n    var factorization", "    var factors = [Int]()\n\
    \    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    for _ in 0..<factorization.count {\n        if factorizationCount <=\
    \ factorization.count {\n            factors.append(factorization[factorizationCount])\n\
    \            factorizationCount += 1\n        } else {\n            break\n  \
    \      }\n    }\n    return factors", "    var factors = [Int]()\n    var i =\
    \ 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factorization: [Int] = []\n    var factor: Int = 0\n    var i: Int = 0\n   \
    \ var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n\
    \    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int =\
    \ 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int\
    \ = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z:\
    \ Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var\
    \ d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n   \
    \ var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n\
    \    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int =\
    \ 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int\
    \ = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x:\
    \ Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var\
    \ b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n   \
    \ var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int =\
    \ 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int =\
    \ 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int\
    \ = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t:\
    \ Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n   \
    \ var b: Int = 0\n    var c: Int = 0\n", "    var factorization = [Int]()\n  \
    \  var factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationSum2 = 0\n    var factorizationSum3 = 0\n    var factorizationSum4\
    \ = 0\n    var factorizationSum5 = 0\n    var factorizationSum6 = 0\n    var factorizationSum7\
    \ = 0\n    var factorizationSum8 = 0\n    var factorizationSum9 = 0\n    var factorizationSum10\
    \ = 0\n    var factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var\
    \ factorizationSum13 = 0\n    var factorizationSum14 = 0\n    var factorizationSum15\
    \ = 0\n    var factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var\
    \ factorizationSum18 = 0\n    var factorizationSum19 = 0\n    var factorizationSum20\
    \ = 0\n    var factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var\
    \ factorizationSum23 = 0\n    var factorizationSum24 = 0\n    var factorizationSum25\
    \ = 0\n    var factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var\
    \ factorizationSum28 = 0\n    var factorizationSum29 = 0\n    var factorizationSum30\
    \ = 0\n    var factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var\
    \ factorizationSum33 = 0\n    var factorizationSum34 = 0\n    var factorizationSum35\
    \ = 0\n    var factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var\
    \ factorizationSum38 = 0\n    var factorizationSum39 = 0\n    var factorizationSum40\
    \ = 0\n    var factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var\
    \ factorizationSum43 = 0\n    var factorizationSum44 = 0\n    var factorizationSum45\
    \ = 0\n    var factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var\
    \ factorizationSum48 = 0\n    var factorizationSum49 = 0\n    var factorizationSum50\
    \ = 0\n    var factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var\
    \ factorizationSum53 = 0\n    var factorizationSum54 = 0\n    var factorizationSum55\
    \ = 0\n    var factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var\
    \ factorizationSum58 = 0\n    var factorizationSum59 = 0\n    var factorizationSum60\
    \ = 0\n    var factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var\
    \ factorizationSum63 = 0\n    var factorizationSum64 = 0\n    var factorizationSum65\
    \ = 0\n    var factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var\
    \ factorizationSum68 = 0\n    var factorizationSum69 = 0\n    var factorizationSum70\
    \ = 0\n    var factorization", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factorization = [Int]()\n    var primes\
    \ = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var primeFactorizationCount = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeFactorization = true\n    var\
    \ isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationCount = 0\n    var\
    \ isPrimePrime = true\n    var isPrimePrimeIndex = 0\n    var isPrimePrimeCount\
    \ = 0\n    var isPrimePrimeFactorization = true\n    var isPrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimeFactorizationCount = 0\n    var isPrimePrimePrime =\
    \ true\n    var isPrimePrimePrimeIndex = 0\n    var isPrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeIndex = 0\n    var isPrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeIndex = 0\n    var isPrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeIndex = 0\n    var isPrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeIndex = 0\n    var isPrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationIndex\
    \ = 0\n    var isPrimePrimePrimeFactorizationCount = 0\n    var isPrimePrimePrimePrime\
    \ = true\n", "    var factors: [Int] = []\n    var factorization: [Int] = []\n\
    \    var factorizationCount = 0\n    var factorizationSum = 0\n    var factorizationSum2\
    \ = 0\n    var factorizationSum3 = 0\n    var factorizationSum4 = 0\n    var factorizationSum5\
    \ = 0\n    var factorizationSum6 = 0\n    var factorizationSum7 = 0\n    var factorizationSum8\
    \ = 0\n    var factorizationSum9 = 0\n    var factorizationSum10 = 0\n    var\
    \ factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var factorizationSum13\
    \ = 0\n    var factorizationSum14 = 0\n    var factorizationSum15 = 0\n    var\
    \ factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var factorizationSum18\
    \ = 0\n    var factorizationSum19 = 0\n    var factorizationSum20 = 0\n    var\
    \ factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var factorizationSum23\
    \ = 0\n    var factorizationSum24 = 0\n    var factorizationSum25 = 0\n    var\
    \ factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var factorizationSum28\
    \ = 0\n    var factorizationSum29 = 0\n    var factorizationSum30 = 0\n    var\
    \ factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var factorizationSum33\
    \ = 0\n    var factorizationSum34 = 0\n    var factorizationSum35 = 0\n    var\
    \ factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var factorizationSum38\
    \ = 0\n    var factorizationSum39 = 0\n    var factorizationSum40 = 0\n    var\
    \ factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var factorizationSum43\
    \ = 0\n    var factorizationSum44 = 0\n    var factorizationSum45 = 0\n    var\
    \ factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var factorizationSum48\
    \ = 0\n    var factorizationSum49 = 0\n    var factorizationSum50 = 0\n    var\
    \ factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var factorizationSum53\
    \ = 0\n    var factorizationSum54 = 0\n    var factorizationSum55 = 0\n    var\
    \ factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var factorizationSum58\
    \ = 0\n    var factorizationSum59 = 0\n    var factorizationSum60 = 0\n    var\
    \ factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var factorizationSum63\
    \ = 0\n    var factorizationSum64 = 0\n    var factorizationSum65 = 0\n    var\
    \ factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var factorizationSum68\
    \ = 0\n    var factorizationSum69 = 0\n    var factorizationSum70 = 0\n    var\
    \ factorizationSum", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    for factor in factorization {\n        factors.append(factor)\n    }\n  \
    \  return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var isPrime: Bool = false\n    var isPrimeFactorization: Bool\
    \ = false\n    var isPrimePrimeFactorization: Bool = false\n    var isPrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimeFactorization: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimeFactorization: Bool = false\n    var isPrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool =\
    \ false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization: Bool\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePri", "    var factors = [Int]()\n\
    \    var i = 2\n    var j = 1\n    var factor = 1\n    while i < n {\n       \
    \ if n % i == 0 {\n            factors.append(factor)\n            factor = 1\n\
    \            while i * j < n {\n                j += 1\n            }\n      \
    \      i += 1\n        } else {\n            factor += 1\n        }\n    }\n \
    \   factors.append(factor)\n    return factors", "    var factorization = [Int]()\n\
    \    var primeFactorization = [Int]()\n    var primeFactorizationCount = [Int]()\n\
    \    var primeFactorizationIndex = [Int]()\n    var primeFactorizationIndexCount\
    \ = [Int]()\n    var primeFactorizationIndexCountMax = Int()\n    var primeFactorizationIndexCountMaxIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValue = Int()\n    var primeFactorizationIndexCountMaxValueIndex\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueIndex = Int()\n    var primeFactorizationIndexCountMaxValueValueValue\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueIndex = Int()\n\
    \    var primeFactorizationIndexCountMaxValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueIndex = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValueValue\
    \ = Int()\n    var primeFactorizationIndexCountMaxValueValueValueValueIndex =\
    \ Int()\n    var primeFactorizationIndexCountMaxValueValueValueValueValue = Int()\n\
    \    var primeFactorizationIndexCountMaxValueValueValueValueIndex = Int()\n  \
    \  var primeFactorizationIndexCountMaxValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueIndex = Int()\n    var\
    \ primeFactorizationIndexCountMaxValueValueValueValueValueValue = Int()\n    var\
    \ primeFactorizationIndexCountMax", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    var factorizationSize = factorization.count\n\
    \    var factorizationIndex = factorizationSize - 1\n    var factorizationLastIndex\
    \ = factorizationSize - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n\
    \    var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[factorizationLastIndex]\n   \
    \ var factorizationLastIndex = factorizationSize - 1\n    var factorizationLast\
    \ = factorization[factorizationLastIndex]\n    var factorizationLastIndex = factorizationSize\
    \ - 1\n    var factorizationLast = factorization[", "    var factorization: [Int]\
    \ = []\n    var factorizationCount = 0\n    var isPrime = true\n    var isPrimeCount\
    \ = 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationSum = 0\n \
    \   var factorizationProduct = 1\n    var factorizationProductSum = 0\n    var\
    \ factorizationProductProduct = 1\n    var factorizationProductProductSum = 0\n\
    \    var factorizationProductProductProduct = 1\n    var factorizationProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProduct = 1\n    var factorizationProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProduct = 1\n    var factorizationProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProduct = 1\n \
    \   var factorizationProductProductProductProductProductProductSum = 0\n    var\
    \ factorizationProductProductProductProductProductProductProduct = 1\n    var\
    \ factorizationProductProductProductProductProductProductProductSum = 0\n    var\
    \ factorizationProductProductProductProductProductProductProductProduct = 1\n\
    \    var factorizationProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductSum\
    \ = 0\n    var factorizationProductProductProductProductProductProductProductProductProductProductProductProductProductProduct\
    \ = 1\n    var factorizationProductProductProduct", "    var factors: [Int] =\
    \ []\n    var factorization: [[Int]] = []\n    var factorizationIndex = 0\n  \
    \  var factorizationIndexMax = factorizationIndex\n    var factorizationIndexMax2\
    \ = factorizationIndex\n    var factorizationIndexMax3 = factorizationIndex\n\
    \    var factorizationIndexMax4 = factorizationIndex\n    var factorizationIndexMax5\
    \ = factorizationIndex\n    var factorizationIndexMax6 = factorizationIndex\n\
    \    var factorizationIndexMax7 = factorizationIndex\n    var factorizationIndexMax8\
    \ = factorizationIndex\n    var factorizationIndexMax9 = factorizationIndex\n\
    \    var factorizationIndexMax10 = factorizationIndex\n    var factorizationIndexMax11\
    \ = factorizationIndex\n    var factorizationIndexMax12 = factorizationIndex\n\
    \    var factorizationIndexMax13 = factorizationIndex\n    var factorizationIndexMax14\
    \ = factorizationIndex\n    var factorizationIndexMax15 = factorizationIndex\n\
    \    var factorizationIndexMax16 = factorizationIndex\n    var factorizationIndexMax17\
    \ = factorizationIndex\n    var factorizationIndexMax18 = factorizationIndex\n\
    \    var factorizationIndexMax19 = factorizationIndex\n    var factorizationIndexMax20\
    \ = factorizationIndex\n    var factorizationIndexMax21 = factorizationIndex\n\
    \    var factorizationIndexMax22 = factorizationIndex\n    var factorizationIndexMax23\
    \ = factorizationIndex\n    var factorizationIndexMax24 = factorizationIndex\n\
    \    var factorizationIndexMax25 = factorizationIndex\n    var factorizationIndexMax26\
    \ = factorizationIndex\n    var factorizationIndexMax27 = factorizationIndex\n\
    \    var factorizationIndexMax28 = factorizationIndex\n    var factorizationIndexMax29\
    \ = factorizationIndex\n    var factorizationIndexMax30 = factorizationIndex\n\
    \    var factorizationIndexMax31 = factorizationIndex\n    var factorizationIndexMax32\
    \ = factorizationIndex\n    var factorizationIndexMax33 = factorizationIndex\n\
    \    var factorizationIndexMax34 = factorizationIndex\n    var factorizationIndexMax35\
    \ = factorizationIndex\n    var factorizationIndexMax36 = factorizationIndex\n\
    \    var factorizationIndexMax37 = factorizationIndex\n    var factorizationIndexMax38\
    \ = factorizationIndex\n    var factorizationIndexMax39 = factorizationIndex\n\
    \    var factorizationIndexMax40 = factorizationIndex\n    var factorizationIndexMax41\
    \ = factorizationIndex\n    var factorizationIndexMax42 = factorizationIndex\n\
    \    var factorizationIndexMax43 = factorizationIndex\n    var factorizationIndexMax44\
    \ = factorizationIndex\n    var factorizationIndexMax45 = factorizationIndex\n\
    \    var factorizationIndexMax46 = factor", "    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var isPrime: [Bool] = []\n    var\
    \ isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n    var isPrimeCountMin:\
    \ Int = 2\n    var isPrimeCountMax2: Int = 2\n    var isPrimeCountMin2: Int =\
    \ 2\n    var isPrimeCountMax3: Int = 2\n    var isPrimeCountMin3: Int = 2\n  \
    \  var isPrimeCountMax4: Int = 2\n    var isPrimeCountMin4: Int = 2\n    var isPrimeCountMax5:\
    \ Int = 2\n    var isPrimeCountMin5: Int = 2\n    var isPrimeCountMax6: Int =\
    \ 2\n    var isPrimeCountMin6: Int = 2\n    var isPrimeCountMax7: Int = 2\n  \
    \  var isPrimeCountMin7: Int = 2\n    var isPrimeCountMax8: Int = 2\n    var isPrimeCountMin8:\
    \ Int = 2\n    var isPrimeCountMax9: Int = 2\n    var isPrimeCountMin9: Int =\
    \ 2\n    var isPrimeCountMax10: Int = 2\n    var isPrimeCountMin10: Int = 2\n\
    \    var isPrimeCountMax11: Int = 2\n    var isPrimeCountMin11: Int = 2\n    var\
    \ isPrimeCountMax12: Int = 2\n    var isPrimeCountMin12: Int = 2\n    var isPrimeCountMax13:\
    \ Int = 2\n    var isPrimeCountMin13: Int = 2\n    var isPrimeCountMax14: Int\
    \ = 2\n    var isPrimeCountMin14: Int = 2\n    var isPrimeCountMax15: Int = 2\n\
    \    var isPrimeCountMin15: Int = 2\n    var isPrimeCountMax16: Int = 2\n    var\
    \ isPrimeCountMin16: Int = 2\n    var isPrimeCountMax17: Int = 2\n    var isPrimeCountMin17:\
    \ Int = 2\n    var isPrimeCountMax18: Int = 2\n    var isPrimeCountMin18: Int\
    \ = 2\n    var isPrimeCountMax19: Int = 2\n    var isPrimeCountMin19: Int = 2\n\
    \    var isPrimeCountMax20: Int = 2\n    var isPrimeCountMin20: Int = 2\n    var\
    \ isPrimeCountMax21: Int = ", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationNumber = 0\n    var\
    \ factorizationNumberCount = 0\n    var factorizationNumberIndex = 0\n    var\
    \ factorizationNumberSum = 0\n    var factorizationNumberSumCount = 0\n    var\
    \ factorizationNumberSumIndex = 0\n    var factorizationNumberSumCountIndex =\
    \ 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n    var factorizationNumberSumCountIndex\
    \ = 0\n    var factorizationNumberSumCountIndex = 0\n", "    var factors = [Int]()\n\
    \    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    for factor in factorization {\n        factors.append(factor)\n   \
    \     factorizationCount *= factor\n    }\n    \n    var factorizationCount2 =\
    \ 1\n    for factor in factorization {\n        factors.append(factor)\n     \
    \   factorizationCount2 *= factor\n    }\n    \n    if factorizationCount != factorizationCount2\
    \ {\n        print(\"factorizationCount != factorizationCount2\")\n    }\n   \
    \ \n    return factors", "    var factorization: [Int] = []\n    var factor =\
    \ 2\n    var remainder = n\n\n    while remainder > 1 {\n        if remainder\
    \ % factor == 0 {\n            factorization[factor-1] += 1\n            remainder\
    \ /= factor\n        } else {\n            factor += 1\n        }\n    }\n\n \
    \   return factorization", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeIndex2 = 0\n    var isPrimeCount2\
    \ = 0\n    var isPrimeIndex3 = 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4\
    \ = 0\n    var isPrimeCount4 = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5\
    \ = 0\n    var isPrimeIndex6 = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7\
    \ = 0\n    var isPrimeCount7 = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8\
    \ = 0\n    var isPrimeIndex9 = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10\
    \ = 0\n    var isPrimeCount10 = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11\
    \ = 0\n    var isPrimeIndex12 = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13\
    \ = 0\n    var isPrimeCount13 = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14\
    \ = 0\n    var isPrimeIndex15 = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16\
    \ = 0\n    var isPrimeCount16 = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17\
    \ = 0\n    var isPrimeIndex18 = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19\
    \ = 0\n    var isPrimeCount19 = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20\
    \ = 0\n    var isPrimeIndex21 = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22\
    \ = 0\n    var isPrimeCount22 = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23\
    \ = 0\n    var isPrimeIndex24 = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25\
    \ = 0\n    var isPrimeCount25 = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26\
    \ = 0\n    var isPrimeIndex27 = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28\
    \ = 0\n    var isPrimeCount28 = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29\
    \ = 0\n    var isPrimeIndex30 = 0\n    var isPrimeCount30 = 0\n    var isPrimeIndex31\
    \ = 0\n    var ", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var primeFactorizationIndex = 0\n    var factorizationIndex = 0\n \
    \   var primeFactorizationArray: [Int] = []\n    var factorizationArray: [Int]\
    \ = []\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorizationArrayIndex = 0\n    var factorizationArrayIndex\
    \ = 0\n    var primeFactorizationArrayCount = 0\n    var factorizationArrayCount\
    \ = 0\n    var primeFactorization", "    var factors = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeSum\
    \ = 0\n    var isPrimeSumCount = 0\n    var isPrimeSumCountMax = 0\n    var isPrimeSumCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMax = 0\n    var isPrimeSumCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMax = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMax = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMax = 0\n    var\
    \ isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMax = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMax = 0\n\
    \    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMax = 0\n    var\
    \ isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCount = 0\n    var\
    \ isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCount = 0\n    var\
    \ isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax = 0\n   \
    \ var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax = 0\n\
    \    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax =\
    \ 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCount\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMaxCountMax\
    \ = 0\n    var isPrimeSumCountMaxCountMaxCount", "    var factors = [Int]()\n\
    \    var i = 2\n    while i < n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factorization: [Int] = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var is",
  "    var factorization: [Int] = []\n    var factor: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int =\
    \ 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int\
    \ = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v:\
    \ Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var\
    \ z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n   \
    \ var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n\
    \    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int =\
    \ 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int\
    \ = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t:\
    \ Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var\
    \ x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n   \
    \ var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n\
    \    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int =\
    \ 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m: Int\
    \ = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r:\
    \ Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var\
    \ v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n   \
    \ var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n\
    \    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int =\
    \ 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int\
    \ = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p:\
    \ Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var\
    \ t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n   \
    \ var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n\
    \    var b: Int = 0\n    var c: Int = 0\n", "    var factors = [Int]()\n    var\
    \ i = 2\n    var j = 1\n    var k = 0\n    while i * j <= n {\n        if n %\
    \ i == 0 {\n            factors.append(i)\n            n /= i\n            j +=\
    \ 1\n        }\n        if n % j == 0 {\n            factors.append(j)\n     \
    \       n /= j\n            k += 1\n        }\n        i += 1\n        j += 1\n\
    \    }\n    if n != 1 {\n        factors.append(n)\n    }\n    return factors",
  "    var factorization: [Int] = []\n    var factor: Int = 0\n    var isPrime: Bool\
    \ = false\n    var isPrime2: Bool = false\n    var isPrime3: Bool = false\n  \
    \  var isPrime4: Bool = false\n    var isPrime5: Bool = false\n    var isPrime6:\
    \ Bool = false\n    var isPrime7: Bool = false\n    var isPrime8: Bool = false\n\
    \    var isPrime9: Bool = false\n    var isPrime10: Bool = false\n    var isPrime11:\
    \ Bool = false\n    var isPrime12: Bool = false\n    var isPrime13: Bool = false\n\
    \    var isPrime14: Bool = false\n    var isPrime15: Bool = false\n    var isPrime16:\
    \ Bool = false\n    var isPrime17: Bool = false\n    var isPrime18: Bool = false\n\
    \    var isPrime19: Bool = false\n    var isPrime20: Bool = false\n    var isPrime21:\
    \ Bool = false\n    var isPrime22: Bool = false\n    var isPrime23: Bool = false\n\
    \    var isPrime24: Bool = false\n    var isPrime25: Bool = false\n    var isPrime26:\
    \ Bool = false\n    var isPrime27: Bool = false\n    var isPrime28: Bool = false\n\
    \    var isPrime29: Bool = false\n    var isPrime30: Bool = false\n    var isPrime31:\
    \ Bool = false\n    var isPrime32: Bool = false\n    var isPrime33: Bool = false\n\
    \    var isPrime34: Bool = false\n    var isPrime35: Bool = false\n    var isPrime36:\
    \ Bool = false\n    var isPrime37: Bool = false\n    var isPrime38: Bool = false\n\
    \    var isPrime39: Bool = false\n    var isPrime40: Bool = false\n    var isPrime41:\
    \ Bool = false\n    var isPrime42: Bool = false\n    var isPrime43: Bool = false\n\
    \    var isPrime44: Bool = false\n    var isPrime45: Bool = false\n    var isPrime46:\
    \ Bool = false\n    var isPrime47: Bool = false\n    var isPrime48: Bool = false\n\
    \    var isPrime49: Bool = false\n    var isPrime50: Bool = false\n    var isPrime51:\
    \ Bool = false\n    var isPrime52: Bool = false\n    var isPrime53: Bool = false\n\
    \    var isPrime54: Bool = false\n    var isPrime55: Bool = false\n    var isPrime56:\
    \ Bool = false\n", "    var factors = [Int]()\n    var primes = [Int]()\n    var\
    \ primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors =\
    \ [Bool]()\n    var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax\
    \ = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMaxValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n  \
    \  var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = [Int]()\n    var isPrimeFactorsCountMaxValueValueValueIndex = [Int]()", " \
    \   var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        } else\
    \ {\n            i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex = 0\n    var isPrimeCount\
    \ = 0\n    var isPrimeCountIndex = 0\n    var isPrimeCountMax = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMin = 0\n    var isPrimeCountMinIndex = 0\n    var\
    \ isPrimeCountSum = 0\n    var isPrimeCountSumIndex = 0\n    var isPrimeCountProduct\
    \ = 0\n    var isPrimeCountProductIndex = 0\n    var isPrimeCountProductMax =\
    \ 0\n    var isPrimeCountProductMaxIndex = 0\n    var isPrimeCountProductMin =\
    \ 0\n    var isPrimeCountProductMinIndex = 0\n    var isPrimeCountProductSum =\
    \ 0\n    var isPrimeCountProductSumIndex = 0\n    var isPrimeCountProductProduct\
    \ = 0\n    var isPrimeCountProductProductIndex = 0\n    var isPrimeCountProductProductMax\
    \ = 0\n    var isPrimeCountProductProductMaxIndex = 0\n    var isPrimeCountProductProductMin\
    \ = 0\n    var isPrimeCountProductProductMinIndex = 0\n    var isPrimeCountProductProductSum\
    \ = 0\n    var isPrimeCountProductProductSumIndex = 0\n    var isPrimeCountProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductIndex = 0\n    var isPrimeCountProductProductProductMax\
    \ = 0\n    var isPrimeCountProductProductProductMaxIndex = 0\n    var isPrimeCountProductProductProductMin\
    \ = 0\n    var isPrimeCountProductProductProductMinIndex = 0\n    var isPrimeCountProductProductProductSum\
    \ = 0\n    var isPrimeCountProductProductProductSumIndex = 0\n    var isPrimeCountProductProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductProductIndex = 0\n    var isPrimeCountProductProductProductProductMax\
    \ = 0\n    var isPrimeCountProductProductProductProductMaxIndex = 0\n    var isPrimeCountProductProductProductProductMin\
    \ = 0\n    var isPrimeCountProductProductProductProductMinIndex = 0\n    var isPrimeCountProductProductProductProductSum\
    \ = 0\n    var isPrimeCountProductProductProductProductSumIndex = 0\n    var isPrimeCountProductProductProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductProductProductIndex = 0\n    var\
    \ isPrimeCountProductProductProductProductProductMax = 0\n    var isPrimeCountProductProductProductProductProductMaxIndex\
    \ = 0\n    var isPrimeCountProductProductProductProductProductMin = 0\n    var\
    \ isPrime", "    var factorization: [Int] = []\n    var primeFactorization: [Int]\
    \ = []\n    var primeFactorizationCount: Int = 0\n    var factorizationCount:\
    \ Int = 0\n    var factorizationSum: Int = 0\n    var factorizationSumCount: Int\
    \ = 0\n    var factorizationSumCount2: Int = 0\n    var factorizationSumCount3:\
    \ Int = 0\n    var factorizationSumCount4: Int = 0\n    var factorizationSumCount5:\
    \ Int = 0\n    var factorizationSumCount6: Int = 0\n    var factorizationSumCount7:\
    \ Int = 0\n    var factorizationSumCount8: Int = 0\n    var factorizationSumCount9:\
    \ Int = 0\n    var factorizationSumCount10: Int = 0\n    var factorizationSumCount11:\
    \ Int = 0\n    var factorizationSumCount12: Int = 0\n    var factorizationSumCount13:\
    \ Int = 0\n    var factorizationSumCount14: Int = 0\n    var factorizationSumCount15:\
    \ Int = 0\n    var factorizationSumCount16: Int = 0\n    var factorizationSumCount17:\
    \ Int = 0\n    var factorizationSumCount18: Int = 0\n    var factorizationSumCount19:\
    \ Int = 0\n    var factorizationSumCount20: Int = 0\n    var factorizationSumCount21:\
    \ Int = 0\n    var factorizationSumCount22: Int = 0\n    var factorizationSumCount23:\
    \ Int = 0\n    var factorizationSumCount24: Int = 0\n    var factorizationSumCount25:\
    \ Int = 0\n    var factorizationSumCount26: Int = 0\n    var factorizationSumCount27:\
    \ Int = 0\n    var factorizationSumCount28: Int = 0\n    var factorizationSumCount29:\
    \ Int = 0\n    var factorizationSumCount30: Int = 0\n    var factorizationSumCount31:\
    \ Int = 0\n    var factorizationSumCount32: Int = 0\n    var factorizationSumCount33:\
    \ Int = 0\n    var factorizationSumCount34: Int = 0\n    var factorizationSumCount35:\
    \ Int = 0\n    var factorizationSumCount36: Int = 0\n    var factorizationSumCount37:\
    \ Int = 0\n    var factorizationSumCount38: Int = 0\n    var factorizationSumCount39:\
    \ Int = 0\n    var factorizationSumCount40: Int = 0\n    var factorizationSumCount41:\
    \ Int = 0\n    var factorizationSumCount42: Int = 0\n    var factorizationSumCount43:\
    \ Int = 0\n    var factorizationSumCount44: Int = 0\n    var factorizationSumCount45:\
    \ Int = 0\n    var factorizationSumCount46: Int = 0\n    var factorizationSumCount47:\
    \ Int = 0\n    var factorizationSumCount48: ", "    var factors = [Int]()\n  \
    \  var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n != 1 {\n        factors.append(n)\n    }\n    return factors", "   \
    \ var factorization = [Int]()\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationMax = 0\n    var factorizationMin = Int()\n    var\
    \ factorizationMaxIndex = Int()\n    var factorizationMinIndex = Int()\n    var\
    \ factorizationMaxValue = Int()\n    var factorizationMinValue = Int()\n    var\
    \ factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex = Int()\n\
    \    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValueIndex\
    \ = Int()\n    var factorizationMaxValueIndex = Int()\n    var factorizationMinValue",
  "    var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        } else\
    \ {\n            i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factorization = [Int]()\n    var factorizationCount\
    \ = [Int]()\n    var factorizationIndex = 0\n    var factorizationMax = 0\n  \
    \  var factorizationMin = Int()\n    var factorizationSum = 0\n    var factorizationSumCount\
    \ = 0\n    var factorizationSumIndex = 0\n    var factorizationSumMax = 0\n  \
    \  var factorizationSumMin = Int()\n    var factorizationSumSum = 0\n    var factorizationSumSumCount\
    \ = 0\n    var factorizationSumSumIndex = 0\n    var factorizationSumSumMax =\
    \ 0\n    var factorizationSumSumMin = Int()\n    var factorizationSumSumSum =\
    \ 0\n    var factorizationSumSumSumCount = 0\n    var factorizationSumSumSumIndex\
    \ = 0\n    var factorizationSumSumSumMax = 0\n    var factorizationSumSumSumMin\
    \ = Int()\n    var factorizationSumSumSumSum = 0\n    var factorizationSumSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumMin = Int()\n    var factorizationSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumCount = 0\n    var factorizationSumSumSumSumIndex\
    \ = 0\n    var factorizationSumSumSumSumMax = 0\n    var factorizationSumSumSumSumMin\
    \ = Int()\n    var factorizationSumSumSumSumSum = 0\n    var factorizationSumSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumMin = Int()\n    var factorizationSumSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumCount = 0\n    var factorizationSumSumSumSumSumIndex\
    \ = 0\n    var factorizationSumSumSumSumMax = 0\n    var factorizationSumSumSumSumMin\
    \ = Int()\n    var factorizationSumSumSumSumSum = 0\n    var factorizationSumSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumMin = Int()\n    var factorizationSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumCount = 0\n    var factorizationSumSumSumSumSumIndex\
    \ = 0\n    var factorizationSumSumSumSumMax = 0\n    var factorizationSumSumSumSumMin\
    \ = Int()\n    var factorizationSumSumSumSumSum = 0\n    var factorizationSumSumSumSumSumCount\
    \ = 0\n    var factorizationSumSumSumSumSumIndex = 0\n    var factorizationSum",
  "    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n   \
    \ var primeFactorizationCount = 0\n    var primeFactorizationIndex = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorizationIndex = 0\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 0\n    var factorizationIndex = 0\n    var\
    \ factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationCount = 0\n    var\
    \ factorization", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    var factorizationCount = 1\n    var factorizationIndex = 0\n    var factorizationValue\
    \ = 1\n    var factorizationValueIndex = 0\n    var factorizationValueIndexMax\
    \ = factorization.count\n    var factorizationValueMax = factorization[factorizationValueIndex]\n\
    \    var factorizationValueMin = factorization[factorizationValueIndex - 1]\n\
    \    var factorizationValueMinIndex = factorization.index(of: factorizationValueMin)\n\
    \    var factorizationValueMaxIndex = factorization.index(of: factorizationValueMax)\n\
    \    var factorizationValueMinValue = factorization[factorizationValueMinIndex]\n\
    \    var factorizationValueMaxValue = factorization[factorizationValueMaxIndex]\n\
    \    var factorizationValueMinValueIndex = factorization.index(of: factorizationValueMinValue)\n\
    \    var factorizationValueMaxValueIndex = factorization.index(of: factorizationValueMaxValue)\n\
    \    var factorizationValueMinValueIndexMax = factorization.index(of: factorizationValueMinValueIndex)\n\
    \    var factorizationValueMaxValueIndexMax = factorization.index(of: factorizationValueMaxValueIndex)\n\
    \    var factorizationValueMinValueIndexMin = factorization.index(of: factorizationValueMinValueIndexMax)\n\
    \    var factorizationValueMaxValueIndexMin = factorization.index(of: factorizationValueMaxValueIndexMax)\n\
    \    var factorizationValueMinValueIndexMinMax = factorization.index(of: factorizationValueMinValueIndexMin)\n\
    \    var factorizationValueMaxValueIndexMinMax = factorization.index(of: factorizationValueMaxValueIndexMin)\n\
    \    var factorizationValueMinValueIndexMinMax = factorization.index(of: factorizationValueMinValueIndexMinMax)\n\
    \    var factorizationValueMaxValueIndexMinMax = factorization.index(of: factorizationValueMaxValueIndexMinMax)\n\
    \    var factorizationValueMinValueIndexMinMax = factorization.index(of: factorizationValueMinValueIndexMinMax)\n\
    \    var factorizationValueMaxValueIndexMinMax = factorization.index(of: factorizationValueMaxValueIndexMinMax)\n\
    \    var factorizationValueMinValueIndexMinMax = factorization.index(of: factorizationValueMinValueIndexMinMax)\n\
    \    var factorizationValueMaxValueIndexMinMax = factorization.index(of: factorizationValueMaxValueIndexMinMax)\n\
    \    var factorizationValueMinValueIndexMinMax = factorization.index(of: factorizationValueMinValueIndexMinMax)\n\
    \    var factorizationValueMaxValueIndexMinMax = factorization.index(of: factorizationValueMax",
  "    var factors: [Int] = []\n    var factorization: [Int] = []\n    var factorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = true\n    var isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeIndex = 0\n    var isPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex = 0\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrimeFactorization = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime =\
    \ true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrime", "    var factors = [Int]()\n   \
    \ var factorization = factorizationOfNumber(n)\n    var primeFactorization = factorizationOfNumber(n)\n\
    \    var primeFactorizationIndex = -1\n    var factorizationIndex = -1\n    var\
    \ factorizationIndex2 = -1\n    var factorizationIndex3 = -1\n    var factorizationIndex4\
    \ = -1\n    var factorizationIndex5 = -1\n    var factorizationIndex6 = -1\n \
    \   var factorizationIndex7 = -1\n    var factorizationIndex8 = -1\n    var factorizationIndex9\
    \ = -1\n    var factorizationIndex10 = -1\n    var factorizationIndex11 = -1\n\
    \    var factorizationIndex12 = -1\n    var factorizationIndex13 = -1\n    var\
    \ factorizationIndex14 = -1\n    var factorizationIndex15 = -1\n    var factorizationIndex16\
    \ = -1\n    var factorizationIndex17 = -1\n    var factorizationIndex18 = -1\n\
    \    var factorizationIndex19 = -1\n    var factorizationIndex20 = -1\n    var\
    \ factorizationIndex21 = -1\n    var factorizationIndex22 = -1\n    var factorizationIndex23\
    \ = -1\n    var factorizationIndex24 = -1\n    var factorizationIndex25 = -1\n\
    \    var factorizationIndex26 = -1\n    var factorizationIndex27 = -1\n    var\
    \ factorizationIndex28 = -1\n    var factorizationIndex29 = -1\n    var factorizationIndex30\
    \ = -1\n    var factorizationIndex31 = -1\n    var factorizationIndex32 = -1\n\
    \    var factorizationIndex33 = -1\n    var factorizationIndex34 = -1\n    var\
    \ factorizationIndex35 = -1\n    var factorizationIndex36 = -1\n    var factorizationIndex37\
    \ = -1\n    var factorizationIndex38 = -1\n    var factorizationIndex39 = -1\n\
    \    var factorizationIndex40 = -1\n    var factorizationIndex41 = -1\n    var\
    \ factorizationIndex42 = -1\n    var factorizationIndex43 = -1\n    var factorizationIndex44\
    \ = -1\n    var factorizationIndex45 = -1\n    var factorizationIndex46 = -1\n\
    \    var factorizationIndex47 = -1\n    var factorizationIndex48 = -1\n    var\
    \ factorizationIndex49 = -1\n    var factorizationIndex50 = -1\n    var factorizationIndex51\
    \ = -1\n    var factorizationIndex52 = -1\n    var factorizationIndex53 = -1\n\
    \    var factorizationIndex54 = -1\n    var factorizationIndex55 = -1\n    var\
    \ factorizationIndex56 = -1\n    var factorizationIndex57 = -1\n    var factorizationIndex58\
    \ = -1\n    var factorizationIndex59 = -1\n    var factorizationIndex60 = -1\n\
    \    var factorizationIndex61 = -1\n    var factorizationIndex62 = -1\n    var\
    \ factorizationIndex63 = -1\n    var factorizationIndex64 = -1\n    var factorizationIndex65\
    \ = -1\n    var factorizationIndex66 = -1\n    var factorization", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n    var\
    \ isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValue",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationSumOfFactors = 0\n    var factorizationSumOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactors = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactors =\
    \ 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSum", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    var factorizationCount = 1\n    for factor in\
    \ factorization {\n        if factorizationCount > factors.count {\n         \
    \   factors.append(factor)\n        } else {\n            for _ in 0..<factors[factors.count-1]\
    \ {\n                factors.append(factor)\n            }\n        }\n      \
    \  factorizationCount *= factor\n    }\n    return factors", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var factorizationNumber = 0\n    var factorizationNumberIndex = 0\n    var\
    \ factorizationNumberIndex2 = 0\n    var factorizationNumberIndex3 = 0\n    var\
    \ factorizationNumberIndex4 = 0\n    var factorizationNumberIndex5 = 0\n    var\
    \ factorizationNumberIndex6 = 0\n    var factorizationNumberIndex7 = 0\n    var\
    \ factorizationNumberIndex8 = 0\n    var factorizationNumberIndex9 = 0\n    var\
    \ factorizationNumberIndex10 = 0\n    var factorizationNumberIndex11 = 0\n   \
    \ var factorizationNumberIndex12 = 0\n    var factorizationNumberIndex13 = 0\n\
    \    var factorizationNumberIndex14 = 0\n    var factorizationNumberIndex15 =\
    \ 0\n    var factorizationNumberIndex16 = 0\n    var factorizationNumberIndex17\
    \ = 0\n    var factorizationNumberIndex18 = 0\n    var factorizationNumberIndex19\
    \ = 0\n    var factorizationNumberIndex20 = 0\n    var factorizationNumberIndex21\
    \ = 0\n    var factorizationNumberIndex22 = 0\n    var factorizationNumberIndex23\
    \ = 0\n    var factorizationNumberIndex24 = 0\n    var factorizationNumberIndex25\
    \ = 0\n    var factorizationNumberIndex26 = 0\n    var factorizationNumberIndex27\
    \ = 0\n    var factorizationNumberIndex28 = 0\n    var factorizationNumberIndex29\
    \ = 0\n    var factorizationNumberIndex30 = 0\n    var factorizationNumberIndex31\
    \ = 0\n    var factorizationNumberIndex32 = 0\n    var factorizationNumberIndex33\
    \ = 0\n    var factorizationNumberIndex34 = 0\n    var factorizationNumberIndex35\
    \ = 0\n    var factorizationNumberIndex36 = 0\n    var factorizationNumberIndex37\
    \ = 0\n    var factorizationNumberIndex38 = 0\n    var factorizationNumberIndex39\
    \ = 0\n    var factorizationNumberIndex40 = 0\n    var factorizationNumberIndex41\
    \ = 0\n    var factorizationNumberIndex42 = 0\n    var factorizationNumberIndex43\
    \ = 0\n    var factorizationNumberIndex44 = 0\n    var factorizationNumberIndex45\
    \ = 0\n    var factorizationNumberIndex46 = 0\n    var factorizationNumberIndex47\
    \ = 0\n    var factorizationNumberIndex48 = 0\n    var factorizationNumberIndex49\
    \ = 0\n    var factorizationNumberIndex50 = 0\n    var factorizationNumberIndex51\
    \ = 0\n    var factorizationNumberIndex52 = 0\n    var factorizationNumberIndex53\
    \ = 0\n    var factorizationNumberIndex54 = 0\n    var factorizationNumberIndex55\
    \ = 0\n    var factorizationNumberIndex56 = 0\n    var factorizationNumberIndex57\
    \ = 0\n    var factorizationNumberIndex58 = 0\n    var factorizationNumberIndex59\
    \ = 0\n    var factorizationNumberIndex60 = 0\n    var factorizationNumberIndex61\
    \ = 0\n", "    var factorization = [Int]()\n    var factorizationCount = 0\n \
    \   var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex =\
    \ 0\n    var isPrimeFactorization = false\n    var isPrimeFactorizationIndex =\
    \ 0\n    var isPrimeFactorizationCount = 1\n    var isPrimeFactorizationIsPrime\
    \ = true\n    var isPrimeFactorizationIsPrimeIndex = 0\n    var isPrimeFactorizationIsPrimeCount\
    \ = 1\n    var isPrimeFactorizationIsPrimeFactorization = false\n    var isPrimeFactorizationIsPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationIsPrimeFactorizationCount = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrime\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeIndex = 0\n\
    \    var isPrimeFactorizationIsPrimeFactorizationIsPrimeCount = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationCount\
    \ = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrime\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeIndex\
    \ = 0\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeCount\
    \ = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationCount\
    \ = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrime\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeIndex\
    \ = 0\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeCount\
    \ = 1\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorization\
    \ = false\n    var isPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIsPrimeFactorizationIndex",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var currentFactorization:\
    \ Int = 0\n    var currentFactorizationCount = 0\n    var currentFactorizationIndex:\
    \ Int = 0\n    var currentFactorizationIndexCount = 0\n    var currentFactorizationIndexCountLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimit: Int = 0\n    var currentFactorizationIndexLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n\
    \    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n\
    \    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n\
    \    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n\
    \    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n\
    \    var currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var\
    \ currentFactorizationIndexLimitLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n  \
    \  var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n  \
    \  var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit:\
    \ Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n  \
    \  var currentFactorizationIndexLimitLimitLimitLimit: Int = 0\n    var currentFactorizationIndexLimitLimitLimitLimit:\
    \ Int = 0\n    var ", "    var factors: [Int] = []\n    var i = 2\n    var factor\
    \ = 1\n    while i < n {\n        if n % i == 0 {\n            factor *= i\n \
    \           factors.append(factor)\n            n /= i\n        } else {\n   \
    \         i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationMax = Int(sqrt(Double(n)))\n    var factorizationMin\
    \ = factorizationMax\n    var factorizationSum = 0\n    var factorizationSumMax\
    \ = 0\n    var factorizationSumMin = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMinIndex = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorization", "    var factors = [Int]()\n    var i = 2\n    var p\
    \ = Int(n)\n    while p > 1 {\n        while p % i == 0 {\n            factors.append(i)\n\
    \            p /= i\n        }\n        i += 1\n    }\n    return factors", " \
    \   var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ primeFactorizationIndex = 0\n    var factorizationIndex = 0\n    var isPrime\
    \ = true\n    var isPrimeIndex = 0\n    var isPrimeFactorizationIndex = 0\n  \
    \  var isPrimeFactorization = true\n    var isPrimeFactorizationIndex2 = 0\n \
    \   var isPrimeFactorizationIndex3 = 0\n    var isPrimeFactorizationIndex4 = 0\n\
    \    var isPrimeFactorizationIndex5 = 0\n    var isPrimeFactorizationIndex6 =\
    \ 0\n    var isPrimeFactorizationIndex7 = 0\n    var isPrimeFactorizationIndex8\
    \ = 0\n    var isPrimeFactorizationIndex9 = 0\n    var isPrimeFactorizationIndex10\
    \ = 0\n    var isPrimeFactorizationIndex11 = 0\n    var isPrimeFactorizationIndex12\
    \ = 0\n    var isPrimeFactorizationIndex13 = 0\n    var isPrimeFactorizationIndex14\
    \ = 0\n    var isPrimeFactorizationIndex15 = 0\n    var isPrimeFactorizationIndex16\
    \ = 0\n    var isPrimeFactorizationIndex17 = 0\n    var isPrimeFactorizationIndex18\
    \ = 0\n    var isPrimeFactorizationIndex19 = 0\n    var isPrimeFactorizationIndex20\
    \ = 0\n    var isPrimeFactorizationIndex21 = 0\n    var isPrimeFactorizationIndex22\
    \ = 0\n    var isPrimeFactorizationIndex23 = 0\n    var isPrimeFactorizationIndex24\
    \ = 0\n    var isPrimeFactorizationIndex25 = 0\n    var isPrimeFactorizationIndex26\
    \ = 0\n    var isPrimeFactorizationIndex27 = 0\n    var isPrimeFactorizationIndex28\
    \ = 0\n    var isPrimeFactorizationIndex29 = 0\n    var isPrimeFactorizationIndex30\
    \ = 0\n    var isPrimeFactorizationIndex31 = 0\n    var isPrimeFactorizationIndex32\
    \ = 0\n    var isPrimeFactorizationIndex33 = 0\n    var isPrimeFactorizationIndex34\
    \ = 0\n    var isPrimeFactorizationIndex35 = 0\n    var isPrimeFactorizationIndex36\
    \ = 0\n    var isPrimeFactorizationIndex37 = 0\n    var isPrimeFactorizationIndex38\
    \ = 0\n    var isPrimeFactorizationIndex39 = 0\n    var isPrimeFactorizationIndex40\
    \ = 0\n    var isPrimeFactorizationIndex41 = 0\n    var isPrimeFactorizationIndex42\
    \ = 0\n    var isPrimeFactorizationIndex43 = 0\n    var isPrimeFactorizationIndex44\
    \ = 0\n    var isPrimeFactorizationIndex45 = 0\n    var isPrimeFactorizationIndex46\
    \ = 0\n    var is", "    var factors = [Int]()\n    var primes = [Int]()\n   \
    \ var i = 2\n    var j = 0\n    var k = 0\n    var temp = 0\n    var count = 0\n\
    \    var factorization = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeSet\
    \ = [Bool]()\n    var isPrimeSet2 = []\n    var isPrimeSet3 = []\n    var isPrimeSet4\
    \ = []\n    var isPrimeSet5 = []\n    var isPrimeSet6 = []\n    var isPrimeSet7\
    \ = []\n    var isPrimeSet8 = []\n    var isPrimeSet9 = []\n    var isPrimeSet10\
    \ = []\n    var isPrimeSet11 = []\n    var isPrimeSet12 = []\n    var isPrimeSet13\
    \ = []\n    var isPrimeSet14 = []\n    var isPrimeSet15 = []\n    var isPrimeSet16\
    \ = []\n    var isPrimeSet17 = []\n    var isPrimeSet18 = []\n    var isPrimeSet19\
    \ = []\n    var isPrimeSet20 = []\n    var isPrimeSet21 = []\n    var isPrimeSet22\
    \ = []\n    var isPrimeSet23 = []\n    var isPrimeSet24 = []\n    var isPrimeSet25\
    \ = []\n    var isPrimeSet26 = []\n    var isPrimeSet27 = []\n    var isPrimeSet28\
    \ = []\n    var isPrimeSet29 = []\n    var isPrimeSet30 = []\n    var isPrimeSet31\
    \ = []\n    var isPrimeSet32 = []\n    var isPrimeSet33 = []\n    var isPrimeSet34\
    \ = []\n    var isPrimeSet35 = []\n    var isPrimeSet36 = []\n    var isPrimeSet37\
    \ = []\n    var isPrimeSet38 = []\n    var isPrimeSet39 = []\n    var isPrimeSet40\
    \ = []\n    var isPrimeSet41 = []\n    var isPrimeSet42 = []\n    var isPrimeSet43\
    \ = []\n    var isPrimeSet44 = []\n    var isPrimeSet45 = []\n    var isPrimeSet46\
    \ = []\n    var isPrimeSet47 = []\n    var isPrimeSet48 = []\n    var isPrimeSet49\
    \ = []\n    var isPrimeSet50 = []\n    var isPrimeSet51 = []\n    var isPrimeSet52\
    \ = []\n    var isPrimeSet53 = []\n    var isPrimeSet54 = []\n    var isPrimeSet55\
    \ = []\n    var isPrimeSet56 = []\n    var is", "    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var factorizationCountMax = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax2 = factorizationCountMax\n    var factorizationCountMax3\
    \ = factorizationCountMax\n    var factorizationCountMax4 = factorizationCountMax\n\
    \    var factorizationCountMax5 = factorizationCountMax\n    var factorizationCountMax6\
    \ = factorizationCountMax\n    var factorizationCountMax7 = factorizationCountMax\n\
    \    var factorizationCountMax8 = factorizationCountMax\n    var factorizationCountMax9\
    \ = factorizationCountMax\n    var factorizationCountMax10 = factorizationCountMax\n\
    \    var factorizationCountMax11 = factorizationCountMax\n    var factorizationCountMax12\
    \ = factorizationCountMax\n    var factorizationCountMax13 = factorizationCountMax\n\
    \    var factorizationCountMax14 = factorizationCountMax\n    var factorizationCountMax15\
    \ = factorizationCountMax\n    var factorizationCountMax16 = factorizationCountMax\n\
    \    var factorizationCountMax17 = factorizationCountMax\n    var factorizationCountMax18\
    \ = factorizationCountMax\n    var factorizationCountMax19 = factorizationCountMax\n\
    \    var factorizationCountMax20 = factorizationCountMax\n    var factorizationCountMax21\
    \ = factorizationCountMax\n    var factorizationCountMax22 = factorizationCountMax\n\
    \    var factorizationCountMax23 = factorizationCountMax\n    var factorizationCountMax24\
    \ = factorizationCountMax\n    var factorizationCountMax25 = factorizationCountMax\n\
    \    var factorizationCountMax26 = factorizationCountMax\n    var factorizationCountMax27\
    \ = factorizationCountMax\n    var factorizationCountMax28 = factorizationCountMax\n\
    \    var factorizationCountMax29 = factorizationCountMax\n    var factorizationCountMax30\
    \ = factorizationCountMax\n    var factorizationCountMax31 = factorizationCountMax\n\
    \    var factorizationCountMax32 = factorizationCountMax\n    var factorizationCountMax33\
    \ = factorizationCountMax\n    var factorizationCountMax34 = factorizationCountMax\n\
    \    var factorizationCountMax35 = factorizationCountMax\n    var factorizationCountMax36\
    \ = factorizationCountMax\n    var factorizationCountMax37 = factorizationCountMax\n\
    \    var factorizationCountMax38 = factorizationCountMax\n    var factorizationCountMax39\
    \ = factorizationCountMax\n    var factorizationCountMax40 = factorizationCountMax\n\
    \    var factorizationCountMax41 = factorizationCountMax\n    var factorization",
  "    var factors = [Int]()\n    var factorization = [Int]()\n    var currentFactorization\
    \ = [Int]()\n    var currentFactorizationIndex = 0\n    var currentFactorizationValue\
    \ = 1\n    var currentFactorizationValueIndex = 0\n    var currentFactorizationValueIndexMax\
    \ = 0\n    var currentFactorizationValueIndexMaxIndex = 0\n    var currentFactorizationValueIndexMin\
    \ = 0\n    var currentFactorizationValueIndexMinIndex = 0\n    var currentFactorizationValueIndexMaxValue\
    \ = 0\n    var currentFactorizationValueIndexMinValue = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var currentFactorizationValueIndexMinValueIndex = 0\n    var currentFactorizationValueIndexMaxValueIndex\
    \ = 0\n    var ", "    var factors = [Int]()\n    var i = 2\n    while i < n {\n\
    \        if n % i == 0 {\n            factors.append(i)\n            n /= i\n\
    \        } else {\n            i += 1\n        }\n    }\n    if n > 1 {\n    \
    \    factors.append(n)\n    }\n    return factors", "    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var is",
  "    var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ factorizationSum = 0\n    var factorizationSumCount = 0\n    var factorizationSumCountMax\
    \ = 0\n    var factorizationSumCountMaxIndex = 0\n    var factorizationSumCountMaxIndex2\
    \ = 0\n    var factorizationSumCountMaxIndex3 = 0\n    var factorizationSumCountMaxIndex4\
    \ = 0\n    var factorizationSumCountMaxIndex5 = 0\n    var factorizationSumCountMaxIndex6\
    \ = 0\n    var factorizationSumCountMaxIndex7 = 0\n    var factorizationSumCountMaxIndex8\
    \ = 0\n    var factorizationSumCountMaxIndex9 = 0\n    var factorizationSumCountMaxIndex10\
    \ = 0\n    var factorizationSumCountMaxIndex11 = 0\n    var factorizationSumCountMaxIndex12\
    \ = 0\n    var factorizationSumCountMaxIndex13 = 0\n    var factorizationSumCountMaxIndex14\
    \ = 0\n    var factorizationSumCountMaxIndex15 = 0\n    var factorizationSumCountMaxIndex16\
    \ = 0\n    var factorizationSumCountMaxIndex17 = 0\n    var factorizationSumCountMaxIndex18\
    \ = 0\n    var factorizationSumCountMaxIndex19 = 0\n    var factorizationSumCountMaxIndex20\
    \ = 0\n    var factorizationSumCountMaxIndex21 = 0\n    var factorizationSumCountMaxIndex22\
    \ = 0\n    var factorizationSumCountMaxIndex23 = 0\n    var factorizationSumCountMaxIndex24\
    \ = 0\n    var factorizationSumCountMaxIndex25 = 0\n    var factorizationSumCountMaxIndex26\
    \ = 0\n    var factorizationSumCountMaxIndex27 = 0\n    var factorizationSumCountMaxIndex28\
    \ = 0\n    var factorizationSumCountMaxIndex29 = 0\n    var factorizationSumCountMaxIndex30\
    \ = 0\n    var factorizationSumCountMaxIndex31 = 0\n    var factorizationSumCountMaxIndex32\
    \ = 0\n    var factorizationSumCountMaxIndex33 = 0\n    var factorizationSumCountMaxIndex34\
    \ = 0\n    var factorizationSumCountMaxIndex35 = 0\n    var factorizationSumCountMaxIndex36\
    \ = 0\n    var factorizationSumCountMaxIndex37 = 0\n    var factorizationSumCountMaxIndex38\
    \ = 0\n    var factorizationSumCountMaxIndex39 = 0\n    var factorizationSumCountMaxIndex40\
    \ = 0\n    var factorizationSumCountMaxIndex41 = 0\n    var factorizationSumCountMaxIndex42\
    \ = 0\n    var factorizationSumCountMaxIndex43 = 0\n    var factorizationSumCountMaxIndex44\
    \ = 0\n    var factorizationSumCountMaxIndex45 = 0\n    var factorizationSumCountMaxIndex46\
    \ = 0\n    var factorizationSumCountMaxIndex47 = 0\n    var factorizationSumCount",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationSumOfFactors = 0\n    var factorizationSumOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactors = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactors =\
    \ 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSum", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    var factorizationCount = 1\n    var factorizationIndex\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSumOfFactorization =\
    \ 0\n    var factorizationSumOfFactorizationOfFactorization = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorizationSumOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorizationOfFactorization\
    \ = 0\n    var factorization", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    var factorizationCount = 1\n    for factor in\
    \ factorization {\n        if factorizationCount > 1 {\n            factors.append(factor)\n\
    \        }\n        factorizationCount *= factor\n    }\n    return factors",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationIndexMax = 0\n    var factorizationIndexMaxCount =\
    \ 0\n    var factorizationIndexMaxCountIndex = 0\n    var factorizationIndexMaxCountIndexMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCount = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndexMaxCountIndexMaxCountMax = 0\n    var factorizationIndexMaxCountIndexMaxCountMax\
    \ = 0\n    var factorizationIndex", "    var factors = [Int]()\n    var primes\
    \ = [Int]()\n    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var\
    \ isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax\
    \ = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMaxValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValue", "    var factors = [Int]()\n\
    \    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    for factor in factorization {\n        if factor != 1 {\n         \
    \   factors.append(factor)\n            factorizationCount *= factor\n       \
    \ }\n    }\n    if factorizationCount != 1 {\n        factors.append(factorizationCount)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSum2 = 0\n    var factorizationSum3\
    \ = 0\n    var factorizationSum4 = 0\n    var factorizationSum5 = 0\n    var factorizationSum6\
    \ = 0\n    var factorizationSum7 = 0\n    var factorizationSum8 = 0\n    var factorizationSum9\
    \ = 0\n    var factorizationSum10 = 0\n    var factorizationSum11 = 0\n    var\
    \ factorizationSum12 = 0\n    var factorizationSum13 = 0\n    var factorizationSum14\
    \ = 0\n    var factorizationSum15 = 0\n    var factorizationSum16 = 0\n    var\
    \ factorizationSum17 = 0\n    var factorizationSum18 = 0\n    var factorizationSum19\
    \ = 0\n    var factorizationSum20 = 0\n    var factorizationSum21 = 0\n    var\
    \ factorizationSum22 = 0\n    var factorizationSum23 = 0\n    var factorizationSum24\
    \ = 0\n    var factorizationSum25 = 0\n    var factorizationSum26 = 0\n    var\
    \ factorizationSum27 = 0\n    var factorizationSum28 = 0\n    var factorizationSum29\
    \ = 0\n    var factorizationSum30 = 0\n    var factorizationSum31 = 0\n    var\
    \ factorizationSum32 = 0\n    var factorizationSum33 = 0\n    var factorizationSum34\
    \ = 0\n    var factorizationSum35 = 0\n    var factorizationSum36 = 0\n    var\
    \ factorizationSum37 = 0\n    var factorizationSum38 = 0\n    var factorizationSum39\
    \ = 0\n    var factorizationSum40 = 0\n    var factorizationSum41 = 0\n    var\
    \ factorizationSum42 = 0\n    var factorizationSum43 = 0\n    var factorizationSum44\
    \ = 0\n    var factorizationSum45 = 0\n    var factorizationSum46 = 0\n    var\
    \ factorizationSum47 = 0\n    var factorizationSum48 = 0\n    var factorizationSum49\
    \ = 0\n    var factorizationSum50 = 0\n    var factorizationSum51 = 0\n    var\
    \ factorizationSum52 = 0\n    var factorizationSum53 = 0\n    var factorizationSum54\
    \ = 0\n    var factorizationSum55 = 0\n    var factorizationSum56 = 0\n    var\
    \ factorizationSum57 = 0\n    var factorizationSum58 = 0\n    var factorizationSum59\
    \ = 0\n    var factorizationSum60 = 0\n    var factorizationSum61 = 0\n    var\
    \ factorizationSum62 = 0\n    var factorizationSum63 = 0\n    var factorizationSum64\
    \ = 0\n    var factorizationSum65 = 0\n    var factorizationSum66 = 0\n    var\
    \ factorizationSum67 = 0\n    var factorizationSum68 = 0\n    var factorizationSum69\
    \ = 0\n    var factorizationSum70 = 0\n    var factorizationSum71 = 0\n    var\
    \ factorization", "    var factors = [Int]()\n    var primes = [Int]()\n    var\
    \ primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors =\
    \ [Bool]()\n    var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax\
    \ = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n    var isPrimeFactorsCountMin\
    \ = Int()\n    var isPrimeFactorsCountMinIndex = Int()\n    var isPrimeFactorsCountSum\
    \ = Int()\n    var isPrimeFactorsCountSumIndex = Int()\n    var isPrimeFactorsCountSumMax\
    \ = Int()\n    var isPrimeFactorsCountSumMaxIndex = Int()\n    var isPrimeFactorsCountSumMin\
    \ = Int()\n    var isPrimeFactorsCountSumMinIndex = Int()\n    var isPrimeFactorsCountSumSum\
    \ = Int()\n    var isPrimeFactorsCountSumSumIndex = Int()\n    var isPrimeFactorsCountSumSumMax\
    \ = Int()\n    var isPrimeFactorsCountSumSumMaxIndex = Int()\n    var isPrimeFactorsCountSumSumMin\
    \ = Int()\n    var isPrimeFactorsCountSumSumMinIndex = Int()\n    var isPrimeFactorsCountSumSumSum\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumIndex = Int()\n    var isPrimeFactorsCountSumSumSumMax\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumMaxIndex = Int()\n    var isPrimeFactorsCountSumSumSumMin\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumMinIndex = Int()\n    var isPrimeFactorsCountSumSumSumSum\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumSumIndex = Int()\n    var isPrimeFactorsCountSumSumSumSumMax\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumSumMaxIndex = Int()\n    var isPrimeFactorsCountSumSumSumSumMin\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumSumMinIndex = Int()\n    var isPrimeFactorsCountSumSumSumSumSum\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumSumSumIndex = Int()\n    var isPrimeFactorsCountSumSumSumSumSumMax\
    \ = Int()\n    var isPrimeFactorsCountSumSumSumSumSumMaxIndex = Int()\n    var\
    \ isPrimeFactor", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    var factorizationCount = 1\n    for factor in factorization {\n        if\
    \ factorizationCount > factors.count {\n            factors.append(factor)\n \
    \       } else {\n            factors[factors.count - 1] = factor\n        }\n\
    \        factorizationCount *= factor\n    }\n    return factors", "    var factors\
    \ = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            factors.append(i)\n            n /= i\n        } else {\n       \
    \     i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n  \
    \  }\n    return factors", "    var factors: [Int] = []\n    var factor: Int =\
    \ 0\n    var isPrime: Bool = false\n    var isPrime2: Bool = false\n    var isPrime3:\
    \ Bool = false\n    var isPrime4: Bool = false\n    var isPrime5: Bool = false\n\
    \    var isPrime6: Bool = false\n    var isPrime7: Bool = false\n    var isPrime8:\
    \ Bool = false\n    var isPrime9: Bool = false\n    var isPrime10: Bool = false\n\
    \    var isPrime11: Bool = false\n    var isPrime12: Bool = false\n    var isPrime13:\
    \ Bool = false\n    var isPrime14: Bool = false\n    var isPrime15: Bool = false\n\
    \    var isPrime16: Bool = false\n    var isPrime17: Bool = false\n    var isPrime18:\
    \ Bool = false\n    var isPrime19: Bool = false\n    var isPrime20: Bool = false\n\
    \    var isPrime21: Bool = false\n    var isPrime22: Bool = false\n    var isPrime23:\
    \ Bool = false\n    var isPrime24: Bool = false\n    var isPrime25: Bool = false\n\
    \    var isPrime26: Bool = false\n    var isPrime27: Bool = false\n    var isPrime28:\
    \ Bool = false\n    var isPrime29: Bool = false\n    var isPrime30: Bool = false\n\
    \    var isPrime31: Bool = false\n    var isPrime32: Bool = false\n    var isPrime33:\
    \ Bool = false\n    var isPrime34: Bool = false\n    var isPrime35: Bool = false\n\
    \    var isPrime36: Bool = false\n    var isPrime37: Bool = false\n    var isPrime38:\
    \ Bool = false\n    var isPrime39: Bool = false\n    var isPrime40: Bool = false\n\
    \    var isPrime41: Bool = false\n    var isPrime42: Bool = false\n    var isPrime43:\
    \ Bool = false\n    var isPrime44: Bool = false\n    var isPrime45: Bool = false\n\
    \    var isPrime46: Bool = false\n    var isPrime47: Bool = false\n    var isPrime48:\
    \ Bool = false\n    var isPrime49: Bool = false\n    var isPrime50: Bool = false\n\
    \    var isPrime51: Bool = false\n    var isPrime52: Bool = false\n    var isPrime53:\
    \ Bool = false\n    var isPrime54: Bool = false\n    var isPrime55: Bool = false\n\
    \    var isPrime56: Bool = false\n    var ", "    var factorization = [Int]()\n\
    \    var factorizationCount = [Int]()\n    var factorizationIndex = 0\n    var\
    \ isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeCount = 0\n    var\
    \ isPrimeIndex2 = 0\n    var isPrimeCount2 = 0\n    var isPrimeIndex3 = 0\n  \
    \  var isPrimeCount3 = 0\n    var isPrimeIndex4 = 0\n    var isPrimeCount4 = 0\n\
    \    var isPrimeIndex5 = 0\n    var isPrimeCount5 = 0\n    var isPrimeIndex6 =\
    \ 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7 = 0\n    var isPrimeCount7\
    \ = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8 = 0\n    var isPrimeIndex9\
    \ = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10 = 0\n    var isPrimeCount10\
    \ = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11 = 0\n    var isPrimeIndex12\
    \ = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13 = 0\n    var isPrimeCount13\
    \ = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14 = 0\n    var isPrimeIndex15\
    \ = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16 = 0\n    var isPrimeCount16\
    \ = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17 = 0\n    var isPrimeIndex18\
    \ = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19 = 0\n    var isPrimeCount19\
    \ = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20 = 0\n    var isPrimeIndex21\
    \ = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22 = 0\n    var isPrimeCount22\
    \ = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23 = 0\n    var isPrimeIndex24\
    \ = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25 = 0\n    var isPrimeCount25\
    \ = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26 = 0\n    var isPrimeIndex27\
    \ = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28 = 0\n    var isPrimeCount28\
    \ = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29 = 0\n    var isPrimeIndex30\
    \ = 0\n    var isPrimeCount30 = 0\n    var isPrimeIndex", "    var factors = [Int]()\n\
    \    var i = 2\n    var j = 0\n    while i < n {\n        if n % i == 0 {\n  \
    \          factors.append(i)\n            n /= i\n        } else {\n         \
    \   i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n    }\n\
    \    return factors", "    var factorization = [Int]()\n    var primeFactorization\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeCountMax\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax2 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax3 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax4\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax5 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax6 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax7\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax8 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax9 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax10\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax11 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax12 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax13\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax14 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax15 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax16\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax17 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax18 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax19\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax20 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax21 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax22\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax23 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax24 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax25\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax26 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax27 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax28\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax29 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax30 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax31\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax32 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax33 = Int(ceil(sqrt(", "    var factorization = [Int]()\n\
    \    var factorizationCount = 1\n    var factorizationIndex = 0\n    var factorizationNumber\
    \ = 0\n    var factorizationNumberCount = 0\n    var factorizationNumberIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n", "    var factors: [Int] =\
    \ []\n    var factorization: [Int] = []\n    var primeFactorization: [Int] = []\n\
    \    var primeFactorizationCount = 0\n    var isPrime: Bool = false\n    var isPrimeCount\
    \ = 0\n    var isPrimePrime: Bool = false\n    var isPrimePrimeCount = 0\n   \
    \ var isPrimePrimePrime: Bool = false\n    var isPrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePri", "    var factors = [Int]()\n\
    \    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        }\n        i += 1\n    }\n    if n > 1 {\n      \
    \  factors.append(n)\n    }\n    return factors", "    var factors = [Int]()\n\
    \    var primes = [Int]()\n    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n  \
    \  var isPrimeFactorsCountMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex2 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex3 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex4 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex5 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex6 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex7 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex8 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex9 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex10 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex11 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex12 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex13 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex14 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex15 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex16 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex17 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex18 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex19 = Int(arc4random_uniform(UInt", "    var\
    \ factorization: [Int] = []\n    var factorizationCount = 0\n    var isPrime =\
    \ true\n    var isDivisible = false\n    var isFactor = false\n    var isPrimeFactor\
    \ = false\n    var isPrimeDivisible = false\n    var isPrimeDivisibleFactor =\
    \ false\n    var isPrimeDivisibleFactor2 = false\n    var isPrimeDivisibleFactor3\
    \ = false\n    var isPrimeDivisibleFactor4 = false\n    var isPrimeDivisibleFactor5\
    \ = false\n    var isPrimeDivisibleFactor6 = false\n    var isPrimeDivisibleFactor7\
    \ = false\n    var isPrimeDivisibleFactor8 = false\n    var isPrimeDivisibleFactor9\
    \ = false\n    var isPrimeDivisibleFactor10 = false\n    var isPrimeDivisibleFactor11\
    \ = false\n    var isPrimeDivisibleFactor12 = false\n    var isPrimeDivisibleFactor13\
    \ = false\n    var isPrimeDivisibleFactor14 = false\n    var isPrimeDivisibleFactor15\
    \ = false\n    var isPrimeDivisibleFactor16 = false\n    var isPrimeDivisibleFactor17\
    \ = false\n    var isPrimeDivisibleFactor18 = false\n    var isPrimeDivisibleFactor19\
    \ = false\n    var isPrimeDivisibleFactor20 = false\n    var isPrimeDivisibleFactor21\
    \ = false\n    var isPrimeDivisibleFactor22 = false\n    var isPrimeDivisibleFactor23\
    \ = false\n    var isPrimeDivisibleFactor24 = false\n    var isPrimeDivisibleFactor25\
    \ = false\n    var isPrimeDivisibleFactor26 = false\n    var isPrimeDivisibleFactor27\
    \ = false\n    var isPrimeDivisibleFactor28 = false\n    var isPrimeDivisibleFactor29\
    \ = false\n    var isPrimeDivisibleFactor30 = false\n    var isPrimeDivisibleFactor31\
    \ = false\n    var isPrimeDivisibleFactor32 = false\n    var isPrimeDivisibleFactor33\
    \ = false\n    var isPrimeDivisibleFactor34 = false\n    var isPrimeDivisibleFactor35\
    \ = false\n    var isPrimeDivisibleFactor36 = false\n    var isPrimeDivisibleFactor37\
    \ = false\n    var isPrimeDivisibleFactor38 = false\n    var isPrimeDivisibleFactor39\
    \ = false\n    var isPrimeDivisibleFactor40 = false\n    var isPrimeDivisibleFactor41\
    \ = false\n    var isPrimeDivisibleFactor42 = false\n    var isPrimeDivisibleFactor43\
    \ = false\n    var isPrimeDivisibleFactor44 = false\n    var isPrimeDivisibleFactor45\
    \ = false\n    var isPrimeDivisibleFactor46 = false\n    var is", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount\
    \ = 0\n    var isPrimeSum = 0\n    var isPrimeSumCount = 0\n    var isPrimeSumSum\
    \ = 0\n    var isPrimeSumSumCount = 0\n    var isPrimeSumSumSum = 0\n    var isPrimeSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSum = 0\n    var isPrimeSumSumSumSumCount = 0\n\
    \    var isPrimeSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumCount = 0\n\
    \    var isPrimeSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumCount =\
    \ 0\n    var isPrimeSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var isPrimeSumSumSumSumSumSumSum = 0\n    var isPrimeSumSumSumSumSumSumCount\
    \ = 0\n    var is", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationMax = Int(sqrt(Double(n)))\n\
    \    var factorizationMaxIndex = 0\n    var factorizationMin = Int(sqrt(Double(n)))\n\
    \    var factorizationMinIndex = 0\n    var factorizationSum = 0\n    var factorizationSumIndex\
    \ = 0\n    var factorizationSumMax = 0\n    var factorizationSumMaxIndex = 0\n\
    \    var factorizationSumMin = 0\n    var factorizationSumMinIndex = 0\n    var\
    \ factorizationSumSum = 0\n    var factorizationSumSumIndex = 0\n    var factorizationSumSumMax\
    \ = 0\n    var factorizationSumSumMaxIndex = 0\n    var factorizationSumSumMin\
    \ = 0\n    var factorizationSumSumMinIndex = 0\n    var factorizationSumSumSum\
    \ = 0\n    var factorizationSumSumSumIndex = 0\n    var factorizationSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumMaxIndex = 0\n    var factorizationSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumMinIndex = 0\n    var factorizationSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumMaxIndex = 0\n    var factorizationSumSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumSumMinIndex = 0\n    var factorizationSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumSumMaxIndex = 0\n    var factorizationSumSumSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumSumSumMinIndex = 0\n    var factorizationSumSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumSumMaxIndex = 0\n    var factorizationSumSumSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumSumSumMinIndex = 0\n    var factorizationSumSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumSumSumMax\
    \ = 0\n    var factorizationSumSumSumSumSumSumMaxIndex = 0\n    var factorizationSumSumSumSumSumSumMin\
    \ = 0\n    var factorizationSumSumSumSumSumSumMinIndex = 0\n    var factorizationSumSumSumSumSumSumSum\
    \ = 0\n    var factorizationSumSumSumSumSumSumIndex = 0\n    var factorizationSumSumSumSumSumSumMax\
    \ = 0\n    var factorizationSumSum", "    var factorization: [Int] = []\n    var\
    \ primeFactorization: [Int] = []\n    var primeFactorizationCount = 0\n    var\
    \ primeFactorizationIndex = 0\n    var primeFactorizationIndexCount = 0\n    var\
    \ primeFactorizationIndexCountMax = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax2\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax3 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax4 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax5 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax6\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax7 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax8 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax9 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax10\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax11 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax12 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax13 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax14\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax15 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax16 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax17 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax18\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax19 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax20 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax21 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax22\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax23 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax24 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax25 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax26\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax27 = Int(ceil(sqrt(Double(n))))\n\
    \    var primeFactorizationIndexCountMax28 = Int(ceil(sqrt(Double(n))))\n    var\
    \ primeFactorizationIndexCountMax29 = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax30\
    \ = Int(ceil(sqrt(Double(n))))\n    var primeFactorizationIndexCountMax", "  \
    \  var factorization = [Int]()\n    var factorizationCount = [Int]()\n    var\
    \ factorizationIndex = 0\n    var factorizationIndexMax = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax2 = Int(sqrt(Double(n)))\n    var factorizationIndexMax3\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax4 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax5 = Int(sqrt(Double(n)))\n    var factorizationIndexMax6\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax7 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax8 = Int(sqrt(Double(n)))\n    var factorizationIndexMax9\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax10 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax11 = Int(sqrt(Double(n)))\n    var factorizationIndexMax12\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax13 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax14 = Int(sqrt(Double(n)))\n    var factorizationIndexMax15\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax16 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax17 = Int(sqrt(Double(n)))\n    var factorizationIndexMax18\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax19 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax20 = Int(sqrt(Double(n)))\n    var factorizationIndexMax21\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax22 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax23 = Int(sqrt(Double(n)))\n    var factorizationIndexMax24\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax25 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax26 = Int(sqrt(Double(n)))\n    var factorizationIndexMax27\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax28 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax29 = Int(sqrt(Double(n)))\n    var factorizationIndexMax30\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax31 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax32 = Int(sqrt(Double(n)))\n    var factorizationIndexMax33\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax34 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax35 = Int(sqrt(Double(n)))\n    var factorizationIndexMax36\
    \ = Int(sqrt(Double(n)))\n    var factorizationIndexMax37 = Int(sqrt(Double(n)))\n\
    \    var factorizationIndexMax38 = Int(sqrt(Double(n)))\n    var factorizationIndexMax39\
    \ = ", "    var factorization: [Int] = []\n    var factorizationCount = 0\n  \
    \  var factorizationIndex = 0\n    var factorizationNumber = 0\n    var factorizationNumberIndex\
    \ = 0\n    var factorizationNumberIndex2 = 0\n    var factorizationNumberIndex3\
    \ = 0\n    var factorizationNumberIndex4 = 0\n    var factorizationNumberIndex5\
    \ = 0\n    var factorizationNumberIndex6 = 0\n    var factorizationNumberIndex7\
    \ = 0\n    var factorizationNumberIndex8 = 0\n    var factorizationNumberIndex9\
    \ = 0\n    var factorizationNumberIndex10 = 0\n    var factorizationNumberIndex11\
    \ = 0\n    var factorizationNumberIndex12 = 0\n    var factorizationNumberIndex13\
    \ = 0\n    var factorizationNumberIndex14 = 0\n    var factorizationNumberIndex15\
    \ = 0\n    var factorizationNumberIndex16 = 0\n    var factorizationNumberIndex17\
    \ = 0\n    var factorizationNumberIndex18 = 0\n    var factorizationNumberIndex19\
    \ = 0\n    var factorizationNumberIndex20 = 0\n    var factorizationNumberIndex21\
    \ = 0\n    var factorizationNumberIndex22 = 0\n    var factorizationNumberIndex23\
    \ = 0\n    var factorizationNumberIndex24 = 0\n    var factorizationNumberIndex25\
    \ = 0\n    var factorizationNumberIndex26 = 0\n    var factorizationNumberIndex27\
    \ = 0\n    var factorizationNumberIndex28 = 0\n    var factorizationNumberIndex29\
    \ = 0\n    var factorizationNumberIndex30 = 0\n    var factorizationNumberIndex31\
    \ = 0\n    var factorizationNumberIndex32 = 0\n    var factorizationNumberIndex33\
    \ = 0\n    var factorizationNumberIndex34 = 0\n    var factorizationNumberIndex35\
    \ = 0\n    var factorizationNumberIndex36 = 0\n    var factorizationNumberIndex37\
    \ = 0\n    var factorizationNumberIndex38 = 0\n    var factorizationNumberIndex39\
    \ = 0\n    var factorizationNumberIndex40 = 0\n    var factorizationNumberIndex41\
    \ = 0\n    var factorizationNumberIndex42 = 0\n    var factorizationNumberIndex43\
    \ = 0\n    var factorizationNumberIndex44 = 0\n    var factorizationNumberIndex45\
    \ = 0\n    var factorizationNumberIndex46 = 0\n    var factorizationNumberIndex47\
    \ = 0\n    var factorizationNumberIndex48 = 0\n    var factorizationNumberIndex49\
    \ = 0\n    var factorizationNumberIndex50 = 0\n    var factorizationNumberIndex51\
    \ = 0\n    var factorizationNumberIndex52 = 0\n    var factorizationNumberIndex53\
    \ = 0\n    var factorizationNumberIndex54 = 0\n    var factorizationNumberIndex55\
    \ = 0\n    var factorizationNumberIndex56 = 0\n    var factorizationNumberIndex57\
    \ = 0\n    var factorizationNumberIndex58 = 0\n    var factorizationNumberIndex59\
    \ = 0\n    var factorizationNumberIndex60 = 0\n    var factorizationNumberIndex61\
    \ = 0\n", "    var factorization: [Int] = []\n    var factor = 2\n    var i =\
    \ 2\n    while i <= n {\n        while n % i == 0 {\n            factorization.append(i)\n\
    \            n /= i\n        }\n        i += 1\n    }\n    if n > 1 {\n      \
    \  factorization.append(n)\n    }\n    return factorization", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    for factor\
    \ in factorization {\n        if factors.contains(factor) {\n            continue\n\
    \        }\n        factors.append(factor)\n    }\n    return factors", "    var\
    \ factors: [Int] = []\n    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeIndex2 = 0\n    var isPrimeCount2\
    \ = 0\n    var isPrimeIndex3 = 0\n    var isPrimeCount3 = 0\n    var isPrimeIndex4\
    \ = 0\n    var isPrimeCount4 = 0\n    var isPrimeIndex5 = 0\n    var isPrimeCount5\
    \ = 0\n    var isPrimeIndex6 = 0\n    var isPrimeCount6 = 0\n    var isPrimeIndex7\
    \ = 0\n    var isPrimeCount7 = 0\n    var isPrimeIndex8 = 0\n    var isPrimeCount8\
    \ = 0\n    var isPrimeIndex9 = 0\n    var isPrimeCount9 = 0\n    var isPrimeIndex10\
    \ = 0\n    var isPrimeCount10 = 0\n    var isPrimeIndex11 = 0\n    var isPrimeCount11\
    \ = 0\n    var isPrimeIndex12 = 0\n    var isPrimeCount12 = 0\n    var isPrimeIndex13\
    \ = 0\n    var isPrimeCount13 = 0\n    var isPrimeIndex14 = 0\n    var isPrimeCount14\
    \ = 0\n    var isPrimeIndex15 = 0\n    var isPrimeCount15 = 0\n    var isPrimeIndex16\
    \ = 0\n    var isPrimeCount16 = 0\n    var isPrimeIndex17 = 0\n    var isPrimeCount17\
    \ = 0\n    var isPrimeIndex18 = 0\n    var isPrimeCount18 = 0\n    var isPrimeIndex19\
    \ = 0\n    var isPrimeCount19 = 0\n    var isPrimeIndex20 = 0\n    var isPrimeCount20\
    \ = 0\n    var isPrimeIndex21 = 0\n    var isPrimeCount21 = 0\n    var isPrimeIndex22\
    \ = 0\n    var isPrimeCount22 = 0\n    var isPrimeIndex23 = 0\n    var isPrimeCount23\
    \ = 0\n    var isPrimeIndex24 = 0\n    var isPrimeCount24 = 0\n    var isPrimeIndex25\
    \ = 0\n    var isPrimeCount25 = 0\n    var isPrimeIndex26 = 0\n    var isPrimeCount26\
    \ = 0\n    var isPrimeIndex27 = 0\n    var isPrimeCount27 = 0\n    var isPrimeIndex28\
    \ = 0\n    var isPrimeCount28 = 0\n    var isPrimeIndex29 = 0\n    var isPrimeCount29\
    \ = 0\n    var isPrimeIndex30 = 0\n    var isPrimeCount30 = 0\n    var isPri",
  "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n    while i <= n\
    \ {\n        if n % i == 0 {\n            factors.append(factor)\n           \
    \ factor = 1\n        } else {\n            factor *= i\n        }\n        i\
    \ += 1\n    }\n    factors.append(factor)\n    return factors", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    var factorizationIndex = 0\n    var factorizationNumber = 0\n    var\
    \ factorizationNumberCount = 0\n    var factorizationNumberIndex = 0\n    var\
    \ factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex = 0\n\
    \    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0\n    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountIndex\
    \ = 0", "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n \
    \   var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex2 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex3 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex4 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex5 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex6 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex7 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex8 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex9 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex10 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex11 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex12 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex13 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex14 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex15 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex16 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex17 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex18 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex19 = Int(arc4random_uniform(UInt", "    var\
    \ factors = [Int]()\n    var factorization = [Int]()\n    var product = n * n\n\
    \    var primes = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationIndex\
    \ = 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeFactorization\
    \ = true\n    var isPrimeFactorizationIndex = 0\n    var isPrimePrime = true\n\
    \    var isPrimePrimeIndex = 0\n    var isPrimePrimePrime = true\n    var isPrimePrimePrimeIndex\
    \ = 0\n    var isPrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimeIndex\
    \ = 0\n    var isPrimePrimePrimePrimeIndex = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeIndex = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeIndex = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeIndex = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeIndex = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeIndex\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeIndex = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeIndex =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeIndex\
    \ = 0\n    var is", "    var factors = [Int]()\n    var primes = factorization(n:\
    \ n)\n    for prime in primes {\n        factors.append(prime)\n    }\n    return\
    \ factors", "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n\
    \    var factorizationCount = 1\n    for factor in factorization {\n        if\
    \ factorizationCount > factors.count {\n            factors.append(factor)\n \
    \       } else {\n            factors[factors.count-1] *= factor\n        }\n\
    \        factorizationCount *= factor\n    }\n    return factors", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var factorizationIndex2 = 0\n    var factorizationIndex3 = 0\n    var factorizationIndex4\
    \ = 0\n    var factorizationIndex5 = 0\n    var factorizationIndex6 = 0\n    var\
    \ factorizationIndex7 = 0\n    var factorizationIndex8 = 0\n    var factorizationIndex9\
    \ = 0\n    var factorizationIndex10 = 0\n    var factorizationIndex11 = 0\n  \
    \  var factorizationIndex12 = 0\n    var factorizationIndex13 = 0\n    var factorizationIndex14\
    \ = 0\n    var factorizationIndex15 = 0\n    var factorizationIndex16 = 0\n  \
    \  var factorizationIndex17 = 0\n    var factorizationIndex18 = 0\n    var factorizationIndex19\
    \ = 0\n    var factorizationIndex20 = 0\n    var factorizationIndex21 = 0\n  \
    \  var factorizationIndex22 = 0\n    var factorizationIndex23 = 0\n    var factorizationIndex24\
    \ = 0\n    var factorizationIndex25 = 0\n    var factorizationIndex26 = 0\n  \
    \  var factorizationIndex27 = 0\n    var factorizationIndex28 = 0\n    var factorizationIndex29\
    \ = 0\n    var factorizationIndex30 = 0\n    var factorizationIndex31 = 0\n  \
    \  var factorizationIndex32 = 0\n    var factorizationIndex33 = 0\n    var factorizationIndex34\
    \ = 0\n    var factorizationIndex35 = 0\n    var factorizationIndex36 = 0\n  \
    \  var factorizationIndex37 = 0\n    var factorizationIndex38 = 0\n    var factorizationIndex39\
    \ = 0\n    var factorizationIndex40 = 0\n    var factorizationIndex41 = 0\n  \
    \  var factorizationIndex42 = 0\n    var factorizationIndex43 = 0\n    var factorizationIndex44\
    \ = 0\n    var factorizationIndex45 = 0\n    var factorizationIndex46 = 0\n  \
    \  var factorizationIndex47 = 0\n    var factorizationIndex48 = 0\n    var factorizationIndex49\
    \ = 0\n    var factorizationIndex50 = 0\n    var factorizationIndex51 = 0\n  \
    \  var factorizationIndex52 = 0\n    var factorizationIndex53 = 0\n    var factorizationIndex54\
    \ = 0\n    var factorizationIndex55 = 0\n    var factorizationIndex56 = 0\n  \
    \  var factorizationIndex57 = 0\n    var factorizationIndex58 = 0\n    var factorizationIndex59\
    \ = 0\n    var factorizationIndex60 = 0\n    var factorizationIndex61 = 0\n  \
    \  var factorizationIndex62 = 0\n    var factorizationIndex63 = 0\n    var factorizationIndex64\
    \ = 0\n    var factorizationIndex65 = 0\n    var factorizationIndex66 = 0\n  \
    \  var factorizationIndex67 = 0\n    var factorizationIndex68 = 0\n    var factorizationIndex69\
    \ = 0\n    var factorizationIndex70 = 0\n    var factorizationIndex71 = 0\n  \
    \  var factorization", "    var factorization: [Int] = []\n    var factor: Int\
    \ = 0\n    var i: Int = 0\n    var j: Int = 0\n    var factorizationCount: Int\
    \ = 0\n    var isPrime: Bool = false\n    var isPrime2: Bool = false\n    var\
    \ isPrime3: Bool = false\n    var isPrime4: Bool = false\n    var isPrime5: Bool\
    \ = false\n    var isPrime6: Bool = false\n    var isPrime7: Bool = false\n  \
    \  var isPrime8: Bool = false\n    var isPrime9: Bool = false\n    var isPrime10:\
    \ Bool = false\n    var isPrime11: Bool = false\n    var isPrime12: Bool = false\n\
    \    var isPrime13: Bool = false\n    var isPrime14: Bool = false\n    var isPrime15:\
    \ Bool = false\n    var isPrime16: Bool = false\n    var isPrime17: Bool = false\n\
    \    var isPrime18: Bool = false\n    var isPrime19: Bool = false\n    var isPrime20:\
    \ Bool = false\n    var isPrime21: Bool = false\n    var isPrime22: Bool = false\n\
    \    var isPrime23: Bool = false\n    var isPrime24: Bool = false\n    var isPrime25:\
    \ Bool = false\n    var isPrime26: Bool = false\n    var isPrime27: Bool = false\n\
    \    var isPrime28: Bool = false\n    var isPrime29: Bool = false\n    var isPrime30:\
    \ Bool = false\n    var isPrime31: Bool = false\n    var isPrime32: Bool = false\n\
    \    var isPrime33: Bool = false\n    var isPrime34: Bool = false\n    var isPrime35:\
    \ Bool = false\n    var isPrime36: Bool = false\n    var isPrime37: Bool = false\n\
    \    var isPrime38: Bool = false\n    var isPrime39: Bool = false\n    var isPrime40:\
    \ Bool = false\n    var isPrime41: Bool = false\n    var isPrime42: Bool = false\n\
    \    var isPrime43: Bool = false\n    var isPrime44: Bool = false\n    var isPrime45:\
    \ Bool = false\n    var isPrime46: Bool = false\n    var isPrime47: Bool = false\n\
    \    var isPrime48: Bool = false\n    var isPrime49: Bool = false\n    var isPrime50:\
    \ Bool = false\n    var isPrime51: Bool = false\n    var isPrime52: Bool = false\n\
    \    var isPrime53: Bool = false\n    var isPrime54: Bool = false", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationSum = 0\n \
    \   var factorizationSum2 = 0\n    var factorizationSum3 = 0\n    var factorizationSum4\
    \ = 0\n    var factorizationSum5 = 0\n    var factorizationSum6 = 0\n    var factorizationSum7\
    \ = 0\n    var factorizationSum8 = 0\n    var factorizationSum9 = 0\n    var factorizationSum10\
    \ = 0\n    var factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var\
    \ factorizationSum13 = 0\n    var factorizationSum14 = 0\n    var factorizationSum15\
    \ = 0\n    var factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var\
    \ factorizationSum18 = 0\n    var factorizationSum19 = 0\n    var factorizationSum20\
    \ = 0\n    var factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var\
    \ factorizationSum23 = 0\n    var factorizationSum24 = 0\n    var factorizationSum25\
    \ = 0\n    var factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var\
    \ factorizationSum28 = 0\n    var factorizationSum29 = 0\n    var factorizationSum30\
    \ = 0\n    var factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var\
    \ factorizationSum33 = 0\n    var factorizationSum34 = 0\n    var factorizationSum35\
    \ = 0\n    var factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var\
    \ factorizationSum38 = 0\n    var factorizationSum39 = 0\n    var factorizationSum40\
    \ = 0\n    var factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var\
    \ factorizationSum43 = 0\n    var factorizationSum44 = 0\n    var factorizationSum45\
    \ = 0\n    var factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var\
    \ factorizationSum48 = 0\n    var factorizationSum49 = 0\n    var factorizationSum50\
    \ = 0\n    var factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var\
    \ factorizationSum53 = 0\n    var factorizationSum54 = 0\n    var factorizationSum55\
    \ = 0\n    var factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var\
    \ factorizationSum58 = 0\n    var factorizationSum59 = 0\n    var factorizationSum60\
    \ = 0\n    var factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var\
    \ factorizationSum63 = 0\n    var factorizationSum64 = 0\n    var factorizationSum65\
    \ = 0\n    var factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var\
    \ factorizationSum68 = 0\n    var factorizationSum69 = 0\n    var factorizationSum70\
    \ = 0\n    var factorizationSum71 = 0\n    var factorization", "    var factorization:\
    \ [Int] = []\n    var factor = 2\n    var factorCount = 0\n    while factor <=\
    \ n {\n        if n % factor == 0 {\n            factorization[factorCount] =\
    \ factor\n            factorCount += 1\n        }\n        factor += 1\n    }\n\
    \    return factorization", "    var factors = [Int]()\n    var primes = [Int]()\n\
    \    var primeFactors = [1]\n    var factorization = [1]\n    var isPrime = true\n\
    \    var isFactorization = true\n    var isPrimeFactorization = true\n    var\
    \ isPrimePrime = true\n    var isPrimePrimeFactorization = true\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeFactorization = true\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n   \
    \ var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization = true\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrime", "    var factors\
    \ = [Int]()\n    var primeFactors = factorize(n: n)\n    var primeFactorsCount\
    \ = primeFactors.count\n    var factorsCount = 1\n    var factorsCountMax = primeFactorsCount\n\
    \    var factorsCountMin = primeFactorsCount\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factorsCountMinInt = Int(factorsCountMin)\n    var factorsCountMaxDouble\
    \ = Double(factorsCountMax)\n    var factorsCountMinDouble = Double(factorsCountMin)\n\
    \    var factorsCountMaxFloat = Float(factorsCountMax)\n    var factorsCountMinFloat\
    \ = Float(factorsCountMin)\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factorsCountMinInt = Int(factorsCountMin)\n    var factorsCountMaxDouble\
    \ = Double(factorsCountMax)\n    var factorsCountMinDouble = Double(factorsCountMin)\n\
    \    var factorsCountMaxFloat = Float(factorsCountMax)\n    var factorsCountMinFloat\
    \ = Float(factorsCountMin)\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factorsCountMinInt = Int(factorsCountMin)\n    var factorsCountMaxDouble\
    \ = Double(factorsCountMax)\n    var factorsCountMinDouble = Double(factorsCountMin)\n\
    \    var factorsCountMaxFloat = Float(factorsCountMax)\n    var factorsCountMinFloat\
    \ = Float(factorsCountMin)\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factorsCountMinInt = Int(factorsCountMin)\n    var factorsCountMaxDouble\
    \ = Double(factorsCountMax)\n    var factorsCountMinDouble = Double(factorsCountMin)\n\
    \    var factorsCountMaxFloat = Float(factorsCountMax)\n    var factorsCountMinFloat\
    \ = Float(factorsCountMin)\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factorsCountMinInt = Int(factorsCountMin)\n    var factorsCountMaxDouble\
    \ = Double(factorsCountMax)\n    var factorsCountMinDouble = Double(factorsCountMin)\n\
    \    var factorsCountMaxFloat = Float(factorsCountMax)\n    var factorsCountMinFloat\
    \ = Float(factorsCountMin)\n    var factorsCountMaxInt = Int(factorsCountMax)\n\
    \    var factors", "    var factors = [Int]()\n    var i = 2\n    var factor =\
    \ 1\n    while i <= n {\n        if n % i == 0 {\n            factors.append(factor)\n\
    \            factor = 1\n        } else {\n            factor *= i\n        }\n\
    \        i += 1\n    }\n    factors.append(factor)\n    return factors", "   \
    \ var factors = [Int]()\n    var factorization = [Int]()\n    var factorizationCount\
    \ = 1\n    var factorizationIndex = 0\n    var factorizationIndexMax = factorizationCount\
    \ - 1\n    var factorizationIndexMin = 0\n    var factorizationIndexMaxMin = factorizationIndexMax\
    \ - 1\n    var factorizationIndexMinMax = factorizationIndexMin + 1\n    var factorizationIndexMaxMinMin\
    \ = factorizationIndexMaxMin + 1\n    var factorizationIndexMinMaxMin = factorizationIndexMinMaxMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMinMaxMinMin\
    \ + 1\n    var factorizationIndexMinMaxMinMin = factorizationIndexMin", "    var\
    \ factors: [Int] = []\n    var factorization: [[Int]] = [[]]\n    var factorizationIndex\
    \ = 0\n    var currentFactorizationIndex = 0\n    var currentFactorization: [[Int]]\
    \ = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int]] = [[]]\n    var currentFactorizationIndex = 0\n    var currentFactorization:\
    \ [[Int", "    var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n \
    \   var isPrimeFactorsCount = [Int]()\n    var isPrimeFactorsCountMax = Int(Int64.max)\n\
    \    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n   \
    \ var isPrimeFactorsCountMaxIndex = Int(Int64.max)\n    var isPrimeFactorsCountMaxIndex\
    \ = Int(Int", "    var factorization: [Int] = []\n    var factorizationCount =\
    \ 0\n    var factorizationSum = 0\n    var factorizationSumOfFactors = 0\n   \
    \ var factorizationSumOfFactorsOfFactors = 0\n    var factorizationSumOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactors = 0\n    var\
    \ factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactors = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSumOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactorsOfFactors\
    \ = 0\n    var factorizationSum", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var factorization\
    \ = factorizationOfNumber(n)\n    for factor in factorization {\n        factors.append(factor)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var primeFactorizationIndex = 0\n    var factorizationIndex = 0\n \
    \   var factorizationIndex2 = 0\n    var factorizationIndex3 = 0\n    var factorizationIndex4\
    \ = 0\n    var factorizationIndex5 = 0\n    var factorizationIndex6 = 0\n    var\
    \ factorizationIndex7 = 0\n    var factorizationIndex8 = 0\n    var factorizationIndex9\
    \ = 0\n    var factorizationIndex10 = 0\n    var factorizationIndex11 = 0\n  \
    \  var factorizationIndex12 = 0\n    var factorizationIndex13 = 0\n    var factorizationIndex14\
    \ = 0\n    var factorizationIndex15 = 0\n    var factorizationIndex16 = 0\n  \
    \  var factorizationIndex17 = 0\n    var factorizationIndex18 = 0\n    var factorizationIndex19\
    \ = 0\n    var factorizationIndex20 = 0\n    var factorizationIndex21 = 0\n  \
    \  var factorizationIndex22 = 0\n    var factorizationIndex23 = 0\n    var factorizationIndex24\
    \ = 0\n    var factorizationIndex25 = 0\n    var factorizationIndex26 = 0\n  \
    \  var factorizationIndex27 = 0\n    var factorizationIndex28 = 0\n    var factorizationIndex29\
    \ = 0\n    var factorizationIndex30 = 0\n    var factorizationIndex31 = 0\n  \
    \  var factorizationIndex32 = 0\n    var factorizationIndex33 = 0\n    var factorizationIndex34\
    \ = 0\n    var factorizationIndex35 = 0\n    var factorizationIndex36 = 0\n  \
    \  var factorizationIndex37 = 0\n    var factorizationIndex38 = 0\n    var factorizationIndex39\
    \ = 0\n    var factorizationIndex40 = 0\n    var factorizationIndex41 = 0\n  \
    \  var factorizationIndex42 = 0\n    var factorizationIndex43 = 0\n    var factorizationIndex44\
    \ = 0\n    var factorizationIndex45 = 0\n    var factorizationIndex46 = 0\n  \
    \  var factorizationIndex47 = 0\n    var factorizationIndex48 = 0\n    var factorizationIndex49\
    \ = 0\n    var factorizationIndex50 = 0\n    var factorizationIndex51 = 0\n  \
    \  var factorizationIndex52 = 0\n    var factorizationIndex53 = 0\n    var factorizationIndex54\
    \ = 0\n    var factorizationIndex55 = 0\n    var factorizationIndex56 = 0\n  \
    \  var factorizationIndex57 = 0\n    var factorizationIndex58 = 0\n    var factorizationIndex59\
    \ = 0\n    var factorizationIndex60 = 0\n    var factorizationIndex61 = 0\n  \
    \  var factorizationIndex62 = 0\n    var factorizationIndex63 = 0\n    var factorizationIndex64\
    \ = 0\n    var factorizationIndex65 = 0\n    var factorizationIndex66 = 0\n  \
    \  var factorizationIndex67 = 0\n    var factorizationIndex68 = 0\n    var factor",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        if factors.contains(factor) {\n   \
    \         continue\n        }\n        factors.append(factor)\n    }\n    return\
    \ factors", "    var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n\
    \        if n % i == 0 {\n            factors.append(i)\n            n /= i\n\
    \        }\n        i += 1\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationCount = 0\n    var isPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationCount = 0\n    var\
    \ isPrimeFactorizationPrimeFactorizationPrime: Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorization: Bool\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrime", "    var factors = [Int]()\n\
    \    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n            factors.append(i)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factors.append(n)\n    }\n    return factors", "    var\
    \ factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationNumber: Int = 0\n    var factorizationNumberCount\
    \ = 0\n    var factorizationNumberIndex = 0\n    var factorizationNumberCountMax\
    \ = 0\n    var factorizationNumberIndexMax = 0\n    var factorizationNumberCountMin\
    \ = 0\n    var factorizationNumberIndexMin = 0\n    var factorizationNumberCountMaxMin\
    \ = 0\n    var factorizationNumberIndexMaxMin = 0\n    var factorizationNumberCountMinMax\
    \ = 0\n    var factorizationNumberIndexMinMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMaxMinMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMaxMinMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMaxMinMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorizationNumberCountMinMaxMax\
    \ = 0\n    var factorizationNumberIndexMinMaxMax = 0\n    var factorization",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var currentFactorization = [1]\n    var currentFactorizationIndex =\
    \ 0\n    var isPrime = true\n    var isPrimeIndex = 0\n    var isPrimeCount =\
    \ 0\n    var isPrimeCountIndex = 0\n    var isPrimeCountMax = 0\n    var isPrimeCountMaxIndex\
    \ = 0\n    var isPrimeCountMin = 0\n    var isPrimeCountMinIndex = 0\n    var\
    \ isPrimeCountSum = 0\n    var isPrimeCountSumIndex = 0\n    var isPrimeCountProduct\
    \ = 0\n    var isPrimeCountProductIndex = 0\n    var isPrimeCountProductMax =\
    \ 0\n    var isPrimeCountProductMaxIndex = 0\n    var isPrimeCountProductMin =\
    \ 0\n    var isPrimeCountProductMinIndex = 0\n    var isPrimeCountProductSum =\
    \ 0\n    var isPrimeCountProductSumIndex = 0\n    var isPrimeCountProductProduct\
    \ = 0\n    var isPrimeCountProductProductIndex = 0\n    var isPrimeCountProductProductMax\
    \ = 0\n    var isPrimeCountProductProductMaxIndex = 0\n    var isPrimeCountProductProductMin\
    \ = 0\n    var isPrimeCountProductProductMinIndex = 0\n    var isPrimeCountProductProductSum\
    \ = 0\n    var isPrimeCountProductProductSumIndex = 0\n    var isPrimeCountProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductIndex = 0\n    var isPrimeCountProductProductProductMax\
    \ = 0\n    var isPrimeCountProductProductProductMaxIndex = 0\n    var isPrimeCountProductProductProductMin\
    \ = 0\n    var isPrimeCountProductProductProductMinIndex = 0\n    var isPrimeCountProductProductProductSum\
    \ = 0\n    var isPrimeCountProductProductProductSumIndex = 0\n    var isPrimeCountProductProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductIndex = 0\n    var isPrimeCountProductProductProductMax\
    \ = 0\n    var isPrimeCountProductProductProductMaxIndex = 0\n    var isPrimeCountProductProductProductMin\
    \ = 0\n    var isPrimeCountProductProductProductMinIndex = 0\n    var isPrimeCountProductProductProductSum\
    \ = 0\n    var isPrimeCountProductProductProductSumIndex = 0\n    var isPrimeCountProductProductProductProduct\
    \ = 0\n    var isPrimeCountProductProductProductIndex = 0\n    var isPrimeCountProductProductProductMax\
    \ = 0\n    var isPrimeCountProductProductProductMaxIndex = 0\n    var isPrimeCountProductProductProductMin\
    \ = 0\n    var isPrimeCountProductProduct", "    var factors = [Int]()\n    var\
    \ i = 2\n    var j = 1\n    var factor = 1\n    while i <= n {\n        while\
    \ n % i == 0 {\n            factors.append(factor)\n            n /= i\n     \
    \       factor = 1\n        }\n        i += 1\n        j += 1\n        factor\
    \ *= j\n    }\n    factors.append(factor)\n    return factors", "    var factors\
    \ = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n    var\
    \ factorization = [Int]()\n    var primeFactorization = [Int]()\n    var isPrime\
    \ = [Bool]()\n    var isPrimeFactorization = [Bool]()\n    var isPrimeFactorization2\
    \ = [Bool]()\n    var isPrimeFactorization3 = [Bool]()\n    var isPrimeFactorization4\
    \ = [Bool]()\n    var isPrimeFactorization5 = [Bool]()\n    var isPrimeFactorization6\
    \ = [Bool]()\n    var isPrimeFactorization7 = [Bool]()\n    var isPrimeFactorization8\
    \ = [Bool]()\n    var isPrimeFactorization9 = [Bool]()\n    var isPrimeFactorization10\
    \ = [Bool]()\n    var isPrimeFactorization11 = [Bool]()\n    var isPrimeFactorization12\
    \ = [Bool]()\n    var isPrimeFactorization13 = [Bool]()\n    var isPrimeFactorization14\
    \ = [Bool]()\n    var isPrimeFactorization15 = [Bool]()\n    var isPrimeFactorization16\
    \ = [Bool]()\n    var isPrimeFactorization17 = [Bool]()\n    var isPrimeFactorization18\
    \ = [Bool]()\n    var isPrimeFactorization19 = [Bool]()\n    var isPrimeFactorization20\
    \ = [Bool]()\n    var isPrimeFactorization21 = [Bool]()\n    var isPrimeFactorization22\
    \ = [Bool]()\n    var isPrimeFactorization23 = [Bool]()\n    var isPrimeFactorization24\
    \ = [Bool]()\n    var isPrimeFactorization25 = [Bool]()\n    var isPrimeFactorization26\
    \ = [Bool]()\n    var isPrimeFactorization27 = [Bool]()\n    var isPrimeFactorization28\
    \ = [Bool]()\n    var isPrimeFactorization29 = [Bool]()\n    var isPrimeFactorization30\
    \ = [Bool]()\n    var isPrimeFactorization31 = [Bool]()\n    var isPrimeFactorization32\
    \ = [Bool]()\n    var isPrimeFactorization33 = [Bool]()\n    var isPrimeFactorization34\
    \ = [Bool]()\n    var isPrimeFactorization35 = [Bool]()\n    var isPrimeFactorization36\
    \ = [Bool]()\n    var isPrimeFactorization37 = [Bool]()\n    var isPrimeFactorization38\
    \ = [Bool]()\n    var isPrimeFactorization39 = [", "    var factors: [Int] = []\n\
    \    var factor: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int\
    \ = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q:\
    \ Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var\
    \ u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n   \
    \ var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n\
    \    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int =\
    \ 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int\
    \ = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p:\
    \ Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var\
    \ t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n   \
    \ var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n\
    \    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int =\
    \ 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i: Int\
    \ = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n:\
    \ Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var\
    \ s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n   \
    \ var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n\
    \    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int =\
    \ 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int\
    \ = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m:\
    \ Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var\
    \ r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n   \
    \ var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int =\
    \ 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int\
    \ = 0\n    var h: Int = 0\n", "    var factorization: [Int] = []\n    var factor\
    \ = 2\n    var factorizationCount = 0\n    while factorizationCount < n {\n  \
    \      if n % factor == 0 {\n            factorizationCount += 1\n           \
    \ factorization.append(factor)\n        }\n        factor += 1\n    }\n    return\
    \ factorization", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationNumber: Int = 0\n\
    \    var factorizationNumberIndex = 0\n    var factorizationNumberIndex2 = 0\n\
    \    var factorizationNumberIndex3 = 0\n    var factorizationNumberIndex4 = 0\n\
    \    var factorizationNumberIndex5 = 0\n    var factorizationNumberIndex6 = 0\n\
    \    var factorizationNumberIndex7 = 0\n    var factorizationNumberIndex8 = 0\n\
    \    var factorizationNumberIndex9 = 0\n    var factorizationNumberIndex10 = 0\n\
    \    var factorizationNumberIndex11 = 0\n    var factorizationNumberIndex12 =\
    \ 0\n    var factorizationNumberIndex13 = 0\n    var factorizationNumberIndex14\
    \ = 0\n    var factorizationNumberIndex15 = 0\n    var factorizationNumberIndex16\
    \ = 0\n    var factorizationNumberIndex17 = 0\n    var factorizationNumberIndex18\
    \ = 0\n    var factorizationNumberIndex19 = 0\n    var factorizationNumberIndex20\
    \ = 0\n    var factorizationNumberIndex21 = 0\n    var factorizationNumberIndex22\
    \ = 0\n    var factorizationNumberIndex23 = 0\n    var factorizationNumberIndex24\
    \ = 0\n    var factorizationNumberIndex25 = 0\n    var factorizationNumberIndex26\
    \ = 0\n    var factorizationNumberIndex27 = 0\n    var factorizationNumberIndex28\
    \ = 0\n    var factorizationNumberIndex29 = 0\n    var factorizationNumberIndex30\
    \ = 0\n    var factorizationNumberIndex31 = 0\n    var factorizationNumberIndex32\
    \ = 0\n    var factorizationNumberIndex33 = 0\n    var factorizationNumberIndex34\
    \ = 0\n    var factorizationNumberIndex35 = 0\n    var factorizationNumberIndex36\
    \ = 0\n    var factorizationNumberIndex37 = 0\n    var factorizationNumberIndex38\
    \ = 0\n    var factorizationNumberIndex39 = 0\n    var factorizationNumberIndex40\
    \ = 0\n    var factorizationNumberIndex41 = 0\n    var factorizationNumberIndex42\
    \ = 0\n    var factorizationNumberIndex43 = 0\n    var factorizationNumberIndex44\
    \ = 0\n    var factorizationNumberIndex45 = 0\n    var factorizationNumberIndex46\
    \ = 0\n    var factorizationNumberIndex47 = 0\n    var factorizationNumberIndex48\
    \ = 0\n    var factorizationNumberIndex49 = 0\n    var factorizationNumberIndex50\
    \ = 0\n    var factorizationNumberIndex51 = 0\n    var factorizationNumberIndex52\
    \ = 0\n    var factorizationNumberIndex53 = 0\n    var factorizationNumberIndex54\
    \ = 0\n    var factorizationNumberIndex55 = 0\n    var factorizationNumberIndex56\
    \ = 0\n    var factorizationNumberIndex57 = 0\n    var factorizationNumberIndex58\
    \ = 0\n    var factorizationNumberIndex59 = 0\n    var factorizationNumberIndex60\
    \ = 0\n    var factorizationNumberIndex61", "    var factorization: [Int] = []\n\
    \    var factorizationCount = 0\n    var factorizationIndex = 0\n    var factorizationIndexCount\
    \ = 0\n    var factorizationIndexCountMax = Int(IntMax)\n    var factorizationIndexCountMin\
    \ = Int(IntMin)\n    var factorizationIndexCountMinMax = Int(IntMax)\n    var\
    \ factorizationIndexCountMinMaxInt = Int(IntMax)\n    var factorizationIndexCountMinMaxIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntInt = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxIntIntIntInt = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntInt = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxIntIntIntIntIntIntInt = Int(IntMax)\n  \
    \  var factorizationIndexCountMinMaxIntIntIntIntIntIntIntInt = Int(IntMax)\n \
    \   var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntInt = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntInt = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntInt = Int(IntMax)\n\
    \    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factorizationIndexCountMinMaxIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntIntInt\
    \ = Int(IntMax)\n    var factor", "    var factorization = [Int]()\n    var factorizationCount\
    \ = [Int]()\n    var factorizationIndex = 0\n    var factorizationNumber = 0\n\
    \    var factorizationNumberCount = 0\n    var factorizationNumberIndex = 0\n\
    \    var factorizationNumberCountIndex = 0\n    var factorizationNumberCountMax\
    \ = 0\n    var factorizationNumberCountMaxIndex = 0\n    var factorizationNumberCountMin\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumberCountMinIndex = 0\n    var factorizationNumberCountMaxIndex\
    \ = 0\n    var factorizationNumber", "    var factors = [Int]()\n    var primes\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeCountMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMin = 1\n    var isPrimeCountMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMax = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMinMaxMin = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMin = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMinMaxMinMaxMinMax = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMax = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMin = Int(sqrt(Double(n)))\n    var\
    \ isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMax = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMin\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMaxMinMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCount", "    var factors = [Int]()\n\
    \    var primes = [Int]()\n    var primeFactors = [Int]()\n    var isPrime = [Bool]()\n\
    \    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount = [Int]()\n  \
    \  var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex = Int()\n\
    \    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValue",
  "    var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        }\n \
    \       i += 1\n    }\n    if n > 1 {\n        factors.append(n)\n    }\n    return\
    \ factors", "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n\
    \    var primeFactorizationCount = 0\n    var factorizationCount = 0\n    var\
    \ isPrime = true\n    var isPrimeCount = 0\n    var isPrimePrime = true\n    var\
    \ isPrimePrimeCount = 0\n    var isPrimePrimePrime = true\n    var isPrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePri",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        factors.append(factor)\n    }\n   \
    \ return factors", "    var factorization = [Int]()\n    var factorizationIndex\
    \ = 0\n    var currentFactorizationIndex = 0\n    var currentFactorization = 0\n\
    \    var currentFactorizationValue = 1\n    var currentFactorizationValueIndex\
    \ = 0\n    var currentFactorizationValueIndex2 = 0\n    var currentFactorizationValueIndex3\
    \ = 0\n    var currentFactorizationValueIndex4 = 0\n    var currentFactorizationValueIndex5\
    \ = 0\n    var currentFactorizationValueIndex6 = 0\n    var currentFactorizationValueIndex7\
    \ = 0\n    var currentFactorizationValueIndex8 = 0\n    var currentFactorizationValueIndex9\
    \ = 0\n    var currentFactorizationValueIndex10 = 0\n    var currentFactorizationValueIndex11\
    \ = 0\n    var currentFactorizationValueIndex12 = 0\n    var currentFactorizationValueIndex13\
    \ = 0\n    var currentFactorizationValueIndex14 = 0\n    var currentFactorizationValueIndex15\
    \ = 0\n    var currentFactorizationValueIndex16 = 0\n    var currentFactorizationValueIndex17\
    \ = 0\n    var currentFactorizationValueIndex18 = 0\n    var currentFactorizationValueIndex19\
    \ = 0\n    var currentFactorizationValueIndex20 = 0\n    var currentFactorizationValueIndex21\
    \ = 0\n    var currentFactorizationValueIndex22 = 0\n    var currentFactorizationValueIndex23\
    \ = 0\n    var currentFactorizationValueIndex24 = 0\n    var currentFactorizationValueIndex25\
    \ = 0\n    var currentFactorizationValueIndex26 = 0\n    var currentFactorizationValueIndex27\
    \ = 0\n    var currentFactorizationValueIndex28 = 0\n    var currentFactorizationValueIndex29\
    \ = 0\n    var currentFactorizationValueIndex30 = 0\n    var currentFactorizationValueIndex31\
    \ = 0\n    var currentFactorizationValueIndex32 = 0\n    var currentFactorizationValueIndex33\
    \ = 0\n    var currentFactorizationValueIndex34 = 0\n    var currentFactorizationValueIndex35\
    \ = 0\n    var currentFactorizationValueIndex36 = 0\n    var currentFactorizationValueIndex37\
    \ = 0\n    var currentFactorizationValueIndex38 = 0\n    var currentFactorizationValueIndex39\
    \ = 0\n    var currentFactorizationValueIndex40 = 0\n    var currentFactorizationValueIndex41\
    \ = 0\n    var currentFactorizationValueIndex42 = 0\n    var currentFactorizationValueIndex43\
    \ = 0\n    var currentFactorizationValueIndex44 = 0\n    var currentFactorizationValueIndex45\
    \ = 0\n    var currentFactorizationValueIndex46 = 0\n    var currentFactorizationValueIndex47\
    \ = 0\n    var currentFactorizationValueIndex48 = 0\n    var currentFactorizationValueIndex49\
    \ = 0\n    var currentFactorizationValueIndex50 = 0\n    var currentFactorizationValueIndex51\
    \ = 0\n    var currentFactorizationValueIndex52 = 0\n    var currentFactorizationValueIndex53\
    \ = 0\n    var current", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationProduct = 1\n    var\
    \ factorizationSumProduct = 1\n    var factorizationProductSum = 0\n    var factorizationProductSumProduct\
    \ = 1\n    var factorizationProductSumProductSum = 0\n    var factorizationProductSumProductSumProduct\
    \ = 1\n    var factorizationProductSumProductSumProductSum = 0\n    var factorizationProductSumProductSumProductSumProduct\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSum = 0\n   \
    \ var factorizationProductSumProductSumProductSumProductSumProduct = 1\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSum = 0\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSum = 1\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSum = 0\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSum = 1\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSum = 0\n    var\
    \ factorizationProductSumProductSumProductSumProductSumProductSumProduct = 1\n\
    \    var factorizationProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 1\n    var factorizationProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSumProductSum\
    \ = 0\n", "    var factors: [Int] = []\n    var factor: Int = 0\n    var i: Int\
    \ = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var m:\
    \ Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var\
    \ r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n   \
    \ var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n\
    \    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int =\
    \ 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int\
    \ = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k:\
    \ Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var\
    \ p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n   \
    \ var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n\
    \    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int =\
    \ 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int\
    \ = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var i:\
    \ Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n    var\
    \ m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n   \
    \ var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n\
    \    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int =\
    \ 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int\
    \ = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g:\
    \ Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var\
    \ k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n   \
    \ var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n\
    \    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int\
    \ = 0\n    var b: Int = 0\n    var c: Int = 0\n    var ", "    var factors = [Int]()\n\
    \    var primes = factorization(n: n)\n    for prime in primes {\n        factors.append(prime)\n\
    \    }\n    return factors", "    var factorization = [Int]()\n    var factorizationIndex\
    \ = 0\n    var factorizationCount = 1\n    var factorizationFactor = 1\n    var\
    \ factorizationPrime = 1\n    var factorizationPrimeIndex = 0\n    var factorizationPrimeCount\
    \ = 1\n    var factorizationPrimeFactor = 1\n    var factorizationPrimePrime =\
    \ 1\n    var factorizationPrimePrimeIndex = 0\n    var factorizationPrimePrimeCount\
    \ = 1\n    var factorizationPrimePrimeFactor = 1\n    var factorizationPrimePrimePrime\
    \ = 1\n    var factorizationPrimePrimePrimeIndex = 0\n    var factorizationPrimePrimePrimeCount\
    \ = 1\n    var factorizationPrimePrimePrimeFactor = 1\n    var factorizationPrimePrimePrimePrime\
    \ = 1\n    var factorizationPrimePrimePrimePrimeIndex = 0\n    var factorizationPrimePrimePrimePrimeCount\
    \ = 1\n    var factorizationPrimePrimePrimePrimeFactor = 1\n    var factorizationPrimePrimePrimePrimePrime\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimeIndex = 0\n    var factorizationPrimePrimePrimePrimePrimeCount\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimeFactor = 1\n    var factorizationPrimePrimePrimePrimePrimePrime\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimePrimeIndex = 0\n    var factorizationPrimePrimePrimePrimePrimePrimeCount\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimePrimeFactor = 1\n    var\
    \ factorizationPrimePrimePrimePrimePrimePrimePrime = 1\n    var factorizationPrimePrimePrimePrimePrimePrimeIndex\
    \ = 0\n    var factorizationPrimePrimePrimePrimePrimePrimePrimeCount = 1\n   \
    \ var factorizationPrimePrimePrimePrimePrimePrimePrimeFactor = 1\n    var factorizationPrimePrimePrimePrimePrimePrimePrime\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimePrimePrimeIndex = 0\n   \
    \ var factorizationPrimePrimePrimePrimePrimePrimePrimeCount = 1\n    var factorizationPrimePrimePrimePrimePrimePrimePrimeFactor\
    \ = 1\n    var factorizationPrimePrimePrimePrimePrimePrimePrimePrime = 1\n   \
    \ var factorization", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationNumber = 0\n    var\
    \ factorizationNumberIndex = 0\n    var factorizationNumberIndex2 = 0\n    var\
    \ factorizationNumberIndex3 = 0\n    var factorizationNumberIndex4 = 0\n    var\
    \ factorizationNumberIndex5 = 0\n    var factorizationNumberIndex6 = 0\n    var\
    \ factorizationNumberIndex7 = 0\n    var factorizationNumberIndex8 = 0\n    var\
    \ factorizationNumberIndex9 = 0\n    var factorizationNumberIndex10 = 0\n    var\
    \ factorizationNumberIndex11 = 0\n    var factorizationNumberIndex12 = 0\n   \
    \ var factorizationNumberIndex13 = 0\n    var factorizationNumberIndex14 = 0\n\
    \    var factorizationNumberIndex15 = 0\n    var factorizationNumberIndex16 =\
    \ 0\n    var factorizationNumberIndex17 = 0\n    var factorizationNumberIndex18\
    \ = 0\n    var factorizationNumberIndex19 = 0\n    var factorizationNumberIndex20\
    \ = 0\n    var factorizationNumberIndex21 = 0\n    var factorizationNumberIndex22\
    \ = 0\n    var factorizationNumberIndex23 = 0\n    var factorizationNumberIndex24\
    \ = 0\n    var factorizationNumberIndex25 = 0\n    var factorizationNumberIndex26\
    \ = 0\n    var factorizationNumberIndex27 = 0\n    var factorizationNumberIndex28\
    \ = 0\n    var factorizationNumberIndex29 = 0\n    var factorizationNumberIndex30\
    \ = 0\n    var factorizationNumberIndex31 = 0\n    var factorizationNumberIndex32\
    \ = 0\n    var factorizationNumberIndex33 = 0\n    var factorizationNumberIndex34\
    \ = 0\n    var factorizationNumberIndex35 = 0\n    var factorizationNumberIndex36\
    \ = 0\n    var factorizationNumberIndex37 = 0\n    var factorizationNumberIndex38\
    \ = 0\n    var factorizationNumberIndex39 = 0\n    var factorizationNumberIndex40\
    \ = 0\n    var factorizationNumberIndex41 = 0\n    var factorizationNumberIndex42\
    \ = 0\n    var factorizationNumberIndex43 = 0\n    var factorizationNumberIndex44\
    \ = 0\n    var factorizationNumberIndex45 = 0\n    var factorizationNumberIndex46\
    \ = 0\n    var factorizationNumberIndex47 = 0\n    var factorizationNumberIndex48\
    \ = 0\n    var factorizationNumberIndex49 = 0\n    var factorizationNumberIndex50\
    \ = 0\n    var factorizationNumberIndex51 = 0\n    var factorizationNumberIndex52\
    \ = 0\n    var factorizationNumberIndex53 = 0\n    var factorizationNumberIndex54\
    \ = 0\n    var factorizationNumberIndex55 = 0\n    var factorizationNumberIndex56\
    \ = 0\n    var factorizationNumberIndex57 = 0\n    var factorizationNumberIndex58\
    \ = 0\n    var factorizationNumberIndex59 = 0\n    var factorizationNumberIndex60\
    \ = 0\n    var factorizationNumberIndex61 = 0\n", "    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationIndex\
    \ = 0\n    var currentFactorizationIndex = 0\n    var currentFactorization = [1]\n\
    \    var currentPrimeFactorization = [Int]()\n    var currentPrimeFactorizationIndex\
    \ = 0\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n    var currentPrimeFactorizationIndexMax = IntMax\n    var currentPrimeFactorizationIndexMin\
    \ = IntMin\n", "    var factorization: [Int] = []\n    var primeFactorization:\
    \ [Int] = []\n    var primeFactorizationCount = 0\n    var factorizationCount\
    \ = 0\n    var isPrime: Bool = false\n    var isPrimeCount = 0\n    var isPrimePrime:\
    \ Bool = false\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime: Bool\
    \ = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePri", "    var factors: [Int] = []\n    var\
    \ factorization: [Int] = [1]\n    var i: Int = 0\n    var j: Int = 0\n    var\
    \ factor: Int = 0\n    var factorizationCount: Int = 0\n    var isPrime: Bool\
    \ = false\n    var isPrimeCount: Int = 0\n    var isPrimeFactorization: Bool =\
    \ false\n    var isPrimeFactorizationCount: Int = 0\n    var isPrimeFactorizationPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeCount: Int = 0\n    var isPrimeFactorizationPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorCount: Int = 0\n    var\
    \ isPrimeFactorizationPrimeFactorPrime: Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactor: Bool = false\n\
    \    var isPrimeFactorizationPrimeFactorPrimeFactorCount: Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactor: Bool\
    \ = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrime:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimeCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimeFactor:\
    \ Bool = false\n    var isPrimeFactorizationPrimeFactorPrimeFactorPrimeFactorPrimeFactorPrimeCount:\
    \ Int = 0\n    var isPrimeFactorizationPrimeFactor", "    var factorization: [Int]\
    \ = []\n    var primeFactorization: [Int] = []\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var factorizationCountMax = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax2 = Int(sqrt(Double(n)))\n    var factorizationCountMax3\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax4 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax5 = Int(sqrt(Double(n)))\n    var factorizationCountMax6\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax7 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax8 = Int(sqrt(Double(n)))\n    var factorizationCountMax9\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax10 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax11 = Int(sqrt(Double(n)))\n    var factorizationCountMax12\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax13 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax14 = Int(sqrt(Double(n)))\n    var factorizationCountMax15\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax16 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax17 = Int(sqrt(Double(n)))\n    var factorizationCountMax18\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax19 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax20 = Int(sqrt(Double(n)))\n    var factorizationCountMax21\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax22 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax23 = Int(sqrt(Double(n)))\n    var factorizationCountMax24\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax25 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax26 = Int(sqrt(Double(n)))\n    var factorizationCountMax27\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax28 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax29 = Int(sqrt(Double(n)))\n    var factorizationCountMax30\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax31 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax32 = Int(sqrt(Double(n)))\n    var factorizationCountMax33\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax34 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax35 = Int(sqrt(Double(n)))\n    var factorizationCountMax36\
    \ = Int(sqrt(Double(n)))\n    var factorizationCountMax37 = Int(sqrt(Double(n)))\n\
    \    var factorizationCountMax38 = Int(sqrt(Double(n)))\n    var factor", "  \
    \  var factorization: [Int] = []\n    var factorizationCount = 0\n    var currentFactorizationCount\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization", " \
    \   var factors = [Int]()\n    var i = 2\n    while i * i <= n {\n        if n\
    \ % i == 0 {\n            factors.append(i)\n            n /= i\n        } else\
    \ {\n            i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n\
    \    }\n    return factors", "    var factors = [Int]()\n    var i = 2\n    var\
    \ p = n\n    while p > 1 {\n        while p % i == 0 {\n            factors.append(i)\n\
    \            p /= i\n        }\n        i += 1\n    }\n    return factors", " \
    \   var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationNumber: Int = 0\n    var factorizationNumberIndex\
    \ = 0\n    var factorizationNumberIndex2 = 0\n    var factorizationNumberIndex3\
    \ = 0\n    var factorizationNumberIndex4 = 0\n    var factorizationNumberIndex5\
    \ = 0\n    var factorizationNumberIndex6 = 0\n    var factorizationNumberIndex7\
    \ = 0\n    var factorizationNumberIndex8 = 0\n    var factorizationNumberIndex9\
    \ = 0\n    var factorizationNumberIndex10 = 0\n    var factorizationNumberIndex11\
    \ = 0\n    var factorizationNumberIndex12 = 0\n    var factorizationNumberIndex13\
    \ = 0\n    var factorizationNumberIndex14 = 0\n    var factorizationNumberIndex15\
    \ = 0\n    var factorizationNumberIndex16 = 0\n    var factorizationNumberIndex17\
    \ = 0\n    var factorizationNumberIndex18 = 0\n    var factorizationNumberIndex19\
    \ = 0\n    var factorizationNumberIndex20 = 0\n    var factorizationNumberIndex21\
    \ = 0\n    var factorizationNumberIndex22 = 0\n    var factorizationNumberIndex23\
    \ = 0\n    var factorizationNumberIndex24 = 0\n    var factorizationNumberIndex25\
    \ = 0\n    var factorizationNumberIndex26 = 0\n    var factorizationNumberIndex27\
    \ = 0\n    var factorizationNumberIndex28 = 0\n    var factorizationNumberIndex29\
    \ = 0\n    var factorizationNumberIndex30 = 0\n    var factorizationNumberIndex31\
    \ = 0\n    var factorizationNumberIndex32 = 0\n    var factorizationNumberIndex33\
    \ = 0\n    var factorizationNumberIndex34 = 0\n    var factorizationNumberIndex35\
    \ = 0\n    var factorizationNumberIndex36 = 0\n    var factorizationNumberIndex37\
    \ = 0\n    var factorizationNumberIndex38 = 0\n    var factorizationNumberIndex39\
    \ = 0\n    var factorizationNumberIndex40 = 0\n    var factorizationNumberIndex41\
    \ = 0\n    var factorizationNumberIndex42 = 0\n    var factorizationNumberIndex43\
    \ = 0\n    var factorizationNumberIndex44 = 0\n    var factorizationNumberIndex45\
    \ = 0\n    var factorizationNumberIndex46 = 0\n    var factorizationNumberIndex47\
    \ = 0\n    var factorizationNumberIndex48 = 0\n    var factorizationNumberIndex49\
    \ = 0\n    var factorizationNumberIndex50 = 0\n    var factorizationNumberIndex51\
    \ = 0\n    var factorizationNumberIndex52 = 0\n    var factorizationNumberIndex53\
    \ = 0\n    var factorizationNumberIndex54 = 0\n    var factorizationNumberIndex55\
    \ = 0\n    var factorizationNumberIndex56 = 0\n    var factorizationNumberIndex57\
    \ = 0\n    var factorizationNumberIndex58 = 0\n    var factorizationNumberIndex59\
    \ = 0\n    var factorizationNumberIndex60 = 0\n    var factorizationNumberIndex61",
  "    var factors = [Int]()\n    var primeFactors = [1]\n    var factorization =\
    \ [Int]()\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeFactorization = true\n    var isPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrime = true\n    var isPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorization = true\n    var isPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrime = true\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorization = true\n\
    \    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex = 0\n \
    \   var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = true\n\
    \    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex =\
    \ 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = true\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        factors.append(factor)\n    }\n   \
    \ return factors", "    var factors = [Int]()\n    var primeFactors = [Int]()\n\
    \    var primeFactorsCount = 0\n    var isPrime = true\n    var isPrimeCount =\
    \ 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n \
    \   var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePri", "    var factorization: [Int] = []\n   \
    \ var factor: Int = 0\n    var prime: Int = 0\n    var isPrime: Bool = false\n\
    \    var isPrime2: Bool = false\n    var isPrime3: Bool = false\n    var isPrime4:\
    \ Bool = false\n    var isPrime5: Bool = false\n    var isPrime6: Bool = false\n\
    \    var isPrime7: Bool = false\n    var isPrime8: Bool = false\n    var isPrime9:\
    \ Bool = false\n    var isPrime10: Bool = false\n    var isPrime11: Bool = false\n\
    \    var isPrime12: Bool = false\n    var isPrime13: Bool = false\n    var isPrime14:\
    \ Bool = false\n    var isPrime15: Bool = false\n    var isPrime16: Bool = false\n\
    \    var isPrime17: Bool = false\n    var isPrime18: Bool = false\n    var isPrime19:\
    \ Bool = false\n    var isPrime20: Bool = false\n    var isPrime21: Bool = false\n\
    \    var isPrime22: Bool = false\n    var isPrime23: Bool = false\n    var isPrime24:\
    \ Bool = false\n    var isPrime25: Bool = false\n    var isPrime26: Bool = false\n\
    \    var isPrime27: Bool = false\n    var isPrime28: Bool = false\n    var isPrime29:\
    \ Bool = false\n    var isPrime30: Bool = false\n    var isPrime31: Bool = false\n\
    \    var isPrime32: Bool = false\n    var isPrime33: Bool = false\n    var isPrime34:\
    \ Bool = false\n    var isPrime35: Bool = false\n    var isPrime36: Bool = false\n\
    \    var isPrime37: Bool = false\n    var isPrime38: Bool = false\n    var isPrime39:\
    \ Bool = false\n    var isPrime40: Bool = false\n    var isPrime41: Bool = false\n\
    \    var isPrime42: Bool = false\n    var isPrime43: Bool = false\n    var isPrime44:\
    \ Bool = false\n    var isPrime45: Bool = false\n    var isPrime46: Bool = false\n\
    \    var isPrime47: Bool = false\n    var isPrime48: Bool = false\n    var isPrime49:\
    \ Bool = false\n    var isPrime50: Bool = false\n    var isPrime51: Bool = false\n\
    \    var isPrime52: Bool = false\n    var isPrime53: Bool = false\n    var isPrime54:\
    \ Bool = false\n    var isPrime55: Bool = false\n    var isPri", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationSum = 0\n \
    \   var factorizationSumCount = 0\n    var factorizationSumCountMax = 0\n    var\
    \ factorizationSumCountMin = 0\n    var factorizationSumCountMaxMin = 0\n    var\
    \ factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin =\
    \ 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var factorizationSumCountMaxMinMin = 0\n    var factorizationSumCountMaxMinMin\
    \ = 0\n    var ", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var factorizationMax = 0\n    var factorizationMin\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSumMax = 0\n    var\
    \ factorizationSumMin = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMin", " \
    \   var factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex2 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex3 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex4 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex5 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex6 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex7 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex8 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex9 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex10 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex11 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex12 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex13 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex14 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex15 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex16 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex17 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex18 = Int(arc4random_uniform(UInt32(UInt32.max)))\n\
    \    var isPrimeFactorsCountMaxIndex19 = Int(arc4random_uniform(UInt", "    var\
    \ factorization: [Int] = []\n    var factor = 2\n    var factorCount = 0\n   \
    \ var isPrime = true\n    var isPrimeCount = 0\n    var isPrimeFactorization =\
    \ [Int]()\n    var isPrimeFactorizationCount = 0\n    var isPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationIndexCount = 0\n    var isPrimeFactorizationIndexCountMax\
    \ = IntMax\n    var isPrimeFactorizationIndexCountMin = IntMin\n    var isPrimeFactorizationIndexMax\
    \ = IntMax\n    var isPrimeFactorizationIndexMin = IntMin\n    var isPrimeFactorizationIndexMax2\
    \ = IntMax\n    var isPrimeFactorizationIndexMin2 = IntMin\n    var isPrimeFactorizationIndexMax3\
    \ = IntMax\n    var isPrimeFactorizationIndexMin3 = IntMin\n    var isPrimeFactorizationIndexMax4\
    \ = IntMax\n    var isPrimeFactorizationIndexMin4 = IntMin\n    var isPrimeFactorizationIndexMax5\
    \ = IntMax\n    var isPrimeFactorizationIndexMin5 = IntMin\n    var isPrimeFactorizationIndexMax6\
    \ = IntMax\n    var isPrimeFactorizationIndexMin6 = IntMin\n    var isPrimeFactorizationIndexMax7\
    \ = IntMax\n    var isPrimeFactorizationIndexMin7 = IntMin\n    var isPrimeFactorizationIndexMax8\
    \ = IntMax\n    var isPrimeFactorizationIndexMin8 = IntMin\n    var isPrimeFactorizationIndexMax9\
    \ = IntMax\n    var isPrimeFactorizationIndexMin9 = IntMin\n    var isPrimeFactorizationIndexMax10\
    \ = IntMax\n    var isPrimeFactorizationIndexMin10 = IntMin\n    var isPrimeFactorizationIndexMax11\
    \ = IntMax\n    var isPrimeFactorizationIndexMin11 = IntMin\n    var isPrimeFactorizationIndexMax12\
    \ = IntMax\n    var isPrimeFactorizationIndexMin12 = IntMin\n    var isPrimeFactorizationIndexMax13\
    \ = IntMax\n    var isPrimeFactorizationIndexMin13 = IntMin\n    var isPrimeFactorizationIndexMax14\
    \ = IntMax\n    var isPrimeFactorizationIndexMin14 = IntMin\n    var isPrimeFactorizationIndexMax15\
    \ = IntMax\n    var isPrimeFactorizationIndexMin15 = IntMin\n    var isPrimeFactorizationIndexMax16\
    \ = IntMax\n    var isPrimeFactorizationIndexMin16 = IntMin\n    var isPrimeFactorizationIndexMax17\
    \ = IntMax\n    var isPrimeFactorizationIndexMin17 = IntMin\n", "    var factors\
    \ = [Int]()\n    var product = n * n\n    var i = 2\n    while product % i ==\
    \ 0 {\n        factors.append(i)\n        product /= i\n        i += 1\n    }\n\
    \    if product > 1 {\n        factors.append(product)\n    }\n    return factors",
  "    var factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n \
    \   for factor in factorization {\n        factors.append(factor)\n    }\n   \
    \ return factors", "    var factorization: [Int] = []\n    var factor = 2\n  \
    \  var factorizationCount = 0\n    while factor <= n {\n        while n % factor\
    \ == 0 {\n            factorizationCount += 1\n            n /= factor\n     \
    \   }\n        factorization.append(factor)\n        factor++\n    }\n    if n\
    \ != 1 {\n        factorizationCount += 1\n    }\n    return factorization", " \
    \   var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationIndexMax = Int(sqrt(Double(n)))\n    var factorizationIndexMaxMinus1\
    \ = factorizationIndexMax - 1\n    var factorizationIndexMin = factorizationIndexMax\
    \ + 1\n    var factorizationIndexMinPlus1 = factorizationIndexMin + 1\n    var\
    \ factorizationIndexMinPlus2 = factorizationIndexMin + 2\n    var factorizationIndexMinPlus3\
    \ = factorizationIndexMin + 3\n    var factorizationIndexMinPlus4 = factorizationIndexMin\
    \ + 4\n    var factorizationIndexMinPlus5 = factorizationIndexMin + 5\n    var\
    \ factorizationIndexMinPlus6 = factorizationIndexMin + 6\n    var factorizationIndexMinPlus7\
    \ = factorizationIndexMin + 7\n    var factorizationIndexMinPlus8 = factorizationIndexMin\
    \ + 8\n    var factorizationIndexMinPlus9 = factorizationIndexMin + 9\n    var\
    \ factorizationIndexMinPlus10 = factorizationIndexMin + 10\n    var factorizationIndexMinPlus11\
    \ = factorizationIndexMin + 11\n    var factorizationIndexMinPlus12 = factorizationIndexMin\
    \ + 12\n    var factorizationIndexMinPlus13 = factorizationIndexMin + 13\n   \
    \ var factorizationIndexMinPlus14 = factorizationIndexMin + 14\n    var factorizationIndexMinPlus15\
    \ = factorizationIndexMin + 15\n    var factorizationIndexMinPlus16 = factorizationIndexMin\
    \ + 16\n    var factorizationIndexMinPlus17 = factorizationIndexMin + 17\n   \
    \ var factorizationIndexMinPlus18 = factorizationIndexMin + 18\n    var factorizationIndexMinPlus19\
    \ = factorizationIndexMin + 19\n    var factorizationIndexMinPlus20 = factorizationIndexMin\
    \ + 20\n    var factorizationIndexMinPlus21 = factorizationIndexMin + 21\n   \
    \ var factorizationIndexMinPlus22 = factorizationIndexMin + 22\n    var factorizationIndexMinPlus23\
    \ = factorizationIndexMin + 23\n    var factorizationIndexMinPlus24 = factorizationIndexMin\
    \ + 24\n    var factorizationIndexMinPlus25 = factorizationIndexMin + 25\n   \
    \ var factorizationIndexMinPlus26 = factorizationIndexMin + 26\n    var factorizationIndexMinPlus27\
    \ = factorizationIndexMin + 27\n    var factorizationIndexMinPlus28 = factorizationIndexMin\
    \ + 28\n    var factorizationIndexMinPlus29 = factorizationIndexMin + 29\n   \
    \ var factorizationIndexMinPlus30 = factorizationIndexMin + 30\n    var factorizationIndexMinPlus31\
    \ = factorizationIndexMin + 31\n    var ", "    var factors = [Int]()\n    var\
    \ primes = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n   \
    \ var isPrimeCountMax = Int(sqrt(Double(n)))\n    var isPrimeCountMax2 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax3 = Int(sqrt(Double(n)))\n    var isPrimeCountMax4 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax5 = Int(sqrt(Double(n)))\n    var isPrimeCountMax6 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax7 = Int(sqrt(Double(n)))\n    var isPrimeCountMax8 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax9 = Int(sqrt(Double(n)))\n    var isPrimeCountMax10 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax11 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax12 = Int(sqrt(Double(n)))\n    var isPrimeCountMax13 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax14 = Int(sqrt(Double(n)))\n    var isPrimeCountMax15 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax16 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax17 = Int(sqrt(Double(n)))\n    var isPrimeCountMax18 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax19 = Int(sqrt(Double(n)))\n    var isPrimeCountMax20 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax21 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax22 = Int(sqrt(Double(n)))\n    var isPrimeCountMax23 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax24 = Int(sqrt(Double(n)))\n    var isPrimeCountMax25 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax26 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax27 = Int(sqrt(Double(n)))\n    var isPrimeCountMax28 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax29 = Int(sqrt(Double(n)))\n    var isPrimeCountMax30 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax31 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax32 = Int(sqrt(Double(n)))\n    var isPrimeCountMax33 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax34 = Int(sqrt(Double(n)))\n    var isPrimeCountMax35 =\
    \ Int(sqrt(Double(n)))\n    var isPrime", "    var factorization = [Int]()\n \
    \   var factorizationCount = [Int]()\n    var factorizationIndex = 0\n    var\
    \ isPrime = true\n    var isPrimeIndex = -1\n    var isPrimeCount = 0\n    var\
    \ isPrimeIndexCount = 0\n    var isPrimeIndex = 0\n    var isPrimeIndex2 = 0\n\
    \    var isPrimeIndexCount2 = 0\n    var isPrimeIndex2Count = 0\n    var isPrimeIndex3\
    \ = 0\n    var isPrimeIndexCount3 = 0\n    var isPrimeIndex3Count = 0\n    var\
    \ isPrimeIndex4 = 0\n    var isPrimeIndexCount4 = 0\n    var isPrimeIndex4Count\
    \ = 0\n    var isPrimeIndex5 = 0\n    var isPrimeIndexCount5 = 0\n    var isPrimeIndex5Count\
    \ = 0\n    var isPrimeIndex6 = 0\n    var isPrimeIndexCount6 = 0\n    var isPrimeIndex6Count\
    \ = 0\n    var isPrimeIndex7 = 0\n    var isPrimeIndexCount7 = 0\n    var isPrimeIndex7Count\
    \ = 0\n    var isPrimeIndex8 = 0\n    var isPrimeIndexCount8 = 0\n    var isPrimeIndex8Count\
    \ = 0\n    var isPrimeIndex9 = 0\n    var isPrimeIndexCount9 = 0\n    var isPrimeIndex9Count\
    \ = 0\n    var isPrimeIndex10 = 0\n    var isPrimeIndexCount10 = 0\n    var isPrimeIndex10Count\
    \ = 0\n    var isPrimeIndex11 = 0\n    var isPrimeIndexCount11 = 0\n    var isPrimeIndex11Count\
    \ = 0\n    var isPrimeIndex12 = 0\n    var isPrimeIndexCount12 = 0\n    var isPrimeIndex12Count\
    \ = 0\n    var isPrimeIndex13 = 0\n    var isPrimeIndexCount13 = 0\n    var isPrimeIndex13Count\
    \ = 0\n    var isPrimeIndex14 = 0\n    var isPrimeIndexCount14 = 0\n    var isPrimeIndex14Count\
    \ = 0\n    var isPrimeIndex15 = 0\n    var isPrimeIndexCount15 = 0\n    var isPrimeIndex15Count\
    \ = 0\n    var isPrimeIndex16 = 0\n    var isPrimeIndexCount16 = 0\n    var isPrimeIndex16Count\
    \ = 0\n    var isPrimeIndex17 = 0\n    var isPrimeIndexCount17 = 0\n    var isPrimeIndex17Count\
    \ = 0\n    var isPrimeIndex18 = 0\n    var isPrimeIndexCount18 = 0\n    var isPrimeIndex18Count\
    \ = 0\n    var isPrimeIndex19 = 0\n    var isPrime", "    var factors: [Int] =\
    \ []\n    var factorization: [[Int]] = [[]]\n    var factorizationIndex = 0\n\
    \    var factorizationIndexMax = factorizationIndex\n    var factorizationIndexMax2\
    \ = factorizationIndex\n    var factorizationIndexMax3 = factorizationIndex\n\
    \    var factorizationIndexMax4 = factorizationIndex\n    var factorizationIndexMax5\
    \ = factorizationIndex\n    var factorizationIndexMax6 = factorizationIndex\n\
    \    var factorizationIndexMax7 = factorizationIndex\n    var factorizationIndexMax8\
    \ = factorizationIndex\n    var factorizationIndexMax9 = factorizationIndex\n\
    \    var factorizationIndexMax10 = factorizationIndex\n    var factorizationIndexMax11\
    \ = factorizationIndex\n    var factorizationIndexMax12 = factorizationIndex\n\
    \    var factorizationIndexMax13 = factorizationIndex\n    var factorizationIndexMax14\
    \ = factorizationIndex\n    var factorizationIndexMax15 = factorizationIndex\n\
    \    var factorizationIndexMax16 = factorizationIndex\n    var factorizationIndexMax17\
    \ = factorizationIndex\n    var factorizationIndexMax18 = factorizationIndex\n\
    \    var factorizationIndexMax19 = factorizationIndex\n    var factorizationIndexMax20\
    \ = factorizationIndex\n    var factorizationIndexMax21 = factorizationIndex\n\
    \    var factorizationIndexMax22 = factorizationIndex\n    var factorizationIndexMax23\
    \ = factorizationIndex\n    var factorizationIndexMax24 = factorizationIndex\n\
    \    var factorizationIndexMax25 = factorizationIndex\n    var factorizationIndexMax26\
    \ = factorizationIndex\n    var factorizationIndexMax27 = factorizationIndex\n\
    \    var factorizationIndexMax28 = factorizationIndex\n    var factorizationIndexMax29\
    \ = factorizationIndex\n    var factorizationIndexMax30 = factorizationIndex\n\
    \    var factorizationIndexMax31 = factorizationIndex\n    var factorizationIndexMax32\
    \ = factorizationIndex\n    var factorizationIndexMax33 = factorizationIndex\n\
    \    var factorizationIndexMax34 = factorizationIndex\n    var factorizationIndexMax35\
    \ = factorizationIndex\n    var factorizationIndexMax36 = factorizationIndex\n\
    \    var factorizationIndexMax37 = factorizationIndex\n    var factorizationIndexMax38\
    \ = factorizationIndex\n    var factorizationIndexMax39 = factorizationIndex\n\
    \    var factorizationIndexMax40 = factorizationIndex\n    var factorizationIndexMax41\
    \ = factorizationIndex\n    var factorizationIndexMax42 = factorizationIndex\n\
    \    var factorizationIndexMax43 = factorizationIndex\n    var factorizationIndexMax44\
    \ = factorizationIndex\n    var factorizationIndexMax45 = factorizationIndex\n\
    \    var factorizationIndexMax4", "    var factorization = [Int]()\n    var factorizationCount\
    \ = 0\n    var factorizationSum = 0\n    var factorizationSumOfSquares = 0\n \
    \   var factorizationSumOfCubes = 0\n    var factorizationSumOfCubesSquares =\
    \ 0\n    var factorizationSumOfCubesSquareRoot = 0\n    var factorizationSumOfCubesSquareRootSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubes = 0\n    var factorizationSumOfCubesSquareRootCubesSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRoot = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubes = 0\n   \
    \ var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquares = 0\n    var\
    \ factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRoot = 0\n    var\
    \ factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootSquares = 0\n\
    \    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubes\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRoot\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubes\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRoot\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubes\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquares\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRoot\
    \ = 0\n    var factorizationSumOfCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootCubesSquareRootSquare",
  "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n    while i <= n\
    \ {\n        if n % i == 0 {\n            factors.append(factor)\n           \
    \ factor = 1\n        } else {\n            factor *= i\n        }\n        i\
    \ += 1\n    }\n    if factor > 1 {\n        factors.append(factor)\n    }\n  \
    \  return factors", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var factorizationIndex = 0\n    var isPrime = true\n    var isPrimeIndex\
    \ = 0\n    var isPrimeCount = 0\n    var isPrimeFactorization = false\n    var\
    \ isPrimeFactorizationIndex = 0\n    var isPrimeFactorizationCount = 0\n    var\
    \ isPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeIndex =\
    \ 0\n    var isPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationIndex = 0\n    var isPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrime = false\n    var isPrimeFactorizationPrimeFactorizationPrimeIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeCount = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationCount =\
    \ 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime = false\n\
    \    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeIndex =\
    \ 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorization\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationIndex\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationCount\
    \ = 0\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPrimeFactorizationPrime\
    \ = false\n    var isPrimeFactorizationPrimeFactorizationPrimeFactorizationPri",
  "    var factors = [Int]()\n    var i = 2\n    var factor = 1\n    while i <= n\
    \ {\n        while n % i == 0 {\n            factors.append(factor)\n        \
    \    n /= i\n            factor = 1\n        }\n        i += 1\n        factor++\n\
    \    }\n    if n > 1 {\n        factors.append(factor)\n    }\n    return factors",
  "    var factors = [Int]()\n    var i = 2\n    var p = Int(n)\n    while p > 1 {\n\
    \        while p % i == 0 {\n            factors.append(i)\n            p /= i\n\
    \        }\n        i += 1\n    }\n    return factors", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var isPrime: Bool =\
    \ false\n    var isPrimeFactorization: Bool = false\n    var isPrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimeFactorization: Bool = false\n    var\
    \ isPrimePrimePrimePrimeFactorization: Bool = false\n    var isPrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimeFactorization: Bool =\
    \ false\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization: Bool = false\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization: Bool =\
    \ false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization:\
    \ Bool = false\n    var isPri", "    var factors = [Int]()\n    var factorization\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeCountMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeCountMax2 = Int(sqrt(Double(n)))\n  \
    \  var isPrimeCountMax3 = Int(sqrt(Double(n)))\n    var isPrimeCountMax4 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax5 = Int(sqrt(Double(n)))\n    var isPrimeCountMax6 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax7 = Int(sqrt(Double(n)))\n    var isPrimeCountMax8 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax9 = Int(sqrt(Double(n)))\n    var isPrimeCountMax10 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax11 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax12 = Int(sqrt(Double(n)))\n    var isPrimeCountMax13 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax14 = Int(sqrt(Double(n)))\n    var isPrimeCountMax15 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax16 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax17 = Int(sqrt(Double(n)))\n    var isPrimeCountMax18 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax19 = Int(sqrt(Double(n)))\n    var isPrimeCountMax20 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax21 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax22 = Int(sqrt(Double(n)))\n    var isPrimeCountMax23 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax24 = Int(sqrt(Double(n)))\n    var isPrimeCountMax25 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax26 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax27 = Int(sqrt(Double(n)))\n    var isPrimeCountMax28 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax29 = Int(sqrt(Double(n)))\n    var isPrimeCountMax30 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax31 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax32 = Int(sqrt(Double(n)))\n    var isPrimeCountMax33 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax34 = Int(sqrt(Double(n)))\n    var isPrimeCountMax35 =\
    \ Int(sqrt(Double(n)))\n    var isPri", "    var factors: [Int] = []\n    var\
    \ factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n\n    for _ in 0..<n {\n        factorizationCount += 1\n        factorizationSum\
    \ += factorizationCount\n        if factorizationSum == n {\n            factorizationSum\
    \ += factorizationCount\n            factorizationCount -= 1\n        }\n    \
    \    factorization.append(factorizationCount)\n    }\n\n    for _ in 0..<n {\n\
    \        factorizationCount -= 1\n        factorizationSum += factorizationCount\n\
    \        if factorizationSum == n {\n            factorizationSum += factorizationCount\n\
    \            factorizationCount += 1\n        }\n        factorization.append(factorizationCount)\n\
    \    }\n\n    for _ in 0..<n {\n        factorizationCount += 1\n        factorizationSum\
    \ += factorizationCount\n        if factorizationSum == n {\n            factorizationSum\
    \ += factorizationCount\n            factorizationCount -= 1\n        }\n    \
    \    factorization.append(factorizationCount)\n    }\n\n    for _ in 0..<n {\n\
    \        factorizationCount -= 1\n        factorizationSum += factorizationCount\n\
    \        if factorizationSum == n {\n            factorizationSum += factorizationCount\n\
    \            factorizationCount += 1\n        }\n        factorization.append(factorizationCount)\n\
    \    }\n\n    for _ in 0..<n {\n        factorizationCount += 1\n        factorizationSum\
    \ += factorizationCount\n        if factorizationSum == n {\n            factorizationSum\
    \ += factorizationCount\n            factorizationCount -= 1\n        }\n    \
    \    factorization.append(factorizationCount)\n    }\n\n    for _ in 0..<n {\n\
    \        factorizationCount -= 1\n        factorizationSum += factorizationCount\n\
    \        if factorizationSum == n {\n            factorizationSum += factorizationCount\n\
    \            factorizationCount += 1\n        }\n        factorization.append(factorizationCount)\n\
    \    }\n\n    for _ in 0..<n {\n        factorizationCount += 1\n        factorizationSum\
    \ += factorizationCount\n        if factorizationSum == n {\n            factorizationSum\
    \ += factorizationCount\n            factorizationCount -= 1\n        }\n    \
    \    factorization.append(factorizationCount)\n    }\n\n    return factorization",
  "    var factors: [Int] = []\n    var factor: Int = 0\n    var i: Int = 0\n    var\
    \ j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n   \
    \ var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n\
    \    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int\
    \ = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e:\
    \ Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var m: Int = 0\n   \
    \ var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n\
    \    var s: Int = 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int =\
    \ 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int\
    \ = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d:\
    \ Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var\
    \ h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n   \
    \ var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n\
    \    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int =\
    \ 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c:\
    \ Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var\
    \ g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n   \
    \ var k: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n\
    \    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int =\
    \ 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int\
    \ = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b:\
    \ Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var\
    \ f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n", "    var factorization:\
    \ [Int] = []\n    var primeFactorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var primeFactorizationCount = 0\n    var isPrime = true\n    var isPrimeCount\
    \ = 0\n    var isPrimeFactorization = true\n    var isPrimeFactorizationCount\
    \ = 0\n    var isPrimePrimeFactorization = true\n    var isPrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimeFactorization = true\n    var isPrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimeFactorization = true\n    var isPrimePrimePrimePrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeFactorization = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorizationCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorizationCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactorization\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePri",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationMax\
    \ = Int(sqrt(Double(n)))\n    var factorizationMin = factorizationMax\n    var\
    \ factorizationSum = 0\n    var factorizationSumMax = 0\n    var factorizationSumMin\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorizationSumMinIndex\
    \ = 0\n    var factorizationSumMaxIndex = 0\n    var factorization", "    var\
    \ factors = [Int]()\n    var factorization = factorizationOfNumber(n)\n    for\
    \ factor in factorization {\n        factors.append(factor)\n    }\n    return\
    \ factors", "    var factors = [Int]()\n    var primeFactors = [Int]()\n    var\
    \ primeFactorsCount = 0\n    var isPrime = true\n    var isPrimeCount = 0\n  \
    \  var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ primeFactorizationCount = 0\n    var isPrime = true\n    var isPrimeCount =\
    \ 0\n    var isPrimePrime = true\n    var isPrimePrimeCount = 0\n    var isPrimePrimePrime\
    \ = true\n    var isPrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrime =\
    \ true\n    var isPrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n    var\
    \ isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount = 0\n  \
    \  var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime = true\n\
    \    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime\
    \ = true\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrime",
  "    var factorization = [Int]()\n    var primeFactorization = [Int]()\n    var\
    \ isPrime = [Bool]()\n    var isPrimeCount = 0\n    var isPrimeCountMax = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax2 = Int(sqrt(Double(n)))\n    var isPrimeCountMax3 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax4 = Int(sqrt(Double(n)))\n    var isPrimeCountMax5 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax6 = Int(sqrt(Double(n)))\n    var isPrimeCountMax7 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax8 = Int(sqrt(Double(n)))\n    var isPrimeCountMax9 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax10 = Int(sqrt(Double(n)))\n    var isPrimeCountMax11 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax12 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax13 = Int(sqrt(Double(n)))\n    var isPrimeCountMax14 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax15 = Int(sqrt(Double(n)))\n    var isPrimeCountMax16 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax17 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax18 = Int(sqrt(Double(n)))\n    var isPrimeCountMax19 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax20 = Int(sqrt(Double(n)))\n    var isPrimeCountMax21 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax22 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax23 = Int(sqrt(Double(n)))\n    var isPrimeCountMax24 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax25 = Int(sqrt(Double(n)))\n    var isPrimeCountMax26 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax27 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax28 = Int(sqrt(Double(n)))\n    var isPrimeCountMax29 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax30 = Int(sqrt(Double(n)))\n    var isPrimeCountMax31 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeCountMax32 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeCountMax33 = Int(sqrt(Double(n)))\n    var isPrimeCountMax34 = Int(sqrt(Double(n)))\n\
    \    var isPrimeCountMax35 = Int(sqrt(Double(n)))\n    var ", "    var factors\
    \ = [Int]()\n    var factorization = factorizationOfNumber(n)\n    for factor\
    \ in factorization {\n        factors.append(factor)\n    }\n    return factors",
  "    var factorization: [Int] = []\n    var factor: Int\n    var i: Int\n    var\
    \ j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n   \
    \ var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n\
    \    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n\
    \    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n\
    \    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n\
    \    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n\
    \    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n\
    \    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: Int\n    var b: Int\n    var c: Int\n    var d: Int\n\
    \    var e: Int\n    var f: Int\n    var g: Int\n    var h: Int\n    var i: Int\n\
    \    var j: Int\n    var k: Int\n    var l: Int\n    var m: Int\n    var n: Int\n\
    \    var p: Int\n    var q: Int\n    var r: Int\n    var s: Int\n    var t: Int\n\
    \    var u: Int\n    var v: Int\n    var w: Int\n    var x: Int\n    var y: Int\n\
    \    var z: Int\n    var a: ", "    var factorization: [Int] = []\n    var factorizationCount\
    \ = 0\n    var currentFactorizationCount = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization", "    var factors = [Int]()\n    var primeFactors\
    \ = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeIndex = 0\n    var isPrimeIndexMax\
    \ = Int(sqrt(Double(n)))\n    var isPrimeIndexMax2 = Int(sqrt(Double(n)))\n  \
    \  var isPrimeIndexMax3 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax4 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax5 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax6 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax7 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax8 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax9 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax10 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax11 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax12 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax13 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax14 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax15 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax16 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax17 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax18 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax19 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax20 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax21 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax22 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax23 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax24 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax25 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax26 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax27 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax28 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax29 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax30 =\
    \ Int(sqrt(Double(n)))\n    var isPrimeIndexMax31 = Int(sqrt(Double(n)))\n   \
    \ var isPrimeIndexMax32 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax33 = Int(sqrt(Double(n)))\n\
    \    var isPrimeIndexMax34 = Int(sqrt(Double(n)))\n    var isPrimeIndexMax35 =\
    \ Int(sqrt(Double(n)))\n    var isPri", "    var factorization: [Int] = []\n \
    \   var primeFactorization: [Int] = []\n    var factorizationCount = 0\n    var\
    \ primeFactorizationCount = 0\n    var factorizationPrimeCount = 0\n    var primeFactorizationPrimeCount\
    \ = 0\n    var factorizationPrime: Int\n    var primeFactorizationPrime: Int\n\
    \    var factorizationPrimeCountPrime: Int\n    var primeFactorizationPrimeCountPrime:\
    \ Int\n    var factorizationPrimePrime: Int\n    var primeFactorizationPrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime:\
    \ Int\n    var factorizationPrimePrimePrime: Int\n    var factorizationPrimePrimePrime: ",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex\
    \ = 0\n    var factorizationArray: [Int] = []\n    var factorizationArrayCount\
    \ = 0\n    var factorizationArrayIndex = 0\n    var factorizationArrayCountMax\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMin = Int(pow(Double(n),\
    \ Double(2)))\n    var factorizationArrayCountMaxMin = Int(pow(Double(n), Double(2)))\n\
    \    var factorizationArrayCountMinMin = Int(pow(Double(n), Double(2)))\n    var\
    \ factorizationArrayCountMaxMinMin = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factorizationArrayCountMaxMinMinMinMinMin\
    \ = Int(pow(Double(n), Double(2)))\n    var factor", "    var factorization: [Int]\
    \ = []\n    var factor: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n    var\
    \ k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n   \
    \ var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int = 0\n\
    \    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int =\
    \ 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a: Int\
    \ = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var e:\
    \ Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n    var\
    \ i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n   \
    \ var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int = 0\n\
    \    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int =\
    \ 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y: Int\
    \ = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var c:\
    \ Int = 0\n    var d: Int = 0\n    var e: Int = 0\n    var f: Int = 0\n    var\
    \ g: Int = 0\n    var h: Int = 0\n    var i: Int = 0\n    var j: Int = 0\n   \
    \ var k: Int = 0\n    var l: Int = 0\n    var m: Int = 0\n    var n: Int = 0\n\
    \    var p: Int = 0\n    var q: Int = 0\n    var r: Int = 0\n    var s: Int =\
    \ 0\n    var t: Int = 0\n    var u: Int = 0\n    var v: Int = 0\n    var w: Int\
    \ = 0\n    var x: Int = 0\n    var y: Int = 0\n    var z: Int = 0\n    var a:\
    \ Int = 0\n    var b: Int = 0\n    var c: Int = 0\n    var d: Int = 0\n    var\
    \ e: Int = 0\n    var f: Int = 0\n    var g: Int = 0\n    var h: Int = 0\n   \
    \ var i: Int = 0\n    var j: Int = 0\n    var k: Int = 0\n    var l: Int = 0\n\
    \    var m: Int = 0\n    var n: Int = 0\n    var p: Int = 0\n    var q: Int =\
    \ 0\n    var r: Int = 0\n    var s: Int = 0\n    var t: Int = 0\n    var u: Int\
    \ = 0\n    var v: Int = 0\n    var w: Int = 0\n    var x: Int = 0\n    var y:\
    \ Int = 0\n    var z: Int = 0\n    var a: Int = 0\n    var b: Int = 0\n    var\
    \ c: Int = 0\n", "    var factors = [Int]()\n    var primes = [Int]()\n    var\
    \ primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeFactors =\
    \ [Bool]()\n    var isPrimePrimeFactors = [Bool]()\n    var isPrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimeFactors = [Bool]()\n    var isPrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimeFactors = [Bool]()\n   \
    \ var isPrimePrimePrimePrimePrimePrimePrimeFactors = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors =\
    \ [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeFactors\
    \ = [Bool]()\n    var isPrimePrimePrimePri", "    var factors = [Int]()\n    var\
    \ primeFactors = [Int]()\n    var isPrime = [Bool]()\n    var isPrimeCount = 0\n\
    \    var isPrimeCountMax = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax2\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax3 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax4 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax5\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax6 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax7 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax8\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax9 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax10 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax11\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax12 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax13 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax14\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax15 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax16 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax17\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax18 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax19 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax20\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax21 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax22 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax23\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax24 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax25 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax26\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax27 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax28 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax29\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax30 = Int(ceil(sqrt(Double(n))))\n\
    \    var isPrimeCountMax31 = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax32\
    \ = Int(ceil(sqrt(Double(n))))\n    var isPrimeCountMax33 = Int(ceil(sqrt(Double(n",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var factorizationSum\
    \ = 0\n    var factorizationSum2 = 0\n    var factorizationSum3 = 0\n    var factorizationSum4\
    \ = 0\n    var factorizationSum5 = 0\n    var factorizationSum6 = 0\n    var factorizationSum7\
    \ = 0\n    var factorizationSum8 = 0\n    var factorizationSum9 = 0\n    var factorizationSum10\
    \ = 0\n    var factorizationSum11 = 0\n    var factorizationSum12 = 0\n    var\
    \ factorizationSum13 = 0\n    var factorizationSum14 = 0\n    var factorizationSum15\
    \ = 0\n    var factorizationSum16 = 0\n    var factorizationSum17 = 0\n    var\
    \ factorizationSum18 = 0\n    var factorizationSum19 = 0\n    var factorizationSum20\
    \ = 0\n    var factorizationSum21 = 0\n    var factorizationSum22 = 0\n    var\
    \ factorizationSum23 = 0\n    var factorizationSum24 = 0\n    var factorizationSum25\
    \ = 0\n    var factorizationSum26 = 0\n    var factorizationSum27 = 0\n    var\
    \ factorizationSum28 = 0\n    var factorizationSum29 = 0\n    var factorizationSum30\
    \ = 0\n    var factorizationSum31 = 0\n    var factorizationSum32 = 0\n    var\
    \ factorizationSum33 = 0\n    var factorizationSum34 = 0\n    var factorizationSum35\
    \ = 0\n    var factorizationSum36 = 0\n    var factorizationSum37 = 0\n    var\
    \ factorizationSum38 = 0\n    var factorizationSum39 = 0\n    var factorizationSum40\
    \ = 0\n    var factorizationSum41 = 0\n    var factorizationSum42 = 0\n    var\
    \ factorizationSum43 = 0\n    var factorizationSum44 = 0\n    var factorizationSum45\
    \ = 0\n    var factorizationSum46 = 0\n    var factorizationSum47 = 0\n    var\
    \ factorizationSum48 = 0\n    var factorizationSum49 = 0\n    var factorizationSum50\
    \ = 0\n    var factorizationSum51 = 0\n    var factorizationSum52 = 0\n    var\
    \ factorizationSum53 = 0\n    var factorizationSum54 = 0\n    var factorizationSum55\
    \ = 0\n    var factorizationSum56 = 0\n    var factorizationSum57 = 0\n    var\
    \ factorizationSum58 = 0\n    var factorizationSum59 = 0\n    var factorizationSum60\
    \ = 0\n    var factorizationSum61 = 0\n    var factorizationSum62 = 0\n    var\
    \ factorizationSum63 = 0\n    var factorizationSum64 = 0\n    var factorizationSum65\
    \ = 0\n    var factorizationSum66 = 0\n    var factorizationSum67 = 0\n    var\
    \ factorizationSum68 = 0\n    var factorizationSum69 = 0\n    var factorizationSum70\
    \ = 0\n    var factorizationSum71 = 0\n    var factorization", "    var factorization:\
    \ [Int] = []\n    var factorizationCount = 0\n    var factorizationIndex = 0\n\
    \    var factorizationMax = Int(sqrt(Double(n)))\n    var factorizationMin = factorizationMax\n\
    \    var factorizationMaxIndex = 0\n    var factorizationMinIndex = 0\n    var\
    \ factorizationMaxCount = 0\n    var factorizationMinCount = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCountIndex = 0\n    var factorizationMaxCountIndex\
    \ = 0\n    var factorizationMinCount", "    var factorization: [Int] = []\n  \
    \  var factorizationCount = 0\n    var currentFactorizationCount = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization", "    var factors:\
    \ [Int] = []\n    var i = 2\n    while i * i <= n {\n        if n % i == 0 {\n\
    \            factors.append(i)\n            n /= i\n        } else {\n       \
    \     i += 1\n        }\n    }\n    if n > 1 {\n        factors.append(n)\n  \
    \  }\n    return factors", "    var factors: [Int] = []\n    var primeFactors:\
    \ [Int] = []\n    var isPrime: [Bool] = []\n    var isPrimeIndex: Int = 0\n  \
    \  var isPrimeCount: Int = 0\n    var isPrimeCountMax: Int = 0\n    var isPrimeCountMaxIndex:\
    \ Int = 0\n    var isPrimeCountMin: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var isPrimeCountMinIndex: Int\
    \ = 0\n    var isPrimeCountMaxIndex: Int = 0\n    var is", "    var factors =\
    \ [Int]()\n    var factorization = factorizationOfNumber(n)\n    var factorizationCount\
    \ = 1\n    for factor in factorization {\n        if factor == 1 {\n         \
    \   factors.append(factor)\n        } else {\n            factors.append(factor)\n\
    \            factors.append(factorizationCount)\n            factorizationCount\
    \ *= factor\n        }\n    }\n    return factors", "    var factors: [Int] =\
    \ []\n    var factorization: [Int] = []\n    var factorizationCount = 0\n    var\
    \ currentFactorizationCount = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int = 0\n    var\
    \ currentFactorization: Int = 0\n    var currentFactorization: Int", "    var\
    \ factorization = [Int]()\n    var primeFactorization = [Int]()\n    var primeFactorizationCount\
    \ = [Int]()\n    var factorizationCount = 0\n    var primeFactorizationCount =\
    \ 0\n    var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var primeFactorization = 1\n    var primeFactorizationCount\
    \ = 0\n    var factorizationCount = 0\n    var primeFactorizationCount = 0\n \
    \   var factorization = 1\n    var prime", "    var factorization: [Int] = []\n\
    \    var primeFactorization: [Int] = []\n    var isPrime: [Bool] = []\n    var\
    \ isPrimeCount: [Int] = []\n    var isPrimeCountMax: Int = 1\n    var isPrimeCountMin:\
    \ Int = 1\n    var isPrimeCountSum: Int = 0\n    var isPrimeCountSumMax: Int =\
    \ 0\n    var isPrimeCountSumMin: Int = 0\n    var isPrimeCountSumMaxMin: Int =\
    \ 0\n    var isPrimeCountSumMaxMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMin:\
    \ Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMinMinMin: Int = 0\n    var isPrimeCountSumMaxMinMinMinMinMin",
  "    var factorization = [Int]()\n    var i = 2\n    var factor = 1\n    while i\
    \ < n {\n        if n % i == 0 {\n            factor *= i\n            factorization.append(factor)\n\
    \            n /= i\n        } else {\n            i += 1\n        }\n    }\n\
    \    if n > 1 {\n        factorization.append(n)\n    }\n    return factorization",
  "    var factorization: [Int] = []\n    var factor = 2\n    var factorizationCount\
    \ = 0\n    while n > 1 {\n        while n % factor == 0 {\n            factorizationCount\
    \ += 1\n            n /= factor\n        }\n        factorization = [factorizationCount]\
    \ + factorization\n        factor++\n    }\n    return factorization", "    var\
    \ factors = [Int]()\n    var primes = [Int]()\n    var primeFactors = [Int]()\n\
    \    var isPrime = [Bool]()\n    var isPrimeFactors = [Bool]()\n    var isPrimeFactorsCount\
    \ = [Int]()\n    var isPrimeFactorsCountMax = Int()\n    var isPrimeFactorsCountMaxIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValue = Int()\n    var isPrimeFactorsCountMaxValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var isPrimeFactorsCountMaxValueValueValueValue\
    \ = Int()\n    var isPrimeFactorsCountMaxValueValueValueIndex = Int()\n    var\
    \ isPrimeFactorsCountMaxValueValueValueValue = Int()\n    var isPrimeFactorsCountMaxValue",
  "    var factorization: [Int] = []\n    var factorizationCount = 0\n    var currentFactorizationCount\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization: Int\
    \ = 0\n    var currentFactorization: Int = 0\n    var currentFactorization", " \
    \   var factorization: [Int] = []\n    var factor: Int = 0\n    var i: Int = 0\n\
    \    var j: Int = 0\n    var count: Int = 0\n    var isPrime: Bool = false\n \
    \   var isPrime2: Bool = false\n    var isPrime3: Bool = false\n    var isPrime4:\
    \ Bool = false\n    var isPrime5: Bool = false\n    var isPrime6: Bool = false\n\
    \    var isPrime7: Bool = false\n    var isPrime8: Bool = false\n    var isPrime9:\
    \ Bool = false\n    var isPrime10: Bool = false\n    var isPrime11: Bool = false\n\
    \    var isPrime12: Bool = false\n    var isPrime13: Bool = false\n    var isPrime14:\
    \ Bool = false\n    var isPrime15: Bool = false\n    var isPrime16: Bool = false\n\
    \    var isPrime17: Bool = false\n    var isPrime18: Bool = false\n    var isPrime19:\
    \ Bool = false\n    var isPrime20: Bool = false\n    var isPrime21: Bool = false\n\
    \    var isPrime22: Bool = false\n    var isPrime23: Bool = false\n    var isPrime24:\
    \ Bool = false\n    var isPrime25: Bool = false\n    var isPrime26: Bool = false\n\
    \    var isPrime27: Bool = false\n    var isPrime28: Bool = false\n    var isPrime29:\
    \ Bool = false\n    var isPrime30: Bool = false\n    var isPrime31: Bool = false\n\
    \    var isPrime32: Bool = false\n    var isPrime33: Bool = false\n    var isPrime34:\
    \ Bool = false\n    var isPrime35: Bool = false\n    var isPrime36: Bool = false\n\
    \    var isPrime37: Bool = false\n    var isPrime38: Bool = false\n    var isPrime39:\
    \ Bool = false\n    var isPrime40: Bool = false\n    var isPrime41: Bool = false\n\
    \    var isPrime42: Bool = false\n    var isPrime43: Bool = false\n    var isPrime44:\
    \ Bool = false\n    var isPrime45: Bool = false\n    var isPrime46: Bool = false\n\
    \    var isPrime47: Bool = false\n    var isPrime48: Bool = false\n    var isPrime49:\
    \ Bool = false\n    var isPrime50: Bool = false\n    var isPrime51: Bool = false\n\
    \    var isPrime52: Bool = false\n    var isPrime53: Bool = false\n    var isPrime54:\
    \ Bool = false\n    var is", "    var factorization: [Int] = []\n    var factor\
    \ = 2\n    while factor <= n {\n        while n % factor == 0 {\n            factorization.append(factor)\n\
    \            n /= factor\n        }\n        factor++\n    }\n    if n > 1 {\n\
    \        factorization.append(n)\n    }\n    return factorization"]
stop_tokens:
- "\n}"

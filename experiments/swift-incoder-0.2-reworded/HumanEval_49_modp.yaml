name: HumanEval_49_modp
language: swift
prompt: "\n/// Return 2^n modulo p (be aware of numerics).\n/// >>> modp(n: 3, p:\
  \ 5)\n/// 3\n/// >>> modp(n: 1101, p: 101)\n/// 2\n/// >>> modp(n: 0, p: 101)\n\
  /// 1\n/// >>> modp(n: 3, p: 11)\n/// 8\n/// >>> modp(n: 100, p: 101)\n/// 1\nfunc\
  \ modp(n: Int, p: Int) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(modp(n: 3, p: 5) == 3)\nassert(modp(n: 1101,\
  \ p: 101) == 2)\nassert(modp(n: 0, p: 101) == 1)\nassert(modp(n: 3, p: 11) == 8)\n\
  assert(modp(n: 100, p: 101) == 1)\nassert(modp(n: 30, p: 5) == 4)\nassert(modp(n:\
  \ 31, p: 5) == 3)"
completions: ["    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1\
    \ {\n        return modp(n, p - 1)\n    }\n    if p > p {\n        return modp(n,\
    \ p - p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {", "\tif n < 0\
    \ {\n\t\tpanic(\"modp requires a positive number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires a positive number\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\
    \t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p - p)\n\t}\n\
    \treturn modp((n - p) * (n - p) / 2, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\
    \t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\tswitch {\n\
    \tcase n < 0:\n\t\treturn 0\n\tcase n <= p:\n\t\treturn n\n\tcase n > p:\n\t\t\
    return modp(n - p, p)\n\t}", '    return n % p', "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: negative modulus\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"modp: modulus is too\
    \ large\")\n\t}\n\tvar res int\n\tfor i := 0; i < p; i++ {\n\t\tres = (res * n)\
    \ % p\n\t}\n\treturn res", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p\
    \ < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\")\n\t}\n\t\
    if n == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == 2\
    \ {\n\t\treturn p + 1\n\t}\n\tif n == 3 {\n\t\treturn p + 2\n\t}\n\tif n == 4\
    \ {\n\t\treturn p + 3\n\t}\n\tif n == 5 {\n\t\treturn p + 4\n\t}\n\tif n == 6\
    \ {\n\t\treturn p + 5\n\t}\n\tif n == 7 {\n\t\treturn p + 6\n\t}\n\tif n == 8\
    \ {\n\t\treturn p + 7\n\t}\n\tif n == 9 {\n\t\treturn p + 8\n\t}\n\tif n == 10\
    \ {\n\t\treturn p + 9\n\t}\n\tif n == 11 {\n\t\treturn p + 10\n\t}\n\tif n ==\
    \ 12 {\n\t\treturn p + 11\n\t}\n\tif n == 13 {\n\t\treturn p + 12\n\t}\n\tif n\
    \ == 14 {\n\t\treturn p + 13\n\t}\n\tif n == 15 {\n\t\treturn p + 14\n\t}\n\t\
    if n == 16 {\n\t\treturn p + 15\n\t}\n\tif n == 17 {\n\t\treturn p + 16\n\t}\n\
    \tif n == 18 {\n\t\treturn p + 17\n\t}\n\tif n == 19 {\n\t\treturn p + 18\n\t\
    }\n\tif n == 20 {\n\t\treturn p + 19\n\t}\n\tif n == 21 {\n\t\treturn p + 20\n\
    \t}\n\tif n == 22 {\n\t\treturn p + 21\n\t}\n\tif n == 23 {\n\t\treturn p + 22\n\
    \t}\n\tif n == 24 {\n\t\treturn p + 23\n\t}\n\tif n == 25 {\n\t\treturn p + 24\n\
    \t}\n\tif n == 26 {\n\t\treturn p + 25\n\t}\n\tif n == 27 {\n\t\treturn p + 26\n\
    \t}\n\tif n == 28 {\n\t\treturn p + 27\n\t}\n\tif n == 29 {\n\t\treturn p + 28\n\
    \t}\n\tif n == 30 {\n\t\treturn p + 29\n\t}\n\tif n == 31 {\n\t\treturn p + 30\n\
    \t}\n\tif n == 32 {\n\t\treturn p + 31\n\t}\n\tif n == 33 {\n\t\treturn p + 32\n\
    \t}\n\tif n == 34 {\n\t\treturn p + 33\n\t}\n\tif n == 35 {\n\t\treturn p + 34\n\
    \t}\n\tif n == 36 {\n\t\treturn p + 35\n\t}\n\tif n == 37 {\n\t\treturn p + 36\n\
    \t}\n\tif n == 38 {\n\t\treturn p + 37\n\t}\n\tif n == 39 {\n\t\treturn p + 38",
  "\treturn (n & (-p)) + (n & p)", "    if n < 0 {\n        return modp(-n, p)\n \
    \   }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n    \
    \    return modp(n, p - 1)\n    }\n    if n == 0 {\n        return 0\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return ", "\tif n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\t\
    if p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\
    \tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < p\
    \ {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p - p)\n\
    \t}\n\treturn modp(n - p, p)", "\tswitch {\n\tcase n < p:\n\t\treturn n\n\tcase\
    \ n == p:\n\t\treturn 1\n\tcase n == 0 || n == p:\n\t\treturn 0\n\tcase n >= p:\n\
    \t\treturn modp(n - p, p)\n\tdefault:\n\t\treturn modp((p - 1) * (n - p), p)\n\
    \t}", "    if n == 0 {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    return modp((n\
    \ - p) + p, p)", "\tswitch {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\t\
    return 1\n\tcase n >= p:\n\t\treturn n - p\n\t}", "    if n < 0 {\n        return\
    \ modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n & (p - 1), p)\n\
    \    }\n    if p > n {\n        return modp(n & (p - 1), p)\n    }\n    return\
    \ n & (p - 1)", "\tswitch {\n\tcase n < 0 || p < 0 || p > n:\n\t\treturn 0\n\t\
    case n == p:\n\t\treturn n\n\tcase n == 0 || p == 0:\n\t\treturn 1\n\tcase p ==\
    \ n:\n\t\treturn 0\n\tcase p == 1 or n == 1 or p == n:\n\t\treturn n\n\tcase p\
    \ == 2 or n == 2 or p == n:\n\t\treturn n\n\tcase p == 3 or n == 3 or p == n:\n\
    \t\treturn n\n\tcase p == 4 or n == 4 or p == n:\n\t\treturn n\n\tcase p == 5\
    \ or n == 5 or p == n:\n\t\treturn n\n\tcase p == 6 or n == 6 or p == n:\n\t\t\
    return n\n\tcase p == 7 or n == 7 or p == n:\n\t\treturn n\n\tcase p == 8 or n\
    \ == 8 or p == n:\n\t\treturn n\n\tcase p == 9 or n == 9 or p == n:\n\t\treturn\
    \ n\n\tcase p == 10 or n == 10 or p == n:\n\t\treturn n\n\tcase p == 11 or n ==\
    \ 11 or p == n:\n\t\treturn n\n\tcase p == 12 or n == 12 or p == n:\n\t\treturn\
    \ n\n\tcase p == 13 or n == 13 or p == n:\n\t\treturn n\n\tcase p == 14 or n ==\
    \ 14 or p == n:\n\t\treturn n\n\tcase p == 15 or n == 15 or p == n:\n\t\treturn\
    \ n\n\tcase p == 16 or n == 16 or p == n:\n\t\treturn n\n\tcase p == 17 or n ==\
    \ 17 or p == n:\n\t\treturn n\n\tcase p == 18 or n == 18 or p == n:\n\t\treturn\
    \ n\n\tcase p == 19 or n == 19 or p == n:\n\t\treturn n\n\tcase p == 20 or n ==\
    \ 20 or p == n:\n\t\treturn n\n\tcase p == 21 or n == 21 || p == n:\n\t\treturn\
    \ n\n\tcase p == 22 or n == 22 || p == n:\n\t\treturn n\n\tcase p == 23 or n ==\
    \ 23 || p == n:\n\t\treturn n\n\tcase p == 24 or n == 24 || p == n:\n\t\treturn\
    \ n\n\tcase p == 25 or n == 25 || p == n:\n\t\treturn n\n\tcase p == 26 or n ==\
    \ 26 || p == n:\n\t\treturn n\n\tcase p == 27 or n == 27 || p == n:\n\t\treturn\
    \ n\n\tcase p == 28 or n == 28 || p == n:\n\t\treturn n\n\tcase p == 29 or n ==\
    \ 29 || p == n:\n\t\treturn n\n\tcase p == 30 or n == 30 || p == n:\n\t\treturn\
    \ n\n\tcase ", "\tif n < 0 {\n\t\tpanic(\"modp requires n >= 0\")\n\t}\n\tif p\
    \ < 1 {\n\t\tpanic(\"modp requires p >= 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\
    \t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ p > p {\n\t\tpanic(\"modp requires p <= p\")\n\t}\n\tr := 1\n\tfor i := n -\
    \ 1; i >= 0; i-- {\n\t\tr *= p\n\t\tr += n\n\t}\n\treturn r", "\tif n == 0 ||\
    \ p == 0 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase p < 0:\n\t\treturn modp(n, -p)\n\tdefault:\n\t\treturn modp(n / p,\
    \ p)\n\t}", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n     \
    \   return p\n    }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n\
    \        return modp(n, p - 1)\n    }\n    if p > p {\n        return modp(n,\
    \ p - 2)\n    }\n    if p % 2 == 1 {\n        return modp(n, p - 1)\n    }\n \
    \   if p % 2 == 0 {\n        return modp(n, p - 2)\n    }\n    return modp(n,\
    \ p - 3)", "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p\
    \ < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n,\
    \ p - p)\n\t}\n\treturn modp(n - p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\
    \t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif n\
    \ == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn 1\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif ", "\treturn (n & (p - 1)) == 0 ? n : n - 1", "\tif n < 0 {\n\t\
    \tpanic(\"modp requires positive number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp\
    \ requires positive modulus\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n\
    \ == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tq := n / p\n\t\
    r := n % p\n\treturn modp(q, p) * p + r", "    if n == 0 {\n        return 1\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n    return modp(n,\
    \ p - n)", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if p < n {\n\
    \        return modp(n - p, p)\n    }\n    if p > n {\n        return modp(n,\
    \ p)\n    }\n    return modp(n - p, p)", "\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(abs(n), p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n & (p\
    \ - 1)\n\t}", "    if n == 0 {\n        return n\n    }\n    if n == 1 {\n   \
    \     return p\n    }\n    if n == p {\n        return n\n    }\n    if n > p\
    \ {\n        return modp(n - p, p)\n    }\n    return modp((p - 1) * (n - p),\
    \ p)", "\tswitch {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\
    \tcase n >= p:\n\t\treturn n - p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp: negative\
    \ number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == ", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n\
    \ <= p:\n\t\treturn n\n\tcase n >= p && n <= p*p:\n\t\treturn n\n\tdefault:\n\t\
    \treturn modp((n-p)/p, p)\n\t}", "    if n < 0 {\n        return modp(-n, p)\n\
    \    }\n    if p < 1 {\n        return modp(n, p - 1)\n    }\n    if p > p {\n\
    \        return modp(n, p)\n    }\n    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return ", "    if n < 0 {\n        return modp(-n, p)\n    }\n    if\
    \ p < 1 {\n        return modp(n, p - 1)\n    }\n    if p > p {\n        return\
    \ modp(n, p)\n    }\n    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return ",
  "\tswitch {\n\tcase n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n\
    \ > p:\n\t\treturn modp(n - p, p)\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(-n, p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}",
  "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 0 {\n\t\treturn 0\n\t}\n\tif n >= p\
    \ {\n\t\treturn n - p\n\t}\n\treturn n % p", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n   \
    \ return modp(n, p - n)", "    if n < 0 {\n        return modp(abs(n), p)\n  \
    \  }\n    if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n\
    \        return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if p ==\
    \ 1 {\n        return n\n    }\n    if n == 1 {\n        return p\n    }\n   \
    \ if n == 2 {\n        return p + 1\n    }\n    if n == 3 {\n        return p\
    \ + 2\n    }\n    if n == 4 {\n        return p + 3\n    }\n    if n == 5 {\n\
    \        return p + 4\n    }\n    if n == 6 {\n        return p + 5\n    }\n \
    \   if n == 7 {\n        return p + 6\n    }\n    if n == 8 {\n        return\
    \ p + 7\n    }\n    if n == 9 {\n        return p + 8\n    }\n    if n == 10 {\n\
    \        return p + 9\n    }\n    if n == 11 {\n        return p + 10\n    }\n\
    \    if n == 12 {\n        return p + 11\n    }\n    if n == 13 {\n        return\
    \ p + 12\n    }\n    if n == 14 {\n        return p + 13\n    }\n    if n == 15\
    \ {\n        return p + 14\n    }\n    if n == 16 {\n        return p + 15\n \
    \   }\n    if n == 17 {\n        return p + 16\n    }\n    if n == 18 {\n    \
    \    return p + 17\n    }\n    if n == 19 {\n        return p + 18\n    }\n  \
    \  if n == 20 {\n        return p + 19\n    }\n    if n == 21 {\n        return\
    \ p + 20\n    }\n    if n == 22 {\n        return p + 21\n    }\n    if n == 23\
    \ {\n        return p + 22\n    }\n    if n == 24 {\n        return p + 23\n \
    \   }\n    if n == 25 {\n        return p + 24\n    }\n    if n == 26 {\n    \
    \    return p + 25\n    }\n    if n == 27 {\n        return p + 26\n    }\n  \
    \  if n == 28 {\n        return p + 27\n    }\n    if n == 29 {\n        return\
    \ p + 28\n    }\n    if n == 30 {\n        return p + 29\n    }\n    if n == 31\
    \ {\n        return p + 30\n    }\n    if n == 32 {\n        return p + 31\n \
    \   }\n    if n == 33 {\n        return p + 32\n    }\n    if n == 34 {\n    \
    \    return p + 33\n    }\n    if n == 35 {\n        return p + 34\n    }\n  \
    \  if n == 36 {\n        return p + 35\n    }\n    if n == 37 {\n        return\
    \ p + 36\n    }\n    if n == 38 {\n        return p + 37\n    }\n    if n == 39\
    \ {\n        return p", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\t\
    return p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\tp = p - 1\n\t\
    }\n\tif p > p {\n\t\tp = p - 1\n\t}\n\tlet q = p / p\n\tlet r = p % p\n\tlet s\
    \ = q * q\n\tlet t = s * q\n\tlet u = t * q\n\tlet v = t * r\n\tlet w = u * r\n\
    \tlet x = v * r\n\tlet y = w * r\n\tlet z = x * r\n\tlet a = y * r\n\tlet b =\
    \ z * r\n\tlet c = a * r\n\tlet d = b * r\n\tlet e = c * r\n\tlet f = d * r\n\t\
    let g = e * r\n\tlet h = f * r\n\treturn h", "\tif n < 0 {\n\t\tn = -n\n\t\tp\
    \ = -p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\t\
    switch {\n\tcase n < 0:\n\t\treturn 0\n\tcase n <= p:\n\t\treturn n\n\tcase n\
    \ >= p:\n\t\treturn p\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn\
    \ modp(n - p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\
    \tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}", "\tswitch {\n\tcase n < 0:\n\
    \t\treturn modp(abs(n), p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn\
    \ n % p\n\t}", "\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tlet r = n % p\n\t\
    if r == 0 {\n\t\treturn n\n\t}\n\treturn r", "\tif n < 0 {\n\t\tn = -n\n\t}\n\t\
    if p < 0 {\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 0 {\n\
    \t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p - 1 {\n\t\treturn p\n\t\
    }\n\tif n == p - 1 {\n\t\treturn p\n\t}\n\tif n == p - 2 {\n\t\treturn p + 1\n\
    \t}\n\tif n == p - 2 {\n\t\treturn p + 1\n\t}\n\tif n == p - 3 {\n\t\treturn p\
    \ + 2\n\t}\n\tif n == p - 3 {\n\t\treturn p + 2\n\t}\n\tif n == p - 4 {\n\t\t\
    return p + 3\n\t}\n\tif n == p - 4 {\n\t\treturn p + 3\n\t}\n\tif n == p - 5 {\n\
    \t\treturn p + 4\n\t}\n\tif n == p - 5 {\n\t\treturn p + 4\n\t}\n\tif n == p -\
    \ 6 {\n\t\treturn p + 5\n\t}\n\tif n == p - 6 {\n\t\treturn p + 5\n\t}\n\tif n\
    \ == p - 7 {\n\t\treturn p + 6\n\t}\n\tif n == p - 7 {\n\t\treturn p + 6\n\t}\n\
    \tif n == p - 8 {\n\t\treturn p + 7\n\t}\n\tif n == p - 8 {\n\t\treturn p + 7\n\
    \t}\n\tif n == p - 9 {\n\t\treturn p + 8\n\t}\n\tif n == p - 9 {\n\t\treturn p\
    \ + 8\n\t}\n\tif n == p - 10 {\n\t\treturn p + 9\n\t}\n\tif n == p - 10 {\n\t\t\
    return p + 9\n\t}\n\tif n == p - 11 {\n\t\treturn p + 10\n\t}\n\tif n == p - 11\
    \ {\n\t\treturn p + 10\n\t}\n\tif n == p - 12 {\n\t\treturn p + 11\n\t}\n\tif\
    \ n == p - 12 {\n\t\treturn p + 11\n\t}\n\tif n == p - 13 {\n\t\treturn p + 12\n\
    \t}\n\tif n == p - 13 {\n\t\treturn p + 12\n\t}\n\tif n == p - 14 {\n\t\treturn\
    \ p + 13\n\t}\n\tif n == p - 14 {\n\t\treturn p + 13\n\t}\n\tif n == p - 15 {\n\
    \t\treturn p + 14\n\t}\n\tif n == p - 15 {\n\t\treturn p + 14\n\t}\n\tif n ==\
    \ p - 16 {\n\t\treturn p + 15\n\t}\n\tif n == p - 16 {\n\t\treturn p + 15\n\t\
    }\n\tif n == p - 17 {\n\t\treturn p + 16\n\t}\n\tif n == p - 17 {\n\t\treturn\
    \ p + 16\n\t}\n\tif n == p - 18 {\n\t\treturn p + 17\n\t}\n\tif n == p - 18",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 2 {\n       \
    \ return n\n    }\n    if p < p {\n        return modp(n - 1, p)\n    }\n    if\
    \ p < p {\n        return modp(n + 1, p)\n    }\n    return modp(n - 2, p)", " \
    \   if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == p {\n        return n\n    }\n    if p < n {\n        return\
    \ modp(n - p, p)\n    }\n    if p > n {\n        return modp(n, p)\n    }\n  \
    \  return modp(n - p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch\
    \ {\n\tcase p < 0:\n\t\tpanic(\"modp: negative modulus\")\n\tcase p == 0:\n\t\t\
    return 0\n\tcase p == 1:\n\t\treturn n\n\tcase p % 2 == 0:\n\t\treturn modp(n\
    \ / 2, p)\n\tdefault:\n\t\treturn modp(n / 2, p) + modp((n / 2) * (n % 2), p)\n\
    \t}", "    if n == 0 {\n        return 1\n    }\n    if p == 0 {\n        return\
    \ 0\n    }\n    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p <\
    \ 0 {\n        return modp(abs(n), -p)\n    }\n    if p > p {\n        return\
    \ modp(n, p)\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == ", "\tif n < 0 {\n\t\tpanic(\"\
    modp requires positive n\")\n\t}\n\tif p < 2 {\n\t\tpanic(\"modp requires positive\
    \ p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\treturn modp(n - 1, p)\n\
    \t}\n\tif p > p {\n\t\treturn modp(n, p - 1)\n\t}\n\tq := n / p\n\tr := n % p\n\
    \treturn modp(q, p) * p + r", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 1 {\n        return modp(n / p, p)\n    }\n    if p > p {\n\
    \        return modp(p / n, p)\n    }\n    return n - (n % p)", "\tif n < 0 {\n\
    \t\tpanic(\"modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp\
    \ called with p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\tpanic(\"\
    modp called with p > p\")\n\t}\n\tq := p\n\tfor n > 0 {\n\t\tq /= 2\n\t\tn--\n\
    \t}\n\treturn q", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n   \
    \ if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 {\n       \
    \ return 0\n    }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n", "\tif n < 0 {\n\t\tpanic(\"modp requires positive number\")\n\t}\n\tif\
    \ p < 1 {\n\t\tpanic(\"modp requires positive modulus\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tmod := p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn mod - 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\
    \tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\treturn mod -\
    \ 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %= p\n\tif n ==\
    \ 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t}\n\tif n ==\
    \ p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\
    \t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t\
    }\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\
    \treturn mod - 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %=\
    \ p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t\
    }\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\
    \treturn mod\n\t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t}\n\tif n == p {\n\t\t\
    return mod\n\t}\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\t\
    if n == 1 {\n\t\treturn mod - 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod\
    \ += p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\treturn\
    \ mod - 1\n\t}\n\tif n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %= p\n\tif\
    \ n == 0 {\n\t\treturn mod\n\t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t}\n\tif\
    \ n == p {\n\t\treturn mod\n\t}\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\treturn\
    \ mod\n\t}\n\tif n == 1 {\n\t\treturn mod - 1\n\t}\n\tif n == p {\n\t\treturn\
    \ mod\n\t}\n\tmod += p\n\tn %= p\n\tif n == 0 {\n\t\treturn mod\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn mod - 1\n\t}\n\tif n == ", "\tif n < 0 {\n\t\tpanic(\"modp called\
    \ with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\tpanic(\"modp called with p <\
    \ p\")\n\t}\n\tx := n\n\ty := p\n\tfor {\n\t\tx -= y\n\t\tif x == 0 {\n\t\t\t\
    return y\n\t\t}\n\t\ty *= 2\n\t}", '    return n & (p - 1)', "\tif n == 0 || p\
    \ == 0 {\n\t\treturn 1\n\t}\n\tswitch {\n\tcase p < 0:\n\t\treturn modp(n - 1,\
    \ -p)\n\tcase n < 0:\n\t\treturn modp(-n, p)\n\tdefault:\n\t\treturn modp(n &\
    \ (p - 1), p)\n\t}", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n < p {\n\t\treturn modp(n -\
    \ p, p)\n\t}\n\treturn modp((n - p) + p, p)", "    if n == 0 {\n        return\
    \ 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n < p {\n        return modp(n - p, p)\n    }\n   \
    \ return modp((p - n) % p, p)", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn ((n % p) + p) % p\n\
    \t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >= p:\n\
    \t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tdefault:\n\t\treturn modp(n - p,\
    \ p)\n\t}", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}", '    return n & (p - 1)', "\tif n == 0 {\n\t\
    \treturn 1\n\t}\n\tif p == 0 {\n\t\treturn 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n <= p {\n\t\treturn modp(n - 1, p)\
    \ + p\n\t}\n\treturn modp(p, n)", "    if n == 0 {\n        return 1\n    }\n\
    \    if p == 0 {\n        return 0\n    }\n    if n == p {\n        return n\n\
    \    }\n    if n < p {\n        return modp(n - p, p)\n    }\n    return modp((p\
    \ - n) % p, p)", "    if n < 0 {\n        return modp(-n, p)\n    }\n    if p\
    \ < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n        return modp(n,\
    \ p - 1)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return ",
  "\tif n == 0 || p == 0 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(n, -p)\n\t}\n\tswitch {\n\t\
    case p < n:\n\t\treturn modp(n - p, p)\n\tcase p > n:\n\t\treturn modp(n, p -\
    \ n)\n\t}\n\treturn (p % n) + 1", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif\
    \ n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif p < n {\n\t\treturn modp(n - p, p)\n\t}\n\treturn modp(n,\
    \ p - n)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 2 {\n\t\treturn\
    \ 0\n\t}\n\tif p > p {\n\t\treturn 0\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\t\
    if n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p\
    \ {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif ", "\tif n <\
    \ 0 {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp called with p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1\
    \ {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tq := n / p\n\tr :=\
    \ n % p\n\tif r == 0 {\n\t\treturn q\n\t}\n\treturn q + modp(q, p)", "\tif n <\
    \ 0 {\n\t\tn = -n\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\tif p > p {\n\t\tpanic(\"\
    modp p must be positive\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1\
    \ {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn ", "\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(n, abs(p))\n\tcase p == 0:\n\
    \t\treturn 0\n\tdefault:\n\t\treturn n & (p - 1)\n\t}", "\tif n < 0 {\n\t\tpanic(\"\
    modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with\
    \ p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n >= p {\n\t\treturn modp(n - p, p)\n\
    \t}\n\treturn modp((p - 1) * (n - p) + p, p)", "\tif n < 0 {\n\t\tpanic(\"modp:\
    \ negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\")\n\t}\n\tif\
    \ n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tswitch {\n\tcase p < n:\n\t\treturn modp(n - p, p)\n\tcase\
    \ p > n:\n\t\treturn modp(n, p - n)\n\tdefault:\n\t\treturn modp(n - p, p)\n\t\
    }", "    if n == 0 {\n        return 1\n    }\n    if p == 0 {\n        return\
    \ 0\n    }\n    if n >= p {\n        return n - p\n    }\n    return p + (n -\
    \ p)", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p < 0:\n\
    \t\treturn modp(-n, p)\n\tcase p == 0:\n\t\treturn 0\n\tdefault:\n\t\treturn n\
    \ & (p - 1)\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp requires positive n\")\n\t\
    }\n\tif p < 1 {\n\t\tpanic(\"modp requires positive p\")\n\t}\n\tif n == 0 {\n\
    \t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn\
    \ modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\
    \t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif\
    \ p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\
    \t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p,\
    \ p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn\
    \ modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\
    \t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif\
    \ p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\
    \t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n,\
    \ p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn\
    \ modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif p > p {\n\
    \t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\t}\n\tif\
    \ p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p, p)\n\
    \t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn modp(n-p,\
    \ p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\t\treturn\
    \ modp(n-p, p)\n\t}\n\tif p > p {\n\t\treturn modp(n, p-p)\n\t}\n\tif p < p {\n\
    \t\treturn modp(n-p, p)\n\t}\n", "    if n < 0 {\n        n += p\n    }\n    if\
    \ n < p {\n        return n\n    }\n    if n == p {\n        return 1\n    }\n\
    \    if n > p {\n        return modp(n - p, p)\n    }\n    return 0", "\tif n\
    \ < 0 {\n\t\tpanic(\"modp called with negative n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp called with p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1\
    \ {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\
    \t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\
    \t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\
    \tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n ==\
    \ p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif n == p {\n\t\t\
    return 0\n\t}\n\tif n == p {\n\t\treturn 0\n", "\tif n < 0 {\n\t\tn = -n\n\t\t\
    p = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"\
    p > p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 0\n\t}\n\tif\
    \ n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}", "  \
    \  if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n       \
    \ return modp(n, p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n\
    \ == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if p % 2 == 1 {\n        return modp(n / 2, p)\n    }\n    if p % 2 == 0\
    \ {\n        return modp((n - 1) / 2, p)\n    }\n    if p < p {\n        return\
    \ modp((n - 1) / 2, p)\n    }\n    if p > p {\n        return modp(n, p)\n   \
    \ }\n    return modp((n - 1) / 2, p)", "    if n == 0 {\n        return p\n  \
    \  }\n    if p == 0 {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n > p {\n        return modp(n - p, p)\n    }\n    if n < p\
    \ {\n        return modp(n, p - n)\n    }\n    return 0", "\tif n < 0 {\n\t\t\
    panic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p < 1\"\
    )\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\t\
    if n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\treturn modp(n, p - 1)\n\t}\n\
    \tq := p / n\n\tr := p % n\n\treturn modp(q, p) + r", "    if n < 0 {\n      \
    \  return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if p == 1 {\n        return n\n    }\n    if n == 1 {\n      \
    \  return p\n    }\n    if n == 2 {\n        return p\n    }\n    if n == 3 {\n\
    \        return p\n    }\n    if n == 4 {\n        return p\n    }\n    if n ==\
    \ 5 {\n        return p\n    }\n    if n == 6 {\n        return p\n    }\n   \
    \ if n == 7 {\n        return p\n    }\n    if n == 8 {\n        return p\n  \
    \  }\n    if n == 9 {\n        return p\n    }\n    if n == 10 {\n        return\
    \ p\n    }\n    if n == 11 {\n        return p\n    }\n    if n == 12 {\n    \
    \    return p\n    }\n    if n == 13 {\n        return p\n    }\n    if n == 14\
    \ {\n        return p\n    }\n    if n == 15 {\n        return p\n    }\n    if\
    \ n == 16 {\n        return p\n    }\n    if n == 17 {\n        return p\n   \
    \ }\n    if n == 18 {\n        return p\n    }\n    if n == 19 {\n        return\
    \ p\n    }\n    if n == 20 {\n        return p\n    }\n    if n == 21 {\n    \
    \    return p\n    }\n    if n == 22 {\n        return p\n    }\n    if n == 23\
    \ {\n        return p\n    }\n    if n == 24 {\n        return p\n    }\n    if\
    \ n == 25 {\n        return p\n    }\n    if n == 26 {\n        return p\n   \
    \ }\n    if n == 27 {\n        return p\n    }\n    if n == 28 {\n        return\
    \ p\n    }\n    if n == 29 {\n        return p\n    }\n    if n == 30 {\n    \
    \    return p\n    }\n    if n == 31 {\n        return p\n    }\n    if n == 32\
    \ {\n        return p\n    }\n    if n == 33 {\n        return p\n    }\n    if\
    \ n == 34 {\n        return p\n    }\n    if n == 35 {\n        return p\n   \
    \ }\n    if n == 36 {\n        return p\n    }\n    if n == 37 {\n        return\
    \ p\n    }\n    if n == 38 {\n        return p\n    }\n    if n == 39 {\n    \
    \    return p\n    }\n    if n == 40 {\n        return p\n    }\n    if n == 41\
    \ {\n        return p\n    }\n    if n == 42 {\n        return p\n    }\n    if\
    \ n == 43 {\n        return p\n    }\n    if n == 44 {\n        return p\n   \
    \ }\n    if n == 45 {\n        return p\n    }\n    if n == 46 {\n        return\
    \ p\n    }\n", "\treturn (n & (p - 1)) == 0 ? n : n - 1", "\tif n == 0 {\n\t\t\
    return 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n < p {\n\t\treturn modp(n - p, p)\n\t}\n\treturn modp((p - 1) * (n\
    \ - p), p)", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p\
    \ < 1 {\n        return modp(n / p, p)\n    }\n    if p > p {\n        return\
    \ modp(n / p, p)\n    }\n    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if ", "\tswitch {\n\t\
    case n < p:\n\t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tcase n > p:\n\t\treturn\
    \ modp(n - p, p)\n\t}", "    if n < 0 {\n        return modp(-n, p)\n    }\n \
    \   if p < 2 {\n        return n\n    }\n    if p > p {\n        return modp(n\
    \ - p, p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return modp(n - p, p)\n\
    \    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n\
    \        return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n\
    \ - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if\
    \ n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return\
    \ modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n\
    \    if n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n    \
    \    return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p,\
    \ p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if n ==\
    \ p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n\
    \ - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if\
    \ n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return\
    \ modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n\
    \    if n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n    \
    \    return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p,\
    \ p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if n ==\
    \ p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n\
    \ - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if\
    \ n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return\
    \ modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n\
    \    if n == p {\n        return modp(n - p, p)\n    }\n    if n == p {\n    \
    \    return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n - p,\
    \ p)\n    }\n    if n == p {\n        return modp(n - p, p)\n    }\n    if n ==\
    \ p {\n        return modp(n - p, p)\n    }\n    if n == p {\n        return modp(n\
    \ - p, p)\n", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase p\
    \ < 0:\n\t\treturn modp(-n, p)\n\tcase p == 0:\n\t\treturn 0\n\tcase p == 1:\n\
    \t\treturn n\n\tdefault:\n\t\tlet r = n % p\n\t\tif r == 0 {\n\t\t\treturn modp(r,\
    \ n)\n\t\t}\n\t\treturn modp(r, p) + p\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp\
    \ requires n >= 0\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires p >= 1\")\n\
    \t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\t\
    if p > p {\n\t\treturn modp(n, p - p)\n\t}\n\treturn modp(n + p - 1, p)", "  \
    \  if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n       \
    \ return modp(n, p)\n    }\n    if n == 0 {\n        return 0\n    }\n    if p\
    \ == 1 {\n        return n\n    }\n    if p == 2 {\n        return modp(n / 2,\
    \ p)\n    }\n    if p == 3 {\n        return modp(n / 3, p)\n    }\n    if p ==\
    \ 4 {\n        return modp(n / 4, p)\n    }\n    if p == 5 {\n        return modp(n\
    \ / 5, p)\n    }\n    if p == 6 {\n        return modp(n / 6, p)\n    }\n    if\
    \ p == 7 {\n        return modp(n / 7, p)\n    }\n    if p == 8 {\n        return\
    \ modp(n / 8, p)\n    }\n    if p == 9 {\n        return modp(n / 9, p)\n    }\n\
    \    if p == 10 {\n        return modp(n / 10, p)\n    }\n    if p == 11 {\n \
    \       return modp(n / 11, p)\n    }\n    if p == 12 {\n        return modp(n\
    \ / 12, p)\n    }\n    if p == 13 {\n        return modp(n / 13, p)\n    }\n \
    \   if p == 14 {\n        return modp(n / 14, p)\n    }\n    if p == 15 {\n  \
    \      return modp(n / 15, p)\n    }\n    if p == 16 {\n        return modp(n\
    \ / 16, p)\n    }\n    if p == 17 {\n        return modp(n / 17, p)\n    }\n \
    \   if p == 18 {\n        return modp(n / 18, p)\n    }\n    if p == 19 {\n  \
    \      return modp(n / 19, p)\n    }\n    if p == 20 {\n        return modp(n\
    \ / 20, p)\n    }\n    if p == 21 {\n        return modp(n / 21, p)\n    }\n \
    \   if p == 22 {\n        return modp(n / 22, p)\n    }\n    if p == 23 {\n  \
    \      return modp(n / 23, p)\n    }\n    if p == 24 {\n        return modp(n\
    \ / 24, p)\n    }\n    if p == 25 {\n        return modp(n / 25, p)\n    }\n \
    \   if p == 26 {\n        return modp(n / 26, p)\n    }\n    if p == 27 {\n  \
    \      return modp(n / 27, p)\n    }\n    if p == 28 {\n        return modp(n\
    \ / 28, p)\n    }\n    if p == 29 {\n        return modp(n / 29, p)\n    }\n \
    \   if p == 30 {\n        return modp(n / 30, p)\n    }\n    if p == 31 {\n  \
    \      return modp(n / 31, p)\n    }\n", "\tswitch {\n\tcase n < 0:\n\t\treturn\
    \ modp(abs(n), p)\n\tcase p < 0:\n\t\treturn modp(n, abs(p))\n\tcase p == 0:\n\
    \t\treturn 0\n\tcase p % 2 == 1:\n\t\treturn modp(n*n, p)\n\tdefault:\n\t\treturn\
    \ modp(n*(n-1), p)\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\t\treturn ((n % p) + p) % p\n\
    \t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >= p:\n\
    \t\treturn 0\n\tcase n == p:\n\t\treturn 1\n\tdefault:\n\t\treturn modp(n / p,\
    \ p)\n\t}", "\tif n < 0 {\n\t\tpanic(\"modp requires positive number\")\n\t}\n\
    \tif p < 1 {\n\t\tpanic(\"modp requires positive modulus\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tq := n / p\n\tr := n % p\n\treturn q * p + r", "\tif n < 0 {\n\
    \t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p >\
    \ p {\n\t\tpanic(\"p > p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n ==\
    \ 1 {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}", "    if n < 0 {\n        n += p\n    }\n    if n < p {\n     \
    \   return n\n    }\n    if n == p {\n        return 1\n    }\n    if n > p {\n\
    \        return modp(n - p, p)\n    }\n    return 0", "    if n < 0 {\n      \
    \  return modp(abs(n), p)\n    }\n    if p < 0 {\n        return modp(n, abs(p))\n\
    \    }\n    if n == 0 {\n        return 0\n    }\n    if p == 0 {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n <= p {\n      \
    \  return modp(n - p, p)\n    }\n    return modp(p, n)", "\tif n < 0 {\n\t\tn\
    \ = -n\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 1 {\n\t\t\
    return n\n\t}\n\tif p > 1 {\n\t\tp = p - 1\n\t}\n\tx := n\n\tfor x != 0 {\n\t\t\
    x = x % p\n\t}\n\treturn x", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch\
    \ {\n\tcase p < 0:\n\t\treturn 0\n\tcase p == 0:\n\t\treturn n\n\tcase p < n:\n\
    \t\treturn p % n\n\tdefault:\n\t\treturn n % p\n\t}", "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n\
    \    return modp(n, p - n)", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if n == 0 {\n  \
    \      return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if p < p {\n        return modp(n - p, p)\n\
    \    }\n    if p > p {\n        return modp(n, p)\n    }\n    if p % 2 == 0 {\n\
    \        return modp(n / 2, p)\n    }\n    return modp(n / 2, p) + modp(n % 2,\
    \ p)", "    if n < 0 {\n        return modp(-n, p)\n    }\n    if p < 2 {\n  \
    \      return n\n    }\n    if p > p {\n        return modp(n - p, p)\n    }\n\
    \    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }", "    if n\
    \ == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n    }\n\
    \    if n == p {\n        return n\n    }\n    if p < n {\n        return modp(n\
    \ - p, p)\n    }\n    if p > n {\n        return modp(n, p)\n    }\n    return\
    \ modp(n - p, p)", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\t\
    if p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\
    \t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\
    \t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p\
    \ < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n \
    \   if p < 0 {\n        return modp(n, abs(p))\n    }\n    if n == 0 || p == 0\
    \ {\n        return 0\n    }\n    if n == p {\n        return n\n    }\n    if\
    \ n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n\
    \    if n <= p {\n        return modp(n - p, p)\n    }\n    if p < n {\n     \
    \   return modp(n, p - n)\n    }\n    return modp(p - n, p)", "    if n == 0 {\n\
    \        return 1\n    }\n    if p == 0 {\n        return 0\n    }\n    if p >\
    \ n {\n        return modp(n, p - 1)\n    }\n    if p < n {\n        return modp(n,\
    \ p)\n    }\n    if n == p {\n        return n\n    }\n    if n == p+1 {\n   \
    \     return n\n    }\n    if n == p-1 {\n        return n\n    }\n    if n ==\
    \ p+2 {\n        return n\n    }\n    if n == p+3 {\n        return n\n    }\n\
    \    if n == p+4 {\n        return n\n    }\n    if n == p+5 {\n        return\
    \ n\n    }\n    if n == p+6 {\n        return n\n    }\n    if n == p+7 {\n  \
    \      return n\n    }\n    if n == p+8 {\n        return n\n    }\n    if n ==\
    \ p+9 {\n        return n\n    }\n    if n == p+10 {\n        return n\n    }\n\
    \    if n == p+11 {\n        return n\n    }\n    if n == p+12 {\n        return\
    \ n\n    }\n    if n == p+13 {\n        return n\n    }\n    if n == p+14 {\n\
    \        return n\n    }\n    if n == p+15 {\n        return n\n    }\n    if\
    \ n == p+16 {\n        return n\n    }\n    if n == p+17 {\n        return n\n\
    \    }\n    if n == p+18 {\n        return n\n    }\n    if n == p+19 {\n    \
    \    return n\n    }\n    if n == p+20 {\n        return n\n    }\n    if n ==\
    \ p+21 {\n        return n\n    }\n    if n == p+22 {\n        return n\n    }\n\
    \    if n == p+23 {\n        return n\n    }\n    if n == p+24 {\n        return\
    \ n\n    }\n    if n == p+25 {\n        return n\n    }\n    if n == p+26 {\n\
    \        return n\n    }\n    if n == p+27 {\n        return n\n    }\n    if\
    \ n == p+28 {\n        return n\n    }\n    if n == p+29 {\n        return n\n\
    \    }\n    if n == p+30 {\n        return n\n    }\n    if n == p+31 {\n    \
    \    return n\n    }\n    if n == p+32 {\n        return n\n    }\n    if n ==\
    \ p+33 {\n        return n\n    }\n    if n == p+34 {\n        return n\n    }\n\
    \    if n == p+35 {\n        return n\n    }\n    if n == p+36 {\n        return\
    \ n\n    }\n    if n == p+37 {\n        return n\n    }\n    if n == p+38 {\n",
  "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch {\n\tcase p < 0:\n\t\treturn\
    \ 0\n\tcase p == 0:\n\t\treturn n\n\tcase p == 1:\n\t\treturn 1\n\tcase p == 2:\n\
    \t\treturn 2\n\tcase p < n:\n\t\treturn p - 1\n\t}\n\tswitch {\n\tcase n % p ==\
    \ 0:\n\t\treturn n\n\tcase n % p == p:\n\t\treturn n\n\tcase n % p == p - 1:\n\
    \t\treturn n % p + 1\n\tcase n % p == p - 2:\n\t\treturn n % p + 2\n\tcase n %\
    \ p == p - 3:\n\t\treturn n % p + 3\n\tcase n % p == p - 4:\n\t\treturn n % p\
    \ + 4\n\tcase n % p == p - 5:\n\t\treturn n % p + 5\n\tcase n % p == p - 6:\n\t\
    \treturn n % p + 6\n\tcase n % p == p - 7:\n\t\treturn n % p + 7\n\tcase n % p\
    \ == p - 8:\n\t\treturn n % p + 8\n\tcase n % p == p - 9:\n\t\treturn n % p +\
    \ 9\n\tcase n % p == p - 10:\n\t\treturn n % p + 10\n\tcase n % p == p - 11:\n\
    \t\treturn n % p + 11\n\tcase n % p == p - 12:\n\t\treturn n % p + 12\n\tcase\
    \ n % p == p - 13:\n\t\treturn n % p + 13\n\tcase n % p == p - 14:\n\t\treturn\
    \ n % p + 14\n\tcase n % p == p - 15:\n\t\treturn n % p + 15\n\tcase n % p ==\
    \ p - 16:\n\t\treturn n % p + 16\n\tcase n % p == p - 17:\n\t\treturn n % p +\
    \ 17\n\tcase n % p == p - 18:\n\t\treturn n % p + 18\n\tcase n % p == p - 19:\n\
    \t\treturn n % p + 19\n\tcase n % p == p - 20:\n\t\treturn n % p + 20\n\tcase\
    \ n % p == p - 21:\n\t\treturn n % p + 21\n\tcase n % p == p - 22:\n\t\treturn\
    \ n % p + 22\n\tcase n % p == p - 23:\n\t\treturn n % p + 23\n\tcase n % p ==\
    \ p - 24:\n\t\treturn n % p + 24\n\tcase n % p == p - 25:\n\t\treturn n % p +\
    \ 25\n\tcase n % p == p - 26:\n\t\treturn n % p + 26\n\tcase n % p == p - 27:\n\
    \t\treturn n % p + 27\n\tcase n % p == p - 28:\n\t\treturn n % p + 28\n\tcase\
    \ n % p == p - 29:\n\t\treturn n % p + 29\n\tcase n % p == p - 30:\n\t\treturn\
    \ n % p + 30\n\tcase ", "\treturn (n & (p - 1)) == 0 ? n : n - 1", "\tswitch {\n\
    \tcase n < 0:\n\t\treturn modp(abs(n), p)\n\tcase n >= p:\n\t\treturn 0\n\tdefault:\n\
    \t\treturn n & (p - 1)\n\t}", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif\
    \ n < 0 {\n\t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp: p < 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\treturn modp(n -\
    \ p, p)\n\t}\n\treturn modp((n - p) / p, p)", "    if n < 0 {\n        return\
    \ modp(-n, p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if\
    \ p > p {\n        return modp(n, p - 1)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p -\
    \ 1 {\n        return n - 1\n    }\n    if n == p - 2 {\n        return n - 2\n\
    \    }\n    if n == p - 3 {\n        return n - 3\n    }\n    if n == p - 4 {\n\
    \        return n - 4\n    }\n    if n == p - 5 {\n        return n - 5\n    }\n\
    \    if n == p - 6 {\n        return n - 6\n    }\n    if n == p - 7 {\n     \
    \   return n - 7\n    }\n    if n == p - 8 {\n        return n - 8\n    }\n  \
    \  if n == p - 9 {\n        return n - 9\n    }\n    if n == p - 10 {\n      \
    \  return n - 10\n    }\n    if n == p - 11 {\n        return n - 11\n    }\n\
    \    if n == p - 12 {\n        return n - 12\n    }\n    if n == p - 13 {\n  \
    \      return n - 13\n    }\n    if n == p - 14 {\n        return n - 14\n   \
    \ }\n    if n == p - 15 {\n        return n - 15\n    }\n    if n == p - 16 {\n\
    \        return n - 16\n    }\n    if n == p - 17 {\n        return n - 17\n \
    \   }\n    if n == p - 18 {\n        return n - 18\n    }\n    if n == p - 19\
    \ {\n        return n - 19\n    }\n    if n == p - 20 {\n        return n - 20\n\
    \    }\n    if n == p - 21 {\n        return n - 21\n    }\n    if n == p - 22\
    \ {\n        return n - 22\n    }\n    if n == p - 23 {\n        return n - 23\n\
    \    }\n    if n == p - 24 {\n        return n - 24\n    }\n    if n == p - 25\
    \ {\n        return n - 25\n    }\n    if n == p - 26 {\n        return n - 26\n\
    \    }\n    if n == p - 27 {\n        return n - 27\n    }\n    if n == p - 28\
    \ {\n        return n - 28\n    }\n    if n == p - 29 {\n        return n - 29\n\
    \    }\n    if n == p - 30 {\n        return n - 30\n    }\n    if n == p - 31\
    \ {\n        return n - 31\n    }\n    if n == p - 32 {\n        return n - 32\n\
    \    }\n    if n == p - 33 {\n        return n - 33\n    }\n    if n == p - 34\
    \ {\n        return n - 34\n    }\n    if n == p - 35 {\n        return n - 35\n\
    \    }\n    if n == p - 36 {\n        return n - 36\n    }\n    if n == p - 37\
    \ {\n        return n - 37", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 2 {\n        return n\n    }\n    if p < p {\n        return\
    \ modp(n & (p - 1), p)\n    }\n    if p < p {\n        return modp(n >> 1, p)\n\
    \    }\n    return modp(n >> 2, p)", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n\
    \        return modp(n, p - 1)\n    }\n    if n == 0 {\n        return 0\n   \
    \ }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n < p {\n\t\treturn modp(n - p, p)\n\t\
    }\n\treturn modp((p - n) % p, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\
    \tif n == 0 {\n\t\treturn 1\n\t}\n\tif p == 0 {\n\t\treturn 0\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tq := n / p\n\tr := n % p\n\tif r == 0 {\n\t\treturn\
    \ q\n\t}\n\treturn q + modp(q, p)", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t\
    }\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p > p {\n\t\tp = p\n\t}\n\tlet mut n1\
    \ = n\n\tlet mut n2 = n\n\tlet mut n3 = n\n\tlet mut n4 = n\n\tlet mut n5 = n\n\
    \tlet mut n6 = n\n\tlet mut n7 = n\n\tlet mut n8 = n\n\tlet mut n9 = n\n\tlet\
    \ mut n10 = n\n\tlet mut n11 = n\n\tlet mut n12 = n\n\tlet mut n13 = n\n\tlet\
    \ mut n14 = n\n\tlet mut n15 = n\n\tlet mut n16 = n\n\tlet mut n17 = n\n\tlet\
    \ mut n18 = n\n\tlet mut n19 = n\n\tlet mut n20 = n\n\tlet mut n21 = n\n\tlet\
    \ mut n22 = n\n\tlet mut n23 = n\n\tlet mut n24 = n\n\tlet mut n25 = n\n\tlet\
    \ mut n26 = n\n\tlet mut n27 = n\n\tlet mut n28 = n\n\tlet mut n29 = n\n\tlet\
    \ mut n30 = n\n\tlet mut n31 = n\n\tlet mut n32 = n\n\tlet mut n33 = n\n\tlet\
    \ mut n34 = n\n\tlet mut n35 = n\n\tlet mut n36 = n\n\tlet mut n37 = n\n\tlet\
    \ mut n38 = n\n\tlet mut n39 = n\n\tlet mut n40 = n\n\tlet mut n41 = n\n\tlet\
    \ mut n42 = n\n\tlet mut n43 = n\n\tlet mut n44 = n\n\tlet mut n45 = n\n\tlet\
    \ mut n46 = n\n\tlet mut n47 = n\n\tlet mut n48 = n\n\tlet mut n49 = n\n\tlet\
    \ mut n50 = n\n\tlet mut n51 = n\n\tlet mut n52 = n\n\tlet mut n53 = n\n\tlet\
    \ mut n54 = n\n\tlet mut n55 = n\n\tlet mut n56 = n\n\tlet mut n57 = n\n\tlet\
    \ mut n58 = n\n\tlet mut ", "    if n < 0 {\n        return modp(abs(n), p)\n\
    \    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if p > p {\n   \
    \     return modp(n, p - 1)\n    }\n    return n & (p - 1)", "\treturn (n & (p\
    \ - 1)) == 0 ? n : n - 1", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase n >= p:\n\t\treturn n\n\tdefault:\n\t\treturn n % p\n\t}", "\tif\
    \ n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tlet r = p % n\n\tif r == 0 {\n\t\treturn\
    \ n\n\t}\n\treturn r", "    if n == 0 {\n        return 1\n    }\n    if n ==\
    \ 1 {\n        return p\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if p < n {\n        return modp(n - p, p)\n    }\n    return modp(n, p - n)",
  "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n       \
    \ return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p - 1)\n  \
    \  }\n    if n == 0 {\n        return 0\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n        return n\n    }\n   \
    \ if n == p {\n        return n\n    }\n    if n == p {\n        return n\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if n == p {\n        return n\n    }\n    if n == p {\n\
    \        return n\n    }\n    if n == p {\n        return n\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if n == p {\n", "\tif n < 0 {\n\t\tn = -n\n\
    \t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"\
    p > p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif\
    \ n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\
    \t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\
    \tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n ==\
    \ p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return p\n\t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\
    \t}\n\tif n == p {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn p\n\t}", "\t\
    if n < 0 {\n\t\tpanic(\"modp requires positive argument\")\n\t}\n\tif p < 1 {\n\
    \t\tpanic(\"modp requires positive argument\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tswitch {\n\tcase p < n:\n\t\treturn modp(n - p, p)\n\tcase p > n:\n\t\treturn\
    \ modp(n, p - n)\n\t}\n\tswitch {\n\tcase p < 2:\n\t\treturn modp(n - 1, p)\n\t\
    case p < 5:\n\t\treturn modp(n - 2, p)\n\tcase p < 10:\n\t\treturn modp(n - 3,\
    \ p)\n\tcase p < 20:\n\t\treturn modp(n - 4, p)\n\tcase p < 50:\n\t\treturn modp(n\
    \ - 5, p)\n\tcase p < 100:\n\t\treturn modp(n - 6, p)\n\tcase p < 200:\n\t\treturn\
    \ modp(n - 7, p)\n\tcase p < 500:\n\t\treturn modp(n - 8, p)\n\tcase p < 1000:\n\
    \t\treturn modp(n - 9, p)\n\tcase p < 2000:\n\t\treturn modp(n - 10, p)\n\tcase\
    \ p < 5000:\n\t\treturn modp(n - 11, p)\n\tcase p < 10000:\n\t\treturn modp(n\
    \ - 12, p)\n\tcase p < 20000:\n\t\treturn modp(n - 13, p)\n\tcase p < 50000:\n\
    \t\treturn modp(n - 14, p)\n\tcase p < 100000:\n\t\treturn modp(n - 15, p)\n\t\
    case p < 200000:\n\t\treturn modp(n - 16, p)\n\tcase p < 500000:\n\t\treturn modp(n\
    \ - 17, p)\n\tcase p < 1000000:\n\t\treturn modp(n - 18, p)\n\tcase p < 2000000:\n\
    \t\treturn modp(n - 19, p)\n\tcase p < 5000000:\n\t\treturn modp(n - 20, p)\n\t\
    case p < 10000000:\n\t\treturn modp(n - 21, p)\n\tcase p < 20000000:\n\t\treturn\
    \ modp(n - 22, p)\n\tcase p < 50000000:\n\t\treturn modp(n - 23, p)\n\tcase p\
    \ < 100000000:\n\t\treturn modp(n - 24, p)\n\tcase p < 200000000:\n\t\treturn\
    \ modp(n - 25, p)\n\tcase p < 500000000:\n\t\treturn modp(n - 26, p)\n\tcase p\
    \ < 1000000000:\n\t\treturn modp(n - 27, p)\n\tcase p < 2000000000:\n\t\treturn\
    \ modp(n - 28, p)\n\tcase p < 5000000000:\n\t\treturn modp(n - 29, p)\n\tcase\
    \ p ", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 1 {\n\
    \        return modp(n, p % p)\n    }\n    if p > p {\n        return modp(n,\
    \ p - 1)\n    }\n    return n", "\tswitch {\n\tcase n < 0:\n\t\treturn modp(abs(n),\
    \ p)\n\tcase p == 0:\n\t\treturn 0\n\tcase p == 1:\n\t\treturn n\n\tcase p < 2:\n\
    \t\treturn 1\n\tdefault:\n\t\tlet r = n % p\n\t\tif r == 0 {\n\t\t\treturn p\n\
    \t\t} else {\n\t\t\treturn r\n\t\t}\n\t}", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 2 {\n        return pow2(n)\n    }\n    if p < p {\n \
    \       return pow2(n) % p\n    }\n    if p < p {\n        return n % p\n    }\n\
    \    return n % p", "    if n < 0 {\n        return modp(abs(n), p)\n    }\n \
    \   if p < 1 {\n        return modp(n, p)\n    }\n    if n == 0 {\n        return\
    \ 0\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n      \
    \  return n\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p\
    \ > p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if p < p {\n\
    \        return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p)\n\
    \    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p > p {\n   \
    \     return modp(n, p)\n    }\n    if p < p {\n        return modp(n, p)\n  \
    \  }\n    if p > p {\n        return modp(n, p)\n    }\n    if p < p {\n     \
    \   return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n\
    \    if p < p {\n        return modp(n, p)\n    }\n    if p > p {\n        return\
    \ modp(n, p)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if\
    \ p > p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if p < p {\n\
    \        return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p)\n\
    \    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p > p {\n   \
    \     return modp(n, p)\n    }\n    if p < p {\n        return modp(n, p)\n  \
    \  }\n    if p > p {\n        return modp(n, p)\n    }\n    if p < p {\n     \
    \   return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n\
    \    if p < p {\n        return modp(n, p)\n    }\n    if p > p {\n        return\
    \ modp(n, p)\n    }\n    if p < p {\n        return modp(n, p)\n    }\n    if\
    \ p > p {\n        return modp(n, p)\n    }\n    if p < p {\n        return modp(n,\
    \ p)\n    }\n    if p > p {\n        return modp(n, p)\n    }\n    if p < p {\n\
    \        return modp(n, p)\n    }\n    if p > p {\n        return modp(n, p)\n\
    \    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p > p {", "\t\
    if n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif p < 2 {\n\
    \t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\
    \t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p\
    \ < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {", "  \
    \  if n < 0 {\n        return modp(abs(n), p)\n    }\n    if p < 0 {\n       \
    \ return modp(n, abs(p))\n    }\n    if n == 0 {\n        return 0\n    }\n  \
    \  if p == 0 {\n        return n\n    }\n    if p > n {\n        return modp(n,\
    \ p)\n    }\n    if p < n {\n        return modp(n, p)\n    }\n    if n == 1 {\n\
    \        return p\n    }\n    if n == 2 {\n        return p + 1\n    }\n    if\
    \ n == 3 {\n        return p + 2\n    }\n    if n == 4 {\n        return p + 3\n\
    \    }\n    if n == 5 {\n        return p + 4\n    }\n    if n == 6 {\n      \
    \  return p + 5\n    }\n    if n == 7 {\n        return p + 6\n    }\n    if n\
    \ == 8 {\n        return p + 7\n    }\n    if n == 9 {\n        return p + 8\n\
    \    }\n    if n == 10 {\n        return p + 9\n    }\n    if n == 11 {\n    \
    \    return p + 10\n    }\n    if n == 12 {\n        return p + 11\n    }\n  \
    \  if n == 13 {\n        return p + 12\n    }\n    if n == 14 {\n        return\
    \ p + 13\n    }\n    if n == 15 {\n        return p + 14\n    }\n    if n == 16\
    \ {\n        return p + 15\n    }\n    if n == 17 {\n        return p + 16\n \
    \   }\n    if n == 18 {\n        return p + 17\n    }\n    if n == 19 {\n    \
    \    return p + 18\n    }\n    if n == 20 {\n        return p + 19\n    }\n  \
    \  if n == 21 {\n        return p + 20\n    }\n    if n == 22 {\n        return\
    \ p + 21\n    }\n    if n == 23 {\n        return p + 22\n    }\n    if n == 24\
    \ {\n        return p + 23\n    }\n    if n == 25 {\n        return p + 24\n \
    \   }\n    if n == 26 {\n        return p + 25\n    }\n    if n == 27 {\n    \
    \    return p + 26\n    }\n    if n == 28 {\n        return p + 27\n    }\n  \
    \  if n == 29 {\n        return p + 28\n    }\n    if n == 30 {\n        return\
    \ p + 29\n    }\n    if n == 31 {\n        return p + 30\n    }\n    if n == 32\
    \ {\n        return p + 31\n    }\n    if n == 33 {\n        return p + 32\n \
    \   }\n    if n == 34 {\n        return p + 33\n    }\n    if n == 35 {\n    \
    \    return p + 34\n    }\n    if n == 36 {\n        return p + 35\n    }\n  \
    \  if n == 37 {\n        return p + 36\n    }\n    if ", "    if n == 0 {\n  \
    \      return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if p < n {\n        return modp(n - p, p)\n\
    \    }\n    return modp(n - n, p)", "\tif n < 0 {\n\t\tn = -n\n\t}\n\tif p < 0\
    \ {\n\t\tp = -p\n\t}\n\tif n == 0 {\n\t\treturn 0\n\t}\n\tif p == 1 {\n\t\treturn\
    \ n\n\t}\n\tif n == 1 {\n\t\treturn 1\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tif n == p+1 {\n\t\treturn n\n\t}\n\tif n == p-1 {\n\t\treturn n\n\t}\n\tif n\
    \ == p+2 {\n\t\treturn n\n\t}\n\tif n == p+3 {\n\t\treturn n\n\t}\n\tif n == p+4\
    \ {\n\t\treturn n\n\t}\n\tif n == p+5 {\n\t\treturn n\n\t}\n\tif n == p+6 {\n\t\
    \treturn n\n\t}\n\tif n == p+7 {\n\t\treturn n\n\t}\n\tif n == p+8 {\n\t\treturn\
    \ n\n\t}\n\tif n == p+9 {\n\t\treturn n\n\t}\n\tif n == p+10 {\n\t\treturn n\n\
    \t}\n\tif n == p+11 {\n\t\treturn n\n\t}\n\tif n == p+12 {\n\t\treturn n\n\t}\n\
    \tif n == p+13 {\n\t\treturn n\n\t}\n\tif n == p+14 {\n\t\treturn n\n\t}\n\tif\
    \ n == p+15 {\n\t\treturn n\n\t}\n\tif n == p+16 {\n\t\treturn n\n\t}\n\tif n\
    \ == p+17 {\n\t\treturn n\n\t}\n\tif n == p+18 {\n\t\treturn n\n\t}\n\tif n ==\
    \ p+19 {\n\t\treturn n\n\t}\n\tif n == p+20 {\n\t\treturn n\n\t}\n\tif n == p+21\
    \ {\n\t\treturn n\n\t}\n\tif n == p+22 {\n\t\treturn n\n\t}\n\tif n == p+23 {\n\
    \t\treturn n\n\t}\n\tif n == p+24 {\n\t\treturn n\n\t}\n\tif n == p+25 {\n\t\t\
    return n\n\t}\n\tif n == p+26 {\n\t\treturn n\n\t}\n\tif n == p+27 {\n\t\treturn\
    \ n\n\t}\n\tif n == p+28 {\n\t\treturn n\n\t}\n\tif n == p+29 {\n\t\treturn n\n\
    \t}\n\tif n == p+30 {\n\t\treturn n\n\t}\n\tif n == p+31 {\n\t\treturn n\n\t}\n\
    \tif n == p+32 {\n\t\treturn n\n\t}\n\tif n == p+33 {\n\t\treturn n\n\t}\n\tif\
    \ n == p+34 {\n\t\treturn n\n\t}\n\tif n == p+35 {\n\t\treturn n\n\t}\n\tif n\
    \ == p+36 {\n\t\treturn n\n\t}\n\tif n == p+37 {\n\t\treturn n\n\t}\n\tif n ==\
    \ p+", '    return n & (p - 1)', "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 0 {\n        return modp(abs(n), -p)\n    }\n    if n\
    \ == 0 {\n        return 0\n    }\n    if p == 0 {\n        return n\n    }\n\
    \    if p == 1 {\n        return n\n    }\n    if n == 1 {\n        return p\n\
    \    }\n    if n == 2 {\n        return p\n    }\n    if n == 3 {\n        return\
    \ p\n    }\n    if n == 4 {\n        return p\n    }\n    if n == 5 {\n      \
    \  return p\n    }\n    if n == 6 {\n        return p\n    }\n    if n == 7 {\n\
    \        return p\n    }\n    if n == 8 {\n        return p\n    }\n    if n ==\
    \ 9 {\n        return p\n    }\n    if n == 10 {\n        return p\n    }\n  \
    \  if n == 11 {\n        return p\n    }\n    if n == 12 {\n        return p\n\
    \    }\n    if n == 13 {\n        return p\n    }\n    if n == 14 {\n        return\
    \ p\n    }\n    if n == 15 {\n        return p\n    }\n    if n == 16 {\n    \
    \    return p\n    }\n    if n == 17 {\n        return p\n    }\n    if n == 18\
    \ {\n        return p\n    }\n    if n == 19 {\n        return p\n    }\n    if\
    \ n == 20 {\n        return p\n    }\n    if n == 21 {\n        return p\n   \
    \ }\n    if n == 22 {\n        return p\n    }\n    if n == 23 {\n        return\
    \ p\n    }\n    if n == 24 {\n        return p\n    }\n    if n == 25 {\n    \
    \    return p\n    }\n    if n == 26 {\n        return p\n    }\n    if n == 27\
    \ {\n        return p\n    }\n    if n == 28 {\n        return p\n    }\n    if\
    \ n == 29 {\n        return p\n    }\n    if n == 30 {\n        return p\n   \
    \ }\n    if n == 31 {\n        return p\n    }\n    if n == 32 {\n        return\
    \ p\n    }\n    if n == 33 {\n        return p\n    }\n    if n == 34 {\n    \
    \    return p\n    }\n    if n == 35 {\n        return p\n    }\n    if n == 36\
    \ {\n        return p\n    }\n    if n == 37 {\n        return p\n    }\n    if\
    \ n == 38 {\n        return p\n    }\n    if n == 39 {\n        return p\n   \
    \ }\n    if n == 40 {\n        return p\n    }\n    if n == 41 {\n        return\
    \ p\n    }\n    if n == 42 {\n        return p\n    }\n    if n == 43 {\n    \
    \    return p\n    }\n    if n == 44 {\n        return p\n    }\n    if n == 45\
    \ {\n        return p\n    }\n    if n == 46 {\n        return p\n", "\tif n <\
    \ 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 0 {\n\t\tp = -p\n\t}\n\tn %= p\n\t\
    if n == 0 {\n\t\treturn 1\n\t}\n\treturn p", "\tif n < 0 {\n\t\tn = -n\n\t\tp\
    \ = -p\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tswitch {\n\tcase n < 0:\n\t\t\
    return 0\n\tcase n <= p:\n\t\treturn n\n\tcase p < n:\n\t\treturn p - 1\n\t}\n\
    \treturn 0", '    return ((n%p)+p) % p', "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 2 {\n        return n\n    }\n    if p < p {\n       \
    \ return modp(n - 1, p)\n    }\n    if p < p {\n        return modp(n - 2, p)\n\
    \    }\n    if p < p {\n        return modp(n - 3, p)\n    }\n    if p < p {\n\
    \        return modp(n - 4, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 5, p)\n    }\n    if p < p {\n        return modp(n - 6, p)\n    }\n    if p\
    \ < p {\n        return modp(n - 7, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 8, p)\n    }\n    if p < p {\n        return modp(n - 9, p)\n    }\n\
    \    if p < p {\n        return modp(n - 10, p)\n    }\n    if p < p {\n     \
    \   return modp(n - 11, p)\n    }\n    if p < p {\n        return modp(n - 12,\
    \ p)\n    }\n    if p < p {\n        return modp(n - 13, p)\n    }\n    if p <\
    \ p {\n        return modp(n - 14, p)\n    }\n    if p < p {\n        return modp(n\
    \ - 15, p)\n    }\n    if p < p {\n        return modp(n - 16, p)\n    }\n   \
    \ if p < p {\n        return modp(n - 17, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 18, p)\n    }\n    if p < p {\n        return modp(n - 19, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 20, p)\n    }\n    if p < p {\n \
    \       return modp(n - 21, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 22, p)\n    }\n    if p < p {\n        return modp(n - 23, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 24, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 25, p)\n    }\n    if p < p {\n        return modp(n - 26, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 27, p)\n    }\n    if p < p {\n \
    \       return modp(n - 28, p)\n    }\n    if p < p {\n        return modp(n -\
    \ 29, p)\n    }\n    if p < p {\n        return modp(n - 30, p)\n    }\n    if\
    \ p < p {\n        return modp(n - 31, p)\n    }\n    if p < p {\n        return\
    \ modp(n - 32, p)\n    }\n    if p < p {\n        return modp(n - 33, p)\n   \
    \ }\n    if p < p {\n        return modp(n - 34, p)\n    }\n    if p < p {\n \
    \       return modp(n - 35, p)\n", "    if n == 0 {\n        return n\n    }\n\
    \    if p == 0 {\n        return 1\n    }\n    if n < p {\n        return modp(n,\
    \ p - 1)\n    }\n    if n == p {\n        return n\n    }\n    if n == p+1 {\n\
    \        return n\n    }\n    if n == p-1 {\n        return modp(n + 1, p)\n \
    \   }\n    return modp(n - 1, p)", "    if n == 0 {\n        return 1\n    }\n\
    \    if n == 1 {\n        return p\n    }\n    if n == p {\n        return n\n\
    \    }\n    if p < n {\n        return modp(n - p, p)\n    }\n    return modp(n,\
    \ p - n)", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif n == p {\n\t\treturn n\n\t}\n\tif n >= p {\n\t\treturn modp(n - p, p)\n\
    \t}\n\treturn modp((p - 1) * (n - p), p)", "\treturn (n & (p - 1)) == 0 ? n :\
    \ n - 1", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    p < 1\")\n\t}\n\tif p > p {\n\t\tpanic(\"p > p\")\n\t}\n\tif n == 0 {\n\t\treturn\
    \ 0\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\
    \tx := n\n\ty := p\n\tz := 1\n\tfor {\n\t\tif y % 2 == 0 {\n\t\t\tx /= 2\n\t\t\
    \ty /= 2\n\t\t\tz /= 2\n\t\t} else {\n\t\t\tbreak\n\t\t}\n\t}\n\tx %= p\n\ty %=\
    \ p\n\tz %= p\n\tif x == 0 {\n\t\treturn z\n\t}\n\tif y == 0 {\n\t\treturn x\n\
    \t}\n\tif x == p {\n\t\treturn y\n\t}\n\tif y == p {\n\t\treturn z\n\t}\n\tif\
    \ x == z {\n\t\treturn y\n\t}\n\tif y == z {\n\t\treturn x\n\t}\n\tif x == y {\n\
    \t\treturn z\n\t}\n\tif y == x {\n\t\treturn y\n\t}\n\tif x == z {\n\t\treturn\
    \ x\n\t}\n\tif y == z {\n\t\treturn y\n\t}\n\tif x == y {\n\t\treturn z\n\t}\n\
    \tif y == x {\n\t\treturn y\n\t}\n\tif x == z {\n\t\treturn x\n\t}\n\tif y ==\
    \ z {\n\t\treturn y\n\t}\n\tif x == y {\n\t\treturn z\n\t}\n\tif y == x {\n\t\t\
    return y\n\t}\n\tif x == z {\n\t\treturn x\n\t}\n\tif y == z {\n\t\treturn y\n\
    \t}\n\tif x == y {\n\t\treturn z\n\t}\n\tif y == x {\n\t\treturn y\n\t}\n\tif\
    \ x == z {\n\t\treturn x\n\t}\n\tif y == z {\n\t\treturn y\n\t}\n\tif x == y {\n\
    \t\treturn z\n\t}\n\tif y == x {\n\t\treturn y\n\t}\n\tif x == z {\n\t\treturn\
    \ x\n\t}\n\tif y == z {\n\t\treturn y\n\t}\n\tif x == y {\n\t\treturn z\n\t}\n\
    \tif y == x {\n\t\treturn y\n\t}\n\tif x == z {\n\t\treturn x\n\t}\n\tif y ==\
    \ z {\n\t\treturn y\n\t}\n\tif x == y {\n\t\treturn z\n\t}\n\tif y == x {\n\t\t\
    return y\n\t}\n\tif x == z {\n\t\treturn x\n\t}\n\tif y == z {\n\t\treturn y\n\
    \t}\n\tif x == y {\n\t\treturn z\n\t}\n\tif y == x {\n\t\treturn y\n\t}\n\tif\
    \ x == z {\n\t\treturn x\n\t}\n\tif y == z {\n\t\treturn y\n\t}\n\tif ", "   \
    \ if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if p < n {\n        return\
    \ modp(n - p, p)\n    }\n    if p > n {\n        return modp(n - p, p)\n    }\n\
    \    if p % 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return modp((n\
    \ - 1) / 2, p)", "\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ 0\n\t}\n\tif n == p {\n\t\treturn 1\n\t}\n\tif n <= p {\n\t\treturn 0\n\t}\n\
    \tlet r = n % p\n\tif r == 0 {\n\t\treturn 1\n\t}\n\treturn r", "\tif n == 0 {\n\
    \t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif p < 2 {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\t\
    if p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\
    \t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\
    \t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p\
    \ < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t\
    }\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p <\
    \ p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\t\
    return 1\n\t}\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t\
    }\n\tif p < p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p <\
    \ p {\n\t\treturn 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n\t\t\
    return 0\n\t}\n\tif p < p {\n\t\treturn 1\n\t}\n\tif p < p {\n", "\tif n < 0 {\n\
    \t\tpanic(\"modp: negative number\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp: p <\
    \ 1\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t\
    }\n\tif n == p {\n\t\treturn 1\n\t}\n\tif p > p {\n\t\tpanic(\"modp: p > p\")\n\
    \t}\n\tq := p / n\n\tr := p % n\n\treturn modp(q, p) * n + r", "    if n == 0\
    \ {\n        return n\n    }\n    if p == 0 {\n        return n\n    }\n    if\
    \ n == p {\n        return n\n    }\n    if n >= p {\n        return n - p\n \
    \   }\n    return n - p + p", "\treturn (n & (-p)) + (n & p)", '    return n %
    p', '    return ((n << p) & -((n << p) & + n)) >> p', "    if n == 0 {\n     \
    \   return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n\
    \        return n\n    }\n    if p < n {\n        return modp(n - p, p)\n    }\n\
    \    if p > n {\n        return modp(n, p)\n    }\n    if p % 2 == 0 {\n     \
    \   return modp(n / 2, p)\n    }\n    return modp(n / 2, p) + modp(n / 2, p -\
    \ 1)", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return\
    \ p\n    }\n    if n == p {\n        return n\n    }\n    if p < n {\n       \
    \ return modp(n - p, p)\n    }\n    if p > n {\n        return modp(n, p)\n  \
    \  }\n    if p % 2 == 0 {\n        return modp(n / 2, p)\n    }\n    return modp(n\
    \ / 2, p) + 1", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tif p == 0 {\n\t\t\
    return 0\n\t}\n\tn %= p\n\tif n == 0 {\n\t\treturn 1\n\t}\n\treturn p", '    return
    ((n << p) & -((n << p) &^ n)) % p', "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p)\n    }\n    if n == 0 {\n\
    \        return 1\n    }\n    if n == 1 {\n        return p\n    }\n    if n ==\
    \ p {\n        return n\n    }\n    if p > p {\n        return modp(n - p, p)\n\
    \    }\n    if p < p {\n        return modp(n, p)\n    }\n    if p < 1 {\n   \
    \     return modp(n, p)\n    }\n    if p > 1 {\n        return modp(n, p)\n  \
    \  }\n    if p < 2 {\n        return modp(n, p)\n    }\n    if p > 2 {\n     \
    \   return modp(n, p)\n    }\n    if p < 3 {\n        return modp(n, p)\n    }\n\
    \    if p > 3 {\n        return modp(n, p)\n    }\n    if p < 4 {\n        return\
    \ modp(n, p)\n    }\n    if p > 4 {\n        return modp(n, p)\n    }\n    if\
    \ p < 5 {\n        return modp(n, p)\n    }\n    if p > 5 {\n        return modp(n,\
    \ p)\n    }\n    if p < 6 {\n        return modp(n, p)\n    }\n    if p > 6 {\n\
    \        return modp(n, p)\n    }\n    if p < 7 {\n        return modp(n, p)\n\
    \    }\n    if p > 7 {\n        return modp(n, p)\n    }\n    if p < 8 {\n   \
    \     return modp(n, p)\n    }\n    if p > 8 {\n        return modp(n, p)\n  \
    \  }\n    if p < 9 {\n        return modp(n, p)\n    }\n    if p > 9 {\n     \
    \   return modp(n, p)\n    }\n    if p < 10 {\n        return modp(n, p)\n   \
    \ }\n    if p > 10 {\n        return modp(n, p)\n    }\n    if p < 11 {\n    \
    \    return modp(n, p)\n    }\n    if p > 11 {\n        return modp(n, p)\n  \
    \  }\n    if p < 12 {\n        return modp(n, p)\n    }\n    if p > 12 {\n   \
    \     return modp(n, p)\n    }\n    if p < 13 {\n        return modp(n, p)\n \
    \   }\n    if p > 13 {\n        return modp(n, p)\n    }\n    if p < 14 {\n  \
    \      return modp(n, p)\n    }\n    if p > 14 {\n        return modp(n, p)\n\
    \    }\n    if p < 15 {\n        return modp(n, p)\n    }\n    if p > 15 {\n \
    \       return modp(n, p)\n    }\n    if p < 16 {\n        return modp(n, p)\n\
    \    }\n    if p > 16 {\n", "\tif n < 0 {\n\t\tn = -n\n\t\tp = -p\n\t}\n\tswitch\
    \ {\n\tcase p < 0:\n\t\tpanic(\"modp: negative modulus\")\n\tcase p == 0:\n\t\t\
    return 0\n\tcase p == 1:\n\t\treturn n\n\tcase p % 2 == 1:\n\t\treturn modp(n\
    \ / 2, p)\n\tdefault:\n\t\treturn modp((n-1)/2, p)\n\t}", "\treturn (n & (p -\
    \ 1)) == 0 ? n : n - 1", "\tswitch {\n\tcase n < p:\n\t\treturn 0\n\tcase n ==\
    \ p:\n\t\treturn 1\n\tcase n >= p:\n\t\treturn n - p\n\t}", "    if n < 0 {\n\
    \        return modp(abs(n), p)\n    }\n    if p < 1 {\n        return modp(n,\
    \ p - 1)\n    }\n    if p > p {\n        return modp(n, p - p)\n    }\n    return\
    \ n & (p - 1)", "    if n == 0 {\n        return 1\n    }\n    if n == 1 {\n \
    \       return p\n    }\n    if n == p {\n        return n\n    }\n    if p <\
    \ n {\n        return modp(n - p, p)\n    }\n    return modp(n, p - n)", "   \
    \ if n == 0 {\n        return 1\n    }\n    if n == 1 {\n        return p\n  \
    \  }\n    if n == p {\n        return n\n    }\n    if p < 2 {\n        return\
    \ modp(n, p)\n    }\n    if p < p {\n        return modp(n, p - 1)\n    }\n  \
    \  if p < p {\n        return modp(n, p - 2)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 3)\n    }\n    if p < p {\n        return modp(n, p - 4)\n    }\n\
    \    if p < p {\n        return modp(n, p - 5)\n    }\n    if p < p {\n      \
    \  return modp(n, p - 6)\n    }\n    if p < p {\n        return modp(n, p - 7)\n\
    \    }\n    if p < p {\n        return modp(n, p - 8)\n    }\n    if p < p {\n\
    \        return modp(n, p - 9)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 10)\n    }\n    if p < p {\n        return modp(n, p - 11)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 12)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 13)\n    }\n    if p < p {\n        return modp(n, p - 14)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 15)\n    }\n    if p < p {\n \
    \       return modp(n, p - 16)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 17)\n    }\n    if p < p {\n        return modp(n, p - 18)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 19)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 20)\n    }\n    if p < p {\n        return modp(n, p - 21)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 22)\n    }\n    if p < p {\n \
    \       return modp(n, p - 23)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 24)\n    }\n    if p < p {\n        return modp(n, p - 25)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 26)\n    }\n    if p < p {\n        return\
    \ modp(n, p - 27)\n    }\n    if p < p {\n        return modp(n, p - 28)\n   \
    \ }\n    if p < p {\n        return modp(n, p - 29)\n    }\n    if p < p {\n \
    \       return modp(n, p - 30)\n    }\n    if p < p {\n        return modp(n,\
    \ p - 31)\n    }\n    if p < p {\n        return modp(n, p - 32)\n    }\n    if\
    \ p < p {\n        return modp(n, p - 33)\n    }\n    if p < ", '    return n
    % p', "\tswitch {\n\tcase n < 0:\n\t\treturn 0\n\tcase n <= p:\n\t\treturn n\n\
    \tcase n >= p:\n\t\treturn p\n\t}\n\tlet r = n % p\n\tif r == 0 {\n\t\treturn\
    \ p\n\t}\n\treturn r", "\tif n < 0 {\n\t\tpanic(\"modp called with negative n\"\
    )\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp called with p < 1\")\n\t}\n\tif n == 0\
    \ {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn p\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif p < p {\n\t\treturn modp(n - p, p)\n\t}\n\tif p > p {\n\t\t\
    return modp(n, p - p)\n\t}\n\treturn modp((n - p) * (p - 1), p)", "\tif n < 0\
    \ {\n\t\tpanic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"\
    modp requires positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif p ==\
    \ 1 {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif p > p {\n\t\t\
    panic(\"modp requires p <= p\")\n\t}\n\tx := n\n\tfor x != 0 {\n\t\tx := x % p\n\
    \t\tif x == 0 {\n\t\t\treturn x\n\t\t}\n\t}\n\treturn 0", "\tif n < 0 {\n\t\t\
    panic(\"modp requires positive n\")\n\t}\n\tif p < 1 {\n\t\tpanic(\"modp requires\
    \ positive p\")\n\t}\n\tif n == 0 {\n\t\treturn 1\n\t}\n\tif n == 1 {\n\t\treturn\
    \ p\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n ==\
    \ p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\t\
    return n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\
    \t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif\
    \ n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\
    \t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn\
    \ n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\tif n == p {\n\t\treturn n\n\t}\n\
    \tif n == p {\n\t\treturn n\n\t}\n", "    if n < 0 {\n        return modp(abs(n),\
    \ p)\n    }\n    if p < 1 {\n        return modp(n, p - 1)\n    }\n    if p >\
    \ p {\n        return modp(n, p - p)\n    }\n    if n == 0 {\n        return 0\n\
    \    }\n    if n == 1 {\n        return p\n    }\n    if n == p {\n        return\
    \ n\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {\n        return p\n    }\n    if n == p {\n        return p\n    }\n   \
    \ if n == p {\n        return p\n    }\n    if n == p {\n        return p\n  \
    \  }\n    if n == p {\n        return p\n    }\n    if n == p {\n        return\
    \ p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n      \
    \  return p\n    }\n    if n == p {\n        return p\n    }\n    if n == p {\n\
    \        return p\n    }\n    if n == p {\n        return p\n    }\n    if n ==\
    \ p {"]
stop_tokens:
- "\n}"

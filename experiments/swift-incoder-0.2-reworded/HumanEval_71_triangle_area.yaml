name: HumanEval_71_triangle_area
language: swift
prompt: "\n/// Given the lengths of the three sides of a triangle. Return the area\
  \ of\n/// the triangle rounded to 2 decimal points if the three sides form a valid\
  \ triangle. \n/// Otherwise return -1\n/// Three sides make a valid triangle when\
  \ the sum of any two sides is greater \n/// than the third side.\n/// Example:\n\
  /// >>> triangle_area(a: 3, b: 4, c: 5)\n/// 6.0\n/// >>> triangle_area(a: 1, b:\
  \ 2, c: 10)\n/// -1\nfunc triangle_area(a: Int, b: Int, c: Int) -> Double {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(triangle_area(a: 3, b: 4, c: 5) == 6.0)\n\
  assert(triangle_area(a: 1, b: 2, c: 10) == -1)\nassert(triangle_area(a: 4, b: 8,\
  \ c: 5) == 8.18)\nassert(triangle_area(a: 2, b: 2, c: 2) == 1.73)\nassert(triangle_area(a:\
  \ 1, b: 2, c: 3) == -1)\nassert(triangle_area(a: 10, b: 5, c: 7) == 16.25)\nassert(triangle_area(a:\
  \ 2, b: 6, c: 3) == -1)\nassert(triangle_area(a: 1, b: 1, c: 1) == 0.43)\nassert(triangle_area(a:\
  \ 2, b: 2, c: 10) == -1)"
completions: ["    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n   \
    \ \n    if a1 + b1 + c1 < 3 {\n        return -1\n    }\n    \n    let area =\
    \ a * b * c\n    \n    if area > 0 {\n        return Double(area) / Double(a1\
    \ + b1 + c1)\n    } else {\n        return -1\n    }", "    let area: Double =\
    \ 0.5 * pow((pow(a, 2) + pow(b, 2) + pow(c, 2)), 0.5)\n    return area", "   \
    \ if a > b + c {\n        return -1\n    }\n    if b > a + c {\n        return\
    \ -1\n    }\n    if c > a + b {\n        return -1\n    }\n    return sqrt(Double(a\
    \ * b * c) / 2)", '    return ((a + b + c) / 2)', "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c, 2))\n    let side3\
    \ = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2 + side3) / 2.0\n\
    \    if area > 0 {\n        return round(area, 2)\n    } else {\n        return\
    \ -1\n    }", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a)\
    \ + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n    let side4 =\
    \ abs(a) - abs(b) - abs(c)\n    let area: Double = side1 * side2 * side3 * side4\n\
    \    if area > 0 {\n        return round(area, 2)\n    } else {\n        return\
    \ -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c,\
    \ 2) + pow(b, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area =\
    \ (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n        return round(area,\
    \ 2)\n    } else {\n        return -1\n    }", "    let a1 = (a + b + c) / 2\n\
    \    let b1 = (b + c + a) / 2\n    let c1 = (c + a + b) / 2\n    return a1 * b1\
    \ * c1", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 + side2 + side3\n    if area > 0 {\n        return round(area,\
    \ 2)\n    } else {\n        return -1\n    }", "    if a + b > c {\n        return\
    \ -1\n    }\n    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n\
    \        return -1\n    }\n    return Double(a + b + c) / 2", "    let side1 =\
    \ abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let\
    \ side3 = abs(a) - abs(b) - abs(c)\n    if side1 > side2 && side1 > side3 {\n\
    \        return Double(round(side1 / 2))\n    }\n    if side2 > side3 {\n    \
    \    return Double(round(side2 / 2))\n    }\n    return Double(round(side3 / 2))",
  "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    let area: Double = side1 * side2\
    \ * side3\n    if area > 0 {\n        return round(area, 2)\n    } else {\n  \
    \      return -1\n    }", "    let a2 = a * a\n    let b2 = b * b\n    let c2\
    \ = c * c\n    let ac = a2 + c2\n    let bc = b2 + c2\n    let ab = a2 + b2\n\
    \    let b2 = b * b\n    let c2 = c * c\n    let ac2 = ac + c2\n    let bc = bc\
    \ + c2\n    let ab2 = ab + b2\n    let ac2 = ac2 + ab2\n    let bc = bc + ab2\n\
    \    let ac2 = ac2 + bc\n    let ac2 = ac2 * 0.5\n    let ac2 = ac2.rounded(.towardZero)\n\
    \    return ac2", "    let sum = a + b + c\n    if sum > 3 {\n        return Double(sum\
    \ - 3) / 2.0\n    }\n    return -1", "    let sides = [a, b, c]\n    \n    guard\
    \ sides.count >= 3 else { return -1 }\n    \n    let sum = sides.reduce(0.0, +)\n\
    \    \n    if sum > sides[2] {\n        return Double(round(100*sides[0]/sum))\n\
    \    } else {\n        return -1\n    }", '    return Double(sqrt(pow(a, 2) +
    pow(b, 2) + pow(c, 2)) / 2)', "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return Double(sides.last)\n    }\n  \
    \  return Double(sum)", "    let sides = a + b + c\n    if sides <= 0 {\n    \
    \    return -1\n    }\n    let area = Double(sides) / Double(3.0)\n    return\
    \ round(area, 2)", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n\
    \    if a1 > b1 && b1 > c1 {\n        return a * b * c / 2\n    }\n    if a1 >\
    \ c1 {\n        return a * b * c / 2\n    }\n    if b1 > c1 {\n        return\
    \ a * b * c / 2\n    }\n    return -1", "    let a1 = b * b - 4 * a * c\n    let\
    \ a2 = math.sqrt(a1)\n    let a3 = math.sqrt(a2)\n    let a4 = b * b + 4 * a *\
    \ c\n    let a5 = math.sqrt(a4)\n    let a6 = a * b + 4 * a * c\n    let a7 =\
    \ a * b - 4 * a * c\n    let a8 = math.sqrt(a6)\n    let a9 = a * b - 4 * a *\
    \ c\n    let a10 = a * b + 4 * a * c\n    let a11 = a * b + 4 * a * c\n    let\
    \ a12 = a * b - 4 * a * c\n    let a13 = a * b + 4 * a * c\n    let a14 = a *\
    \ b - 4 * a * c\n    let a15 = a * b + 4 * a * c\n    let a16 = a * b + 4 * a\
    \ * c\n    let a17 = a * b - 4 * a * c\n    let a18 = a * b + 4 * a * c\n    let\
    \ a19 = a * b + 4 * a * c\n    let a20 = a * b - 4 * a * c\n    let a21 = a *\
    \ b + 4 * a * c\n    let a22 = a * b + 4 * a * c\n    let a23 = a * b - 4 * a\
    \ * c\n    let a24 = a * b + 4 * a * c\n    let a25 = a * b + 4 * a * c\n    let\
    \ a26 = a * b - 4 * a * c\n    let a27 = a * b + 4 * a * c\n    let a28 = a *\
    \ b + 4 * a * c\n    let a29 = a * b - 4 * a * c\n    let a30 = a * b + 4 * a\
    \ * c\n    let a31 = a * b + 4 * a * c\n    let a32 = a * b - 4 * a * c\n    let\
    \ a33 = a * b + 4 * a * c\n    let a34 = a * b + 4 * a * c\n    let a35 = a *\
    \ b - 4 * a * c\n    let a36 = a * b + 4 * a * c\n    let a37 = a * b + 4 * a\
    \ * c\n    let a38 = a * b - 4 * a * c\n    let a39 = a * b + 4 * a * c\n    let\
    \ a40 = a * b + 4 * a * c\n    let a41 = a * b - 4 * a * c\n    let a42 = a *\
    \ b + 4 * a * c\n    let a43 = a * b + 4 * a * c\n    let a44 = a * b - 4 * a\
    \ * c\n    let a45 = a * b + 4 * a * c\n    let a46 = a * b + 4 * a * c\n    let\
    \ a47 = a * b - 4 * a * c\n    let a48 = a * b + 4 * a * c\n    let a49 = a *\
    \ b", '    return ((a + b + c) / 2.0).rounded(.toNearestOrAwayFromZero)', "  \
    \  if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n\
    \        return Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b\
    \ + c - a)\n    }\n    return Double(a + b + c)", "    let a = abs(a)\n    let\
    \ b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a\
    \ + b - c)\n    } else {\n        return Double(a + b + c - a)\n    }", "    let\
    \ side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2 && side2 == side3\
    \ {\n        return Double(side1)\n    }\n    return -1", '    return Double(sqrt(pow((b
    - a), 2) + pow((c - a), 2)))', "    if a + b > c {\n        return Double(-1)\
    \ * Double(a / b)\n    }\n    if a + c > b {\n        return Double(-1) * Double(b\
    \ / c)\n    }\n    if b + c > a {\n        return Double(-1) * Double(c / a)\n\
    \    }\n    return Double(a + b + c) / 2", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n  \
    \  }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n    if b +\
    \ c > a {\n        return Double(b + c - a)\n    }\n    return -1", "    let sides\
    \ = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n \
    \       return -1\n    }\n    let area = sides.reduce(0, +) / Double(sides.count)\n\
    \    return round(area, 2)", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n    } else\
    \ {\n        return -1\n    }", '    return Double(sqrt(pow((b - a), 2) + pow((c
    - a), 2)))', "    let sum = a + b + c\n    if sum < 3 {\n        return -1\n \
    \   }\n    let area = Double(sqrt(Double(sum) * Double(sum - 3) * Double(sum -\
    \ 2)))\n    return round(area, 2)", "    let sides = a + b + c\n    if sides <=\
    \ 0 {\n        return -1\n    }\n    let area = Double(sides) / Double(3.0)\n\
    \    return round(area, 2)", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.count)", "    if a + b > c {\n        return\
    \ Double(-1) * Double(a / b) * Double(b / c)\n    } else {\n        return Double(-1)\
    \ * Double(c / a) * Double(a / b)\n    }", "    let sum = a + b + c\n    if sum\
    \ < 3 {\n        return -1\n    }\n    return Double(sum) / Double(3.0)", "  \
    \  let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n\
    \    let a4 = -b - Math.sqrt(a1)\n    if a2 > a3 && a2 > a4 {\n        return\
    \ a2 / 2\n    }\n    if a3 > a4 {\n        return a3 / 2\n    }\n    return a4\
    \ / 2", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum\
    \ > sides.last {\n        return -1\n    }\n    let area = Double(sides.last)\
    \ * (sides.last - sum) / 2\n    return round(area, 2)", "    let a1 = b * b -\
    \ 4 * a * c\n    let a2 = sqrt(a1)\n    let a3 = sqrt(a2)\n    let a4 = b * b\
    \ + 4 * a * c\n    let a5 = sqrt(a4)\n    let a6 = a * b + 4 * a * c\n    let\
    \ a7 = a * b - 4 * a * c\n    let a8 = sqrt(a7)\n    let a9 = a * b + 4 * a *\
    \ c\n    let a10 = a * b - 4 * a * c\n    let a11 = a * b + 4 * a * c\n    let\
    \ a12 = a * b - 4 * a * c\n    let a13 = a * b + 4 * a * c\n    let a14 = a *\
    \ b - 4 * a * c\n    let a15 = a * b + 4 * a * c\n    let a16 = a * b - 4 * a\
    \ * c\n    let a17 = a * b + 4 * a * c\n    let a18 = a * b - 4 * a * c\n    let\
    \ a19 = a * b + 4 * a * c\n    let a20 = a * b - 4 * a * c\n    let a21 = a *\
    \ b + 4 * a * c\n    let a22 = a * b - 4 * a * c\n    let a23 = a * b + 4 * a\
    \ * c\n    let a24 = a * b - 4 * a * c\n    let a25 = a * b + 4 * a * c\n    let\
    \ a26 = a * b - 4 * a * c\n    let a27 = a * b + 4 * a * c\n    let a28 = a *\
    \ b - 4 * a * c\n    let a29 = a * b + 4 * a * c\n    let a30 = a * b - 4 * a\
    \ * c\n    let a31 = a * b + 4 * a * c\n    let a32 = a * b - 4 * a * c\n    let\
    \ a33 = a * b + 4 * a * c\n    let a34 = a * b - 4 * a * c\n    let a35 = a *\
    \ b + 4 * a * c\n    let a36 = a * b - 4 * a * c\n    let a37 = a * b + 4 * a\
    \ * c\n    let a38 = a * b - 4 * a * c\n    let a39 = a * b + 4 * a * c\n    let\
    \ a40 = a * b - 4 * a * c\n    let a41 = a * b + 4 * a * c\n    let a42 = a *\
    \ b - 4 * a * c\n    let a43 = a * b + 4 * a * c\n    let a44 = a * b - 4 * a\
    \ * c\n    let a45 = a * b + 4 * a * c\n    let a46 = a * b - 4 * a * c\n    let\
    \ a47 = a * b + 4 * a * c\n    let a48 = a * b - 4 * a * c\n    let a49 = a *\
    \ b", "    if a + b > c {\n        return Double(-1) / Double(Double(a + b - c))\n\
    \    }\n    if a + c > b {\n        return Double(-1) / Double(Double(a + c -\
    \ b))\n    }\n    if b + c > a {\n        return Double(-1) / Double(Double(b\
    \ + c - a))\n    }\n    return Double(a + b + c) / Double(2.0)", "    let area:\
    \ Double = Double(a * b * c) / Double(2.0 * Double(a) + Double(b) + Double(c))\n\
    \    if area >= 1.0 {\n        return area\n    } else {\n        return -1\n\
    \    }", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let\
    \ s = (a+b+c)/2.0\n    if s > c {\n        return -1\n    }\n    if s == c {\n\
    \        return s * s\n    }\n    if s == b {\n        return s * s * 0.5\n  \
    \  }\n    if s == a {\n        return s * s * 0.25\n    }\n    return -1", " \
    \   let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    let area: Double = side1 * side2\
    \ * side3\n    if area > 0 {\n        return round(area, 2)\n    } else {\n  \
    \      return -1\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let\
    \ side2 = sqrt(pow(c, 2) + pow(b, 2))\n    let side3 = sqrt(pow(a, 2) + pow(c,\
    \ 2))\n    let area = (side1 + side2 + side3) / 2.0\n    if area > 0.0 {\n   \
    \     return round(area * 100) / 100\n    } else {\n        return -1\n    }",
  "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2 && side2 == side3\
    \ {\n        return Double(side1)\n    } else {\n        return -1\n    }", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, combine: +)\n    if sum\
    \ > sides[2] {\n        return Double(sides[2]) / 2\n    }\n    return -1", " \
    \   let a1 = b * b - a * c\n    let a2 = a * a\n    let a3 = b * b - a * a\n \
    \   let a4 = a * a\n    let a5 = b * b - a * a\n    let a6 = a * a\n    let a7\
    \ = a * a\n    let a8 = -b * b - a * a\n    let a9 = a * a\n    let a10 = a *\
    \ a\n    let a11 = a * a\n    let a12 = a * a\n    let a13 = a * a\n    let a14\
    \ = a * a\n    let a15 = a * a\n    let a16 = a * a\n    let a17 = a * a\n   \
    \ let a18 = a * a\n    let a19 = a * a\n    let a20 = a * a\n    let a21 = a *\
    \ a\n    let a22 = a * a\n    let a23 = a * a\n    let a24 = a * a\n    let a25\
    \ = a * a\n    let a26 = a * a\n    let a27 = a * a\n    let a28 = a * a\n   \
    \ let a29 = a * a\n    let a30 = a * a\n    let a31 = a * a\n    let a32 = a *\
    \ a\n    let a33 = a * a\n    let a34 = a * a\n    let a35 = a * a\n    let a36\
    \ = a * a\n    let a37 = a * a\n    let a38 = a * a\n    let a39 = a * a\n   \
    \ let a40 = a * a\n    let a41 = a * a\n    let a42 = a * a\n    let a43 = a *\
    \ a\n    let a44 = a * a\n    let a45 = a * a\n    let a46 = a * a\n    let a47\
    \ = a * a\n    let a48 = a * a\n    let a49 = a * a\n    let a50 = a * a\n   \
    \ let a51 = a * a\n    let a52 = a * a\n    let a53 = a * a\n    let a54 = a *\
    \ a\n    let a55 = a * a\n    let a56 = a * a\n    let a57 = a * a\n    let a58\
    \ = a * a\n    let a59 = a * a\n    let a60 = a * a\n    let a61 = a * a\n   \
    \ let a62 = a * a\n    let a63 = a * a\n    let a64 = a * a\n    let a65 = a *\
    \ a\n    let a66 = a * a\n    let a67 = a * a\n    let a68 = a * a\n    let a69\
    \ = a * a\n    let a70 = a * a\n    let a71 = a * a\n    let a72 = a * a\n   \
    \ let a73 = a * a\n    let a74 = a * a\n    let a75 = a * a\n    let a76 = a *\
    \ a\n    let a77 = a * a\n    let a78 = a * a\n    let a79 = a * a\n    let a80\
    \ = a * a\n    let a81 = a * a\n    let a82 = a * a\n    let a83 = a * a\n   \
    \ let a84 = a * a\n    let a85 = a * a\n    let a", "    let area: Double = abs(a\
    \ * b * c) / Double(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    return area < 0.000001\
    \ ? -1.0 : area", "    let sides = a + b + c\n    if sides <= 0 {\n        return\
    \ -1\n    }\n    let area = sqrt(pow(a, 2) + pow(b, 2) + pow(c, 2))\n    if area\
    \ < sides {\n        return area\n    }\n    return round(area / sides * 100)\
    \ / 100", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) +\
    \ abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2\
    \ && side2 == side3 {\n        return Double(side1)\n    }\n    return -1", " \
    \   let sides = a + b + c\n    if sides % 2 == 1 {\n        return Double(sides)\
    \ / 2\n    }\n    return -1", "    let sides = a + b + c\n    if sides <= 0 {\n\
    \        return -1\n    }\n    let area = sides / 2.0\n    if area >= a && area\
    \ >= b && area >= c {\n        return area\n    }\n    return -1", "    let side1\
    \ = abs(a)\n    let side2 = abs(b)\n    let side3 = abs(c)\n    let sum = side1\
    \ + side2 + side3\n    if sum > side3 {\n        return Double(round(100 * side3\
    \ / sum))\n    }\n    if sum > side2 {\n        return Double(round(100 * side2\
    \ / sum))\n    }\n    if sum > side1 {\n        return Double(round(100 * side1\
    \ / sum))\n    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n  \
    \  let c = abs(c)\n    let s = a + b + c\n    if s > 0 {\n        let area = (a\
    \ * b * c) / s\n        return round(area, 2)\n    } else {\n        return -1\n\
    \    }", "    if a + b > c {\n        return Double(-1) * Double(a / b)\n    }\n\
    \    if a + c > b {\n        return Double(-1) * Double(b / c)\n    }\n    if\
    \ b + c > a {\n        return Double(-1) * Double(c / a)\n    }\n    return Double(a\
    \ + b + c) / 2", "    let a2 = a*a\n    let b2 = b*b\n    let c2 = c*c\n    let\
    \ ac = a + c\n    let bc = b + c\n    let ad = a + d\n    let bd = b + d\n   \
    \ let ac2 = ac*ac\n    let bc2 = bc*bc\n    let ad2 = ad*ad\n    let bd2 = bd*bd\n\
    \    let ac3 = ac*ac\n    let bc3 = bc*bc\n    let ad3 = ad*ad\n    let bd3 =\
    \ bd*bd\n    let ac4 = ac*ac\n    let bc4 = bc*bc\n    let ad4 = ad*ad\n    let\
    \ bd4 = bd*bd\n    let ac5 = ac*ac\n    let bc5 = bc*bc\n    let ad5 = ad*ad\n\
    \    let bd5 = bd*bd\n    let ac6 = ac*ac\n    let bc6 = bc*bc\n    let ad6 =\
    \ ad*ad\n    let bd6 = bd*bd\n    let ac7 = ac*ac\n    let bc7 = bc*bc\n    let\
    \ ad7 = ad*ad\n    let bd7 = bd*bd\n    let ac8 = ac*ac\n    let bc8 = bc*bc\n\
    \    let ad8 = ad*ad\n    let bd8 = bd*bd\n    let ac9 = ac*ac\n    let bc9 =\
    \ bc*bc\n    let ad9 = ad*ad\n    let bd9 = bd*bd\n    let ac10 = ac*ac\n    let\
    \ bc10 = bc*bc\n    let ad10 = ad*ad\n    let bd10 = bd*bd\n    let ac11 = ac*ac\n\
    \    let bc11 = bc*bc\n    let ad11 = ad*ad\n    let bd11 = bd*bd\n    let ac12\
    \ = ac*ac\n    let bc12 = bc*bc\n    let ad12 = ad*ad\n    let bd12 = bd*bd\n\
    \    let ac13 = ac*ac\n    let bc13 = bc*bc\n    let ad13 = ad*ad\n    let bd13\
    \ = bd*bd\n    let ac14 = ac*ac\n    let bc14 = bc*bc\n    let ad14 = ad*ad\n\
    \    let bd14 = bd*bd\n    let ac15 = ac*ac\n    let bc15 = bc*bc\n    let ad15\
    \ = ad*ad\n    let bd15 = bd*bd\n    let ac16 = ac*ac\n    let bc16 = bc*bc\n\
    \    let ad16 = ad*ad\n    let bd16 = bd*bd\n    let ac17 = ac*ac\n    let bc17\
    \ = bc*bc\n    let ad17 = ad*ad\n    let bd17 = bd*bd", "    let sides = [a, b,\
    \ c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return\
    \ -1\n    }\n    let area = sides.reduce(0, +) / Double(sides.count)\n    return\
    \ round(area, 2)", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n\
    \    if sum > sides.last {\n        return -1\n    }\n    let area = Double(sides.last)\
    \ * Double(sides.last) / Double(sides.last)\n    return round(area, 2)", "   \
    \ let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return -1", "    if a + b > c {\n        return Double(-1) * Double(a / b)\n\
    \    }\n    if a + c > b {\n        return Double(-1) * Double(b / c)\n    }\n\
    \    if b + c > a {\n        return Double(-1) * Double(c / a)\n    }\n    return\
    \ Double(a + b + c) / 2", "    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0,\
    \ +)\n    if sumOfSides > sides.last {\n        return -1\n    }\n    let third\
    \ = sides.last\n    let thirdSquare = side * side\n    let thirdSqrOfThird = thirdSquare\
    \ * third\n    let fourth = sides.last * sides.last\n    let fourthSquare = fourth\
    \ * fourth\n    let fourthSqrOfFourth = fourthSquare * fourth\n    let fifth =\
    \ sides.last * sides.last * sides.last\n    let fifthSquare = fifth * fifth\n\
    \    let fifthSqrOfFifth = fifthSquare * fifth\n    let sixth = sides.last * sides.last\
    \ * sides.last * sides.last\n    let sixthSquare = sixth * sixth\n    let sixthSqrOfSixth\
    \ = sixthSquare * sixth\n    let seventh = sides.last * sides.last * sides.last\
    \ * sides.last * sides.last\n    let seventhSquare = seventh * seventh\n    let\
    \ seventhSqrOfSeventh = seventhSquare * seventh\n    let eighth = sides.last *\
    \ sides.last * sides.last * sides.last * sides.last * sides.last\n    let eighthSquare\
    \ = eighth * eighth\n    let eighthSqrOfEighth = eighthSquare * eighth\n    let\
    \ ninth = sides.last * sides.last * sides.last * sides.last * sides.last * sides.last\
    \ * sides.last * sides.last\n    let ninthSquare = ninth * ninth\n    let ninthSqrOfNinth\
    \ = ninthSquare * ninth\n    let tenth = sides.last * sides.last * sides.last\
    \ * sides.last * sides.last * sides.last * sides.last * sides.last * sides.last\n\
    \    let tenthSquare = tenth * tenth\n    let tenthSqrOfTenth = tenthSquare *\
    \ tenth\n    let hundredth = sides.last * sides.last * sides.last * sides.last\
    \ * sides.last * sides.last * sides.last * sides.last * sides.last * sides.last\
    \ * sides.last\n    let hundredthSquare = hundredth * ", "    let side1 = abs(a)\
    \ + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 =\
    \ abs(a) - abs(b) + abs(c)\n    let side4 = abs(a) - abs(b) - abs(c)\n    let\
    \ area: Double\n    switch side1 {\n    case side2:\n        area = abs(b) + abs(c)\n\
    \    case side3:\n        area = abs(a) + abs(c)\n    case side4:\n        area\
    \ = abs(a) - abs(c)\n    default:\n        area = -1\n    }\n    return round(area,\
    \ 2)", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ + abs(c)\n    let side3 = abs(a) + abs(b) + abs(c)\n    if side1 == side2 &&\
    \ side2 == side3 {\n        return Double(side1)\n    }\n    return -1", "   \
    \ let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(b,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area >= 0 {\n        return area\n    } else {\n    \
    \    return -1\n    }", "    let area: Double = Double(a * b * c) / Double(2.0\
    \ * Double(a) + Double(b) + Double(c))\n    if area < 0.0 {\n        return -1.0\n\
    \    }\n    return area", "    let side1 = abs(a)\n    let side2 = abs(b)\n  \
    \  let side3 = abs(c)\n    let sum = side1 + side2 + side3\n    if sum < side3\
    \ {\n        return Double(sum)\n    } else {\n        return -1\n    }", "  \
    \  let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides[2]\
    \ {\n        return Double(sides[2]) / Double(sides[0])\n    }\n    return -1",
  "    let sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let\
    \ area = Double(sides) / Double(3.0)\n    return round(area, 2)", "    let area\
    \ = (a + b + c) / 2\n    if area > c {\n        return area\n    }\n    if area\
    \ > b {\n        return area\n    }\n    if area > a {\n        return area\n\
    \    }\n    return -1", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.count)", "    let sides = a + b + c\n  \
    \  if sides == 0 {\n        return 0.0\n    }\n    let area = Double(sides) /\
    \ Double(sides - a)\n    if area > 1.0 {\n        return -1.0\n    }\n    return\
    \ area", "    let area: Double = Double(a * b * c) / Double((a+b+c) * (a+b+c+1))\n\
    \    return area", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n\
    \    if a1 + b1 + c1 < a1 + b1 + c1 {\n        return -1\n    }\n    let a2 =\
    \ a1 * a1\n    let b2 = b1 * b1\n    let c2 = c1 * c1\n    let a3 = a1 * a2\n\
    \    let b3 = b1 * b2\n    let c3 = c1 * c2\n    let a4 = a1 * a3\n    let b4\
    \ = b1 * b3\n    let c4 = c1 * c3\n    let a5 = a1 * a4\n    let b5 = b1 * b4\n\
    \    let c5 = c1 * c5\n    let a6 = a1 * a5\n    let b6 = b1 * b6\n    let c6\
    \ = c1 * c6\n    let a7 = a1 * a6\n    let b7 = b1 * b7\n    let c7 = c1 * c7\n\
    \    let a8 = a1 * a7\n    let b8 = b1 * b8\n    let c8 = c1 * c8\n    let a9\
    \ = a1 * a8\n    let b9 = b1 * b9\n    let c9 = c1 * c9\n    let a10 = a1 * a9\n\
    \    let b10 = b1 * b10\n    let c10 = c1 * c10\n    let a11 = a1 * a10\n    let\
    \ b11 = b1 * b11\n    let c11 = c1 * c11\n    let a12 = a1 * a11\n    let b12\
    \ = b1 * b12\n    let c12 = c1 * c12\n    let a13 = a1 * a12\n    let b13 = b1\
    \ * b13\n    let c13 = c1 * c13\n    let a14 = a1 * a13\n    let b14 = b1 * b14\n\
    \    let c14 = c1 * c14\n    let a15 = a1 * a14\n    let b15 = b1 * b15\n    let\
    \ c15 = c1 * c15\n    let a16 = a1 * a15\n    let b16 = b1 * b16\n    let c16\
    \ = c1 * c16\n    let a17 = a1 * a16\n    let b17 = b1 * b17\n    let c17 = c1\
    \ * c17\n    let a18 = a1 * a17\n    let b18 = b1 * b18\n    let c18 = c1 * c18\n\
    \    let a19 = a1 * a18\n    let b19 = b1 * b19\n    let c19 = c1 * c19\n    let\
    \ a20 = a1 * a19\n    let b20 = b1 * b20\n    let c20 = c1 * c20\n    let a21\
    \ = a1 * a20\n    let b21 = b1 * b21\n    let c21 = c1 * c21\n    let a22 = a1\
    \ * a21\n    let b22 = b1 * b22\n    let c22 = c1 * c22\n    let a23 = a1 * a",
  "    let area = (a * b) - (c * c)\n    if area < 0 {\n        return -1\n    }\n\
    \    return Double(area) / Double(2.0 * Double(a * b))", "    let a1 = b * b -\
    \ 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n   \
    \ let a4 = -b - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n\
    \    if a2 < 0 {\n        return -1\n    }\n    if a3 > a2 {\n        return a2\
    \ / a2\n    }\n    if a4 > a2 {\n        return a2 / a2\n    }\n    if a5 >= 0\
    \ {\n        return a2 / a2\n    }\n    if a6 >= 0 {\n        return a2 / a2\n\
    \    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return Double(a + b + c)", "    let sum = a +\
    \ b + c\n    if sum < 3 {\n        return -1\n    }\n    return Double(sum) /\
    \ 3", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a +\
    \ b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n     \
    \   return Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b\
    \ + c - a)\n    }\n    return Double(a + b + c)", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n        return Double(sum)\n\
    \    } else {\n        return -1\n    }", "    let sides = [a, b, c]\n    let\
    \ sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return Double(sum)\n\
    \    } else {\n        return -1\n    }", "    let sides = a + b + c\n    if sides\
    \ <= 0 {\n        return -1\n    }\n    let area = sides * (sides - a) * (sides\
    \ - b) * (sides - c)\n    return Double(round(area / Double(sides)))", "    let\
    \ sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area\
    \ = Double(sides) / Double(3.0)\n    return round(area, 2)", "    let sum = a\
    \ + b + c\n    if sum > 0 {\n        return Double(sum) / Double(3.0)\n    } else\
    \ {\n        return -1\n    }", "    let side1 = abs(a) + abs(b) + abs(c)\n  \
    \  let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n\
    \    let area: Double\n    if side1 == side2 && side2 == side3 {\n        area\
    \ = side1\n    } else {\n        area = -1\n    }\n    return round(area, 2)",
  "    let area = (a * b) - (a * c)\n    if area < 0 {\n        return -1\n    }\n\
    \    return Double(area) / Double(a * b * c)", "    let sides = a + b + c\n  \
    \  if sides <= 0 {\n        return -1\n    }\n    let area = Double(sides) / Double(3.0)\n\
    \    if area >= 1.0 {\n        return area\n    } else {\n        return round(area,\
    \ 2)\n    }", "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b,\
    \ 2) + pow(c, 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area:\
    \ Double = side1 * side2 * side3\n    if area > 0 {\n        return round(area,\
    \ 2)\n    } else {\n        return -1\n    }", "    let side1 = abs(a) + abs(b)\
    \ + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) -\
    \ abs(b) - abs(c)\n    let area = side1 * side2 * side3\n    if area > 0 {\n \
    \       return Double(area)\n    } else {\n        return -1\n    }", "    let\
    \ a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 + b1 > c1 {\n\
    \        return a * b * c / 2\n    }\n    if a1 + c1 > b1 {\n        return a\
    \ * b * c / 2\n    }\n    if b1 + c1 > a1 {\n        return a * b * c / 2\n  \
    \  }\n    return -1", "    let sides = [a, b, c]\n    let sumOfSides = sides.reduce(0,\
    \ +)\n    if sumOfSides > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.count)", "    let area: Double = Double(a\
    \ * b * c) / Double(2.0 * a + b + c)\n    return area >= 0.0 ? area : -1.0", " \
    \   let sides = a + b + c\n    let area = sides/2.0\n    if area > Double(sides)\
    \ {\n        return area\n    } else {\n        return -1\n    }", "    let sides\
    \ = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n \
    \       return -1\n    }\n    return Double(sum) / Double(sides.last)", "    let\
    \ sides = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area\
    \ = sides / 2.0\n    if area >= a && area >= b && area >= c {\n        return\
    \ area\n    }\n    return -1", "    let side1 = abs(a) + abs(b) + abs(c)\n   \
    \ let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n\
    \    if side1 == side2 || side1 == side3 {\n        return side1\n    }\n    if\
    \ side2 == side3 {\n        return side2\n    }\n    return -1", "    let sides\
    \ = a + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area = Double(sides)\
    \ / 2.0\n    if area >= 1.0 {\n        return area\n    }\n    return round(area,\
    \ 2)", "    let area: Double = Double(a * b * c) / Double(2.0 * Double(a) + Double(b)\
    \ + Double(c))\n    return area", "    let sides = a + b + c\n    if sides % 2\
    \ == 0 {\n        return Double(sides) / 2.0\n    }\n    return -1", "    let\
    \ a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n   \
    \     return Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b)\n    }\n    if b + c > a {\n        return Double(b + c - a)\n    }\n\
    \    return Double(a + b + c)", "    if a + b > c {\n        return Double(-1)\
    \ * Double(a / b)\n    }\n    if a + c > b {\n        return Double(-1) * Double(b\
    \ / c)\n    }\n    if b + c > a {\n        return Double(-1) * Double(c / a)\n\
    \    }\n    return Double(a + b + c) / 2", "    let a1 = b * b - a * c\n    let\
    \ a2 = a * a\n    let a3 = a * a\n    let b1 = 2 * b * b\n    let b2 = b * b\n\
    \    let b3 = b * b\n    let c1 = 2 * c * c\n    let c2 = c * c\n    let c3 =\
    \ c * c\n    let det = a1 * b2 - a2 * b1\n    if det < 0 {\n        return -1\n\
    \    }\n    let sqrt_det = sqrt(det)\n    let area = sqrt_det * sqrt_det\n   \
    \ if area < 0 {\n        return -1\n    }\n    return round(area, 2)", "    if\
    \ a > b {\n        guard a > c else {\n            return -1\n        }\n    \
    \    return b * b + c * c\n    }\n    guard b > c else {\n        return -1\n\
    \    }\n    return a * b + c * c", "    let sides = a + b + c\n    if sides %\
    \ 2 == 0 {\n        return Double(sides) / 2\n    }\n    return -1", "    let\
    \ sides = [a, b, c]\n    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides\
    \ > sides[2] {\n        return -1\n    }\n    return Double(sides[0] * sides[1]\
    \ * sides[2]) / Double(sides[0] + sides[1] + sides[2])", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    let s = (a + b + c) / 2\n    if s\
    \ > 0 {\n        return s * sqrt(s * (s - a) * (s - b) * (s - c))\n    }\n   \
    \ return -1", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n\
    \    if a1 + b1 > c1 {\n        return a * b * c / 2\n    }\n    if a1 + b1 >\
    \ c1 {\n        return a * b * c / 2\n    }\n    if a1 + b1 > c1 {\n        return\
    \ a * b * c / 2\n    }\n    return -1", "    let a1 = abs(a)\n    let b1 = abs(b)\n\
    \    let c1 = abs(c)\n    let a2 = a1 + b1\n    let b2 = b1 + c1\n    let c2 =\
    \ c1 + a1\n    if a2 > b2 && a2 > c2 {\n        return a * b * c / 2\n    } else\
    \ if b2 > a2 && b2 > c2 {\n        return b * a * c / 2\n    } else {\n      \
    \  return c * a * a / 2\n    }", "    if a + b > c {\n        return Double(-1)\
    \ * Double(a + b - c)\n    }\n    if a + c > b {\n        return Double(-1) *\
    \ Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(-1) * Double(b\
    \ + c - a)\n    }\n    return Double(a + b + c) / 2", "    let area: Double =\
    \ Double(a * b * c) / Double(2.0 * a + b + c)\n    return area", "    let a =\
    \ abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n       \
    \ return Double(a + b - c) / 2\n    }\n    if a + c > b {\n        return Double(a\
    \ + c - b) / 2\n    }\n    if b + c > a {\n        return Double(b + c - a) /\
    \ 2\n    }\n    return Double(a + b + c) / 2", "    let sides = [a, b, c]\n  \
    \  let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return -1\n\
    \    }\n    return Double(sum) / Double(sides.last)", "    let area = (a * b +\
    \ c * b * c) / Double(4.0 * a + b + c)\n    if area > Double(0.0) {\n        return\
    \ round(area, 2)\n    } else {\n        return -1\n    }", "    let a1 = b * b\
    \ - 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n \
    \   let a4 = -b - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n\
    \    if a2 < 0 {\n        return -1\n    }\n    if a3 < 0 {\n        return -1\n\
    \    }\n    if a4 < 0 {\n        return -1\n    }\n    if a5 < 0 {\n        return\
    \ -1\n    }\n    if a6 < 0 {\n        return -1\n    }\n    if a2 > a6 && a3 >\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 >\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 < a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > a6 && a3 <\
    \ a5 && a4 > a4 {\n        return a1 + a2 + a3\n    }\n    if a2 > ", "    let\
    \ side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(b,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    return round(area, 2)", "    let a1 = b * b - 4 * a * c\n\
    \    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b\
    \ - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n  \
    \  let a7 = Math.sqrt(a5)\n    let a8 = -b + Math.sqrt(a3)\n    let a9 = -b -\
    \ Math.sqrt(a3)\n    let a10 = Math.sqrt(a9)\n    let a11 = Math.sqrt(a10)\n \
    \   let a12 = Math.sqrt(a11)\n    let a13 = -b + Math.sqrt(a9)\n    let a14 =\
    \ -b - Math.sqrt(a9)\n    let a15 = Math.sqrt(a14)\n    let a16 = Math.sqrt(a15)\n\
    \    let a17 = -b + Math.sqrt(a14)\n    let a18 = -b - Math.sqrt(a14)\n    let\
    \ a19 = Math.sqrt(a17)\n    let a20 = Math.sqrt(a18)\n    let a21 = Math.sqrt(a19)\n\
    \    let a22 = -b + Math.sqrt(a17)\n    let a23 = -b - Math.sqrt(a17)\n    let\
    \ a24 = Math.sqrt(a22)\n    let a25 = Math.sqrt(a23)\n    let a26 = Math.sqrt(a24)\n\
    \    let a27 = -b + Math.sqrt(a22)\n    let a28 = -b - Math.sqrt(a22)\n    let\
    \ a29 = Math.sqrt(a27)\n    let a30 = Math.sqrt(a28)\n    let a31 = Math.sqrt(a29)\n\
    \    let a32 = -b + Math.sqrt(a27)\n    let a33 = -b - Math.sqrt(a27)\n    let\
    \ a34 = Math.sqrt(a32)\n    let a35 = Math.sqrt(a33)\n    let a36 = Math.sqrt(a34)\n\
    \    let a37 = -b + Math.sqrt(a32)\n    let a38 = -b - Math.sqrt(a32)\n    let\
    \ a39 = Math.sqrt(a37)\n    let a40 = Math.sqrt(a38)\n    let a41 = Math.sqrt(a39)\n\
    \    let a42 = -b + Math.sqrt(a37)\n    let a43 = -b - Math.sqrt(a37)\n    let\
    \ a44 = Math.sqrt(a42)\n    let a45 = Math.sqrt(a43)\n    let a46 = Math.sqrt(a44)\n\
    \    let a47 = -b + Math.sqrt(a42)\n    let a48 = -b - Math.sqrt(a42)\n    let\
    \ a49 = Math.sqrt(a47)\n    let a50 = Math.sqrt(a48)\n    let a51 = Math.sqrt(a49)\n\
    \    let a52 = -b + Math.sqrt(a47)\n    let a53 = -b - Math.sqrt(a47)\n    let\
    \ a54 = Math.sqrt(a5", "    let area = (a + b + c) / 2\n    if area > c {\n  \
    \      return area\n    }\n    if area > b {\n        return area\n    }\n   \
    \ if area > a {\n        return area\n    }\n    return -1", "    let a = abs(a)\n\
    \    let b = abs(b)\n    let c = abs(c)\n    let s = (a+b+c)/2\n    if s > c {\n\
    \        return -1\n    }\n    if s == c {\n        return a * b\n    }\n    if\
    \ s == b {\n        return a * c\n    }\n    if s == a {\n        return b * c\n\
    \    }\n    return -1", "    let area: Double = abs(a * b * c) / Double(pow(a,\
    \ 2) + pow(b, 2) + pow(c, 2))\n    return area < 0.000001 ? -1.0 : area", "  \
    \  let a1 = b * b - 4 * a * c\n    let a2 = sqrt(a1)\n    let a3 = sqrt(a2)\n\
    \    let a4 = b * b + 4 * a * c\n    let a5 = sqrt(a4)\n    let a6 = a * b + 4\
    \ * a * c\n    let a7 = a * b - a2 * a2 * c\n    let a8 = a * b - a2 * a2 * c\n\
    \    let a9 = a * b - a2 * a2 * c\n    let a10 = a * b - a2 * a2 * c\n    let\
    \ a11 = a * b - a2 * a2 * c\n    let a12 = a * b - a2 * a2 * c\n    let a13 =\
    \ a * b - a2 * a2 * c\n    let a14 = a * b - a2 * a2 * c\n    let a15 = a * b\
    \ - a2 * a2 * c\n    let a16 = a * b - a2 * a2 * c\n    let a17 = a * b - a2 *\
    \ a2 * c\n    let a18 = a * b - a2 * a2 * c\n    let a19 = a * b - a2 * a2 * c\n\
    \    let a20 = a * b - a2 * a2 * c\n    let a21 = a * b - a2 * a2 * c\n    let\
    \ a22 = a * b - a2 * a2 * c\n    let a23 = a * b - a2 * a2 * c\n    let a24 =\
    \ a * b - a2 * a2 * c\n    let a25 = a * b - a2 * a2 * c\n    let a26 = a * b\
    \ - a2 * a2 * c\n    let a27 = a * b - a2 * a2 * c\n    let a28 = a * b - a2 *\
    \ a2 * c\n    let a29 = a * b - a2 * a2 * c\n    let a30 = a * b - a2 * a2 * c\n\
    \    let a31 = a * b - a2 * a2 * c\n    let a32 = a * b - a2 * a2 * c\n    let\
    \ a33 = a * b - a2 * a2 * c\n    let a34 = a * b - a2 * a2 * c\n    let a35 =\
    \ a * b - a2 * a2 * c\n    let a36 = a * b - a2 * a2 * c\n    let a37 = a * b\
    \ - a2 * a2 * c\n    let a38 = a * b - a2 * a2 * c\n    let a39 = a * b - a2 *\
    \ a2 * c\n    let a40 = a * b - a2 * a2 * c\n    let a41 = a * b - a2 * a2 * c\n\
    \    let a42 = a * b - a2 * a2 * c\n    let a43 = a * b - a2 * a2 * c\n    let\
    \ a44 = a * b - a2 * a2 * c\n    let a45 = a * b - a2 * a2 * c\n    let a46 =\
    \ a * b - a2 * a2 * c\n    let a47 = a * b - a2 * a2 * c\n    let a48 = a * b\
    \ - a2 * a2 * c\n    let a", "    let a = abs(a)\n    let b = abs(b)\n    let\
    \ c = abs(c)\n    if a + b > c {\n        return Double(a + b - c) / 2\n    }\n\
    \    if a + c > b {\n        return Double(a + c - b) / 2\n    }\n    if b + c\
    \ > a {\n        return Double(b + c - a) / 2\n    }\n    return Double(a + b\
    \ + c) / 2", "    let area: Double = Double(a * b * c) / Double(2.0 * a + b +\
    \ c)\n    return area > 0.0 ? area : -1.0", "    let sides = [a, b, c]\n    let\
    \ sumOfSides = sides.reduce(0, +)\n    if sumOfSides > sides.last {\n        return\
    \ -1\n    }\n    let third = sides.last\n    let thirdSquare = side * side\n \
    \   let thirdSqrOfSides = thirdSquare * side\n    let thirdSqrOfSidesSquare =\
    \ thirdSqrOfSides * side\n    let thirdSqrOfSidesSquareRoot = thirdSqrOfSidesSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquare = thirdSqrOfSidesSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquare = thirdSqrOfSidesSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquare\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdSqrOfSidesSquareRootSquareRootSquareRoot = thirdSqrOfSidesSquareRootSquareRootSquareRoot\
    \ / third\n    let thirdS", "    if a + b > c {\n        return Double(-1) * Double(a\
    \ / b)\n    }\n    if a + c > b {\n        return Double(-1) * Double(b / c)\n\
    \    }\n    if b + c > a {\n        return Double(-1) * Double(c / a)\n    }\n\
    \    return Double(a + b + c) / 2", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a + b - c) / 2\n\
    \    }\n    if a + c > b {\n        return Double(a + c - b) / 2\n    }\n    if\
    \ b + c > a {\n        return Double(b + c - a) / 2\n    }\n    return -1", " \
    \   let a1 = b * b - a * c\n    let a2 = a * a\n    let c1 = c * c - a1 * a\n\
    \    let c2 = c * c\n    let det = a1 * c2 - a2 * c1\n    if det < 0 {\n     \
    \   return -1\n    }\n    let sqrt_det = sqrt(det)\n    return sqrt_det * sqrt_det",
  "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a + b > c {\n\
    \        return Double(a + b - c)\n    } else {\n        return Double(a + b +\
    \ c - a)\n    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n\
    \    if a1 + b1 > c1 {\n        return a1 * b1 * c1\n    }\n    if b1 + c1 > a1\
    \ {\n        return b1 * c1 * a1\n    }\n    if c1 + a1 > b1 {\n        return\
    \ c1 * a1 * b1\n    }\n    return -1", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let s = a + b + c\n    if s == 0 {\n        return -1\n\
    \    }\n    let area = s * s * (s - a) * (s - b) * (s - c)\n    return Double(area\
    \ / s)", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    if a\
    \ + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b {\n   \
    \     return Double(a + c - b)\n    }\n    if b + c > a {\n        return Double(b\
    \ + c - a)\n    }\n    return Double(a + b + c)", "    let sides = [a, b, c]\n\
    \    let sumOfSides = sides.reduce(0, +)\n    if sumOfSides > sides.last {\n \
    \       return -1\n    }\n    return Double(sides.last) * Double(sides.last) /\
    \ Double(sides.count)", "    let a1 = b * b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n\
    \    let a3 = -b + Math.sqrt(a1)\n    let a4 = -b - Math.sqrt(a1)\n    let a5\
    \ = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n    if a2 < 0 {\n        return\
    \ -1\n    }\n    if a3 < 0 {\n        return -1\n    }\n    if a4 < 0 {\n    \
    \    return -1\n    }\n    if a5 < 0 {\n        return -1\n    }\n    if a6 <\
    \ 0 {\n        return -1\n    }\n    if a2 > a1 {\n        return a2 / a1\n  \
    \  }\n    if a3 > a1 {\n        return a3 / a1\n    }\n    if a4 > a1 {\n    \
    \    return a4 / a1\n    }\n    if a5 > a1 {\n        return a5 / a1\n    }\n\
    \    if a6 > a1 {\n        return a6 / a1\n    }\n    return 0", "    let sides\
    \ = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n \
    \       return -1\n    }\n    return Double(sides.last) * Double(sides.last) /\
    \ Double(sides.first - sides.last)", "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    let s = (a + b + c) / 2\n    if s > 0 {\n        let\
    \ area = s * s\n        let area = Double(area)\n        let area = round(area,\
    \ 2)\n        return area\n    } else {\n        return -1\n    }", "    let a1\
    \ = (a + b + c) / 2\n    let b1 = (a + b) / 2\n    let c1 = (a + c) / 2\n    let\
    \ a2 = (b + c + a) / 2\n    let b2 = (b + c) / 2\n    let c2 = (b + a) / 2\n \
    \   let a3 = (c + a + b) / 2\n    let b3 = (c + b) / 2\n    let c3 = (c + a) /\
    \ 2\n    let a4 = (a + b + c) / 2\n    let b4 = (a + b) / 2\n    let c5 = (a +\
    \ c) / 2\n    let a6 = (b + c + a) / 2\n    let b6 = (b + c) / 2\n    let c6 =\
    \ (b + a) / 2\n    let a7 = (c + a + b) / 2\n    let b7 = (c + b) / 2\n    let\
    \ c7 = (c + a) / 2\n    let a8 = (a + b + c) / 2\n    let b8 = (a + b) / 2\n \
    \   let c8 = (a + c) / 2\n    let a9 = (b + c + a) / 2\n    let b9 = (b + c) /\
    \ 2\n    let c9 = (b + a) / 2\n    let a10 = (c + a + b) / 2\n    let b10 = (c\
    \ + b) / 2\n    let c10 = (c + a) / 2\n    let a11 = (a + b + c) / 2\n    let\
    \ b11 = (a + b) / 2\n    let c11 = (a + c) / 2\n    let a12 = (b + c + a) / 2\n\
    \    let b12 = (b + c) / 2\n    let c12 = (b + a) / 2\n    let a13 = (c + a +\
    \ b) / 2\n    let b13 = (c + b) / 2\n    let c13 = (c + a) / 2\n    let a14 =\
    \ (a + b + c) / 2\n    let b14 = (a + b) / 2\n    let c14 = (a + c) / 2\n    let\
    \ a15 = (b + c + a) / 2\n    let b15 = (b + c) / 2\n    let c15 = (b + a) / 2\n\
    \    let a16 = (c + a + b) / 2\n    let b16 = (c + b) / 2\n    let c16 = (c +\
    \ a) / 2\n    let a17 = (a + b + c) / 2\n    let b17 = (a + b) / 2\n    let c17\
    \ = (a + c) / 2\n    let a18 = (b + c + a) / 2\n    let b18 = (b + c) / 2\n  \
    \  let c18 = (b + a) / 2\n    let a19 = (c + a + b) / 2\n    let b19 = (c + b)\
    \ / 2\n    let c19 = (c + a) / 2\n    let a20 = (a + b + c) / 2\n    let b20 =\
    \ (a + b) / 2\n    let c20 = (a + c) / 2\n    let a21 = (b + c + a) / 2\n    let\
    \ b21 = (b + c) / 2\n    let c21 = (b + a) / 2\n    let a22 = (c + a + b) / 2\n\
    \    let b22", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n \
    \   let s = a + b + c\n    if s > 0 {\n        let area = s * s * (s - a) * (s\
    \ - b) * (s - c)\n        return Double(area / s)\n    } else {\n        return\
    \ -1\n    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n\
    \    if a1 > b1 && b1 > c1 {\n        return a1 * b1 * c1\n    }\n    if a1 >\
    \ c1 && c1 > b1 {\n        return a1 * c1 * b1\n    }\n    if b1 > c1 && c1 >\
    \ a1 {\n        return b1 * c1 * a1\n    }\n    return -1", "    let a1 = b *\
    \ b - 4 * a * c\n    let a2 = Math.sqrt(a1)\n    let a3 = -b + Math.sqrt(a1)\n\
    \    let a4 = -b - Math.sqrt(a1)\n    let a5 = Math.sqrt(a3)\n    let a6 = Math.sqrt(a4)\n\
    \    let a7 = Math.sqrt(a5)\n    let a8 = -b + Math.sqrt(a3)\n    let a9 = -b\
    \ - Math.sqrt(a3)\n    let a10 = Math.sqrt(a9)\n    let a11 = Math.sqrt(a10)\n\
    \    let a12 = Math.sqrt(a11)\n    let a13 = -b + Math.sqrt(a4)\n    let a14 =\
    \ -b - Math.sqrt(a4)\n    let a15 = Math.sqrt(a14)\n    let a16 = Math.sqrt(a15)\n\
    \    let a17 = -b + Math.sqrt(a5)\n    let a18 = -b - Math.sqrt(a5)\n    let a19\
    \ = Math.sqrt(a17)\n    let a20 = Math.sqrt(a18)\n    let a21 = Math.sqrt(a19)\n\
    \    let a22 = -b + Math.sqrt(a6)\n    let a23 = -b - Math.sqrt(a6)\n    let a24\
    \ = Math.sqrt(a23)\n    let a25 = Math.sqrt(a24)\n    let a26 = -b + Math.sqrt(a7)\n\
    \    let a27 = -b - Math.sqrt(a7)\n    let a28 = Math.sqrt(a26)\n    let a29 =\
    \ Math.sqrt(a27)\n    let a30 = -b + Math.sqrt(a8)\n    let a31 = -b - Math.sqrt(a8)\n\
    \    let a32 = Math.sqrt(a30)\n    let a33 = Math.sqrt(a31)\n    let a34 = -b\
    \ + Math.sqrt(a9)\n    let a35 = -b - Math.sqrt(a9)\n    let a36 = Math.sqrt(a34)\n\
    \    let a37 = Math.sqrt(a35)\n    let a38 = -b + Math.sqrt(a10)\n    let a39\
    \ = -b - Math.sqrt(a10)\n    let a40 = Math.sqrt(a38)\n    let a41 = Math.sqrt(a39)\n\
    \    let a42 = -b + Math.sqrt(a11)\n    let a43 = -b - Math.sqrt(a11)\n    let\
    \ a44 = Math.sqrt(a42)\n    let a45 = Math.sqrt(a43)\n    let a46 = -b + Math.sqrt(a12)\n\
    \    let a47 = -b - Math.sqrt(a12)\n    let a48 = Math.sqrt(a46)\n    let a49\
    \ = Math.sqrt(a47)\n    let a50 = -b + Math.sqrt(a13)\n    let a51 = -b - Math.sqrt(a13)\n\
    \    let a52 = Math.sqrt(a50)\n    let a53 = Math.sqrt(a51)\n    let a54 = -b\
    \ + Math.sqrt(a14)\n    let a55", "    let a1 = (a + b + c) / 2\n    let b1 =\
    \ (a + b) / 2\n    let c1 = (a + c) / 2\n    let a2 = (b + c) / 2\n    let b2\
    \ = (b + a) / 2\n    let c2 = (b + c) / 2\n    let a3 = (c + a) / 2\n    let b3\
    \ = (c + b) / 2\n    let c3 = (c + a) / 2\n    let a4 = (a1 + a2 + a3) / 3\n \
    \   let b4 = (b1 + b2 + b3) / 3\n    let c4 = (c1 + c2 + c3) / 3\n    let a5 =\
    \ (a2 + a3 + a4) / 3\n    let b5 = (b2 + b3 + b4) / 3\n    let c5 = (c2 + c3 +\
    \ c5) / 3\n    let a6 = (a3 + a4 + a5) / 3\n    let b6 = (b3 + b4 + b6) / 3\n\
    \    let c6 = (c3 + c4 + c6) / 3\n    let a7 = (a4 + a5 + a6) / 3\n    let b7\
    \ = (b4 + b5 + b7) / 3\n    let c7 = (c4 + c5 + c7) / 3\n    let a8 = (a5 + a6\
    \ + a7) / 3\n    let b8 = (b5 + b6 + b8) / 3\n    let c8 = (c5 + c6 + c8) / 3\n\
    \    let a9 = (a6 + a7 + a8) / 3\n    let b9 = (b6 + b7 + b9) / 3\n    let c9\
    \ = (c6 + c7 + c9) / 3\n    let a10 = (a7 + a8 + a9) / 3\n    let b10 = (b7 +\
    \ b8 + b10) / 3\n    let c10 = (c7 + c8 + c10) / 3\n    let a11 = (a8 + a9 + a10)\
    \ / 3\n    let b11 = (b8 + b10 + b11) / 3\n    let c11 = (c8 + c10 + c11) / 3\n\
    \    let a12 = (a9 + a10 + a11) / 3\n    let b12 = (b9 + b10 + b12) / 3\n    let\
    \ c12 = (c9 + c10 + c12) / 3\n    let a13 = (a10 + a11 + a12) / 3\n    let b13\
    \ = (b10 + b11 + b13) / 3\n    let c13 = (c10 + c11 + c13) / 3\n    let a14 =\
    \ (a11 + a12 + a13) / 3\n    let b14 = (b11 + b12 + b14) / 3\n    let c14 = (c11\
    \ + c12 + c14) / 3\n    let a15 = (a12 + a13 + a14) / 3\n    let b15 = (b12 +\
    \ b13 + b15) / 3\n    let c15 = (c12 + c13 + c15) / 3\n    let ", "    let a2\
    \ = a*a\n    let b2 = b*b\n    let c2 = c*c\n    let ac = a2 + b2\n    let bc\
    \ = b2 + c2\n    let ca = ac + bc\n    let area = sqrt(ca)\n    if area > 0 {\n\
    \        return round(area, 2)\n    } else {\n        return -1\n    }", "   \
    \ let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return -1\n    }\n    return Double(sides.last) * Double(sides.last)\
    \ / Double(sides.count)", "    let area: Double = Double(a * b * c) / Double(2.0\
    \ * a + b + c)\n    return area >= 0.0 ? area : -1.0", "    let sides = [a, b,\
    \ c]\n    let sum = sides.reduce(0, combine: +)\n    if sum > sides.last {\n \
    \       return -1\n    }\n    return Double(sides.last) * Double(sides.last) /\
    \ Double(sides.first - sides.last)", "    let sides = [a, b, c]\n    let sum =\
    \ sides.reduce(0, +)\n    if sum > sides.last {\n        return -1\n    }\n  \
    \  return Double(sum) / Double(sides.last)", "    let a = abs(a)\n    let b =\
    \ abs(b)\n    let c = abs(c)\n    if a + b > c {\n        return Double(a + b\
    \ - c)\n    }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n \
    \   if b + c > a {\n        return Double(b + c - a)\n    }\n    return -1", " \
    \   let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    let a2 = a1\
    \ + b1\n    let b2 = b1 + c1\n    let c2 = c1 + a1\n    if a2 > b2 && a2 > c2\
    \ {\n        return a * b * c / 2\n    }\n    if b2 > a2 && b2 > c2 {\n      \
    \  return b * c / 2\n    }\n    if c2 > a2 && c2 > b2 {\n        return c\n  \
    \  }\n    return -1", '    return ((a + b + c) / 2) * 0.5', "    let sides = a\
    \ + b + c\n    if sides <= 0 {\n        return -1\n    }\n    let area = Double(sides)\
    \ / Double(3.0)\n    return round(area, 2)", "    if a + b > c {\n        return\
    \ Double(-1) * Double(a / b)\n    }\n    if a + c > b {\n        return Double(-1)\
    \ * Double(b / c)\n    }\n    if b + c > a {\n        return Double(-1) * Double(c\
    \ / a)\n    }\n    return Double(a + b + c) / 2", '    return (a * b + c * c)
    / (a * a + b * b + c * c)', "    let sides = a + b + c\n    if sides <= 0 {\n\
    \        return -1\n    }\n    let area = sides * (sides - a) * (sides - b) *\
    \ (sides - c)\n    return Double(area / Double(sides))", "    let sides = [a,\
    \ b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n       \
    \ return -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.count)",
  "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2.0\n    if area > 0 {\n        return area\n    } else {\n     \
    \   return -1\n    }", "    if a + b > c {\n        return Double(-1) / Double(Double(a\
    \ + b - c))\n    }\n    if a + c > b {\n        return Double(-1) / Double(Double(a\
    \ + c - b))\n    }\n    if b + c > a {\n        return Double(-1) / Double(Double(b\
    \ + c - a))\n    }\n    return Double(a + b + c) / Double(Double(a + b + c) +\
    \ Double(b + c + a))", "    let sides = a + b + c\n    if sides == 0 {\n     \
    \   return -1\n    }\n    let area = sqrt(Double(a * b * c) / sides)\n    return\
    \ round(area, 2)", "    let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n\
    \    if sum > sides.last {\n        return -1\n    }\n    return Double(sides.last)\
    \ * Double(sides.last) / Double(sides.last)", "    let side1 = abs(a) + abs(b)\
    \ + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 = abs(a) -\
    \ abs(b) - abs(c)\n    if side1 == side2 && side2 == side3 {\n        return side1\n\
    \    }\n    return -1", "    let sides = a + b + c\n    let area = sides / 2.0\n\
    \    if area > sides {\n        return area\n    } else {\n        return -1\n\
    \    }", "    let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    if\
    \ a1 + b1 > c1 {\n        return a * b * c / 2\n    } else {\n        return -1\n\
    \    }", "    let a1 = b * b - 4 * a * c\n    let a2 = sqrt(a1)\n    let a3 =\
    \ sqrt(a2)\n    let a4 = sqrt(a3)\n    let a5 = sqrt(a4)\n    let a6 = sqrt(a5)\n\
    \    let a7 = sqrt(a6)\n    let a8 = sqrt(a7)\n    let a9 = sqrt(a8)\n    let\
    \ a10 = sqrt(a9)\n    let a11 = sqrt(a10)\n    let a12 = sqrt(a11)\n    let a13\
    \ = sqrt(a12)\n    let a14 = sqrt(a13)\n    let a15 = sqrt(a14)\n    let a16 =\
    \ sqrt(a15)\n    let a17 = sqrt(a16)\n    let a18 = sqrt(a17)\n    let a19 = sqrt(a18)\n\
    \    let a20 = sqrt(a19)\n    let a21 = sqrt(a20)\n    let a22 = sqrt(a21)\n \
    \   let a23 = sqrt(a22)\n    let a24 = sqrt(a23)\n    let a25 = sqrt(a24)\n  \
    \  let a26 = sqrt(a25)\n    let a27 = sqrt(a26)\n    let a28 = sqrt(a27)\n   \
    \ let a29 = sqrt(a28)\n    let a30 = sqrt(a29)\n    let a31 = sqrt(a30)\n    let\
    \ a32 = sqrt(a31)\n    let a33 = sqrt(a32)\n    let a34 = sqrt(a33)\n    let a35\
    \ = sqrt(a34)\n    let a36 = sqrt(a35)\n    let a37 = sqrt(a36)\n    let a38 =\
    \ sqrt(a37)\n    let a39 = sqrt(a38)\n    let a40 = sqrt(a39)\n    let a41 = sqrt(a40)\n\
    \    let a42 = sqrt(a41)\n    let a43 = sqrt(a42)\n    let a44 = sqrt(a43) \n\
    \    let a45 = sqrt(a44)\n    let a46 = sqrt(a45)\n    let a47 = sqrt(a46)\n \
    \   let a48 = sqrt(a47)\n    let a49 = sqrt(a48)\n    let a50 = sqrt(a49)\n  \
    \  let a51 = sqrt(a50)\n    let a52 = sqrt(a51)\n    let a53 = sqrt(a52)\n   \
    \ let a54 = sqrt(a53)\n    let a55 = sqrt(a54)\n    let a56 = sqrt(a55)\n    let\
    \ a57 = sqrt(a56)\n    let a58 = sqrt(a57)\n    let a59 = sqrt(a58)\n    let a60\
    \ = sqrt(a59)\n    let a61 = sqrt(a60)\n    let a62 = sqrt(a61)\n    let a63 =\
    \ sqrt(a62)\n    let a64", "    let sum = a + b + c\n    if sum < 3 {\n      \
    \  return -1\n    }\n    return Double(sum) / 3", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides[2] {\n        return Double(sides[2])\
    \ / 2.0\n    }\n    return Double(sides[0] + sides[1] + sides[2]) / 3.0", "  \
    \  let a1 = abs(a)\n    let b1 = abs(b)\n    let c1 = abs(c)\n    let a2 = a1\
    \ + b1\n    let b2 = b1 + c1\n    let c2 = c1 + a1\n    let a3 = a2 + b2\n   \
    \ let b3 = b2 + c2\n    let c3 = c2 + a2\n    if a3 > b3 && a3 > c3 {\n      \
    \  return a3 * 0.5\n    } else if b3 > a3 && b3 > c3 {\n        return b3 * 0.5\n\
    \    } else {\n        return c3 * 0.5\n    }", "    let sides = a + b + c\n \
    \   if sides <= 0 {\n        return -1\n    }\n    let area = sides/2\n    if\
    \ area > Double(sides) {\n        return -1\n    }\n    return area", '    return
    ((b * b) - (4 * a * c)) / (2 * a)', "    let a = abs(a)\n    let b = abs(b)\n\
    \    let c = abs(c)\n    if a + b > c {\n        return Double(a + b - c)\n  \
    \  }\n    if a + c > b {\n        return Double(a + c - b)\n    }\n    if b +\
    \ c > a {\n        return Double(b + c - a)\n    }\n    return -1", '    return
    ((a + b + c) / 2)', "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ combine: +)\n    if sum > sides.last {\n        return -1\n    }\n    return\
    \ Double(sides.last) * Double(sides.last) / Double(sides.first)", "    let side1\
    \ = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let\
    \ side3 = abs(a) - abs(b) - abs(c)\n    let area = side1 * side2 * side3\n   \
    \ if area > 0 {\n        return Double(area)\n    } else {\n        return -1\n\
    \    }", '    return Double(sqrt(pow((b - a), 2) + pow((c - a), 2)))', "    let\
    \ area = a * b * c\n    let rounded = Double(area).rounded(toPlaces: 2)\n    return\
    \ rounded == area ? rounded : -1", "    let sides = [a, b, c]\n    let sum = sides.reduce(0,\
    \ +)\n    if sum > sides.last {\n        return Double(sum)\n    }\n    return\
    \ -1", "    let area: Double = Double(a * b * c) / Double((a+b+c) * (a+b+c+1))\n\
    \    return area > 0 ? area : -1", "    let sides = [a, b, c]\n    guard sides.count\
    \ > 3 else {\n        return -1\n    }\n    let sum = sides.reduce(0, +)\n   \
    \ if sum > sides[2] {\n        return Double(round(Double(sides[0]) / Double(sides[1])))\n\
    \    } else {\n        return Double(round(Double(sides[2]) / Double(sides[1])))\n\
    \    }", "    let sides = a + b + c\n    if sides == 0 {\n        return -1\n\
    \    }\n    let area = (a * b * c) / sides\n    return Double(round(area))", " \
    \   let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2 || side2 == side3\
    \ {\n        return side1\n    }\n    return -1", '    return ((a + b + c) / 2)
    * 0.5', "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let s\
    \ = (a + b + c) / 2\n    if s > 0 {\n        return s * sqrt(s * (s - a) * (s\
    \ - b) * (s - c))\n    } else {\n        return -1\n    }", "    let a1 = b *\
    \ b - a * c\n    let a2 = a * a\n    let c1 = b * b - c * c\n    let c2 = c *\
    \ c\n    let det = a1 * c2 - a2 * c1\n    if det < 0 {\n        return -1\n  \
    \  }\n    return Double(sqrt(Double(det)))", "    let a1 = b * b - a * c\n   \
    \ let a2 = a * a\n    let a3 = a * a\n    let b1 = 2 * b * b\n    let b2 = b *\
    \ b\n    let b3 = b * b\n    let c1 = 2 * c * c\n    let c2 = c * c\n    let c3\
    \ = c * c\n    let d = b1 * b2 - a1 * a2\n    if d < 0 {\n        return -1\n\
    \    }\n    let e = b1 * c2 - a1 * c3\n    if e < 0 {\n        return -1\n   \
    \ }\n    let f = c1 * c2 - b1 * c3\n    if f < 0 {\n        return -1\n    }\n\
    \    let g = a1 * c2 - b1 * a2\n    if g < 0 {\n        return -1\n    }\n   \
    \ let h = c1 * b2 - a1 * b2\n    if h < 0 {\n        return -1\n    }\n    let\
    \ i = a2 * c2 - b2 * c3\n    if i < 0 {\n        return -1\n    }\n    let j =\
    \ a2 * b2 - b2 * a2\n    if j < 0 {\n        return -1\n    }\n    let k = a2\
    \ * c3 - b2 * c3\n    if k < 0 {\n        return -1\n    }\n    let l = a3 * b2\
    \ - b3 * a2\n    if l < 0 {\n        return -1\n    }\n    let m = a3 * c2 - c2\
    \ * a3\n    if m < 0 {\n        return -1\n    }\n    let n = a3 * c3 - c2 * a3\n\
    \    if n < 0 {\n        return -1\n    }\n    let o = b1 * c3 - c1 * b3\n   \
    \ if o < 0 {\n        return -1\n    }\n    let p = a1 * c3 - c1 * a3\n    if\
    \ p < 0 {\n        return -1\n    }\n    let q = a1 * b3 - b1 * a3\n    if q <\
    \ 0 {\n        return -1\n    }\n    let r = a1 * b2 - b1 * a2\n    if r < 0 {\n\
    \        return -1\n    }\n    let s = b1 * c2 - c1 * b2\n    if s < 0 {\n   \
    \     return -1\n    }\n    let t = a1 * c2 - c1 * a2\n    if t < 0 {\n      \
    \  return -1\n    }\n    let u = a1 * b2 - b1 * a2\n    if u < 0 {\n        return\
    \ -1\n    }\n    let v = a1 * c3 - c1 * a3\n    if v < 0 {\n        return -1\n\
    \    }\n    let w = b1 * c2 - c1 * b2\n    if w < 0 {\n        return -1\n   \
    \ }\n    let x = a1 * c2 - c1 * a2\n    if x < 0 {\n        return -1\n    }\n\
    \    let y = b1 * c3 - c1 * b3\n    if y < 0 {\n        return -1\n    }\n   \
    \ let z = a1 * c3 - c1 * a3\n    if z < 0 {\n        return -1\n    }", "    let\
    \ side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n\
    \    let side3 = abs(a) - abs(b) - abs(c)\n    if side1 == side2 && side2 == side3\
    \ {\n        return Double(side1)\n    }\n    return -1", "    let side1 = abs(a)\
    \ + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b) - abs(c)\n    let side3 =\
    \ abs(a) - abs(b) - abs(c)\n    let area: Double = side1 * side2 * side3\n   \
    \ if area >= 0 {\n        return area\n    }\n    return -1", "    let a1 = abs(a)\n\
    \    let b1 = abs(b)\n    let c1 = abs(c)\n    if a1 + b1 > c1 {\n        return\
    \ a * b * c / 2\n    } else {\n        return -1\n    }", "    let sides = [a,\
    \ b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n       \
    \ return -1\n    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first\
    \ - sides.last)", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a * b * c / 2)\n    }\n    if a + c\
    \ > b {\n        return Double(a * c * b / 2)\n    }\n    if b + c > a {\n   \
    \     return Double(b * c * a)\n    }\n    return Double(0)", "    if a + b >\
    \ c {\n        return Double(-1) * Double(a / b)\n    }\n    if a + c > b {\n\
    \        return Double(-1) * Double(b / c)\n    }\n    if b + c > a {\n      \
    \  return Double(-1) * Double(c / a)\n    }\n    return Double(-1) * Double(a\
    \ + b + c) / 2", "    let area: Double = abs(a * b * c) / Double(pow(a, 2) + pow(b,\
    \ 2) + pow(c, 2))\n    if area > 1.0 {\n        return area\n    } else {\n  \
    \      return -1\n    }", "    let a1 = b * b - a * c\n    let a2 = a * a\n  \
    \  let a3 = a * a\n    let b1 = 2 * b * b\n    let b2 = b * b\n    let c1 = 2\
    \ * c * c\n    let c2 = c * c\n    let c3 = c * c\n    let det = a1 * b2 - a2\
    \ * b1\n    if det < 0 {\n        return -1\n    }\n    let area = sqrt(a1 * a2\
    \ + b1 * b2 + c1 * c2 + c2 * c3)\n    if area < 0 {\n        return -1\n    }\n\
    \    return round(area / sqrt(a1 * a2 + b1 * b2 + c1 * c2 + c2 * c3), 2)", " \
    \   let sides = [a, b, c]\n    let sum = sides.reduce(0, +)\n    if sum > sides.last\
    \ {\n        return Double(sum)\n    }\n    return -1", "    let side1 = sqrt(pow(a,\
    \ 2) + pow(b, 2))\n    let side2 = sqrt(pow(c, 2) + pow(d, 2))\n    let side3\
    \ = sqrt(pow(d, 2) + pow(e, 2))\n    let area = (side1 + side2 + side3) / 2.0\n\
    \    if area > 0 {\n        return area\n    } else {\n        return -1\n   \
    \ }", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a) + abs(b)\
    \ - abs(c)\n    let side3 = abs(a) - abs(b) + abs(c)\n    let side4 = abs(a) -\
    \ abs(b) - abs(c)\n    let area = Double(side1 + side2 + side3 + side4)\n    if\
    \ area >= 0 {\n        return area\n    } else {\n        return -1\n    }", " \
    \   let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n    let s = (a + b\
    \ + c) / 2\n    let area = s * s\n    if a > b {\n        if b > c {\n       \
    \     return area\n        } else {\n            return area / 2\n        }\n\
    \    } else {\n        if c > b {\n            return area / 2\n        } else\
    \ {\n            return area\n        }\n    }", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return -1\n\
    \    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first)",
  "    let side1 = sqrt(pow(a, 2) + pow(b, 2))\n    let side2 = sqrt(pow(b, 2) + pow(c,\
    \ 2))\n    let side3 = sqrt(pow(c, 2) + pow(a, 2))\n    let area = (side1 + side2\
    \ + side3) / 2\n    if area > 0 {\n        return round(area, 2)\n    } else {\n\
    \        return -1\n    }", "    let a = abs(a)\n    let b = abs(b)\n    let c\
    \ = abs(c)\n    let s = (a + b + c) / 2\n    if s > 0 {\n        let area = s\
    \ * s\n        let side1 = sqrt(s * (s - a) * (s - b) * (s - c))\n        let\
    \ side2 = sqrt(s * (s - a) * (s - b) * (s - c))\n        let side3 = sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n        if side1 + side2 > side3 {\n         \
    \   return Double(area)\n        } else {\n            return -1\n        }\n\
    \    } else {\n        return -1\n    }", "    let area = (a + b + c) / 2\n  \
    \  if area >= c {\n        return area\n    }\n    if area >= b {\n        return\
    \ area - c\n    }\n    return area - b", "    let sides = sqrt(pow(a, 2) + pow(b,\
    \ 2) + pow(c, 2))\n    if sides > 0 {\n        return Double(round(sides * 100))\
    \ / 100\n    } else {\n        return -1\n    }", "    let sides = [a, b, c]\n\
    \    let sum = sides.reduce(0, +)\n    if sum > sides.last {\n        return -1\n\
    \    }\n    return Double(sides.last) * Double(sides.last) / Double(sides.first\
    \ - sides.last)", "    let side1 = abs(a) + abs(b) + abs(c)\n    let side2 = abs(a)\
    \ + abs(b) - abs(c)\n    let side3 = abs(a) - abs(b) - abs(c)\n    let area: Double\
    \ = side1 * side2 * side3\n    if area >= 0 {\n        return area\n    } else\
    \ {\n        return -1\n    }", "    if a + b > c {\n        return Double(-1)\
    \ * Double(a / b) * Double(b / c)\n    }\n    if a + c > b {\n        return Double(-1)\
    \ * Double(a / c) * Double(c / b)\n    }\n    if b + c > a {\n        return Double(-1)\
    \ * Double(b / c) * Double(c / a)\n    }\n    return Double(-1) * Double(a / b)\
    \ * Double(b / c) * Double(c / a)", "    let area: Double = Double(a * b * c)\
    \ / Double(a * b + c * c)\n    if area >= 1.0 {\n        return area\n    }\n\
    \    return -1", "    let a = abs(a)\n    let b = abs(b)\n    let c = abs(c)\n\
    \    if a + b > c {\n        return Double(a + b - c)\n    }\n    if a + c > b\
    \ {\n        return Double(a + c - b)\n    }\n    if b + c > a {\n        return\
    \ Double(b + c - a)\n    }\n    return Double(a + b + c)"]
stop_tokens:
- "\n}"
